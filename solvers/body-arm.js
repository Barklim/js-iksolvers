// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14944;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,10,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,88,11,0,0,208,1,0,0,128,11,0,0,176,1,0,0,248,1,0,0,0,0,0,0,0,0,0,0,128,2,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,88,11,0,0,88,2,0,0,128,11,0,0,56,2,0,0,120,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,0,0,0,0,120,2,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,17,0,0,0,17,0,0,0,0,0,0,0,248,1,0,0,19,0,0,0,20,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,98,111,100,121,45,97,114,109,46,99,112,112,0,0,58,0,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,16,5,0,0,21,0,0,0,22,0,0,0,56,0,0,0,248,255,255,255,16,5,0,0,23,0,0,0,24,0,0,0,192,255,255,255,192,255,255,255,16,5,0,0,25,0,0,0,26,0,0,0,0,0,0,0,220,3,0,0,68,4,0,0,132,4,0,0,152,4,0,0,172,4,0,0,192,4,0,0,108,4,0,0,88,4,0,0,4,4,0,0,240,3,0,0,64,0,0,0,0,0,0,0,136,20,0,0,27,0,0,0,28,0,0,0,56,0,0,0,248,255,255,255,136,20,0,0,29,0,0,0,30,0,0,0,192,255,255,255,192,255,255,255,136,20,0,0,31,0,0,0,32,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,248,19,0,0,33,0,0,0,34,0,0,0,192,255,255,255,192,255,255,255,248,19,0,0,35,0,0,0,36,0,0,0,56,0,0,0,0,0,0,0,64,20,0,0,37,0,0,0,38,0,0,0,200,255,255,255,200,255,255,255,64,20,0,0,39,0,0,0,40,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,128,11,0,0,200,4,0,0,136,20,0,0,0,0,0,0,0,0,0,0,168,5,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,128,11,0,0,96,5,0,0,192,19,0,0,0,0,0,0,73,75,97,99,111,115,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,115,105,110,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,136,8,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,128,11,0,0,120,8,0,0,16,9,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,88,11,0,0,0,9,0,0,0,0,0,0,88,9,0,0,59,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,62,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,128,11,0,0,72,9,0,0,16,9,0,0,0,0,0,0,0,0,0,0,152,9,0,0,59,0,0,0,65,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,128,11,0,0,128,9,0,0,88,9,0,0,0,0,0,0,0,0,0,0,216,9,0,0,59,0,0,0,66,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,128,11,0,0,192,9,0,0,88,9,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,128,11,0,0,232,9,0,0,16,9,0,0,0,0,0,0,0,0,0,0,96,10,0,0,67,0,0,0,68,0,0,0,69,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,88,11,0,0,56,10,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,128,11,0,0,80,10,0,0,16,9,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,128,11,0,0,112,10,0,0,72,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,128,11,0,0,168,10,0,0,152,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,128,11,0,0,8,11,0,0,152,10,0,0,0,0,0,0,128,11,0,0,224,10,0,0,48,11,0,0,0,0,0,0,0,0,0,0,208,10,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,0,0,0,0,200,11,0,0,70,0,0,0,78,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,128,11,0,0,160,11,0,0,208,10,0,0,0,0,0,0,0,0,0,0,40,12,0,0,70,0,0,0,82,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,128,11,0,0,0,12,0,0,208,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,120,19,0,0,87,0,0,0,88,0,0,0,0,0,0,0,192,19,0,0,89,0,0,0,90,0,0,0,43,0,0,0,44,0,0,0,91,0,0,0,92,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,93,0,0,0,51,0,0,0,94,0,0,0,53,0,0,0,95,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,19,0,0,96,0,0,0,97,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,64,19,0,0,98,0,0,0,99,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,128,11,0,0,248,18,0,0,176,57,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,88,11,0,0,40,19,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,128,11,0,0,72,19,0,0,64,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,88,11,0,0,136,19,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,224,11,0,0,200,19,0,0,0,0,0,0,1,0,0,0,120,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,224,11,0,0,16,20,0,0,0,0,0,0,1,0,0,0,120,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,224,11,0,0,88,20,0,0,3,0,0,0,2,0,0,0,248,19,0,0,2,0,0,0,64,20,0,0,2,8,0,0,0,0,0,0,240,20,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,128,11,0,0,208,20,0,0,0,58,0,0,0,0,0,0,0,0,0,0,56,35,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,35,0,0,113,0,0,0,114,0,0,0,109,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,37,0,0,118,0,0,0,119,0,0,0,109,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,200,37,0,0,131,0,0,0,132,0,0,0,109,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,38,0,0,144,0,0,0,145,0,0,0,109,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,32,39,0,0,154,0,0,0,155,0,0,0,109,0,0,0,156,0,0,0,157,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,161,0,0,0,162,0,0,0,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,216,39,0,0,164,0,0,0,165,0,0,0,109,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,248,255,255,255,216,39,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,177,0,0,0,178,0,0,0,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,120,40,0,0,180,0,0,0,181,0,0,0,109,0,0,0,182,0,0,0,183,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,248,255,255,255,120,40,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,8,41,0,0,196,0,0,0,197,0,0,0,109,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,41,0,0,199,0,0,0,200,0,0,0,109,0,0,0,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,35,0,0,202,0,0,0,203,0,0,0,109,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,35,0,0,213,0,0,0,214,0,0,0,109,0,0,0,215,0,0,0,216,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,36,0,0,224,0,0,0,225,0,0,0,109,0,0,0,226,0,0,0,227,0,0,0,228,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,36,0,0,235,0,0,0,236,0,0,0,109,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,245,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,246,0,0,0,247,0,0,0,109,0,0,0,248,0,0,0,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,144,42,0,0,250,0,0,0,251,0,0,0,109,0,0,0,252,0,0,0,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,32,43,0,0,254,0,0,0,255,0,0,0,109,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,176,43,0,0,2,1,0,0,3,1,0,0,109,0,0,0,4,1,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,44,0,0,6,1,0,0,7,1,0,0,109,0,0,0,8,1,0,0,9,1,0,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,44,0,0,11,1,0,0,12,1,0,0,109,0,0,0,13,1,0,0,14,1,0,0,15,1,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,16,35,0,0,16,1,0,0,17,1,0,0,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,31,0,0,18,1,0,0,19,1,0,0,109,0,0,0,20,1,0,0,21,1,0,0,22,1,0,0,23,1,0,0,24,1,0,0,25,1,0,0,26,1,0,0,27,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,32,0,0,28,1,0,0,29,1,0,0,109,0,0,0,30,1,0,0,31,1,0,0,32,1,0,0,33,1,0,0,34,1,0,0,35,1,0,0,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,34,0,0,37,1,0,0,38,1,0,0,109,0,0,0,39,1,0,0,40,1,0,0,41,1,0,0,42,1,0,0,43,1,0,0,0,0,0,0,232,34,0,0,44,1,0,0,45,1,0,0,109,0,0,0,46,1,0,0,47,1,0,0,48,1,0,0,49,1,0,0,50,1,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,32,31,0,0,51,1,0,0,52,1,0,0,109,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,128,11,0,0,8,31,0,0,112,57,0,0,0,0,0,0,0,0,0,0,176,31,0,0,51,1,0,0,53,1,0,0,109,0,0,0,54,1,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,59,1,0,0,60,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,65,1,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,88,11,0,0,144,31,0,0,224,11,0,0,120,31,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,31,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,224,11,0,0,208,31,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,31,0,0,2,0,0,0,0,0,0,0,128,32,0,0,51,1,0,0,66,1,0,0,109,0,0,0,67,1,0,0,68,1,0,0,69,1,0,0,70,1,0,0,71,1,0,0,72,1,0,0,73,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,88,11,0,0,96,32,0,0,224,11,0,0,56,32,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,120,32,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,224,11,0,0,160,32,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,120,32,0,0,2,0,0,0,0,0,0,0,64,33,0,0,51,1,0,0,74,1,0,0,109,0,0,0,75,1,0,0,76,1,0,0,77,1,0,0,78,1,0,0,79,1,0,0,80,1,0,0,81,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,224,11,0,0,24,33,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,120,32,0,0,2,0,0,0,0,0,0,0,184,33,0,0,51,1,0,0,82,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,224,11,0,0,144,33,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,120,32,0,0,2,0,0,0,0,0,0,0,48,34,0,0,51,1,0,0,90,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,128,11,0,0,8,34,0,0,184,33,0,0,0,0,0,0,0,0,0,0,152,34,0,0,51,1,0,0,91,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,128,11,0,0,112,34,0,0,184,33,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,128,11,0,0,168,34,0,0,32,31,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,128,11,0,0,208,34,0,0,32,31,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,128,11,0,0,248,34,0,0,32,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,128,11,0,0,32,35,0,0,32,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,128,11,0,0,72,35,0,0,32,31,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,88,11,0,0,144,35,0,0,224,11,0,0,112,35,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,224,11,0,0,208,35,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,224,11,0,0,16,36,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,224,11,0,0,80,36,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,35,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,88,11,0,0,240,36,0,0,224,11,0,0,216,36,0,0,0,0,0,0,1,0,0,0,16,37,0,0,0,0,0,0,224,11,0,0,144,36,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,24,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,224,11,0,0,152,37,0,0,0,0,0,0,1,0,0,0,16,37,0,0,0,0,0,0,224,11,0,0,80,37,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,176,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,88,11,0,0,72,38,0,0,224,11,0,0,48,38,0,0,0,0,0,0,1,0,0,0,104,38,0,0,0,0,0,0,224,11,0,0,232,37,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,112,38,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,224,11,0,0,240,38,0,0,0,0,0,0,1,0,0,0,104,38,0,0,0,0,0,0,224,11,0,0,168,38,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,8,39,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,88,11,0,0,136,39,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,88,11,0,0,168,39,0,0,224,11,0,0,64,39,0,0,0,0,0,0,3,0,0,0,32,31,0,0,2,0,0,0,160,39,0,0,2,0,0,0,208,39,0,0,0,8,0,0,78,83,116,51,95,95,49,56], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,88,11,0,0,72,40,0,0,224,11,0,0,0,40,0,0,0,0,0,0,3,0,0,0,32,31,0,0,2,0,0,0,160,39,0,0,2,0,0,0,112,40,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,88,11,0,0,232,40,0,0,224,11,0,0,160,40,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,0,41,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,224,11,0,0,40,41,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,0,41,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,88,11,0,0,216,41,0,0,224,11,0,0,144,41,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,248,41,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,88,11,0,0,104,42,0,0,224,11,0,0,32,42,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,136,42,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,88,11,0,0,248,42,0,0,224,11,0,0,176,42,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,24,43,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,88,11,0,0,136,43,0,0,224,11,0,0,64,43,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,168,43,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,88,11,0,0,232,43,0,0,224,11,0,0,208,43,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,0,44,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,224,11,0,0,40,44,0,0,0,0,0,0,2,0,0,0,32,31,0,0,2,0,0,0,0,44,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,88,11,0,0,80,57,0,0,58,32,0,0,0,0,0,0,0,0,0,0,176,57,0,0,92,1,0,0,93,1,0,0,64,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,128,11,0,0,152,57,0,0,0,10,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,88,11,0,0,192,57,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,128,11,0,0,232,57,0,0,224,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  
  
  
  var FS=undefined;
  
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }



  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }


  var _asin=Math_asin;

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  var _cos=Math_cos;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  var _atan2=Math_atan2;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_id(x) { Module["printErr"]("Invalid function pointer called with signature 'id'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_id(index,a1) {
  try {
    return Module["dynCall_id"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_id": nullFunc_id, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiid": nullFunc_viiiiid, "nullFunc_viiiiiiii": nullFunc_viiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_di": nullFunc_di, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiid": nullFunc_viiiiiid, "nullFunc_viiiiiiiii": nullFunc_viiiiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_id": invoke_id, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "___ctype_tolower_loc": ___ctype_tolower_loc, "_uselocale": _uselocale, "_vfprintf": _vfprintf, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_free_exception": ___cxa_free_exception, "_calloc": _calloc, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_acos": _acos, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_allocate_exception": ___cxa_allocate_exception, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "_asin": _asin, "_freelocale": _freelocale, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_cos": _cos, "___cxa_end_catch": ___cxa_end_catch, "___cxa_call_unexpected": ___cxa_call_unexpected, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_send": _send, "___cxa_rethrow": ___cxa_rethrow, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___cxa_guard_abort": ___cxa_guard_abort, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_id=env.nullFunc_id;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiid=env.nullFunc_viiiiid;
  var nullFunc_viiiiiiii=env.nullFunc_viiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiid=env.nullFunc_viiiiiid;
  var nullFunc_viiiiiiiii=env.nullFunc_viiiiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_id=env.invoke_id;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_di=env.invoke_di;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _uselocale=env._uselocale;
  var _vfprintf=env._vfprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _calloc=env._calloc;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _acos=env._acos;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var _asin=env._asin;
  var _freelocale=env._freelocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _cos=env._cos;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _send=env._send;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}
function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z20GetNumFreeParametersv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __Z12GetNumJointsv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $solver = sp;
 $0 = $eetrans;
 $1 = $eerot;
 $2 = $pfree;
 $3 = $solutions;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$4,$5,$6,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bSuccess = 0, $eerot = 0, $eetrans = 0, $i = 0, $i1 = 0, $j = 0, $sol = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr9 = 0, $vfree = 0, $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer13 = sp + 136|0;
 $vararg_buffer10 = sp + 128|0;
 $vararg_buffer6 = sp + 120|0;
 $vararg_buffer3 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 208|0;
 $vfree = sp + 192|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 164|0;
 $vsolfree = sp + 144|0;
 $0 = 0;
 $1 = $argc;
 $2 = $argv;
 $6 = $1;
 $7 = (__Z20GetNumFreeParametersv()|0);
 $8 = (12 + ($7))|0;
 $9 = (($8) + 1)|0;
 $10 = ($6|0)!=($9|0);
 if ($10) {
  $11 = (__Z20GetNumFreeParametersv()|0);
  HEAP32[$vararg_buffer>>2] = $11;
  (_printf((8|0),($vararg_buffer|0))|0);
  $0 = 1;
  $224 = $0;
  STACKTOP = sp;return ($224|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __THREW__ = 0;
 $12 = (invoke_i(350)|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L5: do {
  if ($14) {
   label = 23;
  } else {
   __THREW__ = 0;
   invoke_vii(351,($vfree|0),($12|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    label = 23;
   } else {
    $17 = $2;
    $18 = (($17) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    __THREW__ = 0;
    $20 = (+invoke_di(352,($19|0)));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    L8: do {
     if ($22) {
      label = 24;
     } else {
      HEAPF64[$eerot>>3] = $20;
      $23 = $2;
      $24 = (($23) + 8|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      $26 = (+invoke_di(352,($25|0)));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 24;
      } else {
       $29 = (($eerot) + 8|0);
       HEAPF64[$29>>3] = $26;
       $30 = $2;
       $31 = (($30) + 12|0);
       $32 = HEAP32[$31>>2]|0;
       __THREW__ = 0;
       $33 = (+invoke_di(352,($32|0)));
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        label = 24;
       } else {
        $36 = (($eerot) + 16|0);
        HEAPF64[$36>>3] = $33;
        $37 = $2;
        $38 = (($37) + 16|0);
        $39 = HEAP32[$38>>2]|0;
        __THREW__ = 0;
        $40 = (+invoke_di(352,($39|0)));
        $41 = __THREW__; __THREW__ = 0;
        $42 = $41&1;
        if ($42) {
         label = 24;
        } else {
         HEAPF64[$eetrans>>3] = $40;
         $43 = $2;
         $44 = (($43) + 20|0);
         $45 = HEAP32[$44>>2]|0;
         __THREW__ = 0;
         $46 = (+invoke_di(352,($45|0)));
         $47 = __THREW__; __THREW__ = 0;
         $48 = $47&1;
         if ($48) {
          label = 24;
         } else {
          $49 = (($eerot) + 24|0);
          HEAPF64[$49>>3] = $46;
          $50 = $2;
          $51 = (($50) + 24|0);
          $52 = HEAP32[$51>>2]|0;
          __THREW__ = 0;
          $53 = (+invoke_di(352,($52|0)));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 24;
          } else {
           $56 = (($eerot) + 32|0);
           HEAPF64[$56>>3] = $53;
           $57 = $2;
           $58 = (($57) + 28|0);
           $59 = HEAP32[$58>>2]|0;
           __THREW__ = 0;
           $60 = (+invoke_di(352,($59|0)));
           $61 = __THREW__; __THREW__ = 0;
           $62 = $61&1;
           if ($62) {
            label = 24;
           } else {
            $63 = (($eerot) + 40|0);
            HEAPF64[$63>>3] = $60;
            $64 = $2;
            $65 = (($64) + 32|0);
            $66 = HEAP32[$65>>2]|0;
            __THREW__ = 0;
            $67 = (+invoke_di(352,($66|0)));
            $68 = __THREW__; __THREW__ = 0;
            $69 = $68&1;
            if ($69) {
             label = 24;
            } else {
             $70 = (($eetrans) + 8|0);
             HEAPF64[$70>>3] = $67;
             $71 = $2;
             $72 = (($71) + 36|0);
             $73 = HEAP32[$72>>2]|0;
             __THREW__ = 0;
             $74 = (+invoke_di(352,($73|0)));
             $75 = __THREW__; __THREW__ = 0;
             $76 = $75&1;
             if ($76) {
              label = 24;
             } else {
              $77 = (($eerot) + 48|0);
              HEAPF64[$77>>3] = $74;
              $78 = $2;
              $79 = (($78) + 40|0);
              $80 = HEAP32[$79>>2]|0;
              __THREW__ = 0;
              $81 = (+invoke_di(352,($80|0)));
              $82 = __THREW__; __THREW__ = 0;
              $83 = $82&1;
              if ($83) {
               label = 24;
              } else {
               $84 = (($eerot) + 56|0);
               HEAPF64[$84>>3] = $81;
               $85 = $2;
               $86 = (($85) + 44|0);
               $87 = HEAP32[$86>>2]|0;
               __THREW__ = 0;
               $88 = (+invoke_di(352,($87|0)));
               $89 = __THREW__; __THREW__ = 0;
               $90 = $89&1;
               if ($90) {
                label = 24;
               } else {
                $91 = (($eerot) + 64|0);
                HEAPF64[$91>>3] = $88;
                $92 = $2;
                $93 = (($92) + 48|0);
                $94 = HEAP32[$93>>2]|0;
                __THREW__ = 0;
                $95 = (+invoke_di(352,($94|0)));
                $96 = __THREW__; __THREW__ = 0;
                $97 = $96&1;
                if ($97) {
                 label = 24;
                } else {
                 $98 = (($eetrans) + 16|0);
                 HEAPF64[$98>>3] = $95;
                 $i = 0;
                 while(1) {
                  $99 = $i;
                  $100 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                  $101 = ($99>>>0)<($100>>>0);
                  if (!($101)) {
                   break;
                  }
                  $102 = $i;
                  $103 = (13 + ($102))|0;
                  $104 = $2;
                  $105 = (($104) + ($103<<2)|0);
                  $106 = HEAP32[$105>>2]|0;
                  __THREW__ = 0;
                  $107 = (+invoke_di(352,($106|0)));
                  $108 = __THREW__; __THREW__ = 0;
                  $109 = $108&1;
                  if ($109) {
                   label = 24;
                   break L8;
                  }
                  $110 = $i;
                  __THREW__ = 0;
                  $111 = (invoke_iii(353,($vfree|0),($110|0))|0);
                  $112 = __THREW__; __THREW__ = 0;
                  $113 = $112&1;
                  if ($113) {
                   label = 24;
                   break L8;
                  }
                  HEAPF64[$111>>3] = $107;
                  $114 = $i;
                  $115 = (($114) + 1)|0;
                  $i = $115;
                 }
                 $120 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                 $121 = ($120>>>0)>(0);
                 if ($121) {
                  __THREW__ = 0;
                  $122 = (invoke_iii(353,($vfree|0),0)|0);
                  $123 = __THREW__; __THREW__ = 0;
                  $124 = $123&1;
                  if ($124) {
                   label = 24;
                   break;
                  }
                  $125 = $122;
                 } else {
                  $125 = 0;
                 }
                 __THREW__ = 0;
                 $126 = (invoke_iiiii(354,($eetrans|0),($eerot|0),($125|0),($solutions|0))|0);
                 $127 = __THREW__; __THREW__ = 0;
                 $128 = $127&1;
                 if ($128) {
                  label = 24;
                 } else {
                  $129 = $126&1;
                  $bSuccess = $129;
                  $130 = $bSuccess;
                  $131 = $130&1;
                  L34: do {
                   if ($131) {
                    __THREW__ = 0;
                    $135 = (invoke_ii(5,($solutions|0))|0);
                    $136 = __THREW__; __THREW__ = 0;
                    $137 = $136&1;
                    if ($137) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    HEAP32[$vararg_buffer3>>2] = $135;
                    (invoke_iii(356,(304|0),($vararg_buffer3|0))|0);
                    $138 = __THREW__; __THREW__ = 0;
                    $139 = $138&1;
                    if ($139) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    $140 = (invoke_i(357)|0);
                    $141 = __THREW__; __THREW__ = 0;
                    $142 = $141&1;
                    if ($142) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    invoke_vii(351,($solvalues|0),($140|0));
                    $143 = __THREW__; __THREW__ = 0;
                    $144 = $143&1;
                    if ($144) {
                     label = 24;
                     break L8;
                    }
                    $i1 = 0;
                    L42: while(1) {
                     $145 = $i1;
                     __THREW__ = 0;
                     $146 = (invoke_ii(5,($solutions|0))|0);
                     $147 = __THREW__; __THREW__ = 0;
                     $148 = $147&1;
                     if ($148) {
                      label = 57;
                      break;
                     }
                     $149 = ($145>>>0)<($146>>>0);
                     if (!($149)) {
                      label = 64;
                      break;
                     }
                     $150 = $i1;
                     __THREW__ = 0;
                     $151 = (invoke_iii(4,($solutions|0),($150|0))|0);
                     $152 = __THREW__; __THREW__ = 0;
                     $153 = $152&1;
                     if ($153) {
                      label = 57;
                      break;
                     }
                     $sol = $151;
                     $154 = $i1;
                     $155 = $sol;
                     $156 = HEAP32[$155>>2]|0;
                     $157 = (($156) + 16|0);
                     $158 = HEAP32[$157>>2]|0;
                     __THREW__ = 0;
                     $159 = (invoke_ii($158|0,($155|0))|0);
                     $160 = __THREW__; __THREW__ = 0;
                     $161 = $160&1;
                     if ($161) {
                      label = 57;
                      break;
                     }
                     $162 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($159)|0);
                     __THREW__ = 0;
                     HEAP32[$vararg_buffer6>>2] = $154;
                     $vararg_ptr9 = (($vararg_buffer6) + 4|0);
                     HEAP32[$vararg_ptr9>>2] = $162;
                     (invoke_iii(356,(328|0),($vararg_buffer6|0))|0);
                     $163 = __THREW__; __THREW__ = 0;
                     $164 = $163&1;
                     if ($164) {
                      label = 57;
                      break;
                     }
                     $165 = $sol;
                     $166 = HEAP32[$165>>2]|0;
                     $167 = (($166) + 16|0);
                     $168 = HEAP32[$167>>2]|0;
                     __THREW__ = 0;
                     $169 = (invoke_ii($168|0,($165|0))|0);
                     $170 = __THREW__; __THREW__ = 0;
                     $171 = $170&1;
                     if ($171) {
                      label = 57;
                      break;
                     }
                     $172 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($169)|0);
                     __THREW__ = 0;
                     invoke_vii(351,($vsolfree|0),($172|0));
                     $173 = __THREW__; __THREW__ = 0;
                     $174 = $173&1;
                     if ($174) {
                      label = 57;
                      break;
                     }
                     $175 = $sol;
                     $176 = HEAP32[$175>>2]|0;
                     $177 = (($176) + 8|0);
                     $178 = HEAP32[$177>>2]|0;
                     __THREW__ = 0;
                     $179 = (invoke_iii(353,($solvalues|0),0)|0);
                     $180 = __THREW__; __THREW__ = 0;
                     $181 = $180&1;
                     if ($181) {
                      label = 58;
                      break;
                     }
                     $182 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vsolfree)|0);
                     $183 = ($182>>>0)>(0);
                     if ($183) {
                      __THREW__ = 0;
                      $184 = (invoke_iii(353,($vsolfree|0),0)|0);
                      $185 = __THREW__; __THREW__ = 0;
                      $186 = $185&1;
                      if ($186) {
                       label = 58;
                       break;
                      }
                      $187 = $184;
                     } else {
                      $187 = 0;
                     }
                     __THREW__ = 0;
                     invoke_viii($178|0,($175|0),($179|0),($187|0));
                     $188 = __THREW__; __THREW__ = 0;
                     $189 = $188&1;
                     if ($189) {
                      label = 58;
                      break;
                     }
                     $j = 0;
                     while(1) {
                      $190 = $j;
                      $191 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($solvalues)|0);
                      $192 = ($190>>>0)<($191>>>0);
                      if (!($192)) {
                       break;
                      }
                      $193 = $j;
                      __THREW__ = 0;
                      $194 = (invoke_iii(353,($solvalues|0),($193|0))|0);
                      $195 = __THREW__; __THREW__ = 0;
                      $196 = $195&1;
                      if ($196) {
                       label = 58;
                       break L42;
                      }
                      $197 = +HEAPF64[$194>>3];
                      __THREW__ = 0;
                      HEAPF64[$vararg_buffer10>>3] = $197;
                      (invoke_iii(356,(352|0),($vararg_buffer10|0))|0);
                      $198 = __THREW__; __THREW__ = 0;
                      $199 = $198&1;
                      if ($199) {
                       label = 58;
                       break L42;
                      }
                      $200 = $j;
                      $201 = (($200) + 1)|0;
                      $j = $201;
                     }
                     __THREW__ = 0;
                     (invoke_iii(356,(360|0),($vararg_buffer13|0))|0);
                     $208 = __THREW__; __THREW__ = 0;
                     $209 = $208&1;
                     if ($209) {
                      label = 58;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(358,($vsolfree|0));
                     $210 = __THREW__; __THREW__ = 0;
                     $211 = $210&1;
                     if ($211) {
                      label = 57;
                      break;
                     }
                     $212 = $i1;
                     $213 = (($212) + 1)|0;
                     $i1 = $213;
                    }
                    do {
                     if ((label|0) == 57) {
                      $202 = ___cxa_find_matching_catch()|0;
                      $203 = tempRet0;
                      $3 = $202;
                      $4 = $203;
                     }
                     else if ((label|0) == 58) {
                      $204 = ___cxa_find_matching_catch()|0;
                      $205 = tempRet0;
                      $3 = $204;
                      $4 = $205;
                      __THREW__ = 0;
                      invoke_vi(358,($vsolfree|0));
                      $206 = __THREW__; __THREW__ = 0;
                      $207 = $206&1;
                      if ($207) {
                       $227 = ___cxa_find_matching_catch(0|0)|0;
                       $228 = tempRet0;
                       ___clang_call_terminate($227);
                       // unreachable;
                      } else {
                       break;
                      }
                     }
                     else if ((label|0) == 64) {
                      $0 = 0;
                      $5 = 1;
                      __THREW__ = 0;
                      invoke_vi(358,($solvalues|0));
                      $214 = __THREW__; __THREW__ = 0;
                      $215 = $214&1;
                      if ($215) {
                       label = 24;
                       break L8;
                      }
                      break L34;
                     }
                    } while(0);
                    __THREW__ = 0;
                    invoke_vi(358,($solvalues|0));
                    $216 = __THREW__; __THREW__ = 0;
                    $217 = $216&1;
                    if ($217) {
                     $227 = ___cxa_find_matching_catch(0|0)|0;
                     $228 = tempRet0;
                     ___clang_call_terminate($227);
                     // unreachable;
                    } else {
                     break L8;
                    }
                   } else {
                    $132 = HEAP32[_stderr>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii(355,($132|0),(272|0),($vararg_buffer1|0))|0);
                    $133 = __THREW__; __THREW__ = 0;
                    $134 = $133&1;
                    if ($134) {
                     label = 24;
                     break L8;
                    }
                    $0 = -1;
                    $5 = 1;
                   }
                  } while(0);
                  __THREW__ = 0;
                  invoke_vi(358,($vfree|0));
                  $218 = __THREW__; __THREW__ = 0;
                  $219 = $218&1;
                  if ($219) {
                   label = 23;
                   break L5;
                  }
                  __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
                  $224 = $0;
                  STACKTOP = sp;return ($224|0);
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     $118 = ___cxa_find_matching_catch()|0;
     $119 = tempRet0;
     $3 = $118;
     $4 = $119;
    }
    __THREW__ = 0;
    invoke_vi(358,($vfree|0));
    $220 = __THREW__; __THREW__ = 0;
    $221 = $220&1;
    if ($221) {
     $227 = ___cxa_find_matching_catch(0|0)|0;
     $228 = tempRet0;
     ___clang_call_terminate($227);
     // unreachable;
    } else {
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $116 = ___cxa_find_matching_catch()|0;
  $117 = tempRet0;
  $3 = $116;
  $4 = $117;
 }
 __THREW__ = 0;
 invoke_vi(1,($solutions|0));
 $222 = __THREW__; __THREW__ = 0;
 $223 = $222&1;
 if ($223) {
  $227 = ___cxa_find_matching_catch(0|0)|0;
  $228 = tempRet0;
  ___clang_call_terminate($227);
  // unreachable;
 }
 $225 = $3;
 $226 = $4;
 ___resumeException($225|0);
 // unreachable;
 return (0)|0;
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_cos((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_sin((+$1)));
 STACKTOP = sp;return (+$2);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0.0, $1001 = 0.0, $1002 = 0.0, $1003 = 0.0, $1004 = 0.0, $1005 = 0.0, $1006 = 0.0, $1007 = 0.0, $1008 = 0.0, $1009 = 0.0, $101 = 0.0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0, $1013 = 0.0, $1014 = 0.0;
 var $1015 = 0.0, $1016 = 0.0, $1017 = 0.0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0.0, $1021 = 0.0, $1022 = 0.0, $1023 = 0.0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0.0, $1028 = 0.0, $1029 = 0.0, $103 = 0, $1030 = 0.0, $1031 = 0.0, $1032 = 0.0;
 var $1033 = 0.0, $1034 = 0.0, $1035 = 0.0, $1036 = 0.0, $1037 = 0, $1038 = 0.0, $1039 = 0.0, $104 = 0.0, $1040 = 0.0, $1041 = 0, $1042 = 0.0, $1043 = 0.0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0.0, $1066 = 0, $1067 = 0, $1068 = 0.0, $1069 = 0.0;
 var $107 = 0.0, $1070 = 0.0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0.0, $1075 = 0, $1076 = 0, $1077 = 0.0, $1078 = 0.0, $1079 = 0.0, $108 = 0.0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0.0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0.0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0.0, $11 = 0.0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0.0, $1103 = 0.0, $1104 = 0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0, $1108 = 0.0, $1109 = 0, $111 = 0.0, $1110 = 0.0, $1111 = 0.0, $1112 = 0, $1113 = 0.0, $1114 = 0.0, $1115 = 0, $1116 = 0.0, $1117 = 0, $1118 = 0.0, $1119 = 0.0, $112 = 0, $1120 = 0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0.0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0.0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0.0, $1139 = 0.0, $114 = 0.0, $1140 = 0.0;
 var $1141 = 0.0, $1142 = 0.0, $1143 = 0.0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0.0, $1148 = 0.0, $1149 = 0.0, $115 = 0.0, $1150 = 0.0, $1151 = 0.0, $1152 = 0.0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0, $1160 = 0.0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0, $1165 = 0.0, $1166 = 0.0, $1167 = 0.0, $1168 = 0.0, $1169 = 0.0, $117 = 0, $1170 = 0.0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0.0, $1177 = 0.0;
 var $1178 = 0.0, $1179 = 0.0, $118 = 0.0, $1180 = 0.0, $1181 = 0, $1182 = 0.0, $1183 = 0.0, $1184 = 0.0, $1185 = 0.0, $1186 = 0.0, $1187 = 0.0, $1188 = 0.0, $1189 = 0.0, $119 = 0.0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0.0, $1195 = 0.0;
 var $1196 = 0.0, $1197 = 0.0, $1198 = 0.0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0, $1202 = 0.0, $1203 = 0.0, $1204 = 0.0, $1205 = 0.0, $1206 = 0.0, $1207 = 0.0, $1208 = 0.0, $1209 = 0.0, $121 = 0, $1210 = 0.0, $1211 = 0.0, $1212 = 0.0;
 var $1213 = 0.0, $1214 = 0.0, $1215 = 0.0, $1216 = 0.0, $1217 = 0.0, $1218 = 0.0, $1219 = 0, $122 = 0.0, $1220 = 0.0, $1221 = 0.0, $1222 = 0.0, $1223 = 0, $1224 = 0.0, $1225 = 0.0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0, $123 = 0.0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0, $1233 = 0, $1234 = 0.0, $1235 = 0.0, $1236 = 0, $1237 = 0, $1238 = 0.0, $1239 = 0.0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0.0, $1243 = 0.0, $1244 = 0, $1245 = 0, $1246 = 0.0, $1247 = 0.0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0.0, $1255 = 0.0, $1256 = 0, $1257 = 0.0, $1258 = 0, $1259 = 0.0, $126 = 0.0, $1260 = 0.0, $1261 = 0, $1262 = 0.0, $1263 = 0, $1264 = 0.0, $1265 = 0.0, $1266 = 0, $1267 = 0.0;
 var $1268 = 0.0, $1269 = 0.0, $127 = 0, $1270 = 0.0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0.0, $1275 = 0.0, $1276 = 0.0, $1277 = 0.0, $1278 = 0.0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0.0, $1282 = 0.0, $1283 = 0, $1284 = 0.0, $1285 = 0.0;
 var $1286 = 0.0, $1287 = 0, $1288 = 0.0, $1289 = 0.0, $129 = 0.0, $1290 = 0, $1291 = 0.0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0.0, $13 = 0, $130 = 0.0, $1300 = 0.0, $1301 = 0.0, $1302 = 0;
 var $1303 = 0.0, $1304 = 0.0, $1305 = 0.0, $1306 = 0.0, $1307 = 0, $1308 = 0.0, $1309 = 0, $131 = 0, $1310 = 0.0, $1311 = 0.0, $1312 = 0.0, $1313 = 0.0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0;
 var $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0, $1326 = 0.0, $1327 = 0.0, $1328 = 0.0, $1329 = 0, $133 = 0.0, $1330 = 0.0, $1331 = 0.0, $1332 = 0, $1333 = 0.0, $1334 = 0.0, $1335 = 0.0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0.0;
 var $134 = 0.0, $1340 = 0.0, $1341 = 0.0, $1342 = 0.0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0, $135 = 0.0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0, $1354 = 0.0, $1355 = 0.0, $1356 = 0, $1357 = 0;
 var $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0;
 var $1376 = 0, $1377 = 0.0, $1378 = 0, $1379 = 0, $138 = 0.0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0.0, $1387 = 0, $1388 = 0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0, $1393 = 0;
 var $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0.0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0.0, $1408 = 0, $1409 = 0, $141 = 0.0, $1410 = 0;
 var $1411 = 0.0, $1412 = 0, $1413 = 0, $1414 = 0.0, $1415 = 0.0, $1416 = 0, $1417 = 0.0, $1418 = 0.0, $1419 = 0, $142 = 0, $1420 = 0.0, $1421 = 0, $1422 = 0.0, $1423 = 0.0, $1424 = 0, $1425 = 0.0, $1426 = 0.0, $1427 = 0, $1428 = 0.0, $1429 = 0;
 var $143 = 0, $1430 = 0.0, $1431 = 0.0, $1432 = 0, $1433 = 0.0, $1434 = 0.0, $1435 = 0, $1436 = 0.0, $1437 = 0.0, $1438 = 0.0, $1439 = 0.0, $144 = 0.0, $1440 = 0.0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0.0, $1445 = 0.0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0.0, $1449 = 0.0, $145 = 0, $1450 = 0.0, $1451 = 0.0, $1452 = 0.0, $1453 = 0.0, $1454 = 0.0, $1455 = 0.0, $1456 = 0.0, $1457 = 0.0, $1458 = 0.0, $1459 = 0.0, $146 = 0, $1460 = 0.0, $1461 = 0.0, $1462 = 0.0, $1463 = 0.0, $1464 = 0.0, $1465 = 0.0;
 var $1466 = 0.0, $1467 = 0.0, $1468 = 0.0, $1469 = 0.0, $147 = 0.0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0, $1477 = 0.0, $1478 = 0.0, $1479 = 0.0, $148 = 0, $1480 = 0.0, $1481 = 0.0, $1482 = 0.0, $1483 = 0.0;
 var $1484 = 0.0, $1485 = 0.0, $1486 = 0.0, $1487 = 0.0, $1488 = 0.0, $1489 = 0.0, $149 = 0, $1490 = 0.0, $1491 = 0.0, $1492 = 0.0, $1493 = 0, $1494 = 0.0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0, $1499 = 0.0, $15 = 0, $150 = 0.0, $1500 = 0.0;
 var $1501 = 0.0, $1502 = 0.0, $1503 = 0.0, $1504 = 0.0, $1505 = 0.0, $1506 = 0.0, $1507 = 0.0, $1508 = 0.0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0, $1514 = 0.0, $1515 = 0.0, $1516 = 0.0, $1517 = 0.0, $1518 = 0.0, $1519 = 0.0;
 var $152 = 0, $1520 = 0.0, $1521 = 0.0, $1522 = 0.0, $1523 = 0.0, $1524 = 0.0, $1525 = 0.0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0.0, $1530 = 0.0, $1531 = 0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0, $1536 = 0.0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0.0, $1541 = 0, $1542 = 0.0, $1543 = 0.0, $1544 = 0, $1545 = 0, $1546 = 0.0, $1547 = 0.0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0, $1553 = 0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0, $1557 = 0, $1558 = 0.0, $1559 = 0.0, $156 = 0.0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0.0, $1567 = 0.0, $1568 = 0, $1569 = 0.0, $157 = 0, $1570 = 0, $1571 = 0.0, $1572 = 0.0, $1573 = 0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0, $1577 = 0.0, $1578 = 0.0, $1579 = 0, $158 = 0, $1580 = 0.0, $1581 = 0.0, $1582 = 0.0, $1583 = 0.0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0.0, $1588 = 0.0, $1589 = 0.0, $159 = 0.0, $1590 = 0, $1591 = 0.0;
 var $1592 = 0.0, $1593 = 0.0, $1594 = 0.0, $1595 = 0.0, $1596 = 0, $1597 = 0.0, $1598 = 0.0, $1599 = 0.0, $16 = 0, $160 = 0, $1600 = 0.0, $1601 = 0.0, $1602 = 0, $1603 = 0.0, $1604 = 0.0, $1605 = 0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0;
 var $161 = 0, $1610 = 0.0, $1611 = 0.0, $1612 = 0.0, $1613 = 0, $1614 = 0.0, $1615 = 0.0, $1616 = 0.0, $1617 = 0.0, $1618 = 0, $1619 = 0.0, $162 = 0.0, $1620 = 0.0, $1621 = 0, $1622 = 0.0, $1623 = 0.0, $1624 = 0.0, $1625 = 0.0, $1626 = 0, $1627 = 0.0;
 var $1628 = 0.0, $1629 = 0.0, $163 = 0, $1630 = 0.0, $1631 = 0.0, $1632 = 0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0, $1636 = 0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0, $1640 = 0.0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0.0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0.0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0, $1654 = 0, $1655 = 0.0, $1656 = 0.0, $1657 = 0.0, $1658 = 0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0, $1662 = 0, $1663 = 0;
 var $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0.0, $1680 = 0, $1681 = 0;
 var $1682 = 0.0, $1683 = 0, $1684 = 0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0.0, $1692 = 0, $1693 = 0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0.0;
 var $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0.0, $1709 = 0, $171 = 0.0, $1710 = 0, $1711 = 0, $1712 = 0.0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0.0, $1717 = 0;
 var $1718 = 0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0, $1722 = 0.0, $1723 = 0.0, $1724 = 0, $1725 = 0.0, $1726 = 0, $1727 = 0.0, $1728 = 0.0, $1729 = 0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0, $1733 = 0.0, $1734 = 0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0, $1738 = 0.0, $1739 = 0.0, $174 = 0.0, $1740 = 0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0.0, $1749 = 0.0, $175 = 0.0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0.0, $1769 = 0.0, $177 = 0.0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0.0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0.0, $1780 = 0.0, $1781 = 0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0, $1799 = 0.0, $18 = 0, $180 = 0.0, $1800 = 0.0, $1801 = 0.0, $1802 = 0.0, $1803 = 0.0, $1804 = 0.0, $1805 = 0.0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0.0, $1809 = 0.0, $181 = 0.0, $1810 = 0.0, $1811 = 0.0, $1812 = 0.0, $1813 = 0.0, $1814 = 0.0, $1815 = 0.0, $1816 = 0.0, $1817 = 0.0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0.0, $1821 = 0.0, $1822 = 0.0, $1823 = 0.0, $1824 = 0.0, $1825 = 0.0;
 var $1826 = 0.0, $1827 = 0.0, $1828 = 0, $1829 = 0.0, $183 = 0.0, $1830 = 0.0, $1831 = 0.0, $1832 = 0.0, $1833 = 0.0, $1834 = 0.0, $1835 = 0.0, $1836 = 0.0, $1837 = 0.0, $1838 = 0.0, $1839 = 0.0, $184 = 0, $1840 = 0.0, $1841 = 0.0, $1842 = 0.0, $1843 = 0.0;
 var $1844 = 0.0, $1845 = 0.0, $1846 = 0, $1847 = 0.0, $1848 = 0.0, $1849 = 0, $185 = 0.0, $1850 = 0, $1851 = 0.0, $1852 = 0.0, $1853 = 0, $1854 = 0, $1855 = 0.0, $1856 = 0.0, $1857 = 0, $1858 = 0, $1859 = 0.0, $186 = 0.0, $1860 = 0.0, $1861 = 0;
 var $1862 = 0, $1863 = 0.0, $1864 = 0.0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0.0;
 var $1880 = 0, $189 = 0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0.0, $195 = 0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0.0, $202 = 0, $203 = 0.0, $204 = 0.0;
 var $205 = 0, $206 = 0.0, $207 = 0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0.0, $222 = 0.0;
 var $223 = 0, $224 = 0.0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0, $240 = 0.0;
 var $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0.0, $251 = 0.0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0;
 var $26 = 0, $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0;
 var $278 = 0, $279 = 0.0, $28 = 0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0.0, $285 = 0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0, $29 = 0.0, $290 = 0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0;
 var $296 = 0.0, $297 = 0, $298 = 0.0, $299 = 0.0, $3 = 0, $30 = 0, $300 = 0.0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0, $305 = 0.0, $306 = 0.0, $307 = 0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0.0;
 var $313 = 0, $314 = 0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0.0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0, $330 = 0.0;
 var $331 = 0, $332 = 0.0, $333 = 0, $334 = 0.0, $335 = 0.0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0, $344 = 0.0, $345 = 0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0;
 var $35 = 0.0, $350 = 0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0, $356 = 0.0, $357 = 0, $358 = 0.0, $359 = 0.0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0, $363 = 0.0, $364 = 0.0, $365 = 0, $366 = 0.0, $367 = 0.0;
 var $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0.0, $371 = 0, $372 = 0, $373 = 0, $374 = 0.0, $375 = 0, $376 = 0.0, $377 = 0.0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0.0, $382 = 0.0, $383 = 0.0, $384 = 0.0, $385 = 0.0;
 var $386 = 0.0, $387 = 0.0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0.0, $391 = 0, $392 = 0, $393 = 0.0, $394 = 0.0, $395 = 0, $396 = 0, $397 = 0.0, $398 = 0.0, $399 = 0, $4 = 0, $40 = 0, $400 = 0.0, $401 = 0, $402 = 0.0;
 var $403 = 0.0, $404 = 0.0, $405 = 0, $406 = 0.0, $407 = 0.0, $408 = 0, $409 = 0.0, $41 = 0, $410 = 0, $411 = 0, $412 = 0.0, $413 = 0.0, $414 = 0, $415 = 0.0, $416 = 0, $417 = 0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0.0, $443 = 0, $444 = 0, $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0.0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0.0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0, $473 = 0, $474 = 0, $475 = 0.0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0.0, $48 = 0.0, $480 = 0.0, $481 = 0, $482 = 0.0, $483 = 0.0, $484 = 0.0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0.0, $489 = 0, $49 = 0, $490 = 0.0, $491 = 0.0, $492 = 0, $493 = 0.0;
 var $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0.0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0.0, $502 = 0.0, $503 = 0.0, $504 = 0.0, $505 = 0.0, $506 = 0, $507 = 0.0, $508 = 0, $509 = 0.0, $51 = 0, $510 = 0.0;
 var $511 = 0.0, $512 = 0.0, $513 = 0, $514 = 0.0, $515 = 0.0, $516 = 0.0, $517 = 0, $518 = 0.0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0.0, $542 = 0, $543 = 0, $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0.0, $551 = 0, $552 = 0, $553 = 0.0, $554 = 0.0, $555 = 0.0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0.0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0.0, $572 = 0, $573 = 0, $574 = 0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0.0, $579 = 0.0, $58 = 0, $580 = 0, $581 = 0.0, $582 = 0, $583 = 0.0;
 var $584 = 0.0, $585 = 0, $586 = 0.0, $587 = 0.0, $588 = 0, $589 = 0.0, $59 = 0, $590 = 0, $591 = 0.0, $592 = 0.0, $593 = 0, $594 = 0.0, $595 = 0.0, $596 = 0.0, $597 = 0, $598 = 0.0, $599 = 0.0, $6 = 0.0, $60 = 0.0, $600 = 0.0;
 var $601 = 0.0, $602 = 0, $603 = 0.0, $604 = 0.0, $605 = 0.0, $606 = 0.0, $607 = 0.0, $608 = 0.0, $609 = 0, $61 = 0, $610 = 0.0, $611 = 0.0, $612 = 0.0, $613 = 0.0, $614 = 0.0, $615 = 0.0, $616 = 0.0, $617 = 0.0, $618 = 0.0, $619 = 0;
 var $62 = 0, $620 = 0.0, $621 = 0.0, $622 = 0.0, $623 = 0.0, $624 = 0.0, $625 = 0.0, $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0.0, $633 = 0.0, $634 = 0.0, $635 = 0.0, $636 = 0, $637 = 0.0;
 var $638 = 0.0, $639 = 0.0, $64 = 0.0, $640 = 0.0, $641 = 0.0, $642 = 0.0, $643 = 0.0, $644 = 0, $645 = 0.0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0.0, $651 = 0, $652 = 0.0, $653 = 0.0, $654 = 0, $655 = 0;
 var $656 = 0.0, $657 = 0.0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0, $664 = 0.0, $665 = 0, $666 = 0.0, $667 = 0.0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0, $672 = 0.0, $673 = 0;
 var $674 = 0.0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0, $679 = 0.0, $68 = 0.0, $680 = 0.0, $681 = 0, $682 = 0.0, $683 = 0.0, $684 = 0, $685 = 0.0, $686 = 0.0, $687 = 0.0, $688 = 0.0, $689 = 0.0, $69 = 0, $690 = 0.0, $691 = 0.0;
 var $692 = 0.0, $693 = 0, $694 = 0.0, $695 = 0.0, $696 = 0.0, $697 = 0.0, $698 = 0.0, $699 = 0.0, $7 = 0, $70 = 0, $700 = 0.0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0.0, $707 = 0.0, $708 = 0.0, $709 = 0.0;
 var $71 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0.0, $714 = 0.0, $715 = 0.0, $716 = 0.0, $717 = 0, $718 = 0.0, $719 = 0.0, $72 = 0.0, $720 = 0.0, $721 = 0.0, $722 = 0.0, $723 = 0.0, $724 = 0.0, $725 = 0.0, $726 = 0.0, $727 = 0.0;
 var $728 = 0.0, $729 = 0.0, $73 = 0, $730 = 0, $731 = 0, $732 = 0.0, $733 = 0.0, $734 = 0.0, $735 = 0, $736 = 0.0, $737 = 0.0, $738 = 0.0, $739 = 0.0, $74 = 0, $740 = 0, $741 = 0.0, $742 = 0, $743 = 0.0, $744 = 0.0, $745 = 0.0;
 var $746 = 0.0, $747 = 0.0, $748 = 0, $749 = 0.0, $75 = 0, $750 = 0.0, $751 = 0.0, $752 = 0.0, $753 = 0.0, $754 = 0.0, $755 = 0, $756 = 0.0, $757 = 0.0, $758 = 0.0, $759 = 0, $76 = 0.0, $760 = 0.0, $761 = 0.0, $762 = 0, $763 = 0.0;
 var $764 = 0.0, $765 = 0.0, $766 = 0.0, $767 = 0.0, $768 = 0.0, $769 = 0.0, $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0, $773 = 0.0, $774 = 0.0, $775 = 0, $776 = 0, $777 = 0.0, $778 = 0.0, $779 = 0, $78 = 0, $780 = 0, $781 = 0.0;
 var $782 = 0.0, $783 = 0, $784 = 0, $785 = 0.0, $786 = 0, $787 = 0.0, $788 = 0.0, $789 = 0, $79 = 0, $790 = 0.0, $791 = 0, $792 = 0.0, $793 = 0.0, $794 = 0, $795 = 0.0, $796 = 0, $797 = 0.0, $798 = 0.0, $799 = 0, $8 = 0;
 var $80 = 0.0, $800 = 0.0, $801 = 0.0, $802 = 0, $803 = 0.0, $804 = 0.0, $805 = 0, $806 = 0.0, $807 = 0, $808 = 0.0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0.0, $817 = 0;
 var $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0.0, $824 = 0.0, $825 = 0.0, $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0.0, $830 = 0.0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0;
 var $836 = 0.0, $837 = 0.0, $838 = 0.0, $839 = 0, $84 = 0, $840 = 0.0, $841 = 0, $842 = 0.0, $843 = 0.0, $844 = 0.0, $845 = 0.0, $846 = 0.0, $847 = 0.0, $848 = 0.0, $849 = 0, $85 = 0, $850 = 0.0, $851 = 0.0, $852 = 0.0, $853 = 0.0;
 var $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0.0, $861 = 0, $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0.0, $866 = 0.0, $867 = 0.0, $868 = 0.0, $869 = 0.0, $87 = 0.0, $870 = 0.0, $871 = 0;
 var $872 = 0.0, $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0.0, $878 = 0.0, $879 = 0, $88 = 0, $880 = 0.0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0, $888 = 0.0, $889 = 0.0, $89 = 0;
 var $890 = 0.0, $891 = 0.0, $892 = 0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0, $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0, $902 = 0, $903 = 0.0, $904 = 0.0, $905 = 0, $906 = 0, $907 = 0.0;
 var $908 = 0.0, $909 = 0, $91 = 0.0, $910 = 0, $911 = 0, $912 = 0.0, $913 = 0, $914 = 0.0, $915 = 0.0, $916 = 0, $917 = 0.0, $918 = 0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0, $922 = 0.0, $923 = 0, $924 = 0.0, $925 = 0.0;
 var $926 = 0, $927 = 0.0, $928 = 0.0, $929 = 0, $93 = 0, $930 = 0.0, $931 = 0.0, $932 = 0, $933 = 0.0, $934 = 0, $935 = 0.0, $936 = 0.0, $937 = 0.0, $938 = 0.0, $939 = 0.0, $94 = 0.0, $940 = 0.0, $941 = 0.0, $942 = 0.0, $943 = 0.0;
 var $944 = 0, $945 = 0.0, $946 = 0.0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $95 = 0, $950 = 0.0, $951 = 0.0, $952 = 0.0, $953 = 0.0, $954 = 0.0, $955 = 0.0, $956 = 0.0, $957 = 0.0, $958 = 0.0, $959 = 0.0, $96 = 0, $960 = 0.0, $961 = 0.0;
 var $962 = 0, $963 = 0.0, $964 = 0.0, $965 = 0.0, $966 = 0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0.0, $970 = 0.0, $971 = 0.0, $972 = 0.0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0.0, $977 = 0, $978 = 0.0, $979 = 0.0, $98 = 0.0;
 var $980 = 0.0, $981 = 0.0, $982 = 0, $983 = 0.0, $984 = 0.0, $985 = 0.0, $986 = 0, $987 = 0, $988 = 0, $989 = 0.0, $99 = 0, $990 = 0, $991 = 0.0, $992 = 0, $993 = 0.0, $994 = 0.0, $995 = 0.0, $996 = 0.0, $997 = 0, $998 = 0.0;
 var $999 = 0, $cj0array = 0, $cj1array = 0, $cj1array11 = 0, $cj1array4 = 0, $cj2array = 0, $dummyiter = 0, $evalcond = 0, $evalcond16 = 0, $evalcond9 = 0, $iij0 = 0, $iij1 = 0, $iij115 = 0, $iij18 = 0, $iij2 = 0, $ij0 = 0, $ij1 = 0, $ij114 = 0, $ij17 = 0, $ij2 = 0;
 var $j0array = 0, $j0eval = 0, $j0valid = 0, $j1array = 0, $j1array10 = 0, $j1array3 = 0, $j1eval = 0, $j1eval1 = 0, $j1eval2 = 0, $j1valid = 0, $j1valid13 = 0, $j1valid6 = 0, $j2array = 0, $j2valid = 0, $sj0array = 0, $sj1array = 0, $sj1array12 = 0, $sj1array5 = 0, $sj2array = 0, $x386 = 0.0;
 var $x387 = 0.0, $x388 = 0.0, $x389 = 0.0, $x390 = 0, $x391 = 0, $x392 = 0.0, $x393 = 0.0, $x394 = 0.0, $x395 = 0.0, $x396 = 0.0, $x397 = 0.0, $x398 = 0.0, $x399 = 0.0, $x400 = 0.0, $x401 = 0.0, $x402 = 0.0, $x403 = 0.0, $x404 = 0.0, $x405 = 0, $x406 = 0;
 var $x407 = 0.0, $x408 = 0.0, $x409 = 0.0, $x410 = 0.0, $x411 = 0.0, $x412 = 0.0, $x413 = 0.0, $x414 = 0.0, $x415 = 0.0, $x416 = 0.0, $x43 = 0.0, $x44 = 0.0, $x45 = 0.0, $x46 = 0.0, $x47 = 0, $x48 = 0.0, $x49 = 0.0, $x50 = 0.0, $x51 = 0.0, $x52 = 0.0;
 var $x53 = 0.0, $x54 = 0.0, $x55 = 0.0, $x56 = 0.0, $x57 = 0.0, $x58 = 0.0, $x59 = 0.0, $x60 = 0.0, $x61 = 0.0, $x62 = 0.0, $x63 = 0.0, $x64 = 0.0, $x65 = 0.0, $x66 = 0.0, $x67 = 0.0, $x68 = 0.0, $x69 = 0.0, $x70 = 0.0, $x71 = 0.0, $x72 = 0.0;
 var $x73 = 0.0, $x74 = 0, $x75 = 0, $x76 = 0.0, $x77 = 0.0, $x78 = 0.0, $x79 = 0.0, $x80 = 0.0, $x81 = 0.0, $x82 = 0.0, $x83 = 0.0, $x84 = 0.0, $x85 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j0eval = sp + 984|0;
 $j0array = sp + 968|0;
 $cj0array = sp + 952|0;
 $sj0array = sp + 936|0;
 $j0valid = sp + 1086|0;
 $x47 = sp + 920|0;
 $j2array = sp + 896|0;
 $cj2array = sp + 880|0;
 $sj2array = sp + 864|0;
 $j2valid = sp + 1084|0;
 $j1eval = sp + 840|0;
 $j1eval1 = sp + 784|0;
 $j1eval2 = sp + 712|0;
 $j1array = sp + 640|0;
 $cj1array = sp + 632|0;
 $sj1array = sp + 624|0;
 $j1valid = sp + 1082|0;
 $x74 = sp + 544|0;
 $x75 = sp + 528|0;
 $evalcond = sp + 488|0;
 $j1array3 = sp + 400|0;
 $cj1array4 = sp + 392|0;
 $sj1array5 = sp + 384|0;
 $j1valid6 = sp + 1081|0;
 $x390 = sp + 336|0;
 $x391 = sp + 320|0;
 $evalcond9 = sp + 280|0;
 $j1array10 = sp + 192|0;
 $cj1array11 = sp + 184|0;
 $sj1array12 = sp + 176|0;
 $j1valid13 = sp + 1080|0;
 $x405 = sp + 136|0;
 $x406 = sp + 120|0;
 $evalcond16 = sp + 80|0;
 $0 = $this;
 $1 = $eetrans;
 $2 = $eerot;
 $3 = $pfree;
 $4 = $solutions;
 $5 = $0;
 $6 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 HEAPF64[$5>>3] = $6;
 $7 = (($5) + 536|0);
 HEAP8[$7>>0] = -1;
 $8 = (($5) + 536|0);
 $9 = (($8) + 1|0);
 HEAP8[$9>>0] = -1;
 $10 = (($5) + 538|0);
 HEAP8[$10>>0] = -1;
 $11 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $12 = (($5) + 40|0);
 HEAPF64[$12>>3] = $11;
 $13 = (($5) + 539|0);
 HEAP8[$13>>0] = -1;
 $14 = (($5) + 539|0);
 $15 = (($14) + 1|0);
 HEAP8[$15>>0] = -1;
 $16 = (($5) + 541|0);
 HEAP8[$16>>0] = -1;
 $17 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $18 = (($5) + 80|0);
 HEAPF64[$18>>3] = $17;
 $19 = (($5) + 542|0);
 HEAP8[$19>>0] = -1;
 $20 = (($5) + 542|0);
 $21 = (($20) + 1|0);
 HEAP8[$21>>0] = -1;
 $22 = (($5) + 544|0);
 HEAP8[$22>>0] = -1;
 $23 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $24 = (($5) + 120|0);
 HEAPF64[$24>>3] = $23;
 $25 = (($5) + 545|0);
 HEAP8[$25>>0] = -1;
 $26 = (($5) + 545|0);
 $27 = (($26) + 1|0);
 HEAP8[$27>>0] = -1;
 $28 = (($5) + 547|0);
 HEAP8[$28>>0] = -1;
 $29 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $30 = (($5) + 160|0);
 HEAPF64[$30>>3] = $29;
 $31 = (($5) + 548|0);
 HEAP8[$31>>0] = -1;
 $32 = (($5) + 548|0);
 $33 = (($32) + 1|0);
 HEAP8[$33>>0] = -1;
 $34 = (($5) + 550|0);
 HEAP8[$34>>0] = -1;
 $35 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $36 = (($5) + 200|0);
 HEAPF64[$36>>3] = $35;
 $37 = (($5) + 551|0);
 HEAP8[$37>>0] = -1;
 $38 = (($5) + 551|0);
 $39 = (($38) + 1|0);
 HEAP8[$39>>0] = -1;
 $40 = (($5) + 553|0);
 HEAP8[$40>>0] = -1;
 $dummyiter = 0;
 while(1) {
  $41 = $dummyiter;
  $42 = ($41|0)<(1);
  if (!($42)) {
   break;
  }
  $43 = $4;
  $44 = HEAP32[$43>>2]|0;
  $45 = (($44) + 20|0);
  $46 = HEAP32[$45>>2]|0;
  FUNCTION_TABLE_vi[$46 & 1023]($43);
  $47 = $2;
  $48 = +HEAPF64[$47>>3];
  $49 = (($5) + 248|0);
  HEAPF64[$49>>3] = $48;
  $50 = $2;
  $51 = (($50) + 8|0);
  $52 = +HEAPF64[$51>>3];
  $53 = (($5) + 272|0);
  HEAPF64[$53>>3] = $52;
  $54 = $2;
  $55 = (($54) + 16|0);
  $56 = +HEAPF64[$55>>3];
  $57 = (($5) + 296|0);
  HEAPF64[$57>>3] = $56;
  $58 = $2;
  $59 = (($58) + 24|0);
  $60 = +HEAPF64[$59>>3];
  $61 = (($5) + 320|0);
  HEAPF64[$61>>3] = $60;
  $62 = $2;
  $63 = (($62) + 32|0);
  $64 = +HEAPF64[$63>>3];
  $65 = (($5) + 344|0);
  HEAPF64[$65>>3] = $64;
  $66 = $2;
  $67 = (($66) + 40|0);
  $68 = +HEAPF64[$67>>3];
  $69 = (($5) + 368|0);
  HEAPF64[$69>>3] = $68;
  $70 = $2;
  $71 = (($70) + 48|0);
  $72 = +HEAPF64[$71>>3];
  $73 = (($5) + 392|0);
  HEAPF64[$73>>3] = $72;
  $74 = $2;
  $75 = (($74) + 56|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (($5) + 416|0);
  HEAPF64[$77>>3] = $76;
  $78 = $2;
  $79 = (($78) + 64|0);
  $80 = +HEAPF64[$79>>3];
  $81 = (($5) + 440|0);
  HEAPF64[$81>>3] = $80;
  $82 = $1;
  $83 = +HEAPF64[$82>>3];
  $84 = (($5) + 464|0);
  HEAPF64[$84>>3] = $83;
  $85 = $1;
  $86 = (($85) + 8|0);
  $87 = +HEAPF64[$86>>3];
  $88 = (($5) + 488|0);
  HEAPF64[$88>>3] = $87;
  $89 = $1;
  $90 = (($89) + 16|0);
  $91 = +HEAPF64[$90>>3];
  $92 = (($5) + 512|0);
  HEAPF64[$92>>3] = $91;
  $93 = (($5) + 272|0);
  $94 = +HEAPF64[$93>>3];
  $95 = (($5) + 240|0);
  HEAPF64[$95>>3] = $94;
  $96 = (($5) + 248|0);
  $97 = +HEAPF64[$96>>3];
  $98 = -1.0 * $97;
  $99 = (($5) + 264|0);
  HEAPF64[$99>>3] = $98;
  $100 = (($5) + 296|0);
  $101 = +HEAPF64[$100>>3];
  $102 = (($5) + 288|0);
  HEAPF64[$102>>3] = $101;
  $103 = (($5) + 464|0);
  $104 = +HEAPF64[$103>>3];
  $105 = (($5) + 456|0);
  HEAPF64[$105>>3] = $104;
  $106 = (($5) + 344|0);
  $107 = +HEAPF64[$106>>3];
  $108 = -1.0 * $107;
  $109 = (($5) + 312|0);
  HEAPF64[$109>>3] = $108;
  $110 = (($5) + 320|0);
  $111 = +HEAPF64[$110>>3];
  $112 = (($5) + 336|0);
  HEAPF64[$112>>3] = $111;
  $113 = (($5) + 368|0);
  $114 = +HEAPF64[$113>>3];
  $115 = -1.0 * $114;
  $116 = (($5) + 360|0);
  HEAPF64[$116>>3] = $115;
  $117 = (($5) + 488|0);
  $118 = +HEAPF64[$117>>3];
  $119 = -1.0 * $118;
  $120 = (($5) + 480|0);
  HEAPF64[$120>>3] = $119;
  $121 = (($5) + 416|0);
  $122 = +HEAPF64[$121>>3];
  $123 = -1.0 * $122;
  $124 = (($5) + 384|0);
  HEAPF64[$124>>3] = $123;
  $125 = (($5) + 392|0);
  $126 = +HEAPF64[$125>>3];
  $127 = (($5) + 408|0);
  HEAPF64[$127>>3] = $126;
  $128 = (($5) + 440|0);
  $129 = +HEAPF64[$128>>3];
  $130 = -1.0 * $129;
  $131 = (($5) + 432|0);
  HEAPF64[$131>>3] = $130;
  $132 = (($5) + 512|0);
  $133 = +HEAPF64[$132>>3];
  $134 = -1.0 * $133;
  $135 = 0.34999999999999998 + $134;
  $136 = (($5) + 504|0);
  HEAPF64[$136>>3] = $135;
  $137 = (($5) + 240|0);
  $138 = +HEAPF64[$137>>3];
  $139 = (($5) + 248|0);
  HEAPF64[$139>>3] = $138;
  $140 = (($5) + 264|0);
  $141 = +HEAPF64[$140>>3];
  $142 = (($5) + 272|0);
  HEAPF64[$142>>3] = $141;
  $143 = (($5) + 288|0);
  $144 = +HEAPF64[$143>>3];
  $145 = (($5) + 296|0);
  HEAPF64[$145>>3] = $144;
  $146 = (($5) + 312|0);
  $147 = +HEAPF64[$146>>3];
  $148 = (($5) + 320|0);
  HEAPF64[$148>>3] = $147;
  $149 = (($5) + 336|0);
  $150 = +HEAPF64[$149>>3];
  $151 = (($5) + 344|0);
  HEAPF64[$151>>3] = $150;
  $152 = (($5) + 360|0);
  $153 = +HEAPF64[$152>>3];
  $154 = (($5) + 368|0);
  HEAPF64[$154>>3] = $153;
  $155 = (($5) + 384|0);
  $156 = +HEAPF64[$155>>3];
  $157 = (($5) + 392|0);
  HEAPF64[$157>>3] = $156;
  $158 = (($5) + 408|0);
  $159 = +HEAPF64[$158>>3];
  $160 = (($5) + 416|0);
  HEAPF64[$160>>3] = $159;
  $161 = (($5) + 432|0);
  $162 = +HEAPF64[$161>>3];
  $163 = (($5) + 440|0);
  HEAPF64[$163>>3] = $162;
  $164 = (($5) + 456|0);
  $165 = +HEAPF64[$164>>3];
  $166 = (($5) + 464|0);
  HEAPF64[$166>>3] = $165;
  $167 = (($5) + 480|0);
  $168 = +HEAPF64[$167>>3];
  $169 = (($5) + 488|0);
  HEAPF64[$169>>3] = $168;
  $170 = (($5) + 504|0);
  $171 = +HEAPF64[$170>>3];
  $172 = (($5) + 512|0);
  HEAPF64[$172>>3] = $171;
  $173 = (($5) + 464|0);
  $174 = +HEAPF64[$173>>3];
  $175 = 1.0 * $174;
  $x43 = $175;
  $176 = (($5) + 512|0);
  $177 = +HEAPF64[$176>>3];
  $178 = 1.0 * $177;
  $x44 = $178;
  $179 = (($5) + 488|0);
  $180 = +HEAPF64[$179>>3];
  $181 = 1.0 * $180;
  $x45 = $181;
  $182 = (($5) + 464|0);
  $183 = +HEAPF64[$182>>3];
  $184 = (($5) + 464|0);
  $185 = +HEAPF64[$184>>3];
  $186 = $183 * $185;
  $187 = (($5) + 488|0);
  $188 = +HEAPF64[$187>>3];
  $189 = (($5) + 488|0);
  $190 = +HEAPF64[$189>>3];
  $191 = $188 * $190;
  $192 = $186 + $191;
  $193 = (($5) + 512|0);
  $194 = +HEAPF64[$193>>3];
  $195 = (($5) + 512|0);
  $196 = +HEAPF64[$195>>3];
  $197 = $194 * $196;
  $198 = $192 + $197;
  $199 = (($5) + 528|0);
  HEAPF64[$199>>3] = $198;
  $200 = (($5) + 464|0);
  $201 = +HEAPF64[$200>>3];
  $202 = (($5) + 248|0);
  $203 = +HEAPF64[$202>>3];
  $204 = $201 * $203;
  $205 = (($5) + 488|0);
  $206 = +HEAPF64[$205>>3];
  $207 = (($5) + 320|0);
  $208 = +HEAPF64[$207>>3];
  $209 = $206 * $208;
  $210 = $204 + $209;
  $211 = (($5) + 512|0);
  $212 = +HEAPF64[$211>>3];
  $213 = (($5) + 392|0);
  $214 = +HEAPF64[$213>>3];
  $215 = $212 * $214;
  $216 = $210 + $215;
  $217 = (($5) + 472|0);
  HEAPF64[$217>>3] = $216;
  $218 = (($5) + 464|0);
  $219 = +HEAPF64[$218>>3];
  $220 = (($5) + 272|0);
  $221 = +HEAPF64[$220>>3];
  $222 = $219 * $221;
  $223 = (($5) + 488|0);
  $224 = +HEAPF64[$223>>3];
  $225 = (($5) + 344|0);
  $226 = +HEAPF64[$225>>3];
  $227 = $224 * $226;
  $228 = $222 + $227;
  $229 = (($5) + 512|0);
  $230 = +HEAPF64[$229>>3];
  $231 = (($5) + 416|0);
  $232 = +HEAPF64[$231>>3];
  $233 = $230 * $232;
  $234 = $228 + $233;
  $235 = (($5) + 496|0);
  HEAPF64[$235>>3] = $234;
  $236 = (($5) + 464|0);
  $237 = +HEAPF64[$236>>3];
  $238 = (($5) + 296|0);
  $239 = +HEAPF64[$238>>3];
  $240 = $237 * $239;
  $241 = (($5) + 488|0);
  $242 = +HEAPF64[$241>>3];
  $243 = (($5) + 368|0);
  $244 = +HEAPF64[$243>>3];
  $245 = $242 * $244;
  $246 = $240 + $245;
  $247 = (($5) + 512|0);
  $248 = +HEAPF64[$247>>3];
  $249 = (($5) + 440|0);
  $250 = +HEAPF64[$249>>3];
  $251 = $248 * $250;
  $252 = $246 + $251;
  $253 = (($5) + 520|0);
  HEAPF64[$253>>3] = $252;
  $254 = (($5) + 392|0);
  $255 = +HEAPF64[$254>>3];
  $256 = -1.0 * $255;
  $257 = $x45;
  $258 = $256 * $257;
  $259 = (($5) + 512|0);
  $260 = +HEAPF64[$259>>3];
  $261 = (($5) + 320|0);
  $262 = +HEAPF64[$261>>3];
  $263 = $260 * $262;
  $264 = $258 + $263;
  $265 = (($5) + 256|0);
  HEAPF64[$265>>3] = $264;
  $266 = (($5) + 464|0);
  $267 = +HEAPF64[$266>>3];
  $268 = (($5) + 392|0);
  $269 = +HEAPF64[$268>>3];
  $270 = $267 * $269;
  $271 = (($5) + 248|0);
  $272 = +HEAPF64[$271>>3];
  $273 = -1.0 * $272;
  $274 = $x44;
  $275 = $273 * $274;
  $276 = $270 + $275;
  $277 = (($5) + 280|0);
  HEAPF64[$277>>3] = $276;
  $278 = (($5) + 320|0);
  $279 = +HEAPF64[$278>>3];
  $280 = -1.0 * $279;
  $281 = $x43;
  $282 = $280 * $281;
  $283 = (($5) + 488|0);
  $284 = +HEAPF64[$283>>3];
  $285 = (($5) + 248|0);
  $286 = +HEAPF64[$285>>3];
  $287 = $284 * $286;
  $288 = $282 + $287;
  $289 = (($5) + 304|0);
  HEAPF64[$289>>3] = $288;
  $290 = (($5) + 416|0);
  $291 = +HEAPF64[$290>>3];
  $292 = -1.0 * $291;
  $293 = $x45;
  $294 = $292 * $293;
  $295 = (($5) + 512|0);
  $296 = +HEAPF64[$295>>3];
  $297 = (($5) + 344|0);
  $298 = +HEAPF64[$297>>3];
  $299 = $296 * $298;
  $300 = $294 + $299;
  $301 = (($5) + 328|0);
  HEAPF64[$301>>3] = $300;
  $302 = (($5) + 464|0);
  $303 = +HEAPF64[$302>>3];
  $304 = (($5) + 416|0);
  $305 = +HEAPF64[$304>>3];
  $306 = $303 * $305;
  $307 = (($5) + 272|0);
  $308 = +HEAPF64[$307>>3];
  $309 = -1.0 * $308;
  $310 = $x44;
  $311 = $309 * $310;
  $312 = $306 + $311;
  $313 = (($5) + 352|0);
  HEAPF64[$313>>3] = $312;
  $314 = (($5) + 344|0);
  $315 = +HEAPF64[$314>>3];
  $316 = -1.0 * $315;
  $317 = $x43;
  $318 = $316 * $317;
  $319 = (($5) + 488|0);
  $320 = +HEAPF64[$319>>3];
  $321 = (($5) + 272|0);
  $322 = +HEAPF64[$321>>3];
  $323 = $320 * $322;
  $324 = $318 + $323;
  $325 = (($5) + 376|0);
  HEAPF64[$325>>3] = $324;
  $326 = (($5) + 440|0);
  $327 = +HEAPF64[$326>>3];
  $328 = -1.0 * $327;
  $329 = $x45;
  $330 = $328 * $329;
  $331 = (($5) + 512|0);
  $332 = +HEAPF64[$331>>3];
  $333 = (($5) + 368|0);
  $334 = +HEAPF64[$333>>3];
  $335 = $332 * $334;
  $336 = $330 + $335;
  $337 = (($5) + 400|0);
  HEAPF64[$337>>3] = $336;
  $338 = (($5) + 296|0);
  $339 = +HEAPF64[$338>>3];
  $340 = -1.0 * $339;
  $341 = $x44;
  $342 = $340 * $341;
  $343 = (($5) + 464|0);
  $344 = +HEAPF64[$343>>3];
  $345 = (($5) + 440|0);
  $346 = +HEAPF64[$345>>3];
  $347 = $344 * $346;
  $348 = $342 + $347;
  $349 = (($5) + 424|0);
  HEAPF64[$349>>3] = $348;
  $350 = (($5) + 368|0);
  $351 = +HEAPF64[$350>>3];
  $352 = -1.0 * $351;
  $353 = $x43;
  $354 = $352 * $353;
  $355 = (($5) + 488|0);
  $356 = +HEAPF64[$355>>3];
  $357 = (($5) + 296|0);
  $358 = +HEAPF64[$357>>3];
  $359 = $356 * $358;
  $360 = $354 + $359;
  $361 = (($5) + 448|0);
  HEAPF64[$361>>3] = $360;
  $362 = (($5) + 464|0);
  $363 = +HEAPF64[$362>>3];
  $364 = (+__Z5IKabsd($363));
  $365 = (($5) + 488|0);
  $366 = +HEAPF64[$365>>3];
  $367 = (+__Z5IKabsd($366));
  $368 = $364 + $367;
  HEAPF64[$j0eval>>3] = $368;
  $369 = +HEAPF64[$j0eval>>3];
  $370 = (+__Z5IKabsd($369));
  $371 = $370 < 9.9999999999999995E-7;
  do {
   if ($371) {
   } else {
    ;HEAP8[$j0valid+0>>0]=0|0;HEAP8[$j0valid+1>>0]=0|0;
    $372 = (($5) + 538|0);
    HEAP8[$372>>0] = 2;
    $373 = (($5) + 488|0);
    $374 = +HEAPF64[$373>>3];
    $375 = (($5) + 464|0);
    $376 = +HEAPF64[$375>>3];
    $377 = -1.0 * $376;
    __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x47,$374,$377,1.9999999999999999E-6);
    $378 = (($x47) + 8|0);
    $379 = HEAP8[$378>>0]|0;
    $380 = $379&1;
    if (!($380)) {
     break;
    }
    $381 = +HEAPF64[$x47>>3];
    $x46 = $381;
    $382 = $x46;
    $383 = -1.0 * $382;
    HEAPF64[$j0array>>3] = $383;
    $384 = +HEAPF64[$j0array>>3];
    $385 = (+__Z5IKsind($384));
    HEAPF64[$sj0array>>3] = $385;
    $386 = +HEAPF64[$j0array>>3];
    $387 = (+__Z5IKcosd($386));
    HEAPF64[$cj0array>>3] = $387;
    $388 = $x46;
    $389 = -1.0 * $388;
    $390 = 3.14159265358979 + $389;
    $391 = (($j0array) + 8|0);
    HEAPF64[$391>>3] = $390;
    $392 = (($j0array) + 8|0);
    $393 = +HEAPF64[$392>>3];
    $394 = (+__Z5IKsind($393));
    $395 = (($sj0array) + 8|0);
    HEAPF64[$395>>3] = $394;
    $396 = (($j0array) + 8|0);
    $397 = +HEAPF64[$396>>3];
    $398 = (+__Z5IKcosd($397));
    $399 = (($cj0array) + 8|0);
    HEAPF64[$399>>3] = $398;
    $400 = +HEAPF64[$j0array>>3];
    $401 = $400 > 3.14159265358979;
    if ($401) {
     $402 = +HEAPF64[$j0array>>3];
     $403 = $402 - 6.2831853071795898;
     HEAPF64[$j0array>>3] = $403;
    } else {
     $404 = +HEAPF64[$j0array>>3];
     $405 = $404 < -3.14159265358979;
     if ($405) {
      $406 = +HEAPF64[$j0array>>3];
      $407 = $406 + 6.2831853071795898;
      HEAPF64[$j0array>>3] = $407;
     }
    }
    HEAP8[$j0valid>>0] = 1;
    $408 = (($j0array) + 8|0);
    $409 = +HEAPF64[$408>>3];
    $410 = $409 > 3.14159265358979;
    if ($410) {
     $411 = (($j0array) + 8|0);
     $412 = +HEAPF64[$411>>3];
     $413 = $412 - 6.2831853071795898;
     HEAPF64[$411>>3] = $413;
    } else {
     $414 = (($j0array) + 8|0);
     $415 = +HEAPF64[$414>>3];
     $416 = $415 < -3.14159265358979;
     if ($416) {
      $417 = (($j0array) + 8|0);
      $418 = +HEAPF64[$417>>3];
      $419 = $418 + 6.2831853071795898;
      HEAPF64[$417>>3] = $419;
     }
    }
    $420 = (($j0valid) + 1|0);
    HEAP8[$420>>0] = 1;
    $ij0 = 0;
    while(1) {
     $421 = $ij0;
     $422 = ($421|0)<(2);
     if (!($422)) {
      break;
     }
     $423 = $ij0;
     $424 = (($j0valid) + ($423)|0);
     $425 = HEAP8[$424>>0]|0;
     $426 = $425&1;
     if ($426) {
      $427 = $ij0;
      $428 = $427&255;
      $429 = (($5) + 536|0);
      HEAP8[$429>>0] = $428;
      $430 = (($5) + 536|0);
      $431 = (($430) + 1|0);
      HEAP8[$431>>0] = -1;
      $432 = $ij0;
      $433 = (($432) + 1)|0;
      $iij0 = $433;
      while(1) {
       $434 = $iij0;
       $435 = ($434|0)<(2);
       if (!($435)) {
        break;
       }
       $436 = $iij0;
       $437 = (($j0valid) + ($436)|0);
       $438 = HEAP8[$437>>0]|0;
       $439 = $438&1;
       if ($439) {
        $440 = $ij0;
        $441 = (($cj0array) + ($440<<3)|0);
        $442 = +HEAPF64[$441>>3];
        $443 = $iij0;
        $444 = (($cj0array) + ($443<<3)|0);
        $445 = +HEAPF64[$444>>3];
        $446 = $442 - $445;
        $447 = (+__Z5IKabsd($446));
        $448 = $447 < 9.9999999999999995E-7;
        if ($448) {
         $449 = $ij0;
         $450 = (($sj0array) + ($449<<3)|0);
         $451 = +HEAPF64[$450>>3];
         $452 = $iij0;
         $453 = (($sj0array) + ($452<<3)|0);
         $454 = +HEAPF64[$453>>3];
         $455 = $451 - $454;
         $456 = (+__Z5IKabsd($455));
         $457 = $456 < 9.9999999999999995E-7;
         if ($457) {
          label = 26;
          break;
         }
        }
       }
       $464 = $iij0;
       $465 = (($464) + 1)|0;
       $iij0 = $465;
      }
      if ((label|0) == 26) {
       label = 0;
       $458 = $iij0;
       $459 = (($j0valid) + ($458)|0);
       HEAP8[$459>>0] = 0;
       $460 = $iij0;
       $461 = $460&255;
       $462 = (($5) + 536|0);
       $463 = (($462) + 1|0);
       HEAP8[$463>>0] = $461;
      }
      $466 = $ij0;
      $467 = (($j0array) + ($466<<3)|0);
      $468 = +HEAPF64[$467>>3];
      HEAPF64[$5>>3] = $468;
      $469 = $ij0;
      $470 = (($cj0array) + ($469<<3)|0);
      $471 = +HEAPF64[$470>>3];
      $472 = (($5) + 8|0);
      HEAPF64[$472>>3] = $471;
      $473 = $ij0;
      $474 = (($sj0array) + ($473<<3)|0);
      $475 = +HEAPF64[$474>>3];
      $476 = (($5) + 16|0);
      HEAPF64[$476>>3] = $475;
      ;HEAP8[$j2valid+0>>0]=0|0;HEAP8[$j2valid+1>>0]=0|0;
      $477 = (($5) + 544|0);
      HEAP8[$477>>0] = 2;
      $478 = (($5) + 488|0);
      $479 = +HEAPF64[$478>>3];
      $480 = 1.39762403913347 * $479;
      $481 = (($5) + 16|0);
      $482 = +HEAPF64[$481>>3];
      $483 = $480 * $482;
      $484 = 0.93029350104821795 + $483;
      $485 = (($5) + 528|0);
      $486 = +HEAPF64[$485>>3];
      $487 = -6.9881201956673697 * $486;
      $488 = $484 + $487;
      $489 = (($5) + 8|0);
      $490 = +HEAPF64[$489>>3];
      $491 = 1.39762403913347 * $490;
      $492 = (($5) + 464|0);
      $493 = +HEAPF64[$492>>3];
      $494 = $491 * $493;
      $495 = $488 + $494;
      HEAPF64[$sj2array>>3] = $495;
      $496 = +HEAPF64[$sj2array>>3];
      $497 = $496 >= -1.0000020000000001;
      if ($497) {
       $498 = +HEAPF64[$sj2array>>3];
       $499 = $498 <= 1.0000020000000001;
       if ($499) {
        $500 = (($j2valid) + 1|0);
        HEAP8[$500>>0] = 1;
        HEAP8[$j2valid>>0] = 1;
        $501 = +HEAPF64[$sj2array>>3];
        $502 = (+__Z6IKasind($501));
        HEAPF64[$j2array>>3] = $502;
        $503 = +HEAPF64[$j2array>>3];
        $504 = (+__Z5IKcosd($503));
        HEAPF64[$cj2array>>3] = $504;
        $505 = +HEAPF64[$sj2array>>3];
        $506 = (($sj2array) + 8|0);
        HEAPF64[$506>>3] = $505;
        $507 = +HEAPF64[$j2array>>3];
        $508 = $507 > 0.0;
        if ($508) {
         $509 = +HEAPF64[$j2array>>3];
         $510 = 3.14159265358979 - $509;
         $514 = $510;
        } else {
         $511 = +HEAPF64[$j2array>>3];
         $512 = -3.14159265358979 - $511;
         $514 = $512;
        }
        $513 = (($j2array) + 8|0);
        HEAPF64[$513>>3] = $514;
        $515 = +HEAPF64[$cj2array>>3];
        $516 = -$515;
        $517 = (($cj2array) + 8|0);
        HEAPF64[$517>>3] = $516;
       } else {
        label = 35;
       }
      } else {
       label = 35;
      }
      if ((label|0) == 35) {
       label = 0;
       $518 = +HEAPF64[$sj2array>>3];
       $519 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($518)|0);
       if ($519) {
        HEAP8[$j2valid>>0] = 1;
        HEAPF64[$cj2array>>3] = 1.0;
        HEAPF64[$sj2array>>3] = 0.0;
        HEAPF64[$j2array>>3] = 0.0;
       }
      }
      $ij2 = 0;
      while(1) {
       $520 = $ij2;
       $521 = ($520|0)<(2);
       if (!($521)) {
        break;
       }
       $522 = $ij2;
       $523 = (($j2valid) + ($522)|0);
       $524 = HEAP8[$523>>0]|0;
       $525 = $524&1;
       L56: do {
        if ($525) {
         $526 = $ij2;
         $527 = $526&255;
         $528 = (($5) + 542|0);
         HEAP8[$528>>0] = $527;
         $529 = (($5) + 542|0);
         $530 = (($529) + 1|0);
         HEAP8[$530>>0] = -1;
         $531 = $ij2;
         $532 = (($531) + 1)|0;
         $iij2 = $532;
         L59: while(1) {
          $533 = $iij2;
          $534 = ($533|0)<(2);
          if (!($534)) {
           break;
          }
          $535 = $iij2;
          $536 = (($j2valid) + ($535)|0);
          $537 = HEAP8[$536>>0]|0;
          $538 = $537&1;
          do {
           if ($538) {
            $539 = $ij2;
            $540 = (($cj2array) + ($539<<3)|0);
            $541 = +HEAPF64[$540>>3];
            $542 = $iij2;
            $543 = (($cj2array) + ($542<<3)|0);
            $544 = +HEAPF64[$543>>3];
            $545 = $541 - $544;
            $546 = (+__Z5IKabsd($545));
            $547 = $546 < 9.9999999999999995E-7;
            if (!($547)) {
             break;
            }
            $548 = $ij2;
            $549 = (($sj2array) + ($548<<3)|0);
            $550 = +HEAPF64[$549>>3];
            $551 = $iij2;
            $552 = (($sj2array) + ($551<<3)|0);
            $553 = +HEAPF64[$552>>3];
            $554 = $550 - $553;
            $555 = (+__Z5IKabsd($554));
            $556 = $555 < 9.9999999999999995E-7;
            if ($556) {
             label = 47;
             break L59;
            }
           }
          } while(0);
          $563 = $iij2;
          $564 = (($563) + 1)|0;
          $iij2 = $564;
         }
         if ((label|0) == 47) {
          label = 0;
          $557 = $iij2;
          $558 = (($j2valid) + ($557)|0);
          HEAP8[$558>>0] = 0;
          $559 = $iij2;
          $560 = $559&255;
          $561 = (($5) + 542|0);
          $562 = (($561) + 1|0);
          HEAP8[$562>>0] = $560;
         }
         $565 = $ij2;
         $566 = (($j2array) + ($565<<3)|0);
         $567 = +HEAPF64[$566>>3];
         $568 = (($5) + 80|0);
         HEAPF64[$568>>3] = $567;
         $569 = $ij2;
         $570 = (($cj2array) + ($569<<3)|0);
         $571 = +HEAPF64[$570>>3];
         $572 = (($5) + 88|0);
         HEAPF64[$572>>3] = $571;
         $573 = $ij2;
         $574 = (($sj2array) + ($573<<3)|0);
         $575 = +HEAPF64[$574>>3];
         $576 = (($5) + 96|0);
         HEAPF64[$576>>3] = $575;
         $577 = (($5) + 88|0);
         $578 = +HEAPF64[$577>>3];
         $579 = 2700.0 * $578;
         $x48 = $579;
         $580 = (($5) + 8|0);
         $581 = +HEAPF64[$580>>3];
         $582 = (($5) + 464|0);
         $583 = +HEAPF64[$582>>3];
         $584 = $581 * $583;
         $x49 = $584;
         $585 = (($5) + 96|0);
         $586 = +HEAPF64[$585>>3];
         $587 = 2700.0 * $586;
         $x50 = $587;
         $588 = (($5) + 488|0);
         $589 = +HEAPF64[$588>>3];
         $590 = (($5) + 16|0);
         $591 = +HEAPF64[$590>>3];
         $592 = $589 * $591;
         $x51 = $592;
         $593 = (($5) + 96|0);
         $594 = +HEAPF64[$593>>3];
         $595 = -1.0 * $594;
         $596 = 1.00017470300489 + $595;
         HEAPF64[$j1eval>>3] = $596;
         $597 = (($5) + 96|0);
         $598 = +HEAPF64[$597>>3];
         $599 = -1431.0 * $598;
         $600 = 1431.25 + $599;
         $601 = (+__Z6IKsignd($600));
         $602 = (($j1eval) + 8|0);
         HEAPF64[$602>>3] = $601;
         $603 = $x49;
         $604 = 2650.0 * $603;
         $605 = -265.0 + $604;
         $606 = $x51;
         $607 = 2650.0 * $606;
         $608 = $605 + $607;
         $609 = (($5) + 512|0);
         $610 = +HEAPF64[$609>>3];
         $611 = $x48;
         $612 = $610 * $611;
         $613 = $608 + $612;
         $614 = $x49;
         $615 = -1.0 * $614;
         $616 = $x50;
         $617 = $615 * $616;
         $618 = $613 + $617;
         $619 = (($5) + 96|0);
         $620 = +HEAPF64[$619>>3];
         $621 = 270.0 * $620;
         $622 = $618 + $621;
         $623 = $x50;
         $624 = -1.0 * $623;
         $625 = $x51;
         $626 = $624 * $625;
         $627 = $622 + $626;
         $628 = (+__Z5IKabsd($627));
         $629 = (($5) + 512|0);
         $630 = +HEAPF64[$629>>3];
         $631 = -2650.0 * $630;
         $632 = $x48;
         $633 = $x49;
         $634 = $632 * $633;
         $635 = $631 + $634;
         $636 = (($5) + 88|0);
         $637 = +HEAPF64[$636>>3];
         $638 = -270.0 * $637;
         $639 = $635 + $638;
         $640 = $x48;
         $641 = $x51;
         $642 = $640 * $641;
         $643 = $639 + $642;
         $644 = (($5) + 512|0);
         $645 = +HEAPF64[$644>>3];
         $646 = $x50;
         $647 = $645 * $646;
         $648 = $643 + $647;
         $649 = (+__Z5IKabsd($648));
         $650 = $628 + $649;
         $651 = (($j1eval) + 16|0);
         HEAPF64[$651>>3] = $650;
         $652 = +HEAPF64[$j1eval>>3];
         $653 = (+__Z5IKabsd($652));
         $654 = $653 < 9.9999999999999995E-7;
         if ($654) {
          label = 53;
         } else {
          $655 = (($j1eval) + 8|0);
          $656 = +HEAPF64[$655>>3];
          $657 = (+__Z5IKabsd($656));
          $658 = $657 < 9.9999999999999995E-7;
          if ($658) {
           label = 53;
          } else {
           $659 = (($j1eval) + 16|0);
           $660 = +HEAPF64[$659>>3];
           $661 = (+__Z5IKabsd($660));
           $662 = $661 < 9.9999999999999995E-7;
           if ($662) {
            label = 53;
           } else {
            ;HEAP8[$j1valid13+0>>0]=0|0;
            $1564 = (($5) + 541|0);
            HEAP8[$1564>>0] = 1;
            $1565 = (($5) + 512|0);
            $1566 = +HEAPF64[$1565>>3];
            $1567 = 2700.0 * $1566;
            $x402 = $1567;
            $1568 = (($5) + 8|0);
            $1569 = +HEAPF64[$1568>>3];
            $1570 = (($5) + 464|0);
            $1571 = +HEAPF64[$1570>>3];
            $1572 = $1569 * $1571;
            $x403 = $1572;
            $1573 = (($5) + 488|0);
            $1574 = +HEAPF64[$1573>>3];
            $1575 = 2700.0 * $1574;
            $1576 = (($5) + 16|0);
            $1577 = +HEAPF64[$1576>>3];
            $1578 = $1575 * $1577;
            $x404 = $1578;
            $1579 = (($5) + 96|0);
            $1580 = +HEAPF64[$1579>>3];
            $1581 = -1431.0 * $1580;
            $1582 = 1431.25 + $1581;
            $1583 = (+__Z6IKsignd($1582));
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x405,$1583,-1);
            $1584 = (($x405) + 8|0);
            $1585 = HEAP8[$1584>>0]|0;
            $1586 = $1585&1;
            if (!($1586)) {
             break;
            }
            $1587 = $x403;
            $1588 = 2650.0 * $1587;
            $1589 = -265.0 + $1588;
            $1590 = (($5) + 96|0);
            $1591 = +HEAPF64[$1590>>3];
            $1592 = -2700.0 * $1591;
            $1593 = $x403;
            $1594 = $1592 * $1593;
            $1595 = $1589 + $1594;
            $1596 = (($5) + 96|0);
            $1597 = +HEAPF64[$1596>>3];
            $1598 = -1.0 * $1597;
            $1599 = $x404;
            $1600 = $1598 * $1599;
            $1601 = $1595 + $1600;
            $1602 = (($5) + 488|0);
            $1603 = +HEAPF64[$1602>>3];
            $1604 = 2650.0 * $1603;
            $1605 = (($5) + 16|0);
            $1606 = +HEAPF64[$1605>>3];
            $1607 = $1604 * $1606;
            $1608 = $1601 + $1607;
            $1609 = (($5) + 96|0);
            $1610 = +HEAPF64[$1609>>3];
            $1611 = 270.0 * $1610;
            $1612 = $1608 + $1611;
            $1613 = (($5) + 88|0);
            $1614 = +HEAPF64[$1613>>3];
            $1615 = $x402;
            $1616 = $1614 * $1615;
            $1617 = $1612 + $1616;
            $1618 = (($5) + 512|0);
            $1619 = +HEAPF64[$1618>>3];
            $1620 = -2650.0 * $1619;
            $1621 = (($5) + 96|0);
            $1622 = +HEAPF64[$1621>>3];
            $1623 = $x402;
            $1624 = $1622 * $1623;
            $1625 = $1620 + $1624;
            $1626 = (($5) + 88|0);
            $1627 = +HEAPF64[$1626>>3];
            $1628 = 2700.0 * $1627;
            $1629 = $x403;
            $1630 = $1628 * $1629;
            $1631 = $1625 + $1630;
            $1632 = (($5) + 88|0);
            $1633 = +HEAPF64[$1632>>3];
            $1634 = -270.0 * $1633;
            $1635 = $1631 + $1634;
            $1636 = (($5) + 88|0);
            $1637 = +HEAPF64[$1636>>3];
            $1638 = $x404;
            $1639 = $1637 * $1638;
            $1640 = $1635 + $1639;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x406,$1617,$1640,1.9999999999999999E-6);
            $1641 = (($x406) + 8|0);
            $1642 = HEAP8[$1641>>0]|0;
            $1643 = $1642&1;
            if (!($1643)) {
             break;
            }
            $1644 = +HEAPF64[$x405>>3];
            $1645 = 1.5707963267949001 * $1644;
            $1646 = -1.5707963267949001 + $1645;
            $1647 = +HEAPF64[$x406>>3];
            $1648 = $1646 + $1647;
            HEAPF64[$j1array10>>3] = $1648;
            $1649 = +HEAPF64[$j1array10>>3];
            $1650 = (+__Z5IKsind($1649));
            HEAPF64[$sj1array12>>3] = $1650;
            $1651 = +HEAPF64[$j1array10>>3];
            $1652 = (+__Z5IKcosd($1651));
            HEAPF64[$cj1array11>>3] = $1652;
            $1653 = +HEAPF64[$j1array10>>3];
            $1654 = $1653 > 3.14159265358979;
            if ($1654) {
             $1655 = +HEAPF64[$j1array10>>3];
             $1656 = $1655 - 6.2831853071795898;
             HEAPF64[$j1array10>>3] = $1656;
            } else {
             $1657 = +HEAPF64[$j1array10>>3];
             $1658 = $1657 < -3.14159265358979;
             if ($1658) {
              $1659 = +HEAPF64[$j1array10>>3];
              $1660 = $1659 + 6.2831853071795898;
              HEAPF64[$j1array10>>3] = $1660;
             }
            }
            HEAP8[$j1valid13>>0] = 1;
            $ij114 = 0;
            while(1) {
             $1661 = $ij114;
             $1662 = ($1661|0)<(1);
             if (!($1662)) {
              break;
             }
             $1663 = $ij114;
             $1664 = (($j1valid13) + ($1663)|0);
             $1665 = HEAP8[$1664>>0]|0;
             $1666 = $1665&1;
             L90: do {
              if ($1666) {
               $1667 = $ij114;
               $1668 = $1667&255;
               $1669 = (($5) + 539|0);
               HEAP8[$1669>>0] = $1668;
               $1670 = (($5) + 539|0);
               $1671 = (($1670) + 1|0);
               HEAP8[$1671>>0] = -1;
               $1672 = $ij114;
               $1673 = (($1672) + 1)|0;
               $iij115 = $1673;
               L93: while(1) {
                $1674 = $iij115;
                $1675 = ($1674|0)<(1);
                if (!($1675)) {
                 break;
                }
                $1676 = $iij115;
                $1677 = (($j1valid13) + ($1676)|0);
                $1678 = HEAP8[$1677>>0]|0;
                $1679 = $1678&1;
                do {
                 if ($1679) {
                  $1680 = $ij114;
                  $1681 = (($cj1array11) + ($1680<<3)|0);
                  $1682 = +HEAPF64[$1681>>3];
                  $1683 = $iij115;
                  $1684 = (($cj1array11) + ($1683<<3)|0);
                  $1685 = +HEAPF64[$1684>>3];
                  $1686 = $1682 - $1685;
                  $1687 = (+__Z5IKabsd($1686));
                  $1688 = $1687 < 9.9999999999999995E-7;
                  if (!($1688)) {
                   break;
                  }
                  $1689 = $ij114;
                  $1690 = (($sj1array12) + ($1689<<3)|0);
                  $1691 = +HEAPF64[$1690>>3];
                  $1692 = $iij115;
                  $1693 = (($sj1array12) + ($1692<<3)|0);
                  $1694 = +HEAPF64[$1693>>3];
                  $1695 = $1691 - $1694;
                  $1696 = (+__Z5IKabsd($1695));
                  $1697 = $1696 < 9.9999999999999995E-7;
                  if ($1697) {
                   label = 140;
                   break L93;
                  }
                 }
                } while(0);
                $1704 = $iij115;
                $1705 = (($1704) + 1)|0;
                $iij115 = $1705;
               }
               if ((label|0) == 140) {
                label = 0;
                $1698 = $iij115;
                $1699 = (($j1valid13) + ($1698)|0);
                HEAP8[$1699>>0] = 0;
                $1700 = $iij115;
                $1701 = $1700&255;
                $1702 = (($5) + 539|0);
                $1703 = (($1702) + 1|0);
                HEAP8[$1703>>0] = $1701;
               }
               $1706 = $ij114;
               $1707 = (($j1array10) + ($1706<<3)|0);
               $1708 = +HEAPF64[$1707>>3];
               $1709 = (($5) + 40|0);
               HEAPF64[$1709>>3] = $1708;
               $1710 = $ij114;
               $1711 = (($cj1array11) + ($1710<<3)|0);
               $1712 = +HEAPF64[$1711>>3];
               $1713 = (($5) + 48|0);
               HEAPF64[$1713>>3] = $1712;
               $1714 = $ij114;
               $1715 = (($sj1array12) + ($1714<<3)|0);
               $1716 = +HEAPF64[$1715>>3];
               $1717 = (($5) + 56|0);
               HEAPF64[$1717>>3] = $1716;
               $1718 = (($5) + 40|0);
               $1719 = +HEAPF64[$1718>>3];
               $1720 = (+__Z5IKcosd($1719));
               $x407 = $1720;
               $1721 = (($5) + 40|0);
               $1722 = +HEAPF64[$1721>>3];
               $1723 = (+__Z5IKsind($1722));
               $x408 = $1723;
               $1724 = (($5) + 8|0);
               $1725 = +HEAPF64[$1724>>3];
               $1726 = (($5) + 464|0);
               $1727 = +HEAPF64[$1726>>3];
               $1728 = $1725 * $1727;
               $x409 = $1728;
               $1729 = (($5) + 88|0);
               $1730 = +HEAPF64[$1729>>3];
               $1731 = 0.27000000000000002 * $1730;
               $x410 = $1731;
               $1732 = (($5) + 488|0);
               $1733 = +HEAPF64[$1732>>3];
               $1734 = (($5) + 16|0);
               $1735 = +HEAPF64[$1734>>3];
               $1736 = $1733 * $1735;
               $x411 = $1736;
               $1737 = (($5) + 512|0);
               $1738 = +HEAPF64[$1737>>3];
               $1739 = 1.0 * $1738;
               $x412 = $1739;
               $1740 = (($5) + 96|0);
               $1741 = +HEAPF64[$1740>>3];
               $1742 = 0.27000000000000002 * $1741;
               $x413 = $1742;
               $1743 = $x407;
               $1744 = 0.27000000000000002 * $1743;
               $x414 = $1744;
               $1745 = $x407;
               $1746 = 1.0 * $1745;
               $x415 = $1746;
               $1747 = $x408;
               $1748 = $x411;
               $1749 = $1747 * $1748;
               $x416 = $1749;
               $1750 = $x407;
               $1751 = $x413;
               $1752 = $1750 * $1751;
               $1753 = $x407;
               $1754 = -0.26500000000000001 * $1753;
               $1755 = $1752 + $1754;
               $1756 = $x408;
               $1757 = $x410;
               $1758 = $1756 * $1757;
               $1759 = $1755 + $1758;
               $1760 = $x412;
               $1761 = -1.0 * $1760;
               $1762 = $1759 + $1761;
               HEAPF64[$evalcond16>>3] = $1762;
               $1763 = $x407;
               $1764 = $x410;
               $1765 = $1763 * $1764;
               $1766 = 0.10000000000000001 + $1765;
               $1767 = $x408;
               $1768 = 0.26500000000000001 * $1767;
               $1769 = $1766 + $1768;
               $1770 = $x408;
               $1771 = -1.0 * $1770;
               $1772 = $x413;
               $1773 = $1771 * $1772;
               $1774 = $1769 + $1773;
               $1775 = $x409;
               $1776 = -1.0 * $1775;
               $1777 = $1774 + $1776;
               $1778 = $x411;
               $1779 = -1.0 * $1778;
               $1780 = $1777 + $1779;
               $1781 = (($evalcond16) + 8|0);
               HEAPF64[$1781>>3] = $1780;
               $1782 = $x408;
               $1783 = $x409;
               $1784 = $1782 * $1783;
               $1785 = -0.26500000000000001 + $1784;
               $1786 = $x413;
               $1787 = $1785 + $1786;
               $1788 = $x416;
               $1789 = $1787 + $1788;
               $1790 = $x408;
               $1791 = -0.10000000000000001 * $1790;
               $1792 = $1789 + $1791;
               $1793 = $x407;
               $1794 = -1.0 * $1793;
               $1795 = $x412;
               $1796 = $1794 * $1795;
               $1797 = $1792 + $1796;
               $1798 = (($evalcond16) + 16|0);
               HEAPF64[$1798>>3] = $1797;
               $1799 = $x407;
               $1800 = 0.10000000000000001 * $1799;
               $1801 = $x410;
               $1802 = $1800 + $1801;
               $1803 = $x411;
               $1804 = -1.0 * $1803;
               $1805 = $x415;
               $1806 = $1804 * $1805;
               $1807 = $1802 + $1806;
               $1808 = $x408;
               $1809 = -1.0 * $1808;
               $1810 = $x412;
               $1811 = $1809 * $1810;
               $1812 = $1807 + $1811;
               $1813 = $x409;
               $1814 = -1.0 * $1813;
               $1815 = $x415;
               $1816 = $1814 * $1815;
               $1817 = $1812 + $1816;
               $1818 = (($evalcond16) + 24|0);
               HEAPF64[$1818>>3] = $1817;
               $1819 = (($5) + 512|0);
               $1820 = +HEAPF64[$1819>>3];
               $1821 = -0.53000000000000003 * $1820;
               $1822 = $x407;
               $1823 = $1821 * $1822;
               $1824 = -0.0073249999999999999 + $1823;
               $1825 = $x416;
               $1826 = 0.53000000000000003 * $1825;
               $1827 = $1824 + $1826;
               $1828 = (($5) + 528|0);
               $1829 = +HEAPF64[$1828>>3];
               $1830 = -1.0 * $1829;
               $1831 = $1827 + $1830;
               $1832 = $x408;
               $1833 = 0.53000000000000003 * $1832;
               $1834 = $x409;
               $1835 = $1833 * $1834;
               $1836 = $1831 + $1835;
               $1837 = $x411;
               $1838 = 0.20000000000000001 * $1837;
               $1839 = $1836 + $1838;
               $1840 = $x409;
               $1841 = 0.20000000000000001 * $1840;
               $1842 = $1839 + $1841;
               $1843 = $x408;
               $1844 = -0.052999999999999999 * $1843;
               $1845 = $1842 + $1844;
               $1846 = (($evalcond16) + 32|0);
               HEAPF64[$1846>>3] = $1845;
               $1847 = +HEAPF64[$evalcond16>>3];
               $1848 = (+__Z5IKabsd($1847));
               $1849 = $1848 > 5.0000000000000004E-6;
               do {
                if (!($1849)) {
                 $1850 = (($evalcond16) + 8|0);
                 $1851 = +HEAPF64[$1850>>3];
                 $1852 = (+__Z5IKabsd($1851));
                 $1853 = $1852 > 5.0000000000000004E-6;
                 if ($1853) {
                  break;
                 }
                 $1854 = (($evalcond16) + 16|0);
                 $1855 = +HEAPF64[$1854>>3];
                 $1856 = (+__Z5IKabsd($1855));
                 $1857 = $1856 > 5.0000000000000004E-6;
                 if ($1857) {
                  break;
                 }
                 $1858 = (($evalcond16) + 24|0);
                 $1859 = +HEAPF64[$1858>>3];
                 $1860 = (+__Z5IKabsd($1859));
                 $1861 = $1860 > 5.0000000000000004E-6;
                 if ($1861) {
                  break;
                 }
                 $1862 = (($evalcond16) + 32|0);
                 $1863 = +HEAPF64[$1862>>3];
                 $1864 = (+__Z5IKabsd($1863));
                 $1865 = $1864 > 5.0000000000000004E-6;
                 if ($1865) {
                  break;
                 }
                 $1866 = $4;
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1866);
                 break L90;
                }
               } while(0);
              } else {
              }
             } while(0);
             $1867 = $ij114;
             $1868 = (($1867) + 1)|0;
             $ij114 = $1868;
            }
           }
          }
         }
         if ((label|0) == 53) {
          label = 0;
          $663 = (($5) + 488|0);
          $664 = +HEAPF64[$663>>3];
          $665 = (($5) + 16|0);
          $666 = +HEAPF64[$665>>3];
          $667 = $664 * $666;
          $x52 = $667;
          $668 = (($5) + 96|0);
          $669 = +HEAPF64[$668>>3];
          $670 = 27.0 * $669;
          $x53 = $670;
          $671 = (($5) + 8|0);
          $672 = +HEAPF64[$671>>3];
          $673 = (($5) + 464|0);
          $674 = +HEAPF64[$673>>3];
          $675 = $672 * $674;
          $x54 = $675;
          $676 = (($5) + 88|0);
          $677 = +HEAPF64[$676>>3];
          $678 = (($5) + 512|0);
          $679 = +HEAPF64[$678>>3];
          $680 = $677 * $679;
          $x55 = $680;
          $681 = (($5) + 512|0);
          $682 = +HEAPF64[$681>>3];
          $683 = 100.0 * $682;
          $x56 = $683;
          $684 = (($5) + 96|0);
          $685 = +HEAPF64[$684>>3];
          $686 = 10.188679245283 * $685;
          $x57 = $686;
          $687 = $x52;
          $688 = -10.0 * $687;
          $689 = 1.0 + $688;
          $690 = $x54;
          $691 = -10.0 * $690;
          $692 = $689 + $691;
          $693 = (($5) + 96|0);
          $694 = +HEAPF64[$693>>3];
          $695 = -1.0188679245283001 * $694;
          $696 = $692 + $695;
          $697 = $x55;
          $698 = 10.188679245283 * $697;
          $699 = $696 + $698;
          $700 = $x52;
          $701 = $x57;
          $702 = $700 * $701;
          $703 = $699 + $702;
          $704 = $x54;
          $705 = $x57;
          $706 = $704 * $705;
          $707 = $703 + $706;
          HEAPF64[$j1eval1>>3] = $707;
          $708 = $x55;
          $709 = 27.0 * $708;
          $710 = 2.6499999999999999 + $709;
          $711 = $x54;
          $712 = -26.5 * $711;
          $713 = $710 + $712;
          $714 = $x52;
          $715 = -26.5 * $714;
          $716 = $713 + $715;
          $717 = (($5) + 96|0);
          $718 = +HEAPF64[$717>>3];
          $719 = -2.7000000000000002 * $718;
          $720 = $716 + $719;
          $721 = $x53;
          $722 = $x54;
          $723 = $721 * $722;
          $724 = $720 + $723;
          $725 = $x52;
          $726 = $x53;
          $727 = $725 * $726;
          $728 = $724 + $727;
          $729 = (+__Z6IKsignd($728));
          $730 = (($j1eval1) + 8|0);
          HEAPF64[$730>>3] = $729;
          $731 = (($5) + 96|0);
          $732 = +HEAPF64[$731>>3];
          $733 = 14.31 * $732;
          $734 = -14.3125 + $733;
          $735 = (($5) + 512|0);
          $736 = +HEAPF64[$735>>3];
          $737 = $x56;
          $738 = $736 * $737;
          $739 = $734 + $738;
          $740 = (($5) + 88|0);
          $741 = +HEAPF64[$740>>3];
          $742 = (($5) + 88|0);
          $743 = +HEAPF64[$742>>3];
          $744 = $741 * $743;
          $745 = 7.29 * $744;
          $746 = $739 + $745;
          $747 = (+__Z5IKabsd($746));
          $748 = (($5) + 512|0);
          $749 = +HEAPF64[$748>>3];
          $750 = -10.0 * $749;
          $751 = $x52;
          $752 = $x56;
          $753 = $751 * $752;
          $754 = $750 + $753;
          $755 = (($5) + 88|0);
          $756 = +HEAPF64[$755>>3];
          $757 = -7.1550000000000002 * $756;
          $758 = $754 + $757;
          $759 = (($5) + 88|0);
          $760 = +HEAPF64[$759>>3];
          $761 = 7.29 * $760;
          $762 = (($5) + 96|0);
          $763 = +HEAPF64[$762>>3];
          $764 = $761 * $763;
          $765 = $758 + $764;
          $766 = $x54;
          $767 = $x56;
          $768 = $766 * $767;
          $769 = $765 + $768;
          $770 = (+__Z5IKabsd($769));
          $771 = $747 + $770;
          $772 = (($j1eval1) + 16|0);
          HEAPF64[$772>>3] = $771;
          $773 = +HEAPF64[$j1eval1>>3];
          $774 = (+__Z5IKabsd($773));
          $775 = $774 < 9.9999999999999995E-7;
          do {
           if ($775) {
            label = 56;
           } else {
            $776 = (($j1eval1) + 8|0);
            $777 = +HEAPF64[$776>>3];
            $778 = (+__Z5IKabsd($777));
            $779 = $778 < 9.9999999999999995E-7;
            if ($779) {
             label = 56;
             break;
            }
            $780 = (($j1eval1) + 16|0);
            $781 = +HEAPF64[$780>>3];
            $782 = (+__Z5IKabsd($781));
            $783 = $782 < 9.9999999999999995E-7;
            if ($783) {
             label = 56;
             break;
            }
            ;HEAP8[$j1valid6+0>>0]=0|0;
            $1252 = (($5) + 541|0);
            HEAP8[$1252>>0] = 1;
            $1253 = (($5) + 96|0);
            $1254 = +HEAPF64[$1253>>3];
            $1255 = 27.0 * $1254;
            $x386 = $1255;
            $1256 = (($5) + 488|0);
            $1257 = +HEAPF64[$1256>>3];
            $1258 = (($5) + 16|0);
            $1259 = +HEAPF64[$1258>>3];
            $1260 = $1257 * $1259;
            $x387 = $1260;
            $1261 = (($5) + 8|0);
            $1262 = +HEAPF64[$1261>>3];
            $1263 = (($5) + 464|0);
            $1264 = +HEAPF64[$1263>>3];
            $1265 = $1262 * $1264;
            $x388 = $1265;
            $1266 = (($5) + 512|0);
            $1267 = +HEAPF64[$1266>>3];
            $1268 = 100.0 * $1267;
            $x389 = $1268;
            $1269 = $x386;
            $1270 = $x388;
            $1271 = $1269 * $1270;
            $1272 = 2.6499999999999999 + $1271;
            $1273 = $x386;
            $1274 = $x387;
            $1275 = $1273 * $1274;
            $1276 = $1272 + $1275;
            $1277 = $x387;
            $1278 = -26.5 * $1277;
            $1279 = $1276 + $1278;
            $1280 = $x388;
            $1281 = -26.5 * $1280;
            $1282 = $1279 + $1281;
            $1283 = (($5) + 96|0);
            $1284 = +HEAPF64[$1283>>3];
            $1285 = -2.7000000000000002 * $1284;
            $1286 = $1282 + $1285;
            $1287 = (($5) + 88|0);
            $1288 = +HEAPF64[$1287>>3];
            $1289 = 27.0 * $1288;
            $1290 = (($5) + 512|0);
            $1291 = +HEAPF64[$1290>>3];
            $1292 = $1289 * $1291;
            $1293 = $1286 + $1292;
            $1294 = (+__Z6IKsignd($1293));
            __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x390,$1294,-1);
            $1295 = (($x390) + 8|0);
            $1296 = HEAP8[$1295>>0]|0;
            $1297 = $1296&1;
            if (!($1297)) {
             break L56;
            }
            $1298 = (($5) + 96|0);
            $1299 = +HEAPF64[$1298>>3];
            $1300 = 14.31 * $1299;
            $1301 = -14.3125 + $1300;
            $1302 = (($5) + 512|0);
            $1303 = +HEAPF64[$1302>>3];
            $1304 = $x389;
            $1305 = $1303 * $1304;
            $1306 = $1301 + $1305;
            $1307 = (($5) + 88|0);
            $1308 = +HEAPF64[$1307>>3];
            $1309 = (($5) + 88|0);
            $1310 = +HEAPF64[$1309>>3];
            $1311 = $1308 * $1310;
            $1312 = 7.29 * $1311;
            $1313 = $1306 + $1312;
            $1314 = $x387;
            $1315 = $x389;
            $1316 = $1314 * $1315;
            $1317 = $x388;
            $1318 = $x389;
            $1319 = $1317 * $1318;
            $1320 = $1316 + $1319;
            $1321 = (($5) + 512|0);
            $1322 = +HEAPF64[$1321>>3];
            $1323 = -10.0 * $1322;
            $1324 = $1320 + $1323;
            $1325 = (($5) + 88|0);
            $1326 = +HEAPF64[$1325>>3];
            $1327 = -7.1550000000000002 * $1326;
            $1328 = $1324 + $1327;
            $1329 = (($5) + 88|0);
            $1330 = +HEAPF64[$1329>>3];
            $1331 = 7.29 * $1330;
            $1332 = (($5) + 96|0);
            $1333 = +HEAPF64[$1332>>3];
            $1334 = $1331 * $1333;
            $1335 = $1328 + $1334;
            __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x391,$1313,$1335,1.9999999999999999E-6);
            $1336 = (($x391) + 8|0);
            $1337 = HEAP8[$1336>>0]|0;
            $1338 = $1337&1;
            if (!($1338)) {
             break L56;
            }
            $1339 = +HEAPF64[$x390>>3];
            $1340 = 1.5707963267949001 * $1339;
            $1341 = -1.5707963267949001 + $1340;
            $1342 = +HEAPF64[$x391>>3];
            $1343 = $1341 + $1342;
            HEAPF64[$j1array3>>3] = $1343;
            $1344 = +HEAPF64[$j1array3>>3];
            $1345 = (+__Z5IKsind($1344));
            HEAPF64[$sj1array5>>3] = $1345;
            $1346 = +HEAPF64[$j1array3>>3];
            $1347 = (+__Z5IKcosd($1346));
            HEAPF64[$cj1array4>>3] = $1347;
            $1348 = +HEAPF64[$j1array3>>3];
            $1349 = $1348 > 3.14159265358979;
            if ($1349) {
             $1350 = +HEAPF64[$j1array3>>3];
             $1351 = $1350 - 6.2831853071795898;
             HEAPF64[$j1array3>>3] = $1351;
            } else {
             $1352 = +HEAPF64[$j1array3>>3];
             $1353 = $1352 < -3.14159265358979;
             if ($1353) {
              $1354 = +HEAPF64[$j1array3>>3];
              $1355 = $1354 + 6.2831853071795898;
              HEAPF64[$j1array3>>3] = $1355;
             }
            }
            HEAP8[$j1valid6>>0] = 1;
            $ij17 = 0;
            while(1) {
             $1356 = $ij17;
             $1357 = ($1356|0)<(1);
             if (!($1357)) {
              break;
             }
             $1358 = $ij17;
             $1359 = (($j1valid6) + ($1358)|0);
             $1360 = HEAP8[$1359>>0]|0;
             $1361 = $1360&1;
             L135: do {
              if ($1361) {
               $1362 = $ij17;
               $1363 = $1362&255;
               $1364 = (($5) + 539|0);
               HEAP8[$1364>>0] = $1363;
               $1365 = (($5) + 539|0);
               $1366 = (($1365) + 1|0);
               HEAP8[$1366>>0] = -1;
               $1367 = $ij17;
               $1368 = (($1367) + 1)|0;
               $iij18 = $1368;
               L138: while(1) {
                $1369 = $iij18;
                $1370 = ($1369|0)<(1);
                if (!($1370)) {
                 break;
                }
                $1371 = $iij18;
                $1372 = (($j1valid6) + ($1371)|0);
                $1373 = HEAP8[$1372>>0]|0;
                $1374 = $1373&1;
                do {
                 if ($1374) {
                  $1375 = $ij17;
                  $1376 = (($cj1array4) + ($1375<<3)|0);
                  $1377 = +HEAPF64[$1376>>3];
                  $1378 = $iij18;
                  $1379 = (($cj1array4) + ($1378<<3)|0);
                  $1380 = +HEAPF64[$1379>>3];
                  $1381 = $1377 - $1380;
                  $1382 = (+__Z5IKabsd($1381));
                  $1383 = $1382 < 9.9999999999999995E-7;
                  if (!($1383)) {
                   break;
                  }
                  $1384 = $ij17;
                  $1385 = (($sj1array5) + ($1384<<3)|0);
                  $1386 = +HEAPF64[$1385>>3];
                  $1387 = $iij18;
                  $1388 = (($sj1array5) + ($1387<<3)|0);
                  $1389 = +HEAPF64[$1388>>3];
                  $1390 = $1386 - $1389;
                  $1391 = (+__Z5IKabsd($1390));
                  $1392 = $1391 < 9.9999999999999995E-7;
                  if ($1392) {
                   label = 109;
                   break L138;
                  }
                 }
                } while(0);
                $1399 = $iij18;
                $1400 = (($1399) + 1)|0;
                $iij18 = $1400;
               }
               if ((label|0) == 109) {
                label = 0;
                $1393 = $iij18;
                $1394 = (($j1valid6) + ($1393)|0);
                HEAP8[$1394>>0] = 0;
                $1395 = $iij18;
                $1396 = $1395&255;
                $1397 = (($5) + 539|0);
                $1398 = (($1397) + 1|0);
                HEAP8[$1398>>0] = $1396;
               }
               $1401 = $ij17;
               $1402 = (($j1array3) + ($1401<<3)|0);
               $1403 = +HEAPF64[$1402>>3];
               $1404 = (($5) + 40|0);
               HEAPF64[$1404>>3] = $1403;
               $1405 = $ij17;
               $1406 = (($cj1array4) + ($1405<<3)|0);
               $1407 = +HEAPF64[$1406>>3];
               $1408 = (($5) + 48|0);
               HEAPF64[$1408>>3] = $1407;
               $1409 = $ij17;
               $1410 = (($sj1array5) + ($1409<<3)|0);
               $1411 = +HEAPF64[$1410>>3];
               $1412 = (($5) + 56|0);
               HEAPF64[$1412>>3] = $1411;
               $1413 = (($5) + 40|0);
               $1414 = +HEAPF64[$1413>>3];
               $1415 = (+__Z5IKcosd($1414));
               $x392 = $1415;
               $1416 = (($5) + 40|0);
               $1417 = +HEAPF64[$1416>>3];
               $1418 = (+__Z5IKsind($1417));
               $x393 = $1418;
               $1419 = (($5) + 8|0);
               $1420 = +HEAPF64[$1419>>3];
               $1421 = (($5) + 464|0);
               $1422 = +HEAPF64[$1421>>3];
               $1423 = $1420 * $1422;
               $x394 = $1423;
               $1424 = (($5) + 88|0);
               $1425 = +HEAPF64[$1424>>3];
               $1426 = 0.27000000000000002 * $1425;
               $x395 = $1426;
               $1427 = (($5) + 488|0);
               $1428 = +HEAPF64[$1427>>3];
               $1429 = (($5) + 16|0);
               $1430 = +HEAPF64[$1429>>3];
               $1431 = $1428 * $1430;
               $x396 = $1431;
               $1432 = (($5) + 512|0);
               $1433 = +HEAPF64[$1432>>3];
               $1434 = 1.0 * $1433;
               $x397 = $1434;
               $1435 = (($5) + 96|0);
               $1436 = +HEAPF64[$1435>>3];
               $1437 = 0.27000000000000002 * $1436;
               $x398 = $1437;
               $1438 = $x392;
               $1439 = 0.27000000000000002 * $1438;
               $x399 = $1439;
               $1440 = $x392;
               $1441 = 1.0 * $1440;
               $x400 = $1441;
               $1442 = $x393;
               $1443 = $x396;
               $1444 = $1442 * $1443;
               $x401 = $1444;
               $1445 = $x397;
               $1446 = -1.0 * $1445;
               $1447 = $x392;
               $1448 = -0.26500000000000001 * $1447;
               $1449 = $1446 + $1448;
               $1450 = $x393;
               $1451 = $x395;
               $1452 = $1450 * $1451;
               $1453 = $1449 + $1452;
               $1454 = $x392;
               $1455 = $x398;
               $1456 = $1454 * $1455;
               $1457 = $1453 + $1456;
               HEAPF64[$evalcond9>>3] = $1457;
               $1458 = $x396;
               $1459 = -1.0 * $1458;
               $1460 = 0.10000000000000001 + $1459;
               $1461 = $x394;
               $1462 = -1.0 * $1461;
               $1463 = $1460 + $1462;
               $1464 = $x393;
               $1465 = 0.26500000000000001 * $1464;
               $1466 = $1463 + $1465;
               $1467 = $x393;
               $1468 = -1.0 * $1467;
               $1469 = $x398;
               $1470 = $1468 * $1469;
               $1471 = $1466 + $1470;
               $1472 = $x392;
               $1473 = $x395;
               $1474 = $1472 * $1473;
               $1475 = $1471 + $1474;
               $1476 = (($evalcond9) + 8|0);
               HEAPF64[$1476>>3] = $1475;
               $1477 = $x398;
               $1478 = -0.26500000000000001 + $1477;
               $1479 = $x401;
               $1480 = $1478 + $1479;
               $1481 = $x393;
               $1482 = -0.10000000000000001 * $1481;
               $1483 = $1480 + $1482;
               $1484 = $x392;
               $1485 = -1.0 * $1484;
               $1486 = $x397;
               $1487 = $1485 * $1486;
               $1488 = $1483 + $1487;
               $1489 = $x393;
               $1490 = $x394;
               $1491 = $1489 * $1490;
               $1492 = $1488 + $1491;
               $1493 = (($evalcond9) + 16|0);
               HEAPF64[$1493>>3] = $1492;
               $1494 = $x394;
               $1495 = -1.0 * $1494;
               $1496 = $x400;
               $1497 = $1495 * $1496;
               $1498 = $x395;
               $1499 = $1497 + $1498;
               $1500 = $x392;
               $1501 = 0.10000000000000001 * $1500;
               $1502 = $1499 + $1501;
               $1503 = $x396;
               $1504 = -1.0 * $1503;
               $1505 = $x400;
               $1506 = $1504 * $1505;
               $1507 = $1502 + $1506;
               $1508 = $x393;
               $1509 = -1.0 * $1508;
               $1510 = $x397;
               $1511 = $1509 * $1510;
               $1512 = $1507 + $1511;
               $1513 = (($evalcond9) + 24|0);
               HEAPF64[$1513>>3] = $1512;
               $1514 = $x394;
               $1515 = 0.20000000000000001 * $1514;
               $1516 = -0.0073249999999999999 + $1515;
               $1517 = $x396;
               $1518 = 0.20000000000000001 * $1517;
               $1519 = $1516 + $1518;
               $1520 = $x393;
               $1521 = -0.052999999999999999 * $1520;
               $1522 = $1519 + $1521;
               $1523 = $x393;
               $1524 = 0.53000000000000003 * $1523;
               $1525 = $x394;
               $1526 = $1524 * $1525;
               $1527 = $1522 + $1526;
               $1528 = $x401;
               $1529 = 0.53000000000000003 * $1528;
               $1530 = $1527 + $1529;
               $1531 = (($5) + 528|0);
               $1532 = +HEAPF64[$1531>>3];
               $1533 = -1.0 * $1532;
               $1534 = $1530 + $1533;
               $1535 = (($5) + 512|0);
               $1536 = +HEAPF64[$1535>>3];
               $1537 = -0.53000000000000003 * $1536;
               $1538 = $x392;
               $1539 = $1537 * $1538;
               $1540 = $1534 + $1539;
               $1541 = (($evalcond9) + 32|0);
               HEAPF64[$1541>>3] = $1540;
               $1542 = +HEAPF64[$evalcond9>>3];
               $1543 = (+__Z5IKabsd($1542));
               $1544 = $1543 > 5.0000000000000004E-6;
               do {
                if (!($1544)) {
                 $1545 = (($evalcond9) + 8|0);
                 $1546 = +HEAPF64[$1545>>3];
                 $1547 = (+__Z5IKabsd($1546));
                 $1548 = $1547 > 5.0000000000000004E-6;
                 if ($1548) {
                  break;
                 }
                 $1549 = (($evalcond9) + 16|0);
                 $1550 = +HEAPF64[$1549>>3];
                 $1551 = (+__Z5IKabsd($1550));
                 $1552 = $1551 > 5.0000000000000004E-6;
                 if ($1552) {
                  break;
                 }
                 $1553 = (($evalcond9) + 24|0);
                 $1554 = +HEAPF64[$1553>>3];
                 $1555 = (+__Z5IKabsd($1554));
                 $1556 = $1555 > 5.0000000000000004E-6;
                 if ($1556) {
                  break;
                 }
                 $1557 = (($evalcond9) + 32|0);
                 $1558 = +HEAPF64[$1557>>3];
                 $1559 = (+__Z5IKabsd($1558));
                 $1560 = $1559 > 5.0000000000000004E-6;
                 if ($1560) {
                  break;
                 }
                 $1561 = $4;
                 __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1561);
                 break L135;
                }
               } while(0);
              } else {
              }
             } while(0);
             $1562 = $ij17;
             $1563 = (($1562) + 1)|0;
             $ij17 = $1563;
            }
           }
          } while(0);
          L158: do {
           if ((label|0) == 56) {
            label = 0;
            $784 = (($5) + 8|0);
            $785 = +HEAPF64[$784>>3];
            $786 = (($5) + 8|0);
            $787 = +HEAPF64[$786>>3];
            $788 = $785 * $787;
            $x58 = $788;
            $789 = (($5) + 488|0);
            $790 = +HEAPF64[$789>>3];
            $791 = (($5) + 488|0);
            $792 = +HEAPF64[$791>>3];
            $793 = $790 * $792;
            $x59 = $793;
            $794 = (($5) + 8|0);
            $795 = +HEAPF64[$794>>3];
            $796 = (($5) + 464|0);
            $797 = +HEAPF64[$796>>3];
            $798 = $795 * $797;
            $x60 = $798;
            $799 = (($5) + 88|0);
            $800 = +HEAPF64[$799>>3];
            $801 = 27.0 * $800;
            $x61 = $801;
            $802 = (($5) + 96|0);
            $803 = +HEAPF64[$802>>3];
            $804 = 27.0 * $803;
            $x62 = $804;
            $805 = (($5) + 488|0);
            $806 = +HEAPF64[$805>>3];
            $807 = (($5) + 16|0);
            $808 = +HEAPF64[$807>>3];
            $809 = $806 * $808;
            $x63 = $809;
            $810 = $x58;
            $811 = 100.0 * $810;
            $x64 = $811;
            $812 = $x59;
            $813 = 100.0 * $812;
            $814 = 1.0 + $813;
            $815 = (($5) + 512|0);
            $816 = +HEAPF64[$815>>3];
            $817 = (($5) + 512|0);
            $818 = +HEAPF64[$817>>3];
            $819 = $816 * $818;
            $820 = 100.0 * $819;
            $821 = $814 + $820;
            $822 = $x59;
            $823 = -1.0 * $822;
            $824 = $x64;
            $825 = $823 * $824;
            $826 = $821 + $825;
            $827 = $x60;
            $828 = -20.0 * $827;
            $829 = $826 + $828;
            $830 = $x63;
            $831 = -20.0 * $830;
            $832 = $829 + $831;
            $833 = $x60;
            $834 = 200.0 * $833;
            $835 = $x63;
            $836 = $834 * $835;
            $837 = $832 + $836;
            $838 = $x64;
            $839 = (($5) + 464|0);
            $840 = +HEAPF64[$839>>3];
            $841 = (($5) + 464|0);
            $842 = +HEAPF64[$841>>3];
            $843 = $840 * $842;
            $844 = $838 * $843;
            $845 = $837 + $844;
            $x65 = $845;
            $846 = $x65;
            HEAPF64[$j1eval2>>3] = $846;
            $847 = $x65;
            $848 = (+__Z6IKsignd($847));
            $849 = (($j1eval2) + 8|0);
            HEAPF64[$849>>3] = $848;
            $850 = $x63;
            $851 = 26.5 * $850;
            $852 = -2.6499999999999999 + $851;
            $853 = $x60;
            $854 = 26.5 * $853;
            $855 = $852 + $854;
            $856 = $x60;
            $857 = -1.0 * $856;
            $858 = $x62;
            $859 = $857 * $858;
            $860 = $855 + $859;
            $861 = (($5) + 512|0);
            $862 = +HEAPF64[$861>>3];
            $863 = $x61;
            $864 = $862 * $863;
            $865 = $860 + $864;
            $866 = $x62;
            $867 = -1.0 * $866;
            $868 = $x63;
            $869 = $867 * $868;
            $870 = $865 + $869;
            $871 = (($5) + 96|0);
            $872 = +HEAPF64[$871>>3];
            $873 = 2.7000000000000002 * $872;
            $874 = $870 + $873;
            $875 = (+__Z5IKabsd($874));
            $876 = $x60;
            $877 = $x61;
            $878 = $876 * $877;
            $879 = (($5) + 88|0);
            $880 = +HEAPF64[$879>>3];
            $881 = -2.7000000000000002 * $880;
            $882 = $878 + $881;
            $883 = $x61;
            $884 = $x63;
            $885 = $883 * $884;
            $886 = $882 + $885;
            $887 = (($5) + 512|0);
            $888 = +HEAPF64[$887>>3];
            $889 = $x62;
            $890 = $888 * $889;
            $891 = $886 + $890;
            $892 = (($5) + 512|0);
            $893 = +HEAPF64[$892>>3];
            $894 = -26.5 * $893;
            $895 = $891 + $894;
            $896 = (+__Z5IKabsd($895));
            $897 = $875 + $896;
            $898 = (($j1eval2) + 16|0);
            HEAPF64[$898>>3] = $897;
            $899 = +HEAPF64[$j1eval2>>3];
            $900 = (+__Z5IKabsd($899));
            $901 = $900 < 9.9999999999999995E-7;
            do {
             if (!($901)) {
              $902 = (($j1eval2) + 8|0);
              $903 = +HEAPF64[$902>>3];
              $904 = (+__Z5IKabsd($903));
              $905 = $904 < 9.9999999999999995E-7;
              if ($905) {
               break;
              }
              $906 = (($j1eval2) + 16|0);
              $907 = +HEAPF64[$906>>3];
              $908 = (+__Z5IKabsd($907));
              $909 = $908 < 9.9999999999999995E-7;
              if ($909) {
               break;
              }
              ;HEAP8[$j1valid+0>>0]=0|0;
              $910 = (($5) + 541|0);
              HEAP8[$910>>0] = 1;
              $911 = (($5) + 8|0);
              $912 = +HEAPF64[$911>>3];
              $913 = (($5) + 8|0);
              $914 = +HEAPF64[$913>>3];
              $915 = $912 * $914;
              $x66 = $915;
              $916 = (($5) + 488|0);
              $917 = +HEAPF64[$916>>3];
              $918 = (($5) + 488|0);
              $919 = +HEAPF64[$918>>3];
              $920 = $917 * $919;
              $x67 = $920;
              $921 = (($5) + 488|0);
              $922 = +HEAPF64[$921>>3];
              $923 = (($5) + 16|0);
              $924 = +HEAPF64[$923>>3];
              $925 = $922 * $924;
              $x68 = $925;
              $926 = (($5) + 96|0);
              $927 = +HEAPF64[$926>>3];
              $928 = 27.0 * $927;
              $x69 = $928;
              $929 = (($5) + 88|0);
              $930 = +HEAPF64[$929>>3];
              $931 = 27.0 * $930;
              $x70 = $931;
              $932 = (($5) + 8|0);
              $933 = +HEAPF64[$932>>3];
              $934 = (($5) + 464|0);
              $935 = +HEAPF64[$934>>3];
              $936 = $933 * $935;
              $x71 = $936;
              $937 = $x66;
              $938 = 100.0 * $937;
              $x72 = $938;
              $939 = $x71;
              $940 = 27.0 * $939;
              $x73 = $940;
              $941 = $x68;
              $942 = 26.5 * $941;
              $943 = -2.6499999999999999 + $942;
              $944 = (($5) + 512|0);
              $945 = +HEAPF64[$944>>3];
              $946 = $x70;
              $947 = $945 * $946;
              $948 = $943 + $947;
              $949 = $x71;
              $950 = 26.5 * $949;
              $951 = $948 + $950;
              $952 = $x68;
              $953 = -1.0 * $952;
              $954 = $x69;
              $955 = $953 * $954;
              $956 = $951 + $955;
              $957 = $x69;
              $958 = -1.0 * $957;
              $959 = $x71;
              $960 = $958 * $959;
              $961 = $956 + $960;
              $962 = (($5) + 96|0);
              $963 = +HEAPF64[$962>>3];
              $964 = 2.7000000000000002 * $963;
              $965 = $961 + $964;
              $966 = (($5) + 88|0);
              $967 = +HEAPF64[$966>>3];
              $968 = -2.7000000000000002 * $967;
              $969 = $x68;
              $970 = $x70;
              $971 = $969 * $970;
              $972 = $968 + $971;
              $973 = $x70;
              $974 = $x71;
              $975 = $973 * $974;
              $976 = $972 + $975;
              $977 = (($5) + 512|0);
              $978 = +HEAPF64[$977>>3];
              $979 = $x69;
              $980 = $978 * $979;
              $981 = $976 + $980;
              $982 = (($5) + 512|0);
              $983 = +HEAPF64[$982>>3];
              $984 = -26.5 * $983;
              $985 = $981 + $984;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x74,$965,$985,1.9999999999999999E-6);
              $986 = (($x74) + 8|0);
              $987 = HEAP8[$986>>0]|0;
              $988 = $987&1;
              if (!($988)) {
               break L56;
              }
              $989 = $x72;
              $990 = (($5) + 464|0);
              $991 = +HEAPF64[$990>>3];
              $992 = (($5) + 464|0);
              $993 = +HEAPF64[$992>>3];
              $994 = $991 * $993;
              $995 = $989 * $994;
              $996 = 1.0 + $995;
              $997 = (($5) + 512|0);
              $998 = +HEAPF64[$997>>3];
              $999 = (($5) + 512|0);
              $1000 = +HEAPF64[$999>>3];
              $1001 = $998 * $1000;
              $1002 = 100.0 * $1001;
              $1003 = $996 + $1002;
              $1004 = $x68;
              $1005 = -20.0 * $1004;
              $1006 = $1003 + $1005;
              $1007 = $x71;
              $1008 = -20.0 * $1007;
              $1009 = $1006 + $1008;
              $1010 = $x67;
              $1011 = -1.0 * $1010;
              $1012 = $x72;
              $1013 = $1011 * $1012;
              $1014 = $1009 + $1013;
              $1015 = $x68;
              $1016 = 200.0 * $1015;
              $1017 = $x71;
              $1018 = $1016 * $1017;
              $1019 = $1014 + $1018;
              $1020 = $x67;
              $1021 = 100.0 * $1020;
              $1022 = $1019 + $1021;
              $1023 = (+__Z6IKsignd($1022));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x75,$1023,-1);
              $1024 = (($x75) + 8|0);
              $1025 = HEAP8[$1024>>0]|0;
              $1026 = $1025&1;
              if (!($1026)) {
               break L56;
              }
              $1027 = +HEAPF64[$x74>>3];
              $1028 = -1.5707963267949001 + $1027;
              $1029 = +HEAPF64[$x75>>3];
              $1030 = 1.5707963267949001 * $1029;
              $1031 = $1028 + $1030;
              HEAPF64[$j1array>>3] = $1031;
              $1032 = +HEAPF64[$j1array>>3];
              $1033 = (+__Z5IKsind($1032));
              HEAPF64[$sj1array>>3] = $1033;
              $1034 = +HEAPF64[$j1array>>3];
              $1035 = (+__Z5IKcosd($1034));
              HEAPF64[$cj1array>>3] = $1035;
              $1036 = +HEAPF64[$j1array>>3];
              $1037 = $1036 > 3.14159265358979;
              if ($1037) {
               $1038 = +HEAPF64[$j1array>>3];
               $1039 = $1038 - 6.2831853071795898;
               HEAPF64[$j1array>>3] = $1039;
              } else {
               $1040 = +HEAPF64[$j1array>>3];
               $1041 = $1040 < -3.14159265358979;
               if ($1041) {
                $1042 = +HEAPF64[$j1array>>3];
                $1043 = $1042 + 6.2831853071795898;
                HEAPF64[$j1array>>3] = $1043;
               }
              }
              HEAP8[$j1valid>>0] = 1;
              $ij1 = 0;
              while(1) {
               $1044 = $ij1;
               $1045 = ($1044|0)<(1);
               if (!($1045)) {
                break;
               }
               $1046 = $ij1;
               $1047 = (($j1valid) + ($1046)|0);
               $1048 = HEAP8[$1047>>0]|0;
               $1049 = $1048&1;
               L180: do {
                if ($1049) {
                 $1050 = $ij1;
                 $1051 = $1050&255;
                 $1052 = (($5) + 539|0);
                 HEAP8[$1052>>0] = $1051;
                 $1053 = (($5) + 539|0);
                 $1054 = (($1053) + 1|0);
                 HEAP8[$1054>>0] = -1;
                 $1055 = $ij1;
                 $1056 = (($1055) + 1)|0;
                 $iij1 = $1056;
                 L183: while(1) {
                  $1057 = $iij1;
                  $1058 = ($1057|0)<(1);
                  if (!($1058)) {
                   break;
                  }
                  $1059 = $iij1;
                  $1060 = (($j1valid) + ($1059)|0);
                  $1061 = HEAP8[$1060>>0]|0;
                  $1062 = $1061&1;
                  do {
                   if ($1062) {
                    $1063 = $ij1;
                    $1064 = (($cj1array) + ($1063<<3)|0);
                    $1065 = +HEAPF64[$1064>>3];
                    $1066 = $iij1;
                    $1067 = (($cj1array) + ($1066<<3)|0);
                    $1068 = +HEAPF64[$1067>>3];
                    $1069 = $1065 - $1068;
                    $1070 = (+__Z5IKabsd($1069));
                    $1071 = $1070 < 9.9999999999999995E-7;
                    if (!($1071)) {
                     break;
                    }
                    $1072 = $ij1;
                    $1073 = (($sj1array) + ($1072<<3)|0);
                    $1074 = +HEAPF64[$1073>>3];
                    $1075 = $iij1;
                    $1076 = (($sj1array) + ($1075<<3)|0);
                    $1077 = +HEAPF64[$1076>>3];
                    $1078 = $1074 - $1077;
                    $1079 = (+__Z5IKabsd($1078));
                    $1080 = $1079 < 9.9999999999999995E-7;
                    if ($1080) {
                     label = 78;
                     break L183;
                    }
                   }
                  } while(0);
                  $1087 = $iij1;
                  $1088 = (($1087) + 1)|0;
                  $iij1 = $1088;
                 }
                 if ((label|0) == 78) {
                  label = 0;
                  $1081 = $iij1;
                  $1082 = (($j1valid) + ($1081)|0);
                  HEAP8[$1082>>0] = 0;
                  $1083 = $iij1;
                  $1084 = $1083&255;
                  $1085 = (($5) + 539|0);
                  $1086 = (($1085) + 1|0);
                  HEAP8[$1086>>0] = $1084;
                 }
                 $1089 = $ij1;
                 $1090 = (($j1array) + ($1089<<3)|0);
                 $1091 = +HEAPF64[$1090>>3];
                 $1092 = (($5) + 40|0);
                 HEAPF64[$1092>>3] = $1091;
                 $1093 = $ij1;
                 $1094 = (($cj1array) + ($1093<<3)|0);
                 $1095 = +HEAPF64[$1094>>3];
                 $1096 = (($5) + 48|0);
                 HEAPF64[$1096>>3] = $1095;
                 $1097 = $ij1;
                 $1098 = (($sj1array) + ($1097<<3)|0);
                 $1099 = +HEAPF64[$1098>>3];
                 $1100 = (($5) + 56|0);
                 HEAPF64[$1100>>3] = $1099;
                 $1101 = (($5) + 40|0);
                 $1102 = +HEAPF64[$1101>>3];
                 $1103 = (+__Z5IKcosd($1102));
                 $x76 = $1103;
                 $1104 = (($5) + 40|0);
                 $1105 = +HEAPF64[$1104>>3];
                 $1106 = (+__Z5IKsind($1105));
                 $x77 = $1106;
                 $1107 = (($5) + 8|0);
                 $1108 = +HEAPF64[$1107>>3];
                 $1109 = (($5) + 464|0);
                 $1110 = +HEAPF64[$1109>>3];
                 $1111 = $1108 * $1110;
                 $x78 = $1111;
                 $1112 = (($5) + 88|0);
                 $1113 = +HEAPF64[$1112>>3];
                 $1114 = 0.27000000000000002 * $1113;
                 $x79 = $1114;
                 $1115 = (($5) + 488|0);
                 $1116 = +HEAPF64[$1115>>3];
                 $1117 = (($5) + 16|0);
                 $1118 = +HEAPF64[$1117>>3];
                 $1119 = $1116 * $1118;
                 $x80 = $1119;
                 $1120 = (($5) + 512|0);
                 $1121 = +HEAPF64[$1120>>3];
                 $1122 = 1.0 * $1121;
                 $x81 = $1122;
                 $1123 = (($5) + 96|0);
                 $1124 = +HEAPF64[$1123>>3];
                 $1125 = 0.27000000000000002 * $1124;
                 $x82 = $1125;
                 $1126 = $x76;
                 $1127 = 0.27000000000000002 * $1126;
                 $x83 = $1127;
                 $1128 = $x76;
                 $1129 = 1.0 * $1128;
                 $x84 = $1129;
                 $1130 = $x77;
                 $1131 = $x80;
                 $1132 = $1130 * $1131;
                 $x85 = $1132;
                 $1133 = $x76;
                 $1134 = $x82;
                 $1135 = $1133 * $1134;
                 $1136 = $x76;
                 $1137 = -0.26500000000000001 * $1136;
                 $1138 = $1135 + $1137;
                 $1139 = $x81;
                 $1140 = -1.0 * $1139;
                 $1141 = $1138 + $1140;
                 $1142 = $x77;
                 $1143 = $x79;
                 $1144 = $1142 * $1143;
                 $1145 = $1141 + $1144;
                 HEAPF64[$evalcond>>3] = $1145;
                 $1146 = $x77;
                 $1147 = 0.26500000000000001 * $1146;
                 $1148 = 0.10000000000000001 + $1147;
                 $1149 = $x77;
                 $1150 = -1.0 * $1149;
                 $1151 = $x82;
                 $1152 = $1150 * $1151;
                 $1153 = $1148 + $1152;
                 $1154 = $x76;
                 $1155 = $x79;
                 $1156 = $1154 * $1155;
                 $1157 = $1153 + $1156;
                 $1158 = $x80;
                 $1159 = -1.0 * $1158;
                 $1160 = $1157 + $1159;
                 $1161 = $x78;
                 $1162 = -1.0 * $1161;
                 $1163 = $1160 + $1162;
                 $1164 = (($evalcond) + 8|0);
                 HEAPF64[$1164>>3] = $1163;
                 $1165 = $x77;
                 $1166 = -0.10000000000000001 * $1165;
                 $1167 = -0.26500000000000001 + $1166;
                 $1168 = $x82;
                 $1169 = $1167 + $1168;
                 $1170 = $x85;
                 $1171 = $1169 + $1170;
                 $1172 = $x76;
                 $1173 = -1.0 * $1172;
                 $1174 = $x81;
                 $1175 = $1173 * $1174;
                 $1176 = $1171 + $1175;
                 $1177 = $x77;
                 $1178 = $x78;
                 $1179 = $1177 * $1178;
                 $1180 = $1176 + $1179;
                 $1181 = (($evalcond) + 16|0);
                 HEAPF64[$1181>>3] = $1180;
                 $1182 = $x80;
                 $1183 = -1.0 * $1182;
                 $1184 = $x84;
                 $1185 = $1183 * $1184;
                 $1186 = $x76;
                 $1187 = 0.10000000000000001 * $1186;
                 $1188 = $1185 + $1187;
                 $1189 = $x77;
                 $1190 = -1.0 * $1189;
                 $1191 = $x81;
                 $1192 = $1190 * $1191;
                 $1193 = $1188 + $1192;
                 $1194 = $x78;
                 $1195 = -1.0 * $1194;
                 $1196 = $x84;
                 $1197 = $1195 * $1196;
                 $1198 = $1193 + $1197;
                 $1199 = $x79;
                 $1200 = $1198 + $1199;
                 $1201 = (($evalcond) + 24|0);
                 HEAPF64[$1201>>3] = $1200;
                 $1202 = $x85;
                 $1203 = 0.53000000000000003 * $1202;
                 $1204 = -0.0073249999999999999 + $1203;
                 $1205 = $x77;
                 $1206 = -0.052999999999999999 * $1205;
                 $1207 = $1204 + $1206;
                 $1208 = $x78;
                 $1209 = 0.20000000000000001 * $1208;
                 $1210 = $1207 + $1209;
                 $1211 = $x80;
                 $1212 = 0.20000000000000001 * $1211;
                 $1213 = $1210 + $1212;
                 $1214 = $x77;
                 $1215 = 0.53000000000000003 * $1214;
                 $1216 = $x78;
                 $1217 = $1215 * $1216;
                 $1218 = $1213 + $1217;
                 $1219 = (($5) + 528|0);
                 $1220 = +HEAPF64[$1219>>3];
                 $1221 = -1.0 * $1220;
                 $1222 = $1218 + $1221;
                 $1223 = (($5) + 512|0);
                 $1224 = +HEAPF64[$1223>>3];
                 $1225 = -0.53000000000000003 * $1224;
                 $1226 = $x76;
                 $1227 = $1225 * $1226;
                 $1228 = $1222 + $1227;
                 $1229 = (($evalcond) + 32|0);
                 HEAPF64[$1229>>3] = $1228;
                 $1230 = +HEAPF64[$evalcond>>3];
                 $1231 = (+__Z5IKabsd($1230));
                 $1232 = $1231 > 5.0000000000000004E-6;
                 do {
                  if (!($1232)) {
                   $1233 = (($evalcond) + 8|0);
                   $1234 = +HEAPF64[$1233>>3];
                   $1235 = (+__Z5IKabsd($1234));
                   $1236 = $1235 > 5.0000000000000004E-6;
                   if ($1236) {
                    break;
                   }
                   $1237 = (($evalcond) + 16|0);
                   $1238 = +HEAPF64[$1237>>3];
                   $1239 = (+__Z5IKabsd($1238));
                   $1240 = $1239 > 5.0000000000000004E-6;
                   if ($1240) {
                    break;
                   }
                   $1241 = (($evalcond) + 24|0);
                   $1242 = +HEAPF64[$1241>>3];
                   $1243 = (+__Z5IKabsd($1242));
                   $1244 = $1243 > 5.0000000000000004E-6;
                   if ($1244) {
                    break;
                   }
                   $1245 = (($evalcond) + 32|0);
                   $1246 = +HEAPF64[$1245>>3];
                   $1247 = (+__Z5IKabsd($1246));
                   $1248 = $1247 > 5.0000000000000004E-6;
                   if ($1248) {
                    break;
                   }
                   $1249 = $4;
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1249);
                   break L180;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $1250 = $ij1;
               $1251 = (($1250) + 1)|0;
               $ij1 = $1251;
              }
              break L158;
             }
            } while(0);
            break L56;
           }
          } while(0);
         }
        } else {
        }
       } while(0);
       $1869 = $ij2;
       $1870 = (($1869) + 1)|0;
       $ij2 = $1870;
      }
     } else {
     }
     $1871 = $ij0;
     $1872 = (($1871) + 1)|0;
     $ij0 = $1872;
    }
   }
  } while(0);
  $1873 = $dummyiter;
  $1874 = (($1873) + 1)|0;
  $dummyiter = $1874;
 }
 $1875 = $4;
 $1876 = HEAP32[$1875>>2]|0;
 $1877 = (($1876) + 16|0);
 $1878 = HEAP32[$1877>>2]|0;
 $1879 = (FUNCTION_TABLE_ii[$1878 & 1023]($1875)|0);
 $1880 = ($1879>>>0)>(0);
 STACKTOP = sp;return ($1880|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($3);
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(359,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(360,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(361,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(362,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<3)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $it = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $it = sp;
 $0 = $this;
 $1 = $index;
 $4 = $0;
 $5 = $1;
 $6 = (($4) + 4|0);
 $7 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($6)|0);
 $8 = ($5>>>0)>=($7>>>0);
 if (!($8)) {
  $14 = (($4) + 4|0);
  __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($it,$14);
  $15 = $1;
  __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($it,$15);
  $16 = (__ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($it)|0);
  STACKTOP = sp;return ($16|0);
 }
 $9 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($9|0),(368|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  ___cxa_throw(($9|0),(2560|0),(62|0));
  // unreachable;
 }
 $12 = ___cxa_find_matching_catch()|0;
 $13 = tempRet0;
 $2 = $12;
 $3 = $13;
 ___cxa_free_exception(($9|0));
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(364,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN6ikfast18IkSolutionListBaseIdED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(1,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $6 = $0;
 $7 = (($6) + 4|0);
 $8 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $index = $8;
 $9 = (($6) + 4|0);
 $10 = $1;
 $11 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($3,$10,$11);
 __THREW__ = 0;
 invoke_vii(365,($9|0),($3|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  __ZN6ikfast10IkSolutionIdED2Ev($3);
  $14 = $index;
  STACKTOP = sp;return ($14|0);
 }
 $15 = ___cxa_find_matching_catch()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $19 = $4;
 $20 = $5;
 ___resumeException($19|0);
 // unreachable;
 return (0)|0;
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($2);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (528 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 16|0);
 __THREW__ = 0;
 invoke_vi(366,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $1 = $11;
   $2 = $12;
   $13 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   } else {
    break;
   }
  } else {
   $8 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch()|0;
    $17 = tempRet0;
    $1 = $16;
    $2 = $17;
    break;
   } else {
    __ZN6ikfast14IkSolutionBaseIdED2Ev($3);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 }
 $20 = $1;
 $21 = $2;
 ___resumeException($20|0);
 // unreachable;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 16|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  $14 = ($13|0)<(0);
  if ($14) {
   $15 = (($3) + 4|0);
   $16 = $i;
   $17 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($15,$16)|0);
   $18 = (($17) + 8|0);
   $19 = +HEAPF64[$18>>3];
   $20 = $i;
   $21 = $1;
   $22 = (($21) + ($20<<3)|0);
   HEAPF64[$22>>3] = $19;
  } else {
   $23 = (($3) + 4|0);
   $24 = $i;
   $25 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($23,$24)|0);
   $26 = (($25) + 16|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27 << 24 >> 24;
   $29 = $2;
   $30 = (($29) + ($28<<3)|0);
   $31 = +HEAPF64[$30>>3];
   $32 = (($3) + 4|0);
   $33 = $i;
   $34 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($32,$33)|0);
   $35 = +HEAPF64[$34>>3];
   $36 = $31 * $35;
   $37 = (($3) + 4|0);
   $38 = $i;
   $39 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($37,$38)|0);
   $40 = (($39) + 8|0);
   $41 = +HEAPF64[$40>>3];
   $42 = $36 + $41;
   $43 = $i;
   $44 = $1;
   $45 = (($44) + ($43<<3)|0);
   HEAPF64[$45>>3] = $42;
   $46 = $i;
   $47 = $1;
   $48 = (($47) + ($46<<3)|0);
   $49 = +HEAPF64[$48>>3];
   $50 = $49 > 3.14159265358979;
   if ($50) {
    $51 = $i;
    $52 = $1;
    $53 = (($52) + ($51<<3)|0);
    $54 = +HEAPF64[$53>>3];
    $55 = $54 - 6.2831853071795898;
    HEAPF64[$53>>3] = $55;
   } else {
    $56 = $i;
    $57 = $1;
    $58 = (($57) + ($56<<3)|0);
    $59 = +HEAPF64[$58>>3];
    $60 = $59 < -3.14159265358979;
    if ($60) {
     $61 = $i;
     $62 = $1;
     $63 = (($62) + ($61<<3)|0);
     $64 = +HEAPF64[$63>>3];
     $65 = $64 + 6.2831853071795898;
     HEAPF64[$63>>3] = $65;
    }
   }
  }
  $66 = $i;
  $67 = (($66) + 1)|0;
  $i = $67;
 }
 STACKTOP = sp;return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 16|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   label = 24;
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 18|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = ($13|0)==(255);
  if ($14) {
   label = 4;
   break;
  }
  $20 = (($3) + 4|0);
  $21 = $i;
  $22 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($20,$21)|0);
  $23 = (($22) + 18|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = ($25|0)>(0);
  if ($26) {
   $27 = (($3) + 4|0);
   $28 = $i;
   $29 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($27,$28)|0);
   $30 = (($29) + 19|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&255;
   $33 = (($3) + 4|0);
   $34 = $i;
   $35 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($33,$34)|0);
   $36 = (($35) + 18|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($32|0)>=($38|0);
   if ($39) {
    label = 9;
    break;
   }
   $45 = (($3) + 4|0);
   $46 = $i;
   $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
   $48 = (($47) + 19|0);
   $49 = (($48) + 1|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = ($51|0)!=(255);
   if ($52) {
    $53 = (($3) + 4|0);
    $54 = $i;
    $55 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($53,$54)|0);
    $56 = (($55) + 19|0);
    $57 = (($56) + 1|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = (($3) + 4|0);
    $61 = $i;
    $62 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($60,$61)|0);
    $63 = (($62) + 18|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = ($59|0)>=($65|0);
    if ($66) {
     label = 14;
     break;
    }
   }
  }
  $72 = (($3) + 4|0);
  $73 = $i;
  $74 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($72,$73)|0);
  $75 = (($74) + 8|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (__Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($76)|0);
  if (!($77)) {
   label = 19;
   break;
  }
  $83 = $i;
  $84 = (($83) + 1)|0;
  $i = $84;
 }
 if ((label|0) == 4) {
  $15 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($15|0),(656|0));
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   ___cxa_throw(($15|0),(2560|0),(62|0));
   // unreachable;
  }
  $18 = ___cxa_find_matching_catch()|0;
  $19 = tempRet0;
  $1 = $18;
  $2 = $19;
  ___cxa_free_exception(($15|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 9) {
  $40 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($40|0),(696|0));
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if (!($42)) {
   ___cxa_throw(($40|0),(2560|0),(62|0));
   // unreachable;
  }
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $1 = $43;
  $2 = $44;
  ___cxa_free_exception(($40|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 14) {
  $67 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($67|0),(736|0));
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if (!($69)) {
   ___cxa_throw(($67|0),(2560|0),(62|0));
   // unreachable;
  }
  $70 = ___cxa_find_matching_catch()|0;
  $71 = tempRet0;
  $1 = $70;
  $2 = $71;
  ___cxa_free_exception(($67|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 19) {
  $78 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($78|0),(776|0));
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if (!($80)) {
   ___cxa_throw(($78|0),(2560|0),(62|0));
   // unreachable;
  }
  $81 = ___cxa_find_matching_catch()|0;
  $82 = tempRet0;
  $1 = $81;
  $2 = $82;
  ___cxa_free_exception(($78|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 24) {
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0, $j = 0, $j1 = 0, $j2 = 0;
 var $orgsize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $0 = $this;
 $1 = $v;
 $4 = $0;
 $5 = $1;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($5,0);
 $6 = $1;
 HEAP32[$2>>2] = 0;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($6,$2);
 $7 = (($4) + 4|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $9 = (($8) - 1)|0;
 $i = $9;
 while(1) {
  $10 = $i;
  $11 = ($10|0)>=(0);
  if (!($11)) {
   break;
  }
  $12 = (($4) + 4|0);
  $13 = $i;
  $14 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($12,$13)|0);
  $15 = (($14) + 18|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16&255;
  $18 = ($17|0)!=(255);
  if ($18) {
   $19 = (($4) + 4|0);
   $20 = $i;
   $21 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($19,$20)|0);
   $22 = (($21) + 18|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23&255;
   $25 = ($24|0)>(1);
   if ($25) {
    $j = 0;
    while(1) {
     $26 = $j;
     $27 = $1;
     $28 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($27)|0);
     $29 = ($26>>>0)<($28>>>0);
     if (!($29)) {
      break;
     }
     $30 = (($4) + 4|0);
     $31 = $i;
     $32 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($30,$31)|0);
     $33 = (($32) + 18|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $1;
     $37 = $j;
     $38 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($36,$37)|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = Math_imul($39, $35)|0;
     HEAP32[$38>>2] = $40;
     $41 = $j;
     $42 = (($41) + 1)|0;
     $j = $42;
    }
    $43 = $1;
    $44 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($43)|0);
    $orgsize = $44;
    $45 = (($4) + 4|0);
    $46 = $i;
    $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
    $48 = (($47) + 19|0);
    $49 = (($48) + 1|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = $50&255;
    $52 = ($51|0)!=(255);
    if ($52) {
     $j1 = 0;
     while(1) {
      $53 = $j1;
      $54 = $orgsize;
      $55 = ($53>>>0)<($54>>>0);
      if (!($55)) {
       break;
      }
      $56 = $1;
      $57 = $1;
      $58 = $j1;
      $59 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($57,$58)|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = (($4) + 4|0);
      $62 = $i;
      $63 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($61,$62)|0);
      $64 = (($63) + 19|0);
      $65 = (($64) + 1|0);
      $66 = HEAP8[$65>>0]|0;
      $67 = $66&255;
      $68 = (($60) + ($67))|0;
      HEAP32[$3>>2] = $68;
      __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($56,$3);
      $69 = $j1;
      $70 = (($69) + 1)|0;
      $j1 = $70;
     }
    }
    $71 = (($4) + 4|0);
    $72 = $i;
    $73 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($71,$72)|0);
    $74 = (($73) + 19|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = $75&255;
    $77 = ($76|0)!=(255);
    if ($77) {
     $j2 = 0;
     while(1) {
      $78 = $j2;
      $79 = $orgsize;
      $80 = ($78>>>0)<($79>>>0);
      if (!($80)) {
       break;
      }
      $81 = (($4) + 4|0);
      $82 = $i;
      $83 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($81,$82)|0);
      $84 = (($83) + 19|0);
      $85 = HEAP8[$84>>0]|0;
      $86 = $85&255;
      $87 = $1;
      $88 = $j2;
      $89 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($87,$88)|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (($90) + ($86))|0;
      HEAP32[$89>>2] = $91;
      $92 = $j2;
      $93 = (($92) + 1)|0;
      $j2 = $93;
     }
    }
   }
  }
  $94 = $i;
  $95 = (($94) + -1)|0;
  $i = $95;
 }
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vii(368,($3|0),(1040|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  $6 = (($3) + 64|0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch()|0;
 $8 = tempRet0;
 $1 = $7;
 $2 = $8;
 $9 = (($3) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(21,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 STACKTOP = sp;return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($2);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($5);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (1312 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 32|0);
 __THREW__ = 0;
 invoke_vi(369,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(89,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(41,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__noff = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $__noff = sp;
 $2 = $this;
 $6 = $3;
 $7 = $6;
 HEAP32[$7>>2] = $0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $4 = $__way;
 $5 = $__wch;
 $10 = $2;
 $11 = (($10) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
 $14 = ($12>>>0)<($13>>>0);
 if ($14) {
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
  $16 = (($10) + 44|0);
  HEAP32[$16>>2] = $15;
 }
 $17 = $5;
 $18 = $17 & 24;
 $19 = ($18|0)==(0);
 if ($19) {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $20 = $5;
 $21 = $20 & 24;
 $22 = ($21|0)==(24);
 if ($22) {
  $23 = $4;
  $24 = ($23|0)==(1);
  if ($24) {
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
   STACKTOP = sp;return;
  }
 }
 $25 = $4;
 if ((($25|0) == 1)) {
  $30 = $5;
  $31 = $30 & 8;
  $32 = ($31|0)!=(0);
  if ($32) {
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
   $35 = $33;
   $36 = $34;
   $37 = (($35) - ($36))|0;
   $38 = ($37|0)<(0);
   $39 = $38 << 31 >> 31;
   $40 = $__noff;
   $41 = $40;
   HEAP32[$41>>2] = $37;
   $42 = (($40) + 4)|0;
   $43 = $42;
   HEAP32[$43>>2] = $39;
  } else {
   $44 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
   $45 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
   $46 = $44;
   $47 = $45;
   $48 = (($46) - ($47))|0;
   $49 = ($48|0)<(0);
   $50 = $49 << 31 >> 31;
   $51 = $__noff;
   $52 = $51;
   HEAP32[$52>>2] = $48;
   $53 = (($51) + 4)|0;
   $54 = $53;
   HEAP32[$54>>2] = $50;
  }
 } else if ((($25|0) == 0)) {
  $26 = $__noff;
  $27 = $26;
  HEAP32[$27>>2] = 0;
  $28 = (($26) + 4)|0;
  $29 = $28;
  HEAP32[$29>>2] = 0;
 } else if ((($25|0) == 2)) {
  $55 = (($10) + 44|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($10) + 32|0);
  $58 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($57)|0);
  $59 = $56;
  $60 = $58;
  $61 = (($59) - ($60))|0;
  $62 = ($61|0)<(0);
  $63 = $62 << 31 >> 31;
  $64 = $__noff;
  $65 = $64;
  HEAP32[$65>>2] = $61;
  $66 = (($64) + 4)|0;
  $67 = $66;
  HEAP32[$67>>2] = $63;
 } else {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $68 = $3;
 $69 = $68;
 $70 = HEAP32[$69>>2]|0;
 $71 = (($68) + 4)|0;
 $72 = $71;
 $73 = HEAP32[$72>>2]|0;
 $74 = $__noff;
 $75 = $74;
 $76 = HEAP32[$75>>2]|0;
 $77 = (($74) + 4)|0;
 $78 = $77;
 $79 = HEAP32[$78>>2]|0;
 $80 = (_i64Add(($76|0),($79|0),($70|0),($73|0))|0);
 $81 = tempRet0;
 $82 = $__noff;
 $83 = $82;
 HEAP32[$83>>2] = $80;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = $81;
 $86 = $__noff;
 $87 = $86;
 $88 = HEAP32[$87>>2]|0;
 $89 = (($86) + 4)|0;
 $90 = $89;
 $91 = HEAP32[$90>>2]|0;
 $92 = ($91|0)<(0);
 if (!($92)) {
  $93 = (($10) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (($10) + 32|0);
  $96 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($95)|0);
  $97 = $94;
  $98 = $96;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(0);
  $101 = $100 << 31 >> 31;
  $102 = $__noff;
  $103 = $102;
  $104 = HEAP32[$103>>2]|0;
  $105 = (($102) + 4)|0;
  $106 = $105;
  $107 = HEAP32[$106>>2]|0;
  $108 = ($101|0)<($107|0);
  $109 = ($99>>>0)<($104>>>0);
  $110 = ($101|0)==($107|0);
  $111 = $110 & $109;
  $112 = $108 | $111;
  if (!($112)) {
   $113 = $__noff;
   $114 = $113;
   $115 = HEAP32[$114>>2]|0;
   $116 = (($113) + 4)|0;
   $117 = $116;
   $118 = HEAP32[$117>>2]|0;
   $119 = ($115|0)!=(0);
   $120 = ($118|0)!=(0);
   $121 = $119 | $120;
   if ($121) {
    $122 = $5;
    $123 = $122 & 8;
    $124 = ($123|0)!=(0);
    if ($124) {
     $125 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
     $126 = ($125|0)==(0|0);
     if ($126) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
    $127 = $5;
    $128 = $127 & 16;
    $129 = ($128|0)!=(0);
    if ($129) {
     $130 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
     $131 = ($130|0)==(0|0);
     if ($131) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
   }
   $132 = $5;
   $133 = $132 & 8;
   $134 = ($133|0)!=(0);
   if ($134) {
    $135 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $136 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $137 = $__noff;
    $138 = $137;
    $139 = HEAP32[$138>>2]|0;
    $140 = (($137) + 4)|0;
    $141 = $140;
    $142 = HEAP32[$141>>2]|0;
    $143 = (($136) + ($139)|0);
    $144 = (($10) + 44|0);
    $145 = HEAP32[$144>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($10,$135,$143,$145);
   }
   $146 = $5;
   $147 = $146 & 16;
   $148 = ($147|0)!=(0);
   if ($148) {
    $149 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
    $150 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($10)|0);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($10,$149,$150);
    $151 = $__noff;
    $152 = $151;
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 4)|0;
    $155 = $154;
    $156 = HEAP32[$155>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($10,$153);
   }
   $157 = $__noff;
   $158 = $157;
   $159 = HEAP32[$158>>2]|0;
   $160 = (($157) + 4)|0;
   $161 = $160;
   $162 = HEAP32[$161>>2]|0;
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,$159,$162);
   STACKTOP = sp;return;
  }
 }
 __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__14fposI11__mbstate_tEcvxEv($__sp)|0);
 $7 = tempRet0;
 $8 = $1;
 FUNCTION_TABLE_viiiiii[$5 & 511]($agg$result,$2,$6,$7,0,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $3 = (($2) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
  $8 = (($2) + 44|0);
  HEAP32[$8>>2] = $7;
 }
 $9 = (($2) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 8;
 $12 = ($11|0)!=(0);
 do {
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $14 = (($2) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($13>>>0)<($15>>>0);
   if ($16) {
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($2)|0);
    $18 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$18,$20);
   }
   $21 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $23 = ($21>>>0)<($22>>>0);
   if (!($23)) {
    break;
   }
   $24 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($25)|0);
   $0 = $26;
   $28 = $0;
   STACKTOP = sp;return ($28|0);
  }
 } while(0);
 $27 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $27;
 $28 = $0;
 STACKTOP = sp;return ($28|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__c;
 $3 = $1;
 $4 = (($3) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
 $7 = ($5>>>0)<($6>>>0);
 if ($7) {
  $8 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
  $9 = (($3) + 44|0);
  HEAP32[$9>>2] = $8;
 }
 $10 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
 $12 = ($10>>>0)<($11>>>0);
 do {
  if ($12) {
   $13 = $2;
   $14 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $15 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($13,$14)|0);
   if ($15) {
    $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $18 = (($17) + -1|0);
    $19 = (($3) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$16,$18,$20);
    $21 = $2;
    $22 = (__ZNSt3__111char_traitsIcE7not_eofEi($21)|0);
    $0 = $22;
    $43 = $0;
    STACKTOP = sp;return ($43|0);
   }
   $23 = (($3) + 48|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $24 & 16;
   $26 = ($25|0)!=(0);
   if (!($26)) {
    $27 = $2;
    $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($27)|0);
    $29 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $30 = (($29) + -1|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = (__ZNSt3__111char_traitsIcE2eqEcc($28,$31)|0);
    if (!($32)) {
     break;
    }
   }
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   $35 = (($34) + -1|0);
   $36 = (($3) + 44|0);
   $37 = HEAP32[$36>>2]|0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$33,$35,$37);
   $38 = $2;
   $39 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($38)|0);
   $40 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   HEAP8[$40>>0] = $39;
   $41 = $2;
   $0 = $41;
   $43 = $0;
   STACKTOP = sp;return ($43|0);
  }
 } while(0);
 $42 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $42;
 $43 = $0;
 STACKTOP = sp;return ($43|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $__hm = 0, $__ninp = 0, $__nout = 0, $__p = 0, $__p1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 4|0;
 $1 = $this;
 $2 = $__c;
 $7 = $1;
 $8 = $2;
 $9 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($8,$9)|0);
 if ($10) {
  $92 = $2;
  $93 = (__ZNSt3__111char_traitsIcE7not_eofEi($92)|0);
  $0 = $93;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($7)|0);
 $12 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($7)|0);
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $__ninp = $15;
 $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($7)|0);
 $18 = ($16|0)==($17|0);
 do {
  if ($18) {
   $19 = (($7) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = $20 & 16;
   $22 = ($21|0)!=(0);
   if (!($22)) {
    $23 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
    $0 = $23;
    $94 = $0;
    STACKTOP = sp;return ($94|0);
   }
   __THREW__ = 0;
   $24 = (invoke_ii(370,($7|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if (!($26)) {
    __THREW__ = 0;
    $27 = (invoke_ii(371,($7|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = $24;
     $31 = $27;
     $32 = (($30) - ($31))|0;
     $__nout = $32;
     $33 = (($7) + 44|0);
     $34 = HEAP32[$33>>2]|0;
     __THREW__ = 0;
     $35 = (invoke_ii(371,($7|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if (!($37)) {
      $38 = $34;
      $39 = $35;
      $40 = (($38) - ($39))|0;
      $__hm = $40;
      $41 = (($7) + 32|0);
      __THREW__ = 0;
      invoke_vii(372,($41|0),0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if (!($43)) {
       $44 = (($7) + 32|0);
       $45 = (($7) + 32|0);
       $46 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($45)|0);
       __THREW__ = 0;
       invoke_vii(373,($44|0),($46|0));
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if (!($48)) {
        $49 = (($7) + 32|0);
        $50 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($49)|0);
        $__p = $50;
        $51 = $__p;
        $52 = $__p;
        $53 = (($7) + 32|0);
        $54 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($53)|0);
        $55 = (($52) + ($54)|0);
        __THREW__ = 0;
        invoke_viii(374,($7|0),($51|0),($55|0));
        $56 = __THREW__; __THREW__ = 0;
        $57 = $56&1;
        if (!($57)) {
         $58 = $__nout;
         __THREW__ = 0;
         invoke_vii(375,($7|0),($58|0));
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if (!($60)) {
          __THREW__ = 0;
          $61 = (invoke_ii(371,($7|0))|0);
          $62 = __THREW__; __THREW__ = 0;
          $63 = $62&1;
          if (!($63)) {
           $64 = $__hm;
           $65 = (($61) + ($64)|0);
           $66 = (($7) + 44|0);
           HEAP32[$66>>2] = $65;
           break;
          }
         }
        }
       }
      }
     }
    }
   }
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   $3 = $67;
   $4 = $68;
   $69 = $3;
   (___cxa_begin_catch(($69|0))|0);
   $70 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $0 = $70;
   $5 = 1;
   ___cxa_end_catch();
   $94 = $0;
   STACKTOP = sp;return ($94|0);
  }
 } while(0);
 $71 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $72 = (($71) + 1|0);
 HEAP32[$6>>2] = $72;
 $73 = (($7) + 44|0);
 $74 = (__ZNSt3__13maxIPcEERKT_S4_S4_($6,$73)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (($7) + 44|0);
 HEAP32[$76>>2] = $75;
 $77 = (($7) + 48|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = $78 & 8;
 $80 = ($79|0)!=(0);
 if ($80) {
  $81 = (($7) + 32|0);
  $82 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($81)|0);
  $__p1 = $82;
  $83 = $__p1;
  $84 = $__p1;
  $85 = $__ninp;
  $86 = (($84) + ($85)|0);
  $87 = (($7) + 44|0);
  $88 = HEAP32[$87>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($7,$83,$86,$88);
 }
 $89 = $2;
 $90 = $89&255;
 $91 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($7,$90)|0);
 $0 = $91;
 $94 = $0;
 STACKTOP = sp;return ($94|0);
}
function __ZNSt3__114numeric_limitsIdE9quiet_NaNEv() {
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+__ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv());
 return (+$0);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_abs((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $epsilon;
 $3 = (($agg$result) + 8|0);
 HEAP8[$3>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $4 = $0;
 $5 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($4)|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = $1;
 $7 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($6)|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = (+__Z5IKabsd($8));
 $10 = $9 >= 1.9999999999999999E-6;
 if ($10) {
  label = 5;
 } else {
  $11 = $1;
  $12 = (+__Z5IKabsd($11));
  $13 = $12 > 1.9999999999999999E-6;
  if ($13) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $14 = $0;
  $15 = $1;
  $16 = (+__Z13IKatan2Simpledd($14,$15));
  HEAPF64[$agg$result>>3] = $16;
  $17 = (($agg$result) + 8|0);
  HEAP8[$17>>0] = 1;
 }
 STACKTOP = sp;return;
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = -1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_asin((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(912|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),130)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14712|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1536|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(928|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1472|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(960|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2560|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z14__libcpp_isnanIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 > 0.0;
 do {
  if ($3) {
   $0 = 1.0;
  } else {
   $4 = $1;
   $5 = $4 < 0.0;
   if ($5) {
    $0 = -1.0;
    break;
   }
   $0 = 0.0;
  }
 } while(0);
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $n;
 $2 = (($agg$result) + 8|0);
 HEAP8[$2>>0] = 1;
 $3 = $1;
 $4 = ($3|0)==(0);
 if ($4) {
  HEAPF64[$agg$result>>3] = 1.0;
  STACKTOP = sp;return;
 }
 $5 = $1;
 $6 = ($5|0)==(1);
 if ($6) {
  $7 = $0;
  HEAPF64[$agg$result>>3] = $7;
  STACKTOP = sp;return;
 }
 $8 = $1;
 $9 = ($8|0)<(0);
 do {
  if ($9) {
   $10 = $0;
   $11 = $10 == 0.0;
   if ($11) {
    $12 = (($agg$result) + 8|0);
    HEAP8[$12>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    STACKTOP = sp;return;
   }
   $13 = $1;
   $14 = ($13|0)==(-1);
   if (!($14)) {
    break;
   }
   $15 = $0;
   $16 = 1.0 / $15;
   HEAPF64[$agg$result>>3] = $16;
   STACKTOP = sp;return;
  }
 } while(0);
 $17 = $1;
 $18 = ($17|0)>(0);
 if ($18) {
  $19 = $1;
  $22 = $19;
 } else {
  $20 = $1;
  $21 = (0 - ($20))|0;
  $22 = $21;
 }
 $num = $22;
 $23 = $num;
 $24 = ($23|0)==(2);
 if ($24) {
  $25 = $0;
  $26 = $0;
  $27 = $25 * $26;
  HEAPF64[$agg$result>>3] = $27;
 } else {
  $28 = $num;
  $29 = ($28|0)==(3);
  if ($29) {
   $30 = $0;
   $31 = $0;
   $32 = $30 * $31;
   $33 = $0;
   $34 = $32 * $33;
   HEAPF64[$agg$result>>3] = $34;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   while(1) {
    $35 = $num;
    $36 = ($35|0)>(0);
    if (!($36)) {
     break;
    }
    $37 = $num;
    $38 = $37 & 1;
    $39 = ($38|0)!=(0);
    if ($39) {
     $40 = $0;
     $41 = +HEAPF64[$agg$result>>3];
     $42 = $41 * $40;
     HEAPF64[$agg$result>>3] = $42;
    }
    $43 = $num;
    $44 = $43 >> 1;
    $num = $44;
    $45 = $0;
    $46 = $0;
    $47 = $46 * $45;
    $0 = $47;
   }
  }
 }
 $48 = $1;
 $49 = ($48|0)<(0);
 if ($49) {
  $50 = +HEAPF64[$agg$result>>3];
  $51 = 1.0 / $50;
  HEAPF64[$agg$result>>3] = $51;
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $1000 = 0, $10000 = 0, $10001 = 0, $10002 = 0, $10003 = 0, $10004 = 0, $10005 = 0, $10006 = 0, $10007 = 0, $10008 = 0, $10009 = 0, $1001 = 0.0, $10010 = 0, $10011 = 0, $10012 = 0, $10013 = 0;
 var $10014 = 0, $10015 = 0, $10016 = 0, $10017 = 0, $10018 = 0, $10019 = 0, $1002 = 0, $10020 = 0.0, $10021 = 0, $10022 = 0, $10023 = 0, $10024 = 0, $10025 = 0, $10026 = 0, $10027 = 0, $10028 = 0, $10029 = 0, $1003 = 0.0, $10030 = 0, $10031 = 0;
 var $10032 = 0, $10033 = 0, $10034 = 0, $10035 = 0, $10036 = 0, $10037 = 0, $10038 = 0, $10039 = 0, $1004 = 0.0, $10040 = 0, $10041 = 0, $10042 = 0, $10043 = 0, $10044 = 0, $10045 = 0, $10046 = 0, $10047 = 0, $10048 = 0, $10049 = 0, $1005 = 0.0;
 var $10050 = 0, $10051 = 0, $10052 = 0, $10053 = 0, $10054 = 0, $10055 = 0, $10056 = 0, $10057 = 0, $10058 = 0, $10059 = 0, $1006 = 0, $10060 = 0, $10061 = 0, $10062 = 0, $10063 = 0, $10064 = 0, $10065 = 0, $10066 = 0, $10067 = 0, $10068 = 0.0;
 var $10069 = 0.0, $1007 = 0, $10070 = 0.0, $10071 = 0.0, $10072 = 0.0, $10073 = 0.0, $10074 = 0, $10075 = 0.0, $10076 = 0.0, $10077 = 0, $10078 = 0, $10079 = 0.0, $1008 = 0.0, $10080 = 0, $10081 = 0, $10082 = 0.0, $10083 = 0, $10084 = 0, $10085 = 0.0, $10086 = 0;
 var $10087 = 0, $10088 = 0.0, $10089 = 0, $1009 = 0.0, $10090 = 0.0, $10091 = 0.0, $10092 = 0, $10093 = 0, $10094 = 0.0, $10095 = 0.0, $10096 = 0, $10097 = 0, $10098 = 0.0, $10099 = 0.0, $101 = 0.0, $1010 = 0.0, $10100 = 0, $10101 = 0, $10102 = 0.0, $10103 = 0.0;
 var $10104 = 0, $10105 = 0, $10106 = 0.0, $10107 = 0.0, $10108 = 0, $10109 = 0, $1011 = 0, $10110 = 0.0, $10111 = 0.0, $10112 = 0, $10113 = 0, $10114 = 0, $10115 = 0.0, $10116 = 0, $10117 = 0.0, $10118 = 0.0, $10119 = 0, $1012 = 0.0, $10120 = 0.0, $10121 = 0.0;
 var $10122 = 0, $10123 = 0.0, $10124 = 0.0, $10125 = 0, $10126 = 0, $10127 = 0, $10128 = 0, $10129 = 0.0, $1013 = 0.0, $10130 = 0, $10131 = 0.0, $10132 = 0.0, $10133 = 0, $10134 = 0.0, $10135 = 0, $10136 = 0.0, $10137 = 0.0, $10138 = 0.0, $10139 = 0.0, $1014 = 0.0;
 var $10140 = 0, $10141 = 0, $10142 = 0, $10143 = 0.0, $10144 = 0.0, $10145 = 0.0, $10146 = 0.0, $10147 = 0.0, $10148 = 0.0, $10149 = 0.0, $1015 = 0.0, $10150 = 0.0, $10151 = 0.0, $10152 = 0.0, $10153 = 0, $10154 = 0.0, $10155 = 0.0, $10156 = 0.0, $10157 = 0, $10158 = 0.0;
 var $10159 = 0.0, $1016 = 0, $10160 = 0, $10161 = 0, $10162 = 0, $10163 = 0, $10164 = 0, $10165 = 0, $10166 = 0, $10167 = 0, $10168 = 0, $10169 = 0, $1017 = 0.0, $10170 = 0, $10171 = 0, $10172 = 0, $10173 = 0, $10174 = 0, $10175 = 0, $10176 = 0;
 var $10177 = 0, $10178 = 0, $10179 = 0, $1018 = 0.0, $10180 = 0, $10181 = 0.0, $10182 = 0, $10183 = 0, $10184 = 0.0, $10185 = 0.0, $10186 = 0.0, $10187 = 0, $10188 = 0, $10189 = 0, $1019 = 0, $10190 = 0.0, $10191 = 0, $10192 = 0, $10193 = 0.0, $10194 = 0.0;
 var $10195 = 0.0, $10196 = 0, $10197 = 0, $10198 = 0, $10199 = 0, $102 = 0, $1020 = 0.0, $10200 = 0, $10201 = 0, $10202 = 0, $10203 = 0, $10204 = 0, $10205 = 0, $10206 = 0, $10207 = 0.0, $10208 = 0, $10209 = 0, $1021 = 0.0, $10210 = 0, $10211 = 0.0;
 var $10212 = 0, $10213 = 0, $10214 = 0, $10215 = 0.0, $10216 = 0, $10217 = 0, $10218 = 0.0, $10219 = 0.0, $1022 = 0.0, $10220 = 0, $10221 = 0.0, $10222 = 0.0, $10223 = 0, $10224 = 0.0, $10225 = 0.0, $10226 = 0, $10227 = 0.0, $10228 = 0.0, $10229 = 0.0, $1023 = 0.0;
 var $10230 = 0, $10231 = 0.0, $10232 = 0.0, $10233 = 0.0, $10234 = 0.0, $10235 = 0.0, $10236 = 0.0, $10237 = 0.0, $10238 = 0.0, $10239 = 0, $1024 = 0, $10240 = 0.0, $10241 = 0.0, $10242 = 0.0, $10243 = 0, $10244 = 0.0, $10245 = 0.0, $10246 = 0.0, $10247 = 0.0, $10248 = 0;
 var $10249 = 0.0, $1025 = 0.0, $10250 = 0.0, $10251 = 0.0, $10252 = 0, $10253 = 0.0, $10254 = 0.0, $10255 = 0, $10256 = 0.0, $10257 = 0.0, $10258 = 0.0, $10259 = 0.0, $1026 = 0.0, $10260 = 0, $10261 = 0, $10262 = 0.0, $10263 = 0.0, $10264 = 0.0, $10265 = 0.0, $10266 = 0;
 var $10267 = 0.0, $10268 = 0.0, $10269 = 0.0, $1027 = 0, $10270 = 0.0, $10271 = 0, $10272 = 0, $10273 = 0.0, $10274 = 0.0, $10275 = 0.0, $10276 = 0.0, $10277 = 0.0, $10278 = 0, $10279 = 0.0, $1028 = 0.0, $10280 = 0.0, $10281 = 0, $10282 = 0.0, $10283 = 0.0, $10284 = 0.0;
 var $10285 = 0.0, $10286 = 0, $10287 = 0.0, $10288 = 0.0, $10289 = 0, $1029 = 0.0, $10290 = 0, $10291 = 0.0, $10292 = 0, $10293 = 0.0, $10294 = 0.0, $10295 = 0.0, $10296 = 0.0, $10297 = 0.0, $10298 = 0, $10299 = 0.0, $103 = 0, $1030 = 0.0, $10300 = 0.0, $10301 = 0.0;
 var $10302 = 0.0, $10303 = 0, $10304 = 0, $10305 = 0.0, $10306 = 0, $10307 = 0.0, $10308 = 0.0, $10309 = 0.0, $1031 = 0.0, $10310 = 0.0, $10311 = 0.0, $10312 = 0, $10313 = 0.0, $10314 = 0.0, $10315 = 0.0, $10316 = 0.0, $10317 = 0, $10318 = 0.0, $10319 = 0.0, $1032 = 0;
 var $10320 = 0.0, $10321 = 0.0, $10322 = 0, $10323 = 0.0, $10324 = 0.0, $10325 = 0, $10326 = 0.0, $10327 = 0.0, $10328 = 0, $10329 = 0.0, $1033 = 0.0, $10330 = 0.0, $10331 = 0.0, $10332 = 0.0, $10333 = 0, $10334 = 0.0, $10335 = 0.0, $10336 = 0.0, $10337 = 0.0, $10338 = 0;
 var $10339 = 0, $1034 = 0.0, $10340 = 0.0, $10341 = 0, $10342 = 0.0, $10343 = 0.0, $10344 = 0.0, $10345 = 0.0, $10346 = 0.0, $10347 = 0.0, $10348 = 0.0, $10349 = 0.0, $1035 = 0, $10350 = 0.0, $10351 = 0.0, $10352 = 0, $10353 = 0.0, $10354 = 0.0, $10355 = 0, $10356 = 0;
 var $10357 = 0.0, $10358 = 0.0, $10359 = 0, $1036 = 0, $10360 = 0, $10361 = 0.0, $10362 = 0.0, $10363 = 0, $10364 = 0, $10365 = 0.0, $10366 = 0.0, $10367 = 0, $10368 = 0, $10369 = 0.0, $1037 = 0.0, $10370 = 0.0, $10371 = 0, $10372 = 0, $10373 = 0.0, $10374 = 0.0;
 var $10375 = 0, $10376 = 0, $10377 = 0.0, $10378 = 0.0, $10379 = 0, $1038 = 0.0, $10380 = 0, $10381 = 0.0, $10382 = 0.0, $10383 = 0, $10384 = 0, $10385 = 0.0, $10386 = 0.0, $10387 = 0, $10388 = 0, $10389 = 0.0, $1039 = 0.0, $10390 = 0.0, $10391 = 0, $10392 = 0;
 var $10393 = 0, $10394 = 0, $10395 = 0, $10396 = 0.0, $10397 = 0, $10398 = 0, $10399 = 0, $104 = 0.0, $1040 = 0.0, $10400 = 0, $10401 = 0, $10402 = 0, $10403 = 0, $10404 = 0, $10405 = 0, $10406 = 0, $10407 = 0, $10408 = 0, $10409 = 0, $1041 = 0.0;
 var $10410 = 0, $10411 = 0, $10412 = 0, $10413 = 0, $10414 = 0, $10415 = 0, $10416 = 0, $10417 = 0, $10418 = 0, $10419 = 0, $1042 = 0.0, $10420 = 0, $10421 = 0, $10422 = 0, $10423 = 0, $10424 = 0, $10425 = 0, $10426 = 0.0, $10427 = 0, $10428 = 0;
 var $10429 = 0, $1043 = 0.0, $10430 = 0, $10431 = 0, $10432 = 0, $10433 = 0, $10434 = 0, $10435 = 0, $10436 = 0, $10437 = 0, $10438 = 0, $10439 = 0, $1044 = 0, $10440 = 0, $10441 = 0, $10442 = 0, $10443 = 0, $10444 = 0, $10445 = 0, $10446 = 0;
 var $10447 = 0, $10448 = 0, $10449 = 0, $1045 = 0.0, $10450 = 0, $10451 = 0, $10452 = 0, $10453 = 0, $10454 = 0, $10455 = 0, $10456 = 0.0, $10457 = 0, $10458 = 0, $10459 = 0, $1046 = 0, $10460 = 0, $10461 = 0, $10462 = 0, $10463 = 0, $10464 = 0;
 var $10465 = 0, $10466 = 0, $10467 = 0, $10468 = 0, $10469 = 0, $1047 = 0.0, $10470 = 0, $10471 = 0, $10472 = 0, $10473 = 0, $10474 = 0, $10475 = 0, $10476 = 0, $10477 = 0, $10478 = 0, $10479 = 0, $1048 = 0.0, $10480 = 0, $10481 = 0, $10482 = 0;
 var $10483 = 0, $10484 = 0, $10485 = 0, $10486 = 0.0, $10487 = 0, $10488 = 0, $10489 = 0, $1049 = 0.0, $10490 = 0, $10491 = 0, $10492 = 0, $10493 = 0, $10494 = 0, $10495 = 0, $10496 = 0, $10497 = 0, $10498 = 0, $10499 = 0, $105 = 0.0, $1050 = 0;
 var $10500 = 0, $10501 = 0, $10502 = 0, $10503 = 0, $10504 = 0, $10505 = 0, $10506 = 0, $10507 = 0, $10508 = 0, $10509 = 0, $1051 = 0, $10510 = 0, $10511 = 0, $10512 = 0, $10513 = 0, $10514 = 0, $10515 = 0, $10516 = 0.0, $10517 = 0, $10518 = 0;
 var $10519 = 0, $1052 = 0.0, $10520 = 0, $10521 = 0, $10522 = 0, $10523 = 0, $10524 = 0, $10525 = 0, $10526 = 0, $10527 = 0, $10528 = 0, $10529 = 0, $1053 = 0.0, $10530 = 0, $10531 = 0, $10532 = 0, $10533 = 0, $10534 = 0, $10535 = 0, $10536 = 0;
 var $10537 = 0, $10538 = 0, $10539 = 0, $1054 = 0.0, $10540 = 0, $10541 = 0, $10542 = 0, $10543 = 0, $10544 = 0, $10545 = 0, $10546 = 0.0, $10547 = 0, $10548 = 0, $10549 = 0, $1055 = 0.0, $10550 = 0, $10551 = 0, $10552 = 0, $10553 = 0, $10554 = 0;
 var $10555 = 0, $10556 = 0, $10557 = 0, $10558 = 0, $10559 = 0, $1056 = 0.0, $10560 = 0, $10561 = 0, $10562 = 0, $10563 = 0, $10564 = 0, $10565 = 0, $10566 = 0, $10567 = 0, $10568 = 0, $10569 = 0, $1057 = 0.0, $10570 = 0, $10571 = 0, $10572 = 0;
 var $10573 = 0, $10574 = 0, $10575 = 0, $10576 = 0, $10577 = 0, $10578 = 0, $10579 = 0, $1058 = 0.0, $10580 = 0, $10581 = 0, $10582 = 0, $10583 = 0, $10584 = 0, $10585 = 0, $10586 = 0, $10587 = 0, $10588 = 0, $10589 = 0, $1059 = 0, $10590 = 0;
 var $10591 = 0, $10592 = 0, $10593 = 0, $10594 = 0, $10595 = 0, $10596 = 0, $10597 = 0.0, $10598 = 0, $10599 = 0, $106 = 0.0, $1060 = 0.0, $10600 = 0, $10601 = 0.0, $10602 = 0, $10603 = 0.0, $10604 = 0, $10605 = 0, $10606 = 0, $10607 = 0.0, $10608 = 0.0;
 var $10609 = 0.0, $1061 = 0, $10610 = 0, $10611 = 0.0, $10612 = 0, $10613 = 0.0, $10614 = 0.0, $10615 = 0, $10616 = 0.0, $10617 = 0.0, $10618 = 0, $10619 = 0.0, $1062 = 0.0, $10620 = 0.0, $10621 = 0.0, $10622 = 0.0, $10623 = 0.0, $10624 = 0, $10625 = 0, $10626 = 0.0;
 var $10627 = 0.0, $10628 = 0.0, $10629 = 0.0, $1063 = 0.0, $10630 = 0.0, $10631 = 0, $10632 = 0.0, $10633 = 0.0, $10634 = 0.0, $10635 = 0, $10636 = 0.0, $10637 = 0, $10638 = 0.0, $10639 = 0.0, $1064 = 0.0, $10640 = 0, $10641 = 0.0, $10642 = 0.0, $10643 = 0, $10644 = 0.0;
 var $10645 = 0.0, $10646 = 0.0, $10647 = 0.0, $10648 = 0.0, $10649 = 0, $1065 = 0, $10650 = 0.0, $10651 = 0.0, $10652 = 0.0, $10653 = 0.0, $10654 = 0.0, $10655 = 0.0, $10656 = 0.0, $10657 = 0.0, $10658 = 0, $10659 = 0.0, $1066 = 0, $10660 = 0.0, $10661 = 0.0, $10662 = 0;
 var $10663 = 0.0, $10664 = 0, $10665 = 0.0, $10666 = 0.0, $10667 = 0, $10668 = 0.0, $10669 = 0.0, $1067 = 0.0, $10670 = 0, $10671 = 0.0, $10672 = 0.0, $10673 = 0.0, $10674 = 0.0, $10675 = 0, $10676 = 0.0, $10677 = 0.0, $10678 = 0.0, $10679 = 0.0, $1068 = 0.0, $10680 = 0.0;
 var $10681 = 0.0, $10682 = 0.0, $10683 = 0.0, $10684 = 0.0, $10685 = 0.0, $10686 = 0, $10687 = 0.0, $10688 = 0.0, $10689 = 0.0, $1069 = 0.0, $10690 = 0, $10691 = 0.0, $10692 = 0.0, $10693 = 0, $10694 = 0, $10695 = 0, $10696 = 0, $10697 = 0, $10698 = 0, $10699 = 0;
 var $107 = 0.0, $1070 = 0.0, $10700 = 0, $10701 = 0, $10702 = 0, $10703 = 0, $10704 = 0, $10705 = 0, $10706 = 0, $10707 = 0, $10708 = 0, $10709 = 0, $1071 = 0.0, $10710 = 0, $10711 = 0, $10712 = 0, $10713 = 0, $10714 = 0.0, $10715 = 0, $10716 = 0;
 var $10717 = 0.0, $10718 = 0.0, $10719 = 0.0, $1072 = 0.0, $10720 = 0, $10721 = 0, $10722 = 0, $10723 = 0.0, $10724 = 0, $10725 = 0, $10726 = 0.0, $10727 = 0.0, $10728 = 0.0, $10729 = 0, $1073 = 0.0, $10730 = 0, $10731 = 0, $10732 = 0, $10733 = 0, $10734 = 0;
 var $10735 = 0, $10736 = 0, $10737 = 0, $10738 = 0, $10739 = 0, $1074 = 0.0, $10740 = 0.0, $10741 = 0, $10742 = 0, $10743 = 0, $10744 = 0.0, $10745 = 0, $10746 = 0, $10747 = 0, $10748 = 0.0, $10749 = 0, $1075 = 0.0, $10750 = 0, $10751 = 0.0, $10752 = 0.0;
 var $10753 = 0, $10754 = 0.0, $10755 = 0.0, $10756 = 0, $10757 = 0.0, $10758 = 0.0, $10759 = 0, $1076 = 0, $10760 = 0.0, $10761 = 0.0, $10762 = 0, $10763 = 0.0, $10764 = 0.0, $10765 = 0, $10766 = 0.0, $10767 = 0.0, $10768 = 0.0, $10769 = 0, $1077 = 0.0, $10770 = 0.0;
 var $10771 = 0.0, $10772 = 0.0, $10773 = 0, $10774 = 0.0, $10775 = 0.0, $10776 = 0.0, $10777 = 0, $10778 = 0.0, $10779 = 0.0, $1078 = 0.0, $10780 = 0.0, $10781 = 0, $10782 = 0.0, $10783 = 0.0, $10784 = 0.0, $10785 = 0.0, $10786 = 0.0, $10787 = 0.0, $10788 = 0.0, $10789 = 0.0;
 var $1079 = 0, $10790 = 0.0, $10791 = 0, $10792 = 0.0, $10793 = 0.0, $10794 = 0.0, $10795 = 0.0, $10796 = 0, $10797 = 0.0, $10798 = 0.0, $10799 = 0, $108 = 0, $1080 = 0.0, $10800 = 0, $10801 = 0.0, $10802 = 0.0, $10803 = 0.0, $10804 = 0, $10805 = 0.0, $10806 = 0.0;
 var $10807 = 0.0, $10808 = 0.0, $10809 = 0, $1081 = 0.0, $10810 = 0, $10811 = 0.0, $10812 = 0, $10813 = 0.0, $10814 = 0.0, $10815 = 0.0, $10816 = 0.0, $10817 = 0, $10818 = 0.0, $10819 = 0.0, $1082 = 0, $10820 = 0.0, $10821 = 0.0, $10822 = 0, $10823 = 0, $10824 = 0.0;
 var $10825 = 0, $10826 = 0.0, $10827 = 0.0, $10828 = 0.0, $10829 = 0.0, $1083 = 0, $10830 = 0.0, $10831 = 0, $10832 = 0.0, $10833 = 0.0, $10834 = 0.0, $10835 = 0.0, $10836 = 0, $10837 = 0.0, $10838 = 0, $10839 = 0.0, $1084 = 0.0, $10840 = 0.0, $10841 = 0.0, $10842 = 0.0;
 var $10843 = 0, $10844 = 0.0, $10845 = 0.0, $10846 = 0, $10847 = 0.0, $10848 = 0.0, $10849 = 0, $1085 = 0.0, $10850 = 0.0, $10851 = 0.0, $10852 = 0.0, $10853 = 0.0, $10854 = 0, $10855 = 0.0, $10856 = 0.0, $10857 = 0.0, $10858 = 0.0, $10859 = 0, $1086 = 0, $10860 = 0.0;
 var $10861 = 0.0, $10862 = 0.0, $10863 = 0.0, $10864 = 0, $10865 = 0.0, $10866 = 0.0, $10867 = 0.0, $10868 = 0.0, $10869 = 0, $1087 = 0, $10870 = 0.0, $10871 = 0.0, $10872 = 0, $10873 = 0.0, $10874 = 0.0, $10875 = 0.0, $10876 = 0.0, $10877 = 0, $10878 = 0.0, $10879 = 0.0;
 var $1088 = 0.0, $10880 = 0.0, $10881 = 0.0, $10882 = 0, $10883 = 0.0, $10884 = 0.0, $10885 = 0, $10886 = 0.0, $10887 = 0.0, $10888 = 0.0, $10889 = 0.0, $1089 = 0.0, $10890 = 0.0, $10891 = 0.0, $10892 = 0.0, $10893 = 0.0, $10894 = 0.0, $10895 = 0, $10896 = 0.0, $10897 = 0.0;
 var $10898 = 0, $10899 = 0, $109 = 0.0, $1090 = 0, $10900 = 0.0, $10901 = 0.0, $10902 = 0.0, $10903 = 0.0, $10904 = 0, $10905 = 0.0, $10906 = 0.0, $10907 = 0.0, $10908 = 0.0, $10909 = 0.0, $1091 = 0, $10910 = 0, $10911 = 0.0, $10912 = 0.0, $10913 = 0.0, $10914 = 0.0;
 var $10915 = 0, $10916 = 0, $10917 = 0.0, $10918 = 0.0, $10919 = 0.0, $1092 = 0.0, $10920 = 0.0, $10921 = 0.0, $10922 = 0.0, $10923 = 0, $10924 = 0.0, $10925 = 0.0, $10926 = 0.0, $10927 = 0.0, $10928 = 0.0, $10929 = 0, $1093 = 0.0, $10930 = 0, $10931 = 0.0, $10932 = 0.0;
 var $10933 = 0.0, $10934 = 0.0, $10935 = 0.0, $10936 = 0.0, $10937 = 0, $10938 = 0.0, $10939 = 0.0, $1094 = 0, $10940 = 0.0, $10941 = 0.0, $10942 = 0.0, $10943 = 0, $10944 = 0.0, $10945 = 0.0, $10946 = 0.0, $10947 = 0.0, $10948 = 0, $10949 = 0, $1095 = 0, $10950 = 0.0;
 var $10951 = 0.0, $10952 = 0.0, $10953 = 0.0, $10954 = 0, $10955 = 0.0, $10956 = 0.0, $10957 = 0.0, $10958 = 0.0, $10959 = 0.0, $1096 = 0.0, $10960 = 0, $10961 = 0.0, $10962 = 0.0, $10963 = 0.0, $10964 = 0.0, $10965 = 0, $10966 = 0, $10967 = 0.0, $10968 = 0.0, $10969 = 0.0;
 var $1097 = 0.0, $10970 = 0, $10971 = 0.0, $10972 = 0.0, $10973 = 0.0, $10974 = 0.0, $10975 = 0.0, $10976 = 0, $10977 = 0.0, $10978 = 0.0, $10979 = 0.0, $1098 = 0, $10980 = 0.0, $10981 = 0.0, $10982 = 0, $10983 = 0, $10984 = 0.0, $10985 = 0.0, $10986 = 0.0, $10987 = 0.0;
 var $10988 = 0.0, $10989 = 0, $1099 = 0, $10990 = 0.0, $10991 = 0.0, $10992 = 0.0, $10993 = 0.0, $10994 = 0.0, $10995 = 0, $10996 = 0.0, $10997 = 0.0, $10998 = 0.0, $10999 = 0.0, $11 = 0.0, $110 = 0, $1100 = 0.0, $11000 = 0, $11001 = 0, $11002 = 0.0, $11003 = 0.0;
 var $11004 = 0.0, $11005 = 0.0, $11006 = 0.0, $11007 = 0.0, $11008 = 0, $11009 = 0.0, $1101 = 0.0, $11010 = 0.0, $11011 = 0, $11012 = 0.0, $11013 = 0.0, $11014 = 0.0, $11015 = 0.0, $11016 = 0.0, $11017 = 0, $11018 = 0.0, $11019 = 0.0, $1102 = 0, $11020 = 0.0, $11021 = 0.0;
 var $11022 = 0, $11023 = 0.0, $11024 = 0.0, $11025 = 0.0, $11026 = 0.0, $11027 = 0, $11028 = 0.0, $11029 = 0.0, $1103 = 0, $11030 = 0, $11031 = 0.0, $11032 = 0.0, $11033 = 0.0, $11034 = 0.0, $11035 = 0, $11036 = 0.0, $11037 = 0.0, $11038 = 0.0, $11039 = 0.0, $1104 = 0.0;
 var $11040 = 0.0, $11041 = 0, $11042 = 0.0, $11043 = 0.0, $11044 = 0, $11045 = 0, $11046 = 0.0, $11047 = 0.0, $11048 = 0, $11049 = 0, $1105 = 0.0, $11050 = 0.0, $11051 = 0.0, $11052 = 0, $11053 = 0, $11054 = 0.0, $11055 = 0.0, $11056 = 0, $11057 = 0, $11058 = 0.0;
 var $11059 = 0.0, $1106 = 0, $11060 = 0, $11061 = 0, $11062 = 0.0, $11063 = 0.0, $11064 = 0, $11065 = 0, $11066 = 0.0, $11067 = 0.0, $11068 = 0, $11069 = 0, $1107 = 0, $11070 = 0.0, $11071 = 0.0, $11072 = 0, $11073 = 0, $11074 = 0.0, $11075 = 0.0, $11076 = 0;
 var $11077 = 0, $11078 = 0.0, $11079 = 0.0, $1108 = 0.0, $11080 = 0, $11081 = 0, $11082 = 0.0, $11083 = 0.0, $11084 = 0, $11085 = 0, $11086 = 0.0, $11087 = 0.0, $11088 = 0, $11089 = 0, $1109 = 0.0, $11090 = 0.0, $11091 = 0.0, $11092 = 0, $11093 = 0, $11094 = 0.0;
 var $11095 = 0.0, $11096 = 0, $11097 = 0, $11098 = 0.0, $11099 = 0.0, $111 = 0.0, $1110 = 0, $11100 = 0, $11101 = 0, $11102 = 0.0, $11103 = 0.0, $11104 = 0, $11105 = 0, $11106 = 0.0, $11107 = 0.0, $11108 = 0, $11109 = 0, $1111 = 0, $11110 = 0.0, $11111 = 0.0;
 var $11112 = 0, $11113 = 0, $11114 = 0, $11115 = 0, $11116 = 0, $11117 = 0.0, $11118 = 0, $11119 = 0, $1112 = 0, $11120 = 0, $11121 = 0, $11122 = 0, $11123 = 0, $11124 = 0, $11125 = 0, $11126 = 0, $11127 = 0, $11128 = 0, $11129 = 0, $1113 = 0;
 var $11130 = 0, $11131 = 0, $11132 = 0, $11133 = 0, $11134 = 0, $11135 = 0, $11136 = 0, $11137 = 0, $11138 = 0, $11139 = 0, $1114 = 0, $11140 = 0, $11141 = 0, $11142 = 0, $11143 = 0, $11144 = 0, $11145 = 0, $11146 = 0, $11147 = 0.0, $11148 = 0;
 var $11149 = 0, $1115 = 0.0, $11150 = 0, $11151 = 0, $11152 = 0, $11153 = 0, $11154 = 0, $11155 = 0, $11156 = 0, $11157 = 0, $11158 = 0, $11159 = 0, $1116 = 0, $11160 = 0, $11161 = 0, $11162 = 0, $11163 = 0, $11164 = 0, $11165 = 0, $11166 = 0;
 var $11167 = 0, $11168 = 0, $11169 = 0, $1117 = 0, $11170 = 0, $11171 = 0, $11172 = 0, $11173 = 0, $11174 = 0, $11175 = 0, $11176 = 0, $11177 = 0.0, $11178 = 0, $11179 = 0, $1118 = 0, $11180 = 0, $11181 = 0, $11182 = 0, $11183 = 0, $11184 = 0;
 var $11185 = 0, $11186 = 0, $11187 = 0, $11188 = 0, $11189 = 0, $1119 = 0, $11190 = 0, $11191 = 0, $11192 = 0, $11193 = 0, $11194 = 0, $11195 = 0, $11196 = 0, $11197 = 0, $11198 = 0, $11199 = 0, $112 = 0.0, $1120 = 0, $11200 = 0, $11201 = 0;
 var $11202 = 0, $11203 = 0, $11204 = 0, $11205 = 0, $11206 = 0, $11207 = 0.0, $11208 = 0, $11209 = 0, $1121 = 0, $11210 = 0, $11211 = 0, $11212 = 0, $11213 = 0, $11214 = 0, $11215 = 0, $11216 = 0, $11217 = 0, $11218 = 0, $11219 = 0, $1122 = 0;
 var $11220 = 0, $11221 = 0, $11222 = 0, $11223 = 0, $11224 = 0, $11225 = 0, $11226 = 0, $11227 = 0, $11228 = 0, $11229 = 0, $1123 = 0, $11230 = 0, $11231 = 0, $11232 = 0, $11233 = 0, $11234 = 0, $11235 = 0, $11236 = 0, $11237 = 0.0, $11238 = 0;
 var $11239 = 0, $1124 = 0, $11240 = 0, $11241 = 0, $11242 = 0, $11243 = 0, $11244 = 0, $11245 = 0, $11246 = 0, $11247 = 0, $11248 = 0, $11249 = 0, $1125 = 0, $11250 = 0, $11251 = 0, $11252 = 0, $11253 = 0, $11254 = 0, $11255 = 0, $11256 = 0;
 var $11257 = 0, $11258 = 0, $11259 = 0, $1126 = 0, $11260 = 0, $11261 = 0, $11262 = 0, $11263 = 0, $11264 = 0, $11265 = 0, $11266 = 0, $11267 = 0.0, $11268 = 0, $11269 = 0, $1127 = 0, $11270 = 0, $11271 = 0, $11272 = 0, $11273 = 0, $11274 = 0;
 var $11275 = 0, $11276 = 0, $11277 = 0, $11278 = 0, $11279 = 0, $1128 = 0, $11280 = 0, $11281 = 0, $11282 = 0, $11283 = 0, $11284 = 0, $11285 = 0, $11286 = 0, $11287 = 0, $11288 = 0, $11289 = 0, $1129 = 0, $11290 = 0, $11291 = 0, $11292 = 0;
 var $11293 = 0, $11294 = 0, $11295 = 0, $11296 = 0, $11297 = 0, $11298 = 0, $11299 = 0, $113 = 0.0, $1130 = 0, $11300 = 0, $11301 = 0, $11302 = 0, $11303 = 0, $11304 = 0, $11305 = 0, $11306 = 0, $11307 = 0, $11308 = 0, $11309 = 0, $1131 = 0;
 var $11310 = 0, $11311 = 0, $11312 = 0, $11313 = 0, $11314 = 0.0, $11315 = 0.0, $11316 = 0, $11317 = 0, $11318 = 0, $11319 = 0, $1132 = 0, $11320 = 0.0, $11321 = 0, $11322 = 0.0, $11323 = 0.0, $11324 = 0, $11325 = 0, $11326 = 0, $11327 = 0.0, $11328 = 0.0;
 var $11329 = 0.0, $1133 = 0, $11330 = 0.0, $11331 = 0.0, $11332 = 0.0, $11333 = 0.0, $11334 = 0.0, $11335 = 0.0, $11336 = 0.0, $11337 = 0, $11338 = 0.0, $11339 = 0.0, $1134 = 0, $11340 = 0.0, $11341 = 0, $11342 = 0.0, $11343 = 0.0, $11344 = 0, $11345 = 0, $11346 = 0;
 var $11347 = 0, $11348 = 0, $11349 = 0, $1135 = 0, $11350 = 0, $11351 = 0, $11352 = 0, $11353 = 0, $11354 = 0, $11355 = 0, $11356 = 0, $11357 = 0, $11358 = 0, $11359 = 0, $1136 = 0, $11360 = 0, $11361 = 0, $11362 = 0, $11363 = 0, $11364 = 0;
 var $11365 = 0.0, $11366 = 0, $11367 = 0, $11368 = 0.0, $11369 = 0.0, $1137 = 0, $11370 = 0.0, $11371 = 0, $11372 = 0, $11373 = 0, $11374 = 0.0, $11375 = 0, $11376 = 0, $11377 = 0.0, $11378 = 0.0, $11379 = 0.0, $1138 = 0, $11380 = 0, $11381 = 0, $11382 = 0;
 var $11383 = 0, $11384 = 0, $11385 = 0, $11386 = 0, $11387 = 0, $11388 = 0, $11389 = 0, $1139 = 0, $11390 = 0, $11391 = 0.0, $11392 = 0, $11393 = 0, $11394 = 0, $11395 = 0.0, $11396 = 0, $11397 = 0, $11398 = 0, $11399 = 0.0, $114 = 0, $1140 = 0;
 var $11400 = 0, $11401 = 0, $11402 = 0.0, $11403 = 0.0, $11404 = 0, $11405 = 0.0, $11406 = 0.0, $11407 = 0, $11408 = 0.0, $11409 = 0.0, $1141 = 0, $11410 = 0, $11411 = 0.0, $11412 = 0.0, $11413 = 0, $11414 = 0.0, $11415 = 0.0, $11416 = 0, $11417 = 0.0, $11418 = 0.0;
 var $11419 = 0.0, $1142 = 0, $11420 = 0, $11421 = 0.0, $11422 = 0.0, $11423 = 0.0, $11424 = 0, $11425 = 0.0, $11426 = 0.0, $11427 = 0.0, $11428 = 0, $11429 = 0.0, $1143 = 0, $11430 = 0.0, $11431 = 0.0, $11432 = 0, $11433 = 0.0, $11434 = 0.0, $11435 = 0.0, $11436 = 0.0;
 var $11437 = 0.0, $11438 = 0.0, $11439 = 0.0, $1144 = 0, $11440 = 0.0, $11441 = 0.0, $11442 = 0, $11443 = 0.0, $11444 = 0.0, $11445 = 0.0, $11446 = 0.0, $11447 = 0, $11448 = 0.0, $11449 = 0.0, $1145 = 0.0, $11450 = 0, $11451 = 0, $11452 = 0.0, $11453 = 0.0, $11454 = 0.0;
 var $11455 = 0, $11456 = 0.0, $11457 = 0.0, $11458 = 0.0, $11459 = 0.0, $1146 = 0, $11460 = 0, $11461 = 0, $11462 = 0.0, $11463 = 0, $11464 = 0.0, $11465 = 0.0, $11466 = 0.0, $11467 = 0.0, $11468 = 0, $11469 = 0.0, $1147 = 0, $11470 = 0.0, $11471 = 0.0, $11472 = 0.0;
 var $11473 = 0, $11474 = 0, $11475 = 0.0, $11476 = 0.0, $11477 = 0.0, $11478 = 0, $11479 = 0.0, $1148 = 0, $11480 = 0.0, $11481 = 0, $11482 = 0.0, $11483 = 0.0, $11484 = 0.0, $11485 = 0.0, $11486 = 0.0, $11487 = 0, $11488 = 0.0, $11489 = 0, $1149 = 0, $11490 = 0.0;
 var $11491 = 0.0, $11492 = 0.0, $11493 = 0.0, $11494 = 0, $11495 = 0.0, $11496 = 0.0, $11497 = 0, $11498 = 0.0, $11499 = 0.0, $115 = 0.0, $1150 = 0, $11500 = 0, $11501 = 0.0, $11502 = 0.0, $11503 = 0.0, $11504 = 0.0, $11505 = 0, $11506 = 0.0, $11507 = 0.0, $11508 = 0.0;
 var $11509 = 0.0, $1151 = 0, $11510 = 0, $11511 = 0, $11512 = 0.0, $11513 = 0.0, $11514 = 0.0, $11515 = 0, $11516 = 0.0, $11517 = 0.0, $11518 = 0.0, $11519 = 0.0, $1152 = 0, $11520 = 0.0, $11521 = 0.0, $11522 = 0.0, $11523 = 0, $11524 = 0.0, $11525 = 0.0, $11526 = 0.0;
 var $11527 = 0.0, $11528 = 0, $11529 = 0.0, $1153 = 0, $11530 = 0.0, $11531 = 0.0, $11532 = 0.0, $11533 = 0, $11534 = 0.0, $11535 = 0.0, $11536 = 0, $11537 = 0.0, $11538 = 0.0, $11539 = 0.0, $1154 = 0, $11540 = 0.0, $11541 = 0, $11542 = 0.0, $11543 = 0.0, $11544 = 0.0;
 var $11545 = 0.0, $11546 = 0.0, $11547 = 0.0, $11548 = 0.0, $11549 = 0, $1155 = 0, $11550 = 0, $11551 = 0.0, $11552 = 0.0, $11553 = 0.0, $11554 = 0.0, $11555 = 0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0.0, $1156 = 0, $11560 = 0.0, $11561 = 0, $11562 = 0.0;
 var $11563 = 0.0, $11564 = 0.0, $11565 = 0.0, $11566 = 0, $11567 = 0, $11568 = 0.0, $11569 = 0.0, $1157 = 0, $11570 = 0.0, $11571 = 0.0, $11572 = 0, $11573 = 0.0, $11574 = 0.0, $11575 = 0.0, $11576 = 0.0, $11577 = 0.0, $11578 = 0.0, $11579 = 0.0, $1158 = 0, $11580 = 0;
 var $11581 = 0, $11582 = 0.0, $11583 = 0.0, $11584 = 0.0, $11585 = 0.0, $11586 = 0.0, $11587 = 0.0, $11588 = 0, $11589 = 0.0, $1159 = 0, $11590 = 0.0, $11591 = 0.0, $11592 = 0.0, $11593 = 0, $11594 = 0.0, $11595 = 0.0, $11596 = 0.0, $11597 = 0.0, $11598 = 0.0, $11599 = 0;
 var $116 = 0.0, $1160 = 0, $11600 = 0, $11601 = 0.0, $11602 = 0.0, $11603 = 0.0, $11604 = 0.0, $11605 = 0, $11606 = 0.0, $11607 = 0.0, $11608 = 0.0, $11609 = 0.0, $1161 = 0, $11610 = 0.0, $11611 = 0, $11612 = 0.0, $11613 = 0.0, $11614 = 0.0, $11615 = 0.0, $11616 = 0;
 var $11617 = 0, $11618 = 0.0, $11619 = 0.0, $1162 = 0, $11620 = 0.0, $11621 = 0.0, $11622 = 0, $11623 = 0.0, $11624 = 0.0, $11625 = 0.0, $11626 = 0.0, $11627 = 0, $11628 = 0.0, $11629 = 0.0, $1163 = 0, $11630 = 0.0, $11631 = 0.0, $11632 = 0.0, $11633 = 0, $11634 = 0;
 var $11635 = 0.0, $11636 = 0.0, $11637 = 0.0, $11638 = 0.0, $11639 = 0.0, $1164 = 0, $11640 = 0, $11641 = 0.0, $11642 = 0.0, $11643 = 0.0, $11644 = 0.0, $11645 = 0, $11646 = 0.0, $11647 = 0.0, $11648 = 0.0, $11649 = 0.0, $1165 = 0, $11650 = 0.0, $11651 = 0, $11652 = 0;
 var $11653 = 0.0, $11654 = 0.0, $11655 = 0.0, $11656 = 0.0, $11657 = 0, $11658 = 0.0, $11659 = 0.0, $1166 = 0, $11660 = 0, $11661 = 0.0, $11662 = 0.0, $11663 = 0.0, $11664 = 0.0, $11665 = 0, $11666 = 0.0, $11667 = 0.0, $11668 = 0.0, $11669 = 0.0, $1167 = 0, $11670 = 0.0;
 var $11671 = 0.0, $11672 = 0.0, $11673 = 0, $11674 = 0, $11675 = 0.0, $11676 = 0.0, $11677 = 0.0, $11678 = 0.0, $11679 = 0, $1168 = 0, $11680 = 0.0, $11681 = 0.0, $11682 = 0, $11683 = 0.0, $11684 = 0.0, $11685 = 0.0, $11686 = 0.0, $11687 = 0.0, $11688 = 0.0, $11689 = 0.0;
 var $1169 = 0, $11690 = 0.0, $11691 = 0.0, $11692 = 0, $11693 = 0.0, $11694 = 0.0, $11695 = 0, $11696 = 0, $11697 = 0.0, $11698 = 0.0, $11699 = 0, $117 = 0.0, $1170 = 0, $11700 = 0, $11701 = 0.0, $11702 = 0.0, $11703 = 0, $11704 = 0, $11705 = 0.0, $11706 = 0.0;
 var $11707 = 0, $11708 = 0, $11709 = 0.0, $1171 = 0, $11710 = 0.0, $11711 = 0, $11712 = 0, $11713 = 0.0, $11714 = 0.0, $11715 = 0, $11716 = 0, $11717 = 0.0, $11718 = 0.0, $11719 = 0, $1172 = 0, $11720 = 0, $11721 = 0.0, $11722 = 0.0, $11723 = 0, $11724 = 0;
 var $11725 = 0.0, $11726 = 0.0, $11727 = 0, $11728 = 0, $11729 = 0.0, $1173 = 0, $11730 = 0.0, $11731 = 0, $11732 = 0, $11733 = 0.0, $11734 = 0.0, $11735 = 0, $11736 = 0, $11737 = 0.0, $11738 = 0.0, $11739 = 0, $1174 = 0, $11740 = 0, $11741 = 0.0, $11742 = 0.0;
 var $11743 = 0, $11744 = 0, $11745 = 0.0, $11746 = 0.0, $11747 = 0, $11748 = 0, $11749 = 0.0, $1175 = 0.0, $11750 = 0.0, $11751 = 0, $11752 = 0, $11753 = 0.0, $11754 = 0.0, $11755 = 0, $11756 = 0, $11757 = 0.0, $11758 = 0.0, $11759 = 0, $1176 = 0, $11760 = 0;
 var $11761 = 0.0, $11762 = 0.0, $11763 = 0, $11764 = 0, $11765 = 0, $11766 = 0, $11767 = 0, $11768 = 0.0, $11769 = 0, $1177 = 0, $11770 = 0, $11771 = 0, $11772 = 0, $11773 = 0, $11774 = 0, $11775 = 0, $11776 = 0, $11777 = 0, $11778 = 0, $11779 = 0;
 var $1178 = 0, $11780 = 0, $11781 = 0, $11782 = 0, $11783 = 0, $11784 = 0, $11785 = 0, $11786 = 0, $11787 = 0, $11788 = 0, $11789 = 0, $1179 = 0, $11790 = 0, $11791 = 0, $11792 = 0, $11793 = 0, $11794 = 0, $11795 = 0, $11796 = 0, $11797 = 0;
 var $11798 = 0.0, $11799 = 0, $118 = 0, $1180 = 0, $11800 = 0, $11801 = 0, $11802 = 0, $11803 = 0, $11804 = 0, $11805 = 0, $11806 = 0, $11807 = 0, $11808 = 0, $11809 = 0, $1181 = 0, $11810 = 0, $11811 = 0, $11812 = 0, $11813 = 0, $11814 = 0;
 var $11815 = 0, $11816 = 0, $11817 = 0, $11818 = 0, $11819 = 0, $1182 = 0, $11820 = 0, $11821 = 0, $11822 = 0, $11823 = 0, $11824 = 0, $11825 = 0, $11826 = 0, $11827 = 0, $11828 = 0.0, $11829 = 0, $1183 = 0, $11830 = 0, $11831 = 0, $11832 = 0;
 var $11833 = 0, $11834 = 0, $11835 = 0, $11836 = 0, $11837 = 0, $11838 = 0, $11839 = 0, $1184 = 0, $11840 = 0, $11841 = 0, $11842 = 0, $11843 = 0, $11844 = 0, $11845 = 0, $11846 = 0, $11847 = 0, $11848 = 0, $11849 = 0, $1185 = 0, $11850 = 0;
 var $11851 = 0, $11852 = 0, $11853 = 0, $11854 = 0, $11855 = 0, $11856 = 0, $11857 = 0, $11858 = 0.0, $11859 = 0, $1186 = 0, $11860 = 0, $11861 = 0, $11862 = 0, $11863 = 0, $11864 = 0, $11865 = 0, $11866 = 0, $11867 = 0, $11868 = 0, $11869 = 0;
 var $1187 = 0, $11870 = 0, $11871 = 0, $11872 = 0, $11873 = 0, $11874 = 0, $11875 = 0, $11876 = 0, $11877 = 0, $11878 = 0, $11879 = 0, $1188 = 0, $11880 = 0, $11881 = 0, $11882 = 0, $11883 = 0, $11884 = 0, $11885 = 0, $11886 = 0, $11887 = 0;
 var $11888 = 0.0, $11889 = 0, $1189 = 0, $11890 = 0, $11891 = 0, $11892 = 0, $11893 = 0, $11894 = 0, $11895 = 0, $11896 = 0, $11897 = 0, $11898 = 0, $11899 = 0, $119 = 0.0, $1190 = 0, $11900 = 0, $11901 = 0, $11902 = 0, $11903 = 0, $11904 = 0;
 var $11905 = 0, $11906 = 0, $11907 = 0, $11908 = 0, $11909 = 0, $1191 = 0, $11910 = 0, $11911 = 0, $11912 = 0, $11913 = 0, $11914 = 0, $11915 = 0, $11916 = 0, $11917 = 0, $11918 = 0.0, $11919 = 0, $1192 = 0, $11920 = 0, $11921 = 0, $11922 = 0;
 var $11923 = 0, $11924 = 0, $11925 = 0, $11926 = 0, $11927 = 0, $11928 = 0, $11929 = 0, $1193 = 0, $11930 = 0, $11931 = 0, $11932 = 0, $11933 = 0, $11934 = 0, $11935 = 0, $11936 = 0, $11937 = 0, $11938 = 0, $11939 = 0, $1194 = 0, $11940 = 0;
 var $11941 = 0, $11942 = 0, $11943 = 0, $11944 = 0, $11945 = 0, $11946 = 0, $11947 = 0, $11948 = 0, $11949 = 0, $1195 = 0, $11950 = 0, $11951 = 0, $11952 = 0, $11953 = 0, $11954 = 0, $11955 = 0, $11956 = 0, $11957 = 0, $11958 = 0, $11959 = 0;
 var $1196 = 0, $11960 = 0, $11961 = 0, $11962 = 0, $11963 = 0, $11964 = 0, $11965 = 0, $11966 = 0, $11967 = 0, $11968 = 0, $11969 = 0, $1197 = 0, $11970 = 0, $11971 = 0, $11972 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0.0, $1200 = 0;
 var $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0.0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0.0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0;
 var $122 = 0.0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0.0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0.0, $1236 = 0, $1237 = 0;
 var $1238 = 0, $1239 = 0, $124 = 0.0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0.0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0;
 var $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0.0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0.0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0;
 var $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0.0, $1290 = 0, $1291 = 0;
 var $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0.0, $130 = 0.0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0;
 var $131 = 0.0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0.0, $132 = 0.0, $1320 = 0.0, $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0, $1325 = 0, $1326 = 0.0, $1327 = 0;
 var $1328 = 0, $1329 = 0.0, $133 = 0.0, $1330 = 0, $1331 = 0, $1332 = 0.0, $1333 = 0, $1334 = 0, $1335 = 0.0, $1336 = 0, $1337 = 0.0, $1338 = 0.0, $1339 = 0, $134 = 0.0, $1340 = 0, $1341 = 0.0, $1342 = 0.0, $1343 = 0, $1344 = 0, $1345 = 0.0;
 var $1346 = 0.0, $1347 = 0, $1348 = 0, $1349 = 0.0, $135 = 0.0, $1350 = 0.0, $1351 = 0, $1352 = 0, $1353 = 0.0, $1354 = 0.0, $1355 = 0, $1356 = 0, $1357 = 0.0, $1358 = 0.0, $1359 = 0, $136 = 0.0, $1360 = 0, $1361 = 0, $1362 = 0.0, $1363 = 0;
 var $1364 = 0.0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0.0, $1369 = 0.0, $137 = 0.0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0.0, $1375 = 0.0, $1376 = 0.0, $1377 = 0.0, $1378 = 0, $1379 = 0, $138 = 0.0, $1380 = 0.0, $1381 = 0.0;
 var $1382 = 0, $1383 = 0, $1384 = 0.0, $1385 = 0.0, $1386 = 0, $1387 = 0.0, $1388 = 0, $1389 = 0.0, $139 = 0.0, $1390 = 0.0, $1391 = 0.0, $1392 = 0, $1393 = 0.0, $1394 = 0.0, $1395 = 0, $1396 = 0.0, $1397 = 0, $1398 = 0, $1399 = 0.0, $14 = 0.0;
 var $140 = 0, $1400 = 0.0, $1401 = 0, $1402 = 0.0, $1403 = 0, $1404 = 0, $1405 = 0.0, $1406 = 0.0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0.0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0;
 var $1418 = 0, $1419 = 0, $142 = 0.0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0.0, $143 = 0.0, $1430 = 0, $1431 = 0, $1432 = 0.0, $1433 = 0.0, $1434 = 0.0, $1435 = 0;
 var $1436 = 0, $1437 = 0, $1438 = 0.0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0.0, $1442 = 0.0, $1443 = 0.0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0.0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0;
 var $1454 = 0, $1455 = 0.0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0.0, $146 = 0.0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0.0, $1464 = 0, $1465 = 0, $1466 = 0.0, $1467 = 0.0, $1468 = 0, $1469 = 0.0, $147 = 0.0, $1470 = 0.0, $1471 = 0.0;
 var $1472 = 0, $1473 = 0.0, $1474 = 0, $1475 = 0.0, $1476 = 0.0, $1477 = 0.0, $1478 = 0.0, $1479 = 0.0, $148 = 0.0, $1480 = 0.0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0.0, $1485 = 0.0, $1486 = 0, $1487 = 0.0, $1488 = 0.0, $1489 = 0.0, $149 = 0.0;
 var $1490 = 0.0, $1491 = 0, $1492 = 0.0, $1493 = 0.0, $1494 = 0, $1495 = 0.0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0, $1499 = 0, $15 = 0, $150 = 0.0, $1500 = 0, $1501 = 0.0, $1502 = 0, $1503 = 0.0, $1504 = 0.0, $1505 = 0, $1506 = 0.0, $1507 = 0.0;
 var $1508 = 0.0, $1509 = 0.0, $151 = 0.0, $1510 = 0.0, $1511 = 0.0, $1512 = 0, $1513 = 0, $1514 = 0.0, $1515 = 0.0, $1516 = 0.0, $1517 = 0.0, $1518 = 0, $1519 = 0.0, $152 = 0.0, $1520 = 0.0, $1521 = 0, $1522 = 0.0, $1523 = 0.0, $1524 = 0.0, $1525 = 0.0;
 var $1526 = 0, $1527 = 0.0, $1528 = 0, $1529 = 0.0, $153 = 0, $1530 = 0.0, $1531 = 0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0.0, $1536 = 0.0, $1537 = 0.0, $1538 = 0.0, $1539 = 0.0, $154 = 0.0, $1540 = 0.0, $1541 = 0, $1542 = 0, $1543 = 0.0;
 var $1544 = 0.0, $1545 = 0.0, $1546 = 0.0, $1547 = 0, $1548 = 0.0, $1549 = 0.0, $155 = 0.0, $1550 = 0, $1551 = 0.0, $1552 = 0.0, $1553 = 0.0, $1554 = 0, $1555 = 0.0, $1556 = 0, $1557 = 0.0, $1558 = 0.0, $1559 = 0, $156 = 0.0, $1560 = 0.0, $1561 = 0.0;
 var $1562 = 0.0, $1563 = 0.0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0.0, $1568 = 0.0, $1569 = 0.0, $157 = 0, $1570 = 0.0, $1571 = 0, $1572 = 0.0, $1573 = 0.0, $1574 = 0.0, $1575 = 0, $1576 = 0.0, $1577 = 0.0, $1578 = 0, $1579 = 0, $158 = 0.0;
 var $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0.0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0;
 var $1599 = 0.0, $16 = 0.0, $160 = 0.0, $1600 = 0, $1601 = 0, $1602 = 0.0, $1603 = 0.0, $1604 = 0.0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0.0, $1609 = 0, $161 = 0.0, $1610 = 0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0, $1615 = 0;
 var $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0.0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0.0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0.0, $163 = 0.0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0.0;
 var $1634 = 0, $1635 = 0, $1636 = 0.0, $1637 = 0.0, $1638 = 0, $1639 = 0.0, $164 = 0.0, $1640 = 0.0, $1641 = 0, $1642 = 0.0, $1643 = 0.0, $1644 = 0, $1645 = 0.0, $1646 = 0.0, $1647 = 0.0, $1648 = 0.0, $1649 = 0.0, $165 = 0.0, $1650 = 0.0, $1651 = 0.0;
 var $1652 = 0.0, $1653 = 0, $1654 = 0.0, $1655 = 0, $1656 = 0.0, $1657 = 0.0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0, $1661 = 0.0, $1662 = 0, $1663 = 0.0, $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0, $1668 = 0.0, $1669 = 0, $167 = 0;
 var $1670 = 0.0, $1671 = 0.0, $1672 = 0.0, $1673 = 0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0, $168 = 0.0, $1680 = 0, $1681 = 0.0, $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0, $1688 = 0.0;
 var $1689 = 0, $169 = 0.0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0, $1694 = 0.0, $1695 = 0.0, $1696 = 0, $1697 = 0.0, $1698 = 0, $1699 = 0.0, $17 = 0, $170 = 0.0, $1700 = 0.0, $1701 = 0.0, $1702 = 0, $1703 = 0.0, $1704 = 0, $1705 = 0.0;
 var $1706 = 0.0, $1707 = 0.0, $1708 = 0, $1709 = 0, $171 = 0.0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0, $1714 = 0.0, $1715 = 0.0, $1716 = 0, $1717 = 0.0, $1718 = 0.0, $1719 = 0.0, $172 = 0.0, $1720 = 0.0, $1721 = 0, $1722 = 0.0, $1723 = 0.0;
 var $1724 = 0.0, $1725 = 0.0, $1726 = 0, $1727 = 0.0, $1728 = 0.0, $1729 = 0, $173 = 0.0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0, $1735 = 0.0, $1736 = 0.0, $1737 = 0, $1738 = 0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0.0;
 var $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0.0, $1747 = 0.0, $1748 = 0, $1749 = 0.0, $175 = 0.0, $1750 = 0.0, $1751 = 0, $1752 = 0.0, $1753 = 0.0, $1754 = 0, $1755 = 0, $1756 = 0.0, $1757 = 0.0, $1758 = 0, $1759 = 0, $176 = 0.0;
 var $1760 = 0.0, $1761 = 0.0, $1762 = 0, $1763 = 0, $1764 = 0.0, $1765 = 0.0, $1766 = 0, $1767 = 0, $1768 = 0.0, $1769 = 0.0, $177 = 0.0, $1770 = 0, $1771 = 0, $1772 = 0.0, $1773 = 0.0, $1774 = 0, $1775 = 0, $1776 = 0.0, $1777 = 0.0, $1778 = 0;
 var $1779 = 0, $178 = 0.0, $1780 = 0.0, $1781 = 0.0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0.0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0;
 var $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0.0, $180 = 0.0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0.0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0;
 var $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0.0, $1818 = 0, $1819 = 0, $182 = 0.0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0;
 var $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0.0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0.0, $1848 = 0, $1849 = 0, $185 = 0.0;
 var $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0.0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0;
 var $1869 = 0, $187 = 0.0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0.0, $1878 = 0, $1879 = 0, $188 = 0.0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0;
 var $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0.0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0.0, $190 = 0.0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0;
 var $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0.0, $1908 = 0, $1909 = 0, $191 = 0.0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0;
 var $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0.0, $1938 = 0, $1939 = 0, $194 = 0;
 var $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0.0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0;
 var $1959 = 0, $196 = 0.0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0;
 var $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0.0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0.0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0.0;
 var $1995 = 0, $1996 = 0.0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0.0, $2001 = 0.0, $2002 = 0.0, $2003 = 0, $2004 = 0.0, $2005 = 0, $2006 = 0.0, $2007 = 0.0, $2008 = 0.0, $2009 = 0.0, $201 = 0.0, $2010 = 0;
 var $2011 = 0.0, $2012 = 0, $2013 = 0.0, $2014 = 0.0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0.0, $2019 = 0, $202 = 0.0, $2020 = 0, $2021 = 0.0, $2022 = 0.0, $2023 = 0.0, $2024 = 0.0, $2025 = 0.0, $2026 = 0, $2027 = 0.0, $2028 = 0.0, $2029 = 0.0;
 var $203 = 0.0, $2030 = 0, $2031 = 0.0, $2032 = 0, $2033 = 0.0, $2034 = 0.0, $2035 = 0.0, $2036 = 0.0, $2037 = 0, $2038 = 0.0, $2039 = 0, $204 = 0.0, $2040 = 0.0, $2041 = 0.0, $2042 = 0.0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0, $2047 = 0.0;
 var $2048 = 0.0, $2049 = 0.0, $205 = 0.0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0, $206 = 0, $2060 = 0.0, $2061 = 0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0;
 var $2066 = 0, $2067 = 0.0, $2068 = 0, $2069 = 0.0, $207 = 0.0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0.0, $2074 = 0, $2075 = 0.0, $2076 = 0.0, $2077 = 0.0, $2078 = 0.0, $2079 = 0.0, $208 = 0.0, $2080 = 0.0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0;
 var $2084 = 0.0, $2085 = 0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0, $209 = 0, $2090 = 0.0, $2091 = 0.0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0.0, $210 = 0.0, $2100 = 0;
 var $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0.0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0.0, $2114 = 0, $2115 = 0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0;
 var $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0.0, $2123 = 0, $2124 = 0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0, $2129 = 0, $213 = 0.0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0;
 var $2138 = 0, $2139 = 0.0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0.0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0.0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0.0, $2151 = 0.0, $2152 = 0, $2153 = 0.0, $2154 = 0.0, $2155 = 0;
 var $2156 = 0.0, $2157 = 0.0, $2158 = 0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0, $2166 = 0.0, $2167 = 0.0, $2168 = 0.0, $2169 = 0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0;
 var $2174 = 0, $2175 = 0.0, $2176 = 0.0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0.0, $2181 = 0, $2182 = 0.0, $2183 = 0.0, $2184 = 0, $2185 = 0, $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $2189 = 0, $219 = 0, $2190 = 0.0, $2191 = 0.0;
 var $2192 = 0.0, $2193 = 0.0, $2194 = 0, $2195 = 0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0, $2203 = 0, $2204 = 0.0, $2205 = 0.0, $2206 = 0.0, $2207 = 0, $2208 = 0.0, $2209 = 0.0;
 var $221 = 0, $2210 = 0.0, $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0.0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0, $2223 = 0.0, $2224 = 0, $2225 = 0.0, $2226 = 0.0, $2227 = 0.0;
 var $2228 = 0.0, $2229 = 0.0, $223 = 0, $2230 = 0.0, $2231 = 0.0, $2232 = 0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0, $2238 = 0, $2239 = 0.0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0;
 var $2246 = 0.0, $2247 = 0.0, $2248 = 0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0, $2257 = 0, $2258 = 0.0, $2259 = 0.0, $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0;
 var $2264 = 0.0, $2265 = 0.0, $2266 = 0.0, $2267 = 0, $2268 = 0.0, $2269 = 0.0, $227 = 0, $2270 = 0.0, $2271 = 0.0, $2272 = 0.0, $2273 = 0, $2274 = 0.0, $2275 = 0.0, $2276 = 0, $2277 = 0, $2278 = 0.0, $2279 = 0.0, $228 = 0, $2280 = 0, $2281 = 0;
 var $2282 = 0.0, $2283 = 0.0, $2284 = 0, $2285 = 0, $2286 = 0.0, $2287 = 0.0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0.0, $2291 = 0.0, $2292 = 0, $2293 = 0, $2294 = 0.0, $2295 = 0.0, $2296 = 0, $2297 = 0, $2298 = 0.0, $2299 = 0.0, $23 = 0.0;
 var $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0.0, $2303 = 0.0, $2304 = 0, $2305 = 0, $2306 = 0.0, $2307 = 0.0, $2308 = 0, $2309 = 0.0, $231 = 0, $2310 = 0, $2311 = 0.0, $2312 = 0.0, $2313 = 0, $2314 = 0.0, $2315 = 0, $2316 = 0.0, $2317 = 0.0;
 var $2318 = 0, $2319 = 0.0, $232 = 0, $2320 = 0, $2321 = 0.0, $2322 = 0.0, $2323 = 0, $2324 = 0.0, $2325 = 0, $2326 = 0.0, $2327 = 0.0, $2328 = 0, $2329 = 0.0, $233 = 0, $2330 = 0, $2331 = 0.0, $2332 = 0.0, $2333 = 0, $2334 = 0.0, $2335 = 0;
 var $2336 = 0.0, $2337 = 0.0, $2338 = 0, $2339 = 0.0, $234 = 0, $2340 = 0, $2341 = 0.0, $2342 = 0.0, $2343 = 0, $2344 = 0.0, $2345 = 0, $2346 = 0.0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0.0, $2352 = 0.0, $2353 = 0.0;
 var $2354 = 0.0, $2355 = 0.0, $2356 = 0, $2357 = 0.0, $2358 = 0.0, $2359 = 0.0, $236 = 0.0, $2360 = 0.0, $2361 = 0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0, $2366 = 0.0, $2367 = 0, $2368 = 0.0, $2369 = 0.0, $237 = 0, $2370 = 0, $2371 = 0.0;
 var $2372 = 0.0, $2373 = 0.0, $2374 = 0.0, $2375 = 0.0, $2376 = 0, $2377 = 0, $2378 = 0.0, $2379 = 0, $238 = 0, $2380 = 0.0, $2381 = 0.0, $2382 = 0, $2383 = 0.0, $2384 = 0.0, $2385 = 0.0, $2386 = 0.0, $2387 = 0.0, $2388 = 0, $2389 = 0, $239 = 0.0;
 var $2390 = 0.0, $2391 = 0, $2392 = 0.0, $2393 = 0.0, $2394 = 0, $2395 = 0.0, $2396 = 0.0, $2397 = 0.0, $2398 = 0.0, $2399 = 0.0, $24 = 0.0, $240 = 0.0, $2400 = 0, $2401 = 0.0, $2402 = 0.0, $2403 = 0.0, $2404 = 0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0;
 var $2408 = 0.0, $2409 = 0.0, $241 = 0.0, $2410 = 0.0, $2411 = 0.0, $2412 = 0.0, $2413 = 0, $2414 = 0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0, $242 = 0, $2420 = 0.0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0.0, $2425 = 0.0;
 var $2426 = 0, $2427 = 0, $2428 = 0.0, $2429 = 0.0, $243 = 0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0.0, $2435 = 0.0, $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0;
 var $2444 = 0.0, $2445 = 0.0, $2446 = 0.0, $2447 = 0.0, $2448 = 0.0, $2449 = 0.0, $245 = 0.0, $2450 = 0.0, $2451 = 0.0, $2452 = 0, $2453 = 0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0.0, $2458 = 0.0, $2459 = 0.0, $246 = 0, $2460 = 0.0, $2461 = 0.0;
 var $2462 = 0.0, $2463 = 0.0, $2464 = 0.0, $2465 = 0, $2466 = 0, $2467 = 0.0, $2468 = 0.0, $2469 = 0.0, $247 = 0, $2470 = 0.0, $2471 = 0.0, $2472 = 0.0, $2473 = 0.0, $2474 = 0.0, $2475 = 0.0, $2476 = 0.0, $2477 = 0.0, $2478 = 0, $2479 = 0, $248 = 0.0;
 var $2480 = 0.0, $2481 = 0, $2482 = 0.0, $2483 = 0.0, $2484 = 0, $2485 = 0.0, $2486 = 0.0, $2487 = 0, $2488 = 0, $2489 = 0.0, $249 = 0.0, $2490 = 0.0, $2491 = 0, $2492 = 0, $2493 = 0.0, $2494 = 0.0, $2495 = 0, $2496 = 0.0, $2497 = 0, $2498 = 0.0;
 var $2499 = 0.0, $25 = 0, $250 = 0.0, $2500 = 0, $2501 = 0.0, $2502 = 0, $2503 = 0.0, $2504 = 0.0, $2505 = 0, $2506 = 0.0, $2507 = 0, $2508 = 0.0, $2509 = 0.0, $251 = 0, $2510 = 0, $2511 = 0.0, $2512 = 0, $2513 = 0.0, $2514 = 0.0, $2515 = 0;
 var $2516 = 0.0, $2517 = 0, $2518 = 0.0, $2519 = 0.0, $252 = 0, $2520 = 0, $2521 = 0.0, $2522 = 0, $2523 = 0.0, $2524 = 0.0, $2525 = 0, $2526 = 0.0, $2527 = 0, $2528 = 0.0, $2529 = 0.0, $253 = 0, $2530 = 0, $2531 = 0.0, $2532 = 0, $2533 = 0.0;
 var $2534 = 0.0, $2535 = 0.0, $2536 = 0.0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0.0, $2541 = 0.0, $2542 = 0.0, $2543 = 0, $2544 = 0.0, $2545 = 0.0, $2546 = 0.0, $2547 = 0.0, $2548 = 0, $2549 = 0.0, $255 = 0, $2550 = 0.0, $2551 = 0.0;
 var $2552 = 0, $2553 = 0.0, $2554 = 0, $2555 = 0.0, $2556 = 0.0, $2557 = 0, $2558 = 0.0, $2559 = 0.0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0, $2564 = 0, $2565 = 0.0, $2566 = 0.0, $2567 = 0.0, $2568 = 0.0, $2569 = 0, $257 = 0;
 var $2570 = 0.0, $2571 = 0, $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0, $2576 = 0, $2577 = 0.0, $2578 = 0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0, $2582 = 0.0, $2583 = 0.0, $2584 = 0.0, $2585 = 0.0, $2586 = 0.0, $2587 = 0, $2588 = 0.0;
 var $2589 = 0.0, $259 = 0, $2590 = 0.0, $2591 = 0, $2592 = 0.0, $2593 = 0.0, $2594 = 0.0, $2595 = 0.0, $2596 = 0.0, $2597 = 0.0, $2598 = 0.0, $2599 = 0.0, $26 = 0.0, $260 = 0, $2600 = 0, $2601 = 0.0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0;
 var $2606 = 0.0, $2607 = 0.0, $2608 = 0, $2609 = 0.0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0, $2614 = 0.0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0.0, $2619 = 0.0, $262 = 0.0, $2620 = 0.0, $2621 = 0, $2622 = 0.0, $2623 = 0.0;
 var $2624 = 0.0, $2625 = 0.0, $2626 = 0, $2627 = 0.0, $2628 = 0.0, $2629 = 0.0, $263 = 0, $2630 = 0, $2631 = 0.0, $2632 = 0.0, $2633 = 0.0, $2634 = 0.0, $2635 = 0.0, $2636 = 0.0, $2637 = 0.0, $2638 = 0.0, $2639 = 0, $264 = 0, $2640 = 0.0, $2641 = 0.0;
 var $2642 = 0.0, $2643 = 0.0, $2644 = 0.0, $2645 = 0.0, $2646 = 0.0, $2647 = 0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0.0, $2651 = 0.0, $2652 = 0, $2653 = 0.0, $2654 = 0.0, $2655 = 0.0, $2656 = 0.0, $2657 = 0.0, $2658 = 0.0, $2659 = 0.0, $266 = 0.0;
 var $2660 = 0, $2661 = 0.0, $2662 = 0.0, $2663 = 0.0, $2664 = 0.0, $2665 = 0, $2666 = 0, $2667 = 0.0, $2668 = 0, $2669 = 0.0, $267 = 0, $2670 = 0, $2671 = 0.0, $2672 = 0.0, $2673 = 0, $2674 = 0, $2675 = 0.0, $2676 = 0.0, $2677 = 0, $2678 = 0;
 var $2679 = 0.0, $268 = 0, $2680 = 0.0, $2681 = 0, $2682 = 0.0, $2683 = 0, $2684 = 0.0, $2685 = 0.0, $2686 = 0, $2687 = 0.0, $2688 = 0, $2689 = 0.0, $269 = 0, $2690 = 0.0, $2691 = 0, $2692 = 0.0, $2693 = 0, $2694 = 0.0, $2695 = 0.0, $2696 = 0;
 var $2697 = 0.0, $2698 = 0, $2699 = 0.0, $27 = 0, $270 = 0.0, $2700 = 0.0, $2701 = 0, $2702 = 0.0, $2703 = 0, $2704 = 0.0, $2705 = 0.0, $2706 = 0, $2707 = 0.0, $2708 = 0, $2709 = 0.0, $271 = 0, $2710 = 0.0, $2711 = 0, $2712 = 0.0, $2713 = 0;
 var $2714 = 0.0, $2715 = 0.0, $2716 = 0, $2717 = 0.0, $2718 = 0, $2719 = 0.0, $272 = 0, $2720 = 0.0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0, $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0, $273 = 0.0, $2730 = 0.0, $2731 = 0.0;
 var $2732 = 0.0, $2733 = 0.0, $2734 = 0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0, $2739 = 0.0, $274 = 0.0, $2740 = 0, $2741 = 0.0, $2742 = 0.0, $2743 = 0, $2744 = 0.0, $2745 = 0.0, $2746 = 0.0, $2747 = 0.0, $2748 = 0.0, $2749 = 0, $275 = 0;
 var $2750 = 0, $2751 = 0.0, $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0, $2756 = 0.0, $2757 = 0, $2758 = 0.0, $2759 = 0.0, $276 = 0.0, $2760 = 0.0, $2761 = 0, $2762 = 0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0, $2768 = 0.0;
 var $2769 = 0, $277 = 0, $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0, $2774 = 0.0, $2775 = 0.0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0.0, $278 = 0.0, $2780 = 0.0, $2781 = 0, $2782 = 0.0, $2783 = 0.0, $2784 = 0.0, $2785 = 0.0, $2786 = 0;
 var $2787 = 0.0, $2788 = 0.0, $2789 = 0.0, $279 = 0.0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0.0, $2794 = 0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0.0, $2799 = 0, $28 = 0.0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0;
 var $2804 = 0.0, $2805 = 0.0, $2806 = 0.0, $2807 = 0, $2808 = 0.0, $2809 = 0.0, $281 = 0.0, $2810 = 0.0, $2811 = 0.0, $2812 = 0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0, $2816 = 0.0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0, $2820 = 0, $2821 = 0.0;
 var $2822 = 0.0, $2823 = 0.0, $2824 = 0.0, $2825 = 0, $2826 = 0.0, $2827 = 0.0, $2828 = 0.0, $2829 = 0.0, $283 = 0.0, $2830 = 0.0, $2831 = 0.0, $2832 = 0.0, $2833 = 0, $2834 = 0.0, $2835 = 0.0, $2836 = 0.0, $2837 = 0.0, $2838 = 0, $2839 = 0.0, $284 = 0.0;
 var $2840 = 0.0, $2841 = 0.0, $2842 = 0.0, $2843 = 0.0, $2844 = 0.0, $2845 = 0.0, $2846 = 0, $2847 = 0.0, $2848 = 0.0, $2849 = 0.0, $285 = 0, $2850 = 0.0, $2851 = 0, $2852 = 0, $2853 = 0.0, $2854 = 0, $2855 = 0.0, $2856 = 0, $2857 = 0, $2858 = 0.0;
 var $2859 = 0, $286 = 0.0, $2860 = 0.0, $2861 = 0.0, $2862 = 0, $2863 = 0, $2864 = 0.0, $2865 = 0.0, $2866 = 0, $2867 = 0, $2868 = 0.0, $2869 = 0.0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0.0, $2873 = 0, $2874 = 0.0, $2875 = 0.0, $2876 = 0;
 var $2877 = 0.0, $2878 = 0, $2879 = 0.0, $288 = 0.0, $2880 = 0.0, $2881 = 0, $2882 = 0.0, $2883 = 0, $2884 = 0.0, $2885 = 0.0, $2886 = 0, $2887 = 0.0, $2888 = 0, $2889 = 0.0, $289 = 0.0, $2890 = 0.0, $2891 = 0.0, $2892 = 0, $2893 = 0.0, $2894 = 0.0;
 var $2895 = 0.0, $2896 = 0.0, $2897 = 0.0, $2898 = 0, $2899 = 0.0, $29 = 0.0, $290 = 0, $2900 = 0.0, $2901 = 0, $2902 = 0, $2903 = 0.0, $2904 = 0, $2905 = 0, $2906 = 0.0, $2907 = 0, $2908 = 0, $2909 = 0.0, $291 = 0.0, $2910 = 0, $2911 = 0;
 var $2912 = 0.0, $2913 = 0, $2914 = 0.0, $2915 = 0, $2916 = 0.0, $2917 = 0, $2918 = 0.0, $2919 = 0.0, $292 = 0, $2920 = 0.0, $2921 = 0.0, $2922 = 0, $2923 = 0.0, $2924 = 0.0, $2925 = 0.0, $2926 = 0.0, $2927 = 0, $2928 = 0.0, $2929 = 0.0, $293 = 0.0;
 var $2930 = 0, $2931 = 0, $2932 = 0.0, $2933 = 0.0, $2934 = 0, $2935 = 0, $2936 = 0.0, $2937 = 0.0, $2938 = 0, $2939 = 0, $294 = 0.0, $2940 = 0.0, $2941 = 0.0, $2942 = 0, $2943 = 0, $2944 = 0.0, $2945 = 0.0, $2946 = 0, $2947 = 0, $2948 = 0.0;
 var $2949 = 0.0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0.0, $2953 = 0.0, $2954 = 0, $2955 = 0, $2956 = 0.0, $2957 = 0.0, $2958 = 0, $2959 = 0, $296 = 0.0, $2960 = 0.0, $2961 = 0.0, $2962 = 0, $2963 = 0, $2964 = 0.0, $2965 = 0.0, $2966 = 0;
 var $2967 = 0, $2968 = 0, $2969 = 0.0, $297 = 0, $2970 = 0.0, $2971 = 0, $2972 = 0.0, $2973 = 0.0, $2974 = 0, $2975 = 0.0, $2976 = 0.0, $2977 = 0, $2978 = 0.0, $2979 = 0.0, $298 = 0.0, $2980 = 0.0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0;
 var $2985 = 0, $2986 = 0.0, $2987 = 0, $2988 = 0.0, $2989 = 0.0, $299 = 0.0, $2990 = 0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0.0, $2995 = 0.0, $2996 = 0.0, $2997 = 0, $2998 = 0, $2999 = 0.0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0.0;
 var $3001 = 0, $3002 = 0.0, $3003 = 0.0, $3004 = 0, $3005 = 0.0, $3006 = 0.0, $3007 = 0.0, $3008 = 0.0, $3009 = 0.0, $301 = 0.0, $3010 = 0.0, $3011 = 0, $3012 = 0.0, $3013 = 0, $3014 = 0.0, $3015 = 0.0, $3016 = 0, $3017 = 0.0, $3018 = 0.0, $3019 = 0.0;
 var $302 = 0, $3020 = 0.0, $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0.0, $3025 = 0.0, $3026 = 0, $3027 = 0, $3028 = 0.0, $3029 = 0.0, $303 = 0.0, $3030 = 0, $3031 = 0.0, $3032 = 0.0, $3033 = 0, $3034 = 0.0, $3035 = 0.0, $3036 = 0.0, $3037 = 0.0;
 var $3038 = 0.0, $3039 = 0, $304 = 0.0, $3040 = 0.0, $3041 = 0, $3042 = 0.0, $3043 = 0.0, $3044 = 0, $3045 = 0.0, $3046 = 0.0, $3047 = 0.0, $3048 = 0.0, $3049 = 0.0, $305 = 0, $3050 = 0.0, $3051 = 0.0, $3052 = 0.0, $3053 = 0.0, $3054 = 0.0, $3055 = 0.0;
 var $3056 = 0, $3057 = 0.0, $3058 = 0.0, $3059 = 0.0, $306 = 0.0, $3060 = 0, $3061 = 0.0, $3062 = 0.0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0;
 var $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0.0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0.0, $3085 = 0, $3086 = 0, $3087 = 0.0, $3088 = 0.0, $3089 = 0.0, $309 = 0.0, $3090 = 0, $3091 = 0;
 var $3092 = 0, $3093 = 0.0, $3094 = 0, $3095 = 0, $3096 = 0.0, $3097 = 0.0, $3098 = 0.0, $3099 = 0, $31 = 0.0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0;
 var $311 = 0.0, $3110 = 0.0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0.0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0.0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0.0, $3122 = 0.0, $3123 = 0, $3124 = 0.0, $3125 = 0.0, $3126 = 0, $3127 = 0.0;
 var $3128 = 0.0, $3129 = 0, $313 = 0.0, $3130 = 0.0, $3131 = 0.0, $3132 = 0.0, $3133 = 0.0, $3134 = 0.0, $3135 = 0.0, $3136 = 0.0, $3137 = 0, $3138 = 0.0, $3139 = 0.0, $314 = 0.0, $3140 = 0.0, $3141 = 0, $3142 = 0.0, $3143 = 0, $3144 = 0.0, $3145 = 0.0;
 var $3146 = 0.0, $3147 = 0.0, $3148 = 0, $3149 = 0.0, $315 = 0.0, $3150 = 0, $3151 = 0.0, $3152 = 0.0, $3153 = 0.0, $3154 = 0, $3155 = 0.0, $3156 = 0, $3157 = 0.0, $3158 = 0.0, $3159 = 0.0, $316 = 0.0, $3160 = 0.0, $3161 = 0.0, $3162 = 0, $3163 = 0.0;
 var $3164 = 0, $3165 = 0.0, $3166 = 0.0, $3167 = 0.0, $3168 = 0, $3169 = 0, $317 = 0.0, $3170 = 0.0, $3171 = 0.0, $3172 = 0.0, $3173 = 0, $3174 = 0.0, $3175 = 0.0, $3176 = 0.0, $3177 = 0.0, $3178 = 0, $3179 = 0.0, $318 = 0.0, $3180 = 0.0, $3181 = 0;
 var $3182 = 0.0, $3183 = 0.0, $3184 = 0.0, $3185 = 0.0, $3186 = 0, $3187 = 0.0, $3188 = 0.0, $3189 = 0, $319 = 0.0, $3190 = 0.0, $3191 = 0.0, $3192 = 0.0, $3193 = 0.0, $3194 = 0, $3195 = 0.0, $3196 = 0.0, $3197 = 0, $3198 = 0, $3199 = 0.0, $32 = 0;
 var $320 = 0.0, $3200 = 0.0, $3201 = 0.0, $3202 = 0.0, $3203 = 0.0, $3204 = 0.0, $3205 = 0.0, $3206 = 0, $3207 = 0.0, $3208 = 0, $3209 = 0.0, $321 = 0.0, $3210 = 0.0, $3211 = 0.0, $3212 = 0, $3213 = 0.0, $3214 = 0.0, $3215 = 0, $3216 = 0.0, $3217 = 0;
 var $3218 = 0.0, $3219 = 0.0, $322 = 0.0, $3220 = 0.0, $3221 = 0, $3222 = 0.0, $3223 = 0.0, $3224 = 0.0, $3225 = 0.0, $3226 = 0.0, $3227 = 0, $3228 = 0.0, $3229 = 0.0, $323 = 0, $3230 = 0.0, $3231 = 0.0, $3232 = 0, $3233 = 0.0, $3234 = 0.0, $3235 = 0;
 var $3236 = 0.0, $3237 = 0.0, $3238 = 0.0, $3239 = 0.0, $324 = 0.0, $3240 = 0.0, $3241 = 0, $3242 = 0.0, $3243 = 0.0, $3244 = 0, $3245 = 0, $3246 = 0.0, $3247 = 0.0, $3248 = 0, $3249 = 0, $325 = 0.0, $3250 = 0.0, $3251 = 0.0, $3252 = 0, $3253 = 0;
 var $3254 = 0.0, $3255 = 0.0, $3256 = 0, $3257 = 0, $3258 = 0.0, $3259 = 0.0, $326 = 0.0, $3260 = 0, $3261 = 0, $3262 = 0.0, $3263 = 0.0, $3264 = 0, $3265 = 0, $3266 = 0.0, $3267 = 0.0, $3268 = 0, $3269 = 0, $327 = 0.0, $3270 = 0.0, $3271 = 0.0;
 var $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0.0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0.0;
 var $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0.0, $330 = 0.0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0.0;
 var $3308 = 0, $3309 = 0, $331 = 0.0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0;
 var $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0.0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0.0, $3338 = 0, $3339 = 0, $334 = 0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0;
 var $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0.0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0.0, $3360 = 0, $3361 = 0;
 var $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0.0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0.0;
 var $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0.0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0, $3394 = 0, $3395 = 0, $3396 = 0, $3397 = 0.0, $3398 = 0;
 var $3399 = 0, $34 = 0.0, $340 = 0.0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0.0, $3410 = 0, $3411 = 0, $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0;
 var $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0.0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0.0, $3428 = 0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0;
 var $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0, $345 = 0.0, $3450 = 0, $3451 = 0;
 var $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0.0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0, $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0.0;
 var $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0.0, $3476 = 0, $3477 = 0.0, $3478 = 0.0, $3479 = 0, $348 = 0.0, $3480 = 0.0, $3481 = 0, $3482 = 0.0, $3483 = 0.0, $3484 = 0.0, $3485 = 0, $3486 = 0.0, $3487 = 0.0, $3488 = 0;
 var $3489 = 0.0, $349 = 0, $3490 = 0.0, $3491 = 0, $3492 = 0.0, $3493 = 0, $3494 = 0.0, $3495 = 0.0, $3496 = 0.0, $3497 = 0, $3498 = 0.0, $3499 = 0.0, $35 = 0, $350 = 0.0, $3500 = 0.0, $3501 = 0.0, $3502 = 0.0, $3503 = 0.0, $3504 = 0, $3505 = 0.0;
 var $3506 = 0.0, $3507 = 0, $3508 = 0, $3509 = 0.0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0.0, $3513 = 0, $3514 = 0, $3515 = 0.0, $3516 = 0, $3517 = 0, $3518 = 0.0, $3519 = 0, $352 = 0.0, $3520 = 0.0, $3521 = 0, $3522 = 0.0, $3523 = 0;
 var $3524 = 0.0, $3525 = 0, $3526 = 0.0, $3527 = 0, $3528 = 0.0, $3529 = 0.0, $353 = 0.0, $3530 = 0, $3531 = 0, $3532 = 0.0, $3533 = 0.0, $3534 = 0, $3535 = 0, $3536 = 0.0, $3537 = 0.0, $3538 = 0, $3539 = 0, $354 = 0.0, $3540 = 0.0, $3541 = 0.0;
 var $3542 = 0, $3543 = 0, $3544 = 0.0, $3545 = 0.0, $3546 = 0, $3547 = 0, $3548 = 0.0, $3549 = 0.0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0.0, $3553 = 0.0, $3554 = 0, $3555 = 0, $3556 = 0.0, $3557 = 0.0, $3558 = 0, $3559 = 0, $356 = 0;
 var $3560 = 0.0, $3561 = 0.0, $3562 = 0, $3563 = 0, $3564 = 0.0, $3565 = 0.0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0.0, $357 = 0.0, $3570 = 0.0, $3571 = 0, $3572 = 0.0, $3573 = 0.0, $3574 = 0.0, $3575 = 0.0, $3576 = 0, $3577 = 0.0, $3578 = 0.0;
 var $3579 = 0, $358 = 0.0, $3580 = 0.0, $3581 = 0.0, $3582 = 0.0, $3583 = 0.0, $3584 = 0, $3585 = 0, $3586 = 0.0, $3587 = 0.0, $3588 = 0.0, $3589 = 0.0, $359 = 0.0, $3590 = 0, $3591 = 0.0, $3592 = 0, $3593 = 0.0, $3594 = 0.0, $3595 = 0.0, $3596 = 0.0;
 var $3597 = 0, $3598 = 0, $3599 = 0.0, $36 = 0.0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0, $3604 = 0.0, $3605 = 0.0, $3606 = 0, $3607 = 0.0, $3608 = 0.0, $3609 = 0.0, $361 = 0, $3610 = 0.0, $3611 = 0, $3612 = 0.0, $3613 = 0.0;
 var $3614 = 0.0, $3615 = 0.0, $3616 = 0, $3617 = 0.0, $3618 = 0, $3619 = 0.0, $362 = 0.0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0.0, $3624 = 0.0, $3625 = 0.0, $3626 = 0, $3627 = 0, $3628 = 0.0, $3629 = 0.0, $363 = 0, $3630 = 0.0, $3631 = 0.0;
 var $3632 = 0, $3633 = 0.0, $3634 = 0.0, $3635 = 0, $3636 = 0.0, $3637 = 0.0, $3638 = 0.0, $3639 = 0, $364 = 0.0, $3640 = 0.0, $3641 = 0.0, $3642 = 0.0, $3643 = 0.0, $3644 = 0, $3645 = 0.0, $3646 = 0, $3647 = 0.0, $3648 = 0.0, $3649 = 0.0, $365 = 0.0;
 var $3650 = 0.0, $3651 = 0.0, $3652 = 0.0, $3653 = 0.0, $3654 = 0.0, $3655 = 0.0, $3656 = 0, $3657 = 0.0, $3658 = 0.0, $3659 = 0.0, $366 = 0.0, $3660 = 0, $3661 = 0.0, $3662 = 0.0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0;
 var $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0.0, $3680 = 0, $3681 = 0, $3682 = 0, $3683 = 0, $3684 = 0.0, $3685 = 0, $3686 = 0;
 var $3687 = 0.0, $3688 = 0.0, $3689 = 0.0, $369 = 0.0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0.0, $3694 = 0, $3695 = 0, $3696 = 0.0, $3697 = 0.0, $3698 = 0.0, $3699 = 0, $37 = 0, $370 = 0.0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0;
 var $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0.0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0.0, $3715 = 0, $3716 = 0, $3717 = 0, $3718 = 0.0, $3719 = 0, $372 = 0.0, $3720 = 0, $3721 = 0.0;
 var $3722 = 0.0, $3723 = 0, $3724 = 0.0, $3725 = 0.0, $3726 = 0, $3727 = 0.0, $3728 = 0.0, $3729 = 0, $373 = 0.0, $3730 = 0.0, $3731 = 0.0, $3732 = 0.0, $3733 = 0.0, $3734 = 0.0, $3735 = 0.0, $3736 = 0.0, $3737 = 0.0, $3738 = 0, $3739 = 0.0, $374 = 0.0;
 var $3740 = 0, $3741 = 0.0, $3742 = 0.0, $3743 = 0.0, $3744 = 0.0, $3745 = 0, $3746 = 0.0, $3747 = 0, $3748 = 0.0, $3749 = 0.0, $375 = 0.0, $3750 = 0.0, $3751 = 0.0, $3752 = 0, $3753 = 0.0, $3754 = 0, $3755 = 0.0, $3756 = 0.0, $3757 = 0.0, $3758 = 0;
 var $3759 = 0.0, $376 = 0.0, $3760 = 0.0, $3761 = 0.0, $3762 = 0.0, $3763 = 0.0, $3764 = 0, $3765 = 0.0, $3766 = 0, $3767 = 0.0, $3768 = 0.0, $3769 = 0.0, $377 = 0.0, $3770 = 0.0, $3771 = 0.0, $3772 = 0, $3773 = 0.0, $3774 = 0, $3775 = 0.0, $3776 = 0.0;
 var $3777 = 0.0, $3778 = 0, $3779 = 0, $378 = 0.0, $3780 = 0.0, $3781 = 0, $3782 = 0.0, $3783 = 0.0, $3784 = 0, $3785 = 0.0, $3786 = 0, $3787 = 0.0, $3788 = 0.0, $3789 = 0.0, $379 = 0.0, $3790 = 0.0, $3791 = 0.0, $3792 = 0.0, $3793 = 0, $3794 = 0;
 var $3795 = 0.0, $3796 = 0.0, $3797 = 0.0, $3798 = 0, $3799 = 0.0, $38 = 0.0, $380 = 0, $3800 = 0.0, $3801 = 0.0, $3802 = 0.0, $3803 = 0, $3804 = 0.0, $3805 = 0.0, $3806 = 0, $3807 = 0.0, $3808 = 0, $3809 = 0.0, $381 = 0.0, $3810 = 0.0, $3811 = 0.0;
 var $3812 = 0.0, $3813 = 0.0, $3814 = 0, $3815 = 0.0, $3816 = 0, $3817 = 0.0, $3818 = 0.0, $3819 = 0.0, $382 = 0.0, $3820 = 0.0, $3821 = 0.0, $3822 = 0, $3823 = 0, $3824 = 0.0, $3825 = 0.0, $3826 = 0.0, $3827 = 0.0, $3828 = 0.0, $3829 = 0.0, $383 = 0.0;
 var $3830 = 0.0, $3831 = 0.0, $3832 = 0.0, $3833 = 0, $3834 = 0.0, $3835 = 0.0, $3836 = 0, $3837 = 0.0, $3838 = 0.0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0.0, $3842 = 0.0, $3843 = 0, $3844 = 0, $3845 = 0.0, $3846 = 0.0, $3847 = 0, $3848 = 0;
 var $3849 = 0.0, $385 = 0.0, $3850 = 0.0, $3851 = 0, $3852 = 0, $3853 = 0.0, $3854 = 0.0, $3855 = 0, $3856 = 0, $3857 = 0.0, $3858 = 0.0, $3859 = 0, $386 = 0.0, $3860 = 0, $3861 = 0.0, $3862 = 0.0, $3863 = 0, $3864 = 0, $3865 = 0.0, $3866 = 0.0;
 var $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0.0, $3870 = 0, $3871 = 0, $3872 = 0.0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0.0, $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0;
 var $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0.0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0.0, $390 = 0.0, $3900 = 0, $3901 = 0;
 var $3902 = 0.0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0.0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0.0;
 var $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0.0, $3933 = 0, $3934 = 0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0;
 var $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0.0, $3950 = 0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0;
 var $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0.0, $3960 = 0, $3961 = 0, $3962 = 0.0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0.0, $3970 = 0, $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0;
 var $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0.0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0, $399 = 0.0, $3990 = 0, $3991 = 0, $3992 = 0.0;
 var $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0.0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0, $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0;
 var $401 = 0.0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0.0, $4020 = 0, $4021 = 0, $4022 = 0.0, $4023 = 0, $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0;
 var $4028 = 0, $4029 = 0, $403 = 0.0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0.0, $4040 = 0, $4041 = 0, $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0;
 var $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0.0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0;
 var $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0.0, $4070 = 0.0, $4071 = 0.0, $4072 = 0, $4073 = 0.0, $4074 = 0, $4075 = 0.0, $4076 = 0.0, $4077 = 0, $4078 = 0.0, $4079 = 0, $408 = 0.0, $4080 = 0.0, $4081 = 0.0;
 var $4082 = 0.0, $4083 = 0, $4084 = 0.0, $4085 = 0, $4086 = 0.0, $4087 = 0.0, $4088 = 0, $4089 = 0.0, $409 = 0.0, $4090 = 0.0, $4091 = 0.0, $4092 = 0.0, $4093 = 0.0, $4094 = 0, $4095 = 0.0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0, $41 = 0.0;
 var $410 = 0, $4100 = 0.0, $4101 = 0, $4102 = 0.0, $4103 = 0.0, $4104 = 0.0, $4105 = 0, $4106 = 0.0, $4107 = 0.0, $4108 = 0.0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0, $4111 = 0, $4112 = 0.0, $4113 = 0, $4114 = 0.0, $4115 = 0.0, $4116 = 0.0, $4117 = 0;
 var $4118 = 0.0, $4119 = 0.0, $412 = 0.0, $4120 = 0.0, $4121 = 0.0, $4122 = 0.0, $4123 = 0.0, $4124 = 0, $4125 = 0.0, $4126 = 0, $4127 = 0, $4128 = 0.0, $4129 = 0, $413 = 0.0, $4130 = 0.0, $4131 = 0.0, $4132 = 0, $4133 = 0, $4134 = 0.0, $4135 = 0.0;
 var $4136 = 0.0, $4137 = 0.0, $4138 = 0, $4139 = 0.0, $414 = 0.0, $4140 = 0, $4141 = 0.0, $4142 = 0, $4143 = 0.0, $4144 = 0, $4145 = 0.0, $4146 = 0, $4147 = 0.0, $4148 = 0, $4149 = 0.0, $415 = 0.0, $4150 = 0, $4151 = 0.0, $4152 = 0, $4153 = 0.0;
 var $4154 = 0, $4155 = 0.0, $4156 = 0.0, $4157 = 0, $4158 = 0, $4159 = 0.0, $416 = 0.0, $4160 = 0.0, $4161 = 0, $4162 = 0, $4163 = 0.0, $4164 = 0.0, $4165 = 0, $4166 = 0, $4167 = 0.0, $4168 = 0.0, $4169 = 0, $417 = 0.0, $4170 = 0, $4171 = 0.0;
 var $4172 = 0.0, $4173 = 0, $4174 = 0, $4175 = 0.0, $4176 = 0.0, $4177 = 0, $4178 = 0, $4179 = 0.0, $418 = 0.0, $4180 = 0.0, $4181 = 0, $4182 = 0, $4183 = 0.0, $4184 = 0.0, $4185 = 0, $4186 = 0, $4187 = 0.0, $4188 = 0.0, $4189 = 0, $419 = 0;
 var $4190 = 0, $4191 = 0.0, $4192 = 0.0, $4193 = 0, $4194 = 0, $4195 = 0.0, $4196 = 0.0, $4197 = 0, $4198 = 0, $4199 = 0.0, $42 = 0, $420 = 0.0, $4200 = 0.0, $4201 = 0, $4202 = 0, $4203 = 0, $4204 = 0.0, $4205 = 0.0, $4206 = 0, $4207 = 0;
 var $4208 = 0.0, $4209 = 0.0, $421 = 0.0, $4210 = 0, $4211 = 0, $4212 = 0.0, $4213 = 0.0, $4214 = 0, $4215 = 0.0, $4216 = 0.0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0, $422 = 0.0, $4220 = 0, $4221 = 0, $4222 = 0.0, $4223 = 0, $4224 = 0.0, $4225 = 0.0;
 var $4226 = 0.0, $4227 = 0.0, $4228 = 0.0, $4229 = 0.0, $423 = 0, $4230 = 0.0, $4231 = 0, $4232 = 0.0, $4233 = 0.0, $4234 = 0.0, $4235 = 0, $4236 = 0.0, $4237 = 0.0, $4238 = 0, $4239 = 0, $424 = 0.0, $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0;
 var $4244 = 0, $4245 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0.0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0, $4256 = 0, $4257 = 0, $4258 = 0, $4259 = 0.0, $426 = 0.0, $4260 = 0, $4261 = 0;
 var $4262 = 0.0, $4263 = 0.0, $4264 = 0.0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0.0, $4269 = 0, $427 = 0.0, $4270 = 0, $4271 = 0.0, $4272 = 0.0, $4273 = 0.0, $4274 = 0, $4275 = 0, $4276 = 0, $4277 = 0, $4278 = 0, $4279 = 0, $428 = 0.0;
 var $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0.0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0.0, $429 = 0.0, $4290 = 0, $4291 = 0, $4292 = 0, $4293 = 0.0, $4294 = 0, $4295 = 0, $4296 = 0.0, $4297 = 0.0, $4298 = 0;
 var $4299 = 0.0, $43 = 0.0, $430 = 0.0, $4300 = 0.0, $4301 = 0, $4302 = 0.0, $4303 = 0.0, $4304 = 0.0, $4305 = 0.0, $4306 = 0.0, $4307 = 0.0, $4308 = 0, $4309 = 0.0, $431 = 0.0, $4310 = 0.0, $4311 = 0.0, $4312 = 0.0, $4313 = 0, $4314 = 0.0, $4315 = 0.0;
 var $4316 = 0.0, $4317 = 0.0, $4318 = 0, $4319 = 0, $432 = 0, $4320 = 0.0, $4321 = 0.0, $4322 = 0.0, $4323 = 0, $4324 = 0.0, $4325 = 0.0, $4326 = 0, $4327 = 0, $4328 = 0.0, $4329 = 0.0, $433 = 0, $4330 = 0.0, $4331 = 0, $4332 = 0.0, $4333 = 0.0;
 var $4334 = 0, $4335 = 0.0, $4336 = 0.0, $4337 = 0.0, $4338 = 0.0, $4339 = 0, $434 = 0.0, $4340 = 0.0, $4341 = 0.0, $4342 = 0, $4343 = 0, $4344 = 0.0, $4345 = 0, $4346 = 0.0, $4347 = 0.0, $4348 = 0.0, $4349 = 0.0, $435 = 0.0, $4350 = 0.0, $4351 = 0;
 var $4352 = 0, $4353 = 0.0, $4354 = 0.0, $4355 = 0.0, $4356 = 0.0, $4357 = 0.0, $4358 = 0.0, $4359 = 0, $436 = 0.0, $4360 = 0.0, $4361 = 0, $4362 = 0.0, $4363 = 0.0, $4364 = 0.0, $4365 = 0, $4366 = 0, $4367 = 0.0, $4368 = 0, $4369 = 0.0, $437 = 0.0;
 var $4370 = 0.0, $4371 = 0.0, $4372 = 0.0, $4373 = 0.0, $4374 = 0, $4375 = 0.0, $4376 = 0.0, $4377 = 0.0, $4378 = 0.0, $4379 = 0.0, $438 = 0.0, $4380 = 0, $4381 = 0.0, $4382 = 0.0, $4383 = 0, $4384 = 0, $4385 = 0.0, $4386 = 0.0, $4387 = 0, $4388 = 0;
 var $4389 = 0.0, $439 = 0.0, $4390 = 0.0, $4391 = 0, $4392 = 0, $4393 = 0.0, $4394 = 0.0, $4395 = 0, $4396 = 0, $4397 = 0.0, $4398 = 0.0, $4399 = 0, $44 = 0.0, $440 = 0.0, $4400 = 0, $4401 = 0.0, $4402 = 0.0, $4403 = 0, $4404 = 0, $4405 = 0.0;
 var $4406 = 0.0, $4407 = 0, $4408 = 0, $4409 = 0.0, $441 = 0.0, $4410 = 0.0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0.0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0.0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0;
 var $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0.0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0.0, $4440 = 0, $4441 = 0;
 var $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0.0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0;
 var $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0.0, $4477 = 0, $4478 = 0;
 var $4479 = 0, $448 = 0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0.0, $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0, $4495 = 0, $4496 = 0;
 var $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0, $450 = 0.0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0.0, $4507 = 0, $4508 = 0, $4509 = 0, $451 = 0, $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0;
 var $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0, $4518 = 0, $4519 = 0, $452 = 0.0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0, $4524 = 0, $4525 = 0, $4526 = 0, $4527 = 0, $4528 = 0, $4529 = 0, $453 = 0.0, $4530 = 0, $4531 = 0;
 var $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0.0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0, $4541 = 0, $4542 = 0, $4543 = 0, $4544 = 0, $4545 = 0, $4546 = 0, $4547 = 0, $4548 = 0, $4549 = 0, $455 = 0;
 var $4550 = 0, $4551 = 0, $4552 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4557 = 0, $4558 = 0, $4559 = 0, $456 = 0.0, $4560 = 0, $4561 = 0, $4562 = 0, $4563 = 0, $4564 = 0, $4565 = 0, $4566 = 0.0, $4567 = 0, $4568 = 0;
 var $4569 = 0, $457 = 0.0, $4570 = 0, $4571 = 0, $4572 = 0, $4573 = 0, $4574 = 0, $4575 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4579 = 0, $458 = 0, $4580 = 0, $4581 = 0, $4582 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0;
 var $4587 = 0, $4588 = 0, $4589 = 0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0, $4593 = 0, $4594 = 0, $4595 = 0, $4596 = 0, $4597 = 0, $4598 = 0, $4599 = 0, $46 = 0.0, $460 = 0.0, $4600 = 0, $4601 = 0, $4602 = 0, $4603 = 0;
 var $4604 = 0, $4605 = 0, $4606 = 0, $4607 = 0, $4608 = 0, $4609 = 0, $461 = 0.0, $4610 = 0, $4611 = 0, $4612 = 0, $4613 = 0, $4614 = 0.0, $4615 = 0, $4616 = 0.0, $4617 = 0.0, $4618 = 0, $4619 = 0.0, $462 = 0, $4620 = 0, $4621 = 0.0;
 var $4622 = 0.0, $4623 = 0, $4624 = 0.0, $4625 = 0.0, $4626 = 0, $4627 = 0.0, $4628 = 0, $4629 = 0.0, $463 = 0.0, $4630 = 0.0, $4631 = 0, $4632 = 0.0, $4633 = 0, $4634 = 0.0, $4635 = 0.0, $4636 = 0, $4637 = 0.0, $4638 = 0, $4639 = 0.0, $464 = 0;
 var $4640 = 0.0, $4641 = 0, $4642 = 0.0, $4643 = 0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0, $4648 = 0.0, $4649 = 0.0, $465 = 0.0, $4650 = 0.0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0, $4655 = 0.0, $4656 = 0, $4657 = 0.0, $4658 = 0.0;
 var $4659 = 0, $466 = 0.0, $4660 = 0.0, $4661 = 0.0, $4662 = 0, $4663 = 0, $4664 = 0.0, $4665 = 0, $4666 = 0.0, $4667 = 0.0, $4668 = 0, $4669 = 0.0, $467 = 0, $4670 = 0, $4671 = 0.0, $4672 = 0, $4673 = 0.0, $4674 = 0.0, $4675 = 0.0, $4676 = 0.0;
 var $4677 = 0.0, $4678 = 0, $4679 = 0, $468 = 0.0, $4680 = 0.0, $4681 = 0, $4682 = 0.0, $4683 = 0.0, $4684 = 0.0, $4685 = 0.0, $4686 = 0.0, $4687 = 0, $4688 = 0, $4689 = 0.0, $469 = 0, $4690 = 0, $4691 = 0.0, $4692 = 0.0, $4693 = 0.0, $4694 = 0.0;
 var $4695 = 0.0, $4696 = 0, $4697 = 0.0, $4698 = 0, $4699 = 0.0, $47 = 0, $470 = 0.0, $4700 = 0.0, $4701 = 0.0, $4702 = 0.0, $4703 = 0.0, $4704 = 0, $4705 = 0.0, $4706 = 0, $4707 = 0.0, $4708 = 0.0, $4709 = 0.0, $471 = 0.0, $4710 = 0.0, $4711 = 0.0;
 var $4712 = 0, $4713 = 0.0, $4714 = 0.0, $4715 = 0.0, $4716 = 0.0, $4717 = 0.0, $4718 = 0, $4719 = 0.0, $472 = 0, $4720 = 0.0, $4721 = 0, $4722 = 0, $4723 = 0.0, $4724 = 0.0, $4725 = 0, $4726 = 0, $4727 = 0.0, $4728 = 0.0, $4729 = 0, $473 = 0.0;
 var $4730 = 0, $4731 = 0.0, $4732 = 0.0, $4733 = 0, $4734 = 0, $4735 = 0.0, $4736 = 0.0, $4737 = 0, $4738 = 0, $4739 = 0.0, $474 = 0, $4740 = 0.0, $4741 = 0, $4742 = 0, $4743 = 0.0, $4744 = 0.0, $4745 = 0, $4746 = 0, $4747 = 0.0, $4748 = 0.0;
 var $4749 = 0, $475 = 0.0, $4750 = 0, $4751 = 0.0, $4752 = 0.0, $4753 = 0, $4754 = 0, $4755 = 0.0, $4756 = 0.0, $4757 = 0, $4758 = 0, $4759 = 0.0, $476 = 0.0, $4760 = 0.0, $4761 = 0, $4762 = 0, $4763 = 0.0, $4764 = 0.0, $4765 = 0, $4766 = 0;
 var $4767 = 0, $4768 = 0.0, $4769 = 0.0, $477 = 0, $4770 = 0.0, $4771 = 0, $4772 = 0, $4773 = 0.0, $4774 = 0.0, $4775 = 0.0, $4776 = 0, $4777 = 0, $4778 = 0.0, $4779 = 0.0, $478 = 0.0, $4780 = 0.0, $4781 = 0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0;
 var $4785 = 0.0, $4786 = 0.0, $4787 = 0.0, $4788 = 0, $4789 = 0, $479 = 0, $4790 = 0.0, $4791 = 0.0, $4792 = 0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0, $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0.0, $480 = 0.0, $4800 = 0.0, $4801 = 0;
 var $4802 = 0.0, $4803 = 0.0, $4804 = 0.0, $4805 = 0, $4806 = 0.0, $4807 = 0.0, $4808 = 0, $4809 = 0, $481 = 0.0, $4810 = 0, $4811 = 0, $4812 = 0, $4813 = 0, $4814 = 0, $4815 = 0, $4816 = 0, $4817 = 0, $4818 = 0, $4819 = 0, $482 = 0;
 var $4820 = 0, $4821 = 0, $4822 = 0, $4823 = 0, $4824 = 0, $4825 = 0, $4826 = 0, $4827 = 0, $4828 = 0, $4829 = 0.0, $483 = 0.0, $4830 = 0, $4831 = 0, $4832 = 0.0, $4833 = 0.0, $4834 = 0.0, $4835 = 0, $4836 = 0, $4837 = 0, $4838 = 0.0;
 var $4839 = 0, $484 = 0, $4840 = 0, $4841 = 0.0, $4842 = 0.0, $4843 = 0.0, $4844 = 0, $4845 = 0, $4846 = 0, $4847 = 0, $4848 = 0, $4849 = 0, $485 = 0.0, $4850 = 0, $4851 = 0, $4852 = 0, $4853 = 0, $4854 = 0, $4855 = 0.0, $4856 = 0;
 var $4857 = 0, $4858 = 0, $4859 = 0.0, $486 = 0.0, $4860 = 0, $4861 = 0, $4862 = 0, $4863 = 0.0, $4864 = 0, $4865 = 0, $4866 = 0.0, $4867 = 0.0, $4868 = 0, $4869 = 0.0, $487 = 0, $4870 = 0.0, $4871 = 0, $4872 = 0.0, $4873 = 0.0, $4874 = 0.0;
 var $4875 = 0.0, $4876 = 0.0, $4877 = 0, $4878 = 0.0, $4879 = 0.0, $488 = 0.0, $4880 = 0.0, $4881 = 0, $4882 = 0.0, $4883 = 0.0, $4884 = 0, $4885 = 0, $4886 = 0.0, $4887 = 0.0, $4888 = 0.0, $4889 = 0, $489 = 0, $4890 = 0.0, $4891 = 0.0, $4892 = 0;
 var $4893 = 0, $4894 = 0.0, $4895 = 0.0, $4896 = 0.0, $4897 = 0, $4898 = 0.0, $4899 = 0.0, $49 = 0.0, $490 = 0.0, $4900 = 0, $4901 = 0, $4902 = 0.0, $4903 = 0.0, $4904 = 0.0, $4905 = 0.0, $4906 = 0, $4907 = 0.0, $4908 = 0.0, $4909 = 0, $491 = 0.0;
 var $4910 = 0.0, $4911 = 0.0, $4912 = 0.0, $4913 = 0.0, $4914 = 0, $4915 = 0.0, $4916 = 0.0, $4917 = 0, $4918 = 0, $4919 = 0.0, $492 = 0, $4920 = 0, $4921 = 0.0, $4922 = 0.0, $4923 = 0.0, $4924 = 0.0, $4925 = 0, $4926 = 0.0, $4927 = 0.0, $4928 = 0.0;
 var $4929 = 0.0, $493 = 0.0, $4930 = 0.0, $4931 = 0, $4932 = 0, $4933 = 0.0, $4934 = 0, $4935 = 0.0, $4936 = 0.0, $4937 = 0.0, $4938 = 0.0, $4939 = 0.0, $494 = 0, $4940 = 0, $4941 = 0.0, $4942 = 0.0, $4943 = 0.0, $4944 = 0.0, $4945 = 0.0, $4946 = 0;
 var $4947 = 0.0, $4948 = 0.0, $4949 = 0, $495 = 0.0, $4950 = 0, $4951 = 0.0, $4952 = 0.0, $4953 = 0, $4954 = 0, $4955 = 0.0, $4956 = 0.0, $4957 = 0, $4958 = 0, $4959 = 0.0, $496 = 0.0, $4960 = 0.0, $4961 = 0, $4962 = 0, $4963 = 0.0, $4964 = 0.0;
 var $4965 = 0, $4966 = 0, $4967 = 0.0, $4968 = 0.0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0.0, $4972 = 0.0, $4973 = 0, $4974 = 0, $4975 = 0.0, $4976 = 0.0, $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0.0, $4980 = 0, $4981 = 0, $4982 = 0.0;
 var $4983 = 0, $4984 = 0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0.0;
 var $500 = 0.0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0.0, $5010 = 0, $5011 = 0, $5012 = 0.0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0;
 var $5018 = 0, $5019 = 0, $502 = 0.0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0, $503 = 0.0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0;
 var $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0.0, $5040 = 0, $5041 = 0, $5042 = 0.0, $5043 = 0, $5044 = 0, $5045 = 0, $5046 = 0, $5047 = 0, $5048 = 0, $5049 = 0, $505 = 0.0, $5050 = 0, $5051 = 0, $5052 = 0, $5053 = 0;
 var $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5059 = 0, $506 = 0.0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0, $5065 = 0, $5066 = 0, $5067 = 0, $5068 = 0, $5069 = 0, $507 = 0.0, $5070 = 0, $5071 = 0;
 var $5072 = 0.0, $5073 = 0, $5074 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5079 = 0, $508 = 0.0, $5080 = 0, $5081 = 0, $5082 = 0, $5083 = 0, $5084 = 0, $5085 = 0, $5086 = 0, $5087 = 0, $5088 = 0, $5089 = 0, $509 = 0.0;
 var $5090 = 0, $5091 = 0, $5092 = 0, $5093 = 0, $5094 = 0, $5095 = 0, $5096 = 0, $5097 = 0, $5098 = 0, $5099 = 0, $51 = 0.0, $510 = 0, $5100 = 0, $5101 = 0, $5102 = 0.0, $5103 = 0, $5104 = 0, $5105 = 0, $5106 = 0, $5107 = 0;
 var $5108 = 0, $5109 = 0, $511 = 0.0, $5110 = 0, $5111 = 0, $5112 = 0, $5113 = 0, $5114 = 0, $5115 = 0, $5116 = 0, $5117 = 0, $5118 = 0, $5119 = 0, $512 = 0.0, $5120 = 0, $5121 = 0, $5122 = 0, $5123 = 0, $5124 = 0, $5125 = 0;
 var $5126 = 0, $5127 = 0, $5128 = 0, $5129 = 0, $513 = 0.0, $5130 = 0, $5131 = 0, $5132 = 0.0, $5133 = 0, $5134 = 0, $5135 = 0, $5136 = 0, $5137 = 0, $5138 = 0, $5139 = 0, $514 = 0.0, $5140 = 0, $5141 = 0, $5142 = 0, $5143 = 0;
 var $5144 = 0, $5145 = 0, $5146 = 0, $5147 = 0, $5148 = 0, $5149 = 0, $515 = 0, $5150 = 0, $5151 = 0, $5152 = 0, $5153 = 0, $5154 = 0, $5155 = 0, $5156 = 0, $5157 = 0, $5158 = 0, $5159 = 0, $516 = 0.0, $5160 = 0, $5161 = 0;
 var $5162 = 0, $5163 = 0, $5164 = 0, $5165 = 0, $5166 = 0, $5167 = 0, $5168 = 0, $5169 = 0, $517 = 0.0, $5170 = 0, $5171 = 0, $5172 = 0, $5173 = 0, $5174 = 0, $5175 = 0, $5176 = 0, $5177 = 0, $5178 = 0, $5179 = 0, $518 = 0.0;
 var $5180 = 0.0, $5181 = 0, $5182 = 0.0, $5183 = 0.0, $5184 = 0.0, $5185 = 0, $5186 = 0.0, $5187 = 0, $5188 = 0.0, $5189 = 0.0, $519 = 0, $5190 = 0, $5191 = 0.0, $5192 = 0.0, $5193 = 0, $5194 = 0.0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0;
 var $5199 = 0.0, $52 = 0.0, $520 = 0.0, $5200 = 0, $5201 = 0.0, $5202 = 0, $5203 = 0.0, $5204 = 0, $5205 = 0, $5206 = 0.0, $5207 = 0, $5208 = 0.0, $5209 = 0, $521 = 0, $5210 = 0, $5211 = 0.0, $5212 = 0.0, $5213 = 0.0, $5214 = 0.0, $5215 = 0;
 var $5216 = 0.0, $5217 = 0.0, $5218 = 0, $5219 = 0.0, $522 = 0.0, $5220 = 0.0, $5221 = 0.0, $5222 = 0, $5223 = 0, $5224 = 0.0, $5225 = 0, $5226 = 0.0, $5227 = 0.0, $5228 = 0, $5229 = 0.0, $523 = 0.0, $5230 = 0.0, $5231 = 0.0, $5232 = 0.0, $5233 = 0.0;
 var $5234 = 0, $5235 = 0, $5236 = 0.0, $5237 = 0, $5238 = 0.0, $5239 = 0.0, $524 = 0, $5240 = 0, $5241 = 0.0, $5242 = 0.0, $5243 = 0.0, $5244 = 0.0, $5245 = 0.0, $5246 = 0, $5247 = 0, $5248 = 0.0, $5249 = 0, $525 = 0.0, $5250 = 0.0, $5251 = 0.0;
 var $5252 = 0.0, $5253 = 0, $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0.0, $5258 = 0.0, $5259 = 0, $526 = 0.0, $5260 = 0.0, $5261 = 0.0, $5262 = 0, $5263 = 0, $5264 = 0.0, $5265 = 0.0, $5266 = 0, $5267 = 0, $5268 = 0.0, $5269 = 0.0, $527 = 0.0;
 var $5270 = 0, $5271 = 0, $5272 = 0.0, $5273 = 0.0, $5274 = 0, $5275 = 0, $5276 = 0.0, $5277 = 0.0, $5278 = 0, $5279 = 0, $528 = 0.0, $5280 = 0.0, $5281 = 0.0, $5282 = 0, $5283 = 0, $5284 = 0.0, $5285 = 0.0, $5286 = 0, $5287 = 0, $5288 = 0.0;
 var $5289 = 0.0, $529 = 0.0, $5290 = 0, $5291 = 0, $5292 = 0.0, $5293 = 0.0, $5294 = 0, $5295 = 0, $5296 = 0.0, $5297 = 0.0, $5298 = 0, $5299 = 0, $53 = 0.0, $530 = 0, $5300 = 0, $5301 = 0.0, $5302 = 0.0, $5303 = 0.0, $5304 = 0, $5305 = 0;
 var $5306 = 0.0, $5307 = 0.0, $5308 = 0, $5309 = 0, $531 = 0, $5310 = 0.0, $5311 = 0.0, $5312 = 0.0, $5313 = 0, $5314 = 0.0, $5315 = 0.0, $5316 = 0.0, $5317 = 0.0, $5318 = 0.0, $5319 = 0, $532 = 0.0, $5320 = 0, $5321 = 0.0, $5322 = 0.0, $5323 = 0;
 var $5324 = 0.0, $5325 = 0.0, $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0.0, $5331 = 0, $5332 = 0.0, $5333 = 0.0, $5334 = 0.0, $5335 = 0, $5336 = 0.0, $5337 = 0.0, $5338 = 0, $5339 = 0, $534 = 0.0, $5340 = 0, $5341 = 0;
 var $5342 = 0, $5343 = 0, $5344 = 0, $5345 = 0, $5346 = 0, $5347 = 0, $5348 = 0, $5349 = 0, $535 = 0.0, $5350 = 0, $5351 = 0, $5352 = 0, $5353 = 0, $5354 = 0, $5355 = 0, $5356 = 0, $5357 = 0, $5358 = 0, $5359 = 0.0, $536 = 0;
 var $5360 = 0, $5361 = 0, $5362 = 0.0, $5363 = 0.0, $5364 = 0.0, $5365 = 0, $5366 = 0, $5367 = 0, $5368 = 0.0, $5369 = 0, $537 = 0.0, $5370 = 0, $5371 = 0.0, $5372 = 0.0, $5373 = 0.0, $5374 = 0, $5375 = 0, $5376 = 0, $5377 = 0, $5378 = 0;
 var $5379 = 0, $538 = 0.0, $5380 = 0, $5381 = 0, $5382 = 0, $5383 = 0, $5384 = 0, $5385 = 0.0, $5386 = 0, $5387 = 0, $5388 = 0, $5389 = 0.0, $539 = 0.0, $5390 = 0, $5391 = 0, $5392 = 0, $5393 = 0.0, $5394 = 0, $5395 = 0, $5396 = 0.0;
 var $5397 = 0.0, $5398 = 0, $5399 = 0.0, $54 = 0.0, $540 = 0.0, $5400 = 0.0, $5401 = 0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0, $5406 = 0.0, $5407 = 0.0, $5408 = 0, $5409 = 0.0, $541 = 0.0, $5410 = 0.0, $5411 = 0.0, $5412 = 0, $5413 = 0.0;
 var $5414 = 0.0, $5415 = 0, $5416 = 0, $5417 = 0.0, $5418 = 0.0, $5419 = 0.0, $542 = 0, $5420 = 0, $5421 = 0.0, $5422 = 0.0, $5423 = 0, $5424 = 0.0, $5425 = 0.0, $5426 = 0, $5427 = 0.0, $5428 = 0.0, $5429 = 0, $543 = 0, $5430 = 0.0, $5431 = 0.0;
 var $5432 = 0.0, $5433 = 0.0, $5434 = 0, $5435 = 0.0, $5436 = 0.0, $5437 = 0, $5438 = 0.0, $5439 = 0.0, $544 = 0.0, $5440 = 0.0, $5441 = 0.0, $5442 = 0, $5443 = 0.0, $5444 = 0.0, $5445 = 0, $5446 = 0, $5447 = 0.0, $5448 = 0, $5449 = 0.0, $545 = 0.0;
 var $5450 = 0.0, $5451 = 0.0, $5452 = 0.0, $5453 = 0, $5454 = 0.0, $5455 = 0.0, $5456 = 0.0, $5457 = 0.0, $5458 = 0.0, $5459 = 0, $546 = 0.0, $5460 = 0, $5461 = 0.0, $5462 = 0, $5463 = 0.0, $5464 = 0.0, $5465 = 0.0, $5466 = 0.0, $5467 = 0, $5468 = 0.0;
 var $5469 = 0.0, $547 = 0.0, $5470 = 0.0, $5471 = 0.0, $5472 = 0.0, $5473 = 0, $5474 = 0.0, $5475 = 0.0, $5476 = 0, $5477 = 0, $5478 = 0.0, $5479 = 0.0, $548 = 0, $5480 = 0, $5481 = 0, $5482 = 0.0, $5483 = 0.0, $5484 = 0, $5485 = 0, $5486 = 0.0;
 var $5487 = 0.0, $5488 = 0, $5489 = 0, $549 = 0.0, $5490 = 0.0, $5491 = 0.0, $5492 = 0, $5493 = 0, $5494 = 0.0, $5495 = 0.0, $5496 = 0, $5497 = 0, $5498 = 0.0, $5499 = 0.0, $55 = 0.0, $550 = 0, $5500 = 0, $5501 = 0, $5502 = 0.0, $5503 = 0.0;
 var $5504 = 0, $5505 = 0, $5506 = 0, $5507 = 0, $5508 = 0, $5509 = 0.0, $551 = 0.0, $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0, $5515 = 0, $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0.0, $5520 = 0, $5521 = 0;
 var $5522 = 0, $5523 = 0, $5524 = 0, $5525 = 0, $5526 = 0, $5527 = 0, $5528 = 0, $5529 = 0, $553 = 0.0, $5530 = 0, $5531 = 0, $5532 = 0, $5533 = 0, $5534 = 0, $5535 = 0, $5536 = 0, $5537 = 0, $5538 = 0, $5539 = 0.0, $554 = 0;
 var $5540 = 0, $5541 = 0, $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5547 = 0, $5548 = 0, $5549 = 0, $555 = 0.0, $5550 = 0, $5551 = 0, $5552 = 0, $5553 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5557 = 0, $5558 = 0;
 var $5559 = 0, $556 = 0.0, $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0, $5564 = 0, $5565 = 0, $5566 = 0, $5567 = 0, $5568 = 0, $5569 = 0.0, $557 = 0.0, $5570 = 0, $5571 = 0, $5572 = 0, $5573 = 0, $5574 = 0, $5575 = 0, $5576 = 0;
 var $5577 = 0, $5578 = 0, $5579 = 0, $558 = 0, $5580 = 0, $5581 = 0, $5582 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0, $5588 = 0, $5589 = 0, $559 = 0.0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0;
 var $5595 = 0, $5596 = 0, $5597 = 0, $5598 = 0, $5599 = 0.0, $56 = 0.0, $560 = 0.0, $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0.0, $5610 = 0, $5611 = 0;
 var $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0.0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0, $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0, $5628 = 0, $5629 = 0.0, $563 = 0.0;
 var $5630 = 0, $5631 = 0, $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0, $5637 = 0, $5638 = 0, $5639 = 0, $564 = 0.0, $5640 = 0, $5641 = 0, $5642 = 0, $5643 = 0, $5644 = 0, $5645 = 0, $5646 = 0, $5647 = 0, $5648 = 0;
 var $5649 = 0, $565 = 0.0, $5650 = 0, $5651 = 0, $5652 = 0, $5653 = 0, $5654 = 0, $5655 = 0, $5656 = 0, $5657 = 0, $5658 = 0, $5659 = 0.0, $566 = 0.0, $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0;
 var $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0, $5673 = 0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0, $5678 = 0, $5679 = 0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0;
 var $5685 = 0, $5686 = 0, $5687 = 0, $5688 = 0, $5689 = 0, $569 = 0.0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0, $5695 = 0, $5696 = 0, $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0.0, $570 = 0.0, $5700 = 0, $5701 = 0;
 var $5702 = 0, $5703 = 0, $5704 = 0, $5705 = 0, $5706 = 0, $5707 = 0.0, $5708 = 0, $5709 = 0.0, $571 = 0.0, $5710 = 0.0, $5711 = 0.0, $5712 = 0, $5713 = 0.0, $5714 = 0.0, $5715 = 0, $5716 = 0.0, $5717 = 0.0, $5718 = 0, $5719 = 0.0, $572 = 0.0;
 var $5720 = 0.0, $5721 = 0, $5722 = 0.0, $5723 = 0.0, $5724 = 0.0, $5725 = 0.0, $5726 = 0.0, $5727 = 0.0, $5728 = 0.0, $5729 = 0, $573 = 0.0, $5730 = 0.0, $5731 = 0, $5732 = 0.0, $5733 = 0.0, $5734 = 0, $5735 = 0.0, $5736 = 0.0, $5737 = 0, $5738 = 0;
 var $5739 = 0.0, $574 = 0.0, $5740 = 0, $5741 = 0, $5742 = 0.0, $5743 = 0.0, $5744 = 0.0, $5745 = 0.0, $5746 = 0, $5747 = 0, $5748 = 0.0, $5749 = 0, $575 = 0.0, $5750 = 0.0, $5751 = 0.0, $5752 = 0, $5753 = 0.0, $5754 = 0.0, $5755 = 0.0, $5756 = 0.0;
 var $5757 = 0.0, $5758 = 0, $5759 = 0, $576 = 0.0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0, $5765 = 0.0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0, $5769 = 0.0, $577 = 0.0, $5770 = 0, $5771 = 0, $5772 = 0.0, $5773 = 0.0, $5774 = 0.0;
 var $5775 = 0.0, $5776 = 0, $5777 = 0.0, $5778 = 0.0, $5779 = 0.0, $578 = 0.0, $5780 = 0.0, $5781 = 0.0, $5782 = 0, $5783 = 0, $5784 = 0.0, $5785 = 0.0, $5786 = 0.0, $5787 = 0.0, $5788 = 0.0, $5789 = 0, $579 = 0.0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0;
 var $5793 = 0.0, $5794 = 0.0, $5795 = 0, $5796 = 0.0, $5797 = 0.0, $5798 = 0, $5799 = 0, $58 = 0, $580 = 0, $5800 = 0.0, $5801 = 0.0, $5802 = 0, $5803 = 0, $5804 = 0.0, $5805 = 0.0, $5806 = 0, $5807 = 0, $5808 = 0.0, $5809 = 0.0, $581 = 0.0;
 var $5810 = 0, $5811 = 0, $5812 = 0.0, $5813 = 0.0, $5814 = 0, $5815 = 0, $5816 = 0.0, $5817 = 0.0, $5818 = 0, $5819 = 0, $582 = 0.0, $5820 = 0.0, $5821 = 0.0, $5822 = 0, $5823 = 0, $5824 = 0.0, $5825 = 0.0, $5826 = 0, $5827 = 0, $5828 = 0.0;
 var $5829 = 0.0, $583 = 0.0, $5830 = 0, $5831 = 0, $5832 = 0.0, $5833 = 0.0, $5834 = 0, $5835 = 0, $5836 = 0, $5837 = 0.0, $5838 = 0.0, $5839 = 0, $584 = 0, $5840 = 0, $5841 = 0.0, $5842 = 0.0, $5843 = 0.0, $5844 = 0, $5845 = 0, $5846 = 0.0;
 var $5847 = 0.0, $5848 = 0, $5849 = 0.0, $585 = 0.0, $5850 = 0.0, $5851 = 0.0, $5852 = 0.0, $5853 = 0.0, $5854 = 0.0, $5855 = 0, $5856 = 0, $5857 = 0.0, $5858 = 0, $5859 = 0.0, $586 = 0.0, $5860 = 0.0, $5861 = 0.0, $5862 = 0.0, $5863 = 0.0, $5864 = 0.0;
 var $5865 = 0.0, $5866 = 0.0, $5867 = 0, $5868 = 0.0, $5869 = 0.0, $587 = 0.0, $5870 = 0.0, $5871 = 0, $5872 = 0.0, $5873 = 0.0, $5874 = 0, $5875 = 0, $5876 = 0, $5877 = 0, $5878 = 0, $5879 = 0, $588 = 0.0, $5880 = 0, $5881 = 0, $5882 = 0;
 var $5883 = 0, $5884 = 0, $5885 = 0, $5886 = 0, $5887 = 0, $5888 = 0, $5889 = 0, $589 = 0.0, $5890 = 0, $5891 = 0, $5892 = 0, $5893 = 0, $5894 = 0, $5895 = 0.0, $5896 = 0, $5897 = 0, $5898 = 0.0, $5899 = 0.0, $59 = 0.0, $590 = 0.0;
 var $5900 = 0.0, $5901 = 0, $5902 = 0, $5903 = 0, $5904 = 0.0, $5905 = 0, $5906 = 0, $5907 = 0.0, $5908 = 0.0, $5909 = 0.0, $591 = 0.0, $5910 = 0, $5911 = 0, $5912 = 0, $5913 = 0, $5914 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0;
 var $5919 = 0, $592 = 0.0, $5920 = 0, $5921 = 0.0, $5922 = 0, $5923 = 0, $5924 = 0, $5925 = 0.0, $5926 = 0, $5927 = 0, $5928 = 0, $5929 = 0.0, $593 = 0, $5930 = 0, $5931 = 0, $5932 = 0.0, $5933 = 0.0, $5934 = 0, $5935 = 0.0, $5936 = 0.0;
 var $5937 = 0, $5938 = 0.0, $5939 = 0.0, $594 = 0.0, $5940 = 0.0, $5941 = 0.0, $5942 = 0.0, $5943 = 0.0, $5944 = 0.0, $5945 = 0, $5946 = 0.0, $5947 = 0.0, $5948 = 0.0, $5949 = 0, $595 = 0.0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0, $5954 = 0.0;
 var $5955 = 0.0, $5956 = 0, $5957 = 0.0, $5958 = 0.0, $5959 = 0.0, $596 = 0.0, $5960 = 0.0, $5961 = 0, $5962 = 0.0, $5963 = 0.0, $5964 = 0, $5965 = 0.0, $5966 = 0.0, $5967 = 0.0, $5968 = 0.0, $5969 = 0, $597 = 0, $5970 = 0.0, $5971 = 0.0, $5972 = 0;
 var $5973 = 0, $5974 = 0.0, $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0.0, $5979 = 0, $598 = 0.0, $5980 = 0, $5981 = 0.0, $5982 = 0.0, $5983 = 0, $5984 = 0.0, $5985 = 0.0, $5986 = 0.0, $5987 = 0.0, $5988 = 0.0, $5989 = 0, $599 = 0.0, $5990 = 0.0;
 var $5991 = 0, $5992 = 0.0, $5993 = 0, $5994 = 0.0, $5995 = 0.0, $5996 = 0.0, $5997 = 0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0.0, $600 = 0.0, $6000 = 0.0, $6001 = 0.0, $6002 = 0.0, $6003 = 0, $6004 = 0, $6005 = 0.0, $6006 = 0.0, $6007 = 0.0;
 var $6008 = 0.0, $6009 = 0.0, $601 = 0.0, $6010 = 0.0, $6011 = 0, $6012 = 0.0, $6013 = 0, $6014 = 0.0, $6015 = 0.0, $6016 = 0.0, $6017 = 0, $6018 = 0.0, $6019 = 0.0, $602 = 0.0, $6020 = 0, $6021 = 0, $6022 = 0.0, $6023 = 0.0, $6024 = 0, $6025 = 0;
 var $6026 = 0.0, $6027 = 0.0, $6028 = 0, $6029 = 0, $603 = 0.0, $6030 = 0.0, $6031 = 0.0, $6032 = 0, $6033 = 0, $6034 = 0.0, $6035 = 0.0, $6036 = 0, $6037 = 0, $6038 = 0.0, $6039 = 0.0, $604 = 0.0, $6040 = 0, $6041 = 0, $6042 = 0.0, $6043 = 0.0;
 var $6044 = 0, $6045 = 0, $6046 = 0.0, $6047 = 0.0, $6048 = 0, $6049 = 0, $605 = 0.0, $6050 = 0, $6051 = 0, $6052 = 0, $6053 = 0.0, $6054 = 0, $6055 = 0, $6056 = 0, $6057 = 0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0;
 var $6062 = 0, $6063 = 0, $6064 = 0, $6065 = 0, $6066 = 0, $6067 = 0, $6068 = 0, $6069 = 0, $607 = 0, $6070 = 0, $6071 = 0, $6072 = 0, $6073 = 0, $6074 = 0, $6075 = 0, $6076 = 0, $6077 = 0, $6078 = 0, $6079 = 0, $608 = 0.0;
 var $6080 = 0, $6081 = 0, $6082 = 0, $6083 = 0.0, $6084 = 0, $6085 = 0, $6086 = 0, $6087 = 0, $6088 = 0, $6089 = 0, $609 = 0.0, $6090 = 0, $6091 = 0, $6092 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6096 = 0, $6097 = 0, $6098 = 0;
 var $6099 = 0, $61 = 0.0, $610 = 0.0, $6100 = 0, $6101 = 0, $6102 = 0, $6103 = 0, $6104 = 0, $6105 = 0, $6106 = 0, $6107 = 0, $6108 = 0, $6109 = 0, $611 = 0.0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0.0, $6114 = 0, $6115 = 0;
 var $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0.0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0;
 var $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0.0, $6144 = 0, $6145 = 0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0;
 var $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0.0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0, $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0, $617 = 0.0;
 var $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0.0, $6174 = 0, $6175 = 0, $6176 = 0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0, $6181 = 0, $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0;
 var $6189 = 0, $619 = 0, $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6196 = 0, $6197 = 0, $6198 = 0, $6199 = 0, $62 = 0, $620 = 0.0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0.0, $6204 = 0, $6205 = 0;
 var $6206 = 0, $6207 = 0, $6208 = 0, $6209 = 0, $621 = 0.0, $6210 = 0, $6211 = 0, $6212 = 0, $6213 = 0, $6214 = 0, $6215 = 0, $6216 = 0, $6217 = 0, $6218 = 0, $6219 = 0, $622 = 0.0, $6220 = 0, $6221 = 0, $6222 = 0, $6223 = 0;
 var $6224 = 0, $6225 = 0, $6226 = 0, $6227 = 0, $6228 = 0, $6229 = 0, $623 = 0, $6230 = 0, $6231 = 0, $6232 = 0, $6233 = 0, $6234 = 0, $6235 = 0, $6236 = 0, $6237 = 0, $6238 = 0, $6239 = 0, $624 = 0.0, $6240 = 0, $6241 = 0;
 var $6242 = 0, $6243 = 0, $6244 = 0, $6245 = 0, $6246 = 0, $6247 = 0, $6248 = 0, $6249 = 0, $625 = 0.0, $6250 = 0, $6251 = 0.0, $6252 = 0, $6253 = 0.0, $6254 = 0.0, $6255 = 0.0, $6256 = 0, $6257 = 0.0, $6258 = 0.0, $6259 = 0, $626 = 0.0;
 var $6260 = 0.0, $6261 = 0.0, $6262 = 0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0.0, $6267 = 0.0, $6268 = 0.0, $6269 = 0.0, $627 = 0.0, $6270 = 0, $6271 = 0.0, $6272 = 0, $6273 = 0, $6274 = 0.0, $6275 = 0, $6276 = 0, $6277 = 0.0, $6278 = 0.0;
 var $6279 = 0.0, $628 = 0.0, $6280 = 0.0, $6281 = 0, $6282 = 0, $6283 = 0.0, $6284 = 0, $6285 = 0.0, $6286 = 0.0, $6287 = 0.0, $6288 = 0, $6289 = 0, $629 = 0.0, $6290 = 0.0, $6291 = 0, $6292 = 0.0, $6293 = 0.0, $6294 = 0, $6295 = 0.0, $6296 = 0.0;
 var $6297 = 0.0, $6298 = 0.0, $6299 = 0.0, $63 = 0.0, $630 = 0.0, $6300 = 0, $6301 = 0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0.0, $6306 = 0, $6307 = 0.0, $6308 = 0.0, $6309 = 0.0, $631 = 0.0, $6310 = 0.0, $6311 = 0.0, $6312 = 0, $6313 = 0;
 var $6314 = 0.0, $6315 = 0.0, $6316 = 0.0, $6317 = 0.0, $6318 = 0, $6319 = 0.0, $632 = 0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0, $6324 = 0, $6325 = 0, $6326 = 0.0, $6327 = 0.0, $6328 = 0.0, $6329 = 0.0, $633 = 0, $6330 = 0.0, $6331 = 0;
 var $6332 = 0.0, $6333 = 0.0, $6334 = 0.0, $6335 = 0.0, $6336 = 0.0, $6337 = 0, $6338 = 0.0, $6339 = 0.0, $634 = 0.0, $6340 = 0, $6341 = 0, $6342 = 0.0, $6343 = 0.0, $6344 = 0, $6345 = 0, $6346 = 0.0, $6347 = 0.0, $6348 = 0, $6349 = 0, $635 = 0.0;
 var $6350 = 0.0, $6351 = 0.0, $6352 = 0, $6353 = 0, $6354 = 0.0, $6355 = 0.0, $6356 = 0, $6357 = 0, $6358 = 0.0, $6359 = 0.0, $636 = 0.0, $6360 = 0, $6361 = 0, $6362 = 0.0, $6363 = 0.0, $6364 = 0, $6365 = 0, $6366 = 0.0, $6367 = 0.0, $6368 = 0;
 var $6369 = 0, $637 = 0, $6370 = 0.0, $6371 = 0.0, $6372 = 0, $6373 = 0, $6374 = 0.0, $6375 = 0.0, $6376 = 0, $6377 = 0, $6378 = 0, $6379 = 0.0, $638 = 0, $6380 = 0.0, $6381 = 0.0, $6382 = 0, $6383 = 0, $6384 = 0.0, $6385 = 0.0, $6386 = 0;
 var $6387 = 0, $6388 = 0.0, $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0, $6392 = 0.0, $6393 = 0.0, $6394 = 0.0, $6395 = 0.0, $6396 = 0.0, $6397 = 0, $6398 = 0, $6399 = 0.0, $64 = 0.0, $640 = 0.0, $6400 = 0.0, $6401 = 0, $6402 = 0.0, $6403 = 0.0;
 var $6404 = 0.0, $6405 = 0.0, $6406 = 0.0, $6407 = 0.0, $6408 = 0.0, $6409 = 0, $641 = 0.0, $6410 = 0.0, $6411 = 0.0, $6412 = 0.0, $6413 = 0, $6414 = 0.0, $6415 = 0.0, $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0.0, $6420 = 0, $6421 = 0;
 var $6422 = 0, $6423 = 0, $6424 = 0, $6425 = 0, $6426 = 0, $6427 = 0, $6428 = 0, $6429 = 0, $643 = 0.0, $6430 = 0, $6431 = 0, $6432 = 0, $6433 = 0, $6434 = 0, $6435 = 0, $6436 = 0, $6437 = 0.0, $6438 = 0, $6439 = 0, $644 = 0;
 var $6440 = 0.0, $6441 = 0.0, $6442 = 0.0, $6443 = 0, $6444 = 0, $6445 = 0, $6446 = 0.0, $6447 = 0, $6448 = 0, $6449 = 0.0, $645 = 0.0, $6450 = 0.0, $6451 = 0.0, $6452 = 0, $6453 = 0, $6454 = 0, $6455 = 0, $6456 = 0, $6457 = 0, $6458 = 0;
 var $6459 = 0, $646 = 0.0, $6460 = 0, $6461 = 0, $6462 = 0, $6463 = 0.0, $6464 = 0, $6465 = 0, $6466 = 0, $6467 = 0.0, $6468 = 0, $6469 = 0, $647 = 0, $6470 = 0, $6471 = 0.0, $6472 = 0, $6473 = 0, $6474 = 0.0, $6475 = 0.0, $6476 = 0;
 var $6477 = 0.0, $6478 = 0.0, $6479 = 0, $648 = 0, $6480 = 0.0, $6481 = 0.0, $6482 = 0.0, $6483 = 0, $6484 = 0.0, $6485 = 0.0, $6486 = 0, $6487 = 0.0, $6488 = 0.0, $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0, $6492 = 0, $6493 = 0.0, $6494 = 0.0;
 var $6495 = 0.0, $6496 = 0, $6497 = 0.0, $6498 = 0.0, $6499 = 0, $65 = 0, $650 = 0, $6500 = 0, $6501 = 0.0, $6502 = 0.0, $6503 = 0.0, $6504 = 0, $6505 = 0.0, $6506 = 0.0, $6507 = 0, $6508 = 0, $6509 = 0.0, $651 = 0, $6510 = 0.0, $6511 = 0.0;
 var $6512 = 0.0, $6513 = 0.0, $6514 = 0.0, $6515 = 0, $6516 = 0.0, $6517 = 0.0, $6518 = 0.0, $6519 = 0.0, $652 = 0.0, $6520 = 0, $6521 = 0.0, $6522 = 0.0, $6523 = 0, $6524 = 0, $6525 = 0.0, $6526 = 0, $6527 = 0.0, $6528 = 0.0, $6529 = 0.0, $653 = 0;
 var $6530 = 0.0, $6531 = 0, $6532 = 0.0, $6533 = 0.0, $6534 = 0.0, $6535 = 0.0, $6536 = 0.0, $6537 = 0, $6538 = 0, $6539 = 0.0, $654 = 0, $6540 = 0.0, $6541 = 0.0, $6542 = 0.0, $6543 = 0, $6544 = 0.0, $6545 = 0, $6546 = 0.0, $6547 = 0.0, $6548 = 0.0;
 var $6549 = 0.0, $655 = 0.0, $6550 = 0.0, $6551 = 0, $6552 = 0.0, $6553 = 0.0, $6554 = 0, $6555 = 0, $6556 = 0.0, $6557 = 0.0, $6558 = 0, $6559 = 0, $656 = 0, $6560 = 0.0, $6561 = 0.0, $6562 = 0, $6563 = 0, $6564 = 0.0, $6565 = 0.0, $6566 = 0;
 var $6567 = 0, $6568 = 0.0, $6569 = 0.0, $657 = 0, $6570 = 0, $6571 = 0, $6572 = 0.0, $6573 = 0.0, $6574 = 0, $6575 = 0, $6576 = 0.0, $6577 = 0.0, $6578 = 0, $6579 = 0, $658 = 0.0, $6580 = 0.0, $6581 = 0.0, $6582 = 0, $6583 = 0, $6584 = 0;
 var $6585 = 0, $6586 = 0, $6587 = 0.0, $6588 = 0, $6589 = 0, $659 = 0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0, $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0.0, $660 = 0.0, $6600 = 0, $6601 = 0;
 var $6602 = 0, $6603 = 0, $6604 = 0, $6605 = 0, $6606 = 0, $6607 = 0, $6608 = 0, $6609 = 0, $661 = 0.0, $6610 = 0, $6611 = 0, $6612 = 0, $6613 = 0, $6614 = 0, $6615 = 0, $6616 = 0, $6617 = 0.0, $6618 = 0, $6619 = 0, $662 = 0;
 var $6620 = 0, $6621 = 0, $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0, $6626 = 0, $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0, $6630 = 0, $6631 = 0, $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0, $6637 = 0, $6638 = 0;
 var $6639 = 0, $664 = 0.0, $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0.0, $6648 = 0, $6649 = 0, $665 = 0.0, $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0, $6655 = 0, $6656 = 0;
 var $6657 = 0, $6658 = 0, $6659 = 0, $666 = 0, $6660 = 0, $6661 = 0, $6662 = 0, $6663 = 0, $6664 = 0, $6665 = 0, $6666 = 0, $6667 = 0, $6668 = 0, $6669 = 0, $667 = 0, $6670 = 0, $6671 = 0, $6672 = 0, $6673 = 0, $6674 = 0;
 var $6675 = 0, $6676 = 0, $6677 = 0.0, $6678 = 0, $6679 = 0, $668 = 0.0, $6680 = 0, $6681 = 0, $6682 = 0, $6683 = 0, $6684 = 0, $6685 = 0, $6686 = 0, $6687 = 0, $6688 = 0, $6689 = 0, $669 = 0.0, $6690 = 0, $6691 = 0, $6692 = 0;
 var $6693 = 0, $6694 = 0, $6695 = 0, $6696 = 0, $6697 = 0, $6698 = 0, $6699 = 0, $67 = 0.0, $670 = 0, $6700 = 0, $6701 = 0, $6702 = 0, $6703 = 0, $6704 = 0, $6705 = 0, $6706 = 0, $6707 = 0.0, $6708 = 0, $6709 = 0, $671 = 0;
 var $6710 = 0, $6711 = 0, $6712 = 0, $6713 = 0, $6714 = 0, $6715 = 0, $6716 = 0, $6717 = 0, $6718 = 0, $6719 = 0, $672 = 0.0, $6720 = 0, $6721 = 0, $6722 = 0, $6723 = 0, $6724 = 0, $6725 = 0, $6726 = 0, $6727 = 0, $6728 = 0;
 var $6729 = 0, $673 = 0.0, $6730 = 0, $6731 = 0, $6732 = 0, $6733 = 0, $6734 = 0, $6735 = 0, $6736 = 0, $6737 = 0.0, $6738 = 0, $6739 = 0, $674 = 0, $6740 = 0, $6741 = 0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0, $6746 = 0;
 var $6747 = 0, $6748 = 0, $6749 = 0, $675 = 0, $6750 = 0, $6751 = 0, $6752 = 0, $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0, $6758 = 0, $6759 = 0, $676 = 0.0, $6760 = 0, $6761 = 0, $6762 = 0, $6763 = 0, $6764 = 0;
 var $6765 = 0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0.0, $6770 = 0, $6771 = 0, $6772 = 0, $6773 = 0, $6774 = 0, $6775 = 0, $6776 = 0, $6777 = 0, $6778 = 0, $6779 = 0, $678 = 0, $6780 = 0, $6781 = 0, $6782 = 0;
 var $6783 = 0, $6784 = 0, $6785 = 0.0, $6786 = 0, $6787 = 0.0, $6788 = 0.0, $6789 = 0.0, $679 = 0, $6790 = 0, $6791 = 0.0, $6792 = 0, $6793 = 0.0, $6794 = 0.0, $6795 = 0, $6796 = 0.0, $6797 = 0.0, $6798 = 0, $6799 = 0.0, $68 = 0, $680 = 0.0;
 var $6800 = 0.0, $6801 = 0.0, $6802 = 0.0, $6803 = 0.0, $6804 = 0.0, $6805 = 0.0, $6806 = 0, $6807 = 0.0, $6808 = 0, $6809 = 0, $681 = 0.0, $6810 = 0.0, $6811 = 0, $6812 = 0.0, $6813 = 0, $6814 = 0.0, $6815 = 0, $6816 = 0, $6817 = 0.0, $6818 = 0.0;
 var $6819 = 0, $682 = 0, $6820 = 0.0, $6821 = 0.0, $6822 = 0, $6823 = 0.0, $6824 = 0.0, $6825 = 0.0, $6826 = 0.0, $6827 = 0.0, $6828 = 0, $6829 = 0, $683 = 0, $6830 = 0.0, $6831 = 0, $6832 = 0.0, $6833 = 0.0, $6834 = 0, $6835 = 0.0, $6836 = 0.0;
 var $6837 = 0.0, $6838 = 0.0, $6839 = 0.0, $684 = 0, $6840 = 0, $6841 = 0, $6842 = 0.0, $6843 = 0, $6844 = 0.0, $6845 = 0.0, $6846 = 0, $6847 = 0.0, $6848 = 0.0, $6849 = 0.0, $685 = 0.0, $6850 = 0.0, $6851 = 0.0, $6852 = 0, $6853 = 0, $6854 = 0.0;
 var $6855 = 0, $6856 = 0.0, $6857 = 0.0, $6858 = 0.0, $6859 = 0, $686 = 0, $6860 = 0.0, $6861 = 0.0, $6862 = 0.0, $6863 = 0.0, $6864 = 0.0, $6865 = 0, $6866 = 0.0, $6867 = 0.0, $6868 = 0, $6869 = 0, $687 = 0.0, $6870 = 0.0, $6871 = 0.0, $6872 = 0;
 var $6873 = 0, $6874 = 0.0, $6875 = 0.0, $6876 = 0, $6877 = 0, $6878 = 0.0, $6879 = 0.0, $688 = 0, $6880 = 0, $6881 = 0, $6882 = 0.0, $6883 = 0.0, $6884 = 0, $6885 = 0, $6886 = 0.0, $6887 = 0.0, $6888 = 0, $6889 = 0, $689 = 0, $6890 = 0.0;
 var $6891 = 0.0, $6892 = 0, $6893 = 0, $6894 = 0.0, $6895 = 0.0, $6896 = 0, $6897 = 0, $6898 = 0.0, $6899 = 0.0, $69 = 0.0, $690 = 0, $6900 = 0, $6901 = 0, $6902 = 0.0, $6903 = 0.0, $6904 = 0, $6905 = 0, $6906 = 0, $6907 = 0.0, $6908 = 0.0;
 var $6909 = 0, $691 = 0.0, $6910 = 0, $6911 = 0, $6912 = 0, $6913 = 0.0, $6914 = 0.0, $6915 = 0, $6916 = 0.0, $6917 = 0.0, $6918 = 0, $6919 = 0, $692 = 0.0, $6920 = 0, $6921 = 0.0, $6922 = 0.0, $6923 = 0.0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0;
 var $6927 = 0.0, $6928 = 0.0, $6929 = 0.0, $693 = 0.0, $6930 = 0.0, $6931 = 0, $6932 = 0.0, $6933 = 0.0, $6934 = 0.0, $6935 = 0, $6936 = 0.0, $6937 = 0.0, $6938 = 0, $6939 = 0, $694 = 0.0, $6940 = 0, $6941 = 0, $6942 = 0, $6943 = 0, $6944 = 0;
 var $6945 = 0, $6946 = 0, $6947 = 0, $6948 = 0, $6949 = 0, $695 = 0.0, $6950 = 0, $6951 = 0, $6952 = 0, $6953 = 0, $6954 = 0, $6955 = 0, $6956 = 0, $6957 = 0, $6958 = 0, $6959 = 0.0, $696 = 0.0, $6960 = 0, $6961 = 0, $6962 = 0.0;
 var $6963 = 0.0, $6964 = 0.0, $6965 = 0, $6966 = 0, $6967 = 0, $6968 = 0.0, $6969 = 0, $697 = 0.0, $6970 = 0, $6971 = 0.0, $6972 = 0.0, $6973 = 0.0, $6974 = 0, $6975 = 0, $6976 = 0, $6977 = 0, $6978 = 0, $6979 = 0, $698 = 0.0, $6980 = 0;
 var $6981 = 0, $6982 = 0, $6983 = 0, $6984 = 0, $6985 = 0.0, $6986 = 0, $6987 = 0, $6988 = 0, $6989 = 0.0, $699 = 0.0, $6990 = 0, $6991 = 0, $6992 = 0, $6993 = 0.0, $6994 = 0, $6995 = 0, $6996 = 0.0, $6997 = 0.0, $6998 = 0, $6999 = 0.0;
 var $7 = 0, $70 = 0.0, $700 = 0.0, $7000 = 0.0, $7001 = 0, $7002 = 0.0, $7003 = 0.0, $7004 = 0, $7005 = 0.0, $7006 = 0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0, $7010 = 0.0, $7011 = 0, $7012 = 0.0, $7013 = 0, $7014 = 0.0, $7015 = 0.0;
 var $7016 = 0.0, $7017 = 0.0, $7018 = 0, $7019 = 0.0, $702 = 0, $7020 = 0, $7021 = 0.0, $7022 = 0.0, $7023 = 0.0, $7024 = 0, $7025 = 0, $7026 = 0.0, $7027 = 0.0, $7028 = 0.0, $7029 = 0.0, $703 = 0.0, $7030 = 0.0, $7031 = 0.0, $7032 = 0, $7033 = 0.0;
 var $7034 = 0.0, $7035 = 0.0, $7036 = 0.0, $7037 = 0, $7038 = 0.0, $7039 = 0.0, $704 = 0.0, $7040 = 0, $7041 = 0.0, $7042 = 0.0, $7043 = 0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0, $7048 = 0, $7049 = 0.0, $705 = 0, $7050 = 0.0, $7051 = 0.0;
 var $7052 = 0.0, $7053 = 0.0, $7054 = 0.0, $7055 = 0, $7056 = 0.0, $7057 = 0, $7058 = 0.0, $7059 = 0.0, $706 = 0, $7060 = 0.0, $7061 = 0, $7062 = 0, $7063 = 0.0, $7064 = 0.0, $7065 = 0.0, $7066 = 0.0, $7067 = 0.0, $7068 = 0.0, $7069 = 0, $707 = 0.0;
 var $7070 = 0.0, $7071 = 0, $7072 = 0.0, $7073 = 0.0, $7074 = 0.0, $7075 = 0, $7076 = 0.0, $7077 = 0.0, $7078 = 0, $7079 = 0, $708 = 0.0, $7080 = 0.0, $7081 = 0.0, $7082 = 0, $7083 = 0, $7084 = 0.0, $7085 = 0.0, $7086 = 0, $7087 = 0, $7088 = 0.0;
 var $7089 = 0.0, $709 = 0, $7090 = 0, $7091 = 0, $7092 = 0.0, $7093 = 0.0, $7094 = 0, $7095 = 0, $7096 = 0.0, $7097 = 0.0, $7098 = 0, $7099 = 0, $71 = 0, $710 = 0.0, $7100 = 0.0, $7101 = 0.0, $7102 = 0, $7103 = 0, $7104 = 0.0, $7105 = 0.0;
 var $7106 = 0, $7107 = 0, $7108 = 0, $7109 = 0, $711 = 0, $7110 = 0, $7111 = 0.0, $7112 = 0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0, $7117 = 0, $7118 = 0, $7119 = 0, $712 = 0.0, $7120 = 0, $7121 = 0, $7122 = 0, $7123 = 0;
 var $7124 = 0, $7125 = 0, $7126 = 0, $7127 = 0, $7128 = 0, $7129 = 0, $713 = 0.0, $7130 = 0, $7131 = 0, $7132 = 0, $7133 = 0, $7134 = 0, $7135 = 0, $7136 = 0, $7137 = 0, $7138 = 0, $7139 = 0, $714 = 0.0, $7140 = 0, $7141 = 0.0;
 var $7142 = 0, $7143 = 0, $7144 = 0, $7145 = 0, $7146 = 0, $7147 = 0, $7148 = 0, $7149 = 0, $715 = 0, $7150 = 0, $7151 = 0, $7152 = 0, $7153 = 0, $7154 = 0, $7155 = 0, $7156 = 0, $7157 = 0, $7158 = 0, $7159 = 0, $716 = 0.0;
 var $7160 = 0, $7161 = 0, $7162 = 0, $7163 = 0, $7164 = 0, $7165 = 0, $7166 = 0, $7167 = 0, $7168 = 0, $7169 = 0, $717 = 0.0, $7170 = 0, $7171 = 0.0, $7172 = 0, $7173 = 0, $7174 = 0, $7175 = 0, $7176 = 0, $7177 = 0, $7178 = 0;
 var $7179 = 0, $718 = 0, $7180 = 0, $7181 = 0, $7182 = 0, $7183 = 0, $7184 = 0, $7185 = 0, $7186 = 0, $7187 = 0, $7188 = 0, $7189 = 0, $719 = 0.0, $7190 = 0, $7191 = 0, $7192 = 0, $7193 = 0, $7194 = 0, $7195 = 0, $7196 = 0;
 var $7197 = 0, $7198 = 0, $7199 = 0, $72 = 0.0, $720 = 0, $7200 = 0, $7201 = 0.0, $7202 = 0, $7203 = 0, $7204 = 0, $7205 = 0, $7206 = 0, $7207 = 0, $7208 = 0, $7209 = 0, $721 = 0, $7210 = 0, $7211 = 0, $7212 = 0, $7213 = 0;
 var $7214 = 0, $7215 = 0, $7216 = 0, $7217 = 0, $7218 = 0, $7219 = 0, $722 = 0.0, $7220 = 0, $7221 = 0, $7222 = 0, $7223 = 0, $7224 = 0, $7225 = 0, $7226 = 0, $7227 = 0, $7228 = 0, $7229 = 0, $723 = 0.0, $7230 = 0, $7231 = 0.0;
 var $7232 = 0, $7233 = 0, $7234 = 0, $7235 = 0, $7236 = 0, $7237 = 0, $7238 = 0, $7239 = 0, $724 = 0, $7240 = 0, $7241 = 0, $7242 = 0, $7243 = 0, $7244 = 0, $7245 = 0, $7246 = 0, $7247 = 0, $7248 = 0, $7249 = 0, $725 = 0.0;
 var $7250 = 0, $7251 = 0, $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0, $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0, $7260 = 0, $7261 = 0.0, $7262 = 0, $7263 = 0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0, $7268 = 0;
 var $7269 = 0, $727 = 0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0.0, $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0;
 var $7287 = 0, $7288 = 0, $7289 = 0, $729 = 0.0, $7290 = 0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0, $7299 = 0, $73 = 0.0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0;
 var $7304 = 0, $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0, $7310 = 0, $7311 = 0, $7312 = 0.0, $7313 = 0, $7314 = 0, $7315 = 0, $7316 = 0.0, $7317 = 0, $7318 = 0.0, $7319 = 0, $732 = 0, $7320 = 0, $7321 = 0;
 var $7322 = 0, $7323 = 0.0, $7324 = 0, $7325 = 0, $7326 = 0, $7327 = 0, $7328 = 0.0, $7329 = 0.0, $733 = 0, $7330 = 0.0, $7331 = 0.0, $7332 = 0, $7333 = 0.0, $7334 = 0.0, $7335 = 0.0, $7336 = 0.0, $7337 = 0.0, $7338 = 0, $7339 = 0.0, $734 = 0;
 var $7340 = 0.0, $7341 = 0, $7342 = 0.0, $7343 = 0.0, $7344 = 0, $7345 = 0.0, $7346 = 0.0, $7347 = 0, $7348 = 0.0, $7349 = 0.0, $735 = 0, $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0, $7354 = 0, $7355 = 0.0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0;
 var $7359 = 0.0, $736 = 0, $7360 = 0.0, $7361 = 0.0, $7362 = 0.0, $7363 = 0.0, $7364 = 0, $7365 = 0.0, $7366 = 0.0, $7367 = 0, $7368 = 0.0, $7369 = 0.0, $737 = 0, $7370 = 0, $7371 = 0.0, $7372 = 0.0, $7373 = 0, $7374 = 0.0, $7375 = 0.0, $7376 = 0.0;
 var $7377 = 0.0, $7378 = 0.0, $7379 = 0.0, $738 = 0, $7380 = 0.0, $7381 = 0.0, $7382 = 0, $7383 = 0, $7384 = 0.0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0.0, $739 = 0, $7390 = 0.0, $7391 = 0.0, $7392 = 0, $7393 = 0.0, $7394 = 0.0;
 var $7395 = 0, $7396 = 0.0, $7397 = 0.0, $7398 = 0, $7399 = 0.0, $74 = 0.0, $740 = 0, $7400 = 0.0, $7401 = 0, $7402 = 0.0, $7403 = 0.0, $7404 = 0.0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0, $7410 = 0.0, $7411 = 0.0;
 var $7412 = 0, $7413 = 0.0, $7414 = 0.0, $7415 = 0.0, $7416 = 0, $7417 = 0.0, $7418 = 0.0, $7419 = 0, $742 = 0, $7420 = 0, $7421 = 0, $7422 = 0, $7423 = 0, $7424 = 0, $7425 = 0, $7426 = 0, $7427 = 0, $7428 = 0, $7429 = 0, $743 = 0;
 var $7430 = 0, $7431 = 0, $7432 = 0, $7433 = 0, $7434 = 0, $7435 = 0, $7436 = 0, $7437 = 0, $7438 = 0, $7439 = 0, $744 = 0, $7440 = 0.0, $7441 = 0, $7442 = 0, $7443 = 0.0, $7444 = 0.0, $7445 = 0.0, $7446 = 0, $7447 = 0, $7448 = 0;
 var $7449 = 0.0, $745 = 0, $7450 = 0, $7451 = 0, $7452 = 0.0, $7453 = 0.0, $7454 = 0.0, $7455 = 0, $7456 = 0, $7457 = 0, $7458 = 0, $7459 = 0, $746 = 0, $7460 = 0, $7461 = 0, $7462 = 0, $7463 = 0, $7464 = 0, $7465 = 0, $7466 = 0.0;
 var $7467 = 0, $7468 = 0, $7469 = 0, $747 = 0, $7470 = 0.0, $7471 = 0, $7472 = 0, $7473 = 0, $7474 = 0.0, $7475 = 0, $7476 = 0, $7477 = 0.0, $7478 = 0.0, $7479 = 0, $748 = 0, $7480 = 0.0, $7481 = 0.0, $7482 = 0, $7483 = 0.0, $7484 = 0;
 var $7485 = 0.0, $7486 = 0.0, $7487 = 0, $7488 = 0.0, $7489 = 0, $749 = 0, $7490 = 0.0, $7491 = 0.0, $7492 = 0, $7493 = 0.0, $7494 = 0, $7495 = 0.0, $7496 = 0.0, $7497 = 0, $7498 = 0.0, $7499 = 0.0, $75 = 0, $750 = 0, $7500 = 0, $7501 = 0.0;
 var $7502 = 0.0, $7503 = 0, $7504 = 0.0, $7505 = 0.0, $7506 = 0, $7507 = 0.0, $7508 = 0.0, $7509 = 0.0, $751 = 0, $7510 = 0.0, $7511 = 0.0, $7512 = 0.0, $7513 = 0.0, $7514 = 0.0, $7515 = 0.0, $7516 = 0, $7517 = 0.0, $7518 = 0.0, $7519 = 0.0, $752 = 0.0;
 var $7520 = 0.0, $7521 = 0.0, $7522 = 0.0, $7523 = 0, $7524 = 0.0, $7525 = 0.0, $7526 = 0, $7527 = 0, $7528 = 0.0, $7529 = 0, $753 = 0, $7530 = 0.0, $7531 = 0.0, $7532 = 0.0, $7533 = 0.0, $7534 = 0, $7535 = 0.0, $7536 = 0, $7537 = 0.0, $7538 = 0.0;
 var $7539 = 0.0, $754 = 0, $7540 = 0, $7541 = 0, $7542 = 0.0, $7543 = 0, $7544 = 0.0, $7545 = 0.0, $7546 = 0, $7547 = 0.0, $7548 = 0, $7549 = 0.0, $755 = 0.0, $7550 = 0.0, $7551 = 0.0, $7552 = 0.0, $7553 = 0.0, $7554 = 0.0, $7555 = 0, $7556 = 0.0;
 var $7557 = 0.0, $7558 = 0.0, $7559 = 0, $756 = 0.0, $7560 = 0.0, $7561 = 0.0, $7562 = 0, $7563 = 0.0, $7564 = 0.0, $7565 = 0.0, $7566 = 0.0, $7567 = 0, $7568 = 0.0, $7569 = 0.0, $757 = 0.0, $7570 = 0.0, $7571 = 0, $7572 = 0.0, $7573 = 0.0, $7574 = 0.0;
 var $7575 = 0.0, $7576 = 0.0, $7577 = 0, $7578 = 0.0, $7579 = 0.0, $758 = 0, $7580 = 0, $7581 = 0, $7582 = 0.0, $7583 = 0.0, $7584 = 0.0, $7585 = 0, $7586 = 0.0, $7587 = 0.0, $7588 = 0.0, $7589 = 0.0, $759 = 0, $7590 = 0.0, $7591 = 0.0, $7592 = 0.0;
 var $7593 = 0, $7594 = 0.0, $7595 = 0.0, $7596 = 0, $7597 = 0.0, $7598 = 0.0, $7599 = 0.0, $76 = 0.0, $760 = 0, $7600 = 0.0, $7601 = 0, $7602 = 0.0, $7603 = 0.0, $7604 = 0.0, $7605 = 0.0, $7606 = 0.0, $7607 = 0.0, $7608 = 0.0, $7609 = 0, $761 = 0.0;
 var $7610 = 0.0, $7611 = 0.0, $7612 = 0.0, $7613 = 0.0, $7614 = 0, $7615 = 0.0, $7616 = 0.0, $7617 = 0.0, $7618 = 0.0, $7619 = 0.0, $762 = 0, $7620 = 0.0, $7621 = 0.0, $7622 = 0, $7623 = 0.0, $7624 = 0.0, $7625 = 0.0, $7626 = 0.0, $7627 = 0, $7628 = 0.0;
 var $7629 = 0.0, $763 = 0, $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0.0, $7634 = 0.0, $7635 = 0, $7636 = 0.0, $7637 = 0.0, $7638 = 0, $7639 = 0.0, $764 = 0.0, $7640 = 0, $7641 = 0.0, $7642 = 0.0, $7643 = 0.0, $7644 = 0.0, $7645 = 0, $7646 = 0.0;
 var $7647 = 0.0, $7648 = 0.0, $7649 = 0.0, $765 = 0.0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0, $7653 = 0.0, $7654 = 0.0, $7655 = 0.0, $7656 = 0, $7657 = 0, $7658 = 0.0, $7659 = 0.0, $766 = 0.0, $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0;
 var $7665 = 0.0, $7666 = 0.0, $7667 = 0.0, $7668 = 0.0, $7669 = 0.0, $767 = 0, $7670 = 0.0, $7671 = 0.0, $7672 = 0.0, $7673 = 0.0, $7674 = 0, $7675 = 0.0, $7676 = 0.0, $7677 = 0, $7678 = 0, $7679 = 0.0, $768 = 0, $7680 = 0.0, $7681 = 0, $7682 = 0;
 var $7683 = 0.0, $7684 = 0.0, $7685 = 0, $7686 = 0, $7687 = 0.0, $7688 = 0.0, $7689 = 0, $769 = 0, $7690 = 0, $7691 = 0.0, $7692 = 0.0, $7693 = 0, $7694 = 0, $7695 = 0.0, $7696 = 0.0, $7697 = 0, $7698 = 0, $7699 = 0.0, $77 = 0.0, $770 = 0;
 var $7700 = 0.0, $7701 = 0, $7702 = 0, $7703 = 0.0, $7704 = 0.0, $7705 = 0, $7706 = 0, $7707 = 0.0, $7708 = 0.0, $7709 = 0, $771 = 0, $7710 = 0, $7711 = 0.0, $7712 = 0.0, $7713 = 0, $7714 = 0, $7715 = 0.0, $7716 = 0.0, $7717 = 0, $7718 = 0;
 var $7719 = 0.0, $772 = 0, $7720 = 0.0, $7721 = 0, $7722 = 0, $7723 = 0, $7724 = 0, $7725 = 0, $7726 = 0.0, $7727 = 0, $7728 = 0, $7729 = 0, $773 = 0, $7730 = 0, $7731 = 0, $7732 = 0, $7733 = 0, $7734 = 0, $7735 = 0, $7736 = 0;
 var $7737 = 0, $7738 = 0, $7739 = 0, $774 = 0, $7740 = 0, $7741 = 0, $7742 = 0, $7743 = 0, $7744 = 0, $7745 = 0, $7746 = 0, $7747 = 0, $7748 = 0, $7749 = 0, $775 = 0, $7750 = 0, $7751 = 0, $7752 = 0, $7753 = 0, $7754 = 0;
 var $7755 = 0, $7756 = 0.0, $7757 = 0, $7758 = 0, $7759 = 0, $776 = 0, $7760 = 0, $7761 = 0, $7762 = 0, $7763 = 0, $7764 = 0, $7765 = 0, $7766 = 0, $7767 = 0, $7768 = 0, $7769 = 0, $777 = 0, $7770 = 0, $7771 = 0, $7772 = 0;
 var $7773 = 0, $7774 = 0, $7775 = 0, $7776 = 0, $7777 = 0, $7778 = 0, $7779 = 0, $778 = 0.0, $7780 = 0, $7781 = 0, $7782 = 0, $7783 = 0, $7784 = 0, $7785 = 0, $7786 = 0.0, $7787 = 0, $7788 = 0, $7789 = 0, $779 = 0, $7790 = 0;
 var $7791 = 0, $7792 = 0, $7793 = 0, $7794 = 0, $7795 = 0, $7796 = 0, $7797 = 0, $7798 = 0, $7799 = 0, $78 = 0.0, $780 = 0, $7800 = 0, $7801 = 0, $7802 = 0, $7803 = 0, $7804 = 0, $7805 = 0, $7806 = 0, $7807 = 0, $7808 = 0;
 var $7809 = 0, $781 = 0, $7810 = 0, $7811 = 0, $7812 = 0, $7813 = 0, $7814 = 0, $7815 = 0, $7816 = 0.0, $7817 = 0, $7818 = 0, $7819 = 0, $782 = 0.0, $7820 = 0, $7821 = 0, $7822 = 0, $7823 = 0, $7824 = 0, $7825 = 0, $7826 = 0;
 var $7827 = 0, $7828 = 0, $7829 = 0, $783 = 0, $7830 = 0, $7831 = 0, $7832 = 0, $7833 = 0, $7834 = 0, $7835 = 0, $7836 = 0, $7837 = 0, $7838 = 0, $7839 = 0, $784 = 0, $7840 = 0, $7841 = 0, $7842 = 0, $7843 = 0, $7844 = 0;
 var $7845 = 0, $7846 = 0.0, $7847 = 0, $7848 = 0, $7849 = 0, $785 = 0, $7850 = 0, $7851 = 0, $7852 = 0, $7853 = 0, $7854 = 0, $7855 = 0, $7856 = 0, $7857 = 0, $7858 = 0, $7859 = 0, $786 = 0.0, $7860 = 0, $7861 = 0, $7862 = 0;
 var $7863 = 0, $7864 = 0, $7865 = 0, $7866 = 0, $7867 = 0, $7868 = 0, $7869 = 0, $787 = 0, $7870 = 0, $7871 = 0, $7872 = 0, $7873 = 0, $7874 = 0, $7875 = 0, $7876 = 0.0, $7877 = 0, $7878 = 0, $7879 = 0, $788 = 0, $7880 = 0;
 var $7881 = 0, $7882 = 0, $7883 = 0, $7884 = 0, $7885 = 0, $7886 = 0, $7887 = 0, $7888 = 0, $7889 = 0, $789 = 0.0, $7890 = 0, $7891 = 0, $7892 = 0, $7893 = 0, $7894 = 0, $7895 = 0, $7896 = 0, $7897 = 0, $7898 = 0, $7899 = 0;
 var $79 = 0, $790 = 0.0, $7900 = 0, $7901 = 0, $7902 = 0, $7903 = 0, $7904 = 0, $7905 = 0, $7906 = 0, $7907 = 0, $7908 = 0, $7909 = 0, $791 = 0, $7910 = 0, $7911 = 0, $7912 = 0, $7913 = 0, $7914 = 0, $7915 = 0, $7916 = 0;
 var $7917 = 0, $7918 = 0, $7919 = 0, $792 = 0.0, $7920 = 0, $7921 = 0, $7922 = 0, $7923 = 0.0, $7924 = 0, $7925 = 0, $7926 = 0, $7927 = 0.0, $7928 = 0, $7929 = 0.0, $793 = 0.0, $7930 = 0, $7931 = 0, $7932 = 0, $7933 = 0, $7934 = 0.0;
 var $7935 = 0.0, $7936 = 0.0, $7937 = 0.0, $7938 = 0, $7939 = 0.0, $794 = 0.0, $7940 = 0.0, $7941 = 0.0, $7942 = 0, $7943 = 0.0, $7944 = 0, $7945 = 0.0, $7946 = 0.0, $7947 = 0, $7948 = 0.0, $7949 = 0, $795 = 0, $7950 = 0.0, $7951 = 0.0, $7952 = 0;
 var $7953 = 0.0, $7954 = 0.0, $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0, $7959 = 0, $796 = 0.0, $7960 = 0.0, $7961 = 0.0, $7962 = 0.0, $7963 = 0.0, $7964 = 0.0, $7965 = 0.0, $7966 = 0.0, $7967 = 0, $7968 = 0.0, $7969 = 0, $797 = 0, $7970 = 0.0;
 var $7971 = 0.0, $7972 = 0, $7973 = 0.0, $7974 = 0, $7975 = 0.0, $7976 = 0.0, $7977 = 0, $7978 = 0.0, $7979 = 0.0, $798 = 0.0, $7980 = 0.0, $7981 = 0.0, $7982 = 0.0, $7983 = 0.0, $7984 = 0.0, $7985 = 0.0, $7986 = 0, $7987 = 0, $7988 = 0.0, $7989 = 0.0;
 var $799 = 0.0, $7990 = 0.0, $7991 = 0.0, $7992 = 0.0, $7993 = 0.0, $7994 = 0, $7995 = 0.0, $7996 = 0, $7997 = 0.0, $7998 = 0.0, $7999 = 0, $8 = 0.0, $80 = 0.0, $800 = 0.0, $8000 = 0.0, $8001 = 0, $8002 = 0.0, $8003 = 0.0, $8004 = 0, $8005 = 0.0;
 var $8006 = 0.0, $8007 = 0.0, $8008 = 0.0, $8009 = 0.0, $801 = 0.0, $8010 = 0.0, $8011 = 0.0, $8012 = 0.0, $8013 = 0.0, $8014 = 0.0, $8015 = 0, $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0, $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0, $8023 = 0;
 var $8024 = 0, $8025 = 0, $8026 = 0, $8027 = 0, $8028 = 0, $8029 = 0, $803 = 0.0, $8030 = 0, $8031 = 0, $8032 = 0, $8033 = 0, $8034 = 0, $8035 = 0, $8036 = 0, $8037 = 0, $8038 = 0, $8039 = 0, $804 = 0, $8040 = 0, $8041 = 0;
 var $8042 = 0, $8043 = 0.0, $8044 = 0, $8045 = 0, $8046 = 0.0, $8047 = 0.0, $8048 = 0.0, $8049 = 0, $805 = 0, $8050 = 0, $8051 = 0, $8052 = 0.0, $8053 = 0, $8054 = 0, $8055 = 0.0, $8056 = 0.0, $8057 = 0.0, $8058 = 0, $8059 = 0, $806 = 0;
 var $8060 = 0, $8061 = 0, $8062 = 0, $8063 = 0, $8064 = 0, $8065 = 0, $8066 = 0, $8067 = 0, $8068 = 0, $8069 = 0.0, $807 = 0.0, $8070 = 0, $8071 = 0, $8072 = 0, $8073 = 0.0, $8074 = 0, $8075 = 0, $8076 = 0, $8077 = 0.0, $8078 = 0;
 var $8079 = 0, $808 = 0.0, $8080 = 0.0, $8081 = 0.0, $8082 = 0, $8083 = 0.0, $8084 = 0.0, $8085 = 0, $8086 = 0.0, $8087 = 0, $8088 = 0.0, $8089 = 0.0, $809 = 0, $8090 = 0, $8091 = 0.0, $8092 = 0, $8093 = 0.0, $8094 = 0.0, $8095 = 0, $8096 = 0.0;
 var $8097 = 0, $8098 = 0.0, $8099 = 0.0, $81 = 0, $810 = 0.0, $8100 = 0, $8101 = 0.0, $8102 = 0.0, $8103 = 0, $8104 = 0.0, $8105 = 0.0, $8106 = 0, $8107 = 0.0, $8108 = 0.0, $8109 = 0, $811 = 0.0, $8110 = 0.0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0;
 var $8114 = 0.0, $8115 = 0.0, $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0, $812 = 0.0, $8120 = 0.0, $8121 = 0.0, $8122 = 0.0, $8123 = 0.0, $8124 = 0.0, $8125 = 0.0, $8126 = 0, $8127 = 0.0, $8128 = 0.0, $8129 = 0, $813 = 0.0, $8130 = 0, $8131 = 0.0;
 var $8132 = 0, $8133 = 0.0, $8134 = 0.0, $8135 = 0.0, $8136 = 0.0, $8137 = 0, $8138 = 0.0, $8139 = 0, $814 = 0, $8140 = 0.0, $8141 = 0.0, $8142 = 0.0, $8143 = 0, $8144 = 0, $8145 = 0.0, $8146 = 0, $8147 = 0.0, $8148 = 0.0, $8149 = 0.0, $815 = 0.0;
 var $8150 = 0.0, $8151 = 0.0, $8152 = 0, $8153 = 0.0, $8154 = 0, $8155 = 0.0, $8156 = 0.0, $8157 = 0.0, $8158 = 0, $8159 = 0.0, $816 = 0.0, $8160 = 0.0, $8161 = 0.0, $8162 = 0, $8163 = 0.0, $8164 = 0.0, $8165 = 0.0, $8166 = 0.0, $8167 = 0, $8168 = 0.0;
 var $8169 = 0.0, $817 = 0, $8170 = 0, $8171 = 0.0, $8172 = 0.0, $8173 = 0.0, $8174 = 0, $8175 = 0.0, $8176 = 0.0, $8177 = 0.0, $8178 = 0.0, $8179 = 0.0, $818 = 0.0, $8180 = 0, $8181 = 0.0, $8182 = 0.0, $8183 = 0, $8184 = 0, $8185 = 0.0, $8186 = 0.0;
 var $8187 = 0.0, $8188 = 0, $8189 = 0.0, $819 = 0.0, $8190 = 0.0, $8191 = 0.0, $8192 = 0.0, $8193 = 0.0, $8194 = 0.0, $8195 = 0.0, $8196 = 0, $8197 = 0.0, $8198 = 0.0, $8199 = 0, $82 = 0.0, $820 = 0.0, $8200 = 0.0, $8201 = 0.0, $8202 = 0.0, $8203 = 0.0;
 var $8204 = 0.0, $8205 = 0.0, $8206 = 0, $8207 = 0.0, $8208 = 0.0, $8209 = 0.0, $821 = 0.0, $8210 = 0.0, $8211 = 0.0, $8212 = 0, $8213 = 0, $8214 = 0.0, $8215 = 0.0, $8216 = 0.0, $8217 = 0.0, $8218 = 0.0, $8219 = 0.0, $822 = 0, $8220 = 0.0, $8221 = 0.0;
 var $8222 = 0.0, $8223 = 0.0, $8224 = 0.0, $8225 = 0, $8226 = 0.0, $8227 = 0.0, $8228 = 0.0, $8229 = 0.0, $823 = 0, $8230 = 0, $8231 = 0.0, $8232 = 0.0, $8233 = 0, $8234 = 0.0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0.0, $824 = 0.0;
 var $8240 = 0.0, $8241 = 0, $8242 = 0, $8243 = 0.0, $8244 = 0.0, $8245 = 0.0, $8246 = 0.0, $8247 = 0.0, $8248 = 0.0, $8249 = 0.0, $825 = 0.0, $8250 = 0.0, $8251 = 0.0, $8252 = 0.0, $8253 = 0.0, $8254 = 0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0.0;
 var $8259 = 0, $826 = 0.0, $8260 = 0, $8261 = 0.0, $8262 = 0.0, $8263 = 0.0, $8264 = 0.0, $8265 = 0.0, $8266 = 0.0, $8267 = 0.0, $8268 = 0.0, $8269 = 0.0, $827 = 0.0, $8270 = 0.0, $8271 = 0.0, $8272 = 0, $8273 = 0.0, $8274 = 0.0, $8275 = 0.0, $8276 = 0.0;
 var $8277 = 0, $8278 = 0.0, $8279 = 0.0, $828 = 0, $8280 = 0, $8281 = 0, $8282 = 0.0, $8283 = 0.0, $8284 = 0, $8285 = 0, $8286 = 0.0, $8287 = 0.0, $8288 = 0, $8289 = 0, $829 = 0.0, $8290 = 0.0, $8291 = 0.0, $8292 = 0, $8293 = 0, $8294 = 0.0;
 var $8295 = 0.0, $8296 = 0, $8297 = 0, $8298 = 0.0, $8299 = 0.0, $83 = 0.0, $830 = 0, $8300 = 0, $8301 = 0, $8302 = 0.0, $8303 = 0.0, $8304 = 0, $8305 = 0, $8306 = 0.0, $8307 = 0.0, $8308 = 0, $8309 = 0, $831 = 0.0, $8310 = 0.0, $8311 = 0.0;
 var $8312 = 0, $8313 = 0, $8314 = 0.0, $8315 = 0.0, $8316 = 0, $8317 = 0, $8318 = 0.0, $8319 = 0.0, $832 = 0.0, $8320 = 0, $8321 = 0, $8322 = 0.0, $8323 = 0.0, $8324 = 0, $8325 = 0, $8326 = 0, $8327 = 0, $8328 = 0, $8329 = 0.0, $833 = 0.0;
 var $8330 = 0, $8331 = 0, $8332 = 0, $8333 = 0, $8334 = 0, $8335 = 0, $8336 = 0, $8337 = 0, $8338 = 0, $8339 = 0, $834 = 0.0, $8340 = 0, $8341 = 0, $8342 = 0, $8343 = 0, $8344 = 0, $8345 = 0, $8346 = 0, $8347 = 0, $8348 = 0;
 var $8349 = 0, $835 = 0, $8350 = 0, $8351 = 0, $8352 = 0, $8353 = 0, $8354 = 0, $8355 = 0, $8356 = 0, $8357 = 0, $8358 = 0, $8359 = 0.0, $836 = 0, $8360 = 0, $8361 = 0, $8362 = 0, $8363 = 0, $8364 = 0, $8365 = 0, $8366 = 0;
 var $8367 = 0, $8368 = 0, $8369 = 0, $837 = 0.0, $8370 = 0, $8371 = 0, $8372 = 0, $8373 = 0, $8374 = 0, $8375 = 0, $8376 = 0, $8377 = 0, $8378 = 0, $8379 = 0, $838 = 0.0, $8380 = 0, $8381 = 0, $8382 = 0, $8383 = 0, $8384 = 0;
 var $8385 = 0, $8386 = 0, $8387 = 0, $8388 = 0, $8389 = 0.0, $839 = 0.0, $8390 = 0, $8391 = 0, $8392 = 0, $8393 = 0, $8394 = 0, $8395 = 0, $8396 = 0, $8397 = 0, $8398 = 0, $8399 = 0, $84 = 0, $840 = 0.0, $8400 = 0, $8401 = 0;
 var $8402 = 0, $8403 = 0, $8404 = 0, $8405 = 0, $8406 = 0, $8407 = 0, $8408 = 0, $8409 = 0, $841 = 0, $8410 = 0, $8411 = 0, $8412 = 0, $8413 = 0, $8414 = 0, $8415 = 0, $8416 = 0, $8417 = 0, $8418 = 0, $8419 = 0.0, $842 = 0.0;
 var $8420 = 0, $8421 = 0, $8422 = 0, $8423 = 0, $8424 = 0, $8425 = 0, $8426 = 0, $8427 = 0, $8428 = 0, $8429 = 0, $843 = 0.0, $8430 = 0, $8431 = 0, $8432 = 0, $8433 = 0, $8434 = 0, $8435 = 0, $8436 = 0, $8437 = 0, $8438 = 0;
 var $8439 = 0, $844 = 0, $8440 = 0, $8441 = 0, $8442 = 0, $8443 = 0, $8444 = 0, $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0.0, $845 = 0.0, $8450 = 0, $8451 = 0, $8452 = 0, $8453 = 0, $8454 = 0, $8455 = 0, $8456 = 0;
 var $8457 = 0, $8458 = 0, $8459 = 0, $846 = 0.0, $8460 = 0, $8461 = 0, $8462 = 0, $8463 = 0, $8464 = 0, $8465 = 0, $8466 = 0, $8467 = 0, $8468 = 0, $8469 = 0, $847 = 0.0, $8470 = 0, $8471 = 0, $8472 = 0, $8473 = 0, $8474 = 0;
 var $8475 = 0, $8476 = 0, $8477 = 0, $8478 = 0, $8479 = 0.0, $848 = 0.0, $8480 = 0, $8481 = 0, $8482 = 0, $8483 = 0, $8484 = 0, $8485 = 0, $8486 = 0, $8487 = 0, $8488 = 0, $8489 = 0, $849 = 0, $8490 = 0, $8491 = 0, $8492 = 0;
 var $8493 = 0, $8494 = 0, $8495 = 0, $8496 = 0, $8497 = 0, $8498 = 0, $8499 = 0, $85 = 0.0, $850 = 0.0, $8500 = 0, $8501 = 0, $8502 = 0, $8503 = 0, $8504 = 0, $8505 = 0, $8506 = 0, $8507 = 0, $8508 = 0, $8509 = 0, $851 = 0.0;
 var $8510 = 0, $8511 = 0, $8512 = 0, $8513 = 0, $8514 = 0, $8515 = 0, $8516 = 0, $8517 = 0, $8518 = 0, $8519 = 0, $852 = 0.0, $8520 = 0, $8521 = 0, $8522 = 0, $8523 = 0, $8524 = 0, $8525 = 0, $8526 = 0.0, $8527 = 0.0, $8528 = 0;
 var $8529 = 0, $853 = 0.0, $8530 = 0, $8531 = 0, $8532 = 0.0, $8533 = 0, $8534 = 0.0, $8535 = 0, $8536 = 0, $8537 = 0, $8538 = 0.0, $8539 = 0.0, $854 = 0, $8540 = 0.0, $8541 = 0.0, $8542 = 0.0, $8543 = 0.0, $8544 = 0.0, $8545 = 0.0, $8546 = 0.0;
 var $8547 = 0.0, $8548 = 0, $8549 = 0.0, $855 = 0.0, $8550 = 0.0, $8551 = 0.0, $8552 = 0, $8553 = 0.0, $8554 = 0.0, $8555 = 0, $8556 = 0, $8557 = 0, $8558 = 0, $8559 = 0, $856 = 0, $8560 = 0, $8561 = 0, $8562 = 0, $8563 = 0, $8564 = 0;
 var $8565 = 0, $8566 = 0, $8567 = 0, $8568 = 0, $8569 = 0, $857 = 0.0, $8570 = 0, $8571 = 0, $8572 = 0, $8573 = 0, $8574 = 0, $8575 = 0, $8576 = 0.0, $8577 = 0, $8578 = 0, $8579 = 0.0, $858 = 0.0, $8580 = 0.0, $8581 = 0.0, $8582 = 0;
 var $8583 = 0, $8584 = 0, $8585 = 0.0, $8586 = 0, $8587 = 0, $8588 = 0.0, $8589 = 0.0, $859 = 0.0, $8590 = 0.0, $8591 = 0, $8592 = 0, $8593 = 0, $8594 = 0, $8595 = 0, $8596 = 0, $8597 = 0, $8598 = 0, $8599 = 0, $86 = 0.0, $860 = 0.0;
 var $8600 = 0, $8601 = 0, $8602 = 0.0, $8603 = 0, $8604 = 0, $8605 = 0, $8606 = 0.0, $8607 = 0, $8608 = 0, $8609 = 0, $861 = 0.0, $8610 = 0.0, $8611 = 0, $8612 = 0, $8613 = 0.0, $8614 = 0.0, $8615 = 0, $8616 = 0.0, $8617 = 0.0, $8618 = 0;
 var $8619 = 0.0, $862 = 0.0, $8620 = 0, $8621 = 0.0, $8622 = 0.0, $8623 = 0, $8624 = 0.0, $8625 = 0, $8626 = 0.0, $8627 = 0.0, $8628 = 0, $8629 = 0.0, $863 = 0.0, $8630 = 0, $8631 = 0.0, $8632 = 0.0, $8633 = 0, $8634 = 0.0, $8635 = 0.0, $8636 = 0;
 var $8637 = 0.0, $8638 = 0.0, $8639 = 0, $864 = 0, $8640 = 0.0, $8641 = 0.0, $8642 = 0, $8643 = 0.0, $8644 = 0.0, $8645 = 0.0, $8646 = 0.0, $8647 = 0.0, $8648 = 0.0, $8649 = 0.0, $865 = 0, $8650 = 0.0, $8651 = 0.0, $8652 = 0, $8653 = 0.0, $8654 = 0.0;
 var $8655 = 0.0, $8656 = 0.0, $8657 = 0.0, $8658 = 0.0, $8659 = 0, $866 = 0.0, $8660 = 0.0, $8661 = 0.0, $8662 = 0, $8663 = 0, $8664 = 0.0, $8665 = 0, $8666 = 0.0, $8667 = 0.0, $8668 = 0.0, $8669 = 0.0, $867 = 0.0, $8670 = 0, $8671 = 0.0, $8672 = 0;
 var $8673 = 0.0, $8674 = 0.0, $8675 = 0.0, $8676 = 0, $8677 = 0, $8678 = 0.0, $8679 = 0, $868 = 0.0, $8680 = 0.0, $8681 = 0.0, $8682 = 0, $8683 = 0.0, $8684 = 0, $8685 = 0.0, $8686 = 0.0, $8687 = 0.0, $8688 = 0.0, $8689 = 0.0, $869 = 0.0, $8690 = 0.0;
 var $8691 = 0, $8692 = 0, $8693 = 0.0, $8694 = 0.0, $8695 = 0.0, $8696 = 0.0, $8697 = 0.0, $8698 = 0.0, $8699 = 0.0, $87 = 0.0, $870 = 0, $8700 = 0, $8701 = 0.0, $8702 = 0.0, $8703 = 0, $8704 = 0, $8705 = 0.0, $8706 = 0.0, $8707 = 0.0, $8708 = 0.0;
 var $8709 = 0.0, $871 = 0.0, $8710 = 0.0, $8711 = 0.0, $8712 = 0.0, $8713 = 0, $8714 = 0.0, $8715 = 0.0, $8716 = 0, $8717 = 0, $8718 = 0.0, $8719 = 0.0, $872 = 0.0, $8720 = 0.0, $8721 = 0.0, $8722 = 0.0, $8723 = 0.0, $8724 = 0, $8725 = 0.0, $8726 = 0.0;
 var $8727 = 0, $8728 = 0.0, $8729 = 0.0, $873 = 0, $8730 = 0.0, $8731 = 0.0, $8732 = 0, $8733 = 0.0, $8734 = 0.0, $8735 = 0.0, $8736 = 0.0, $8737 = 0.0, $8738 = 0.0, $8739 = 0, $874 = 0.0, $8740 = 0.0, $8741 = 0.0, $8742 = 0.0, $8743 = 0.0, $8744 = 0.0;
 var $8745 = 0, $8746 = 0.0, $8747 = 0.0, $8748 = 0.0, $8749 = 0.0, $875 = 0.0, $8750 = 0.0, $8751 = 0.0, $8752 = 0, $8753 = 0.0, $8754 = 0.0, $8755 = 0.0, $8756 = 0.0, $8757 = 0.0, $8758 = 0, $8759 = 0.0, $876 = 0.0, $8760 = 0.0, $8761 = 0.0, $8762 = 0.0;
 var $8763 = 0, $8764 = 0.0, $8765 = 0.0, $8766 = 0.0, $8767 = 0.0, $8768 = 0.0, $8769 = 0.0, $877 = 0, $8770 = 0.0, $8771 = 0, $8772 = 0.0, $8773 = 0.0, $8774 = 0, $8775 = 0, $8776 = 0.0, $8777 = 0.0, $8778 = 0.0, $8779 = 0.0, $878 = 0.0, $8780 = 0;
 var $8781 = 0.0, $8782 = 0.0, $8783 = 0.0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0, $8788 = 0.0, $8789 = 0.0, $879 = 0.0, $8790 = 0.0, $8791 = 0.0, $8792 = 0, $8793 = 0.0, $8794 = 0.0, $8795 = 0.0, $8796 = 0.0, $8797 = 0, $8798 = 0.0, $8799 = 0.0;
 var $88 = 0.0, $880 = 0.0, $8800 = 0.0, $8801 = 0.0, $8802 = 0.0, $8803 = 0.0, $8804 = 0.0, $8805 = 0, $8806 = 0.0, $8807 = 0.0, $8808 = 0.0, $8809 = 0.0, $881 = 0.0, $8810 = 0, $8811 = 0.0, $8812 = 0.0, $8813 = 0, $8814 = 0, $8815 = 0.0, $8816 = 0.0;
 var $8817 = 0, $8818 = 0, $8819 = 0.0, $882 = 0, $8820 = 0.0, $8821 = 0, $8822 = 0, $8823 = 0.0, $8824 = 0.0, $8825 = 0, $8826 = 0, $8827 = 0.0, $8828 = 0.0, $8829 = 0, $883 = 0.0, $8830 = 0, $8831 = 0.0, $8832 = 0.0, $8833 = 0, $8834 = 0;
 var $8835 = 0.0, $8836 = 0.0, $8837 = 0, $8838 = 0, $8839 = 0.0, $884 = 0, $8840 = 0.0, $8841 = 0, $8842 = 0, $8843 = 0.0, $8844 = 0.0, $8845 = 0, $8846 = 0, $8847 = 0.0, $8848 = 0.0, $8849 = 0, $885 = 0.0, $8850 = 0, $8851 = 0.0, $8852 = 0.0;
 var $8853 = 0, $8854 = 0, $8855 = 0.0, $8856 = 0.0, $8857 = 0, $8858 = 0, $8859 = 0, $886 = 0.0, $8860 = 0, $8861 = 0, $8862 = 0.0, $8863 = 0, $8864 = 0, $8865 = 0, $8866 = 0, $8867 = 0, $8868 = 0, $8869 = 0, $887 = 0.0, $8870 = 0;
 var $8871 = 0, $8872 = 0, $8873 = 0, $8874 = 0, $8875 = 0, $8876 = 0, $8877 = 0, $8878 = 0, $8879 = 0, $888 = 0.0, $8880 = 0, $8881 = 0, $8882 = 0, $8883 = 0, $8884 = 0, $8885 = 0, $8886 = 0, $8887 = 0, $8888 = 0, $8889 = 0;
 var $889 = 0.0, $8890 = 0, $8891 = 0, $8892 = 0.0, $8893 = 0, $8894 = 0, $8895 = 0, $8896 = 0, $8897 = 0, $8898 = 0, $8899 = 0, $89 = 0.0, $890 = 0.0, $8900 = 0, $8901 = 0, $8902 = 0, $8903 = 0, $8904 = 0, $8905 = 0, $8906 = 0;
 var $8907 = 0, $8908 = 0, $8909 = 0, $891 = 0.0, $8910 = 0, $8911 = 0, $8912 = 0, $8913 = 0, $8914 = 0, $8915 = 0, $8916 = 0, $8917 = 0, $8918 = 0, $8919 = 0, $892 = 0.0, $8920 = 0, $8921 = 0, $8922 = 0.0, $8923 = 0, $8924 = 0;
 var $8925 = 0, $8926 = 0, $8927 = 0, $8928 = 0, $8929 = 0, $893 = 0.0, $8930 = 0, $8931 = 0, $8932 = 0, $8933 = 0, $8934 = 0, $8935 = 0, $8936 = 0, $8937 = 0, $8938 = 0, $8939 = 0, $894 = 0, $8940 = 0, $8941 = 0, $8942 = 0;
 var $8943 = 0, $8944 = 0, $8945 = 0, $8946 = 0, $8947 = 0, $8948 = 0, $8949 = 0, $895 = 0.0, $8950 = 0, $8951 = 0, $8952 = 0.0, $8953 = 0, $8954 = 0, $8955 = 0, $8956 = 0, $8957 = 0, $8958 = 0, $8959 = 0, $896 = 0.0, $8960 = 0;
 var $8961 = 0, $8962 = 0, $8963 = 0, $8964 = 0, $8965 = 0, $8966 = 0, $8967 = 0, $8968 = 0, $8969 = 0, $897 = 0.0, $8970 = 0, $8971 = 0, $8972 = 0, $8973 = 0, $8974 = 0, $8975 = 0, $8976 = 0, $8977 = 0, $8978 = 0, $8979 = 0;
 var $898 = 0, $8980 = 0, $8981 = 0, $8982 = 0.0, $8983 = 0, $8984 = 0, $8985 = 0, $8986 = 0, $8987 = 0, $8988 = 0, $8989 = 0, $899 = 0.0, $8990 = 0, $8991 = 0, $8992 = 0, $8993 = 0, $8994 = 0, $8995 = 0, $8996 = 0, $8997 = 0;
 var $8998 = 0, $8999 = 0, $9 = 0.0, $90 = 0, $900 = 0.0, $9000 = 0, $9001 = 0, $9002 = 0, $9003 = 0, $9004 = 0, $9005 = 0, $9006 = 0, $9007 = 0, $9008 = 0, $9009 = 0, $901 = 0, $9010 = 0, $9011 = 0, $9012 = 0.0, $9013 = 0;
 var $9014 = 0, $9015 = 0, $9016 = 0, $9017 = 0, $9018 = 0, $9019 = 0, $902 = 0, $9020 = 0, $9021 = 0, $9022 = 0, $9023 = 0, $9024 = 0, $9025 = 0, $9026 = 0, $9027 = 0, $9028 = 0, $9029 = 0, $903 = 0, $9030 = 0, $9031 = 0;
 var $9032 = 0, $9033 = 0, $9034 = 0, $9035 = 0, $9036 = 0, $9037 = 0, $9038 = 0, $9039 = 0, $904 = 0, $9040 = 0, $9041 = 0, $9042 = 0, $9043 = 0, $9044 = 0, $9045 = 0, $9046 = 0, $9047 = 0, $9048 = 0, $9049 = 0, $905 = 0;
 var $9050 = 0, $9051 = 0, $9052 = 0, $9053 = 0, $9054 = 0, $9055 = 0, $9056 = 0, $9057 = 0, $9058 = 0, $9059 = 0, $906 = 0, $9060 = 0, $9061 = 0.0, $9062 = 0.0, $9063 = 0, $9064 = 0, $9065 = 0, $9066 = 0, $9067 = 0.0, $9068 = 0;
 var $9069 = 0.0, $907 = 0, $9070 = 0, $9071 = 0, $9072 = 0, $9073 = 0.0, $9074 = 0.0, $9075 = 0.0, $9076 = 0.0, $9077 = 0.0, $9078 = 0.0, $9079 = 0.0, $908 = 0, $9080 = 0.0, $9081 = 0.0, $9082 = 0.0, $9083 = 0, $9084 = 0.0, $9085 = 0.0, $9086 = 0.0;
 var $9087 = 0, $9088 = 0.0, $9089 = 0.0, $909 = 0, $9090 = 0, $9091 = 0, $9092 = 0, $9093 = 0, $9094 = 0, $9095 = 0, $9096 = 0, $9097 = 0, $9098 = 0, $9099 = 0, $91 = 0, $910 = 0, $9100 = 0, $9101 = 0, $9102 = 0, $9103 = 0;
 var $9104 = 0, $9105 = 0, $9106 = 0, $9107 = 0, $9108 = 0, $9109 = 0, $911 = 0, $9110 = 0, $9111 = 0.0, $9112 = 0, $9113 = 0, $9114 = 0.0, $9115 = 0.0, $9116 = 0.0, $9117 = 0, $9118 = 0, $9119 = 0, $912 = 0, $9120 = 0.0, $9121 = 0;
 var $9122 = 0, $9123 = 0.0, $9124 = 0.0, $9125 = 0.0, $9126 = 0, $9127 = 0, $9128 = 0, $9129 = 0, $913 = 0, $9130 = 0, $9131 = 0, $9132 = 0, $9133 = 0, $9134 = 0, $9135 = 0, $9136 = 0, $9137 = 0.0, $9138 = 0, $9139 = 0, $914 = 0;
 var $9140 = 0, $9141 = 0.0, $9142 = 0, $9143 = 0, $9144 = 0, $9145 = 0.0, $9146 = 0, $9147 = 0, $9148 = 0.0, $9149 = 0.0, $915 = 0, $9150 = 0.0, $9151 = 0.0, $9152 = 0, $9153 = 0.0, $9154 = 0.0, $9155 = 0.0, $9156 = 0, $9157 = 0.0, $9158 = 0.0;
 var $9159 = 0.0, $916 = 0, $9160 = 0.0, $9161 = 0, $9162 = 0.0, $9163 = 0.0, $9164 = 0.0, $9165 = 0, $9166 = 0.0, $9167 = 0.0, $9168 = 0, $9169 = 0.0, $917 = 0, $9170 = 0.0, $9171 = 0, $9172 = 0, $9173 = 0.0, $9174 = 0.0, $9175 = 0, $9176 = 0;
 var $9177 = 0.0, $9178 = 0.0, $9179 = 0, $918 = 0, $9180 = 0.0, $9181 = 0, $9182 = 0.0, $9183 = 0.0, $9184 = 0, $9185 = 0.0, $9186 = 0, $9187 = 0.0, $9188 = 0.0, $9189 = 0, $919 = 0, $9190 = 0.0, $9191 = 0, $9192 = 0.0, $9193 = 0.0, $9194 = 0;
 var $9195 = 0.0, $9196 = 0, $9197 = 0.0, $9198 = 0.0, $9199 = 0, $92 = 0.0, $920 = 0, $9200 = 0.0, $9201 = 0, $9202 = 0.0, $9203 = 0.0, $9204 = 0, $9205 = 0.0, $9206 = 0, $9207 = 0.0, $9208 = 0.0, $9209 = 0, $921 = 0, $9210 = 0.0, $9211 = 0;
 var $9212 = 0.0, $9213 = 0.0, $9214 = 0, $9215 = 0.0, $9216 = 0, $9217 = 0.0, $9218 = 0.0, $9219 = 0.0, $922 = 0.0, $9220 = 0.0, $9221 = 0.0, $9222 = 0.0, $9223 = 0.0, $9224 = 0.0, $9225 = 0.0, $9226 = 0.0, $9227 = 0, $9228 = 0.0, $9229 = 0.0, $923 = 0;
 var $9230 = 0.0, $9231 = 0.0, $9232 = 0, $9233 = 0.0, $9234 = 0.0, $9235 = 0.0, $9236 = 0, $9237 = 0.0, $9238 = 0, $9239 = 0.0, $924 = 0, $9240 = 0.0, $9241 = 0, $9242 = 0.0, $9243 = 0.0, $9244 = 0.0, $9245 = 0.0, $9246 = 0.0, $9247 = 0, $9248 = 0;
 var $9249 = 0.0, $925 = 0.0, $9250 = 0, $9251 = 0.0, $9252 = 0.0, $9253 = 0, $9254 = 0.0, $9255 = 0.0, $9256 = 0.0, $9257 = 0.0, $9258 = 0.0, $9259 = 0, $926 = 0.0, $9260 = 0, $9261 = 0.0, $9262 = 0.0, $9263 = 0.0, $9264 = 0.0, $9265 = 0, $9266 = 0.0;
 var $9267 = 0, $9268 = 0.0, $9269 = 0.0, $927 = 0.0, $9270 = 0.0, $9271 = 0, $9272 = 0, $9273 = 0.0, $9274 = 0.0, $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0.0, $9279 = 0.0, $928 = 0, $9280 = 0.0, $9281 = 0.0, $9282 = 0.0, $9283 = 0.0, $9284 = 0;
 var $9285 = 0.0, $9286 = 0.0, $9287 = 0.0, $9288 = 0.0, $9289 = 0.0, $929 = 0, $9290 = 0.0, $9291 = 0.0, $9292 = 0, $9293 = 0.0, $9294 = 0.0, $9295 = 0.0, $9296 = 0.0, $9297 = 0, $9298 = 0.0, $9299 = 0.0, $93 = 0, $930 = 0, $9300 = 0.0, $9301 = 0.0;
 var $9302 = 0.0, $9303 = 0.0, $9304 = 0.0, $9305 = 0, $9306 = 0.0, $9307 = 0.0, $9308 = 0.0, $9309 = 0.0, $931 = 0.0, $9310 = 0, $9311 = 0, $9312 = 0.0, $9313 = 0.0, $9314 = 0.0, $9315 = 0.0, $9316 = 0.0, $9317 = 0.0, $9318 = 0.0, $9319 = 0.0, $932 = 0;
 var $9320 = 0.0, $9321 = 0.0, $9322 = 0.0, $9323 = 0, $9324 = 0, $9325 = 0.0, $9326 = 0.0, $9327 = 0.0, $9328 = 0.0, $9329 = 0.0, $933 = 0, $9330 = 0.0, $9331 = 0.0, $9332 = 0.0, $9333 = 0.0, $9334 = 0.0, $9335 = 0.0, $9336 = 0, $9337 = 0.0, $9338 = 0.0;
 var $9339 = 0.0, $934 = 0.0, $9340 = 0, $9341 = 0.0, $9342 = 0.0, $9343 = 0.0, $9344 = 0.0, $9345 = 0.0, $9346 = 0.0, $9347 = 0.0, $9348 = 0.0, $9349 = 0, $935 = 0.0, $9350 = 0, $9351 = 0.0, $9352 = 0, $9353 = 0.0, $9354 = 0.0, $9355 = 0, $9356 = 0.0;
 var $9357 = 0.0, $9358 = 0, $9359 = 0, $936 = 0.0, $9360 = 0.0, $9361 = 0.0, $9362 = 0, $9363 = 0, $9364 = 0.0, $9365 = 0.0, $9366 = 0, $9367 = 0.0, $9368 = 0, $9369 = 0.0, $937 = 0, $9370 = 0.0, $9371 = 0, $9372 = 0.0, $9373 = 0, $9374 = 0.0;
 var $9375 = 0.0, $9376 = 0, $9377 = 0.0, $9378 = 0, $9379 = 0.0, $938 = 0, $9380 = 0.0, $9381 = 0, $9382 = 0.0, $9383 = 0, $9384 = 0.0, $9385 = 0.0, $9386 = 0, $9387 = 0.0, $9388 = 0, $9389 = 0.0, $939 = 0, $9390 = 0.0, $9391 = 0, $9392 = 0.0;
 var $9393 = 0, $9394 = 0.0, $9395 = 0.0, $9396 = 0, $9397 = 0.0, $9398 = 0, $9399 = 0.0, $94 = 0.0, $940 = 0, $9400 = 0.0, $9401 = 0, $9402 = 0.0, $9403 = 0, $9404 = 0.0, $9405 = 0.0, $9406 = 0.0, $9407 = 0.0, $9408 = 0.0, $9409 = 0.0, $941 = 0;
 var $9410 = 0.0, $9411 = 0.0, $9412 = 0.0, $9413 = 0.0, $9414 = 0, $9415 = 0.0, $9416 = 0.0, $9417 = 0.0, $9418 = 0.0, $9419 = 0, $942 = 0, $9420 = 0.0, $9421 = 0.0, $9422 = 0.0, $9423 = 0, $9424 = 0.0, $9425 = 0, $9426 = 0.0, $9427 = 0.0, $9428 = 0;
 var $9429 = 0.0, $943 = 0, $9430 = 0.0, $9431 = 0.0, $9432 = 0.0, $9433 = 0.0, $9434 = 0, $9435 = 0, $9436 = 0.0, $9437 = 0, $9438 = 0.0, $9439 = 0.0, $944 = 0, $9440 = 0, $9441 = 0.0, $9442 = 0.0, $9443 = 0.0, $9444 = 0.0, $9445 = 0.0, $9446 = 0;
 var $9447 = 0, $9448 = 0.0, $9449 = 0.0, $945 = 0, $9450 = 0.0, $9451 = 0.0, $9452 = 0, $9453 = 0.0, $9454 = 0, $9455 = 0.0, $9456 = 0.0, $9457 = 0.0, $9458 = 0, $9459 = 0, $946 = 0, $9460 = 0.0, $9461 = 0.0, $9462 = 0.0, $9463 = 0.0, $9464 = 0.0;
 var $9465 = 0.0, $9466 = 0.0, $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0, $9470 = 0.0, $9471 = 0, $9472 = 0.0, $9473 = 0.0, $9474 = 0.0, $9475 = 0, $9476 = 0.0, $9477 = 0.0, $9478 = 0.0, $9479 = 0.0, $948 = 0.0, $9480 = 0.0, $9481 = 0.0, $9482 = 0.0;
 var $9483 = 0.0, $9484 = 0, $9485 = 0, $9486 = 0.0, $9487 = 0.0, $9488 = 0.0, $9489 = 0.0, $949 = 0, $9490 = 0.0, $9491 = 0.0, $9492 = 0.0, $9493 = 0.0, $9494 = 0.0, $9495 = 0.0, $9496 = 0.0, $9497 = 0, $9498 = 0, $9499 = 0.0, $95 = 0.0, $950 = 0;
 var $9500 = 0.0, $9501 = 0.0, $9502 = 0.0, $9503 = 0.0, $9504 = 0.0, $9505 = 0.0, $9506 = 0.0, $9507 = 0.0, $9508 = 0.0, $9509 = 0.0, $951 = 0, $9510 = 0, $9511 = 0.0, $9512 = 0.0, $9513 = 0.0, $9514 = 0, $9515 = 0.0, $9516 = 0.0, $9517 = 0.0, $9518 = 0.0;
 var $9519 = 0.0, $952 = 0.0, $9520 = 0.0, $9521 = 0.0, $9522 = 0.0, $9523 = 0, $9524 = 0, $9525 = 0.0, $9526 = 0.0, $9527 = 0.0, $9528 = 0.0, $9529 = 0.0, $953 = 0, $9530 = 0.0, $9531 = 0.0, $9532 = 0.0, $9533 = 0.0, $9534 = 0.0, $9535 = 0.0, $9536 = 0;
 var $9537 = 0, $9538 = 0.0, $9539 = 0.0, $954 = 0, $9540 = 0.0, $9541 = 0, $9542 = 0, $9543 = 0.0, $9544 = 0.0, $9545 = 0.0, $9546 = 0.0, $9547 = 0.0, $9548 = 0, $9549 = 0.0, $955 = 0, $9550 = 0.0, $9551 = 0, $9552 = 0, $9553 = 0.0, $9554 = 0;
 var $9555 = 0, $9556 = 0.0, $9557 = 0, $9558 = 0, $9559 = 0.0, $956 = 0.0, $9560 = 0, $9561 = 0, $9562 = 0.0, $9563 = 0, $9564 = 0.0, $9565 = 0.0, $9566 = 0, $9567 = 0, $9568 = 0.0, $9569 = 0.0, $957 = 0, $9570 = 0, $9571 = 0, $9572 = 0.0;
 var $9573 = 0.0, $9574 = 0, $9575 = 0, $9576 = 0.0, $9577 = 0.0, $9578 = 0, $9579 = 0, $958 = 0, $9580 = 0.0, $9581 = 0.0, $9582 = 0, $9583 = 0, $9584 = 0.0, $9585 = 0.0, $9586 = 0, $9587 = 0, $9588 = 0, $9589 = 0.0, $959 = 0.0, $9590 = 0;
 var $9591 = 0.0, $9592 = 0.0, $9593 = 0, $9594 = 0.0, $9595 = 0.0, $9596 = 0, $9597 = 0.0, $9598 = 0.0, $9599 = 0.0, $96 = 0, $960 = 0.0, $9600 = 0.0, $9601 = 0, $9602 = 0, $9603 = 0, $9604 = 0, $9605 = 0.0, $9606 = 0, $9607 = 0.0, $9608 = 0.0;
 var $9609 = 0, $961 = 0, $9610 = 0.0, $9611 = 0.0, $9612 = 0, $9613 = 0.0, $9614 = 0.0, $9615 = 0, $9616 = 0, $9617 = 0, $9618 = 0.0, $9619 = 0.0, $962 = 0.0, $9620 = 0.0, $9621 = 0.0, $9622 = 0.0, $9623 = 0.0, $9624 = 0.0, $9625 = 0.0, $9626 = 0.0;
 var $9627 = 0.0, $9628 = 0, $9629 = 0.0, $963 = 0.0, $9630 = 0.0, $9631 = 0.0, $9632 = 0, $9633 = 0.0, $9634 = 0.0, $9635 = 0, $9636 = 0, $9637 = 0, $9638 = 0, $9639 = 0, $964 = 0, $9640 = 0, $9641 = 0, $9642 = 0, $9643 = 0, $9644 = 0;
 var $9645 = 0, $9646 = 0, $9647 = 0, $9648 = 0, $9649 = 0, $965 = 0.0, $9650 = 0, $9651 = 0, $9652 = 0, $9653 = 0, $9654 = 0, $9655 = 0, $9656 = 0.0, $9657 = 0, $9658 = 0, $9659 = 0.0, $966 = 0.0, $9660 = 0.0, $9661 = 0.0, $9662 = 0;
 var $9663 = 0, $9664 = 0, $9665 = 0.0, $9666 = 0, $9667 = 0, $9668 = 0.0, $9669 = 0.0, $967 = 0, $9670 = 0.0, $9671 = 0, $9672 = 0, $9673 = 0, $9674 = 0, $9675 = 0, $9676 = 0, $9677 = 0, $9678 = 0, $9679 = 0, $968 = 0.0, $9680 = 0;
 var $9681 = 0, $9682 = 0.0, $9683 = 0, $9684 = 0, $9685 = 0, $9686 = 0.0, $9687 = 0, $9688 = 0, $9689 = 0, $969 = 0.0, $9690 = 0.0, $9691 = 0, $9692 = 0, $9693 = 0.0, $9694 = 0.0, $9695 = 0, $9696 = 0.0, $9697 = 0.0, $9698 = 0, $9699 = 0.0;
 var $97 = 0.0, $970 = 0.0, $9700 = 0.0, $9701 = 0, $9702 = 0.0, $9703 = 0.0, $9704 = 0.0, $9705 = 0, $9706 = 0.0, $9707 = 0.0, $9708 = 0.0, $9709 = 0, $971 = 0.0, $9710 = 0.0, $9711 = 0.0, $9712 = 0.0, $9713 = 0.0, $9714 = 0.0, $9715 = 0.0, $9716 = 0.0;
 var $9717 = 0.0, $9718 = 0, $9719 = 0.0, $972 = 0.0, $9720 = 0.0, $9721 = 0.0, $9722 = 0, $9723 = 0.0, $9724 = 0.0, $9725 = 0.0, $9726 = 0.0, $9727 = 0, $9728 = 0.0, $9729 = 0, $973 = 0.0, $9730 = 0.0, $9731 = 0.0, $9732 = 0.0, $9733 = 0.0, $9734 = 0;
 var $9735 = 0.0, $9736 = 0.0, $9737 = 0.0, $9738 = 0.0, $9739 = 0, $974 = 0.0, $9740 = 0, $9741 = 0.0, $9742 = 0.0, $9743 = 0.0, $9744 = 0.0, $9745 = 0, $9746 = 0.0, $9747 = 0.0, $9748 = 0.0, $9749 = 0.0, $975 = 0, $9750 = 0, $9751 = 0.0, $9752 = 0.0;
 var $9753 = 0.0, $9754 = 0, $9755 = 0.0, $9756 = 0.0, $9757 = 0, $9758 = 0.0, $9759 = 0, $976 = 0.0, $9760 = 0.0, $9761 = 0.0, $9762 = 0.0, $9763 = 0.0, $9764 = 0.0, $9765 = 0, $9766 = 0.0, $9767 = 0, $9768 = 0.0, $9769 = 0.0, $977 = 0.0, $9770 = 0.0;
 var $9771 = 0.0, $9772 = 0.0, $9773 = 0, $9774 = 0, $9775 = 0.0, $9776 = 0.0, $9777 = 0.0, $9778 = 0, $9779 = 0.0, $978 = 0.0, $9780 = 0.0, $9781 = 0.0, $9782 = 0.0, $9783 = 0.0, $9784 = 0.0, $9785 = 0.0, $9786 = 0, $9787 = 0.0, $9788 = 0.0, $9789 = 0.0;
 var $979 = 0, $9790 = 0.0, $9791 = 0, $9792 = 0.0, $9793 = 0.0, $9794 = 0.0, $9795 = 0.0, $9796 = 0.0, $9797 = 0, $9798 = 0, $9799 = 0.0, $98 = 0.0, $980 = 0.0, $9800 = 0.0, $9801 = 0, $9802 = 0.0, $9803 = 0.0, $9804 = 0.0, $9805 = 0.0, $9806 = 0;
 var $9807 = 0.0, $9808 = 0.0, $9809 = 0.0, $981 = 0, $9810 = 0.0, $9811 = 0.0, $9812 = 0, $9813 = 0, $9814 = 0.0, $9815 = 0.0, $9816 = 0.0, $9817 = 0, $9818 = 0.0, $9819 = 0.0, $982 = 0.0, $9820 = 0.0, $9821 = 0.0, $9822 = 0.0, $9823 = 0.0, $9824 = 0.0;
 var $9825 = 0.0, $9826 = 0, $9827 = 0.0, $9828 = 0.0, $9829 = 0, $983 = 0.0, $9830 = 0, $9831 = 0.0, $9832 = 0.0, $9833 = 0, $9834 = 0, $9835 = 0.0, $9836 = 0.0, $9837 = 0, $9838 = 0, $9839 = 0.0, $984 = 0.0, $9840 = 0.0, $9841 = 0, $9842 = 0;
 var $9843 = 0.0, $9844 = 0.0, $9845 = 0, $9846 = 0, $9847 = 0.0, $9848 = 0.0, $9849 = 0, $985 = 0.0, $9850 = 0, $9851 = 0.0, $9852 = 0.0, $9853 = 0, $9854 = 0, $9855 = 0.0, $9856 = 0.0, $9857 = 0, $9858 = 0, $9859 = 0.0, $986 = 0, $9860 = 0.0;
 var $9861 = 0, $9862 = 0, $9863 = 0.0, $9864 = 0.0, $9865 = 0, $9866 = 0, $9867 = 0, $9868 = 0, $9869 = 0, $987 = 0.0, $9870 = 0.0, $9871 = 0, $9872 = 0, $9873 = 0, $9874 = 0, $9875 = 0, $9876 = 0, $9877 = 0, $9878 = 0, $9879 = 0;
 var $988 = 0, $9880 = 0, $9881 = 0, $9882 = 0, $9883 = 0, $9884 = 0, $9885 = 0, $9886 = 0, $9887 = 0, $9888 = 0, $9889 = 0, $989 = 0.0, $9890 = 0, $9891 = 0, $9892 = 0, $9893 = 0, $9894 = 0, $9895 = 0, $9896 = 0, $9897 = 0;
 var $9898 = 0, $9899 = 0, $99 = 0.0, $990 = 0.0, $9900 = 0.0, $9901 = 0, $9902 = 0, $9903 = 0, $9904 = 0, $9905 = 0, $9906 = 0, $9907 = 0, $9908 = 0, $9909 = 0, $991 = 0.0, $9910 = 0, $9911 = 0, $9912 = 0, $9913 = 0, $9914 = 0;
 var $9915 = 0, $9916 = 0, $9917 = 0, $9918 = 0, $9919 = 0, $992 = 0, $9920 = 0, $9921 = 0, $9922 = 0, $9923 = 0, $9924 = 0, $9925 = 0, $9926 = 0, $9927 = 0, $9928 = 0, $9929 = 0, $993 = 0.0, $9930 = 0.0, $9931 = 0, $9932 = 0;
 var $9933 = 0, $9934 = 0, $9935 = 0, $9936 = 0, $9937 = 0, $9938 = 0, $9939 = 0, $994 = 0, $9940 = 0, $9941 = 0, $9942 = 0, $9943 = 0, $9944 = 0, $9945 = 0, $9946 = 0, $9947 = 0, $9948 = 0, $9949 = 0, $995 = 0.0, $9950 = 0;
 var $9951 = 0, $9952 = 0, $9953 = 0, $9954 = 0, $9955 = 0, $9956 = 0, $9957 = 0, $9958 = 0, $9959 = 0, $996 = 0.0, $9960 = 0.0, $9961 = 0, $9962 = 0, $9963 = 0, $9964 = 0, $9965 = 0, $9966 = 0, $9967 = 0, $9968 = 0, $9969 = 0;
 var $997 = 0.0, $9970 = 0, $9971 = 0, $9972 = 0, $9973 = 0, $9974 = 0, $9975 = 0, $9976 = 0, $9977 = 0, $9978 = 0, $9979 = 0, $998 = 0.0, $9980 = 0, $9981 = 0, $9982 = 0, $9983 = 0, $9984 = 0, $9985 = 0, $9986 = 0, $9987 = 0;
 var $9988 = 0, $9989 = 0, $999 = 0.0, $9990 = 0.0, $9991 = 0, $9992 = 0, $9993 = 0, $9994 = 0, $9995 = 0, $9996 = 0, $9997 = 0, $9998 = 0, $9999 = 0, $bgotonextstatement = 0, $bgotonextstatement102 = 0, $bgotonextstatement112 = 0, $bgotonextstatement150 = 0, $bgotonextstatement160 = 0, $bgotonextstatement170 = 0, $bgotonextstatement20 = 0;
 var $bgotonextstatement3 = 0, $bgotonextstatement32 = 0, $bgotonextstatement42 = 0, $bgotonextstatement52 = 0, $bgotonextstatement62 = 0, $bgotonextstatement72 = 0, $bgotonextstatement82 = 0, $bgotonextstatement92 = 0, $cj3array = 0, $cj3array152 = 0, $cj3array162 = 0, $cj3array172 = 0, $cj3array181 = 0, $cj3array22 = 0, $cj3array5 = 0, $cj4array = 0, $cj5array = 0, $cj5array104 = 0, $cj5array114 = 0, $cj5array12 = 0;
 var $cj5array123 = 0, $cj5array132 = 0, $cj5array141 = 0, $cj5array34 = 0, $cj5array44 = 0, $cj5array54 = 0, $cj5array64 = 0, $cj5array74 = 0, $cj5array84 = 0, $cj5array94 = 0, $evalcond = 0, $evalcond1 = 0, $evalcond10 = 0, $evalcond109 = 0, $evalcond119 = 0, $evalcond128 = 0, $evalcond137 = 0, $evalcond146 = 0, $evalcond149 = 0, $evalcond157 = 0;
 var $evalcond167 = 0, $evalcond17 = 0, $evalcond177 = 0, $evalcond186 = 0, $evalcond2 = 0, $evalcond27 = 0, $evalcond31 = 0, $evalcond39 = 0, $evalcond49 = 0, $evalcond59 = 0, $evalcond69 = 0, $evalcond79 = 0, $evalcond89 = 0, $evalcond99 = 0, $iij3 = 0, $iij3156 = 0, $iij3166 = 0, $iij3176 = 0, $iij3185 = 0, $iij326 = 0;
 var $iij39 = 0, $iij4 = 0, $iij5 = 0, $iij5108 = 0, $iij5118 = 0, $iij5127 = 0, $iij5136 = 0, $iij5145 = 0, $iij516 = 0, $iij538 = 0, $iij548 = 0, $iij558 = 0, $iij568 = 0, $iij578 = 0, $iij588 = 0, $iij598 = 0, $ij3 = 0, $ij3155 = 0, $ij3165 = 0, $ij3175 = 0;
 var $ij3184 = 0, $ij325 = 0, $ij38 = 0, $ij4 = 0, $ij5 = 0, $ij5107 = 0, $ij5117 = 0, $ij5126 = 0, $ij5135 = 0, $ij5144 = 0, $ij515 = 0, $ij537 = 0, $ij547 = 0, $ij557 = 0, $ij567 = 0, $ij577 = 0, $ij587 = 0, $ij597 = 0, $j3array = 0, $j3array151 = 0;
 var $j3array161 = 0, $j3array171 = 0, $j3array180 = 0, $j3array21 = 0, $j3array4 = 0, $j3eval = 0, $j3eval147 = 0, $j3eval148 = 0, $j3valid = 0, $j3valid154 = 0, $j3valid164 = 0, $j3valid174 = 0, $j3valid183 = 0, $j3valid24 = 0, $j3valid7 = 0, $j4array = 0, $j4valid = 0, $j5array = 0, $j5array103 = 0, $j5array11 = 0;
 var $j5array113 = 0, $j5array122 = 0, $j5array131 = 0, $j5array140 = 0, $j5array33 = 0, $j5array43 = 0, $j5array53 = 0, $j5array63 = 0, $j5array73 = 0, $j5array83 = 0, $j5array93 = 0, $j5eval = 0, $j5eval28 = 0, $j5eval29 = 0, $j5eval30 = 0, $j5valid = 0, $j5valid106 = 0, $j5valid116 = 0, $j5valid125 = 0, $j5valid134 = 0;
 var $j5valid14 = 0, $j5valid143 = 0, $j5valid36 = 0, $j5valid46 = 0, $j5valid56 = 0, $j5valid66 = 0, $j5valid76 = 0, $j5valid86 = 0, $j5valid96 = 0, $rotationiter = 0, $sj3array = 0, $sj3array153 = 0, $sj3array163 = 0, $sj3array173 = 0, $sj3array182 = 0, $sj3array23 = 0, $sj3array6 = 0, $sj4array = 0, $sj5array = 0, $sj5array105 = 0;
 var $sj5array115 = 0, $sj5array124 = 0, $sj5array13 = 0, $sj5array133 = 0, $sj5array142 = 0, $sj5array35 = 0, $sj5array45 = 0, $sj5array55 = 0, $sj5array65 = 0, $sj5array75 = 0, $sj5array85 = 0, $sj5array95 = 0, $vfree = 0, $vfree101 = 0, $vfree111 = 0, $vfree121 = 0, $vfree130 = 0, $vfree139 = 0, $vfree159 = 0, $vfree169 = 0;
 var $vfree179 = 0, $vfree188 = 0, $vfree19 = 0, $vfree41 = 0, $vfree51 = 0, $vfree61 = 0, $vfree71 = 0, $vfree81 = 0, $vfree91 = 0, $vinfos = 0, $vinfos100 = 0, $vinfos110 = 0, $vinfos120 = 0, $vinfos129 = 0, $vinfos138 = 0, $vinfos158 = 0, $vinfos168 = 0, $vinfos178 = 0, $vinfos18 = 0, $vinfos187 = 0;
 var $vinfos40 = 0, $vinfos50 = 0, $vinfos60 = 0, $vinfos70 = 0, $vinfos80 = 0, $vinfos90 = 0, $x100 = 0.0, $x101 = 0.0, $x102 = 0.0, $x103 = 0.0, $x104 = 0.0, $x105 = 0.0, $x106 = 0.0, $x107 = 0.0, $x108 = 0.0, $x109 = 0.0, $x110 = 0.0, $x111 = 0.0, $x112 = 0.0, $x113 = 0.0;
 var $x114 = 0.0, $x115 = 0.0, $x116 = 0.0, $x117 = 0.0, $x118 = 0.0, $x119 = 0.0, $x120 = 0.0, $x121 = 0.0, $x122 = 0.0, $x123 = 0.0, $x124 = 0.0, $x125 = 0.0, $x126 = 0.0, $x127 = 0.0, $x128 = 0.0, $x129 = 0, $x130 = 0.0, $x131 = 0.0, $x132 = 0.0, $x133 = 0.0;
 var $x134 = 0.0, $x135 = 0.0, $x136 = 0.0, $x137 = 0.0, $x138 = 0.0, $x139 = 0, $x140 = 0.0, $x141 = 0.0, $x142 = 0.0, $x143 = 0.0, $x144 = 0.0, $x145 = 0.0, $x146 = 0.0, $x147 = 0.0, $x148 = 0, $x149 = 0, $x150 = 0.0, $x151 = 0.0, $x152 = 0.0, $x153 = 0.0;
 var $x154 = 0.0, $x155 = 0.0, $x156 = 0.0, $x157 = 0.0, $x158 = 0.0, $x159 = 0.0, $x160 = 0.0, $x161 = 0.0, $x162 = 0.0, $x163 = 0.0, $x164 = 0.0, $x165 = 0.0, $x166 = 0.0, $x167 = 0.0, $x168 = 0.0, $x169 = 0.0, $x170 = 0.0, $x171 = 0.0, $x172 = 0.0, $x173 = 0.0;
 var $x174 = 0.0, $x175 = 0.0, $x176 = 0.0, $x177 = 0.0, $x178 = 0.0, $x179 = 0.0, $x180 = 0.0, $x181 = 0.0, $x182 = 0.0, $x183 = 0.0, $x184 = 0.0, $x185 = 0.0, $x186 = 0.0, $x187 = 0.0, $x188 = 0.0, $x189 = 0.0, $x190 = 0.0, $x191 = 0.0, $x192 = 0.0, $x193 = 0.0;
 var $x194 = 0.0, $x195 = 0.0, $x196 = 0.0, $x197 = 0.0, $x198 = 0.0, $x199 = 0.0, $x200 = 0.0, $x201 = 0.0, $x202 = 0.0, $x203 = 0.0, $x204 = 0.0, $x205 = 0.0, $x206 = 0.0, $x207 = 0.0, $x208 = 0.0, $x209 = 0.0, $x210 = 0.0, $x211 = 0.0, $x212 = 0.0, $x213 = 0.0;
 var $x214 = 0.0, $x215 = 0.0, $x216 = 0.0, $x217 = 0.0, $x218 = 0.0, $x219 = 0.0, $x220 = 0.0, $x221 = 0.0, $x222 = 0.0, $x223 = 0.0, $x224 = 0.0, $x225 = 0.0, $x226 = 0.0, $x227 = 0.0, $x228 = 0.0, $x229 = 0.0, $x230 = 0.0, $x231 = 0.0, $x232 = 0.0, $x233 = 0.0;
 var $x234 = 0.0, $x235 = 0.0, $x236 = 0.0, $x237 = 0.0, $x238 = 0.0, $x239 = 0.0, $x240 = 0.0, $x241 = 0.0, $x242 = 0.0, $x243 = 0.0, $x244 = 0.0, $x245 = 0.0, $x246 = 0.0, $x247 = 0.0, $x248 = 0.0, $x249 = 0.0, $x250 = 0.0, $x251 = 0.0, $x252 = 0.0, $x253 = 0.0;
 var $x254 = 0.0, $x255 = 0.0, $x256 = 0.0, $x257 = 0.0, $x258 = 0.0, $x259 = 0.0, $x260 = 0.0, $x261 = 0.0, $x262 = 0.0, $x263 = 0, $x264 = 0, $x265 = 0.0, $x266 = 0.0, $x267 = 0.0, $x268 = 0.0, $x269 = 0, $x270 = 0, $x271 = 0, $x272 = 0.0, $x273 = 0.0;
 var $x274 = 0.0, $x275 = 0.0, $x276 = 0.0, $x277 = 0.0, $x278 = 0.0, $x279 = 0.0, $x280 = 0.0, $x281 = 0.0, $x282 = 0.0, $x283 = 0, $x284 = 0, $x285 = 0.0, $x286 = 0.0, $x287 = 0.0, $x288 = 0.0, $x289 = 0.0, $x290 = 0.0, $x291 = 0.0, $x292 = 0.0, $x293 = 0.0;
 var $x294 = 0.0, $x295 = 0, $x296 = 0, $x297 = 0.0, $x298 = 0.0, $x299 = 0.0, $x300 = 0.0, $x301 = 0.0, $x302 = 0.0, $x303 = 0.0, $x304 = 0.0, $x305 = 0.0, $x306 = 0.0, $x307 = 0, $x308 = 0, $x309 = 0.0, $x310 = 0.0, $x311 = 0.0, $x312 = 0.0, $x313 = 0.0;
 var $x314 = 0.0, $x315 = 0.0, $x316 = 0.0, $x317 = 0.0, $x318 = 0.0, $x319 = 0.0, $x320 = 0.0, $x321 = 0.0, $x322 = 0.0, $x323 = 0.0, $x324 = 0.0, $x325 = 0.0, $x326 = 0.0, $x327 = 0.0, $x328 = 0.0, $x329 = 0.0, $x330 = 0.0, $x331 = 0.0, $x332 = 0.0, $x333 = 0.0;
 var $x334 = 0.0, $x335 = 0.0, $x336 = 0.0, $x337 = 0.0, $x338 = 0, $x339 = 0, $x340 = 0.0, $x341 = 0.0, $x342 = 0.0, $x343 = 0.0, $x344 = 0.0, $x345 = 0.0, $x346 = 0.0, $x347 = 0.0, $x348 = 0, $x349 = 0, $x350 = 0.0, $x351 = 0.0, $x352 = 0.0, $x353 = 0.0;
 var $x354 = 0.0, $x355 = 0.0, $x356 = 0.0, $x357 = 0.0, $x358 = 0, $x359 = 0, $x360 = 0.0, $x361 = 0.0, $x362 = 0.0, $x363 = 0.0, $x364 = 0.0, $x365 = 0.0, $x366 = 0.0, $x367 = 0.0, $x368 = 0.0, $x369 = 0.0, $x370 = 0.0, $x371 = 0.0, $x372 = 0, $x373 = 0;
 var $x374 = 0.0, $x375 = 0.0, $x376 = 0.0, $x377 = 0.0, $x378 = 0.0, $x379 = 0.0, $x380 = 0.0, $x381 = 0.0, $x382 = 0.0, $x383 = 0.0, $x384 = 0.0, $x385 = 0.0, $x86 = 0.0, $x87 = 0.0, $x88 = 0.0, $x89 = 0.0, $x90 = 0.0, $x91 = 0.0, $x92 = 0.0, $x93 = 0.0;
 var $x94 = 0.0, $x95 = 0.0, $x96 = 0.0, $x97 = 0.0, $x98 = 0.0, $x99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5600|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j4array = sp + 4824|0;
 $cj4array = sp + 4808|0;
 $sj4array = sp + 4792|0;
 $j4valid = sp + 5596|0;
 $j5eval = sp + 4776|0;
 $j3eval = sp + 4656|0;
 $evalcond = sp + 4496|0;
 $j3array = sp + 4480|0;
 $cj3array = sp + 4464|0;
 $sj3array = sp + 4448|0;
 $j3valid = sp + 5592|0;
 $x129 = sp + 4432|0;
 $evalcond1 = sp + 4416|0;
 $j5array = sp + 4408|0;
 $cj5array = sp + 4400|0;
 $sj5array = sp + 4392|0;
 $j5valid = sp + 5591|0;
 $evalcond2 = sp + 4320|0;
 $vinfos = sp + 5508|0;
 $vfree = sp + 5488|0;
 $j3array4 = sp + 4248|0;
 $cj3array5 = sp + 4232|0;
 $sj3array6 = sp + 4216|0;
 $j3valid7 = sp + 5588|0;
 $x139 = sp + 4200|0;
 $evalcond10 = sp + 4184|0;
 $j5array11 = sp + 4176|0;
 $cj5array12 = sp + 4168|0;
 $sj5array13 = sp + 4160|0;
 $j5valid14 = sp + 5586|0;
 $evalcond17 = sp + 4088|0;
 $vinfos18 = sp + 5460|0;
 $vfree19 = sp + 5448|0;
 $j3array21 = sp + 4032|0;
 $cj3array22 = sp + 4024|0;
 $sj3array23 = sp + 4016|0;
 $j3valid24 = sp + 5584|0;
 $x148 = sp + 4000|0;
 $x149 = sp + 3976|0;
 $evalcond27 = sp + 3912|0;
 $j5eval28 = sp + 3840|0;
 $j5eval29 = sp + 3712|0;
 $j5eval30 = sp + 3576|0;
 $evalcond31 = sp + 3368|0;
 $j5array33 = sp + 3336|0;
 $cj5array34 = sp + 3328|0;
 $sj5array35 = sp + 3320|0;
 $j5valid36 = sp + 5582|0;
 $evalcond39 = sp + 3248|0;
 $vinfos40 = sp + 5420|0;
 $vfree41 = sp + 5408|0;
 $j5array43 = sp + 3168|0;
 $cj5array44 = sp + 3160|0;
 $sj5array45 = sp + 3152|0;
 $j5valid46 = sp + 5580|0;
 $evalcond49 = sp + 3080|0;
 $vinfos50 = sp + 5388|0;
 $vfree51 = sp + 5376|0;
 $j5array53 = sp + 2984|0;
 $cj5array54 = sp + 2976|0;
 $sj5array55 = sp + 2968|0;
 $j5valid56 = sp + 5578|0;
 $evalcond59 = sp + 2904|0;
 $vinfos60 = sp + 5356|0;
 $vfree61 = sp + 5344|0;
 $j5array63 = sp + 2808|0;
 $cj5array64 = sp + 2800|0;
 $sj5array65 = sp + 2792|0;
 $j5valid66 = sp + 5576|0;
 $evalcond69 = sp + 2728|0;
 $vinfos70 = sp + 5324|0;
 $vfree71 = sp + 5312|0;
 $j5array73 = sp + 2664|0;
 $cj5array74 = sp + 2656|0;
 $sj5array75 = sp + 2648|0;
 $j5valid76 = sp + 5574|0;
 $evalcond79 = sp + 2584|0;
 $vinfos80 = sp + 5292|0;
 $vfree81 = sp + 5280|0;
 $j5array83 = sp + 2520|0;
 $cj5array84 = sp + 2512|0;
 $sj5array85 = sp + 2504|0;
 $j5valid86 = sp + 5572|0;
 $evalcond89 = sp + 2440|0;
 $vinfos90 = sp + 5260|0;
 $vfree91 = sp + 5248|0;
 $j5array93 = sp + 2368|0;
 $cj5array94 = sp + 2360|0;
 $sj5array95 = sp + 2352|0;
 $j5valid96 = sp + 5570|0;
 $evalcond99 = sp + 2288|0;
 $vinfos100 = sp + 5228|0;
 $vfree101 = sp + 5216|0;
 $j5array103 = sp + 2232|0;
 $cj5array104 = sp + 2224|0;
 $sj5array105 = sp + 2216|0;
 $j5valid106 = sp + 5568|0;
 $x263 = sp + 2200|0;
 $x264 = sp + 2184|0;
 $evalcond109 = sp + 2120|0;
 $vinfos110 = sp + 5196|0;
 $vfree111 = sp + 5184|0;
 $j5array113 = sp + 2088|0;
 $cj5array114 = sp + 2080|0;
 $sj5array115 = sp + 2072|0;
 $j5valid116 = sp + 5566|0;
 $x269 = sp + 2056|0;
 $x270 = sp + 2032|0;
 $x271 = sp + 2016|0;
 $evalcond119 = sp + 1920|0;
 $vinfos120 = sp + 5164|0;
 $vfree121 = sp + 5152|0;
 $j5array122 = sp + 1832|0;
 $cj5array123 = sp + 1824|0;
 $sj5array124 = sp + 1816|0;
 $j5valid125 = sp + 5565|0;
 $x283 = sp + 1800|0;
 $x284 = sp + 1776|0;
 $evalcond128 = sp + 1680|0;
 $vinfos129 = sp + 5132|0;
 $vfree130 = sp + 5120|0;
 $j5array131 = sp + 1592|0;
 $cj5array132 = sp + 1584|0;
 $sj5array133 = sp + 1576|0;
 $j5valid134 = sp + 5564|0;
 $x295 = sp + 1560|0;
 $x296 = sp + 1544|0;
 $evalcond137 = sp + 1448|0;
 $vinfos138 = sp + 5100|0;
 $vfree139 = sp + 5088|0;
 $j5array140 = sp + 1360|0;
 $cj5array141 = sp + 1352|0;
 $sj5array142 = sp + 1344|0;
 $j5valid143 = sp + 5563|0;
 $x307 = sp + 1328|0;
 $x308 = sp + 1312|0;
 $evalcond146 = sp + 1296|0;
 $j3eval147 = sp + 1272|0;
 $j3eval148 = sp + 1152|0;
 $evalcond149 = sp + 992|0;
 $j3array151 = sp + 984|0;
 $cj3array152 = sp + 976|0;
 $sj3array153 = sp + 968|0;
 $j3valid154 = sp + 5561|0;
 $x338 = sp + 952|0;
 $x339 = sp + 936|0;
 $evalcond157 = sp + 856|0;
 $vinfos158 = sp + 5060|0;
 $vfree159 = sp + 5048|0;
 $j3array161 = sp + 784|0;
 $cj3array162 = sp + 776|0;
 $sj3array163 = sp + 768|0;
 $j3valid164 = sp + 5559|0;
 $x348 = sp + 752|0;
 $x349 = sp + 736|0;
 $evalcond167 = sp + 656|0;
 $vinfos168 = sp + 5028|0;
 $vfree169 = sp + 5016|0;
 $j3array171 = sp + 592|0;
 $cj3array172 = sp + 584|0;
 $sj3array173 = sp + 576|0;
 $j3valid174 = sp + 5557|0;
 $x358 = sp + 560|0;
 $x359 = sp + 536|0;
 $evalcond177 = sp + 392|0;
 $vinfos178 = sp + 4996|0;
 $vfree179 = sp + 4984|0;
 $j3array180 = sp + 288|0;
 $cj3array181 = sp + 280|0;
 $sj3array182 = sp + 272|0;
 $j3valid183 = sp + 5556|0;
 $x372 = sp + 256|0;
 $x373 = sp + 240|0;
 $evalcond186 = sp + 96|0;
 $vinfos187 = sp + 4964|0;
 $vfree188 = sp + 4952|0;
 $0 = $this;
 $1 = $solutions;
 $4 = $0;
 $rotationiter = 0;
 L1: while(1) {
  $5 = $rotationiter;
  $6 = ($5|0)<(1);
  if (!($6)) {
   label = 1590;
   break;
  }
  $7 = (($4) + 8|0);
  $8 = +HEAPF64[$7>>3];
  $9 = 1.0 * $8;
  $x86 = $9;
  $10 = (($4) + 344|0);
  $11 = +HEAPF64[$10>>3];
  $12 = (($4) + 16|0);
  $13 = +HEAPF64[$12>>3];
  $14 = $11 * $13;
  $x87 = $14;
  $15 = (($4) + 56|0);
  $16 = +HEAPF64[$15>>3];
  $17 = (($4) + 96|0);
  $18 = +HEAPF64[$17>>3];
  $19 = $16 * $18;
  $x88 = $19;
  $20 = (($4) + 320|0);
  $21 = +HEAPF64[$20>>3];
  $22 = (($4) + 16|0);
  $23 = +HEAPF64[$22>>3];
  $24 = $21 * $23;
  $x89 = $24;
  $25 = (($4) + 8|0);
  $26 = +HEAPF64[$25>>3];
  $27 = (($4) + 248|0);
  $28 = +HEAPF64[$27>>3];
  $29 = $26 * $28;
  $x90 = $29;
  $30 = (($4) + 48|0);
  $31 = +HEAPF64[$30>>3];
  $32 = (($4) + 88|0);
  $33 = +HEAPF64[$32>>3];
  $34 = $31 * $33;
  $x91 = $34;
  $35 = (($4) + 8|0);
  $36 = +HEAPF64[$35>>3];
  $37 = (($4) + 272|0);
  $38 = +HEAPF64[$37>>3];
  $39 = $36 * $38;
  $x92 = $39;
  $40 = (($4) + 368|0);
  $41 = +HEAPF64[$40>>3];
  $42 = (($4) + 16|0);
  $43 = +HEAPF64[$42>>3];
  $44 = $41 * $43;
  $x93 = $44;
  $45 = (($4) + 8|0);
  $46 = +HEAPF64[$45>>3];
  $47 = (($4) + 296|0);
  $48 = +HEAPF64[$47>>3];
  $49 = $46 * $48;
  $x94 = $49;
  $50 = $x91;
  $51 = $x88;
  $52 = -1.0 * $51;
  $53 = $50 + $52;
  $x95 = $53;
  $54 = $x88;
  $55 = $x91;
  $56 = -1.0 * $55;
  $57 = $54 + $56;
  $x96 = $57;
  $58 = (($4) + 16|0);
  $59 = +HEAPF64[$58>>3];
  $60 = $x96;
  $61 = $59 * $60;
  $x97 = $61;
  $62 = (($4) + 88|0);
  $63 = +HEAPF64[$62>>3];
  $64 = -1.0 * $63;
  $65 = (($4) + 56|0);
  $66 = +HEAPF64[$65>>3];
  $67 = $64 * $66;
  $68 = (($4) + 48|0);
  $69 = +HEAPF64[$68>>3];
  $70 = -1.0 * $69;
  $71 = (($4) + 96|0);
  $72 = +HEAPF64[$71>>3];
  $73 = $70 * $72;
  $74 = $67 + $73;
  $x98 = $74;
  $75 = (($4) + 8|0);
  $76 = +HEAPF64[$75>>3];
  $77 = $x98;
  $78 = $76 * $77;
  $x99 = $78;
  $79 = (($4) + 248|0);
  $80 = +HEAPF64[$79>>3];
  $81 = (($4) + 16|0);
  $82 = +HEAPF64[$81>>3];
  $83 = $80 * $82;
  $84 = (($4) + 320|0);
  $85 = +HEAPF64[$84>>3];
  $86 = -1.0 * $85;
  $87 = $x86;
  $88 = $86 * $87;
  $89 = $83 + $88;
  $90 = (($4) + 240|0);
  HEAPF64[$90>>3] = $89;
  $91 = (($4) + 272|0);
  $92 = +HEAPF64[$91>>3];
  $93 = (($4) + 16|0);
  $94 = +HEAPF64[$93>>3];
  $95 = $92 * $94;
  $96 = (($4) + 344|0);
  $97 = +HEAPF64[$96>>3];
  $98 = -1.0 * $97;
  $99 = $x86;
  $100 = $98 * $99;
  $101 = $95 + $100;
  $102 = (($4) + 264|0);
  HEAPF64[$102>>3] = $101;
  $103 = (($4) + 368|0);
  $104 = +HEAPF64[$103>>3];
  $105 = -1.0 * $104;
  $106 = $x86;
  $107 = $105 * $106;
  $108 = (($4) + 296|0);
  $109 = +HEAPF64[$108>>3];
  $110 = (($4) + 16|0);
  $111 = +HEAPF64[$110>>3];
  $112 = $109 * $111;
  $113 = $107 + $112;
  $114 = (($4) + 288|0);
  HEAPF64[$114>>3] = $113;
  $115 = $x89;
  $116 = $x98;
  $117 = $115 * $116;
  $118 = (($4) + 392|0);
  $119 = +HEAPF64[$118>>3];
  $120 = $x95;
  $121 = $119 * $120;
  $122 = $117 + $121;
  $123 = $x90;
  $124 = $x98;
  $125 = $123 * $124;
  $126 = $122 + $125;
  $127 = (($4) + 312|0);
  HEAPF64[$127>>3] = $126;
  $128 = (($4) + 416|0);
  $129 = +HEAPF64[$128>>3];
  $130 = $x95;
  $131 = $129 * $130;
  $132 = $x87;
  $133 = $x98;
  $134 = $132 * $133;
  $135 = $131 + $134;
  $136 = $x92;
  $137 = $x98;
  $138 = $136 * $137;
  $139 = $135 + $138;
  $140 = (($4) + 336|0);
  HEAPF64[$140>>3] = $139;
  $141 = $x93;
  $142 = $x98;
  $143 = $141 * $142;
  $144 = (($4) + 440|0);
  $145 = +HEAPF64[$144>>3];
  $146 = $x95;
  $147 = $145 * $146;
  $148 = $143 + $147;
  $149 = $x94;
  $150 = $x98;
  $151 = $149 * $150;
  $152 = $148 + $151;
  $153 = (($4) + 360|0);
  HEAPF64[$153>>3] = $152;
  $154 = $x89;
  $155 = $x96;
  $156 = $154 * $155;
  $157 = (($4) + 392|0);
  $158 = +HEAPF64[$157>>3];
  $159 = $x98;
  $160 = $158 * $159;
  $161 = $156 + $160;
  $162 = $x90;
  $163 = $x96;
  $164 = $162 * $163;
  $165 = $161 + $164;
  $166 = (($4) + 384|0);
  HEAPF64[$166>>3] = $165;
  $167 = (($4) + 416|0);
  $168 = +HEAPF64[$167>>3];
  $169 = $x98;
  $170 = $168 * $169;
  $171 = $x87;
  $172 = $x96;
  $173 = $171 * $172;
  $174 = $170 + $173;
  $175 = $x92;
  $176 = $x96;
  $177 = $175 * $176;
  $178 = $174 + $177;
  $179 = (($4) + 408|0);
  HEAPF64[$179>>3] = $178;
  $180 = $x93;
  $181 = $x96;
  $182 = $180 * $181;
  $183 = (($4) + 440|0);
  $184 = +HEAPF64[$183>>3];
  $185 = $x98;
  $186 = $184 * $185;
  $187 = $182 + $186;
  $188 = $x94;
  $189 = $x96;
  $190 = $188 * $189;
  $191 = $187 + $190;
  $192 = (($4) + 432|0);
  HEAPF64[$192>>3] = $191;
  ;HEAP8[$j4valid+0>>0]=0|0;HEAP8[$j4valid+1>>0]=0|0;
  $193 = (($4) + 550|0);
  HEAP8[$193>>0] = 2;
  $194 = (($4) + 432|0);
  $195 = +HEAPF64[$194>>3];
  HEAPF64[$cj4array>>3] = $195;
  $196 = +HEAPF64[$cj4array>>3];
  $197 = $196 >= -1.0000020000000001;
  if ($197) {
   $198 = +HEAPF64[$cj4array>>3];
   $199 = $198 <= 1.0000020000000001;
   if ($199) {
    $200 = (($j4valid) + 1|0);
    HEAP8[$200>>0] = 1;
    HEAP8[$j4valid>>0] = 1;
    $201 = +HEAPF64[$cj4array>>3];
    $202 = (+__Z6IKacosd($201));
    HEAPF64[$j4array>>3] = $202;
    $203 = +HEAPF64[$j4array>>3];
    $204 = (+__Z5IKsind($203));
    HEAPF64[$sj4array>>3] = $204;
    $205 = +HEAPF64[$cj4array>>3];
    $206 = (($cj4array) + 8|0);
    HEAPF64[$206>>3] = $205;
    $207 = +HEAPF64[$j4array>>3];
    $208 = -$207;
    $209 = (($j4array) + 8|0);
    HEAPF64[$209>>3] = $208;
    $210 = +HEAPF64[$sj4array>>3];
    $211 = -$210;
    $212 = (($sj4array) + 8|0);
    HEAPF64[$212>>3] = $211;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $213 = +HEAPF64[$cj4array>>3];
   $214 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($213)|0);
   if ($214) {
    HEAP8[$j4valid>>0] = 1;
    HEAPF64[$cj4array>>3] = 1.0;
    HEAPF64[$sj4array>>3] = 0.0;
    HEAPF64[$j4array>>3] = 0.0;
   }
  }
  $ij4 = 0;
  while(1) {
   $215 = $ij4;
   $216 = ($215|0)<(2);
   if (!($216)) {
    break;
   }
   $217 = $ij4;
   $218 = (($j4valid) + ($217)|0);
   $219 = HEAP8[$218>>0]|0;
   $220 = $219&1;
   do {
    if ($220) {
     $221 = $ij4;
     $222 = $221&255;
     $223 = (($4) + 548|0);
     HEAP8[$223>>0] = $222;
     $224 = (($4) + 548|0);
     $225 = (($224) + 1|0);
     HEAP8[$225>>0] = -1;
     $226 = $ij4;
     $227 = (($226) + 1)|0;
     $iij4 = $227;
     while(1) {
      $228 = $iij4;
      $229 = ($228|0)<(2);
      if (!($229)) {
       break;
      }
      $230 = $iij4;
      $231 = (($j4valid) + ($230)|0);
      $232 = HEAP8[$231>>0]|0;
      $233 = $232&1;
      if ($233) {
       $234 = $ij4;
       $235 = (($cj4array) + ($234<<3)|0);
       $236 = +HEAPF64[$235>>3];
       $237 = $iij4;
       $238 = (($cj4array) + ($237<<3)|0);
       $239 = +HEAPF64[$238>>3];
       $240 = $236 - $239;
       $241 = (+__Z5IKabsd($240));
       $242 = $241 < 9.9999999999999995E-7;
       if ($242) {
        $243 = $ij4;
        $244 = (($sj4array) + ($243<<3)|0);
        $245 = +HEAPF64[$244>>3];
        $246 = $iij4;
        $247 = (($sj4array) + ($246<<3)|0);
        $248 = +HEAPF64[$247>>3];
        $249 = $245 - $248;
        $250 = (+__Z5IKabsd($249));
        $251 = $250 < 9.9999999999999995E-7;
        if ($251) {
         label = 18;
         break;
        }
       }
      }
      $258 = $iij4;
      $259 = (($258) + 1)|0;
      $iij4 = $259;
     }
     if ((label|0) == 18) {
      label = 0;
      $252 = $iij4;
      $253 = (($j4valid) + ($252)|0);
      HEAP8[$253>>0] = 0;
      $254 = $iij4;
      $255 = $254&255;
      $256 = (($4) + 548|0);
      $257 = (($256) + 1|0);
      HEAP8[$257>>0] = $255;
     }
     $260 = $ij4;
     $261 = (($j4array) + ($260<<3)|0);
     $262 = +HEAPF64[$261>>3];
     $263 = (($4) + 160|0);
     HEAPF64[$263>>3] = $262;
     $264 = $ij4;
     $265 = (($cj4array) + ($264<<3)|0);
     $266 = +HEAPF64[$265>>3];
     $267 = (($4) + 168|0);
     HEAPF64[$267>>3] = $266;
     $268 = $ij4;
     $269 = (($sj4array) + ($268<<3)|0);
     $270 = +HEAPF64[$269>>3];
     $271 = (($4) + 176|0);
     HEAPF64[$271>>3] = $270;
     $272 = (($4) + 8|0);
     $273 = +HEAPF64[$272>>3];
     $274 = 1.0 * $273;
     $x100 = $274;
     $275 = (($4) + 344|0);
     $276 = +HEAPF64[$275>>3];
     $277 = (($4) + 16|0);
     $278 = +HEAPF64[$277>>3];
     $279 = $276 * $278;
     $x101 = $279;
     $280 = (($4) + 56|0);
     $281 = +HEAPF64[$280>>3];
     $282 = (($4) + 96|0);
     $283 = +HEAPF64[$282>>3];
     $284 = $281 * $283;
     $x102 = $284;
     $285 = (($4) + 320|0);
     $286 = +HEAPF64[$285>>3];
     $287 = (($4) + 16|0);
     $288 = +HEAPF64[$287>>3];
     $289 = $286 * $288;
     $x103 = $289;
     $290 = (($4) + 8|0);
     $291 = +HEAPF64[$290>>3];
     $292 = (($4) + 248|0);
     $293 = +HEAPF64[$292>>3];
     $294 = $291 * $293;
     $x104 = $294;
     $295 = (($4) + 48|0);
     $296 = +HEAPF64[$295>>3];
     $297 = (($4) + 88|0);
     $298 = +HEAPF64[$297>>3];
     $299 = $296 * $298;
     $x105 = $299;
     $300 = (($4) + 8|0);
     $301 = +HEAPF64[$300>>3];
     $302 = (($4) + 272|0);
     $303 = +HEAPF64[$302>>3];
     $304 = $301 * $303;
     $x106 = $304;
     $305 = (($4) + 368|0);
     $306 = +HEAPF64[$305>>3];
     $307 = (($4) + 16|0);
     $308 = +HEAPF64[$307>>3];
     $309 = $306 * $308;
     $x107 = $309;
     $310 = (($4) + 8|0);
     $311 = +HEAPF64[$310>>3];
     $312 = (($4) + 296|0);
     $313 = +HEAPF64[$312>>3];
     $314 = $311 * $313;
     $x108 = $314;
     $315 = $x105;
     $316 = $x102;
     $317 = -1.0 * $316;
     $318 = $315 + $317;
     $x109 = $318;
     $319 = $x102;
     $320 = $x105;
     $321 = -1.0 * $320;
     $322 = $319 + $321;
     $x110 = $322;
     $323 = (($4) + 16|0);
     $324 = +HEAPF64[$323>>3];
     $325 = $x110;
     $326 = $324 * $325;
     $x111 = $326;
     $327 = $x98;
     $x112 = $327;
     $328 = (($4) + 8|0);
     $329 = +HEAPF64[$328>>3];
     $330 = $x112;
     $331 = $329 * $330;
     $x113 = $331;
     $332 = (($4) + 248|0);
     $333 = +HEAPF64[$332>>3];
     $334 = (($4) + 16|0);
     $335 = +HEAPF64[$334>>3];
     $336 = $333 * $335;
     $337 = (($4) + 320|0);
     $338 = +HEAPF64[$337>>3];
     $339 = -1.0 * $338;
     $340 = $x100;
     $341 = $339 * $340;
     $342 = $336 + $341;
     $343 = (($4) + 240|0);
     HEAPF64[$343>>3] = $342;
     $344 = (($4) + 344|0);
     $345 = +HEAPF64[$344>>3];
     $346 = -1.0 * $345;
     $347 = $x100;
     $348 = $346 * $347;
     $349 = (($4) + 272|0);
     $350 = +HEAPF64[$349>>3];
     $351 = (($4) + 16|0);
     $352 = +HEAPF64[$351>>3];
     $353 = $350 * $352;
     $354 = $348 + $353;
     $355 = (($4) + 264|0);
     HEAPF64[$355>>3] = $354;
     $356 = (($4) + 368|0);
     $357 = +HEAPF64[$356>>3];
     $358 = -1.0 * $357;
     $359 = $x100;
     $360 = $358 * $359;
     $361 = (($4) + 296|0);
     $362 = +HEAPF64[$361>>3];
     $363 = (($4) + 16|0);
     $364 = +HEAPF64[$363>>3];
     $365 = $362 * $364;
     $366 = $360 + $365;
     $367 = (($4) + 288|0);
     HEAPF64[$367>>3] = $366;
     $368 = $x103;
     $369 = $x112;
     $370 = $368 * $369;
     $371 = (($4) + 392|0);
     $372 = +HEAPF64[$371>>3];
     $373 = $x109;
     $374 = $372 * $373;
     $375 = $370 + $374;
     $376 = $x104;
     $377 = $x112;
     $378 = $376 * $377;
     $379 = $375 + $378;
     $380 = (($4) + 312|0);
     HEAPF64[$380>>3] = $379;
     $381 = $x106;
     $382 = $x112;
     $383 = $381 * $382;
     $384 = (($4) + 416|0);
     $385 = +HEAPF64[$384>>3];
     $386 = $x109;
     $387 = $385 * $386;
     $388 = $383 + $387;
     $389 = $x101;
     $390 = $x112;
     $391 = $389 * $390;
     $392 = $388 + $391;
     $393 = (($4) + 336|0);
     HEAPF64[$393>>3] = $392;
     $394 = (($4) + 440|0);
     $395 = +HEAPF64[$394>>3];
     $396 = $x109;
     $397 = $395 * $396;
     $398 = $x108;
     $399 = $x112;
     $400 = $398 * $399;
     $401 = $397 + $400;
     $402 = $x107;
     $403 = $x112;
     $404 = $402 * $403;
     $405 = $401 + $404;
     $406 = (($4) + 360|0);
     HEAPF64[$406>>3] = $405;
     $407 = $x103;
     $408 = $x110;
     $409 = $407 * $408;
     $410 = (($4) + 392|0);
     $411 = +HEAPF64[$410>>3];
     $412 = $x112;
     $413 = $411 * $412;
     $414 = $409 + $413;
     $415 = $x104;
     $416 = $x110;
     $417 = $415 * $416;
     $418 = $414 + $417;
     $419 = (($4) + 384|0);
     HEAPF64[$419>>3] = $418;
     $420 = $x106;
     $421 = $x110;
     $422 = $420 * $421;
     $423 = (($4) + 416|0);
     $424 = +HEAPF64[$423>>3];
     $425 = $x112;
     $426 = $424 * $425;
     $427 = $422 + $426;
     $428 = $x101;
     $429 = $x110;
     $430 = $428 * $429;
     $431 = $427 + $430;
     $432 = (($4) + 408|0);
     HEAPF64[$432>>3] = $431;
     $433 = (($4) + 440|0);
     $434 = +HEAPF64[$433>>3];
     $435 = $x112;
     $436 = $434 * $435;
     $437 = $x108;
     $438 = $x110;
     $439 = $437 * $438;
     $440 = $436 + $439;
     $441 = $x107;
     $442 = $x110;
     $443 = $441 * $442;
     $444 = $440 + $443;
     $445 = (($4) + 432|0);
     HEAPF64[$445>>3] = $444;
     $446 = (($4) + 176|0);
     $447 = +HEAPF64[$446>>3];
     HEAPF64[$j5eval>>3] = $447;
     $448 = (($4) + 176|0);
     $449 = +HEAPF64[$448>>3];
     $450 = (+__Z6IKsignd($449));
     $451 = (($j5eval) + 8|0);
     HEAPF64[$451>>3] = $450;
     $452 = +HEAPF64[$j5eval>>3];
     $453 = (+__Z5IKabsd($452));
     $454 = $453 < 9.9999999999999995E-7;
     if ($454) {
      label = 23;
     } else {
      $455 = (($j5eval) + 8|0);
      $456 = +HEAPF64[$455>>3];
      $457 = (+__Z5IKabsd($456));
      $458 = $457 < 9.9999999999999995E-7;
      if ($458) {
       label = 23;
      } else {
       ;HEAP8[$j5valid143+0>>0]=0|0;
       $9059 = (($4) + 553|0);
       HEAP8[$9059>>0] = 1;
       $9060 = (($4) + 176|0);
       $9061 = +HEAPF64[$9060>>3];
       $9062 = (+__Z6IKsignd($9061));
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x307,$9062,-1);
       $9063 = (($x307) + 8|0);
       $9064 = HEAP8[$9063>>0]|0;
       $9065 = $9064&1;
       if (!($9065)) {
        break;
       }
       $9066 = (($4) + 384|0);
       $9067 = +HEAPF64[$9066>>3];
       $9068 = (($4) + 408|0);
       $9069 = +HEAPF64[$9068>>3];
       __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x308,$9067,$9069,1.9999999999999999E-6);
       $9070 = (($x308) + 8|0);
       $9071 = HEAP8[$9070>>0]|0;
       $9072 = $9071&1;
       if (!($9072)) {
        break;
       }
       $9073 = +HEAPF64[$x307>>3];
       $9074 = 1.5707963267949001 * $9073;
       $9075 = -1.5707963267949001 + $9074;
       $9076 = +HEAPF64[$x308>>3];
       $9077 = $9075 + $9076;
       HEAPF64[$j5array140>>3] = $9077;
       $9078 = +HEAPF64[$j5array140>>3];
       $9079 = (+__Z5IKsind($9078));
       HEAPF64[$sj5array142>>3] = $9079;
       $9080 = +HEAPF64[$j5array140>>3];
       $9081 = (+__Z5IKcosd($9080));
       HEAPF64[$cj5array141>>3] = $9081;
       $9082 = +HEAPF64[$j5array140>>3];
       $9083 = $9082 > 3.14159265358979;
       if ($9083) {
        $9084 = +HEAPF64[$j5array140>>3];
        $9085 = $9084 - 6.2831853071795898;
        HEAPF64[$j5array140>>3] = $9085;
       } else {
        $9086 = +HEAPF64[$j5array140>>3];
        $9087 = $9086 < -3.14159265358979;
        if ($9087) {
         $9088 = +HEAPF64[$j5array140>>3];
         $9089 = $9088 + 6.2831853071795898;
         HEAPF64[$j5array140>>3] = $9089;
        }
       }
       HEAP8[$j5valid143>>0] = 1;
       $ij5144 = 0;
       while(1) {
        $9090 = $ij5144;
        $9091 = ($9090|0)<(1);
        if (!($9091)) {
         break;
        }
        $9092 = $ij5144;
        $9093 = (($j5valid143) + ($9092)|0);
        $9094 = HEAP8[$9093>>0]|0;
        $9095 = $9094&1;
        L49: do {
         if ($9095) {
          $9096 = $ij5144;
          $9097 = $9096&255;
          $9098 = (($4) + 551|0);
          HEAP8[$9098>>0] = $9097;
          $9099 = (($4) + 551|0);
          $9100 = (($9099) + 1|0);
          HEAP8[$9100>>0] = -1;
          $9101 = $ij5144;
          $9102 = (($9101) + 1)|0;
          $iij5145 = $9102;
          L52: while(1) {
           $9103 = $iij5145;
           $9104 = ($9103|0)<(1);
           if (!($9104)) {
            break;
           }
           $9105 = $iij5145;
           $9106 = (($j5valid143) + ($9105)|0);
           $9107 = HEAP8[$9106>>0]|0;
           $9108 = $9107&1;
           do {
            if ($9108) {
             $9109 = $ij5144;
             $9110 = (($cj5array141) + ($9109<<3)|0);
             $9111 = +HEAPF64[$9110>>3];
             $9112 = $iij5145;
             $9113 = (($cj5array141) + ($9112<<3)|0);
             $9114 = +HEAPF64[$9113>>3];
             $9115 = $9111 - $9114;
             $9116 = (+__Z5IKabsd($9115));
             $9117 = $9116 < 9.9999999999999995E-7;
             if (!($9117)) {
              break;
             }
             $9118 = $ij5144;
             $9119 = (($sj5array142) + ($9118<<3)|0);
             $9120 = +HEAPF64[$9119>>3];
             $9121 = $iij5145;
             $9122 = (($sj5array142) + ($9121<<3)|0);
             $9123 = +HEAPF64[$9122>>3];
             $9124 = $9120 - $9123;
             $9125 = (+__Z5IKabsd($9124));
             $9126 = $9125 < 9.9999999999999995E-7;
             if ($9126) {
              label = 1236;
              break L52;
             }
            }
           } while(0);
           $9133 = $iij5145;
           $9134 = (($9133) + 1)|0;
           $iij5145 = $9134;
          }
          if ((label|0) == 1236) {
           label = 0;
           $9127 = $iij5145;
           $9128 = (($j5valid143) + ($9127)|0);
           HEAP8[$9128>>0] = 0;
           $9129 = $iij5145;
           $9130 = $9129&255;
           $9131 = (($4) + 551|0);
           $9132 = (($9131) + 1|0);
           HEAP8[$9132>>0] = $9130;
          }
          $9135 = $ij5144;
          $9136 = (($j5array140) + ($9135<<3)|0);
          $9137 = +HEAPF64[$9136>>3];
          $9138 = (($4) + 200|0);
          HEAPF64[$9138>>3] = $9137;
          $9139 = $ij5144;
          $9140 = (($cj5array141) + ($9139<<3)|0);
          $9141 = +HEAPF64[$9140>>3];
          $9142 = (($4) + 208|0);
          HEAPF64[$9142>>3] = $9141;
          $9143 = $ij5144;
          $9144 = (($sj5array142) + ($9143<<3)|0);
          $9145 = +HEAPF64[$9144>>3];
          $9146 = (($4) + 216|0);
          HEAPF64[$9146>>3] = $9145;
          $9147 = (($4) + 176|0);
          $9148 = +HEAPF64[$9147>>3];
          $9149 = 1.0 * $9148;
          $x309 = $9149;
          $9150 = $x309;
          $9151 = -1.0 * $9150;
          $9152 = (($4) + 200|0);
          $9153 = +HEAPF64[$9152>>3];
          $9154 = (+__Z5IKsind($9153));
          $9155 = $9151 * $9154;
          $9156 = (($4) + 384|0);
          $9157 = +HEAPF64[$9156>>3];
          $9158 = $9155 + $9157;
          HEAPF64[$evalcond146>>3] = $9158;
          $9159 = $x309;
          $9160 = -1.0 * $9159;
          $9161 = (($4) + 200|0);
          $9162 = +HEAPF64[$9161>>3];
          $9163 = (+__Z5IKcosd($9162));
          $9164 = $9160 * $9163;
          $9165 = (($4) + 408|0);
          $9166 = +HEAPF64[$9165>>3];
          $9167 = $9164 + $9166;
          $9168 = (($evalcond146) + 8|0);
          HEAPF64[$9168>>3] = $9167;
          $9169 = +HEAPF64[$evalcond146>>3];
          $9170 = (+__Z5IKabsd($9169));
          $9171 = $9170 > 5.0000000000000004E-6;
          if (!($9171)) {
           $9172 = (($evalcond146) + 8|0);
           $9173 = +HEAPF64[$9172>>3];
           $9174 = (+__Z5IKabsd($9173));
           $9175 = $9174 > 5.0000000000000004E-6;
           if (!($9175)) {
            $9176 = (($4) + 8|0);
            $9177 = +HEAPF64[$9176>>3];
            $9178 = 1.0 * $9177;
            $x310 = $9178;
            $9179 = (($4) + 344|0);
            $9180 = +HEAPF64[$9179>>3];
            $9181 = (($4) + 16|0);
            $9182 = +HEAPF64[$9181>>3];
            $9183 = $9180 * $9182;
            $x311 = $9183;
            $9184 = (($4) + 56|0);
            $9185 = +HEAPF64[$9184>>3];
            $9186 = (($4) + 96|0);
            $9187 = +HEAPF64[$9186>>3];
            $9188 = $9185 * $9187;
            $x312 = $9188;
            $9189 = (($4) + 320|0);
            $9190 = +HEAPF64[$9189>>3];
            $9191 = (($4) + 16|0);
            $9192 = +HEAPF64[$9191>>3];
            $9193 = $9190 * $9192;
            $x313 = $9193;
            $9194 = (($4) + 8|0);
            $9195 = +HEAPF64[$9194>>3];
            $9196 = (($4) + 248|0);
            $9197 = +HEAPF64[$9196>>3];
            $9198 = $9195 * $9197;
            $x314 = $9198;
            $9199 = (($4) + 48|0);
            $9200 = +HEAPF64[$9199>>3];
            $9201 = (($4) + 88|0);
            $9202 = +HEAPF64[$9201>>3];
            $9203 = $9200 * $9202;
            $x315 = $9203;
            $9204 = (($4) + 8|0);
            $9205 = +HEAPF64[$9204>>3];
            $9206 = (($4) + 272|0);
            $9207 = +HEAPF64[$9206>>3];
            $9208 = $9205 * $9207;
            $x316 = $9208;
            $9209 = (($4) + 368|0);
            $9210 = +HEAPF64[$9209>>3];
            $9211 = (($4) + 16|0);
            $9212 = +HEAPF64[$9211>>3];
            $9213 = $9210 * $9212;
            $x317 = $9213;
            $9214 = (($4) + 8|0);
            $9215 = +HEAPF64[$9214>>3];
            $9216 = (($4) + 296|0);
            $9217 = +HEAPF64[$9216>>3];
            $9218 = $9215 * $9217;
            $x318 = $9218;
            $9219 = $x315;
            $9220 = $x312;
            $9221 = -1.0 * $9220;
            $9222 = $9219 + $9221;
            $x319 = $9222;
            $9223 = $x312;
            $9224 = $x315;
            $9225 = -1.0 * $9224;
            $9226 = $9223 + $9225;
            $x320 = $9226;
            $9227 = (($4) + 16|0);
            $9228 = +HEAPF64[$9227>>3];
            $9229 = $x320;
            $9230 = $9228 * $9229;
            $x321 = $9230;
            $9231 = $x98;
            $x322 = $9231;
            $9232 = (($4) + 8|0);
            $9233 = +HEAPF64[$9232>>3];
            $9234 = $x322;
            $9235 = $9233 * $9234;
            $x323 = $9235;
            $9236 = (($4) + 248|0);
            $9237 = +HEAPF64[$9236>>3];
            $9238 = (($4) + 16|0);
            $9239 = +HEAPF64[$9238>>3];
            $9240 = $9237 * $9239;
            $9241 = (($4) + 320|0);
            $9242 = +HEAPF64[$9241>>3];
            $9243 = -1.0 * $9242;
            $9244 = $x310;
            $9245 = $9243 * $9244;
            $9246 = $9240 + $9245;
            $9247 = (($4) + 240|0);
            HEAPF64[$9247>>3] = $9246;
            $9248 = (($4) + 272|0);
            $9249 = +HEAPF64[$9248>>3];
            $9250 = (($4) + 16|0);
            $9251 = +HEAPF64[$9250>>3];
            $9252 = $9249 * $9251;
            $9253 = (($4) + 344|0);
            $9254 = +HEAPF64[$9253>>3];
            $9255 = -1.0 * $9254;
            $9256 = $x310;
            $9257 = $9255 * $9256;
            $9258 = $9252 + $9257;
            $9259 = (($4) + 264|0);
            HEAPF64[$9259>>3] = $9258;
            $9260 = (($4) + 368|0);
            $9261 = +HEAPF64[$9260>>3];
            $9262 = -1.0 * $9261;
            $9263 = $x310;
            $9264 = $9262 * $9263;
            $9265 = (($4) + 296|0);
            $9266 = +HEAPF64[$9265>>3];
            $9267 = (($4) + 16|0);
            $9268 = +HEAPF64[$9267>>3];
            $9269 = $9266 * $9268;
            $9270 = $9264 + $9269;
            $9271 = (($4) + 288|0);
            HEAPF64[$9271>>3] = $9270;
            $9272 = (($4) + 392|0);
            $9273 = +HEAPF64[$9272>>3];
            $9274 = $x319;
            $9275 = $9273 * $9274;
            $9276 = $x313;
            $9277 = $x322;
            $9278 = $9276 * $9277;
            $9279 = $9275 + $9278;
            $9280 = $x314;
            $9281 = $x322;
            $9282 = $9280 * $9281;
            $9283 = $9279 + $9282;
            $9284 = (($4) + 312|0);
            HEAPF64[$9284>>3] = $9283;
            $9285 = $x316;
            $9286 = $x322;
            $9287 = $9285 * $9286;
            $9288 = $x311;
            $9289 = $x322;
            $9290 = $9288 * $9289;
            $9291 = $9287 + $9290;
            $9292 = (($4) + 416|0);
            $9293 = +HEAPF64[$9292>>3];
            $9294 = $x319;
            $9295 = $9293 * $9294;
            $9296 = $9291 + $9295;
            $9297 = (($4) + 336|0);
            HEAPF64[$9297>>3] = $9296;
            $9298 = $x318;
            $9299 = $x322;
            $9300 = $9298 * $9299;
            $9301 = $x317;
            $9302 = $x322;
            $9303 = $9301 * $9302;
            $9304 = $9300 + $9303;
            $9305 = (($4) + 440|0);
            $9306 = +HEAPF64[$9305>>3];
            $9307 = $x319;
            $9308 = $9306 * $9307;
            $9309 = $9304 + $9308;
            $9310 = (($4) + 360|0);
            HEAPF64[$9310>>3] = $9309;
            $9311 = (($4) + 392|0);
            $9312 = +HEAPF64[$9311>>3];
            $9313 = $x322;
            $9314 = $9312 * $9313;
            $9315 = $x313;
            $9316 = $x320;
            $9317 = $9315 * $9316;
            $9318 = $9314 + $9317;
            $9319 = $x314;
            $9320 = $x320;
            $9321 = $9319 * $9320;
            $9322 = $9318 + $9321;
            $9323 = (($4) + 384|0);
            HEAPF64[$9323>>3] = $9322;
            $9324 = (($4) + 416|0);
            $9325 = +HEAPF64[$9324>>3];
            $9326 = $x322;
            $9327 = $9325 * $9326;
            $9328 = $x316;
            $9329 = $x320;
            $9330 = $9328 * $9329;
            $9331 = $9327 + $9330;
            $9332 = $x311;
            $9333 = $x320;
            $9334 = $9332 * $9333;
            $9335 = $9331 + $9334;
            $9336 = (($4) + 408|0);
            HEAPF64[$9336>>3] = $9335;
            $9337 = $x318;
            $9338 = $x320;
            $9339 = $9337 * $9338;
            $9340 = (($4) + 440|0);
            $9341 = +HEAPF64[$9340>>3];
            $9342 = $x322;
            $9343 = $9341 * $9342;
            $9344 = $9339 + $9343;
            $9345 = $x317;
            $9346 = $x320;
            $9347 = $9345 * $9346;
            $9348 = $9344 + $9347;
            $9349 = (($4) + 432|0);
            HEAPF64[$9349>>3] = $9348;
            $9350 = (($4) + 176|0);
            $9351 = +HEAPF64[$9350>>3];
            HEAPF64[$j3eval147>>3] = $9351;
            $9352 = (($4) + 176|0);
            $9353 = +HEAPF64[$9352>>3];
            $9354 = (+__Z6IKsignd($9353));
            $9355 = (($j3eval147) + 8|0);
            HEAPF64[$9355>>3] = $9354;
            $9356 = +HEAPF64[$j3eval147>>3];
            $9357 = (+__Z5IKabsd($9356));
            $9358 = $9357 < 9.9999999999999995E-7;
            do {
             if ($9358) {
              label = 1244;
             } else {
              $9359 = (($j3eval147) + 8|0);
              $9360 = +HEAPF64[$9359>>3];
              $9361 = (+__Z5IKabsd($9360));
              $9362 = $9361 < 9.9999999999999995E-7;
              if ($9362) {
               label = 1244;
               break;
              }
              ;HEAP8[$j3valid183+0>>0]=0|0;
              $11312 = (($4) + 547|0);
              HEAP8[$11312>>0] = 1;
              $11313 = (($4) + 176|0);
              $11314 = +HEAPF64[$11313>>3];
              $11315 = (+__Z6IKsignd($11314));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x372,$11315,-1);
              $11316 = (($x372) + 8|0);
              $11317 = HEAP8[$11316>>0]|0;
              $11318 = $11317&1;
              if (!($11318)) {
               break L49;
              }
              $11319 = (($4) + 288|0);
              $11320 = +HEAPF64[$11319>>3];
              $11321 = (($4) + 360|0);
              $11322 = +HEAPF64[$11321>>3];
              $11323 = -1.0 * $11322;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x373,$11320,$11323,1.9999999999999999E-6);
              $11324 = (($x373) + 8|0);
              $11325 = HEAP8[$11324>>0]|0;
              $11326 = $11325&1;
              if (!($11326)) {
               break L49;
              }
              $11327 = +HEAPF64[$x372>>3];
              $11328 = 1.5707963267949001 * $11327;
              $11329 = -1.5707963267949001 + $11328;
              $11330 = +HEAPF64[$x373>>3];
              $11331 = $11329 + $11330;
              HEAPF64[$j3array180>>3] = $11331;
              $11332 = +HEAPF64[$j3array180>>3];
              $11333 = (+__Z5IKsind($11332));
              HEAPF64[$sj3array182>>3] = $11333;
              $11334 = +HEAPF64[$j3array180>>3];
              $11335 = (+__Z5IKcosd($11334));
              HEAPF64[$cj3array181>>3] = $11335;
              $11336 = +HEAPF64[$j3array180>>3];
              $11337 = $11336 > 3.14159265358979;
              if ($11337) {
               $11338 = +HEAPF64[$j3array180>>3];
               $11339 = $11338 - 6.2831853071795898;
               HEAPF64[$j3array180>>3] = $11339;
              } else {
               $11340 = +HEAPF64[$j3array180>>3];
               $11341 = $11340 < -3.14159265358979;
               if ($11341) {
                $11342 = +HEAPF64[$j3array180>>3];
                $11343 = $11342 + 6.2831853071795898;
                HEAPF64[$j3array180>>3] = $11343;
               }
              }
              HEAP8[$j3valid183>>0] = 1;
              $ij3184 = 0;
              while(1) {
               $11344 = $ij3184;
               $11345 = ($11344|0)<(1);
               if (!($11345)) {
                break;
               }
               $11346 = $ij3184;
               $11347 = (($j3valid183) + ($11346)|0);
               $11348 = HEAP8[$11347>>0]|0;
               $11349 = $11348&1;
               L85: do {
                if ($11349) {
                 $11350 = $ij3184;
                 $11351 = $11350&255;
                 $11352 = (($4) + 545|0);
                 HEAP8[$11352>>0] = $11351;
                 $11353 = (($4) + 545|0);
                 $11354 = (($11353) + 1|0);
                 HEAP8[$11354>>0] = -1;
                 $11355 = $ij3184;
                 $11356 = (($11355) + 1)|0;
                 $iij3185 = $11356;
                 L88: while(1) {
                  $11357 = $iij3185;
                  $11358 = ($11357|0)<(1);
                  if (!($11358)) {
                   break;
                  }
                  $11359 = $iij3185;
                  $11360 = (($j3valid183) + ($11359)|0);
                  $11361 = HEAP8[$11360>>0]|0;
                  $11362 = $11361&1;
                  do {
                   if ($11362) {
                    $11363 = $ij3184;
                    $11364 = (($cj3array181) + ($11363<<3)|0);
                    $11365 = +HEAPF64[$11364>>3];
                    $11366 = $iij3185;
                    $11367 = (($cj3array181) + ($11366<<3)|0);
                    $11368 = +HEAPF64[$11367>>3];
                    $11369 = $11365 - $11368;
                    $11370 = (+__Z5IKabsd($11369));
                    $11371 = $11370 < 9.9999999999999995E-7;
                    if (!($11371)) {
                     break;
                    }
                    $11372 = $ij3184;
                    $11373 = (($sj3array182) + ($11372<<3)|0);
                    $11374 = +HEAPF64[$11373>>3];
                    $11375 = $iij3185;
                    $11376 = (($sj3array182) + ($11375<<3)|0);
                    $11377 = +HEAPF64[$11376>>3];
                    $11378 = $11374 - $11377;
                    $11379 = (+__Z5IKabsd($11378));
                    $11380 = $11379 < 9.9999999999999995E-7;
                    if ($11380) {
                     label = 1520;
                     break L88;
                    }
                   }
                  } while(0);
                  $11387 = $iij3185;
                  $11388 = (($11387) + 1)|0;
                  $iij3185 = $11388;
                 }
                 if ((label|0) == 1520) {
                  label = 0;
                  $11381 = $iij3185;
                  $11382 = (($j3valid183) + ($11381)|0);
                  HEAP8[$11382>>0] = 0;
                  $11383 = $iij3185;
                  $11384 = $11383&255;
                  $11385 = (($4) + 545|0);
                  $11386 = (($11385) + 1|0);
                  HEAP8[$11386>>0] = $11384;
                 }
                 $11389 = $ij3184;
                 $11390 = (($j3array180) + ($11389<<3)|0);
                 $11391 = +HEAPF64[$11390>>3];
                 $11392 = (($4) + 120|0);
                 HEAPF64[$11392>>3] = $11391;
                 $11393 = $ij3184;
                 $11394 = (($cj3array181) + ($11393<<3)|0);
                 $11395 = +HEAPF64[$11394>>3];
                 $11396 = (($4) + 128|0);
                 HEAPF64[$11396>>3] = $11395;
                 $11397 = $ij3184;
                 $11398 = (($sj3array182) + ($11397<<3)|0);
                 $11399 = +HEAPF64[$11398>>3];
                 $11400 = (($4) + 136|0);
                 HEAPF64[$11400>>3] = $11399;
                 $11401 = (($4) + 120|0);
                 $11402 = +HEAPF64[$11401>>3];
                 $11403 = (+__Z5IKsind($11402));
                 $x374 = $11403;
                 $11404 = (($4) + 120|0);
                 $11405 = +HEAPF64[$11404>>3];
                 $11406 = (+__Z5IKcosd($11405));
                 $x375 = $11406;
                 $11407 = (($4) + 208|0);
                 $11408 = +HEAPF64[$11407>>3];
                 $11409 = 1.0 * $11408;
                 $x376 = $11409;
                 $11410 = (($4) + 168|0);
                 $11411 = +HEAPF64[$11410>>3];
                 $11412 = 1.0 * $11411;
                 $x377 = $11412;
                 $11413 = (($4) + 176|0);
                 $11414 = +HEAPF64[$11413>>3];
                 $11415 = 1.0 * $11414;
                 $x378 = $11415;
                 $11416 = (($4) + 336|0);
                 $11417 = +HEAPF64[$11416>>3];
                 $11418 = $x375;
                 $11419 = $11417 * $11418;
                 $x379 = $11419;
                 $11420 = (($4) + 216|0);
                 $11421 = +HEAPF64[$11420>>3];
                 $11422 = $x375;
                 $11423 = $11421 * $11422;
                 $x380 = $11423;
                 $11424 = (($4) + 168|0);
                 $11425 = +HEAPF64[$11424>>3];
                 $11426 = $x375;
                 $11427 = $11425 * $11426;
                 $x381 = $11427;
                 $11428 = (($4) + 176|0);
                 $11429 = +HEAPF64[$11428>>3];
                 $11430 = $x375;
                 $11431 = $11429 * $11430;
                 $x382 = $11431;
                 $11432 = (($4) + 168|0);
                 $11433 = +HEAPF64[$11432>>3];
                 $11434 = $x374;
                 $11435 = $11433 * $11434;
                 $x383 = $11435;
                 $11436 = $x374;
                 $11437 = 1.0 * $11436;
                 $x384 = $11437;
                 $11438 = $x374;
                 $11439 = $x378;
                 $11440 = $11438 * $11439;
                 $x385 = $11440;
                 $11441 = $x382;
                 $11442 = (($4) + 360|0);
                 $11443 = +HEAPF64[$11442>>3];
                 $11444 = $11441 + $11443;
                 HEAPF64[$evalcond186>>3] = $11444;
                 $11445 = $x385;
                 $11446 = -1.0 * $11445;
                 $11447 = (($4) + 288|0);
                 $11448 = +HEAPF64[$11447>>3];
                 $11449 = $11446 + $11448;
                 $11450 = (($evalcond186) + 8|0);
                 HEAPF64[$11450>>3] = $11449;
                 $11451 = (($4) + 360|0);
                 $11452 = +HEAPF64[$11451>>3];
                 $11453 = $x374;
                 $11454 = $11452 * $11453;
                 $11455 = (($4) + 288|0);
                 $11456 = +HEAPF64[$11455>>3];
                 $11457 = $x375;
                 $11458 = $11456 * $11457;
                 $11459 = $11454 + $11458;
                 $11460 = (($evalcond186) + 16|0);
                 HEAPF64[$11460>>3] = $11459;
                 $11461 = (($4) + 216|0);
                 $11462 = +HEAPF64[$11461>>3];
                 $11463 = (($4) + 264|0);
                 $11464 = +HEAPF64[$11463>>3];
                 $11465 = $x375;
                 $11466 = $11464 * $11465;
                 $11467 = $11462 + $11466;
                 $11468 = (($4) + 336|0);
                 $11469 = +HEAPF64[$11468>>3];
                 $11470 = $x374;
                 $11471 = $11469 * $11470;
                 $11472 = $11467 + $11471;
                 $11473 = (($evalcond186) + 24|0);
                 HEAPF64[$11473>>3] = $11472;
                 $11474 = (($4) + 360|0);
                 $11475 = +HEAPF64[$11474>>3];
                 $11476 = $x375;
                 $11477 = $11475 * $11476;
                 $11478 = (($4) + 176|0);
                 $11479 = +HEAPF64[$11478>>3];
                 $11480 = $11477 + $11479;
                 $11481 = (($4) + 288|0);
                 $11482 = +HEAPF64[$11481>>3];
                 $11483 = -1.0 * $11482;
                 $11484 = $x384;
                 $11485 = $11483 * $11484;
                 $11486 = $11480 + $11485;
                 $11487 = (($evalcond186) + 32|0);
                 HEAPF64[$11487>>3] = $11486;
                 $11488 = $x380;
                 $11489 = (($4) + 208|0);
                 $11490 = +HEAPF64[$11489>>3];
                 $11491 = $x383;
                 $11492 = $11490 * $11491;
                 $11493 = $11488 + $11492;
                 $11494 = (($4) + 264|0);
                 $11495 = +HEAPF64[$11494>>3];
                 $11496 = $11493 + $11495;
                 $11497 = (($evalcond186) + 40|0);
                 HEAPF64[$11497>>3] = $11496;
                 $11498 = $x376;
                 $11499 = -1.0 * $11498;
                 $11500 = (($4) + 240|0);
                 $11501 = +HEAPF64[$11500>>3];
                 $11502 = $x375;
                 $11503 = $11501 * $11502;
                 $11504 = $11499 + $11503;
                 $11505 = (($4) + 312|0);
                 $11506 = +HEAPF64[$11505>>3];
                 $11507 = $x374;
                 $11508 = $11506 * $11507;
                 $11509 = $11504 + $11508;
                 $11510 = (($evalcond186) + 48|0);
                 HEAPF64[$11510>>3] = $11509;
                 $11511 = (($4) + 216|0);
                 $11512 = +HEAPF64[$11511>>3];
                 $11513 = $x383;
                 $11514 = $11512 * $11513;
                 $11515 = (($4) + 240|0);
                 $11516 = +HEAPF64[$11515>>3];
                 $11517 = $11514 + $11516;
                 $11518 = $x375;
                 $11519 = -1.0 * $11518;
                 $11520 = $x376;
                 $11521 = $11519 * $11520;
                 $11522 = $11517 + $11521;
                 $11523 = (($evalcond186) + 56|0);
                 HEAPF64[$11523>>3] = $11522;
                 $11524 = $x376;
                 $11525 = -1.0 * $11524;
                 $11526 = $x381;
                 $11527 = $11525 * $11526;
                 $11528 = (($4) + 216|0);
                 $11529 = +HEAPF64[$11528>>3];
                 $11530 = $x374;
                 $11531 = $11529 * $11530;
                 $11532 = $11527 + $11531;
                 $11533 = (($4) + 336|0);
                 $11534 = +HEAPF64[$11533>>3];
                 $11535 = $11532 + $11534;
                 $11536 = (($evalcond186) + 64|0);
                 HEAPF64[$11536>>3] = $11535;
                 $11537 = $x374;
                 $11538 = -1.0 * $11537;
                 $11539 = $x376;
                 $11540 = $11538 * $11539;
                 $11541 = (($4) + 312|0);
                 $11542 = +HEAPF64[$11541>>3];
                 $11543 = $11540 + $11542;
                 $11544 = $x377;
                 $11545 = -1.0 * $11544;
                 $11546 = $x380;
                 $11547 = $11545 * $11546;
                 $11548 = $11543 + $11547;
                 $11549 = (($evalcond186) + 72|0);
                 HEAPF64[$11549>>3] = $11548;
                 $11550 = (($4) + 240|0);
                 $11551 = +HEAPF64[$11550>>3];
                 $11552 = -1.0 * $11551;
                 $11553 = $x384;
                 $11554 = $11552 * $11553;
                 $11555 = (($4) + 216|0);
                 $11556 = +HEAPF64[$11555>>3];
                 $11557 = -1.0 * $11556;
                 $11558 = $x377;
                 $11559 = $11557 * $11558;
                 $11560 = $11554 + $11559;
                 $11561 = (($4) + 312|0);
                 $11562 = +HEAPF64[$11561>>3];
                 $11563 = $x375;
                 $11564 = $11562 * $11563;
                 $11565 = $11560 + $11564;
                 $11566 = (($evalcond186) + 80|0);
                 HEAPF64[$11566>>3] = $11565;
                 $11567 = (($4) + 168|0);
                 $11568 = +HEAPF64[$11567>>3];
                 $11569 = -1.0 * $11568;
                 $11570 = $x376;
                 $11571 = $11569 * $11570;
                 $11572 = (($4) + 264|0);
                 $11573 = +HEAPF64[$11572>>3];
                 $11574 = -1.0 * $11573;
                 $11575 = $x384;
                 $11576 = $11574 * $11575;
                 $11577 = $11571 + $11576;
                 $11578 = $x379;
                 $11579 = $11577 + $11578;
                 $11580 = (($evalcond186) + 88|0);
                 HEAPF64[$11580>>3] = $11579;
                 $11581 = (($4) + 360|0);
                 $11582 = +HEAPF64[$11581>>3];
                 $11583 = -1.0 * $11582;
                 $11584 = $x375;
                 $11585 = $11583 * $11584;
                 $11586 = $x377;
                 $11587 = $11585 * $11586;
                 $11588 = (($4) + 288|0);
                 $11589 = +HEAPF64[$11588>>3];
                 $11590 = $x383;
                 $11591 = $11589 * $11590;
                 $11592 = $11587 + $11591;
                 $11593 = (($4) + 432|0);
                 $11594 = +HEAPF64[$11593>>3];
                 $11595 = -1.0 * $11594;
                 $11596 = $x378;
                 $11597 = $11595 * $11596;
                 $11598 = $11592 + $11597;
                 $11599 = (($evalcond186) + 96|0);
                 HEAPF64[$11599>>3] = $11598;
                 $11600 = (($4) + 384|0);
                 $11601 = +HEAPF64[$11600>>3];
                 $11602 = -1.0 * $11601;
                 $11603 = $x377;
                 $11604 = $11602 * $11603;
                 $11605 = (($4) + 240|0);
                 $11606 = +HEAPF64[$11605>>3];
                 $11607 = -1.0 * $11606;
                 $11608 = $x385;
                 $11609 = $11607 * $11608;
                 $11610 = $11604 + $11609;
                 $11611 = (($4) + 312|0);
                 $11612 = +HEAPF64[$11611>>3];
                 $11613 = $x382;
                 $11614 = $11612 * $11613;
                 $11615 = $11610 + $11614;
                 $11616 = (($evalcond186) + 104|0);
                 HEAPF64[$11616>>3] = $11615;
                 $11617 = (($4) + 408|0);
                 $11618 = +HEAPF64[$11617>>3];
                 $11619 = -1.0 * $11618;
                 $11620 = $x377;
                 $11621 = $11619 * $11620;
                 $11622 = (($4) + 176|0);
                 $11623 = +HEAPF64[$11622>>3];
                 $11624 = $x379;
                 $11625 = $11623 * $11624;
                 $11626 = $11621 + $11625;
                 $11627 = (($4) + 264|0);
                 $11628 = +HEAPF64[$11627>>3];
                 $11629 = -1.0 * $11628;
                 $11630 = $x385;
                 $11631 = $11629 * $11630;
                 $11632 = $11626 + $11631;
                 $11633 = (($evalcond186) + 112|0);
                 HEAPF64[$11633>>3] = $11632;
                 $11634 = (($4) + 432|0);
                 $11635 = +HEAPF64[$11634>>3];
                 $11636 = -1.0 * $11635;
                 $11637 = $x377;
                 $11638 = $11636 * $11637;
                 $11639 = 1.0 + $11638;
                 $11640 = (($4) + 360|0);
                 $11641 = +HEAPF64[$11640>>3];
                 $11642 = $x382;
                 $11643 = $11641 * $11642;
                 $11644 = $11639 + $11643;
                 $11645 = (($4) + 288|0);
                 $11646 = +HEAPF64[$11645>>3];
                 $11647 = -1.0 * $11646;
                 $11648 = $x385;
                 $11649 = $11647 * $11648;
                 $11650 = $11644 + $11649;
                 $11651 = (($evalcond186) + 120|0);
                 HEAPF64[$11651>>3] = $11650;
                 $11652 = (($4) + 384|0);
                 $11653 = +HEAPF64[$11652>>3];
                 $11654 = -1.0 * $11653;
                 $11655 = $x378;
                 $11656 = $11654 * $11655;
                 $11657 = (($4) + 216|0);
                 $11658 = +HEAPF64[$11657>>3];
                 $11659 = $11656 + $11658;
                 $11660 = (($4) + 240|0);
                 $11661 = +HEAPF64[$11660>>3];
                 $11662 = $x383;
                 $11663 = $11661 * $11662;
                 $11664 = $11659 + $11663;
                 $11665 = (($4) + 312|0);
                 $11666 = +HEAPF64[$11665>>3];
                 $11667 = -1.0 * $11666;
                 $11668 = $x375;
                 $11669 = $11667 * $11668;
                 $11670 = $x377;
                 $11671 = $11669 * $11670;
                 $11672 = $11664 + $11671;
                 $11673 = (($evalcond186) + 128|0);
                 HEAPF64[$11673>>3] = $11672;
                 $11674 = (($4) + 408|0);
                 $11675 = +HEAPF64[$11674>>3];
                 $11676 = -1.0 * $11675;
                 $11677 = $x378;
                 $11678 = $11676 * $11677;
                 $11679 = (($4) + 208|0);
                 $11680 = +HEAPF64[$11679>>3];
                 $11681 = $11678 + $11680;
                 $11682 = (($4) + 264|0);
                 $11683 = +HEAPF64[$11682>>3];
                 $11684 = $x383;
                 $11685 = $11683 * $11684;
                 $11686 = $11681 + $11685;
                 $11687 = $x377;
                 $11688 = -1.0 * $11687;
                 $11689 = $x379;
                 $11690 = $11688 * $11689;
                 $11691 = $11686 + $11690;
                 $11692 = (($evalcond186) + 136|0);
                 HEAPF64[$11692>>3] = $11691;
                 $11693 = +HEAPF64[$evalcond186>>3];
                 $11694 = (+__Z5IKabsd($11693));
                 $11695 = $11694 > 5.0000000000000004E-6;
                 do {
                  if (!($11695)) {
                   $11696 = (($evalcond186) + 8|0);
                   $11697 = +HEAPF64[$11696>>3];
                   $11698 = (+__Z5IKabsd($11697));
                   $11699 = $11698 > 5.0000000000000004E-6;
                   if ($11699) {
                    break;
                   }
                   $11700 = (($evalcond186) + 16|0);
                   $11701 = +HEAPF64[$11700>>3];
                   $11702 = (+__Z5IKabsd($11701));
                   $11703 = $11702 > 5.0000000000000004E-6;
                   if ($11703) {
                    break;
                   }
                   $11704 = (($evalcond186) + 24|0);
                   $11705 = +HEAPF64[$11704>>3];
                   $11706 = (+__Z5IKabsd($11705));
                   $11707 = $11706 > 5.0000000000000004E-6;
                   if ($11707) {
                    break;
                   }
                   $11708 = (($evalcond186) + 32|0);
                   $11709 = +HEAPF64[$11708>>3];
                   $11710 = (+__Z5IKabsd($11709));
                   $11711 = $11710 > 5.0000000000000004E-6;
                   if ($11711) {
                    break;
                   }
                   $11712 = (($evalcond186) + 40|0);
                   $11713 = +HEAPF64[$11712>>3];
                   $11714 = (+__Z5IKabsd($11713));
                   $11715 = $11714 > 5.0000000000000004E-6;
                   if ($11715) {
                    break;
                   }
                   $11716 = (($evalcond186) + 48|0);
                   $11717 = +HEAPF64[$11716>>3];
                   $11718 = (+__Z5IKabsd($11717));
                   $11719 = $11718 > 5.0000000000000004E-6;
                   if ($11719) {
                    break;
                   }
                   $11720 = (($evalcond186) + 56|0);
                   $11721 = +HEAPF64[$11720>>3];
                   $11722 = (+__Z5IKabsd($11721));
                   $11723 = $11722 > 5.0000000000000004E-6;
                   if ($11723) {
                    break;
                   }
                   $11724 = (($evalcond186) + 64|0);
                   $11725 = +HEAPF64[$11724>>3];
                   $11726 = (+__Z5IKabsd($11725));
                   $11727 = $11726 > 5.0000000000000004E-6;
                   if ($11727) {
                    break;
                   }
                   $11728 = (($evalcond186) + 72|0);
                   $11729 = +HEAPF64[$11728>>3];
                   $11730 = (+__Z5IKabsd($11729));
                   $11731 = $11730 > 5.0000000000000004E-6;
                   if ($11731) {
                    break;
                   }
                   $11732 = (($evalcond186) + 80|0);
                   $11733 = +HEAPF64[$11732>>3];
                   $11734 = (+__Z5IKabsd($11733));
                   $11735 = $11734 > 5.0000000000000004E-6;
                   if ($11735) {
                    break;
                   }
                   $11736 = (($evalcond186) + 88|0);
                   $11737 = +HEAPF64[$11736>>3];
                   $11738 = (+__Z5IKabsd($11737));
                   $11739 = $11738 > 5.0000000000000004E-6;
                   if ($11739) {
                    break;
                   }
                   $11740 = (($evalcond186) + 96|0);
                   $11741 = +HEAPF64[$11740>>3];
                   $11742 = (+__Z5IKabsd($11741));
                   $11743 = $11742 > 5.0000000000000004E-6;
                   if ($11743) {
                    break;
                   }
                   $11744 = (($evalcond186) + 104|0);
                   $11745 = +HEAPF64[$11744>>3];
                   $11746 = (+__Z5IKabsd($11745));
                   $11747 = $11746 > 5.0000000000000004E-6;
                   if ($11747) {
                    break;
                   }
                   $11748 = (($evalcond186) + 112|0);
                   $11749 = +HEAPF64[$11748>>3];
                   $11750 = (+__Z5IKabsd($11749));
                   $11751 = $11750 > 5.0000000000000004E-6;
                   if ($11751) {
                    break;
                   }
                   $11752 = (($evalcond186) + 120|0);
                   $11753 = +HEAPF64[$11752>>3];
                   $11754 = (+__Z5IKabsd($11753));
                   $11755 = $11754 > 5.0000000000000004E-6;
                   if ($11755) {
                    break;
                   }
                   $11756 = (($evalcond186) + 128|0);
                   $11757 = +HEAPF64[$11756>>3];
                   $11758 = (+__Z5IKabsd($11757));
                   $11759 = $11758 > 5.0000000000000004E-6;
                   if ($11759) {
                    break;
                   }
                   $11760 = (($evalcond186) + 136|0);
                   $11761 = +HEAPF64[$11760>>3];
                   $11762 = (+__Z5IKabsd($11761));
                   $11763 = $11762 > 5.0000000000000004E-6;
                   if ($11763) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos187,6);
                   __THREW__ = 0;
                   $11764 = (invoke_iii(381,($vinfos187|0),0)|0);
                   $11765 = __THREW__; __THREW__ = 0;
                   $11766 = $11765&1;
                   if ($11766) {
                    label = 1577;
                    break L1;
                   }
                   $11767 = (($11764) + 17|0);
                   HEAP8[$11767>>0] = 1;
                   $11768 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $11769 = (invoke_iii(381,($vinfos187|0),0)|0);
                   $11770 = __THREW__; __THREW__ = 0;
                   $11771 = $11770&1;
                   if ($11771) {
                    label = 1577;
                    break L1;
                   }
                   $11772 = (($11769) + 8|0);
                   HEAPF64[$11772>>3] = $11768;
                   $11773 = (($4) + 536|0);
                   $11774 = HEAP8[$11773>>0]|0;
                   __THREW__ = 0;
                   $11775 = (invoke_iii(381,($vinfos187|0),0)|0);
                   $11776 = __THREW__; __THREW__ = 0;
                   $11777 = $11776&1;
                   if ($11777) {
                    label = 1577;
                    break L1;
                   }
                   $11778 = (($11775) + 19|0);
                   HEAP8[$11778>>0] = $11774;
                   $11779 = (($4) + 536|0);
                   $11780 = (($11779) + 1|0);
                   $11781 = HEAP8[$11780>>0]|0;
                   __THREW__ = 0;
                   $11782 = (invoke_iii(381,($vinfos187|0),0)|0);
                   $11783 = __THREW__; __THREW__ = 0;
                   $11784 = $11783&1;
                   if ($11784) {
                    label = 1577;
                    break L1;
                   }
                   $11785 = (($11782) + 19|0);
                   $11786 = (($11785) + 1|0);
                   HEAP8[$11786>>0] = $11781;
                   $11787 = (($4) + 538|0);
                   $11788 = HEAP8[$11787>>0]|0;
                   __THREW__ = 0;
                   $11789 = (invoke_iii(381,($vinfos187|0),0)|0);
                   $11790 = __THREW__; __THREW__ = 0;
                   $11791 = $11790&1;
                   if ($11791) {
                    label = 1577;
                    break L1;
                   }
                   $11792 = (($11789) + 18|0);
                   HEAP8[$11792>>0] = $11788;
                   __THREW__ = 0;
                   $11793 = (invoke_iii(381,($vinfos187|0),1)|0);
                   $11794 = __THREW__; __THREW__ = 0;
                   $11795 = $11794&1;
                   if ($11795) {
                    label = 1577;
                    break L1;
                   }
                   $11796 = (($11793) + 17|0);
                   HEAP8[$11796>>0] = 1;
                   $11797 = (($4) + 40|0);
                   $11798 = +HEAPF64[$11797>>3];
                   __THREW__ = 0;
                   $11799 = (invoke_iii(381,($vinfos187|0),1)|0);
                   $11800 = __THREW__; __THREW__ = 0;
                   $11801 = $11800&1;
                   if ($11801) {
                    label = 1577;
                    break L1;
                   }
                   $11802 = (($11799) + 8|0);
                   HEAPF64[$11802>>3] = $11798;
                   $11803 = (($4) + 539|0);
                   $11804 = HEAP8[$11803>>0]|0;
                   __THREW__ = 0;
                   $11805 = (invoke_iii(381,($vinfos187|0),1)|0);
                   $11806 = __THREW__; __THREW__ = 0;
                   $11807 = $11806&1;
                   if ($11807) {
                    label = 1577;
                    break L1;
                   }
                   $11808 = (($11805) + 19|0);
                   HEAP8[$11808>>0] = $11804;
                   $11809 = (($4) + 539|0);
                   $11810 = (($11809) + 1|0);
                   $11811 = HEAP8[$11810>>0]|0;
                   __THREW__ = 0;
                   $11812 = (invoke_iii(381,($vinfos187|0),1)|0);
                   $11813 = __THREW__; __THREW__ = 0;
                   $11814 = $11813&1;
                   if ($11814) {
                    label = 1577;
                    break L1;
                   }
                   $11815 = (($11812) + 19|0);
                   $11816 = (($11815) + 1|0);
                   HEAP8[$11816>>0] = $11811;
                   $11817 = (($4) + 541|0);
                   $11818 = HEAP8[$11817>>0]|0;
                   __THREW__ = 0;
                   $11819 = (invoke_iii(381,($vinfos187|0),1)|0);
                   $11820 = __THREW__; __THREW__ = 0;
                   $11821 = $11820&1;
                   if ($11821) {
                    label = 1577;
                    break L1;
                   }
                   $11822 = (($11819) + 18|0);
                   HEAP8[$11822>>0] = $11818;
                   __THREW__ = 0;
                   $11823 = (invoke_iii(381,($vinfos187|0),2)|0);
                   $11824 = __THREW__; __THREW__ = 0;
                   $11825 = $11824&1;
                   if ($11825) {
                    label = 1577;
                    break L1;
                   }
                   $11826 = (($11823) + 17|0);
                   HEAP8[$11826>>0] = 1;
                   $11827 = (($4) + 80|0);
                   $11828 = +HEAPF64[$11827>>3];
                   __THREW__ = 0;
                   $11829 = (invoke_iii(381,($vinfos187|0),2)|0);
                   $11830 = __THREW__; __THREW__ = 0;
                   $11831 = $11830&1;
                   if ($11831) {
                    label = 1577;
                    break L1;
                   }
                   $11832 = (($11829) + 8|0);
                   HEAPF64[$11832>>3] = $11828;
                   $11833 = (($4) + 542|0);
                   $11834 = HEAP8[$11833>>0]|0;
                   __THREW__ = 0;
                   $11835 = (invoke_iii(381,($vinfos187|0),2)|0);
                   $11836 = __THREW__; __THREW__ = 0;
                   $11837 = $11836&1;
                   if ($11837) {
                    label = 1577;
                    break L1;
                   }
                   $11838 = (($11835) + 19|0);
                   HEAP8[$11838>>0] = $11834;
                   $11839 = (($4) + 542|0);
                   $11840 = (($11839) + 1|0);
                   $11841 = HEAP8[$11840>>0]|0;
                   __THREW__ = 0;
                   $11842 = (invoke_iii(381,($vinfos187|0),2)|0);
                   $11843 = __THREW__; __THREW__ = 0;
                   $11844 = $11843&1;
                   if ($11844) {
                    label = 1577;
                    break L1;
                   }
                   $11845 = (($11842) + 19|0);
                   $11846 = (($11845) + 1|0);
                   HEAP8[$11846>>0] = $11841;
                   $11847 = (($4) + 544|0);
                   $11848 = HEAP8[$11847>>0]|0;
                   __THREW__ = 0;
                   $11849 = (invoke_iii(381,($vinfos187|0),2)|0);
                   $11850 = __THREW__; __THREW__ = 0;
                   $11851 = $11850&1;
                   if ($11851) {
                    label = 1577;
                    break L1;
                   }
                   $11852 = (($11849) + 18|0);
                   HEAP8[$11852>>0] = $11848;
                   __THREW__ = 0;
                   $11853 = (invoke_iii(381,($vinfos187|0),3)|0);
                   $11854 = __THREW__; __THREW__ = 0;
                   $11855 = $11854&1;
                   if ($11855) {
                    label = 1577;
                    break L1;
                   }
                   $11856 = (($11853) + 17|0);
                   HEAP8[$11856>>0] = 1;
                   $11857 = (($4) + 120|0);
                   $11858 = +HEAPF64[$11857>>3];
                   __THREW__ = 0;
                   $11859 = (invoke_iii(381,($vinfos187|0),3)|0);
                   $11860 = __THREW__; __THREW__ = 0;
                   $11861 = $11860&1;
                   if ($11861) {
                    label = 1577;
                    break L1;
                   }
                   $11862 = (($11859) + 8|0);
                   HEAPF64[$11862>>3] = $11858;
                   $11863 = (($4) + 545|0);
                   $11864 = HEAP8[$11863>>0]|0;
                   __THREW__ = 0;
                   $11865 = (invoke_iii(381,($vinfos187|0),3)|0);
                   $11866 = __THREW__; __THREW__ = 0;
                   $11867 = $11866&1;
                   if ($11867) {
                    label = 1577;
                    break L1;
                   }
                   $11868 = (($11865) + 19|0);
                   HEAP8[$11868>>0] = $11864;
                   $11869 = (($4) + 545|0);
                   $11870 = (($11869) + 1|0);
                   $11871 = HEAP8[$11870>>0]|0;
                   __THREW__ = 0;
                   $11872 = (invoke_iii(381,($vinfos187|0),3)|0);
                   $11873 = __THREW__; __THREW__ = 0;
                   $11874 = $11873&1;
                   if ($11874) {
                    label = 1577;
                    break L1;
                   }
                   $11875 = (($11872) + 19|0);
                   $11876 = (($11875) + 1|0);
                   HEAP8[$11876>>0] = $11871;
                   $11877 = (($4) + 547|0);
                   $11878 = HEAP8[$11877>>0]|0;
                   __THREW__ = 0;
                   $11879 = (invoke_iii(381,($vinfos187|0),3)|0);
                   $11880 = __THREW__; __THREW__ = 0;
                   $11881 = $11880&1;
                   if ($11881) {
                    label = 1577;
                    break L1;
                   }
                   $11882 = (($11879) + 18|0);
                   HEAP8[$11882>>0] = $11878;
                   __THREW__ = 0;
                   $11883 = (invoke_iii(381,($vinfos187|0),4)|0);
                   $11884 = __THREW__; __THREW__ = 0;
                   $11885 = $11884&1;
                   if ($11885) {
                    label = 1577;
                    break L1;
                   }
                   $11886 = (($11883) + 17|0);
                   HEAP8[$11886>>0] = 1;
                   $11887 = (($4) + 160|0);
                   $11888 = +HEAPF64[$11887>>3];
                   __THREW__ = 0;
                   $11889 = (invoke_iii(381,($vinfos187|0),4)|0);
                   $11890 = __THREW__; __THREW__ = 0;
                   $11891 = $11890&1;
                   if ($11891) {
                    label = 1577;
                    break L1;
                   }
                   $11892 = (($11889) + 8|0);
                   HEAPF64[$11892>>3] = $11888;
                   $11893 = (($4) + 548|0);
                   $11894 = HEAP8[$11893>>0]|0;
                   __THREW__ = 0;
                   $11895 = (invoke_iii(381,($vinfos187|0),4)|0);
                   $11896 = __THREW__; __THREW__ = 0;
                   $11897 = $11896&1;
                   if ($11897) {
                    label = 1577;
                    break L1;
                   }
                   $11898 = (($11895) + 19|0);
                   HEAP8[$11898>>0] = $11894;
                   $11899 = (($4) + 548|0);
                   $11900 = (($11899) + 1|0);
                   $11901 = HEAP8[$11900>>0]|0;
                   __THREW__ = 0;
                   $11902 = (invoke_iii(381,($vinfos187|0),4)|0);
                   $11903 = __THREW__; __THREW__ = 0;
                   $11904 = $11903&1;
                   if ($11904) {
                    label = 1577;
                    break L1;
                   }
                   $11905 = (($11902) + 19|0);
                   $11906 = (($11905) + 1|0);
                   HEAP8[$11906>>0] = $11901;
                   $11907 = (($4) + 550|0);
                   $11908 = HEAP8[$11907>>0]|0;
                   __THREW__ = 0;
                   $11909 = (invoke_iii(381,($vinfos187|0),4)|0);
                   $11910 = __THREW__; __THREW__ = 0;
                   $11911 = $11910&1;
                   if ($11911) {
                    label = 1577;
                    break L1;
                   }
                   $11912 = (($11909) + 18|0);
                   HEAP8[$11912>>0] = $11908;
                   __THREW__ = 0;
                   $11913 = (invoke_iii(381,($vinfos187|0),5)|0);
                   $11914 = __THREW__; __THREW__ = 0;
                   $11915 = $11914&1;
                   if ($11915) {
                    label = 1577;
                    break L1;
                   }
                   $11916 = (($11913) + 17|0);
                   HEAP8[$11916>>0] = 1;
                   $11917 = (($4) + 200|0);
                   $11918 = +HEAPF64[$11917>>3];
                   __THREW__ = 0;
                   $11919 = (invoke_iii(381,($vinfos187|0),5)|0);
                   $11920 = __THREW__; __THREW__ = 0;
                   $11921 = $11920&1;
                   if ($11921) {
                    label = 1577;
                    break L1;
                   }
                   $11922 = (($11919) + 8|0);
                   HEAPF64[$11922>>3] = $11918;
                   $11923 = (($4) + 551|0);
                   $11924 = HEAP8[$11923>>0]|0;
                   __THREW__ = 0;
                   $11925 = (invoke_iii(381,($vinfos187|0),5)|0);
                   $11926 = __THREW__; __THREW__ = 0;
                   $11927 = $11926&1;
                   if ($11927) {
                    label = 1577;
                    break L1;
                   }
                   $11928 = (($11925) + 19|0);
                   HEAP8[$11928>>0] = $11924;
                   $11929 = (($4) + 551|0);
                   $11930 = (($11929) + 1|0);
                   $11931 = HEAP8[$11930>>0]|0;
                   __THREW__ = 0;
                   $11932 = (invoke_iii(381,($vinfos187|0),5)|0);
                   $11933 = __THREW__; __THREW__ = 0;
                   $11934 = $11933&1;
                   if ($11934) {
                    label = 1577;
                    break L1;
                   }
                   $11935 = (($11932) + 19|0);
                   $11936 = (($11935) + 1|0);
                   HEAP8[$11936>>0] = $11931;
                   $11937 = (($4) + 553|0);
                   $11938 = HEAP8[$11937>>0]|0;
                   __THREW__ = 0;
                   $11939 = (invoke_iii(381,($vinfos187|0),5)|0);
                   $11940 = __THREW__; __THREW__ = 0;
                   $11941 = $11940&1;
                   if ($11941) {
                    label = 1577;
                    break L1;
                   }
                   $11942 = (($11939) + 18|0);
                   HEAP8[$11942>>0] = $11938;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree188|0),0);
                   $11943 = __THREW__; __THREW__ = 0;
                   $11944 = $11943&1;
                   if ($11944) {
                    label = 1577;
                    break L1;
                   }
                   $11945 = $1;
                   $11946 = HEAP32[$11945>>2]|0;
                   $11947 = (($11946) + 8|0);
                   $11948 = HEAP32[$11947>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($11948|0,($11945|0),($vinfos187|0),($vfree188|0))|0);
                   $11949 = __THREW__; __THREW__ = 0;
                   $11950 = $11949&1;
                   if ($11950) {
                    label = 1578;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree188|0));
                   $11951 = __THREW__; __THREW__ = 0;
                   $11952 = $11951&1;
                   if ($11952) {
                    label = 1577;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos187);
                   break L85;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $11953 = $ij3184;
               $11954 = (($11953) + 1)|0;
               $ij3184 = $11954;
              }
             }
            } while(0);
            if ((label|0) == 1244) {
             label = 0;
             $9363 = (($4) + 8|0);
             $9364 = +HEAPF64[$9363>>3];
             $9365 = 1.0 * $9364;
             $x324 = $9365;
             $9366 = (($4) + 344|0);
             $9367 = +HEAPF64[$9366>>3];
             $9368 = (($4) + 16|0);
             $9369 = +HEAPF64[$9368>>3];
             $9370 = $9367 * $9369;
             $x325 = $9370;
             $9371 = (($4) + 56|0);
             $9372 = +HEAPF64[$9371>>3];
             $9373 = (($4) + 96|0);
             $9374 = +HEAPF64[$9373>>3];
             $9375 = $9372 * $9374;
             $x326 = $9375;
             $9376 = (($4) + 320|0);
             $9377 = +HEAPF64[$9376>>3];
             $9378 = (($4) + 16|0);
             $9379 = +HEAPF64[$9378>>3];
             $9380 = $9377 * $9379;
             $x327 = $9380;
             $9381 = (($4) + 8|0);
             $9382 = +HEAPF64[$9381>>3];
             $9383 = (($4) + 248|0);
             $9384 = +HEAPF64[$9383>>3];
             $9385 = $9382 * $9384;
             $x328 = $9385;
             $9386 = (($4) + 48|0);
             $9387 = +HEAPF64[$9386>>3];
             $9388 = (($4) + 88|0);
             $9389 = +HEAPF64[$9388>>3];
             $9390 = $9387 * $9389;
             $x329 = $9390;
             $9391 = (($4) + 8|0);
             $9392 = +HEAPF64[$9391>>3];
             $9393 = (($4) + 272|0);
             $9394 = +HEAPF64[$9393>>3];
             $9395 = $9392 * $9394;
             $x330 = $9395;
             $9396 = (($4) + 368|0);
             $9397 = +HEAPF64[$9396>>3];
             $9398 = (($4) + 16|0);
             $9399 = +HEAPF64[$9398>>3];
             $9400 = $9397 * $9399;
             $x331 = $9400;
             $9401 = (($4) + 8|0);
             $9402 = +HEAPF64[$9401>>3];
             $9403 = (($4) + 296|0);
             $9404 = +HEAPF64[$9403>>3];
             $9405 = $9402 * $9404;
             $x332 = $9405;
             $9406 = $x326;
             $9407 = -1.0 * $9406;
             $9408 = $x329;
             $9409 = $9407 + $9408;
             $x333 = $9409;
             $9410 = $x329;
             $9411 = -1.0 * $9410;
             $9412 = $x326;
             $9413 = $9411 + $9412;
             $x334 = $9413;
             $9414 = (($4) + 16|0);
             $9415 = +HEAPF64[$9414>>3];
             $9416 = $x334;
             $9417 = $9415 * $9416;
             $x335 = $9417;
             $9418 = $x98;
             $x336 = $9418;
             $9419 = (($4) + 8|0);
             $9420 = +HEAPF64[$9419>>3];
             $9421 = $x336;
             $9422 = $9420 * $9421;
             $x337 = $9422;
             $9423 = (($4) + 248|0);
             $9424 = +HEAPF64[$9423>>3];
             $9425 = (($4) + 16|0);
             $9426 = +HEAPF64[$9425>>3];
             $9427 = $9424 * $9426;
             $9428 = (($4) + 320|0);
             $9429 = +HEAPF64[$9428>>3];
             $9430 = -1.0 * $9429;
             $9431 = $x324;
             $9432 = $9430 * $9431;
             $9433 = $9427 + $9432;
             $9434 = (($4) + 240|0);
             HEAPF64[$9434>>3] = $9433;
             $9435 = (($4) + 272|0);
             $9436 = +HEAPF64[$9435>>3];
             $9437 = (($4) + 16|0);
             $9438 = +HEAPF64[$9437>>3];
             $9439 = $9436 * $9438;
             $9440 = (($4) + 344|0);
             $9441 = +HEAPF64[$9440>>3];
             $9442 = -1.0 * $9441;
             $9443 = $x324;
             $9444 = $9442 * $9443;
             $9445 = $9439 + $9444;
             $9446 = (($4) + 264|0);
             HEAPF64[$9446>>3] = $9445;
             $9447 = (($4) + 368|0);
             $9448 = +HEAPF64[$9447>>3];
             $9449 = -1.0 * $9448;
             $9450 = $x324;
             $9451 = $9449 * $9450;
             $9452 = (($4) + 296|0);
             $9453 = +HEAPF64[$9452>>3];
             $9454 = (($4) + 16|0);
             $9455 = +HEAPF64[$9454>>3];
             $9456 = $9453 * $9455;
             $9457 = $9451 + $9456;
             $9458 = (($4) + 288|0);
             HEAPF64[$9458>>3] = $9457;
             $9459 = (($4) + 392|0);
             $9460 = +HEAPF64[$9459>>3];
             $9461 = $x333;
             $9462 = $9460 * $9461;
             $9463 = $x327;
             $9464 = $x336;
             $9465 = $9463 * $9464;
             $9466 = $9462 + $9465;
             $9467 = $x328;
             $9468 = $x336;
             $9469 = $9467 * $9468;
             $9470 = $9466 + $9469;
             $9471 = (($4) + 312|0);
             HEAPF64[$9471>>3] = $9470;
             $9472 = $x330;
             $9473 = $x336;
             $9474 = $9472 * $9473;
             $9475 = (($4) + 416|0);
             $9476 = +HEAPF64[$9475>>3];
             $9477 = $x333;
             $9478 = $9476 * $9477;
             $9479 = $9474 + $9478;
             $9480 = $x325;
             $9481 = $x336;
             $9482 = $9480 * $9481;
             $9483 = $9479 + $9482;
             $9484 = (($4) + 336|0);
             HEAPF64[$9484>>3] = $9483;
             $9485 = (($4) + 440|0);
             $9486 = +HEAPF64[$9485>>3];
             $9487 = $x333;
             $9488 = $9486 * $9487;
             $9489 = $x331;
             $9490 = $x336;
             $9491 = $9489 * $9490;
             $9492 = $9488 + $9491;
             $9493 = $x332;
             $9494 = $x336;
             $9495 = $9493 * $9494;
             $9496 = $9492 + $9495;
             $9497 = (($4) + 360|0);
             HEAPF64[$9497>>3] = $9496;
             $9498 = (($4) + 392|0);
             $9499 = +HEAPF64[$9498>>3];
             $9500 = $x336;
             $9501 = $9499 * $9500;
             $9502 = $x327;
             $9503 = $x334;
             $9504 = $9502 * $9503;
             $9505 = $9501 + $9504;
             $9506 = $x328;
             $9507 = $x334;
             $9508 = $9506 * $9507;
             $9509 = $9505 + $9508;
             $9510 = (($4) + 384|0);
             HEAPF64[$9510>>3] = $9509;
             $9511 = $x330;
             $9512 = $x334;
             $9513 = $9511 * $9512;
             $9514 = (($4) + 416|0);
             $9515 = +HEAPF64[$9514>>3];
             $9516 = $x336;
             $9517 = $9515 * $9516;
             $9518 = $9513 + $9517;
             $9519 = $x325;
             $9520 = $x334;
             $9521 = $9519 * $9520;
             $9522 = $9518 + $9521;
             $9523 = (($4) + 408|0);
             HEAPF64[$9523>>3] = $9522;
             $9524 = (($4) + 440|0);
             $9525 = +HEAPF64[$9524>>3];
             $9526 = $x336;
             $9527 = $9525 * $9526;
             $9528 = $x331;
             $9529 = $x334;
             $9530 = $9528 * $9529;
             $9531 = $9527 + $9530;
             $9532 = $x332;
             $9533 = $x334;
             $9534 = $9532 * $9533;
             $9535 = $9531 + $9534;
             $9536 = (($4) + 432|0);
             HEAPF64[$9536>>3] = $9535;
             $9537 = (($4) + 176|0);
             $9538 = +HEAPF64[$9537>>3];
             HEAPF64[$j3eval148>>3] = $9538;
             $9539 = +HEAPF64[$j3eval148>>3];
             $9540 = (+__Z5IKabsd($9539));
             $9541 = $9540 < 9.9999999999999995E-7;
             if ($9541) {
              $bgotonextstatement150 = 1;
              $9542 = (($4) + 160|0);
              $9543 = +HEAPF64[$9542>>3];
              $9544 = (+__Z5IKabsd($9543));
              $9545 = 3.14159265358979 + $9544;
              $9546 = (+__Z6IKfmoddd($9545,6.2831853071795898));
              $9547 = -3.14159265358979 + $9546;
              HEAPF64[$evalcond149>>3] = $9547;
              $9548 = (($4) + 432|0);
              $9549 = +HEAPF64[$9548>>3];
              $9550 = -1.0 + $9549;
              $9551 = (($evalcond149) + 8|0);
              HEAPF64[$9551>>3] = $9550;
              $9552 = (($4) + 360|0);
              $9553 = +HEAPF64[$9552>>3];
              $9554 = (($evalcond149) + 16|0);
              HEAPF64[$9554>>3] = $9553;
              $9555 = (($4) + 288|0);
              $9556 = +HEAPF64[$9555>>3];
              $9557 = (($evalcond149) + 24|0);
              HEAPF64[$9557>>3] = $9556;
              $9558 = (($4) + 384|0);
              $9559 = +HEAPF64[$9558>>3];
              $9560 = (($evalcond149) + 32|0);
              HEAPF64[$9560>>3] = $9559;
              $9561 = (($4) + 408|0);
              $9562 = +HEAPF64[$9561>>3];
              $9563 = (($evalcond149) + 40|0);
              HEAPF64[$9563>>3] = $9562;
              $9564 = +HEAPF64[$evalcond149>>3];
              $9565 = (+__Z5IKabsd($9564));
              $9566 = $9565 < 9.9999999999999995E-7;
              do {
               if ($9566) {
                $9567 = (($evalcond149) + 8|0);
                $9568 = +HEAPF64[$9567>>3];
                $9569 = (+__Z5IKabsd($9568));
                $9570 = $9569 < 9.9999999999999995E-7;
                if (!($9570)) {
                 label = 1325;
                 break;
                }
                $9571 = (($evalcond149) + 16|0);
                $9572 = +HEAPF64[$9571>>3];
                $9573 = (+__Z5IKabsd($9572));
                $9574 = $9573 < 9.9999999999999995E-7;
                if (!($9574)) {
                 label = 1325;
                 break;
                }
                $9575 = (($evalcond149) + 24|0);
                $9576 = +HEAPF64[$9575>>3];
                $9577 = (+__Z5IKabsd($9576));
                $9578 = $9577 < 9.9999999999999995E-7;
                if (!($9578)) {
                 label = 1325;
                 break;
                }
                $9579 = (($evalcond149) + 32|0);
                $9580 = +HEAPF64[$9579>>3];
                $9581 = (+__Z5IKabsd($9580));
                $9582 = $9581 < 9.9999999999999995E-7;
                if (!($9582)) {
                 label = 1325;
                 break;
                }
                $9583 = (($evalcond149) + 40|0);
                $9584 = +HEAPF64[$9583>>3];
                $9585 = (+__Z5IKabsd($9584));
                $9586 = $9585 < 9.9999999999999995E-7;
                if (!($9586)) {
                 label = 1325;
                 break;
                }
                $bgotonextstatement150 = 0;
                ;HEAP8[$j3valid154+0>>0]=0|0;
                $9587 = (($4) + 547|0);
                HEAP8[$9587>>0] = 1;
                $9588 = (($4) + 264|0);
                $9589 = +HEAPF64[$9588>>3];
                $9590 = (($4) + 360|0);
                $9591 = +HEAPF64[$9590>>3];
                $9592 = $9589 * $9591;
                $9593 = (($4) + 288|0);
                $9594 = +HEAPF64[$9593>>3];
                $9595 = -1.0 * $9594;
                $9596 = (($4) + 336|0);
                $9597 = +HEAPF64[$9596>>3];
                $9598 = $9595 * $9597;
                $9599 = $9592 + $9598;
                $9600 = (+__Z6IKsignd($9599));
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x338,$9600,-1);
                $9601 = (($x338) + 8|0);
                $9602 = HEAP8[$9601>>0]|0;
                $9603 = $9602&1;
                if (!($9603)) {
                 break;
                }
                $9604 = (($4) + 288|0);
                $9605 = +HEAPF64[$9604>>3];
                $9606 = (($4) + 216|0);
                $9607 = +HEAPF64[$9606>>3];
                $9608 = $9605 * $9607;
                $9609 = (($4) + 360|0);
                $9610 = +HEAPF64[$9609>>3];
                $9611 = -1.0 * $9610;
                $9612 = (($4) + 216|0);
                $9613 = +HEAPF64[$9612>>3];
                $9614 = $9611 * $9613;
                __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x339,$9608,$9614,1.9999999999999999E-6);
                $9615 = (($x339) + 8|0);
                $9616 = HEAP8[$9615>>0]|0;
                $9617 = $9616&1;
                if (!($9617)) {
                 break;
                }
                $9618 = +HEAPF64[$x338>>3];
                $9619 = 1.5707963267949001 * $9618;
                $9620 = -1.5707963267949001 + $9619;
                $9621 = +HEAPF64[$x339>>3];
                $9622 = $9620 + $9621;
                HEAPF64[$j3array151>>3] = $9622;
                $9623 = +HEAPF64[$j3array151>>3];
                $9624 = (+__Z5IKsind($9623));
                HEAPF64[$sj3array153>>3] = $9624;
                $9625 = +HEAPF64[$j3array151>>3];
                $9626 = (+__Z5IKcosd($9625));
                HEAPF64[$cj3array152>>3] = $9626;
                $9627 = +HEAPF64[$j3array151>>3];
                $9628 = $9627 > 3.14159265358979;
                if ($9628) {
                 $9629 = +HEAPF64[$j3array151>>3];
                 $9630 = $9629 - 6.2831853071795898;
                 HEAPF64[$j3array151>>3] = $9630;
                } else {
                 $9631 = +HEAPF64[$j3array151>>3];
                 $9632 = $9631 < -3.14159265358979;
                 if ($9632) {
                  $9633 = +HEAPF64[$j3array151>>3];
                  $9634 = $9633 + 6.2831853071795898;
                  HEAPF64[$j3array151>>3] = $9634;
                 }
                }
                HEAP8[$j3valid154>>0] = 1;
                $ij3155 = 0;
                while(1) {
                 $9635 = $ij3155;
                 $9636 = ($9635|0)<(1);
                 if (!($9636)) {
                  break;
                 }
                 $9637 = $ij3155;
                 $9638 = (($j3valid154) + ($9637)|0);
                 $9639 = HEAP8[$9638>>0]|0;
                 $9640 = $9639&1;
                 L182: do {
                  if ($9640) {
                   $9641 = $ij3155;
                   $9642 = $9641&255;
                   $9643 = (($4) + 545|0);
                   HEAP8[$9643>>0] = $9642;
                   $9644 = (($4) + 545|0);
                   $9645 = (($9644) + 1|0);
                   HEAP8[$9645>>0] = -1;
                   $9646 = $ij3155;
                   $9647 = (($9646) + 1)|0;
                   $iij3156 = $9647;
                   L185: while(1) {
                    $9648 = $iij3156;
                    $9649 = ($9648|0)<(1);
                    if (!($9649)) {
                     break;
                    }
                    $9650 = $iij3156;
                    $9651 = (($j3valid154) + ($9650)|0);
                    $9652 = HEAP8[$9651>>0]|0;
                    $9653 = $9652&1;
                    do {
                     if ($9653) {
                      $9654 = $ij3155;
                      $9655 = (($cj3array152) + ($9654<<3)|0);
                      $9656 = +HEAPF64[$9655>>3];
                      $9657 = $iij3156;
                      $9658 = (($cj3array152) + ($9657<<3)|0);
                      $9659 = +HEAPF64[$9658>>3];
                      $9660 = $9656 - $9659;
                      $9661 = (+__Z5IKabsd($9660));
                      $9662 = $9661 < 9.9999999999999995E-7;
                      if (!($9662)) {
                       break;
                      }
                      $9663 = $ij3155;
                      $9664 = (($sj3array153) + ($9663<<3)|0);
                      $9665 = +HEAPF64[$9664>>3];
                      $9666 = $iij3156;
                      $9667 = (($sj3array153) + ($9666<<3)|0);
                      $9668 = +HEAPF64[$9667>>3];
                      $9669 = $9665 - $9668;
                      $9670 = (+__Z5IKabsd($9669));
                      $9671 = $9670 < 9.9999999999999995E-7;
                      if ($9671) {
                       label = 1270;
                       break L185;
                      }
                     }
                    } while(0);
                    $9678 = $iij3156;
                    $9679 = (($9678) + 1)|0;
                    $iij3156 = $9679;
                   }
                   if ((label|0) == 1270) {
                    label = 0;
                    $9672 = $iij3156;
                    $9673 = (($j3valid154) + ($9672)|0);
                    HEAP8[$9673>>0] = 0;
                    $9674 = $iij3156;
                    $9675 = $9674&255;
                    $9676 = (($4) + 545|0);
                    $9677 = (($9676) + 1|0);
                    HEAP8[$9677>>0] = $9675;
                   }
                   $9680 = $ij3155;
                   $9681 = (($j3array151) + ($9680<<3)|0);
                   $9682 = +HEAPF64[$9681>>3];
                   $9683 = (($4) + 120|0);
                   HEAPF64[$9683>>3] = $9682;
                   $9684 = $ij3155;
                   $9685 = (($cj3array152) + ($9684<<3)|0);
                   $9686 = +HEAPF64[$9685>>3];
                   $9687 = (($4) + 128|0);
                   HEAPF64[$9687>>3] = $9686;
                   $9688 = $ij3155;
                   $9689 = (($sj3array153) + ($9688<<3)|0);
                   $9690 = +HEAPF64[$9689>>3];
                   $9691 = (($4) + 136|0);
                   HEAPF64[$9691>>3] = $9690;
                   $9692 = (($4) + 120|0);
                   $9693 = +HEAPF64[$9692>>3];
                   $9694 = (+__Z5IKcosd($9693));
                   $x340 = $9694;
                   $9695 = (($4) + 120|0);
                   $9696 = +HEAPF64[$9695>>3];
                   $9697 = (+__Z5IKsind($9696));
                   $x341 = $9697;
                   $9698 = (($4) + 208|0);
                   $9699 = +HEAPF64[$9698>>3];
                   $9700 = 1.0 * $9699;
                   $x342 = $9700;
                   $9701 = (($4) + 216|0);
                   $9702 = +HEAPF64[$9701>>3];
                   $9703 = $x341;
                   $9704 = $9702 * $9703;
                   $x343 = $9704;
                   $9705 = (($4) + 208|0);
                   $9706 = +HEAPF64[$9705>>3];
                   $9707 = $x341;
                   $9708 = $9706 * $9707;
                   $x344 = $9708;
                   $9709 = (($4) + 216|0);
                   $9710 = +HEAPF64[$9709>>3];
                   $9711 = $x340;
                   $9712 = $9710 * $9711;
                   $x345 = $9712;
                   $9713 = $x341;
                   $9714 = 1.0 * $9713;
                   $x346 = $9714;
                   $9715 = $x340;
                   $9716 = $x342;
                   $9717 = $9715 * $9716;
                   $x347 = $9717;
                   $9718 = (($4) + 288|0);
                   $9719 = +HEAPF64[$9718>>3];
                   $9720 = $x340;
                   $9721 = $9719 * $9720;
                   $9722 = (($4) + 360|0);
                   $9723 = +HEAPF64[$9722>>3];
                   $9724 = $x341;
                   $9725 = $9723 * $9724;
                   $9726 = $9721 + $9725;
                   HEAPF64[$evalcond157>>3] = $9726;
                   $9727 = (($4) + 216|0);
                   $9728 = +HEAPF64[$9727>>3];
                   $9729 = (($4) + 336|0);
                   $9730 = +HEAPF64[$9729>>3];
                   $9731 = $x341;
                   $9732 = $9730 * $9731;
                   $9733 = $9728 + $9732;
                   $9734 = (($4) + 264|0);
                   $9735 = +HEAPF64[$9734>>3];
                   $9736 = $x340;
                   $9737 = $9735 * $9736;
                   $9738 = $9733 + $9737;
                   $9739 = (($evalcond157) + 8|0);
                   HEAPF64[$9739>>3] = $9738;
                   $9740 = (($4) + 288|0);
                   $9741 = +HEAPF64[$9740>>3];
                   $9742 = -1.0 * $9741;
                   $9743 = $x346;
                   $9744 = $9742 * $9743;
                   $9745 = (($4) + 360|0);
                   $9746 = +HEAPF64[$9745>>3];
                   $9747 = $x340;
                   $9748 = $9746 * $9747;
                   $9749 = $9744 + $9748;
                   $9750 = (($evalcond157) + 16|0);
                   HEAPF64[$9750>>3] = $9749;
                   $9751 = $x344;
                   $9752 = $x345;
                   $9753 = $9751 + $9752;
                   $9754 = (($4) + 264|0);
                   $9755 = +HEAPF64[$9754>>3];
                   $9756 = $9753 + $9755;
                   $9757 = (($evalcond157) + 24|0);
                   HEAPF64[$9757>>3] = $9756;
                   $9758 = $x343;
                   $9759 = (($4) + 240|0);
                   $9760 = +HEAPF64[$9759>>3];
                   $9761 = $9758 + $9760;
                   $9762 = $x347;
                   $9763 = -1.0 * $9762;
                   $9764 = $9761 + $9763;
                   $9765 = (($evalcond157) + 32|0);
                   HEAPF64[$9765>>3] = $9764;
                   $9766 = $x343;
                   $9767 = (($4) + 336|0);
                   $9768 = +HEAPF64[$9767>>3];
                   $9769 = $9766 + $9768;
                   $9770 = $x347;
                   $9771 = -1.0 * $9770;
                   $9772 = $9769 + $9771;
                   $9773 = (($evalcond157) + 40|0);
                   HEAPF64[$9773>>3] = $9772;
                   $9774 = (($4) + 240|0);
                   $9775 = +HEAPF64[$9774>>3];
                   $9776 = $x340;
                   $9777 = $9775 * $9776;
                   $9778 = (($4) + 312|0);
                   $9779 = +HEAPF64[$9778>>3];
                   $9780 = $x341;
                   $9781 = $9779 * $9780;
                   $9782 = $9777 + $9781;
                   $9783 = $x342;
                   $9784 = -1.0 * $9783;
                   $9785 = $9782 + $9784;
                   $9786 = (($evalcond157) + 48|0);
                   HEAPF64[$9786>>3] = $9785;
                   $9787 = $x341;
                   $9788 = -1.0 * $9787;
                   $9789 = $x342;
                   $9790 = $9788 * $9789;
                   $9791 = (($4) + 312|0);
                   $9792 = +HEAPF64[$9791>>3];
                   $9793 = $9790 + $9792;
                   $9794 = $x345;
                   $9795 = -1.0 * $9794;
                   $9796 = $9793 + $9795;
                   $9797 = (($evalcond157) + 56|0);
                   HEAPF64[$9797>>3] = $9796;
                   $9798 = (($4) + 216|0);
                   $9799 = +HEAPF64[$9798>>3];
                   $9800 = -1.0 * $9799;
                   $9801 = (($4) + 312|0);
                   $9802 = +HEAPF64[$9801>>3];
                   $9803 = $x340;
                   $9804 = $9802 * $9803;
                   $9805 = $9800 + $9804;
                   $9806 = (($4) + 240|0);
                   $9807 = +HEAPF64[$9806>>3];
                   $9808 = -1.0 * $9807;
                   $9809 = $x346;
                   $9810 = $9808 * $9809;
                   $9811 = $9805 + $9810;
                   $9812 = (($evalcond157) + 64|0);
                   HEAPF64[$9812>>3] = $9811;
                   $9813 = (($4) + 336|0);
                   $9814 = +HEAPF64[$9813>>3];
                   $9815 = $x340;
                   $9816 = $9814 * $9815;
                   $9817 = (($4) + 264|0);
                   $9818 = +HEAPF64[$9817>>3];
                   $9819 = -1.0 * $9818;
                   $9820 = $x346;
                   $9821 = $9819 * $9820;
                   $9822 = $9816 + $9821;
                   $9823 = $x342;
                   $9824 = -1.0 * $9823;
                   $9825 = $9822 + $9824;
                   $9826 = (($evalcond157) + 72|0);
                   HEAPF64[$9826>>3] = $9825;
                   $9827 = +HEAPF64[$evalcond157>>3];
                   $9828 = (+__Z5IKabsd($9827));
                   $9829 = $9828 > 5.0000000000000004E-6;
                   do {
                    if (!($9829)) {
                     $9830 = (($evalcond157) + 8|0);
                     $9831 = +HEAPF64[$9830>>3];
                     $9832 = (+__Z5IKabsd($9831));
                     $9833 = $9832 > 5.0000000000000004E-6;
                     if ($9833) {
                      break;
                     }
                     $9834 = (($evalcond157) + 16|0);
                     $9835 = +HEAPF64[$9834>>3];
                     $9836 = (+__Z5IKabsd($9835));
                     $9837 = $9836 > 5.0000000000000004E-6;
                     if ($9837) {
                      break;
                     }
                     $9838 = (($evalcond157) + 24|0);
                     $9839 = +HEAPF64[$9838>>3];
                     $9840 = (+__Z5IKabsd($9839));
                     $9841 = $9840 > 5.0000000000000004E-6;
                     if ($9841) {
                      break;
                     }
                     $9842 = (($evalcond157) + 32|0);
                     $9843 = +HEAPF64[$9842>>3];
                     $9844 = (+__Z5IKabsd($9843));
                     $9845 = $9844 > 5.0000000000000004E-6;
                     if ($9845) {
                      break;
                     }
                     $9846 = (($evalcond157) + 40|0);
                     $9847 = +HEAPF64[$9846>>3];
                     $9848 = (+__Z5IKabsd($9847));
                     $9849 = $9848 > 5.0000000000000004E-6;
                     if ($9849) {
                      break;
                     }
                     $9850 = (($evalcond157) + 48|0);
                     $9851 = +HEAPF64[$9850>>3];
                     $9852 = (+__Z5IKabsd($9851));
                     $9853 = $9852 > 5.0000000000000004E-6;
                     if ($9853) {
                      break;
                     }
                     $9854 = (($evalcond157) + 56|0);
                     $9855 = +HEAPF64[$9854>>3];
                     $9856 = (+__Z5IKabsd($9855));
                     $9857 = $9856 > 5.0000000000000004E-6;
                     if ($9857) {
                      break;
                     }
                     $9858 = (($evalcond157) + 64|0);
                     $9859 = +HEAPF64[$9858>>3];
                     $9860 = (+__Z5IKabsd($9859));
                     $9861 = $9860 > 5.0000000000000004E-6;
                     if ($9861) {
                      break;
                     }
                     $9862 = (($evalcond157) + 72|0);
                     $9863 = +HEAPF64[$9862>>3];
                     $9864 = (+__Z5IKabsd($9863));
                     $9865 = $9864 > 5.0000000000000004E-6;
                     if ($9865) {
                      break;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos158,6);
                     __THREW__ = 0;
                     $9866 = (invoke_iii(381,($vinfos158|0),0)|0);
                     $9867 = __THREW__; __THREW__ = 0;
                     $9868 = $9867&1;
                     if ($9868) {
                      label = 1319;
                      break L1;
                     }
                     $9869 = (($9866) + 17|0);
                     HEAP8[$9869>>0] = 1;
                     $9870 = +HEAPF64[$4>>3];
                     __THREW__ = 0;
                     $9871 = (invoke_iii(381,($vinfos158|0),0)|0);
                     $9872 = __THREW__; __THREW__ = 0;
                     $9873 = $9872&1;
                     if ($9873) {
                      label = 1319;
                      break L1;
                     }
                     $9874 = (($9871) + 8|0);
                     HEAPF64[$9874>>3] = $9870;
                     $9875 = (($4) + 536|0);
                     $9876 = HEAP8[$9875>>0]|0;
                     __THREW__ = 0;
                     $9877 = (invoke_iii(381,($vinfos158|0),0)|0);
                     $9878 = __THREW__; __THREW__ = 0;
                     $9879 = $9878&1;
                     if ($9879) {
                      label = 1319;
                      break L1;
                     }
                     $9880 = (($9877) + 19|0);
                     HEAP8[$9880>>0] = $9876;
                     $9881 = (($4) + 536|0);
                     $9882 = (($9881) + 1|0);
                     $9883 = HEAP8[$9882>>0]|0;
                     __THREW__ = 0;
                     $9884 = (invoke_iii(381,($vinfos158|0),0)|0);
                     $9885 = __THREW__; __THREW__ = 0;
                     $9886 = $9885&1;
                     if ($9886) {
                      label = 1319;
                      break L1;
                     }
                     $9887 = (($9884) + 19|0);
                     $9888 = (($9887) + 1|0);
                     HEAP8[$9888>>0] = $9883;
                     $9889 = (($4) + 538|0);
                     $9890 = HEAP8[$9889>>0]|0;
                     __THREW__ = 0;
                     $9891 = (invoke_iii(381,($vinfos158|0),0)|0);
                     $9892 = __THREW__; __THREW__ = 0;
                     $9893 = $9892&1;
                     if ($9893) {
                      label = 1319;
                      break L1;
                     }
                     $9894 = (($9891) + 18|0);
                     HEAP8[$9894>>0] = $9890;
                     __THREW__ = 0;
                     $9895 = (invoke_iii(381,($vinfos158|0),1)|0);
                     $9896 = __THREW__; __THREW__ = 0;
                     $9897 = $9896&1;
                     if ($9897) {
                      label = 1319;
                      break L1;
                     }
                     $9898 = (($9895) + 17|0);
                     HEAP8[$9898>>0] = 1;
                     $9899 = (($4) + 40|0);
                     $9900 = +HEAPF64[$9899>>3];
                     __THREW__ = 0;
                     $9901 = (invoke_iii(381,($vinfos158|0),1)|0);
                     $9902 = __THREW__; __THREW__ = 0;
                     $9903 = $9902&1;
                     if ($9903) {
                      label = 1319;
                      break L1;
                     }
                     $9904 = (($9901) + 8|0);
                     HEAPF64[$9904>>3] = $9900;
                     $9905 = (($4) + 539|0);
                     $9906 = HEAP8[$9905>>0]|0;
                     __THREW__ = 0;
                     $9907 = (invoke_iii(381,($vinfos158|0),1)|0);
                     $9908 = __THREW__; __THREW__ = 0;
                     $9909 = $9908&1;
                     if ($9909) {
                      label = 1319;
                      break L1;
                     }
                     $9910 = (($9907) + 19|0);
                     HEAP8[$9910>>0] = $9906;
                     $9911 = (($4) + 539|0);
                     $9912 = (($9911) + 1|0);
                     $9913 = HEAP8[$9912>>0]|0;
                     __THREW__ = 0;
                     $9914 = (invoke_iii(381,($vinfos158|0),1)|0);
                     $9915 = __THREW__; __THREW__ = 0;
                     $9916 = $9915&1;
                     if ($9916) {
                      label = 1319;
                      break L1;
                     }
                     $9917 = (($9914) + 19|0);
                     $9918 = (($9917) + 1|0);
                     HEAP8[$9918>>0] = $9913;
                     $9919 = (($4) + 541|0);
                     $9920 = HEAP8[$9919>>0]|0;
                     __THREW__ = 0;
                     $9921 = (invoke_iii(381,($vinfos158|0),1)|0);
                     $9922 = __THREW__; __THREW__ = 0;
                     $9923 = $9922&1;
                     if ($9923) {
                      label = 1319;
                      break L1;
                     }
                     $9924 = (($9921) + 18|0);
                     HEAP8[$9924>>0] = $9920;
                     __THREW__ = 0;
                     $9925 = (invoke_iii(381,($vinfos158|0),2)|0);
                     $9926 = __THREW__; __THREW__ = 0;
                     $9927 = $9926&1;
                     if ($9927) {
                      label = 1319;
                      break L1;
                     }
                     $9928 = (($9925) + 17|0);
                     HEAP8[$9928>>0] = 1;
                     $9929 = (($4) + 80|0);
                     $9930 = +HEAPF64[$9929>>3];
                     __THREW__ = 0;
                     $9931 = (invoke_iii(381,($vinfos158|0),2)|0);
                     $9932 = __THREW__; __THREW__ = 0;
                     $9933 = $9932&1;
                     if ($9933) {
                      label = 1319;
                      break L1;
                     }
                     $9934 = (($9931) + 8|0);
                     HEAPF64[$9934>>3] = $9930;
                     $9935 = (($4) + 542|0);
                     $9936 = HEAP8[$9935>>0]|0;
                     __THREW__ = 0;
                     $9937 = (invoke_iii(381,($vinfos158|0),2)|0);
                     $9938 = __THREW__; __THREW__ = 0;
                     $9939 = $9938&1;
                     if ($9939) {
                      label = 1319;
                      break L1;
                     }
                     $9940 = (($9937) + 19|0);
                     HEAP8[$9940>>0] = $9936;
                     $9941 = (($4) + 542|0);
                     $9942 = (($9941) + 1|0);
                     $9943 = HEAP8[$9942>>0]|0;
                     __THREW__ = 0;
                     $9944 = (invoke_iii(381,($vinfos158|0),2)|0);
                     $9945 = __THREW__; __THREW__ = 0;
                     $9946 = $9945&1;
                     if ($9946) {
                      label = 1319;
                      break L1;
                     }
                     $9947 = (($9944) + 19|0);
                     $9948 = (($9947) + 1|0);
                     HEAP8[$9948>>0] = $9943;
                     $9949 = (($4) + 544|0);
                     $9950 = HEAP8[$9949>>0]|0;
                     __THREW__ = 0;
                     $9951 = (invoke_iii(381,($vinfos158|0),2)|0);
                     $9952 = __THREW__; __THREW__ = 0;
                     $9953 = $9952&1;
                     if ($9953) {
                      label = 1319;
                      break L1;
                     }
                     $9954 = (($9951) + 18|0);
                     HEAP8[$9954>>0] = $9950;
                     __THREW__ = 0;
                     $9955 = (invoke_iii(381,($vinfos158|0),3)|0);
                     $9956 = __THREW__; __THREW__ = 0;
                     $9957 = $9956&1;
                     if ($9957) {
                      label = 1319;
                      break L1;
                     }
                     $9958 = (($9955) + 17|0);
                     HEAP8[$9958>>0] = 1;
                     $9959 = (($4) + 120|0);
                     $9960 = +HEAPF64[$9959>>3];
                     __THREW__ = 0;
                     $9961 = (invoke_iii(381,($vinfos158|0),3)|0);
                     $9962 = __THREW__; __THREW__ = 0;
                     $9963 = $9962&1;
                     if ($9963) {
                      label = 1319;
                      break L1;
                     }
                     $9964 = (($9961) + 8|0);
                     HEAPF64[$9964>>3] = $9960;
                     $9965 = (($4) + 545|0);
                     $9966 = HEAP8[$9965>>0]|0;
                     __THREW__ = 0;
                     $9967 = (invoke_iii(381,($vinfos158|0),3)|0);
                     $9968 = __THREW__; __THREW__ = 0;
                     $9969 = $9968&1;
                     if ($9969) {
                      label = 1319;
                      break L1;
                     }
                     $9970 = (($9967) + 19|0);
                     HEAP8[$9970>>0] = $9966;
                     $9971 = (($4) + 545|0);
                     $9972 = (($9971) + 1|0);
                     $9973 = HEAP8[$9972>>0]|0;
                     __THREW__ = 0;
                     $9974 = (invoke_iii(381,($vinfos158|0),3)|0);
                     $9975 = __THREW__; __THREW__ = 0;
                     $9976 = $9975&1;
                     if ($9976) {
                      label = 1319;
                      break L1;
                     }
                     $9977 = (($9974) + 19|0);
                     $9978 = (($9977) + 1|0);
                     HEAP8[$9978>>0] = $9973;
                     $9979 = (($4) + 547|0);
                     $9980 = HEAP8[$9979>>0]|0;
                     __THREW__ = 0;
                     $9981 = (invoke_iii(381,($vinfos158|0),3)|0);
                     $9982 = __THREW__; __THREW__ = 0;
                     $9983 = $9982&1;
                     if ($9983) {
                      label = 1319;
                      break L1;
                     }
                     $9984 = (($9981) + 18|0);
                     HEAP8[$9984>>0] = $9980;
                     __THREW__ = 0;
                     $9985 = (invoke_iii(381,($vinfos158|0),4)|0);
                     $9986 = __THREW__; __THREW__ = 0;
                     $9987 = $9986&1;
                     if ($9987) {
                      label = 1319;
                      break L1;
                     }
                     $9988 = (($9985) + 17|0);
                     HEAP8[$9988>>0] = 1;
                     $9989 = (($4) + 160|0);
                     $9990 = +HEAPF64[$9989>>3];
                     __THREW__ = 0;
                     $9991 = (invoke_iii(381,($vinfos158|0),4)|0);
                     $9992 = __THREW__; __THREW__ = 0;
                     $9993 = $9992&1;
                     if ($9993) {
                      label = 1319;
                      break L1;
                     }
                     $9994 = (($9991) + 8|0);
                     HEAPF64[$9994>>3] = $9990;
                     $9995 = (($4) + 548|0);
                     $9996 = HEAP8[$9995>>0]|0;
                     __THREW__ = 0;
                     $9997 = (invoke_iii(381,($vinfos158|0),4)|0);
                     $9998 = __THREW__; __THREW__ = 0;
                     $9999 = $9998&1;
                     if ($9999) {
                      label = 1319;
                      break L1;
                     }
                     $10000 = (($9997) + 19|0);
                     HEAP8[$10000>>0] = $9996;
                     $10001 = (($4) + 548|0);
                     $10002 = (($10001) + 1|0);
                     $10003 = HEAP8[$10002>>0]|0;
                     __THREW__ = 0;
                     $10004 = (invoke_iii(381,($vinfos158|0),4)|0);
                     $10005 = __THREW__; __THREW__ = 0;
                     $10006 = $10005&1;
                     if ($10006) {
                      label = 1319;
                      break L1;
                     }
                     $10007 = (($10004) + 19|0);
                     $10008 = (($10007) + 1|0);
                     HEAP8[$10008>>0] = $10003;
                     $10009 = (($4) + 550|0);
                     $10010 = HEAP8[$10009>>0]|0;
                     __THREW__ = 0;
                     $10011 = (invoke_iii(381,($vinfos158|0),4)|0);
                     $10012 = __THREW__; __THREW__ = 0;
                     $10013 = $10012&1;
                     if ($10013) {
                      label = 1319;
                      break L1;
                     }
                     $10014 = (($10011) + 18|0);
                     HEAP8[$10014>>0] = $10010;
                     __THREW__ = 0;
                     $10015 = (invoke_iii(381,($vinfos158|0),5)|0);
                     $10016 = __THREW__; __THREW__ = 0;
                     $10017 = $10016&1;
                     if ($10017) {
                      label = 1319;
                      break L1;
                     }
                     $10018 = (($10015) + 17|0);
                     HEAP8[$10018>>0] = 1;
                     $10019 = (($4) + 200|0);
                     $10020 = +HEAPF64[$10019>>3];
                     __THREW__ = 0;
                     $10021 = (invoke_iii(381,($vinfos158|0),5)|0);
                     $10022 = __THREW__; __THREW__ = 0;
                     $10023 = $10022&1;
                     if ($10023) {
                      label = 1319;
                      break L1;
                     }
                     $10024 = (($10021) + 8|0);
                     HEAPF64[$10024>>3] = $10020;
                     $10025 = (($4) + 551|0);
                     $10026 = HEAP8[$10025>>0]|0;
                     __THREW__ = 0;
                     $10027 = (invoke_iii(381,($vinfos158|0),5)|0);
                     $10028 = __THREW__; __THREW__ = 0;
                     $10029 = $10028&1;
                     if ($10029) {
                      label = 1319;
                      break L1;
                     }
                     $10030 = (($10027) + 19|0);
                     HEAP8[$10030>>0] = $10026;
                     $10031 = (($4) + 551|0);
                     $10032 = (($10031) + 1|0);
                     $10033 = HEAP8[$10032>>0]|0;
                     __THREW__ = 0;
                     $10034 = (invoke_iii(381,($vinfos158|0),5)|0);
                     $10035 = __THREW__; __THREW__ = 0;
                     $10036 = $10035&1;
                     if ($10036) {
                      label = 1319;
                      break L1;
                     }
                     $10037 = (($10034) + 19|0);
                     $10038 = (($10037) + 1|0);
                     HEAP8[$10038>>0] = $10033;
                     $10039 = (($4) + 553|0);
                     $10040 = HEAP8[$10039>>0]|0;
                     __THREW__ = 0;
                     $10041 = (invoke_iii(381,($vinfos158|0),5)|0);
                     $10042 = __THREW__; __THREW__ = 0;
                     $10043 = $10042&1;
                     if ($10043) {
                      label = 1319;
                      break L1;
                     }
                     $10044 = (($10041) + 18|0);
                     HEAP8[$10044>>0] = $10040;
                     __THREW__ = 0;
                     invoke_vii(382,($vfree159|0),0);
                     $10045 = __THREW__; __THREW__ = 0;
                     $10046 = $10045&1;
                     if ($10046) {
                      label = 1319;
                      break L1;
                     }
                     $10047 = $1;
                     $10048 = HEAP32[$10047>>2]|0;
                     $10049 = (($10048) + 8|0);
                     $10050 = HEAP32[$10049>>2]|0;
                     __THREW__ = 0;
                     (invoke_iiii($10050|0,($10047|0),($vinfos158|0),($vfree159|0))|0);
                     $10051 = __THREW__; __THREW__ = 0;
                     $10052 = $10051&1;
                     if ($10052) {
                      label = 1320;
                      break L1;
                     }
                     __THREW__ = 0;
                     invoke_vi(366,($vfree159|0));
                     $10053 = __THREW__; __THREW__ = 0;
                     $10054 = $10053&1;
                     if ($10054) {
                      label = 1319;
                      break L1;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos158);
                     break L182;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $10055 = $ij3155;
                 $10056 = (($10055) + 1)|0;
                 $ij3155 = $10056;
                }
                label = 1325;
               } else {
                label = 1325;
               }
              } while(0);
              if ((label|0) == 1325) {
               label = 0;
              }
              $10065 = $bgotonextstatement150;
              $10066 = $10065&1;
              if ($10066) {
               $bgotonextstatement160 = 1;
               $10067 = (($4) + 160|0);
               $10068 = +HEAPF64[$10067>>3];
               $10069 = -3.14159265358979 + $10068;
               $10070 = (+__Z5IKabsd($10069));
               $10071 = 3.14159265358979 + $10070;
               $10072 = (+__Z6IKfmoddd($10071,6.2831853071795898));
               $10073 = -3.14159265358979 + $10072;
               HEAPF64[$evalcond149>>3] = $10073;
               $10074 = (($4) + 432|0);
               $10075 = +HEAPF64[$10074>>3];
               $10076 = 1.0 + $10075;
               $10077 = (($evalcond149) + 8|0);
               HEAPF64[$10077>>3] = $10076;
               $10078 = (($4) + 360|0);
               $10079 = +HEAPF64[$10078>>3];
               $10080 = (($evalcond149) + 16|0);
               HEAPF64[$10080>>3] = $10079;
               $10081 = (($4) + 288|0);
               $10082 = +HEAPF64[$10081>>3];
               $10083 = (($evalcond149) + 24|0);
               HEAPF64[$10083>>3] = $10082;
               $10084 = (($4) + 384|0);
               $10085 = +HEAPF64[$10084>>3];
               $10086 = (($evalcond149) + 32|0);
               HEAPF64[$10086>>3] = $10085;
               $10087 = (($4) + 408|0);
               $10088 = +HEAPF64[$10087>>3];
               $10089 = (($evalcond149) + 40|0);
               HEAPF64[$10089>>3] = $10088;
               $10090 = +HEAPF64[$evalcond149>>3];
               $10091 = (+__Z5IKabsd($10090));
               $10092 = $10091 < 9.9999999999999995E-7;
               do {
                if ($10092) {
                 $10093 = (($evalcond149) + 8|0);
                 $10094 = +HEAPF64[$10093>>3];
                 $10095 = (+__Z5IKabsd($10094));
                 $10096 = $10095 < 9.9999999999999995E-7;
                 if (!($10096)) {
                  label = 1407;
                  break;
                 }
                 $10097 = (($evalcond149) + 16|0);
                 $10098 = +HEAPF64[$10097>>3];
                 $10099 = (+__Z5IKabsd($10098));
                 $10100 = $10099 < 9.9999999999999995E-7;
                 if (!($10100)) {
                  label = 1407;
                  break;
                 }
                 $10101 = (($evalcond149) + 24|0);
                 $10102 = +HEAPF64[$10101>>3];
                 $10103 = (+__Z5IKabsd($10102));
                 $10104 = $10103 < 9.9999999999999995E-7;
                 if (!($10104)) {
                  label = 1407;
                  break;
                 }
                 $10105 = (($evalcond149) + 32|0);
                 $10106 = +HEAPF64[$10105>>3];
                 $10107 = (+__Z5IKabsd($10106));
                 $10108 = $10107 < 9.9999999999999995E-7;
                 if (!($10108)) {
                  label = 1407;
                  break;
                 }
                 $10109 = (($evalcond149) + 40|0);
                 $10110 = +HEAPF64[$10109>>3];
                 $10111 = (+__Z5IKabsd($10110));
                 $10112 = $10111 < 9.9999999999999995E-7;
                 if (!($10112)) {
                  label = 1407;
                  break;
                 }
                 $bgotonextstatement160 = 0;
                 ;HEAP8[$j3valid164+0>>0]=0|0;
                 $10113 = (($4) + 547|0);
                 HEAP8[$10113>>0] = 1;
                 $10114 = (($4) + 264|0);
                 $10115 = +HEAPF64[$10114>>3];
                 $10116 = (($4) + 288|0);
                 $10117 = +HEAPF64[$10116>>3];
                 $10118 = $10115 * $10117;
                 $10119 = (($4) + 264|0);
                 $10120 = +HEAPF64[$10119>>3];
                 $10121 = -1.0 * $10120;
                 $10122 = (($4) + 360|0);
                 $10123 = +HEAPF64[$10122>>3];
                 $10124 = $10121 * $10123;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x348,$10118,$10124,1.9999999999999999E-6);
                 $10125 = (($x348) + 8|0);
                 $10126 = HEAP8[$10125>>0]|0;
                 $10127 = $10126&1;
                 if (!($10127)) {
                  break;
                 }
                 $10128 = (($4) + 360|0);
                 $10129 = +HEAPF64[$10128>>3];
                 $10130 = (($4) + 216|0);
                 $10131 = +HEAPF64[$10130>>3];
                 $10132 = $10129 * $10131;
                 $10133 = (($4) + 208|0);
                 $10134 = +HEAPF64[$10133>>3];
                 $10135 = (($4) + 288|0);
                 $10136 = +HEAPF64[$10135>>3];
                 $10137 = $10134 * $10136;
                 $10138 = $10132 + $10137;
                 $10139 = (+__Z6IKsignd($10138));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x349,$10139,-1);
                 $10140 = (($x349) + 8|0);
                 $10141 = HEAP8[$10140>>0]|0;
                 $10142 = $10141&1;
                 if (!($10142)) {
                  break;
                 }
                 $10143 = +HEAPF64[$x348>>3];
                 $10144 = -1.5707963267949001 + $10143;
                 $10145 = +HEAPF64[$x349>>3];
                 $10146 = 1.5707963267949001 * $10145;
                 $10147 = $10144 + $10146;
                 HEAPF64[$j3array161>>3] = $10147;
                 $10148 = +HEAPF64[$j3array161>>3];
                 $10149 = (+__Z5IKsind($10148));
                 HEAPF64[$sj3array163>>3] = $10149;
                 $10150 = +HEAPF64[$j3array161>>3];
                 $10151 = (+__Z5IKcosd($10150));
                 HEAPF64[$cj3array162>>3] = $10151;
                 $10152 = +HEAPF64[$j3array161>>3];
                 $10153 = $10152 > 3.14159265358979;
                 if ($10153) {
                  $10154 = +HEAPF64[$j3array161>>3];
                  $10155 = $10154 - 6.2831853071795898;
                  HEAPF64[$j3array161>>3] = $10155;
                 } else {
                  $10156 = +HEAPF64[$j3array161>>3];
                  $10157 = $10156 < -3.14159265358979;
                  if ($10157) {
                   $10158 = +HEAPF64[$j3array161>>3];
                   $10159 = $10158 + 6.2831853071795898;
                   HEAPF64[$j3array161>>3] = $10159;
                  }
                 }
                 HEAP8[$j3valid164>>0] = 1;
                 $ij3165 = 0;
                 while(1) {
                  $10160 = $ij3165;
                  $10161 = ($10160|0)<(1);
                  if (!($10161)) {
                   break;
                  }
                  $10162 = $ij3165;
                  $10163 = (($j3valid164) + ($10162)|0);
                  $10164 = HEAP8[$10163>>0]|0;
                  $10165 = $10164&1;
                  L272: do {
                   if ($10165) {
                    $10166 = $ij3165;
                    $10167 = $10166&255;
                    $10168 = (($4) + 545|0);
                    HEAP8[$10168>>0] = $10167;
                    $10169 = (($4) + 545|0);
                    $10170 = (($10169) + 1|0);
                    HEAP8[$10170>>0] = -1;
                    $10171 = $ij3165;
                    $10172 = (($10171) + 1)|0;
                    $iij3166 = $10172;
                    L275: while(1) {
                     $10173 = $iij3166;
                     $10174 = ($10173|0)<(1);
                     if (!($10174)) {
                      break;
                     }
                     $10175 = $iij3166;
                     $10176 = (($j3valid164) + ($10175)|0);
                     $10177 = HEAP8[$10176>>0]|0;
                     $10178 = $10177&1;
                     do {
                      if ($10178) {
                       $10179 = $ij3165;
                       $10180 = (($cj3array162) + ($10179<<3)|0);
                       $10181 = +HEAPF64[$10180>>3];
                       $10182 = $iij3166;
                       $10183 = (($cj3array162) + ($10182<<3)|0);
                       $10184 = +HEAPF64[$10183>>3];
                       $10185 = $10181 - $10184;
                       $10186 = (+__Z5IKabsd($10185));
                       $10187 = $10186 < 9.9999999999999995E-7;
                       if (!($10187)) {
                        break;
                       }
                       $10188 = $ij3165;
                       $10189 = (($sj3array163) + ($10188<<3)|0);
                       $10190 = +HEAPF64[$10189>>3];
                       $10191 = $iij3166;
                       $10192 = (($sj3array163) + ($10191<<3)|0);
                       $10193 = +HEAPF64[$10192>>3];
                       $10194 = $10190 - $10193;
                       $10195 = (+__Z5IKabsd($10194));
                       $10196 = $10195 < 9.9999999999999995E-7;
                       if ($10196) {
                        label = 1352;
                        break L275;
                       }
                      }
                     } while(0);
                     $10203 = $iij3166;
                     $10204 = (($10203) + 1)|0;
                     $iij3166 = $10204;
                    }
                    if ((label|0) == 1352) {
                     label = 0;
                     $10197 = $iij3166;
                     $10198 = (($j3valid164) + ($10197)|0);
                     HEAP8[$10198>>0] = 0;
                     $10199 = $iij3166;
                     $10200 = $10199&255;
                     $10201 = (($4) + 545|0);
                     $10202 = (($10201) + 1|0);
                     HEAP8[$10202>>0] = $10200;
                    }
                    $10205 = $ij3165;
                    $10206 = (($j3array161) + ($10205<<3)|0);
                    $10207 = +HEAPF64[$10206>>3];
                    $10208 = (($4) + 120|0);
                    HEAPF64[$10208>>3] = $10207;
                    $10209 = $ij3165;
                    $10210 = (($cj3array162) + ($10209<<3)|0);
                    $10211 = +HEAPF64[$10210>>3];
                    $10212 = (($4) + 128|0);
                    HEAPF64[$10212>>3] = $10211;
                    $10213 = $ij3165;
                    $10214 = (($sj3array163) + ($10213<<3)|0);
                    $10215 = +HEAPF64[$10214>>3];
                    $10216 = (($4) + 136|0);
                    HEAPF64[$10216>>3] = $10215;
                    $10217 = (($4) + 120|0);
                    $10218 = +HEAPF64[$10217>>3];
                    $10219 = (+__Z5IKcosd($10218));
                    $x350 = $10219;
                    $10220 = (($4) + 120|0);
                    $10221 = +HEAPF64[$10220>>3];
                    $10222 = (+__Z5IKsind($10221));
                    $x351 = $10222;
                    $10223 = (($4) + 208|0);
                    $10224 = +HEAPF64[$10223>>3];
                    $10225 = 1.0 * $10224;
                    $x352 = $10225;
                    $10226 = (($4) + 216|0);
                    $10227 = +HEAPF64[$10226>>3];
                    $10228 = $x350;
                    $10229 = $10227 * $10228;
                    $x353 = $10229;
                    $10230 = (($4) + 208|0);
                    $10231 = +HEAPF64[$10230>>3];
                    $10232 = $x350;
                    $10233 = $10231 * $10232;
                    $x354 = $10233;
                    $10234 = $x351;
                    $10235 = 1.0 * $10234;
                    $x355 = $10235;
                    $10236 = $x351;
                    $10237 = $x352;
                    $10238 = $10236 * $10237;
                    $x356 = $10238;
                    $10239 = (($4) + 288|0);
                    $10240 = +HEAPF64[$10239>>3];
                    $10241 = $x350;
                    $10242 = $10240 * $10241;
                    $10243 = (($4) + 360|0);
                    $10244 = +HEAPF64[$10243>>3];
                    $10245 = $x351;
                    $10246 = $10244 * $10245;
                    $10247 = $10242 + $10246;
                    HEAPF64[$evalcond167>>3] = $10247;
                    $10248 = (($4) + 264|0);
                    $10249 = +HEAPF64[$10248>>3];
                    $10250 = $x350;
                    $10251 = $10249 * $10250;
                    $10252 = (($4) + 216|0);
                    $10253 = +HEAPF64[$10252>>3];
                    $10254 = $10251 + $10253;
                    $10255 = (($4) + 336|0);
                    $10256 = +HEAPF64[$10255>>3];
                    $10257 = $x351;
                    $10258 = $10256 * $10257;
                    $10259 = $10254 + $10258;
                    $10260 = (($evalcond167) + 8|0);
                    HEAPF64[$10260>>3] = $10259;
                    $10261 = (($4) + 288|0);
                    $10262 = +HEAPF64[$10261>>3];
                    $10263 = -1.0 * $10262;
                    $10264 = $x355;
                    $10265 = $10263 * $10264;
                    $10266 = (($4) + 360|0);
                    $10267 = +HEAPF64[$10266>>3];
                    $10268 = $x350;
                    $10269 = $10267 * $10268;
                    $10270 = $10265 + $10269;
                    $10271 = (($evalcond167) + 16|0);
                    HEAPF64[$10271>>3] = $10270;
                    $10272 = (($4) + 216|0);
                    $10273 = +HEAPF64[$10272>>3];
                    $10274 = $x351;
                    $10275 = $10273 * $10274;
                    $10276 = $x354;
                    $10277 = $10275 + $10276;
                    $10278 = (($4) + 336|0);
                    $10279 = +HEAPF64[$10278>>3];
                    $10280 = $10277 + $10279;
                    $10281 = (($evalcond167) + 24|0);
                    HEAPF64[$10281>>3] = $10280;
                    $10282 = $x356;
                    $10283 = -1.0 * $10282;
                    $10284 = $x353;
                    $10285 = $10283 + $10284;
                    $10286 = (($4) + 264|0);
                    $10287 = +HEAPF64[$10286>>3];
                    $10288 = $10285 + $10287;
                    $10289 = (($evalcond167) + 32|0);
                    HEAPF64[$10289>>3] = $10288;
                    $10290 = (($4) + 216|0);
                    $10291 = +HEAPF64[$10290>>3];
                    $10292 = (($4) + 240|0);
                    $10293 = +HEAPF64[$10292>>3];
                    $10294 = -1.0 * $10293;
                    $10295 = $x355;
                    $10296 = $10294 * $10295;
                    $10297 = $10291 + $10296;
                    $10298 = (($4) + 312|0);
                    $10299 = +HEAPF64[$10298>>3];
                    $10300 = $x350;
                    $10301 = $10299 * $10300;
                    $10302 = $10297 + $10301;
                    $10303 = (($evalcond167) + 40|0);
                    HEAPF64[$10303>>3] = $10302;
                    $10304 = (($4) + 208|0);
                    $10305 = +HEAPF64[$10304>>3];
                    $10306 = (($4) + 264|0);
                    $10307 = +HEAPF64[$10306>>3];
                    $10308 = -1.0 * $10307;
                    $10309 = $x355;
                    $10310 = $10308 * $10309;
                    $10311 = $10305 + $10310;
                    $10312 = (($4) + 336|0);
                    $10313 = +HEAPF64[$10312>>3];
                    $10314 = $x350;
                    $10315 = $10313 * $10314;
                    $10316 = $10311 + $10315;
                    $10317 = (($evalcond167) + 48|0);
                    HEAPF64[$10317>>3] = $10316;
                    $10318 = $x356;
                    $10319 = -1.0 * $10318;
                    $10320 = $x353;
                    $10321 = $10319 + $10320;
                    $10322 = (($4) + 312|0);
                    $10323 = +HEAPF64[$10322>>3];
                    $10324 = $10321 + $10323;
                    $10325 = (($evalcond167) + 56|0);
                    HEAPF64[$10325>>3] = $10324;
                    $10326 = $x352;
                    $10327 = -1.0 * $10326;
                    $10328 = (($4) + 312|0);
                    $10329 = +HEAPF64[$10328>>3];
                    $10330 = $x351;
                    $10331 = $10329 * $10330;
                    $10332 = $10327 + $10331;
                    $10333 = (($4) + 240|0);
                    $10334 = +HEAPF64[$10333>>3];
                    $10335 = $x350;
                    $10336 = $10334 * $10335;
                    $10337 = $10332 + $10336;
                    $10338 = (($evalcond167) + 64|0);
                    HEAPF64[$10338>>3] = $10337;
                    $10339 = (($4) + 240|0);
                    $10340 = +HEAPF64[$10339>>3];
                    $10341 = (($4) + 216|0);
                    $10342 = +HEAPF64[$10341>>3];
                    $10343 = -1.0 * $10342;
                    $10344 = $x355;
                    $10345 = $10343 * $10344;
                    $10346 = $10340 + $10345;
                    $10347 = $x350;
                    $10348 = -1.0 * $10347;
                    $10349 = $x352;
                    $10350 = $10348 * $10349;
                    $10351 = $10346 + $10350;
                    $10352 = (($evalcond167) + 72|0);
                    HEAPF64[$10352>>3] = $10351;
                    $10353 = +HEAPF64[$evalcond167>>3];
                    $10354 = (+__Z5IKabsd($10353));
                    $10355 = $10354 > 5.0000000000000004E-6;
                    do {
                     if (!($10355)) {
                      $10356 = (($evalcond167) + 8|0);
                      $10357 = +HEAPF64[$10356>>3];
                      $10358 = (+__Z5IKabsd($10357));
                      $10359 = $10358 > 5.0000000000000004E-6;
                      if ($10359) {
                       break;
                      }
                      $10360 = (($evalcond167) + 16|0);
                      $10361 = +HEAPF64[$10360>>3];
                      $10362 = (+__Z5IKabsd($10361));
                      $10363 = $10362 > 5.0000000000000004E-6;
                      if ($10363) {
                       break;
                      }
                      $10364 = (($evalcond167) + 24|0);
                      $10365 = +HEAPF64[$10364>>3];
                      $10366 = (+__Z5IKabsd($10365));
                      $10367 = $10366 > 5.0000000000000004E-6;
                      if ($10367) {
                       break;
                      }
                      $10368 = (($evalcond167) + 32|0);
                      $10369 = +HEAPF64[$10368>>3];
                      $10370 = (+__Z5IKabsd($10369));
                      $10371 = $10370 > 5.0000000000000004E-6;
                      if ($10371) {
                       break;
                      }
                      $10372 = (($evalcond167) + 40|0);
                      $10373 = +HEAPF64[$10372>>3];
                      $10374 = (+__Z5IKabsd($10373));
                      $10375 = $10374 > 5.0000000000000004E-6;
                      if ($10375) {
                       break;
                      }
                      $10376 = (($evalcond167) + 48|0);
                      $10377 = +HEAPF64[$10376>>3];
                      $10378 = (+__Z5IKabsd($10377));
                      $10379 = $10378 > 5.0000000000000004E-6;
                      if ($10379) {
                       break;
                      }
                      $10380 = (($evalcond167) + 56|0);
                      $10381 = +HEAPF64[$10380>>3];
                      $10382 = (+__Z5IKabsd($10381));
                      $10383 = $10382 > 5.0000000000000004E-6;
                      if ($10383) {
                       break;
                      }
                      $10384 = (($evalcond167) + 64|0);
                      $10385 = +HEAPF64[$10384>>3];
                      $10386 = (+__Z5IKabsd($10385));
                      $10387 = $10386 > 5.0000000000000004E-6;
                      if ($10387) {
                       break;
                      }
                      $10388 = (($evalcond167) + 72|0);
                      $10389 = +HEAPF64[$10388>>3];
                      $10390 = (+__Z5IKabsd($10389));
                      $10391 = $10390 > 5.0000000000000004E-6;
                      if ($10391) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos168,6);
                      __THREW__ = 0;
                      $10392 = (invoke_iii(381,($vinfos168|0),0)|0);
                      $10393 = __THREW__; __THREW__ = 0;
                      $10394 = $10393&1;
                      if ($10394) {
                       label = 1401;
                       break L1;
                      }
                      $10395 = (($10392) + 17|0);
                      HEAP8[$10395>>0] = 1;
                      $10396 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $10397 = (invoke_iii(381,($vinfos168|0),0)|0);
                      $10398 = __THREW__; __THREW__ = 0;
                      $10399 = $10398&1;
                      if ($10399) {
                       label = 1401;
                       break L1;
                      }
                      $10400 = (($10397) + 8|0);
                      HEAPF64[$10400>>3] = $10396;
                      $10401 = (($4) + 536|0);
                      $10402 = HEAP8[$10401>>0]|0;
                      __THREW__ = 0;
                      $10403 = (invoke_iii(381,($vinfos168|0),0)|0);
                      $10404 = __THREW__; __THREW__ = 0;
                      $10405 = $10404&1;
                      if ($10405) {
                       label = 1401;
                       break L1;
                      }
                      $10406 = (($10403) + 19|0);
                      HEAP8[$10406>>0] = $10402;
                      $10407 = (($4) + 536|0);
                      $10408 = (($10407) + 1|0);
                      $10409 = HEAP8[$10408>>0]|0;
                      __THREW__ = 0;
                      $10410 = (invoke_iii(381,($vinfos168|0),0)|0);
                      $10411 = __THREW__; __THREW__ = 0;
                      $10412 = $10411&1;
                      if ($10412) {
                       label = 1401;
                       break L1;
                      }
                      $10413 = (($10410) + 19|0);
                      $10414 = (($10413) + 1|0);
                      HEAP8[$10414>>0] = $10409;
                      $10415 = (($4) + 538|0);
                      $10416 = HEAP8[$10415>>0]|0;
                      __THREW__ = 0;
                      $10417 = (invoke_iii(381,($vinfos168|0),0)|0);
                      $10418 = __THREW__; __THREW__ = 0;
                      $10419 = $10418&1;
                      if ($10419) {
                       label = 1401;
                       break L1;
                      }
                      $10420 = (($10417) + 18|0);
                      HEAP8[$10420>>0] = $10416;
                      __THREW__ = 0;
                      $10421 = (invoke_iii(381,($vinfos168|0),1)|0);
                      $10422 = __THREW__; __THREW__ = 0;
                      $10423 = $10422&1;
                      if ($10423) {
                       label = 1401;
                       break L1;
                      }
                      $10424 = (($10421) + 17|0);
                      HEAP8[$10424>>0] = 1;
                      $10425 = (($4) + 40|0);
                      $10426 = +HEAPF64[$10425>>3];
                      __THREW__ = 0;
                      $10427 = (invoke_iii(381,($vinfos168|0),1)|0);
                      $10428 = __THREW__; __THREW__ = 0;
                      $10429 = $10428&1;
                      if ($10429) {
                       label = 1401;
                       break L1;
                      }
                      $10430 = (($10427) + 8|0);
                      HEAPF64[$10430>>3] = $10426;
                      $10431 = (($4) + 539|0);
                      $10432 = HEAP8[$10431>>0]|0;
                      __THREW__ = 0;
                      $10433 = (invoke_iii(381,($vinfos168|0),1)|0);
                      $10434 = __THREW__; __THREW__ = 0;
                      $10435 = $10434&1;
                      if ($10435) {
                       label = 1401;
                       break L1;
                      }
                      $10436 = (($10433) + 19|0);
                      HEAP8[$10436>>0] = $10432;
                      $10437 = (($4) + 539|0);
                      $10438 = (($10437) + 1|0);
                      $10439 = HEAP8[$10438>>0]|0;
                      __THREW__ = 0;
                      $10440 = (invoke_iii(381,($vinfos168|0),1)|0);
                      $10441 = __THREW__; __THREW__ = 0;
                      $10442 = $10441&1;
                      if ($10442) {
                       label = 1401;
                       break L1;
                      }
                      $10443 = (($10440) + 19|0);
                      $10444 = (($10443) + 1|0);
                      HEAP8[$10444>>0] = $10439;
                      $10445 = (($4) + 541|0);
                      $10446 = HEAP8[$10445>>0]|0;
                      __THREW__ = 0;
                      $10447 = (invoke_iii(381,($vinfos168|0),1)|0);
                      $10448 = __THREW__; __THREW__ = 0;
                      $10449 = $10448&1;
                      if ($10449) {
                       label = 1401;
                       break L1;
                      }
                      $10450 = (($10447) + 18|0);
                      HEAP8[$10450>>0] = $10446;
                      __THREW__ = 0;
                      $10451 = (invoke_iii(381,($vinfos168|0),2)|0);
                      $10452 = __THREW__; __THREW__ = 0;
                      $10453 = $10452&1;
                      if ($10453) {
                       label = 1401;
                       break L1;
                      }
                      $10454 = (($10451) + 17|0);
                      HEAP8[$10454>>0] = 1;
                      $10455 = (($4) + 80|0);
                      $10456 = +HEAPF64[$10455>>3];
                      __THREW__ = 0;
                      $10457 = (invoke_iii(381,($vinfos168|0),2)|0);
                      $10458 = __THREW__; __THREW__ = 0;
                      $10459 = $10458&1;
                      if ($10459) {
                       label = 1401;
                       break L1;
                      }
                      $10460 = (($10457) + 8|0);
                      HEAPF64[$10460>>3] = $10456;
                      $10461 = (($4) + 542|0);
                      $10462 = HEAP8[$10461>>0]|0;
                      __THREW__ = 0;
                      $10463 = (invoke_iii(381,($vinfos168|0),2)|0);
                      $10464 = __THREW__; __THREW__ = 0;
                      $10465 = $10464&1;
                      if ($10465) {
                       label = 1401;
                       break L1;
                      }
                      $10466 = (($10463) + 19|0);
                      HEAP8[$10466>>0] = $10462;
                      $10467 = (($4) + 542|0);
                      $10468 = (($10467) + 1|0);
                      $10469 = HEAP8[$10468>>0]|0;
                      __THREW__ = 0;
                      $10470 = (invoke_iii(381,($vinfos168|0),2)|0);
                      $10471 = __THREW__; __THREW__ = 0;
                      $10472 = $10471&1;
                      if ($10472) {
                       label = 1401;
                       break L1;
                      }
                      $10473 = (($10470) + 19|0);
                      $10474 = (($10473) + 1|0);
                      HEAP8[$10474>>0] = $10469;
                      $10475 = (($4) + 544|0);
                      $10476 = HEAP8[$10475>>0]|0;
                      __THREW__ = 0;
                      $10477 = (invoke_iii(381,($vinfos168|0),2)|0);
                      $10478 = __THREW__; __THREW__ = 0;
                      $10479 = $10478&1;
                      if ($10479) {
                       label = 1401;
                       break L1;
                      }
                      $10480 = (($10477) + 18|0);
                      HEAP8[$10480>>0] = $10476;
                      __THREW__ = 0;
                      $10481 = (invoke_iii(381,($vinfos168|0),3)|0);
                      $10482 = __THREW__; __THREW__ = 0;
                      $10483 = $10482&1;
                      if ($10483) {
                       label = 1401;
                       break L1;
                      }
                      $10484 = (($10481) + 17|0);
                      HEAP8[$10484>>0] = 1;
                      $10485 = (($4) + 120|0);
                      $10486 = +HEAPF64[$10485>>3];
                      __THREW__ = 0;
                      $10487 = (invoke_iii(381,($vinfos168|0),3)|0);
                      $10488 = __THREW__; __THREW__ = 0;
                      $10489 = $10488&1;
                      if ($10489) {
                       label = 1401;
                       break L1;
                      }
                      $10490 = (($10487) + 8|0);
                      HEAPF64[$10490>>3] = $10486;
                      $10491 = (($4) + 545|0);
                      $10492 = HEAP8[$10491>>0]|0;
                      __THREW__ = 0;
                      $10493 = (invoke_iii(381,($vinfos168|0),3)|0);
                      $10494 = __THREW__; __THREW__ = 0;
                      $10495 = $10494&1;
                      if ($10495) {
                       label = 1401;
                       break L1;
                      }
                      $10496 = (($10493) + 19|0);
                      HEAP8[$10496>>0] = $10492;
                      $10497 = (($4) + 545|0);
                      $10498 = (($10497) + 1|0);
                      $10499 = HEAP8[$10498>>0]|0;
                      __THREW__ = 0;
                      $10500 = (invoke_iii(381,($vinfos168|0),3)|0);
                      $10501 = __THREW__; __THREW__ = 0;
                      $10502 = $10501&1;
                      if ($10502) {
                       label = 1401;
                       break L1;
                      }
                      $10503 = (($10500) + 19|0);
                      $10504 = (($10503) + 1|0);
                      HEAP8[$10504>>0] = $10499;
                      $10505 = (($4) + 547|0);
                      $10506 = HEAP8[$10505>>0]|0;
                      __THREW__ = 0;
                      $10507 = (invoke_iii(381,($vinfos168|0),3)|0);
                      $10508 = __THREW__; __THREW__ = 0;
                      $10509 = $10508&1;
                      if ($10509) {
                       label = 1401;
                       break L1;
                      }
                      $10510 = (($10507) + 18|0);
                      HEAP8[$10510>>0] = $10506;
                      __THREW__ = 0;
                      $10511 = (invoke_iii(381,($vinfos168|0),4)|0);
                      $10512 = __THREW__; __THREW__ = 0;
                      $10513 = $10512&1;
                      if ($10513) {
                       label = 1401;
                       break L1;
                      }
                      $10514 = (($10511) + 17|0);
                      HEAP8[$10514>>0] = 1;
                      $10515 = (($4) + 160|0);
                      $10516 = +HEAPF64[$10515>>3];
                      __THREW__ = 0;
                      $10517 = (invoke_iii(381,($vinfos168|0),4)|0);
                      $10518 = __THREW__; __THREW__ = 0;
                      $10519 = $10518&1;
                      if ($10519) {
                       label = 1401;
                       break L1;
                      }
                      $10520 = (($10517) + 8|0);
                      HEAPF64[$10520>>3] = $10516;
                      $10521 = (($4) + 548|0);
                      $10522 = HEAP8[$10521>>0]|0;
                      __THREW__ = 0;
                      $10523 = (invoke_iii(381,($vinfos168|0),4)|0);
                      $10524 = __THREW__; __THREW__ = 0;
                      $10525 = $10524&1;
                      if ($10525) {
                       label = 1401;
                       break L1;
                      }
                      $10526 = (($10523) + 19|0);
                      HEAP8[$10526>>0] = $10522;
                      $10527 = (($4) + 548|0);
                      $10528 = (($10527) + 1|0);
                      $10529 = HEAP8[$10528>>0]|0;
                      __THREW__ = 0;
                      $10530 = (invoke_iii(381,($vinfos168|0),4)|0);
                      $10531 = __THREW__; __THREW__ = 0;
                      $10532 = $10531&1;
                      if ($10532) {
                       label = 1401;
                       break L1;
                      }
                      $10533 = (($10530) + 19|0);
                      $10534 = (($10533) + 1|0);
                      HEAP8[$10534>>0] = $10529;
                      $10535 = (($4) + 550|0);
                      $10536 = HEAP8[$10535>>0]|0;
                      __THREW__ = 0;
                      $10537 = (invoke_iii(381,($vinfos168|0),4)|0);
                      $10538 = __THREW__; __THREW__ = 0;
                      $10539 = $10538&1;
                      if ($10539) {
                       label = 1401;
                       break L1;
                      }
                      $10540 = (($10537) + 18|0);
                      HEAP8[$10540>>0] = $10536;
                      __THREW__ = 0;
                      $10541 = (invoke_iii(381,($vinfos168|0),5)|0);
                      $10542 = __THREW__; __THREW__ = 0;
                      $10543 = $10542&1;
                      if ($10543) {
                       label = 1401;
                       break L1;
                      }
                      $10544 = (($10541) + 17|0);
                      HEAP8[$10544>>0] = 1;
                      $10545 = (($4) + 200|0);
                      $10546 = +HEAPF64[$10545>>3];
                      __THREW__ = 0;
                      $10547 = (invoke_iii(381,($vinfos168|0),5)|0);
                      $10548 = __THREW__; __THREW__ = 0;
                      $10549 = $10548&1;
                      if ($10549) {
                       label = 1401;
                       break L1;
                      }
                      $10550 = (($10547) + 8|0);
                      HEAPF64[$10550>>3] = $10546;
                      $10551 = (($4) + 551|0);
                      $10552 = HEAP8[$10551>>0]|0;
                      __THREW__ = 0;
                      $10553 = (invoke_iii(381,($vinfos168|0),5)|0);
                      $10554 = __THREW__; __THREW__ = 0;
                      $10555 = $10554&1;
                      if ($10555) {
                       label = 1401;
                       break L1;
                      }
                      $10556 = (($10553) + 19|0);
                      HEAP8[$10556>>0] = $10552;
                      $10557 = (($4) + 551|0);
                      $10558 = (($10557) + 1|0);
                      $10559 = HEAP8[$10558>>0]|0;
                      __THREW__ = 0;
                      $10560 = (invoke_iii(381,($vinfos168|0),5)|0);
                      $10561 = __THREW__; __THREW__ = 0;
                      $10562 = $10561&1;
                      if ($10562) {
                       label = 1401;
                       break L1;
                      }
                      $10563 = (($10560) + 19|0);
                      $10564 = (($10563) + 1|0);
                      HEAP8[$10564>>0] = $10559;
                      $10565 = (($4) + 553|0);
                      $10566 = HEAP8[$10565>>0]|0;
                      __THREW__ = 0;
                      $10567 = (invoke_iii(381,($vinfos168|0),5)|0);
                      $10568 = __THREW__; __THREW__ = 0;
                      $10569 = $10568&1;
                      if ($10569) {
                       label = 1401;
                       break L1;
                      }
                      $10570 = (($10567) + 18|0);
                      HEAP8[$10570>>0] = $10566;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree169|0),0);
                      $10571 = __THREW__; __THREW__ = 0;
                      $10572 = $10571&1;
                      if ($10572) {
                       label = 1401;
                       break L1;
                      }
                      $10573 = $1;
                      $10574 = HEAP32[$10573>>2]|0;
                      $10575 = (($10574) + 8|0);
                      $10576 = HEAP32[$10575>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($10576|0,($10573|0),($vinfos168|0),($vfree169|0))|0);
                      $10577 = __THREW__; __THREW__ = 0;
                      $10578 = $10577&1;
                      if ($10578) {
                       label = 1402;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree169|0));
                      $10579 = __THREW__; __THREW__ = 0;
                      $10580 = $10579&1;
                      if ($10580) {
                       label = 1401;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos168);
                      break L272;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $10581 = $ij3165;
                  $10582 = (($10581) + 1)|0;
                  $ij3165 = $10582;
                 }
                 label = 1407;
                } else {
                 label = 1407;
                }
               } while(0);
               if ((label|0) == 1407) {
                label = 0;
               }
               $10591 = $bgotonextstatement160;
               $10592 = $10591&1;
               if ($10592) {
                $bgotonextstatement170 = 1;
                $bgotonextstatement170 = 0;
                $10593 = $bgotonextstatement170;
                $10594 = $10593&1;
                if ($10594) {
                }
               }
              }
             } else {
              ;HEAP8[$j3valid174+0>>0]=0|0;
              $10595 = (($4) + 547|0);
              HEAP8[$10595>>0] = 1;
              $10596 = (($4) + 176|0);
              $10597 = +HEAPF64[$10596>>3];
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x358,$10597,-1);
              $10598 = (($x358) + 8|0);
              $10599 = HEAP8[$10598>>0]|0;
              $10600 = $10599&1;
              if (!($10600)) {
               break;
              }
              $10601 = +HEAPF64[$x358>>3];
              $x357 = $10601;
              $10602 = (($4) + 336|0);
              $10603 = +HEAPF64[$10602>>3];
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x359,$10603,-1);
              $10604 = (($x359) + 8|0);
              $10605 = HEAP8[$10604>>0]|0;
              $10606 = $10605&1;
              if (!($10606)) {
               break;
              }
              $10607 = $x357;
              $10608 = +HEAPF64[$x359>>3];
              $10609 = $10607 * $10608;
              $10610 = (($4) + 264|0);
              $10611 = +HEAPF64[$10610>>3];
              $10612 = (($4) + 360|0);
              $10613 = +HEAPF64[$10612>>3];
              $10614 = $10611 * $10613;
              $10615 = (($4) + 176|0);
              $10616 = +HEAPF64[$10615>>3];
              $10617 = -1.0 * $10616;
              $10618 = (($4) + 216|0);
              $10619 = +HEAPF64[$10618>>3];
              $10620 = $10617 * $10619;
              $10621 = $10614 + $10620;
              $10622 = $10609 * $10621;
              $10623 = (+__Z5IKabsd($10622));
              $10624 = $10623 < 1.9999999999999999E-6;
              do {
               if ($10624) {
                $10625 = (($4) + 360|0);
                $10626 = +HEAPF64[$10625>>3];
                $10627 = -1.0 * $10626;
                $10628 = $x357;
                $10629 = $10627 * $10628;
                $10630 = (+__Z5IKabsd($10629));
                $10631 = $10630 < 1.9999999999999999E-6;
                if (!($10631)) {
                 break;
                }
                $10632 = $x357;
                $10633 = +HEAPF64[$x359>>3];
                $10634 = $10632 * $10633;
                $10635 = (($4) + 264|0);
                $10636 = +HEAPF64[$10635>>3];
                $10637 = (($4) + 360|0);
                $10638 = +HEAPF64[$10637>>3];
                $10639 = $10636 * $10638;
                $10640 = (($4) + 176|0);
                $10641 = +HEAPF64[$10640>>3];
                $10642 = -1.0 * $10641;
                $10643 = (($4) + 216|0);
                $10644 = +HEAPF64[$10643>>3];
                $10645 = $10642 * $10644;
                $10646 = $10639 + $10645;
                $10647 = $10634 * $10646;
                $10648 = (+__Z5IKsqrd($10647));
                $10649 = (($4) + 360|0);
                $10650 = +HEAPF64[$10649>>3];
                $10651 = -1.0 * $10650;
                $10652 = $x357;
                $10653 = $10651 * $10652;
                $10654 = (+__Z5IKsqrd($10653));
                $10655 = $10648 + $10654;
                $10656 = $10655 - 1.0;
                $10657 = (+__Z5IKabsd($10656));
                $10658 = $10657 <= 1.9999999999999999E-6;
                if (!($10658)) {
                 break;
                }
                break L49;
               }
              } while(0);
              $10659 = $x357;
              $10660 = +HEAPF64[$x359>>3];
              $10661 = $10659 * $10660;
              $10662 = (($4) + 264|0);
              $10663 = +HEAPF64[$10662>>3];
              $10664 = (($4) + 360|0);
              $10665 = +HEAPF64[$10664>>3];
              $10666 = $10663 * $10665;
              $10667 = (($4) + 176|0);
              $10668 = +HEAPF64[$10667>>3];
              $10669 = -1.0 * $10668;
              $10670 = (($4) + 216|0);
              $10671 = +HEAPF64[$10670>>3];
              $10672 = $10669 * $10671;
              $10673 = $10666 + $10672;
              $10674 = $10661 * $10673;
              $10675 = (($4) + 360|0);
              $10676 = +HEAPF64[$10675>>3];
              $10677 = -1.0 * $10676;
              $10678 = $x357;
              $10679 = $10677 * $10678;
              $10680 = (+__Z7IKatan2dd($10674,$10679));
              HEAPF64[$j3array171>>3] = $10680;
              $10681 = +HEAPF64[$j3array171>>3];
              $10682 = (+__Z5IKsind($10681));
              HEAPF64[$sj3array173>>3] = $10682;
              $10683 = +HEAPF64[$j3array171>>3];
              $10684 = (+__Z5IKcosd($10683));
              HEAPF64[$cj3array172>>3] = $10684;
              $10685 = +HEAPF64[$j3array171>>3];
              $10686 = $10685 > 3.14159265358979;
              if ($10686) {
               $10687 = +HEAPF64[$j3array171>>3];
               $10688 = $10687 - 6.2831853071795898;
               HEAPF64[$j3array171>>3] = $10688;
              } else {
               $10689 = +HEAPF64[$j3array171>>3];
               $10690 = $10689 < -3.14159265358979;
               if ($10690) {
                $10691 = +HEAPF64[$j3array171>>3];
                $10692 = $10691 + 6.2831853071795898;
                HEAPF64[$j3array171>>3] = $10692;
               }
              }
              HEAP8[$j3valid174>>0] = 1;
              $ij3175 = 0;
              while(1) {
               $10693 = $ij3175;
               $10694 = ($10693|0)<(1);
               if (!($10694)) {
                break;
               }
               $10695 = $ij3175;
               $10696 = (($j3valid174) + ($10695)|0);
               $10697 = HEAP8[$10696>>0]|0;
               $10698 = $10697&1;
               L367: do {
                if ($10698) {
                 $10699 = $ij3175;
                 $10700 = $10699&255;
                 $10701 = (($4) + 545|0);
                 HEAP8[$10701>>0] = $10700;
                 $10702 = (($4) + 545|0);
                 $10703 = (($10702) + 1|0);
                 HEAP8[$10703>>0] = -1;
                 $10704 = $ij3175;
                 $10705 = (($10704) + 1)|0;
                 $iij3176 = $10705;
                 L370: while(1) {
                  $10706 = $iij3176;
                  $10707 = ($10706|0)<(1);
                  if (!($10707)) {
                   break;
                  }
                  $10708 = $iij3176;
                  $10709 = (($j3valid174) + ($10708)|0);
                  $10710 = HEAP8[$10709>>0]|0;
                  $10711 = $10710&1;
                  do {
                   if ($10711) {
                    $10712 = $ij3175;
                    $10713 = (($cj3array172) + ($10712<<3)|0);
                    $10714 = +HEAPF64[$10713>>3];
                    $10715 = $iij3176;
                    $10716 = (($cj3array172) + ($10715<<3)|0);
                    $10717 = +HEAPF64[$10716>>3];
                    $10718 = $10714 - $10717;
                    $10719 = (+__Z5IKabsd($10718));
                    $10720 = $10719 < 9.9999999999999995E-7;
                    if (!($10720)) {
                     break;
                    }
                    $10721 = $ij3175;
                    $10722 = (($sj3array173) + ($10721<<3)|0);
                    $10723 = +HEAPF64[$10722>>3];
                    $10724 = $iij3176;
                    $10725 = (($sj3array173) + ($10724<<3)|0);
                    $10726 = +HEAPF64[$10725>>3];
                    $10727 = $10723 - $10726;
                    $10728 = (+__Z5IKabsd($10727));
                    $10729 = $10728 < 9.9999999999999995E-7;
                    if ($10729) {
                     label = 1438;
                     break L370;
                    }
                   }
                  } while(0);
                  $10736 = $iij3176;
                  $10737 = (($10736) + 1)|0;
                  $iij3176 = $10737;
                 }
                 if ((label|0) == 1438) {
                  label = 0;
                  $10730 = $iij3176;
                  $10731 = (($j3valid174) + ($10730)|0);
                  HEAP8[$10731>>0] = 0;
                  $10732 = $iij3176;
                  $10733 = $10732&255;
                  $10734 = (($4) + 545|0);
                  $10735 = (($10734) + 1|0);
                  HEAP8[$10735>>0] = $10733;
                 }
                 $10738 = $ij3175;
                 $10739 = (($j3array171) + ($10738<<3)|0);
                 $10740 = +HEAPF64[$10739>>3];
                 $10741 = (($4) + 120|0);
                 HEAPF64[$10741>>3] = $10740;
                 $10742 = $ij3175;
                 $10743 = (($cj3array172) + ($10742<<3)|0);
                 $10744 = +HEAPF64[$10743>>3];
                 $10745 = (($4) + 128|0);
                 HEAPF64[$10745>>3] = $10744;
                 $10746 = $ij3175;
                 $10747 = (($sj3array173) + ($10746<<3)|0);
                 $10748 = +HEAPF64[$10747>>3];
                 $10749 = (($4) + 136|0);
                 HEAPF64[$10749>>3] = $10748;
                 $10750 = (($4) + 120|0);
                 $10751 = +HEAPF64[$10750>>3];
                 $10752 = (+__Z5IKsind($10751));
                 $x360 = $10752;
                 $10753 = (($4) + 120|0);
                 $10754 = +HEAPF64[$10753>>3];
                 $10755 = (+__Z5IKcosd($10754));
                 $x361 = $10755;
                 $10756 = (($4) + 208|0);
                 $10757 = +HEAPF64[$10756>>3];
                 $10758 = 1.0 * $10757;
                 $x362 = $10758;
                 $10759 = (($4) + 168|0);
                 $10760 = +HEAPF64[$10759>>3];
                 $10761 = 1.0 * $10760;
                 $x363 = $10761;
                 $10762 = (($4) + 176|0);
                 $10763 = +HEAPF64[$10762>>3];
                 $10764 = 1.0 * $10763;
                 $x364 = $10764;
                 $10765 = (($4) + 336|0);
                 $10766 = +HEAPF64[$10765>>3];
                 $10767 = $x361;
                 $10768 = $10766 * $10767;
                 $x365 = $10768;
                 $10769 = (($4) + 216|0);
                 $10770 = +HEAPF64[$10769>>3];
                 $10771 = $x361;
                 $10772 = $10770 * $10771;
                 $x366 = $10772;
                 $10773 = (($4) + 168|0);
                 $10774 = +HEAPF64[$10773>>3];
                 $10775 = $x361;
                 $10776 = $10774 * $10775;
                 $x367 = $10776;
                 $10777 = (($4) + 176|0);
                 $10778 = +HEAPF64[$10777>>3];
                 $10779 = $x361;
                 $10780 = $10778 * $10779;
                 $x368 = $10780;
                 $10781 = (($4) + 168|0);
                 $10782 = +HEAPF64[$10781>>3];
                 $10783 = $x360;
                 $10784 = $10782 * $10783;
                 $x369 = $10784;
                 $10785 = $x360;
                 $10786 = 1.0 * $10785;
                 $x370 = $10786;
                 $10787 = $x360;
                 $10788 = $x364;
                 $10789 = $10787 * $10788;
                 $x371 = $10789;
                 $10790 = $x368;
                 $10791 = (($4) + 360|0);
                 $10792 = +HEAPF64[$10791>>3];
                 $10793 = $10790 + $10792;
                 HEAPF64[$evalcond177>>3] = $10793;
                 $10794 = $x371;
                 $10795 = -1.0 * $10794;
                 $10796 = (($4) + 288|0);
                 $10797 = +HEAPF64[$10796>>3];
                 $10798 = $10795 + $10797;
                 $10799 = (($evalcond177) + 8|0);
                 HEAPF64[$10799>>3] = $10798;
                 $10800 = (($4) + 288|0);
                 $10801 = +HEAPF64[$10800>>3];
                 $10802 = $x361;
                 $10803 = $10801 * $10802;
                 $10804 = (($4) + 360|0);
                 $10805 = +HEAPF64[$10804>>3];
                 $10806 = $x360;
                 $10807 = $10805 * $10806;
                 $10808 = $10803 + $10807;
                 $10809 = (($evalcond177) + 16|0);
                 HEAPF64[$10809>>3] = $10808;
                 $10810 = (($4) + 216|0);
                 $10811 = +HEAPF64[$10810>>3];
                 $10812 = (($4) + 264|0);
                 $10813 = +HEAPF64[$10812>>3];
                 $10814 = $x361;
                 $10815 = $10813 * $10814;
                 $10816 = $10811 + $10815;
                 $10817 = (($4) + 336|0);
                 $10818 = +HEAPF64[$10817>>3];
                 $10819 = $x360;
                 $10820 = $10818 * $10819;
                 $10821 = $10816 + $10820;
                 $10822 = (($evalcond177) + 24|0);
                 HEAPF64[$10822>>3] = $10821;
                 $10823 = (($4) + 176|0);
                 $10824 = +HEAPF64[$10823>>3];
                 $10825 = (($4) + 288|0);
                 $10826 = +HEAPF64[$10825>>3];
                 $10827 = -1.0 * $10826;
                 $10828 = $x370;
                 $10829 = $10827 * $10828;
                 $10830 = $10824 + $10829;
                 $10831 = (($4) + 360|0);
                 $10832 = +HEAPF64[$10831>>3];
                 $10833 = $x361;
                 $10834 = $10832 * $10833;
                 $10835 = $10830 + $10834;
                 $10836 = (($evalcond177) + 32|0);
                 HEAPF64[$10836>>3] = $10835;
                 $10837 = $x366;
                 $10838 = (($4) + 208|0);
                 $10839 = +HEAPF64[$10838>>3];
                 $10840 = $x369;
                 $10841 = $10839 * $10840;
                 $10842 = $10837 + $10841;
                 $10843 = (($4) + 264|0);
                 $10844 = +HEAPF64[$10843>>3];
                 $10845 = $10842 + $10844;
                 $10846 = (($evalcond177) + 40|0);
                 HEAPF64[$10846>>3] = $10845;
                 $10847 = $x362;
                 $10848 = -1.0 * $10847;
                 $10849 = (($4) + 240|0);
                 $10850 = +HEAPF64[$10849>>3];
                 $10851 = $x361;
                 $10852 = $10850 * $10851;
                 $10853 = $10848 + $10852;
                 $10854 = (($4) + 312|0);
                 $10855 = +HEAPF64[$10854>>3];
                 $10856 = $x360;
                 $10857 = $10855 * $10856;
                 $10858 = $10853 + $10857;
                 $10859 = (($evalcond177) + 48|0);
                 HEAPF64[$10859>>3] = $10858;
                 $10860 = $x361;
                 $10861 = -1.0 * $10860;
                 $10862 = $x362;
                 $10863 = $10861 * $10862;
                 $10864 = (($4) + 216|0);
                 $10865 = +HEAPF64[$10864>>3];
                 $10866 = $x369;
                 $10867 = $10865 * $10866;
                 $10868 = $10863 + $10867;
                 $10869 = (($4) + 240|0);
                 $10870 = +HEAPF64[$10869>>3];
                 $10871 = $10868 + $10870;
                 $10872 = (($evalcond177) + 56|0);
                 HEAPF64[$10872>>3] = $10871;
                 $10873 = $x362;
                 $10874 = -1.0 * $10873;
                 $10875 = $x367;
                 $10876 = $10874 * $10875;
                 $10877 = (($4) + 216|0);
                 $10878 = +HEAPF64[$10877>>3];
                 $10879 = $x360;
                 $10880 = $10878 * $10879;
                 $10881 = $10876 + $10880;
                 $10882 = (($4) + 336|0);
                 $10883 = +HEAPF64[$10882>>3];
                 $10884 = $10881 + $10883;
                 $10885 = (($evalcond177) + 64|0);
                 HEAPF64[$10885>>3] = $10884;
                 $10886 = $x363;
                 $10887 = -1.0 * $10886;
                 $10888 = $x366;
                 $10889 = $10887 * $10888;
                 $10890 = $x360;
                 $10891 = -1.0 * $10890;
                 $10892 = $x362;
                 $10893 = $10891 * $10892;
                 $10894 = $10889 + $10893;
                 $10895 = (($4) + 312|0);
                 $10896 = +HEAPF64[$10895>>3];
                 $10897 = $10894 + $10896;
                 $10898 = (($evalcond177) + 72|0);
                 HEAPF64[$10898>>3] = $10897;
                 $10899 = (($4) + 240|0);
                 $10900 = +HEAPF64[$10899>>3];
                 $10901 = -1.0 * $10900;
                 $10902 = $x370;
                 $10903 = $10901 * $10902;
                 $10904 = (($4) + 216|0);
                 $10905 = +HEAPF64[$10904>>3];
                 $10906 = -1.0 * $10905;
                 $10907 = $x363;
                 $10908 = $10906 * $10907;
                 $10909 = $10903 + $10908;
                 $10910 = (($4) + 312|0);
                 $10911 = +HEAPF64[$10910>>3];
                 $10912 = $x361;
                 $10913 = $10911 * $10912;
                 $10914 = $10909 + $10913;
                 $10915 = (($evalcond177) + 80|0);
                 HEAPF64[$10915>>3] = $10914;
                 $10916 = (($4) + 168|0);
                 $10917 = +HEAPF64[$10916>>3];
                 $10918 = -1.0 * $10917;
                 $10919 = $x362;
                 $10920 = $10918 * $10919;
                 $10921 = $x365;
                 $10922 = $10920 + $10921;
                 $10923 = (($4) + 264|0);
                 $10924 = +HEAPF64[$10923>>3];
                 $10925 = -1.0 * $10924;
                 $10926 = $x370;
                 $10927 = $10925 * $10926;
                 $10928 = $10922 + $10927;
                 $10929 = (($evalcond177) + 88|0);
                 HEAPF64[$10929>>3] = $10928;
                 $10930 = (($4) + 360|0);
                 $10931 = +HEAPF64[$10930>>3];
                 $10932 = -1.0 * $10931;
                 $10933 = $x361;
                 $10934 = $10932 * $10933;
                 $10935 = $x363;
                 $10936 = $10934 * $10935;
                 $10937 = (($4) + 432|0);
                 $10938 = +HEAPF64[$10937>>3];
                 $10939 = -1.0 * $10938;
                 $10940 = $x364;
                 $10941 = $10939 * $10940;
                 $10942 = $10936 + $10941;
                 $10943 = (($4) + 288|0);
                 $10944 = +HEAPF64[$10943>>3];
                 $10945 = $x369;
                 $10946 = $10944 * $10945;
                 $10947 = $10942 + $10946;
                 $10948 = (($evalcond177) + 96|0);
                 HEAPF64[$10948>>3] = $10947;
                 $10949 = (($4) + 240|0);
                 $10950 = +HEAPF64[$10949>>3];
                 $10951 = -1.0 * $10950;
                 $10952 = $x371;
                 $10953 = $10951 * $10952;
                 $10954 = (($4) + 384|0);
                 $10955 = +HEAPF64[$10954>>3];
                 $10956 = -1.0 * $10955;
                 $10957 = $x363;
                 $10958 = $10956 * $10957;
                 $10959 = $10953 + $10958;
                 $10960 = (($4) + 312|0);
                 $10961 = +HEAPF64[$10960>>3];
                 $10962 = $x368;
                 $10963 = $10961 * $10962;
                 $10964 = $10959 + $10963;
                 $10965 = (($evalcond177) + 104|0);
                 HEAPF64[$10965>>3] = $10964;
                 $10966 = (($4) + 176|0);
                 $10967 = +HEAPF64[$10966>>3];
                 $10968 = $x365;
                 $10969 = $10967 * $10968;
                 $10970 = (($4) + 264|0);
                 $10971 = +HEAPF64[$10970>>3];
                 $10972 = -1.0 * $10971;
                 $10973 = $x371;
                 $10974 = $10972 * $10973;
                 $10975 = $10969 + $10974;
                 $10976 = (($4) + 408|0);
                 $10977 = +HEAPF64[$10976>>3];
                 $10978 = -1.0 * $10977;
                 $10979 = $x363;
                 $10980 = $10978 * $10979;
                 $10981 = $10975 + $10980;
                 $10982 = (($evalcond177) + 112|0);
                 HEAPF64[$10982>>3] = $10981;
                 $10983 = (($4) + 432|0);
                 $10984 = +HEAPF64[$10983>>3];
                 $10985 = -1.0 * $10984;
                 $10986 = $x363;
                 $10987 = $10985 * $10986;
                 $10988 = 1.0 + $10987;
                 $10989 = (($4) + 288|0);
                 $10990 = +HEAPF64[$10989>>3];
                 $10991 = -1.0 * $10990;
                 $10992 = $x371;
                 $10993 = $10991 * $10992;
                 $10994 = $10988 + $10993;
                 $10995 = (($4) + 360|0);
                 $10996 = +HEAPF64[$10995>>3];
                 $10997 = $x368;
                 $10998 = $10996 * $10997;
                 $10999 = $10994 + $10998;
                 $11000 = (($evalcond177) + 120|0);
                 HEAPF64[$11000>>3] = $10999;
                 $11001 = (($4) + 312|0);
                 $11002 = +HEAPF64[$11001>>3];
                 $11003 = -1.0 * $11002;
                 $11004 = $x361;
                 $11005 = $11003 * $11004;
                 $11006 = $x363;
                 $11007 = $11005 * $11006;
                 $11008 = (($4) + 216|0);
                 $11009 = +HEAPF64[$11008>>3];
                 $11010 = $11007 + $11009;
                 $11011 = (($4) + 384|0);
                 $11012 = +HEAPF64[$11011>>3];
                 $11013 = -1.0 * $11012;
                 $11014 = $x364;
                 $11015 = $11013 * $11014;
                 $11016 = $11010 + $11015;
                 $11017 = (($4) + 240|0);
                 $11018 = +HEAPF64[$11017>>3];
                 $11019 = $x369;
                 $11020 = $11018 * $11019;
                 $11021 = $11016 + $11020;
                 $11022 = (($evalcond177) + 128|0);
                 HEAPF64[$11022>>3] = $11021;
                 $11023 = $x363;
                 $11024 = -1.0 * $11023;
                 $11025 = $x365;
                 $11026 = $11024 * $11025;
                 $11027 = (($4) + 208|0);
                 $11028 = +HEAPF64[$11027>>3];
                 $11029 = $11026 + $11028;
                 $11030 = (($4) + 264|0);
                 $11031 = +HEAPF64[$11030>>3];
                 $11032 = $x369;
                 $11033 = $11031 * $11032;
                 $11034 = $11029 + $11033;
                 $11035 = (($4) + 408|0);
                 $11036 = +HEAPF64[$11035>>3];
                 $11037 = -1.0 * $11036;
                 $11038 = $x364;
                 $11039 = $11037 * $11038;
                 $11040 = $11034 + $11039;
                 $11041 = (($evalcond177) + 136|0);
                 HEAPF64[$11041>>3] = $11040;
                 $11042 = +HEAPF64[$evalcond177>>3];
                 $11043 = (+__Z5IKabsd($11042));
                 $11044 = $11043 > 5.0000000000000004E-6;
                 do {
                  if (!($11044)) {
                   $11045 = (($evalcond177) + 8|0);
                   $11046 = +HEAPF64[$11045>>3];
                   $11047 = (+__Z5IKabsd($11046));
                   $11048 = $11047 > 5.0000000000000004E-6;
                   if ($11048) {
                    break;
                   }
                   $11049 = (($evalcond177) + 16|0);
                   $11050 = +HEAPF64[$11049>>3];
                   $11051 = (+__Z5IKabsd($11050));
                   $11052 = $11051 > 5.0000000000000004E-6;
                   if ($11052) {
                    break;
                   }
                   $11053 = (($evalcond177) + 24|0);
                   $11054 = +HEAPF64[$11053>>3];
                   $11055 = (+__Z5IKabsd($11054));
                   $11056 = $11055 > 5.0000000000000004E-6;
                   if ($11056) {
                    break;
                   }
                   $11057 = (($evalcond177) + 32|0);
                   $11058 = +HEAPF64[$11057>>3];
                   $11059 = (+__Z5IKabsd($11058));
                   $11060 = $11059 > 5.0000000000000004E-6;
                   if ($11060) {
                    break;
                   }
                   $11061 = (($evalcond177) + 40|0);
                   $11062 = +HEAPF64[$11061>>3];
                   $11063 = (+__Z5IKabsd($11062));
                   $11064 = $11063 > 5.0000000000000004E-6;
                   if ($11064) {
                    break;
                   }
                   $11065 = (($evalcond177) + 48|0);
                   $11066 = +HEAPF64[$11065>>3];
                   $11067 = (+__Z5IKabsd($11066));
                   $11068 = $11067 > 5.0000000000000004E-6;
                   if ($11068) {
                    break;
                   }
                   $11069 = (($evalcond177) + 56|0);
                   $11070 = +HEAPF64[$11069>>3];
                   $11071 = (+__Z5IKabsd($11070));
                   $11072 = $11071 > 5.0000000000000004E-6;
                   if ($11072) {
                    break;
                   }
                   $11073 = (($evalcond177) + 64|0);
                   $11074 = +HEAPF64[$11073>>3];
                   $11075 = (+__Z5IKabsd($11074));
                   $11076 = $11075 > 5.0000000000000004E-6;
                   if ($11076) {
                    break;
                   }
                   $11077 = (($evalcond177) + 72|0);
                   $11078 = +HEAPF64[$11077>>3];
                   $11079 = (+__Z5IKabsd($11078));
                   $11080 = $11079 > 5.0000000000000004E-6;
                   if ($11080) {
                    break;
                   }
                   $11081 = (($evalcond177) + 80|0);
                   $11082 = +HEAPF64[$11081>>3];
                   $11083 = (+__Z5IKabsd($11082));
                   $11084 = $11083 > 5.0000000000000004E-6;
                   if ($11084) {
                    break;
                   }
                   $11085 = (($evalcond177) + 88|0);
                   $11086 = +HEAPF64[$11085>>3];
                   $11087 = (+__Z5IKabsd($11086));
                   $11088 = $11087 > 5.0000000000000004E-6;
                   if ($11088) {
                    break;
                   }
                   $11089 = (($evalcond177) + 96|0);
                   $11090 = +HEAPF64[$11089>>3];
                   $11091 = (+__Z5IKabsd($11090));
                   $11092 = $11091 > 5.0000000000000004E-6;
                   if ($11092) {
                    break;
                   }
                   $11093 = (($evalcond177) + 104|0);
                   $11094 = +HEAPF64[$11093>>3];
                   $11095 = (+__Z5IKabsd($11094));
                   $11096 = $11095 > 5.0000000000000004E-6;
                   if ($11096) {
                    break;
                   }
                   $11097 = (($evalcond177) + 112|0);
                   $11098 = +HEAPF64[$11097>>3];
                   $11099 = (+__Z5IKabsd($11098));
                   $11100 = $11099 > 5.0000000000000004E-6;
                   if ($11100) {
                    break;
                   }
                   $11101 = (($evalcond177) + 120|0);
                   $11102 = +HEAPF64[$11101>>3];
                   $11103 = (+__Z5IKabsd($11102));
                   $11104 = $11103 > 5.0000000000000004E-6;
                   if ($11104) {
                    break;
                   }
                   $11105 = (($evalcond177) + 128|0);
                   $11106 = +HEAPF64[$11105>>3];
                   $11107 = (+__Z5IKabsd($11106));
                   $11108 = $11107 > 5.0000000000000004E-6;
                   if ($11108) {
                    break;
                   }
                   $11109 = (($evalcond177) + 136|0);
                   $11110 = +HEAPF64[$11109>>3];
                   $11111 = (+__Z5IKabsd($11110));
                   $11112 = $11111 > 5.0000000000000004E-6;
                   if ($11112) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos178,6);
                   __THREW__ = 0;
                   $11113 = (invoke_iii(381,($vinfos178|0),0)|0);
                   $11114 = __THREW__; __THREW__ = 0;
                   $11115 = $11114&1;
                   if ($11115) {
                    label = 1495;
                    break L1;
                   }
                   $11116 = (($11113) + 17|0);
                   HEAP8[$11116>>0] = 1;
                   $11117 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $11118 = (invoke_iii(381,($vinfos178|0),0)|0);
                   $11119 = __THREW__; __THREW__ = 0;
                   $11120 = $11119&1;
                   if ($11120) {
                    label = 1495;
                    break L1;
                   }
                   $11121 = (($11118) + 8|0);
                   HEAPF64[$11121>>3] = $11117;
                   $11122 = (($4) + 536|0);
                   $11123 = HEAP8[$11122>>0]|0;
                   __THREW__ = 0;
                   $11124 = (invoke_iii(381,($vinfos178|0),0)|0);
                   $11125 = __THREW__; __THREW__ = 0;
                   $11126 = $11125&1;
                   if ($11126) {
                    label = 1495;
                    break L1;
                   }
                   $11127 = (($11124) + 19|0);
                   HEAP8[$11127>>0] = $11123;
                   $11128 = (($4) + 536|0);
                   $11129 = (($11128) + 1|0);
                   $11130 = HEAP8[$11129>>0]|0;
                   __THREW__ = 0;
                   $11131 = (invoke_iii(381,($vinfos178|0),0)|0);
                   $11132 = __THREW__; __THREW__ = 0;
                   $11133 = $11132&1;
                   if ($11133) {
                    label = 1495;
                    break L1;
                   }
                   $11134 = (($11131) + 19|0);
                   $11135 = (($11134) + 1|0);
                   HEAP8[$11135>>0] = $11130;
                   $11136 = (($4) + 538|0);
                   $11137 = HEAP8[$11136>>0]|0;
                   __THREW__ = 0;
                   $11138 = (invoke_iii(381,($vinfos178|0),0)|0);
                   $11139 = __THREW__; __THREW__ = 0;
                   $11140 = $11139&1;
                   if ($11140) {
                    label = 1495;
                    break L1;
                   }
                   $11141 = (($11138) + 18|0);
                   HEAP8[$11141>>0] = $11137;
                   __THREW__ = 0;
                   $11142 = (invoke_iii(381,($vinfos178|0),1)|0);
                   $11143 = __THREW__; __THREW__ = 0;
                   $11144 = $11143&1;
                   if ($11144) {
                    label = 1495;
                    break L1;
                   }
                   $11145 = (($11142) + 17|0);
                   HEAP8[$11145>>0] = 1;
                   $11146 = (($4) + 40|0);
                   $11147 = +HEAPF64[$11146>>3];
                   __THREW__ = 0;
                   $11148 = (invoke_iii(381,($vinfos178|0),1)|0);
                   $11149 = __THREW__; __THREW__ = 0;
                   $11150 = $11149&1;
                   if ($11150) {
                    label = 1495;
                    break L1;
                   }
                   $11151 = (($11148) + 8|0);
                   HEAPF64[$11151>>3] = $11147;
                   $11152 = (($4) + 539|0);
                   $11153 = HEAP8[$11152>>0]|0;
                   __THREW__ = 0;
                   $11154 = (invoke_iii(381,($vinfos178|0),1)|0);
                   $11155 = __THREW__; __THREW__ = 0;
                   $11156 = $11155&1;
                   if ($11156) {
                    label = 1495;
                    break L1;
                   }
                   $11157 = (($11154) + 19|0);
                   HEAP8[$11157>>0] = $11153;
                   $11158 = (($4) + 539|0);
                   $11159 = (($11158) + 1|0);
                   $11160 = HEAP8[$11159>>0]|0;
                   __THREW__ = 0;
                   $11161 = (invoke_iii(381,($vinfos178|0),1)|0);
                   $11162 = __THREW__; __THREW__ = 0;
                   $11163 = $11162&1;
                   if ($11163) {
                    label = 1495;
                    break L1;
                   }
                   $11164 = (($11161) + 19|0);
                   $11165 = (($11164) + 1|0);
                   HEAP8[$11165>>0] = $11160;
                   $11166 = (($4) + 541|0);
                   $11167 = HEAP8[$11166>>0]|0;
                   __THREW__ = 0;
                   $11168 = (invoke_iii(381,($vinfos178|0),1)|0);
                   $11169 = __THREW__; __THREW__ = 0;
                   $11170 = $11169&1;
                   if ($11170) {
                    label = 1495;
                    break L1;
                   }
                   $11171 = (($11168) + 18|0);
                   HEAP8[$11171>>0] = $11167;
                   __THREW__ = 0;
                   $11172 = (invoke_iii(381,($vinfos178|0),2)|0);
                   $11173 = __THREW__; __THREW__ = 0;
                   $11174 = $11173&1;
                   if ($11174) {
                    label = 1495;
                    break L1;
                   }
                   $11175 = (($11172) + 17|0);
                   HEAP8[$11175>>0] = 1;
                   $11176 = (($4) + 80|0);
                   $11177 = +HEAPF64[$11176>>3];
                   __THREW__ = 0;
                   $11178 = (invoke_iii(381,($vinfos178|0),2)|0);
                   $11179 = __THREW__; __THREW__ = 0;
                   $11180 = $11179&1;
                   if ($11180) {
                    label = 1495;
                    break L1;
                   }
                   $11181 = (($11178) + 8|0);
                   HEAPF64[$11181>>3] = $11177;
                   $11182 = (($4) + 542|0);
                   $11183 = HEAP8[$11182>>0]|0;
                   __THREW__ = 0;
                   $11184 = (invoke_iii(381,($vinfos178|0),2)|0);
                   $11185 = __THREW__; __THREW__ = 0;
                   $11186 = $11185&1;
                   if ($11186) {
                    label = 1495;
                    break L1;
                   }
                   $11187 = (($11184) + 19|0);
                   HEAP8[$11187>>0] = $11183;
                   $11188 = (($4) + 542|0);
                   $11189 = (($11188) + 1|0);
                   $11190 = HEAP8[$11189>>0]|0;
                   __THREW__ = 0;
                   $11191 = (invoke_iii(381,($vinfos178|0),2)|0);
                   $11192 = __THREW__; __THREW__ = 0;
                   $11193 = $11192&1;
                   if ($11193) {
                    label = 1495;
                    break L1;
                   }
                   $11194 = (($11191) + 19|0);
                   $11195 = (($11194) + 1|0);
                   HEAP8[$11195>>0] = $11190;
                   $11196 = (($4) + 544|0);
                   $11197 = HEAP8[$11196>>0]|0;
                   __THREW__ = 0;
                   $11198 = (invoke_iii(381,($vinfos178|0),2)|0);
                   $11199 = __THREW__; __THREW__ = 0;
                   $11200 = $11199&1;
                   if ($11200) {
                    label = 1495;
                    break L1;
                   }
                   $11201 = (($11198) + 18|0);
                   HEAP8[$11201>>0] = $11197;
                   __THREW__ = 0;
                   $11202 = (invoke_iii(381,($vinfos178|0),3)|0);
                   $11203 = __THREW__; __THREW__ = 0;
                   $11204 = $11203&1;
                   if ($11204) {
                    label = 1495;
                    break L1;
                   }
                   $11205 = (($11202) + 17|0);
                   HEAP8[$11205>>0] = 1;
                   $11206 = (($4) + 120|0);
                   $11207 = +HEAPF64[$11206>>3];
                   __THREW__ = 0;
                   $11208 = (invoke_iii(381,($vinfos178|0),3)|0);
                   $11209 = __THREW__; __THREW__ = 0;
                   $11210 = $11209&1;
                   if ($11210) {
                    label = 1495;
                    break L1;
                   }
                   $11211 = (($11208) + 8|0);
                   HEAPF64[$11211>>3] = $11207;
                   $11212 = (($4) + 545|0);
                   $11213 = HEAP8[$11212>>0]|0;
                   __THREW__ = 0;
                   $11214 = (invoke_iii(381,($vinfos178|0),3)|0);
                   $11215 = __THREW__; __THREW__ = 0;
                   $11216 = $11215&1;
                   if ($11216) {
                    label = 1495;
                    break L1;
                   }
                   $11217 = (($11214) + 19|0);
                   HEAP8[$11217>>0] = $11213;
                   $11218 = (($4) + 545|0);
                   $11219 = (($11218) + 1|0);
                   $11220 = HEAP8[$11219>>0]|0;
                   __THREW__ = 0;
                   $11221 = (invoke_iii(381,($vinfos178|0),3)|0);
                   $11222 = __THREW__; __THREW__ = 0;
                   $11223 = $11222&1;
                   if ($11223) {
                    label = 1495;
                    break L1;
                   }
                   $11224 = (($11221) + 19|0);
                   $11225 = (($11224) + 1|0);
                   HEAP8[$11225>>0] = $11220;
                   $11226 = (($4) + 547|0);
                   $11227 = HEAP8[$11226>>0]|0;
                   __THREW__ = 0;
                   $11228 = (invoke_iii(381,($vinfos178|0),3)|0);
                   $11229 = __THREW__; __THREW__ = 0;
                   $11230 = $11229&1;
                   if ($11230) {
                    label = 1495;
                    break L1;
                   }
                   $11231 = (($11228) + 18|0);
                   HEAP8[$11231>>0] = $11227;
                   __THREW__ = 0;
                   $11232 = (invoke_iii(381,($vinfos178|0),4)|0);
                   $11233 = __THREW__; __THREW__ = 0;
                   $11234 = $11233&1;
                   if ($11234) {
                    label = 1495;
                    break L1;
                   }
                   $11235 = (($11232) + 17|0);
                   HEAP8[$11235>>0] = 1;
                   $11236 = (($4) + 160|0);
                   $11237 = +HEAPF64[$11236>>3];
                   __THREW__ = 0;
                   $11238 = (invoke_iii(381,($vinfos178|0),4)|0);
                   $11239 = __THREW__; __THREW__ = 0;
                   $11240 = $11239&1;
                   if ($11240) {
                    label = 1495;
                    break L1;
                   }
                   $11241 = (($11238) + 8|0);
                   HEAPF64[$11241>>3] = $11237;
                   $11242 = (($4) + 548|0);
                   $11243 = HEAP8[$11242>>0]|0;
                   __THREW__ = 0;
                   $11244 = (invoke_iii(381,($vinfos178|0),4)|0);
                   $11245 = __THREW__; __THREW__ = 0;
                   $11246 = $11245&1;
                   if ($11246) {
                    label = 1495;
                    break L1;
                   }
                   $11247 = (($11244) + 19|0);
                   HEAP8[$11247>>0] = $11243;
                   $11248 = (($4) + 548|0);
                   $11249 = (($11248) + 1|0);
                   $11250 = HEAP8[$11249>>0]|0;
                   __THREW__ = 0;
                   $11251 = (invoke_iii(381,($vinfos178|0),4)|0);
                   $11252 = __THREW__; __THREW__ = 0;
                   $11253 = $11252&1;
                   if ($11253) {
                    label = 1495;
                    break L1;
                   }
                   $11254 = (($11251) + 19|0);
                   $11255 = (($11254) + 1|0);
                   HEAP8[$11255>>0] = $11250;
                   $11256 = (($4) + 550|0);
                   $11257 = HEAP8[$11256>>0]|0;
                   __THREW__ = 0;
                   $11258 = (invoke_iii(381,($vinfos178|0),4)|0);
                   $11259 = __THREW__; __THREW__ = 0;
                   $11260 = $11259&1;
                   if ($11260) {
                    label = 1495;
                    break L1;
                   }
                   $11261 = (($11258) + 18|0);
                   HEAP8[$11261>>0] = $11257;
                   __THREW__ = 0;
                   $11262 = (invoke_iii(381,($vinfos178|0),5)|0);
                   $11263 = __THREW__; __THREW__ = 0;
                   $11264 = $11263&1;
                   if ($11264) {
                    label = 1495;
                    break L1;
                   }
                   $11265 = (($11262) + 17|0);
                   HEAP8[$11265>>0] = 1;
                   $11266 = (($4) + 200|0);
                   $11267 = +HEAPF64[$11266>>3];
                   __THREW__ = 0;
                   $11268 = (invoke_iii(381,($vinfos178|0),5)|0);
                   $11269 = __THREW__; __THREW__ = 0;
                   $11270 = $11269&1;
                   if ($11270) {
                    label = 1495;
                    break L1;
                   }
                   $11271 = (($11268) + 8|0);
                   HEAPF64[$11271>>3] = $11267;
                   $11272 = (($4) + 551|0);
                   $11273 = HEAP8[$11272>>0]|0;
                   __THREW__ = 0;
                   $11274 = (invoke_iii(381,($vinfos178|0),5)|0);
                   $11275 = __THREW__; __THREW__ = 0;
                   $11276 = $11275&1;
                   if ($11276) {
                    label = 1495;
                    break L1;
                   }
                   $11277 = (($11274) + 19|0);
                   HEAP8[$11277>>0] = $11273;
                   $11278 = (($4) + 551|0);
                   $11279 = (($11278) + 1|0);
                   $11280 = HEAP8[$11279>>0]|0;
                   __THREW__ = 0;
                   $11281 = (invoke_iii(381,($vinfos178|0),5)|0);
                   $11282 = __THREW__; __THREW__ = 0;
                   $11283 = $11282&1;
                   if ($11283) {
                    label = 1495;
                    break L1;
                   }
                   $11284 = (($11281) + 19|0);
                   $11285 = (($11284) + 1|0);
                   HEAP8[$11285>>0] = $11280;
                   $11286 = (($4) + 553|0);
                   $11287 = HEAP8[$11286>>0]|0;
                   __THREW__ = 0;
                   $11288 = (invoke_iii(381,($vinfos178|0),5)|0);
                   $11289 = __THREW__; __THREW__ = 0;
                   $11290 = $11289&1;
                   if ($11290) {
                    label = 1495;
                    break L1;
                   }
                   $11291 = (($11288) + 18|0);
                   HEAP8[$11291>>0] = $11287;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree179|0),0);
                   $11292 = __THREW__; __THREW__ = 0;
                   $11293 = $11292&1;
                   if ($11293) {
                    label = 1495;
                    break L1;
                   }
                   $11294 = $1;
                   $11295 = HEAP32[$11294>>2]|0;
                   $11296 = (($11295) + 8|0);
                   $11297 = HEAP32[$11296>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($11297|0,($11294|0),($vinfos178|0),($vfree179|0))|0);
                   $11298 = __THREW__; __THREW__ = 0;
                   $11299 = $11298&1;
                   if ($11299) {
                    label = 1496;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree179|0));
                   $11300 = __THREW__; __THREW__ = 0;
                   $11301 = $11300&1;
                   if ($11301) {
                    label = 1495;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos178);
                   break L367;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $11302 = $ij3175;
               $11303 = (($11302) + 1)|0;
               $ij3175 = $11303;
              }
             }
            }
            break;
           }
          }
         } else {
         }
        } while(0);
        $11963 = $ij5144;
        $11964 = (($11963) + 1)|0;
        $ij5144 = $11964;
       }
      }
     }
     if ((label|0) == 23) {
      label = 0;
      $459 = (($4) + 8|0);
      $460 = +HEAPF64[$459>>3];
      $461 = 1.0 * $460;
      $x114 = $461;
      $462 = (($4) + 344|0);
      $463 = +HEAPF64[$462>>3];
      $464 = (($4) + 16|0);
      $465 = +HEAPF64[$464>>3];
      $466 = $463 * $465;
      $x115 = $466;
      $467 = (($4) + 56|0);
      $468 = +HEAPF64[$467>>3];
      $469 = (($4) + 96|0);
      $470 = +HEAPF64[$469>>3];
      $471 = $468 * $470;
      $x116 = $471;
      $472 = (($4) + 320|0);
      $473 = +HEAPF64[$472>>3];
      $474 = (($4) + 16|0);
      $475 = +HEAPF64[$474>>3];
      $476 = $473 * $475;
      $x117 = $476;
      $477 = (($4) + 8|0);
      $478 = +HEAPF64[$477>>3];
      $479 = (($4) + 248|0);
      $480 = +HEAPF64[$479>>3];
      $481 = $478 * $480;
      $x118 = $481;
      $482 = (($4) + 48|0);
      $483 = +HEAPF64[$482>>3];
      $484 = (($4) + 88|0);
      $485 = +HEAPF64[$484>>3];
      $486 = $483 * $485;
      $x119 = $486;
      $487 = (($4) + 8|0);
      $488 = +HEAPF64[$487>>3];
      $489 = (($4) + 272|0);
      $490 = +HEAPF64[$489>>3];
      $491 = $488 * $490;
      $x120 = $491;
      $492 = (($4) + 368|0);
      $493 = +HEAPF64[$492>>3];
      $494 = (($4) + 16|0);
      $495 = +HEAPF64[$494>>3];
      $496 = $493 * $495;
      $x121 = $496;
      $497 = (($4) + 8|0);
      $498 = +HEAPF64[$497>>3];
      $499 = (($4) + 296|0);
      $500 = +HEAPF64[$499>>3];
      $501 = $498 * $500;
      $x122 = $501;
      $502 = $x119;
      $503 = $x116;
      $504 = -1.0 * $503;
      $505 = $502 + $504;
      $x123 = $505;
      $506 = $x116;
      $507 = $x119;
      $508 = -1.0 * $507;
      $509 = $506 + $508;
      $x124 = $509;
      $510 = (($4) + 16|0);
      $511 = +HEAPF64[$510>>3];
      $512 = $x124;
      $513 = $511 * $512;
      $x125 = $513;
      $514 = $x98;
      $x126 = $514;
      $515 = (($4) + 8|0);
      $516 = +HEAPF64[$515>>3];
      $517 = $x126;
      $518 = $516 * $517;
      $x127 = $518;
      $519 = (($4) + 248|0);
      $520 = +HEAPF64[$519>>3];
      $521 = (($4) + 16|0);
      $522 = +HEAPF64[$521>>3];
      $523 = $520 * $522;
      $524 = (($4) + 320|0);
      $525 = +HEAPF64[$524>>3];
      $526 = -1.0 * $525;
      $527 = $x114;
      $528 = $526 * $527;
      $529 = $523 + $528;
      $530 = (($4) + 240|0);
      HEAPF64[$530>>3] = $529;
      $531 = (($4) + 272|0);
      $532 = +HEAPF64[$531>>3];
      $533 = (($4) + 16|0);
      $534 = +HEAPF64[$533>>3];
      $535 = $532 * $534;
      $536 = (($4) + 344|0);
      $537 = +HEAPF64[$536>>3];
      $538 = -1.0 * $537;
      $539 = $x114;
      $540 = $538 * $539;
      $541 = $535 + $540;
      $542 = (($4) + 264|0);
      HEAPF64[$542>>3] = $541;
      $543 = (($4) + 368|0);
      $544 = +HEAPF64[$543>>3];
      $545 = -1.0 * $544;
      $546 = $x114;
      $547 = $545 * $546;
      $548 = (($4) + 296|0);
      $549 = +HEAPF64[$548>>3];
      $550 = (($4) + 16|0);
      $551 = +HEAPF64[$550>>3];
      $552 = $549 * $551;
      $553 = $547 + $552;
      $554 = (($4) + 288|0);
      HEAPF64[$554>>3] = $553;
      $555 = $x117;
      $556 = $x126;
      $557 = $555 * $556;
      $558 = (($4) + 392|0);
      $559 = +HEAPF64[$558>>3];
      $560 = $x123;
      $561 = $559 * $560;
      $562 = $557 + $561;
      $563 = $x118;
      $564 = $x126;
      $565 = $563 * $564;
      $566 = $562 + $565;
      $567 = (($4) + 312|0);
      HEAPF64[$567>>3] = $566;
      $568 = (($4) + 416|0);
      $569 = +HEAPF64[$568>>3];
      $570 = $x123;
      $571 = $569 * $570;
      $572 = $x120;
      $573 = $x126;
      $574 = $572 * $573;
      $575 = $571 + $574;
      $576 = $x115;
      $577 = $x126;
      $578 = $576 * $577;
      $579 = $575 + $578;
      $580 = (($4) + 336|0);
      HEAPF64[$580>>3] = $579;
      $581 = $x121;
      $582 = $x126;
      $583 = $581 * $582;
      $584 = (($4) + 440|0);
      $585 = +HEAPF64[$584>>3];
      $586 = $x123;
      $587 = $585 * $586;
      $588 = $583 + $587;
      $589 = $x122;
      $590 = $x126;
      $591 = $589 * $590;
      $592 = $588 + $591;
      $593 = (($4) + 360|0);
      HEAPF64[$593>>3] = $592;
      $594 = $x117;
      $595 = $x124;
      $596 = $594 * $595;
      $597 = (($4) + 392|0);
      $598 = +HEAPF64[$597>>3];
      $599 = $x126;
      $600 = $598 * $599;
      $601 = $596 + $600;
      $602 = $x118;
      $603 = $x124;
      $604 = $602 * $603;
      $605 = $601 + $604;
      $606 = (($4) + 384|0);
      HEAPF64[$606>>3] = $605;
      $607 = (($4) + 416|0);
      $608 = +HEAPF64[$607>>3];
      $609 = $x126;
      $610 = $608 * $609;
      $611 = $x120;
      $612 = $x124;
      $613 = $611 * $612;
      $614 = $610 + $613;
      $615 = $x115;
      $616 = $x124;
      $617 = $615 * $616;
      $618 = $614 + $617;
      $619 = (($4) + 408|0);
      HEAPF64[$619>>3] = $618;
      $620 = $x121;
      $621 = $x124;
      $622 = $620 * $621;
      $623 = (($4) + 440|0);
      $624 = +HEAPF64[$623>>3];
      $625 = $x126;
      $626 = $624 * $625;
      $627 = $622 + $626;
      $628 = $x122;
      $629 = $x124;
      $630 = $628 * $629;
      $631 = $627 + $630;
      $632 = (($4) + 432|0);
      HEAPF64[$632>>3] = $631;
      $633 = (($4) + 176|0);
      $634 = +HEAPF64[$633>>3];
      HEAPF64[$j3eval>>3] = $634;
      $635 = +HEAPF64[$j3eval>>3];
      $636 = (+__Z5IKabsd($635));
      $637 = $636 < 9.9999999999999995E-7;
      if ($637) {
       $bgotonextstatement = 1;
       $638 = (($4) + 160|0);
       $639 = +HEAPF64[$638>>3];
       $640 = (+__Z5IKabsd($639));
       $641 = 3.14159265358979 + $640;
       $642 = (+__Z6IKfmoddd($641,6.2831853071795898));
       $643 = -3.14159265358979 + $642;
       HEAPF64[$evalcond>>3] = $643;
       $644 = (($4) + 432|0);
       $645 = +HEAPF64[$644>>3];
       $646 = -1.0 + $645;
       $647 = (($evalcond) + 8|0);
       HEAPF64[$647>>3] = $646;
       $648 = (($4) + 360|0);
       $649 = +HEAPF64[$648>>3];
       $650 = (($evalcond) + 16|0);
       HEAPF64[$650>>3] = $649;
       $651 = (($4) + 288|0);
       $652 = +HEAPF64[$651>>3];
       $653 = (($evalcond) + 24|0);
       HEAPF64[$653>>3] = $652;
       $654 = (($4) + 384|0);
       $655 = +HEAPF64[$654>>3];
       $656 = (($evalcond) + 32|0);
       HEAPF64[$656>>3] = $655;
       $657 = (($4) + 408|0);
       $658 = +HEAPF64[$657>>3];
       $659 = (($evalcond) + 40|0);
       HEAPF64[$659>>3] = $658;
       $660 = +HEAPF64[$evalcond>>3];
       $661 = (+__Z5IKabsd($660));
       $662 = $661 < 9.9999999999999995E-7;
       do {
        if ($662) {
         $663 = (($evalcond) + 8|0);
         $664 = +HEAPF64[$663>>3];
         $665 = (+__Z5IKabsd($664));
         $666 = $665 < 9.9999999999999995E-7;
         if ($666) {
          $667 = (($evalcond) + 16|0);
          $668 = +HEAPF64[$667>>3];
          $669 = (+__Z5IKabsd($668));
          $670 = $669 < 9.9999999999999995E-7;
          if ($670) {
           $671 = (($evalcond) + 24|0);
           $672 = +HEAPF64[$671>>3];
           $673 = (+__Z5IKabsd($672));
           $674 = $673 < 9.9999999999999995E-7;
           if ($674) {
            $675 = (($evalcond) + 32|0);
            $676 = +HEAPF64[$675>>3];
            $677 = (+__Z5IKabsd($676));
            $678 = $677 < 9.9999999999999995E-7;
            if ($678) {
             $679 = (($evalcond) + 40|0);
             $680 = +HEAPF64[$679>>3];
             $681 = (+__Z5IKabsd($680));
             $682 = $681 < 9.9999999999999995E-7;
             if ($682) {
              $bgotonextstatement = 0;
              ;HEAP8[$j3valid+0>>0]=0|0;HEAP8[$j3valid+1>>0]=0|0;
              $683 = (($4) + 547|0);
              HEAP8[$683>>0] = 2;
              $684 = (($4) + 288|0);
              $685 = +HEAPF64[$684>>3];
              $686 = (($4) + 360|0);
              $687 = +HEAPF64[$686>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x129,$685,$687,1.9999999999999999E-6);
              $688 = (($x129) + 8|0);
              $689 = HEAP8[$688>>0]|0;
              $690 = $689&1;
              if (!($690)) {
               break;
              }
              $691 = +HEAPF64[$x129>>3];
              $x128 = $691;
              $692 = $x128;
              $693 = -1.0 * $692;
              HEAPF64[$j3array>>3] = $693;
              $694 = +HEAPF64[$j3array>>3];
              $695 = (+__Z5IKsind($694));
              HEAPF64[$sj3array>>3] = $695;
              $696 = +HEAPF64[$j3array>>3];
              $697 = (+__Z5IKcosd($696));
              HEAPF64[$cj3array>>3] = $697;
              $698 = $x128;
              $699 = -1.0 * $698;
              $700 = 3.14159265358979 + $699;
              $701 = (($j3array) + 8|0);
              HEAPF64[$701>>3] = $700;
              $702 = (($j3array) + 8|0);
              $703 = +HEAPF64[$702>>3];
              $704 = (+__Z5IKsind($703));
              $705 = (($sj3array) + 8|0);
              HEAPF64[$705>>3] = $704;
              $706 = (($j3array) + 8|0);
              $707 = +HEAPF64[$706>>3];
              $708 = (+__Z5IKcosd($707));
              $709 = (($cj3array) + 8|0);
              HEAPF64[$709>>3] = $708;
              $710 = +HEAPF64[$j3array>>3];
              $711 = $710 > 3.14159265358979;
              if ($711) {
               $712 = +HEAPF64[$j3array>>3];
               $713 = $712 - 6.2831853071795898;
               HEAPF64[$j3array>>3] = $713;
              } else {
               $714 = +HEAPF64[$j3array>>3];
               $715 = $714 < -3.14159265358979;
               if ($715) {
                $716 = +HEAPF64[$j3array>>3];
                $717 = $716 + 6.2831853071795898;
                HEAPF64[$j3array>>3] = $717;
               }
              }
              HEAP8[$j3valid>>0] = 1;
              $718 = (($j3array) + 8|0);
              $719 = +HEAPF64[$718>>3];
              $720 = $719 > 3.14159265358979;
              if ($720) {
               $721 = (($j3array) + 8|0);
               $722 = +HEAPF64[$721>>3];
               $723 = $722 - 6.2831853071795898;
               HEAPF64[$721>>3] = $723;
              } else {
               $724 = (($j3array) + 8|0);
               $725 = +HEAPF64[$724>>3];
               $726 = $725 < -3.14159265358979;
               if ($726) {
                $727 = (($j3array) + 8|0);
                $728 = +HEAPF64[$727>>3];
                $729 = $728 + 6.2831853071795898;
                HEAPF64[$727>>3] = $729;
               }
              }
              $730 = (($j3valid) + 1|0);
              HEAP8[$730>>0] = 1;
              $ij3 = 0;
              while(1) {
               $731 = $ij3;
               $732 = ($731|0)<(2);
               if (!($732)) {
                break;
               }
               $733 = $ij3;
               $734 = (($j3valid) + ($733)|0);
               $735 = HEAP8[$734>>0]|0;
               $736 = $735&1;
               L473: do {
                if ($736) {
                 $737 = $ij3;
                 $738 = $737&255;
                 $739 = (($4) + 545|0);
                 HEAP8[$739>>0] = $738;
                 $740 = (($4) + 545|0);
                 $741 = (($740) + 1|0);
                 HEAP8[$741>>0] = -1;
                 $742 = $ij3;
                 $743 = (($742) + 1)|0;
                 $iij3 = $743;
                 L476: while(1) {
                  $744 = $iij3;
                  $745 = ($744|0)<(2);
                  if (!($745)) {
                   break;
                  }
                  $746 = $iij3;
                  $747 = (($j3valid) + ($746)|0);
                  $748 = HEAP8[$747>>0]|0;
                  $749 = $748&1;
                  do {
                   if ($749) {
                    $750 = $ij3;
                    $751 = (($cj3array) + ($750<<3)|0);
                    $752 = +HEAPF64[$751>>3];
                    $753 = $iij3;
                    $754 = (($cj3array) + ($753<<3)|0);
                    $755 = +HEAPF64[$754>>3];
                    $756 = $752 - $755;
                    $757 = (+__Z5IKabsd($756));
                    $758 = $757 < 9.9999999999999995E-7;
                    if (!($758)) {
                     break;
                    }
                    $759 = $ij3;
                    $760 = (($sj3array) + ($759<<3)|0);
                    $761 = +HEAPF64[$760>>3];
                    $762 = $iij3;
                    $763 = (($sj3array) + ($762<<3)|0);
                    $764 = +HEAPF64[$763>>3];
                    $765 = $761 - $764;
                    $766 = (+__Z5IKabsd($765));
                    $767 = $766 < 9.9999999999999995E-7;
                    if ($767) {
                     label = 52;
                     break L476;
                    }
                   }
                  } while(0);
                  $774 = $iij3;
                  $775 = (($774) + 1)|0;
                  $iij3 = $775;
                 }
                 if ((label|0) == 52) {
                  label = 0;
                  $768 = $iij3;
                  $769 = (($j3valid) + ($768)|0);
                  HEAP8[$769>>0] = 0;
                  $770 = $iij3;
                  $771 = $770&255;
                  $772 = (($4) + 545|0);
                  $773 = (($772) + 1|0);
                  HEAP8[$773>>0] = $771;
                 }
                 $776 = $ij3;
                 $777 = (($j3array) + ($776<<3)|0);
                 $778 = +HEAPF64[$777>>3];
                 $779 = (($4) + 120|0);
                 HEAPF64[$779>>3] = $778;
                 $780 = $ij3;
                 $781 = (($cj3array) + ($780<<3)|0);
                 $782 = +HEAPF64[$781>>3];
                 $783 = (($4) + 128|0);
                 HEAPF64[$783>>3] = $782;
                 $784 = $ij3;
                 $785 = (($sj3array) + ($784<<3)|0);
                 $786 = +HEAPF64[$785>>3];
                 $787 = (($4) + 136|0);
                 HEAPF64[$787>>3] = $786;
                 $788 = (($4) + 288|0);
                 $789 = +HEAPF64[$788>>3];
                 $790 = -1.0 * $789;
                 $791 = (($4) + 120|0);
                 $792 = +HEAPF64[$791>>3];
                 $793 = (+__Z5IKsind($792));
                 $794 = $790 * $793;
                 $795 = (($4) + 360|0);
                 $796 = +HEAPF64[$795>>3];
                 $797 = (($4) + 120|0);
                 $798 = +HEAPF64[$797>>3];
                 $799 = (+__Z5IKcosd($798));
                 $800 = $796 * $799;
                 $801 = $794 + $800;
                 HEAPF64[$evalcond1>>3] = $801;
                 $802 = +HEAPF64[$evalcond1>>3];
                 $803 = (+__Z5IKabsd($802));
                 $804 = $803 > 5.0000000000000004E-6;
                 if ($804) {
                  break;
                 }
                 ;HEAP8[$j5valid+0>>0]=0|0;
                 $805 = (($4) + 553|0);
                 HEAP8[$805>>0] = 1;
                 $806 = (($4) + 264|0);
                 $807 = +HEAPF64[$806>>3];
                 $808 = 1.0 * $807;
                 $x130 = $808;
                 $809 = (($4) + 128|0);
                 $810 = +HEAPF64[$809>>3];
                 $811 = -1.0 * $810;
                 $812 = $x130;
                 $813 = $811 * $812;
                 $814 = (($4) + 240|0);
                 $815 = +HEAPF64[$814>>3];
                 $816 = -1.0 * $815;
                 $817 = (($4) + 136|0);
                 $818 = +HEAPF64[$817>>3];
                 $819 = $816 * $818;
                 $820 = $813 + $819;
                 $821 = (+__Z5IKabsd($820));
                 $822 = $821 < 1.9999999999999999E-6;
                 do {
                  if ($822) {
                   $823 = (($4) + 136|0);
                   $824 = +HEAPF64[$823>>3];
                   $825 = -1.0 * $824;
                   $826 = $x130;
                   $827 = $825 * $826;
                   $828 = (($4) + 128|0);
                   $829 = +HEAPF64[$828>>3];
                   $830 = (($4) + 240|0);
                   $831 = +HEAPF64[$830>>3];
                   $832 = $829 * $831;
                   $833 = $827 + $832;
                   $834 = (+__Z5IKabsd($833));
                   $835 = $834 < 1.9999999999999999E-6;
                   if (!($835)) {
                    break;
                   }
                   $836 = (($4) + 128|0);
                   $837 = +HEAPF64[$836>>3];
                   $838 = -1.0 * $837;
                   $839 = $x130;
                   $840 = $838 * $839;
                   $841 = (($4) + 240|0);
                   $842 = +HEAPF64[$841>>3];
                   $843 = -1.0 * $842;
                   $844 = (($4) + 136|0);
                   $845 = +HEAPF64[$844>>3];
                   $846 = $843 * $845;
                   $847 = $840 + $846;
                   $848 = (+__Z5IKsqrd($847));
                   $849 = (($4) + 136|0);
                   $850 = +HEAPF64[$849>>3];
                   $851 = -1.0 * $850;
                   $852 = $x130;
                   $853 = $851 * $852;
                   $854 = (($4) + 128|0);
                   $855 = +HEAPF64[$854>>3];
                   $856 = (($4) + 240|0);
                   $857 = +HEAPF64[$856>>3];
                   $858 = $855 * $857;
                   $859 = $853 + $858;
                   $860 = (+__Z5IKsqrd($859));
                   $861 = $848 + $860;
                   $862 = $861 - 1.0;
                   $863 = (+__Z5IKabsd($862));
                   $864 = $863 <= 1.9999999999999999E-6;
                   if (!($864)) {
                    break;
                   }
                   break L473;
                  }
                 } while(0);
                 $865 = (($4) + 128|0);
                 $866 = +HEAPF64[$865>>3];
                 $867 = -1.0 * $866;
                 $868 = $x130;
                 $869 = $867 * $868;
                 $870 = (($4) + 240|0);
                 $871 = +HEAPF64[$870>>3];
                 $872 = -1.0 * $871;
                 $873 = (($4) + 136|0);
                 $874 = +HEAPF64[$873>>3];
                 $875 = $872 * $874;
                 $876 = $869 + $875;
                 $877 = (($4) + 136|0);
                 $878 = +HEAPF64[$877>>3];
                 $879 = -1.0 * $878;
                 $880 = $x130;
                 $881 = $879 * $880;
                 $882 = (($4) + 128|0);
                 $883 = +HEAPF64[$882>>3];
                 $884 = (($4) + 240|0);
                 $885 = +HEAPF64[$884>>3];
                 $886 = $883 * $885;
                 $887 = $881 + $886;
                 $888 = (+__Z7IKatan2dd($876,$887));
                 HEAPF64[$j5array>>3] = $888;
                 $889 = +HEAPF64[$j5array>>3];
                 $890 = (+__Z5IKsind($889));
                 HEAPF64[$sj5array>>3] = $890;
                 $891 = +HEAPF64[$j5array>>3];
                 $892 = (+__Z5IKcosd($891));
                 HEAPF64[$cj5array>>3] = $892;
                 $893 = +HEAPF64[$j5array>>3];
                 $894 = $893 > 3.14159265358979;
                 if ($894) {
                  $895 = +HEAPF64[$j5array>>3];
                  $896 = $895 - 6.2831853071795898;
                  HEAPF64[$j5array>>3] = $896;
                 } else {
                  $897 = +HEAPF64[$j5array>>3];
                  $898 = $897 < -3.14159265358979;
                  if ($898) {
                   $899 = +HEAPF64[$j5array>>3];
                   $900 = $899 + 6.2831853071795898;
                   HEAPF64[$j5array>>3] = $900;
                  }
                 }
                 HEAP8[$j5valid>>0] = 1;
                 $ij5 = 0;
                 while(1) {
                  $901 = $ij5;
                  $902 = ($901|0)<(1);
                  if (!($902)) {
                   break;
                  }
                  $903 = $ij5;
                  $904 = (($j5valid) + ($903)|0);
                  $905 = HEAP8[$904>>0]|0;
                  $906 = $905&1;
                  L505: do {
                   if ($906) {
                    $907 = $ij5;
                    $908 = $907&255;
                    $909 = (($4) + 551|0);
                    HEAP8[$909>>0] = $908;
                    $910 = (($4) + 551|0);
                    $911 = (($910) + 1|0);
                    HEAP8[$911>>0] = -1;
                    $912 = $ij5;
                    $913 = (($912) + 1)|0;
                    $iij5 = $913;
                    L508: while(1) {
                     $914 = $iij5;
                     $915 = ($914|0)<(1);
                     if (!($915)) {
                      break;
                     }
                     $916 = $iij5;
                     $917 = (($j5valid) + ($916)|0);
                     $918 = HEAP8[$917>>0]|0;
                     $919 = $918&1;
                     do {
                      if ($919) {
                       $920 = $ij5;
                       $921 = (($cj5array) + ($920<<3)|0);
                       $922 = +HEAPF64[$921>>3];
                       $923 = $iij5;
                       $924 = (($cj5array) + ($923<<3)|0);
                       $925 = +HEAPF64[$924>>3];
                       $926 = $922 - $925;
                       $927 = (+__Z5IKabsd($926));
                       $928 = $927 < 9.9999999999999995E-7;
                       if (!($928)) {
                        break;
                       }
                       $929 = $ij5;
                       $930 = (($sj5array) + ($929<<3)|0);
                       $931 = +HEAPF64[$930>>3];
                       $932 = $iij5;
                       $933 = (($sj5array) + ($932<<3)|0);
                       $934 = +HEAPF64[$933>>3];
                       $935 = $931 - $934;
                       $936 = (+__Z5IKabsd($935));
                       $937 = $936 < 9.9999999999999995E-7;
                       if ($937) {
                        label = 75;
                        break L508;
                       }
                      }
                     } while(0);
                     $944 = $iij5;
                     $945 = (($944) + 1)|0;
                     $iij5 = $945;
                    }
                    if ((label|0) == 75) {
                     label = 0;
                     $938 = $iij5;
                     $939 = (($j5valid) + ($938)|0);
                     HEAP8[$939>>0] = 0;
                     $940 = $iij5;
                     $941 = $940&255;
                     $942 = (($4) + 551|0);
                     $943 = (($942) + 1|0);
                     HEAP8[$943>>0] = $941;
                    }
                    $946 = $ij5;
                    $947 = (($j5array) + ($946<<3)|0);
                    $948 = +HEAPF64[$947>>3];
                    $949 = (($4) + 200|0);
                    HEAPF64[$949>>3] = $948;
                    $950 = $ij5;
                    $951 = (($cj5array) + ($950<<3)|0);
                    $952 = +HEAPF64[$951>>3];
                    $953 = (($4) + 208|0);
                    HEAPF64[$953>>3] = $952;
                    $954 = $ij5;
                    $955 = (($sj5array) + ($954<<3)|0);
                    $956 = +HEAPF64[$955>>3];
                    $957 = (($4) + 216|0);
                    HEAPF64[$957>>3] = $956;
                    $958 = (($4) + 200|0);
                    $959 = +HEAPF64[$958>>3];
                    $960 = (+__Z5IKsind($959));
                    $x131 = $960;
                    $961 = (($4) + 200|0);
                    $962 = +HEAPF64[$961>>3];
                    $963 = (+__Z5IKcosd($962));
                    $x132 = $963;
                    $964 = (($4) + 136|0);
                    $965 = +HEAPF64[$964>>3];
                    $966 = 1.0 * $965;
                    $x133 = $966;
                    $967 = (($4) + 136|0);
                    $968 = +HEAPF64[$967>>3];
                    $969 = $x131;
                    $970 = $968 * $969;
                    $x134 = $970;
                    $971 = $x132;
                    $972 = 1.0 * $971;
                    $x135 = $972;
                    $973 = $x131;
                    $974 = 1.0 * $973;
                    $x136 = $974;
                    $975 = (($4) + 128|0);
                    $976 = +HEAPF64[$975>>3];
                    $977 = $x135;
                    $978 = $976 * $977;
                    $x137 = $978;
                    $979 = (($4) + 336|0);
                    $980 = +HEAPF64[$979>>3];
                    $981 = (($4) + 136|0);
                    $982 = +HEAPF64[$981>>3];
                    $983 = $980 * $982;
                    $984 = $x131;
                    $985 = $983 + $984;
                    $986 = (($4) + 128|0);
                    $987 = +HEAPF64[$986>>3];
                    $988 = (($4) + 264|0);
                    $989 = +HEAPF64[$988>>3];
                    $990 = $987 * $989;
                    $991 = $985 + $990;
                    HEAPF64[$evalcond2>>3] = $991;
                    $992 = (($4) + 312|0);
                    $993 = +HEAPF64[$992>>3];
                    $994 = (($4) + 136|0);
                    $995 = +HEAPF64[$994>>3];
                    $996 = $993 * $995;
                    $997 = $x135;
                    $998 = -1.0 * $997;
                    $999 = $996 + $998;
                    $1000 = (($4) + 128|0);
                    $1001 = +HEAPF64[$1000>>3];
                    $1002 = (($4) + 240|0);
                    $1003 = +HEAPF64[$1002>>3];
                    $1004 = $1001 * $1003;
                    $1005 = $999 + $1004;
                    $1006 = (($evalcond2) + 8|0);
                    HEAPF64[$1006>>3] = $1005;
                    $1007 = (($4) + 128|0);
                    $1008 = +HEAPF64[$1007>>3];
                    $1009 = $x131;
                    $1010 = $1008 * $1009;
                    $1011 = (($4) + 136|0);
                    $1012 = +HEAPF64[$1011>>3];
                    $1013 = $x132;
                    $1014 = $1012 * $1013;
                    $1015 = $1010 + $1014;
                    $1016 = (($4) + 264|0);
                    $1017 = +HEAPF64[$1016>>3];
                    $1018 = $1015 + $1017;
                    $1019 = (($evalcond2) + 16|0);
                    HEAPF64[$1019>>3] = $1018;
                    $1020 = $x134;
                    $1021 = $x137;
                    $1022 = -1.0 * $1021;
                    $1023 = $1020 + $1022;
                    $1024 = (($4) + 240|0);
                    $1025 = +HEAPF64[$1024>>3];
                    $1026 = $1023 + $1025;
                    $1027 = (($evalcond2) + 24|0);
                    HEAPF64[$1027>>3] = $1026;
                    $1028 = $x134;
                    $1029 = $x137;
                    $1030 = -1.0 * $1029;
                    $1031 = $1028 + $1030;
                    $1032 = (($4) + 336|0);
                    $1033 = +HEAPF64[$1032>>3];
                    $1034 = $1031 + $1033;
                    $1035 = (($evalcond2) + 32|0);
                    HEAPF64[$1035>>3] = $1034;
                    $1036 = (($4) + 240|0);
                    $1037 = +HEAPF64[$1036>>3];
                    $1038 = -1.0 * $1037;
                    $1039 = $x133;
                    $1040 = $1038 * $1039;
                    $1041 = $x136;
                    $1042 = -1.0 * $1041;
                    $1043 = $1040 + $1042;
                    $1044 = (($4) + 128|0);
                    $1045 = +HEAPF64[$1044>>3];
                    $1046 = (($4) + 312|0);
                    $1047 = +HEAPF64[$1046>>3];
                    $1048 = $1045 * $1047;
                    $1049 = $1043 + $1048;
                    $1050 = (($evalcond2) + 40|0);
                    HEAPF64[$1050>>3] = $1049;
                    $1051 = (($4) + 264|0);
                    $1052 = +HEAPF64[$1051>>3];
                    $1053 = -1.0 * $1052;
                    $1054 = $x133;
                    $1055 = $1053 * $1054;
                    $1056 = $x135;
                    $1057 = -1.0 * $1056;
                    $1058 = $1055 + $1057;
                    $1059 = (($4) + 128|0);
                    $1060 = +HEAPF64[$1059>>3];
                    $1061 = (($4) + 336|0);
                    $1062 = +HEAPF64[$1061>>3];
                    $1063 = $1060 * $1062;
                    $1064 = $1058 + $1063;
                    $1065 = (($evalcond2) + 48|0);
                    HEAPF64[$1065>>3] = $1064;
                    $1066 = (($4) + 128|0);
                    $1067 = +HEAPF64[$1066>>3];
                    $1068 = -1.0 * $1067;
                    $1069 = $x136;
                    $1070 = $1068 * $1069;
                    $1071 = $x132;
                    $1072 = -1.0 * $1071;
                    $1073 = $x133;
                    $1074 = $1072 * $1073;
                    $1075 = $1070 + $1074;
                    $1076 = (($4) + 312|0);
                    $1077 = +HEAPF64[$1076>>3];
                    $1078 = $1075 + $1077;
                    $1079 = (($evalcond2) + 56|0);
                    HEAPF64[$1079>>3] = $1078;
                    $1080 = +HEAPF64[$evalcond2>>3];
                    $1081 = (+__Z5IKabsd($1080));
                    $1082 = $1081 > 5.0000000000000004E-6;
                    do {
                     if (!($1082)) {
                      $1083 = (($evalcond2) + 8|0);
                      $1084 = +HEAPF64[$1083>>3];
                      $1085 = (+__Z5IKabsd($1084));
                      $1086 = $1085 > 5.0000000000000004E-6;
                      if ($1086) {
                       break;
                      }
                      $1087 = (($evalcond2) + 16|0);
                      $1088 = +HEAPF64[$1087>>3];
                      $1089 = (+__Z5IKabsd($1088));
                      $1090 = $1089 > 5.0000000000000004E-6;
                      if ($1090) {
                       break;
                      }
                      $1091 = (($evalcond2) + 24|0);
                      $1092 = +HEAPF64[$1091>>3];
                      $1093 = (+__Z5IKabsd($1092));
                      $1094 = $1093 > 5.0000000000000004E-6;
                      if ($1094) {
                       break;
                      }
                      $1095 = (($evalcond2) + 32|0);
                      $1096 = +HEAPF64[$1095>>3];
                      $1097 = (+__Z5IKabsd($1096));
                      $1098 = $1097 > 5.0000000000000004E-6;
                      if ($1098) {
                       break;
                      }
                      $1099 = (($evalcond2) + 40|0);
                      $1100 = +HEAPF64[$1099>>3];
                      $1101 = (+__Z5IKabsd($1100));
                      $1102 = $1101 > 5.0000000000000004E-6;
                      if ($1102) {
                       break;
                      }
                      $1103 = (($evalcond2) + 48|0);
                      $1104 = +HEAPF64[$1103>>3];
                      $1105 = (+__Z5IKabsd($1104));
                      $1106 = $1105 > 5.0000000000000004E-6;
                      if ($1106) {
                       break;
                      }
                      $1107 = (($evalcond2) + 56|0);
                      $1108 = +HEAPF64[$1107>>3];
                      $1109 = (+__Z5IKabsd($1108));
                      $1110 = $1109 > 5.0000000000000004E-6;
                      if ($1110) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,6);
                      __THREW__ = 0;
                      $1111 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1112 = __THREW__; __THREW__ = 0;
                      $1113 = $1112&1;
                      if ($1113) {
                       label = 122;
                       break L1;
                      }
                      $1114 = (($1111) + 17|0);
                      HEAP8[$1114>>0] = 1;
                      $1115 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1116 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1117 = __THREW__; __THREW__ = 0;
                      $1118 = $1117&1;
                      if ($1118) {
                       label = 122;
                       break L1;
                      }
                      $1119 = (($1116) + 8|0);
                      HEAPF64[$1119>>3] = $1115;
                      $1120 = (($4) + 536|0);
                      $1121 = HEAP8[$1120>>0]|0;
                      __THREW__ = 0;
                      $1122 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1123 = __THREW__; __THREW__ = 0;
                      $1124 = $1123&1;
                      if ($1124) {
                       label = 122;
                       break L1;
                      }
                      $1125 = (($1122) + 19|0);
                      HEAP8[$1125>>0] = $1121;
                      $1126 = (($4) + 536|0);
                      $1127 = (($1126) + 1|0);
                      $1128 = HEAP8[$1127>>0]|0;
                      __THREW__ = 0;
                      $1129 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1130 = __THREW__; __THREW__ = 0;
                      $1131 = $1130&1;
                      if ($1131) {
                       label = 122;
                       break L1;
                      }
                      $1132 = (($1129) + 19|0);
                      $1133 = (($1132) + 1|0);
                      HEAP8[$1133>>0] = $1128;
                      $1134 = (($4) + 538|0);
                      $1135 = HEAP8[$1134>>0]|0;
                      __THREW__ = 0;
                      $1136 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1137 = __THREW__; __THREW__ = 0;
                      $1138 = $1137&1;
                      if ($1138) {
                       label = 122;
                       break L1;
                      }
                      $1139 = (($1136) + 18|0);
                      HEAP8[$1139>>0] = $1135;
                      __THREW__ = 0;
                      $1140 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1141 = __THREW__; __THREW__ = 0;
                      $1142 = $1141&1;
                      if ($1142) {
                       label = 122;
                       break L1;
                      }
                      $1143 = (($1140) + 17|0);
                      HEAP8[$1143>>0] = 1;
                      $1144 = (($4) + 40|0);
                      $1145 = +HEAPF64[$1144>>3];
                      __THREW__ = 0;
                      $1146 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1147 = __THREW__; __THREW__ = 0;
                      $1148 = $1147&1;
                      if ($1148) {
                       label = 122;
                       break L1;
                      }
                      $1149 = (($1146) + 8|0);
                      HEAPF64[$1149>>3] = $1145;
                      $1150 = (($4) + 539|0);
                      $1151 = HEAP8[$1150>>0]|0;
                      __THREW__ = 0;
                      $1152 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1153 = __THREW__; __THREW__ = 0;
                      $1154 = $1153&1;
                      if ($1154) {
                       label = 122;
                       break L1;
                      }
                      $1155 = (($1152) + 19|0);
                      HEAP8[$1155>>0] = $1151;
                      $1156 = (($4) + 539|0);
                      $1157 = (($1156) + 1|0);
                      $1158 = HEAP8[$1157>>0]|0;
                      __THREW__ = 0;
                      $1159 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1160 = __THREW__; __THREW__ = 0;
                      $1161 = $1160&1;
                      if ($1161) {
                       label = 122;
                       break L1;
                      }
                      $1162 = (($1159) + 19|0);
                      $1163 = (($1162) + 1|0);
                      HEAP8[$1163>>0] = $1158;
                      $1164 = (($4) + 541|0);
                      $1165 = HEAP8[$1164>>0]|0;
                      __THREW__ = 0;
                      $1166 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1167 = __THREW__; __THREW__ = 0;
                      $1168 = $1167&1;
                      if ($1168) {
                       label = 122;
                       break L1;
                      }
                      $1169 = (($1166) + 18|0);
                      HEAP8[$1169>>0] = $1165;
                      __THREW__ = 0;
                      $1170 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1171 = __THREW__; __THREW__ = 0;
                      $1172 = $1171&1;
                      if ($1172) {
                       label = 122;
                       break L1;
                      }
                      $1173 = (($1170) + 17|0);
                      HEAP8[$1173>>0] = 1;
                      $1174 = (($4) + 80|0);
                      $1175 = +HEAPF64[$1174>>3];
                      __THREW__ = 0;
                      $1176 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1177 = __THREW__; __THREW__ = 0;
                      $1178 = $1177&1;
                      if ($1178) {
                       label = 122;
                       break L1;
                      }
                      $1179 = (($1176) + 8|0);
                      HEAPF64[$1179>>3] = $1175;
                      $1180 = (($4) + 542|0);
                      $1181 = HEAP8[$1180>>0]|0;
                      __THREW__ = 0;
                      $1182 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1183 = __THREW__; __THREW__ = 0;
                      $1184 = $1183&1;
                      if ($1184) {
                       label = 122;
                       break L1;
                      }
                      $1185 = (($1182) + 19|0);
                      HEAP8[$1185>>0] = $1181;
                      $1186 = (($4) + 542|0);
                      $1187 = (($1186) + 1|0);
                      $1188 = HEAP8[$1187>>0]|0;
                      __THREW__ = 0;
                      $1189 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1190 = __THREW__; __THREW__ = 0;
                      $1191 = $1190&1;
                      if ($1191) {
                       label = 122;
                       break L1;
                      }
                      $1192 = (($1189) + 19|0);
                      $1193 = (($1192) + 1|0);
                      HEAP8[$1193>>0] = $1188;
                      $1194 = (($4) + 544|0);
                      $1195 = HEAP8[$1194>>0]|0;
                      __THREW__ = 0;
                      $1196 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1197 = __THREW__; __THREW__ = 0;
                      $1198 = $1197&1;
                      if ($1198) {
                       label = 122;
                       break L1;
                      }
                      $1199 = (($1196) + 18|0);
                      HEAP8[$1199>>0] = $1195;
                      __THREW__ = 0;
                      $1200 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1201 = __THREW__; __THREW__ = 0;
                      $1202 = $1201&1;
                      if ($1202) {
                       label = 122;
                       break L1;
                      }
                      $1203 = (($1200) + 17|0);
                      HEAP8[$1203>>0] = 1;
                      $1204 = (($4) + 120|0);
                      $1205 = +HEAPF64[$1204>>3];
                      __THREW__ = 0;
                      $1206 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1207 = __THREW__; __THREW__ = 0;
                      $1208 = $1207&1;
                      if ($1208) {
                       label = 122;
                       break L1;
                      }
                      $1209 = (($1206) + 8|0);
                      HEAPF64[$1209>>3] = $1205;
                      $1210 = (($4) + 545|0);
                      $1211 = HEAP8[$1210>>0]|0;
                      __THREW__ = 0;
                      $1212 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1213 = __THREW__; __THREW__ = 0;
                      $1214 = $1213&1;
                      if ($1214) {
                       label = 122;
                       break L1;
                      }
                      $1215 = (($1212) + 19|0);
                      HEAP8[$1215>>0] = $1211;
                      $1216 = (($4) + 545|0);
                      $1217 = (($1216) + 1|0);
                      $1218 = HEAP8[$1217>>0]|0;
                      __THREW__ = 0;
                      $1219 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1220 = __THREW__; __THREW__ = 0;
                      $1221 = $1220&1;
                      if ($1221) {
                       label = 122;
                       break L1;
                      }
                      $1222 = (($1219) + 19|0);
                      $1223 = (($1222) + 1|0);
                      HEAP8[$1223>>0] = $1218;
                      $1224 = (($4) + 547|0);
                      $1225 = HEAP8[$1224>>0]|0;
                      __THREW__ = 0;
                      $1226 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1227 = __THREW__; __THREW__ = 0;
                      $1228 = $1227&1;
                      if ($1228) {
                       label = 122;
                       break L1;
                      }
                      $1229 = (($1226) + 18|0);
                      HEAP8[$1229>>0] = $1225;
                      __THREW__ = 0;
                      $1230 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1231 = __THREW__; __THREW__ = 0;
                      $1232 = $1231&1;
                      if ($1232) {
                       label = 122;
                       break L1;
                      }
                      $1233 = (($1230) + 17|0);
                      HEAP8[$1233>>0] = 1;
                      $1234 = (($4) + 160|0);
                      $1235 = +HEAPF64[$1234>>3];
                      __THREW__ = 0;
                      $1236 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1237 = __THREW__; __THREW__ = 0;
                      $1238 = $1237&1;
                      if ($1238) {
                       label = 122;
                       break L1;
                      }
                      $1239 = (($1236) + 8|0);
                      HEAPF64[$1239>>3] = $1235;
                      $1240 = (($4) + 548|0);
                      $1241 = HEAP8[$1240>>0]|0;
                      __THREW__ = 0;
                      $1242 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1243 = __THREW__; __THREW__ = 0;
                      $1244 = $1243&1;
                      if ($1244) {
                       label = 122;
                       break L1;
                      }
                      $1245 = (($1242) + 19|0);
                      HEAP8[$1245>>0] = $1241;
                      $1246 = (($4) + 548|0);
                      $1247 = (($1246) + 1|0);
                      $1248 = HEAP8[$1247>>0]|0;
                      __THREW__ = 0;
                      $1249 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1250 = __THREW__; __THREW__ = 0;
                      $1251 = $1250&1;
                      if ($1251) {
                       label = 122;
                       break L1;
                      }
                      $1252 = (($1249) + 19|0);
                      $1253 = (($1252) + 1|0);
                      HEAP8[$1253>>0] = $1248;
                      $1254 = (($4) + 550|0);
                      $1255 = HEAP8[$1254>>0]|0;
                      __THREW__ = 0;
                      $1256 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1257 = __THREW__; __THREW__ = 0;
                      $1258 = $1257&1;
                      if ($1258) {
                       label = 122;
                       break L1;
                      }
                      $1259 = (($1256) + 18|0);
                      HEAP8[$1259>>0] = $1255;
                      __THREW__ = 0;
                      $1260 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1261 = __THREW__; __THREW__ = 0;
                      $1262 = $1261&1;
                      if ($1262) {
                       label = 122;
                       break L1;
                      }
                      $1263 = (($1260) + 17|0);
                      HEAP8[$1263>>0] = 1;
                      $1264 = (($4) + 200|0);
                      $1265 = +HEAPF64[$1264>>3];
                      __THREW__ = 0;
                      $1266 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1267 = __THREW__; __THREW__ = 0;
                      $1268 = $1267&1;
                      if ($1268) {
                       label = 122;
                       break L1;
                      }
                      $1269 = (($1266) + 8|0);
                      HEAPF64[$1269>>3] = $1265;
                      $1270 = (($4) + 551|0);
                      $1271 = HEAP8[$1270>>0]|0;
                      __THREW__ = 0;
                      $1272 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1273 = __THREW__; __THREW__ = 0;
                      $1274 = $1273&1;
                      if ($1274) {
                       label = 122;
                       break L1;
                      }
                      $1275 = (($1272) + 19|0);
                      HEAP8[$1275>>0] = $1271;
                      $1276 = (($4) + 551|0);
                      $1277 = (($1276) + 1|0);
                      $1278 = HEAP8[$1277>>0]|0;
                      __THREW__ = 0;
                      $1279 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1280 = __THREW__; __THREW__ = 0;
                      $1281 = $1280&1;
                      if ($1281) {
                       label = 122;
                       break L1;
                      }
                      $1282 = (($1279) + 19|0);
                      $1283 = (($1282) + 1|0);
                      HEAP8[$1283>>0] = $1278;
                      $1284 = (($4) + 553|0);
                      $1285 = HEAP8[$1284>>0]|0;
                      __THREW__ = 0;
                      $1286 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1287 = __THREW__; __THREW__ = 0;
                      $1288 = $1287&1;
                      if ($1288) {
                       label = 122;
                       break L1;
                      }
                      $1289 = (($1286) + 18|0);
                      HEAP8[$1289>>0] = $1285;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree|0),0);
                      $1290 = __THREW__; __THREW__ = 0;
                      $1291 = $1290&1;
                      if ($1291) {
                       label = 122;
                       break L1;
                      }
                      $1292 = $1;
                      $1293 = HEAP32[$1292>>2]|0;
                      $1294 = (($1293) + 8|0);
                      $1295 = HEAP32[$1294>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1295|0,($1292|0),($vinfos|0),($vfree|0))|0);
                      $1296 = __THREW__; __THREW__ = 0;
                      $1297 = $1296&1;
                      if ($1297) {
                       label = 123;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree|0));
                      $1298 = __THREW__; __THREW__ = 0;
                      $1299 = $1298&1;
                      if ($1299) {
                       label = 122;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
                      break L505;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1300 = $ij5;
                  $1301 = (($1300) + 1)|0;
                  $ij5 = $1301;
                 }
                } else {
                }
               } while(0);
               $1310 = $ij3;
               $1311 = (($1310) + 1)|0;
               $ij3 = $1311;
              }
              label = 130;
             } else {
              label = 130;
             }
            } else {
             label = 130;
            }
           } else {
            label = 130;
           }
          } else {
           label = 130;
          }
         } else {
          label = 130;
         }
        } else {
         label = 130;
        }
       } while(0);
       if ((label|0) == 130) {
        label = 0;
       }
       $1312 = $bgotonextstatement;
       $1313 = $1312&1;
       if ($1313) {
        $bgotonextstatement3 = 1;
        $1314 = (($4) + 160|0);
        $1315 = +HEAPF64[$1314>>3];
        $1316 = -3.14159265358979 + $1315;
        $1317 = (+__Z5IKabsd($1316));
        $1318 = 3.14159265358979 + $1317;
        $1319 = (+__Z6IKfmoddd($1318,6.2831853071795898));
        $1320 = -3.14159265358979 + $1319;
        HEAPF64[$evalcond>>3] = $1320;
        $1321 = (($4) + 432|0);
        $1322 = +HEAPF64[$1321>>3];
        $1323 = 1.0 + $1322;
        $1324 = (($evalcond) + 8|0);
        HEAPF64[$1324>>3] = $1323;
        $1325 = (($4) + 360|0);
        $1326 = +HEAPF64[$1325>>3];
        $1327 = (($evalcond) + 16|0);
        HEAPF64[$1327>>3] = $1326;
        $1328 = (($4) + 288|0);
        $1329 = +HEAPF64[$1328>>3];
        $1330 = (($evalcond) + 24|0);
        HEAPF64[$1330>>3] = $1329;
        $1331 = (($4) + 384|0);
        $1332 = +HEAPF64[$1331>>3];
        $1333 = (($evalcond) + 32|0);
        HEAPF64[$1333>>3] = $1332;
        $1334 = (($4) + 408|0);
        $1335 = +HEAPF64[$1334>>3];
        $1336 = (($evalcond) + 40|0);
        HEAPF64[$1336>>3] = $1335;
        $1337 = +HEAPF64[$evalcond>>3];
        $1338 = (+__Z5IKabsd($1337));
        $1339 = $1338 < 9.9999999999999995E-7;
        do {
         if ($1339) {
          $1340 = (($evalcond) + 8|0);
          $1341 = +HEAPF64[$1340>>3];
          $1342 = (+__Z5IKabsd($1341));
          $1343 = $1342 < 9.9999999999999995E-7;
          if ($1343) {
           $1344 = (($evalcond) + 16|0);
           $1345 = +HEAPF64[$1344>>3];
           $1346 = (+__Z5IKabsd($1345));
           $1347 = $1346 < 9.9999999999999995E-7;
           if ($1347) {
            $1348 = (($evalcond) + 24|0);
            $1349 = +HEAPF64[$1348>>3];
            $1350 = (+__Z5IKabsd($1349));
            $1351 = $1350 < 9.9999999999999995E-7;
            if ($1351) {
             $1352 = (($evalcond) + 32|0);
             $1353 = +HEAPF64[$1352>>3];
             $1354 = (+__Z5IKabsd($1353));
             $1355 = $1354 < 9.9999999999999995E-7;
             if ($1355) {
              $1356 = (($evalcond) + 40|0);
              $1357 = +HEAPF64[$1356>>3];
              $1358 = (+__Z5IKabsd($1357));
              $1359 = $1358 < 9.9999999999999995E-7;
              if (!($1359)) {
               label = 238;
               break;
              }
              $bgotonextstatement3 = 0;
              ;HEAP8[$j3valid7+0>>0]=0|0;HEAP8[$j3valid7+1>>0]=0|0;
              $1360 = (($4) + 547|0);
              HEAP8[$1360>>0] = 2;
              $1361 = (($4) + 288|0);
              $1362 = +HEAPF64[$1361>>3];
              $1363 = (($4) + 360|0);
              $1364 = +HEAPF64[$1363>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x139,$1362,$1364,1.9999999999999999E-6);
              $1365 = (($x139) + 8|0);
              $1366 = HEAP8[$1365>>0]|0;
              $1367 = $1366&1;
              if (!($1367)) {
               break;
              }
              $1368 = +HEAPF64[$x139>>3];
              $x138 = $1368;
              $1369 = $x138;
              $1370 = -1.0 * $1369;
              HEAPF64[$j3array4>>3] = $1370;
              $1371 = +HEAPF64[$j3array4>>3];
              $1372 = (+__Z5IKsind($1371));
              HEAPF64[$sj3array6>>3] = $1372;
              $1373 = +HEAPF64[$j3array4>>3];
              $1374 = (+__Z5IKcosd($1373));
              HEAPF64[$cj3array5>>3] = $1374;
              $1375 = $x138;
              $1376 = -1.0 * $1375;
              $1377 = 3.14159265358979 + $1376;
              $1378 = (($j3array4) + 8|0);
              HEAPF64[$1378>>3] = $1377;
              $1379 = (($j3array4) + 8|0);
              $1380 = +HEAPF64[$1379>>3];
              $1381 = (+__Z5IKsind($1380));
              $1382 = (($sj3array6) + 8|0);
              HEAPF64[$1382>>3] = $1381;
              $1383 = (($j3array4) + 8|0);
              $1384 = +HEAPF64[$1383>>3];
              $1385 = (+__Z5IKcosd($1384));
              $1386 = (($cj3array5) + 8|0);
              HEAPF64[$1386>>3] = $1385;
              $1387 = +HEAPF64[$j3array4>>3];
              $1388 = $1387 > 3.14159265358979;
              if ($1388) {
               $1389 = +HEAPF64[$j3array4>>3];
               $1390 = $1389 - 6.2831853071795898;
               HEAPF64[$j3array4>>3] = $1390;
              } else {
               $1391 = +HEAPF64[$j3array4>>3];
               $1392 = $1391 < -3.14159265358979;
               if ($1392) {
                $1393 = +HEAPF64[$j3array4>>3];
                $1394 = $1393 + 6.2831853071795898;
                HEAPF64[$j3array4>>3] = $1394;
               }
              }
              HEAP8[$j3valid7>>0] = 1;
              $1395 = (($j3array4) + 8|0);
              $1396 = +HEAPF64[$1395>>3];
              $1397 = $1396 > 3.14159265358979;
              if ($1397) {
               $1398 = (($j3array4) + 8|0);
               $1399 = +HEAPF64[$1398>>3];
               $1400 = $1399 - 6.2831853071795898;
               HEAPF64[$1398>>3] = $1400;
              } else {
               $1401 = (($j3array4) + 8|0);
               $1402 = +HEAPF64[$1401>>3];
               $1403 = $1402 < -3.14159265358979;
               if ($1403) {
                $1404 = (($j3array4) + 8|0);
                $1405 = +HEAPF64[$1404>>3];
                $1406 = $1405 + 6.2831853071795898;
                HEAPF64[$1404>>3] = $1406;
               }
              }
              $1407 = (($j3valid7) + 1|0);
              HEAP8[$1407>>0] = 1;
              $ij38 = 0;
              while(1) {
               $1408 = $ij38;
               $1409 = ($1408|0)<(2);
               if (!($1409)) {
                break;
               }
               $1410 = $ij38;
               $1411 = (($j3valid7) + ($1410)|0);
               $1412 = HEAP8[$1411>>0]|0;
               $1413 = $1412&1;
               L599: do {
                if ($1413) {
                 $1414 = $ij38;
                 $1415 = $1414&255;
                 $1416 = (($4) + 545|0);
                 HEAP8[$1416>>0] = $1415;
                 $1417 = (($4) + 545|0);
                 $1418 = (($1417) + 1|0);
                 HEAP8[$1418>>0] = -1;
                 $1419 = $ij38;
                 $1420 = (($1419) + 1)|0;
                 $iij39 = $1420;
                 L602: while(1) {
                  $1421 = $iij39;
                  $1422 = ($1421|0)<(2);
                  if (!($1422)) {
                   break;
                  }
                  $1423 = $iij39;
                  $1424 = (($j3valid7) + ($1423)|0);
                  $1425 = HEAP8[$1424>>0]|0;
                  $1426 = $1425&1;
                  do {
                   if ($1426) {
                    $1427 = $ij38;
                    $1428 = (($cj3array5) + ($1427<<3)|0);
                    $1429 = +HEAPF64[$1428>>3];
                    $1430 = $iij39;
                    $1431 = (($cj3array5) + ($1430<<3)|0);
                    $1432 = +HEAPF64[$1431>>3];
                    $1433 = $1429 - $1432;
                    $1434 = (+__Z5IKabsd($1433));
                    $1435 = $1434 < 9.9999999999999995E-7;
                    if (!($1435)) {
                     break;
                    }
                    $1436 = $ij38;
                    $1437 = (($sj3array6) + ($1436<<3)|0);
                    $1438 = +HEAPF64[$1437>>3];
                    $1439 = $iij39;
                    $1440 = (($sj3array6) + ($1439<<3)|0);
                    $1441 = +HEAPF64[$1440>>3];
                    $1442 = $1438 - $1441;
                    $1443 = (+__Z5IKabsd($1442));
                    $1444 = $1443 < 9.9999999999999995E-7;
                    if ($1444) {
                     label = 160;
                     break L602;
                    }
                   }
                  } while(0);
                  $1451 = $iij39;
                  $1452 = (($1451) + 1)|0;
                  $iij39 = $1452;
                 }
                 if ((label|0) == 160) {
                  label = 0;
                  $1445 = $iij39;
                  $1446 = (($j3valid7) + ($1445)|0);
                  HEAP8[$1446>>0] = 0;
                  $1447 = $iij39;
                  $1448 = $1447&255;
                  $1449 = (($4) + 545|0);
                  $1450 = (($1449) + 1|0);
                  HEAP8[$1450>>0] = $1448;
                 }
                 $1453 = $ij38;
                 $1454 = (($j3array4) + ($1453<<3)|0);
                 $1455 = +HEAPF64[$1454>>3];
                 $1456 = (($4) + 120|0);
                 HEAPF64[$1456>>3] = $1455;
                 $1457 = $ij38;
                 $1458 = (($cj3array5) + ($1457<<3)|0);
                 $1459 = +HEAPF64[$1458>>3];
                 $1460 = (($4) + 128|0);
                 HEAPF64[$1460>>3] = $1459;
                 $1461 = $ij38;
                 $1462 = (($sj3array6) + ($1461<<3)|0);
                 $1463 = +HEAPF64[$1462>>3];
                 $1464 = (($4) + 136|0);
                 HEAPF64[$1464>>3] = $1463;
                 $1465 = (($4) + 288|0);
                 $1466 = +HEAPF64[$1465>>3];
                 $1467 = -1.0 * $1466;
                 $1468 = (($4) + 120|0);
                 $1469 = +HEAPF64[$1468>>3];
                 $1470 = (+__Z5IKsind($1469));
                 $1471 = $1467 * $1470;
                 $1472 = (($4) + 360|0);
                 $1473 = +HEAPF64[$1472>>3];
                 $1474 = (($4) + 120|0);
                 $1475 = +HEAPF64[$1474>>3];
                 $1476 = (+__Z5IKcosd($1475));
                 $1477 = $1473 * $1476;
                 $1478 = $1471 + $1477;
                 HEAPF64[$evalcond10>>3] = $1478;
                 $1479 = +HEAPF64[$evalcond10>>3];
                 $1480 = (+__Z5IKabsd($1479));
                 $1481 = $1480 > 5.0000000000000004E-6;
                 if ($1481) {
                  break;
                 }
                 ;HEAP8[$j5valid14+0>>0]=0|0;
                 $1482 = (($4) + 553|0);
                 HEAP8[$1482>>0] = 1;
                 $1483 = (($4) + 128|0);
                 $1484 = +HEAPF64[$1483>>3];
                 $1485 = 1.0 * $1484;
                 $x140 = $1485;
                 $1486 = (($4) + 264|0);
                 $1487 = +HEAPF64[$1486>>3];
                 $1488 = -1.0 * $1487;
                 $1489 = $x140;
                 $1490 = $1488 * $1489;
                 $1491 = (($4) + 336|0);
                 $1492 = +HEAPF64[$1491>>3];
                 $1493 = -1.0 * $1492;
                 $1494 = (($4) + 136|0);
                 $1495 = +HEAPF64[$1494>>3];
                 $1496 = $1493 * $1495;
                 $1497 = $1490 + $1496;
                 $1498 = (+__Z5IKabsd($1497));
                 $1499 = $1498 < 1.9999999999999999E-6;
                 do {
                  if ($1499) {
                   $1500 = (($4) + 264|0);
                   $1501 = +HEAPF64[$1500>>3];
                   $1502 = (($4) + 136|0);
                   $1503 = +HEAPF64[$1502>>3];
                   $1504 = $1501 * $1503;
                   $1505 = (($4) + 336|0);
                   $1506 = +HEAPF64[$1505>>3];
                   $1507 = -1.0 * $1506;
                   $1508 = $x140;
                   $1509 = $1507 * $1508;
                   $1510 = $1504 + $1509;
                   $1511 = (+__Z5IKabsd($1510));
                   $1512 = $1511 < 1.9999999999999999E-6;
                   if (!($1512)) {
                    break;
                   }
                   $1513 = (($4) + 264|0);
                   $1514 = +HEAPF64[$1513>>3];
                   $1515 = -1.0 * $1514;
                   $1516 = $x140;
                   $1517 = $1515 * $1516;
                   $1518 = (($4) + 336|0);
                   $1519 = +HEAPF64[$1518>>3];
                   $1520 = -1.0 * $1519;
                   $1521 = (($4) + 136|0);
                   $1522 = +HEAPF64[$1521>>3];
                   $1523 = $1520 * $1522;
                   $1524 = $1517 + $1523;
                   $1525 = (+__Z5IKsqrd($1524));
                   $1526 = (($4) + 264|0);
                   $1527 = +HEAPF64[$1526>>3];
                   $1528 = (($4) + 136|0);
                   $1529 = +HEAPF64[$1528>>3];
                   $1530 = $1527 * $1529;
                   $1531 = (($4) + 336|0);
                   $1532 = +HEAPF64[$1531>>3];
                   $1533 = -1.0 * $1532;
                   $1534 = $x140;
                   $1535 = $1533 * $1534;
                   $1536 = $1530 + $1535;
                   $1537 = (+__Z5IKsqrd($1536));
                   $1538 = $1525 + $1537;
                   $1539 = $1538 - 1.0;
                   $1540 = (+__Z5IKabsd($1539));
                   $1541 = $1540 <= 1.9999999999999999E-6;
                   if (!($1541)) {
                    break;
                   }
                   break L599;
                  }
                 } while(0);
                 $1542 = (($4) + 264|0);
                 $1543 = +HEAPF64[$1542>>3];
                 $1544 = -1.0 * $1543;
                 $1545 = $x140;
                 $1546 = $1544 * $1545;
                 $1547 = (($4) + 336|0);
                 $1548 = +HEAPF64[$1547>>3];
                 $1549 = -1.0 * $1548;
                 $1550 = (($4) + 136|0);
                 $1551 = +HEAPF64[$1550>>3];
                 $1552 = $1549 * $1551;
                 $1553 = $1546 + $1552;
                 $1554 = (($4) + 264|0);
                 $1555 = +HEAPF64[$1554>>3];
                 $1556 = (($4) + 136|0);
                 $1557 = +HEAPF64[$1556>>3];
                 $1558 = $1555 * $1557;
                 $1559 = (($4) + 336|0);
                 $1560 = +HEAPF64[$1559>>3];
                 $1561 = -1.0 * $1560;
                 $1562 = $x140;
                 $1563 = $1561 * $1562;
                 $1564 = $1558 + $1563;
                 $1565 = (+__Z7IKatan2dd($1553,$1564));
                 HEAPF64[$j5array11>>3] = $1565;
                 $1566 = +HEAPF64[$j5array11>>3];
                 $1567 = (+__Z5IKsind($1566));
                 HEAPF64[$sj5array13>>3] = $1567;
                 $1568 = +HEAPF64[$j5array11>>3];
                 $1569 = (+__Z5IKcosd($1568));
                 HEAPF64[$cj5array12>>3] = $1569;
                 $1570 = +HEAPF64[$j5array11>>3];
                 $1571 = $1570 > 3.14159265358979;
                 if ($1571) {
                  $1572 = +HEAPF64[$j5array11>>3];
                  $1573 = $1572 - 6.2831853071795898;
                  HEAPF64[$j5array11>>3] = $1573;
                 } else {
                  $1574 = +HEAPF64[$j5array11>>3];
                  $1575 = $1574 < -3.14159265358979;
                  if ($1575) {
                   $1576 = +HEAPF64[$j5array11>>3];
                   $1577 = $1576 + 6.2831853071795898;
                   HEAPF64[$j5array11>>3] = $1577;
                  }
                 }
                 HEAP8[$j5valid14>>0] = 1;
                 $ij515 = 0;
                 while(1) {
                  $1578 = $ij515;
                  $1579 = ($1578|0)<(1);
                  if (!($1579)) {
                   break;
                  }
                  $1580 = $ij515;
                  $1581 = (($j5valid14) + ($1580)|0);
                  $1582 = HEAP8[$1581>>0]|0;
                  $1583 = $1582&1;
                  L631: do {
                   if ($1583) {
                    $1584 = $ij515;
                    $1585 = $1584&255;
                    $1586 = (($4) + 551|0);
                    HEAP8[$1586>>0] = $1585;
                    $1587 = (($4) + 551|0);
                    $1588 = (($1587) + 1|0);
                    HEAP8[$1588>>0] = -1;
                    $1589 = $ij515;
                    $1590 = (($1589) + 1)|0;
                    $iij516 = $1590;
                    L634: while(1) {
                     $1591 = $iij516;
                     $1592 = ($1591|0)<(1);
                     if (!($1592)) {
                      break;
                     }
                     $1593 = $iij516;
                     $1594 = (($j5valid14) + ($1593)|0);
                     $1595 = HEAP8[$1594>>0]|0;
                     $1596 = $1595&1;
                     do {
                      if ($1596) {
                       $1597 = $ij515;
                       $1598 = (($cj5array12) + ($1597<<3)|0);
                       $1599 = +HEAPF64[$1598>>3];
                       $1600 = $iij516;
                       $1601 = (($cj5array12) + ($1600<<3)|0);
                       $1602 = +HEAPF64[$1601>>3];
                       $1603 = $1599 - $1602;
                       $1604 = (+__Z5IKabsd($1603));
                       $1605 = $1604 < 9.9999999999999995E-7;
                       if (!($1605)) {
                        break;
                       }
                       $1606 = $ij515;
                       $1607 = (($sj5array13) + ($1606<<3)|0);
                       $1608 = +HEAPF64[$1607>>3];
                       $1609 = $iij516;
                       $1610 = (($sj5array13) + ($1609<<3)|0);
                       $1611 = +HEAPF64[$1610>>3];
                       $1612 = $1608 - $1611;
                       $1613 = (+__Z5IKabsd($1612));
                       $1614 = $1613 < 9.9999999999999995E-7;
                       if ($1614) {
                        label = 183;
                        break L634;
                       }
                      }
                     } while(0);
                     $1621 = $iij516;
                     $1622 = (($1621) + 1)|0;
                     $iij516 = $1622;
                    }
                    if ((label|0) == 183) {
                     label = 0;
                     $1615 = $iij516;
                     $1616 = (($j5valid14) + ($1615)|0);
                     HEAP8[$1616>>0] = 0;
                     $1617 = $iij516;
                     $1618 = $1617&255;
                     $1619 = (($4) + 551|0);
                     $1620 = (($1619) + 1|0);
                     HEAP8[$1620>>0] = $1618;
                    }
                    $1623 = $ij515;
                    $1624 = (($j5array11) + ($1623<<3)|0);
                    $1625 = +HEAPF64[$1624>>3];
                    $1626 = (($4) + 200|0);
                    HEAPF64[$1626>>3] = $1625;
                    $1627 = $ij515;
                    $1628 = (($cj5array12) + ($1627<<3)|0);
                    $1629 = +HEAPF64[$1628>>3];
                    $1630 = (($4) + 208|0);
                    HEAPF64[$1630>>3] = $1629;
                    $1631 = $ij515;
                    $1632 = (($sj5array13) + ($1631<<3)|0);
                    $1633 = +HEAPF64[$1632>>3];
                    $1634 = (($4) + 216|0);
                    HEAPF64[$1634>>3] = $1633;
                    $1635 = (($4) + 200|0);
                    $1636 = +HEAPF64[$1635>>3];
                    $1637 = (+__Z5IKsind($1636));
                    $x141 = $1637;
                    $1638 = (($4) + 200|0);
                    $1639 = +HEAPF64[$1638>>3];
                    $1640 = (+__Z5IKcosd($1639));
                    $x142 = $1640;
                    $1641 = (($4) + 136|0);
                    $1642 = +HEAPF64[$1641>>3];
                    $1643 = 1.0 * $1642;
                    $x143 = $1643;
                    $1644 = (($4) + 128|0);
                    $1645 = +HEAPF64[$1644>>3];
                    $1646 = $x141;
                    $1647 = $1645 * $1646;
                    $x144 = $1647;
                    $1648 = $x142;
                    $1649 = 1.0 * $1648;
                    $x145 = $1649;
                    $1650 = $x142;
                    $1651 = $x143;
                    $1652 = $1650 * $1651;
                    $x146 = $1652;
                    $1653 = (($4) + 336|0);
                    $1654 = +HEAPF64[$1653>>3];
                    $1655 = (($4) + 136|0);
                    $1656 = +HEAPF64[$1655>>3];
                    $1657 = $1654 * $1656;
                    $1658 = $x141;
                    $1659 = $1657 + $1658;
                    $1660 = (($4) + 128|0);
                    $1661 = +HEAPF64[$1660>>3];
                    $1662 = (($4) + 264|0);
                    $1663 = +HEAPF64[$1662>>3];
                    $1664 = $1661 * $1663;
                    $1665 = $1659 + $1664;
                    HEAPF64[$evalcond17>>3] = $1665;
                    $1666 = $x141;
                    $1667 = (($4) + 128|0);
                    $1668 = +HEAPF64[$1667>>3];
                    $1669 = (($4) + 312|0);
                    $1670 = +HEAPF64[$1669>>3];
                    $1671 = $1668 * $1670;
                    $1672 = $1666 + $1671;
                    $1673 = (($4) + 240|0);
                    $1674 = +HEAPF64[$1673>>3];
                    $1675 = -1.0 * $1674;
                    $1676 = $x143;
                    $1677 = $1675 * $1676;
                    $1678 = $1672 + $1677;
                    $1679 = (($evalcond17) + 8|0);
                    HEAPF64[$1679>>3] = $1678;
                    $1680 = (($4) + 264|0);
                    $1681 = +HEAPF64[$1680>>3];
                    $1682 = -1.0 * $1681;
                    $1683 = $x143;
                    $1684 = $1682 * $1683;
                    $1685 = $x142;
                    $1686 = $1684 + $1685;
                    $1687 = (($4) + 128|0);
                    $1688 = +HEAPF64[$1687>>3];
                    $1689 = (($4) + 336|0);
                    $1690 = +HEAPF64[$1689>>3];
                    $1691 = $1688 * $1690;
                    $1692 = $1686 + $1691;
                    $1693 = (($evalcond17) + 16|0);
                    HEAPF64[$1693>>3] = $1692;
                    $1694 = $x145;
                    $1695 = -1.0 * $1694;
                    $1696 = (($4) + 312|0);
                    $1697 = +HEAPF64[$1696>>3];
                    $1698 = (($4) + 136|0);
                    $1699 = +HEAPF64[$1698>>3];
                    $1700 = $1697 * $1699;
                    $1701 = $1695 + $1700;
                    $1702 = (($4) + 128|0);
                    $1703 = +HEAPF64[$1702>>3];
                    $1704 = (($4) + 240|0);
                    $1705 = +HEAPF64[$1704>>3];
                    $1706 = $1703 * $1705;
                    $1707 = $1701 + $1706;
                    $1708 = (($evalcond17) + 24|0);
                    HEAPF64[$1708>>3] = $1707;
                    $1709 = (($4) + 128|0);
                    $1710 = +HEAPF64[$1709>>3];
                    $1711 = $x142;
                    $1712 = $1710 * $1711;
                    $1713 = (($4) + 336|0);
                    $1714 = +HEAPF64[$1713>>3];
                    $1715 = $1712 + $1714;
                    $1716 = (($4) + 136|0);
                    $1717 = +HEAPF64[$1716>>3];
                    $1718 = $x141;
                    $1719 = $1717 * $1718;
                    $1720 = $1715 + $1719;
                    $1721 = (($evalcond17) + 32|0);
                    HEAPF64[$1721>>3] = $1720;
                    $1722 = $x146;
                    $1723 = -1.0 * $1722;
                    $1724 = $x144;
                    $1725 = $1723 + $1724;
                    $1726 = (($4) + 264|0);
                    $1727 = +HEAPF64[$1726>>3];
                    $1728 = $1725 + $1727;
                    $1729 = (($evalcond17) + 40|0);
                    HEAPF64[$1729>>3] = $1728;
                    $1730 = $x146;
                    $1731 = -1.0 * $1730;
                    $1732 = $x144;
                    $1733 = $1731 + $1732;
                    $1734 = (($4) + 312|0);
                    $1735 = +HEAPF64[$1734>>3];
                    $1736 = $1733 + $1735;
                    $1737 = (($evalcond17) + 48|0);
                    HEAPF64[$1737>>3] = $1736;
                    $1738 = (($4) + 128|0);
                    $1739 = +HEAPF64[$1738>>3];
                    $1740 = -1.0 * $1739;
                    $1741 = $x145;
                    $1742 = $1740 * $1741;
                    $1743 = $x141;
                    $1744 = -1.0 * $1743;
                    $1745 = $x143;
                    $1746 = $1744 * $1745;
                    $1747 = $1742 + $1746;
                    $1748 = (($4) + 240|0);
                    $1749 = +HEAPF64[$1748>>3];
                    $1750 = $1747 + $1749;
                    $1751 = (($evalcond17) + 56|0);
                    HEAPF64[$1751>>3] = $1750;
                    $1752 = +HEAPF64[$evalcond17>>3];
                    $1753 = (+__Z5IKabsd($1752));
                    $1754 = $1753 > 5.0000000000000004E-6;
                    do {
                     if (!($1754)) {
                      $1755 = (($evalcond17) + 8|0);
                      $1756 = +HEAPF64[$1755>>3];
                      $1757 = (+__Z5IKabsd($1756));
                      $1758 = $1757 > 5.0000000000000004E-6;
                      if ($1758) {
                       break;
                      }
                      $1759 = (($evalcond17) + 16|0);
                      $1760 = +HEAPF64[$1759>>3];
                      $1761 = (+__Z5IKabsd($1760));
                      $1762 = $1761 > 5.0000000000000004E-6;
                      if ($1762) {
                       break;
                      }
                      $1763 = (($evalcond17) + 24|0);
                      $1764 = +HEAPF64[$1763>>3];
                      $1765 = (+__Z5IKabsd($1764));
                      $1766 = $1765 > 5.0000000000000004E-6;
                      if ($1766) {
                       break;
                      }
                      $1767 = (($evalcond17) + 32|0);
                      $1768 = +HEAPF64[$1767>>3];
                      $1769 = (+__Z5IKabsd($1768));
                      $1770 = $1769 > 5.0000000000000004E-6;
                      if ($1770) {
                       break;
                      }
                      $1771 = (($evalcond17) + 40|0);
                      $1772 = +HEAPF64[$1771>>3];
                      $1773 = (+__Z5IKabsd($1772));
                      $1774 = $1773 > 5.0000000000000004E-6;
                      if ($1774) {
                       break;
                      }
                      $1775 = (($evalcond17) + 48|0);
                      $1776 = +HEAPF64[$1775>>3];
                      $1777 = (+__Z5IKabsd($1776));
                      $1778 = $1777 > 5.0000000000000004E-6;
                      if ($1778) {
                       break;
                      }
                      $1779 = (($evalcond17) + 56|0);
                      $1780 = +HEAPF64[$1779>>3];
                      $1781 = (+__Z5IKabsd($1780));
                      $1782 = $1781 > 5.0000000000000004E-6;
                      if ($1782) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos18,6);
                      __THREW__ = 0;
                      $1783 = (invoke_iii(381,($vinfos18|0),0)|0);
                      $1784 = __THREW__; __THREW__ = 0;
                      $1785 = $1784&1;
                      if ($1785) {
                       label = 230;
                       break L1;
                      }
                      $1786 = (($1783) + 17|0);
                      HEAP8[$1786>>0] = 1;
                      $1787 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1788 = (invoke_iii(381,($vinfos18|0),0)|0);
                      $1789 = __THREW__; __THREW__ = 0;
                      $1790 = $1789&1;
                      if ($1790) {
                       label = 230;
                       break L1;
                      }
                      $1791 = (($1788) + 8|0);
                      HEAPF64[$1791>>3] = $1787;
                      $1792 = (($4) + 536|0);
                      $1793 = HEAP8[$1792>>0]|0;
                      __THREW__ = 0;
                      $1794 = (invoke_iii(381,($vinfos18|0),0)|0);
                      $1795 = __THREW__; __THREW__ = 0;
                      $1796 = $1795&1;
                      if ($1796) {
                       label = 230;
                       break L1;
                      }
                      $1797 = (($1794) + 19|0);
                      HEAP8[$1797>>0] = $1793;
                      $1798 = (($4) + 536|0);
                      $1799 = (($1798) + 1|0);
                      $1800 = HEAP8[$1799>>0]|0;
                      __THREW__ = 0;
                      $1801 = (invoke_iii(381,($vinfos18|0),0)|0);
                      $1802 = __THREW__; __THREW__ = 0;
                      $1803 = $1802&1;
                      if ($1803) {
                       label = 230;
                       break L1;
                      }
                      $1804 = (($1801) + 19|0);
                      $1805 = (($1804) + 1|0);
                      HEAP8[$1805>>0] = $1800;
                      $1806 = (($4) + 538|0);
                      $1807 = HEAP8[$1806>>0]|0;
                      __THREW__ = 0;
                      $1808 = (invoke_iii(381,($vinfos18|0),0)|0);
                      $1809 = __THREW__; __THREW__ = 0;
                      $1810 = $1809&1;
                      if ($1810) {
                       label = 230;
                       break L1;
                      }
                      $1811 = (($1808) + 18|0);
                      HEAP8[$1811>>0] = $1807;
                      __THREW__ = 0;
                      $1812 = (invoke_iii(381,($vinfos18|0),1)|0);
                      $1813 = __THREW__; __THREW__ = 0;
                      $1814 = $1813&1;
                      if ($1814) {
                       label = 230;
                       break L1;
                      }
                      $1815 = (($1812) + 17|0);
                      HEAP8[$1815>>0] = 1;
                      $1816 = (($4) + 40|0);
                      $1817 = +HEAPF64[$1816>>3];
                      __THREW__ = 0;
                      $1818 = (invoke_iii(381,($vinfos18|0),1)|0);
                      $1819 = __THREW__; __THREW__ = 0;
                      $1820 = $1819&1;
                      if ($1820) {
                       label = 230;
                       break L1;
                      }
                      $1821 = (($1818) + 8|0);
                      HEAPF64[$1821>>3] = $1817;
                      $1822 = (($4) + 539|0);
                      $1823 = HEAP8[$1822>>0]|0;
                      __THREW__ = 0;
                      $1824 = (invoke_iii(381,($vinfos18|0),1)|0);
                      $1825 = __THREW__; __THREW__ = 0;
                      $1826 = $1825&1;
                      if ($1826) {
                       label = 230;
                       break L1;
                      }
                      $1827 = (($1824) + 19|0);
                      HEAP8[$1827>>0] = $1823;
                      $1828 = (($4) + 539|0);
                      $1829 = (($1828) + 1|0);
                      $1830 = HEAP8[$1829>>0]|0;
                      __THREW__ = 0;
                      $1831 = (invoke_iii(381,($vinfos18|0),1)|0);
                      $1832 = __THREW__; __THREW__ = 0;
                      $1833 = $1832&1;
                      if ($1833) {
                       label = 230;
                       break L1;
                      }
                      $1834 = (($1831) + 19|0);
                      $1835 = (($1834) + 1|0);
                      HEAP8[$1835>>0] = $1830;
                      $1836 = (($4) + 541|0);
                      $1837 = HEAP8[$1836>>0]|0;
                      __THREW__ = 0;
                      $1838 = (invoke_iii(381,($vinfos18|0),1)|0);
                      $1839 = __THREW__; __THREW__ = 0;
                      $1840 = $1839&1;
                      if ($1840) {
                       label = 230;
                       break L1;
                      }
                      $1841 = (($1838) + 18|0);
                      HEAP8[$1841>>0] = $1837;
                      __THREW__ = 0;
                      $1842 = (invoke_iii(381,($vinfos18|0),2)|0);
                      $1843 = __THREW__; __THREW__ = 0;
                      $1844 = $1843&1;
                      if ($1844) {
                       label = 230;
                       break L1;
                      }
                      $1845 = (($1842) + 17|0);
                      HEAP8[$1845>>0] = 1;
                      $1846 = (($4) + 80|0);
                      $1847 = +HEAPF64[$1846>>3];
                      __THREW__ = 0;
                      $1848 = (invoke_iii(381,($vinfos18|0),2)|0);
                      $1849 = __THREW__; __THREW__ = 0;
                      $1850 = $1849&1;
                      if ($1850) {
                       label = 230;
                       break L1;
                      }
                      $1851 = (($1848) + 8|0);
                      HEAPF64[$1851>>3] = $1847;
                      $1852 = (($4) + 542|0);
                      $1853 = HEAP8[$1852>>0]|0;
                      __THREW__ = 0;
                      $1854 = (invoke_iii(381,($vinfos18|0),2)|0);
                      $1855 = __THREW__; __THREW__ = 0;
                      $1856 = $1855&1;
                      if ($1856) {
                       label = 230;
                       break L1;
                      }
                      $1857 = (($1854) + 19|0);
                      HEAP8[$1857>>0] = $1853;
                      $1858 = (($4) + 542|0);
                      $1859 = (($1858) + 1|0);
                      $1860 = HEAP8[$1859>>0]|0;
                      __THREW__ = 0;
                      $1861 = (invoke_iii(381,($vinfos18|0),2)|0);
                      $1862 = __THREW__; __THREW__ = 0;
                      $1863 = $1862&1;
                      if ($1863) {
                       label = 230;
                       break L1;
                      }
                      $1864 = (($1861) + 19|0);
                      $1865 = (($1864) + 1|0);
                      HEAP8[$1865>>0] = $1860;
                      $1866 = (($4) + 544|0);
                      $1867 = HEAP8[$1866>>0]|0;
                      __THREW__ = 0;
                      $1868 = (invoke_iii(381,($vinfos18|0),2)|0);
                      $1869 = __THREW__; __THREW__ = 0;
                      $1870 = $1869&1;
                      if ($1870) {
                       label = 230;
                       break L1;
                      }
                      $1871 = (($1868) + 18|0);
                      HEAP8[$1871>>0] = $1867;
                      __THREW__ = 0;
                      $1872 = (invoke_iii(381,($vinfos18|0),3)|0);
                      $1873 = __THREW__; __THREW__ = 0;
                      $1874 = $1873&1;
                      if ($1874) {
                       label = 230;
                       break L1;
                      }
                      $1875 = (($1872) + 17|0);
                      HEAP8[$1875>>0] = 1;
                      $1876 = (($4) + 120|0);
                      $1877 = +HEAPF64[$1876>>3];
                      __THREW__ = 0;
                      $1878 = (invoke_iii(381,($vinfos18|0),3)|0);
                      $1879 = __THREW__; __THREW__ = 0;
                      $1880 = $1879&1;
                      if ($1880) {
                       label = 230;
                       break L1;
                      }
                      $1881 = (($1878) + 8|0);
                      HEAPF64[$1881>>3] = $1877;
                      $1882 = (($4) + 545|0);
                      $1883 = HEAP8[$1882>>0]|0;
                      __THREW__ = 0;
                      $1884 = (invoke_iii(381,($vinfos18|0),3)|0);
                      $1885 = __THREW__; __THREW__ = 0;
                      $1886 = $1885&1;
                      if ($1886) {
                       label = 230;
                       break L1;
                      }
                      $1887 = (($1884) + 19|0);
                      HEAP8[$1887>>0] = $1883;
                      $1888 = (($4) + 545|0);
                      $1889 = (($1888) + 1|0);
                      $1890 = HEAP8[$1889>>0]|0;
                      __THREW__ = 0;
                      $1891 = (invoke_iii(381,($vinfos18|0),3)|0);
                      $1892 = __THREW__; __THREW__ = 0;
                      $1893 = $1892&1;
                      if ($1893) {
                       label = 230;
                       break L1;
                      }
                      $1894 = (($1891) + 19|0);
                      $1895 = (($1894) + 1|0);
                      HEAP8[$1895>>0] = $1890;
                      $1896 = (($4) + 547|0);
                      $1897 = HEAP8[$1896>>0]|0;
                      __THREW__ = 0;
                      $1898 = (invoke_iii(381,($vinfos18|0),3)|0);
                      $1899 = __THREW__; __THREW__ = 0;
                      $1900 = $1899&1;
                      if ($1900) {
                       label = 230;
                       break L1;
                      }
                      $1901 = (($1898) + 18|0);
                      HEAP8[$1901>>0] = $1897;
                      __THREW__ = 0;
                      $1902 = (invoke_iii(381,($vinfos18|0),4)|0);
                      $1903 = __THREW__; __THREW__ = 0;
                      $1904 = $1903&1;
                      if ($1904) {
                       label = 230;
                       break L1;
                      }
                      $1905 = (($1902) + 17|0);
                      HEAP8[$1905>>0] = 1;
                      $1906 = (($4) + 160|0);
                      $1907 = +HEAPF64[$1906>>3];
                      __THREW__ = 0;
                      $1908 = (invoke_iii(381,($vinfos18|0),4)|0);
                      $1909 = __THREW__; __THREW__ = 0;
                      $1910 = $1909&1;
                      if ($1910) {
                       label = 230;
                       break L1;
                      }
                      $1911 = (($1908) + 8|0);
                      HEAPF64[$1911>>3] = $1907;
                      $1912 = (($4) + 548|0);
                      $1913 = HEAP8[$1912>>0]|0;
                      __THREW__ = 0;
                      $1914 = (invoke_iii(381,($vinfos18|0),4)|0);
                      $1915 = __THREW__; __THREW__ = 0;
                      $1916 = $1915&1;
                      if ($1916) {
                       label = 230;
                       break L1;
                      }
                      $1917 = (($1914) + 19|0);
                      HEAP8[$1917>>0] = $1913;
                      $1918 = (($4) + 548|0);
                      $1919 = (($1918) + 1|0);
                      $1920 = HEAP8[$1919>>0]|0;
                      __THREW__ = 0;
                      $1921 = (invoke_iii(381,($vinfos18|0),4)|0);
                      $1922 = __THREW__; __THREW__ = 0;
                      $1923 = $1922&1;
                      if ($1923) {
                       label = 230;
                       break L1;
                      }
                      $1924 = (($1921) + 19|0);
                      $1925 = (($1924) + 1|0);
                      HEAP8[$1925>>0] = $1920;
                      $1926 = (($4) + 550|0);
                      $1927 = HEAP8[$1926>>0]|0;
                      __THREW__ = 0;
                      $1928 = (invoke_iii(381,($vinfos18|0),4)|0);
                      $1929 = __THREW__; __THREW__ = 0;
                      $1930 = $1929&1;
                      if ($1930) {
                       label = 230;
                       break L1;
                      }
                      $1931 = (($1928) + 18|0);
                      HEAP8[$1931>>0] = $1927;
                      __THREW__ = 0;
                      $1932 = (invoke_iii(381,($vinfos18|0),5)|0);
                      $1933 = __THREW__; __THREW__ = 0;
                      $1934 = $1933&1;
                      if ($1934) {
                       label = 230;
                       break L1;
                      }
                      $1935 = (($1932) + 17|0);
                      HEAP8[$1935>>0] = 1;
                      $1936 = (($4) + 200|0);
                      $1937 = +HEAPF64[$1936>>3];
                      __THREW__ = 0;
                      $1938 = (invoke_iii(381,($vinfos18|0),5)|0);
                      $1939 = __THREW__; __THREW__ = 0;
                      $1940 = $1939&1;
                      if ($1940) {
                       label = 230;
                       break L1;
                      }
                      $1941 = (($1938) + 8|0);
                      HEAPF64[$1941>>3] = $1937;
                      $1942 = (($4) + 551|0);
                      $1943 = HEAP8[$1942>>0]|0;
                      __THREW__ = 0;
                      $1944 = (invoke_iii(381,($vinfos18|0),5)|0);
                      $1945 = __THREW__; __THREW__ = 0;
                      $1946 = $1945&1;
                      if ($1946) {
                       label = 230;
                       break L1;
                      }
                      $1947 = (($1944) + 19|0);
                      HEAP8[$1947>>0] = $1943;
                      $1948 = (($4) + 551|0);
                      $1949 = (($1948) + 1|0);
                      $1950 = HEAP8[$1949>>0]|0;
                      __THREW__ = 0;
                      $1951 = (invoke_iii(381,($vinfos18|0),5)|0);
                      $1952 = __THREW__; __THREW__ = 0;
                      $1953 = $1952&1;
                      if ($1953) {
                       label = 230;
                       break L1;
                      }
                      $1954 = (($1951) + 19|0);
                      $1955 = (($1954) + 1|0);
                      HEAP8[$1955>>0] = $1950;
                      $1956 = (($4) + 553|0);
                      $1957 = HEAP8[$1956>>0]|0;
                      __THREW__ = 0;
                      $1958 = (invoke_iii(381,($vinfos18|0),5)|0);
                      $1959 = __THREW__; __THREW__ = 0;
                      $1960 = $1959&1;
                      if ($1960) {
                       label = 230;
                       break L1;
                      }
                      $1961 = (($1958) + 18|0);
                      HEAP8[$1961>>0] = $1957;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree19|0),0);
                      $1962 = __THREW__; __THREW__ = 0;
                      $1963 = $1962&1;
                      if ($1963) {
                       label = 230;
                       break L1;
                      }
                      $1964 = $1;
                      $1965 = HEAP32[$1964>>2]|0;
                      $1966 = (($1965) + 8|0);
                      $1967 = HEAP32[$1966>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1967|0,($1964|0),($vinfos18|0),($vfree19|0))|0);
                      $1968 = __THREW__; __THREW__ = 0;
                      $1969 = $1968&1;
                      if ($1969) {
                       label = 231;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree19|0));
                      $1970 = __THREW__; __THREW__ = 0;
                      $1971 = $1970&1;
                      if ($1971) {
                       label = 230;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos18);
                      break L631;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1972 = $ij515;
                  $1973 = (($1972) + 1)|0;
                  $ij515 = $1973;
                 }
                } else {
                }
               } while(0);
               $1982 = $ij38;
               $1983 = (($1982) + 1)|0;
               $ij38 = $1983;
              }
              label = 238;
             } else {
              label = 238;
             }
            } else {
             label = 238;
            }
           } else {
            label = 238;
           }
          } else {
           label = 238;
          }
         } else {
          label = 238;
         }
        } while(0);
        if ((label|0) == 238) {
         label = 0;
        }
        $1984 = $bgotonextstatement3;
        $1985 = $1984&1;
        if ($1985) {
         $bgotonextstatement20 = 1;
         $bgotonextstatement20 = 0;
         $1986 = $bgotonextstatement20;
         $1987 = $1986&1;
         if ($1987) {
         }
        }
       }
      } else {
       ;HEAP8[$j3valid24+0>>0]=0|0;
       $1988 = (($4) + 547|0);
       HEAP8[$1988>>0] = 1;
       $1989 = (($4) + 176|0);
       $1990 = +HEAPF64[$1989>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x148,$1990,-1);
       $1991 = (($x148) + 8|0);
       $1992 = HEAP8[$1991>>0]|0;
       $1993 = $1992&1;
       if (!($1993)) {
        break;
       }
       $1994 = +HEAPF64[$x148>>3];
       $x147 = $1994;
       $1995 = (($4) + 288|0);
       $1996 = +HEAPF64[$1995>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x149,$1996,-1);
       $1997 = (($x149) + 8|0);
       $1998 = HEAP8[$1997>>0]|0;
       $1999 = $1998&1;
       if (!($1999)) {
        break;
       }
       $2000 = $x147;
       $2001 = +HEAPF64[$x149>>3];
       $2002 = $2000 * $2001;
       $2003 = (($4) + 168|0);
       $2004 = +HEAPF64[$2003>>3];
       $2005 = (($4) + 168|0);
       $2006 = +HEAPF64[$2005>>3];
       $2007 = $2004 * $2006;
       $2008 = -1.0 * $2007;
       $2009 = 1.0 + $2008;
       $2010 = (($4) + 360|0);
       $2011 = +HEAPF64[$2010>>3];
       $2012 = (($4) + 360|0);
       $2013 = +HEAPF64[$2012>>3];
       $2014 = $2011 * $2013;
       $2015 = -1.0 * $2014;
       $2016 = $2009 + $2015;
       $2017 = $2002 * $2016;
       $2018 = (+__Z5IKabsd($2017));
       $2019 = $2018 < 1.9999999999999999E-6;
       if ($2019) {
        $2020 = (($4) + 360|0);
        $2021 = +HEAPF64[$2020>>3];
        $2022 = -1.0 * $2021;
        $2023 = $x147;
        $2024 = $2022 * $2023;
        $2025 = (+__Z5IKabsd($2024));
        $2026 = $2025 < 1.9999999999999999E-6;
        if ($2026) {
         $2027 = $x147;
         $2028 = +HEAPF64[$x149>>3];
         $2029 = $2027 * $2028;
         $2030 = (($4) + 168|0);
         $2031 = +HEAPF64[$2030>>3];
         $2032 = (($4) + 168|0);
         $2033 = +HEAPF64[$2032>>3];
         $2034 = $2031 * $2033;
         $2035 = -1.0 * $2034;
         $2036 = 1.0 + $2035;
         $2037 = (($4) + 360|0);
         $2038 = +HEAPF64[$2037>>3];
         $2039 = (($4) + 360|0);
         $2040 = +HEAPF64[$2039>>3];
         $2041 = $2038 * $2040;
         $2042 = -1.0 * $2041;
         $2043 = $2036 + $2042;
         $2044 = $2029 * $2043;
         $2045 = (+__Z5IKsqrd($2044));
         $2046 = (($4) + 360|0);
         $2047 = +HEAPF64[$2046>>3];
         $2048 = -1.0 * $2047;
         $2049 = $x147;
         $2050 = $2048 * $2049;
         $2051 = (+__Z5IKsqrd($2050));
         $2052 = $2045 + $2051;
         $2053 = $2052 - 1.0;
         $2054 = (+__Z5IKabsd($2053));
         $2055 = $2054 <= 1.9999999999999999E-6;
         if ($2055) {
          break;
         }
        }
       }
       $2056 = $x147;
       $2057 = +HEAPF64[$x149>>3];
       $2058 = $2056 * $2057;
       $2059 = (($4) + 168|0);
       $2060 = +HEAPF64[$2059>>3];
       $2061 = (($4) + 168|0);
       $2062 = +HEAPF64[$2061>>3];
       $2063 = $2060 * $2062;
       $2064 = -1.0 * $2063;
       $2065 = 1.0 + $2064;
       $2066 = (($4) + 360|0);
       $2067 = +HEAPF64[$2066>>3];
       $2068 = (($4) + 360|0);
       $2069 = +HEAPF64[$2068>>3];
       $2070 = $2067 * $2069;
       $2071 = -1.0 * $2070;
       $2072 = $2065 + $2071;
       $2073 = $2058 * $2072;
       $2074 = (($4) + 360|0);
       $2075 = +HEAPF64[$2074>>3];
       $2076 = -1.0 * $2075;
       $2077 = $x147;
       $2078 = $2076 * $2077;
       $2079 = (+__Z7IKatan2dd($2073,$2078));
       HEAPF64[$j3array21>>3] = $2079;
       $2080 = +HEAPF64[$j3array21>>3];
       $2081 = (+__Z5IKsind($2080));
       HEAPF64[$sj3array23>>3] = $2081;
       $2082 = +HEAPF64[$j3array21>>3];
       $2083 = (+__Z5IKcosd($2082));
       HEAPF64[$cj3array22>>3] = $2083;
       $2084 = +HEAPF64[$j3array21>>3];
       $2085 = $2084 > 3.14159265358979;
       if ($2085) {
        $2086 = +HEAPF64[$j3array21>>3];
        $2087 = $2086 - 6.2831853071795898;
        HEAPF64[$j3array21>>3] = $2087;
       } else {
        $2088 = +HEAPF64[$j3array21>>3];
        $2089 = $2088 < -3.14159265358979;
        if ($2089) {
         $2090 = +HEAPF64[$j3array21>>3];
         $2091 = $2090 + 6.2831853071795898;
         HEAPF64[$j3array21>>3] = $2091;
        }
       }
       HEAP8[$j3valid24>>0] = 1;
       $ij325 = 0;
       while(1) {
        $2092 = $ij325;
        $2093 = ($2092|0)<(1);
        if (!($2093)) {
         break;
        }
        $2094 = $ij325;
        $2095 = (($j3valid24) + ($2094)|0);
        $2096 = HEAP8[$2095>>0]|0;
        $2097 = $2096&1;
        L726: do {
         if ($2097) {
          $2098 = $ij325;
          $2099 = $2098&255;
          $2100 = (($4) + 545|0);
          HEAP8[$2100>>0] = $2099;
          $2101 = (($4) + 545|0);
          $2102 = (($2101) + 1|0);
          HEAP8[$2102>>0] = -1;
          $2103 = $ij325;
          $2104 = (($2103) + 1)|0;
          $iij326 = $2104;
          L729: while(1) {
           $2105 = $iij326;
           $2106 = ($2105|0)<(1);
           if (!($2106)) {
            break;
           }
           $2107 = $iij326;
           $2108 = (($j3valid24) + ($2107)|0);
           $2109 = HEAP8[$2108>>0]|0;
           $2110 = $2109&1;
           do {
            if ($2110) {
             $2111 = $ij325;
             $2112 = (($cj3array22) + ($2111<<3)|0);
             $2113 = +HEAPF64[$2112>>3];
             $2114 = $iij326;
             $2115 = (($cj3array22) + ($2114<<3)|0);
             $2116 = +HEAPF64[$2115>>3];
             $2117 = $2113 - $2116;
             $2118 = (+__Z5IKabsd($2117));
             $2119 = $2118 < 9.9999999999999995E-7;
             if (!($2119)) {
              break;
             }
             $2120 = $ij325;
             $2121 = (($sj3array23) + ($2120<<3)|0);
             $2122 = +HEAPF64[$2121>>3];
             $2123 = $iij326;
             $2124 = (($sj3array23) + ($2123<<3)|0);
             $2125 = +HEAPF64[$2124>>3];
             $2126 = $2122 - $2125;
             $2127 = (+__Z5IKabsd($2126));
             $2128 = $2127 < 9.9999999999999995E-7;
             if ($2128) {
              label = 269;
              break L729;
             }
            }
           } while(0);
           $2135 = $iij326;
           $2136 = (($2135) + 1)|0;
           $iij326 = $2136;
          }
          if ((label|0) == 269) {
           label = 0;
           $2129 = $iij326;
           $2130 = (($j3valid24) + ($2129)|0);
           HEAP8[$2130>>0] = 0;
           $2131 = $iij326;
           $2132 = $2131&255;
           $2133 = (($4) + 545|0);
           $2134 = (($2133) + 1|0);
           HEAP8[$2134>>0] = $2132;
          }
          $2137 = $ij325;
          $2138 = (($j3array21) + ($2137<<3)|0);
          $2139 = +HEAPF64[$2138>>3];
          $2140 = (($4) + 120|0);
          HEAPF64[$2140>>3] = $2139;
          $2141 = $ij325;
          $2142 = (($cj3array22) + ($2141<<3)|0);
          $2143 = +HEAPF64[$2142>>3];
          $2144 = (($4) + 128|0);
          HEAPF64[$2144>>3] = $2143;
          $2145 = $ij325;
          $2146 = (($sj3array23) + ($2145<<3)|0);
          $2147 = +HEAPF64[$2146>>3];
          $2148 = (($4) + 136|0);
          HEAPF64[$2148>>3] = $2147;
          $2149 = (($4) + 120|0);
          $2150 = +HEAPF64[$2149>>3];
          $2151 = (+__Z5IKsind($2150));
          $x150 = $2151;
          $2152 = (($4) + 120|0);
          $2153 = +HEAPF64[$2152>>3];
          $2154 = (+__Z5IKcosd($2153));
          $x151 = $2154;
          $2155 = (($4) + 168|0);
          $2156 = +HEAPF64[$2155>>3];
          $2157 = 1.0 * $2156;
          $x152 = $2157;
          $2158 = (($4) + 176|0);
          $2159 = +HEAPF64[$2158>>3];
          $2160 = 1.0 * $2159;
          $x153 = $2160;
          $2161 = (($4) + 176|0);
          $2162 = +HEAPF64[$2161>>3];
          $2163 = $x151;
          $2164 = $2162 * $2163;
          $x154 = $2164;
          $2165 = (($4) + 288|0);
          $2166 = +HEAPF64[$2165>>3];
          $2167 = $x150;
          $2168 = $2166 * $2167;
          $x155 = $2168;
          $2169 = (($4) + 360|0);
          $2170 = +HEAPF64[$2169>>3];
          $2171 = $x151;
          $2172 = $2170 * $2171;
          $x156 = $2172;
          $2173 = $x154;
          $2174 = (($4) + 360|0);
          $2175 = +HEAPF64[$2174>>3];
          $2176 = $2173 + $2175;
          HEAPF64[$evalcond27>>3] = $2176;
          $2177 = $x150;
          $2178 = -1.0 * $2177;
          $2179 = $x153;
          $2180 = $2178 * $2179;
          $2181 = (($4) + 288|0);
          $2182 = +HEAPF64[$2181>>3];
          $2183 = $2180 + $2182;
          $2184 = (($evalcond27) + 8|0);
          HEAPF64[$2184>>3] = $2183;
          $2185 = (($4) + 360|0);
          $2186 = +HEAPF64[$2185>>3];
          $2187 = $x150;
          $2188 = $2186 * $2187;
          $2189 = (($4) + 288|0);
          $2190 = +HEAPF64[$2189>>3];
          $2191 = $x151;
          $2192 = $2190 * $2191;
          $2193 = $2188 + $2192;
          $2194 = (($evalcond27) + 16|0);
          HEAPF64[$2194>>3] = $2193;
          $2195 = (($4) + 176|0);
          $2196 = +HEAPF64[$2195>>3];
          $2197 = $x156;
          $2198 = $2196 + $2197;
          $2199 = $x155;
          $2200 = -1.0 * $2199;
          $2201 = $2198 + $2200;
          $2202 = (($evalcond27) + 24|0);
          HEAPF64[$2202>>3] = $2201;
          $2203 = (($4) + 168|0);
          $2204 = +HEAPF64[$2203>>3];
          $2205 = $x155;
          $2206 = $2204 * $2205;
          $2207 = (($4) + 432|0);
          $2208 = +HEAPF64[$2207>>3];
          $2209 = -1.0 * $2208;
          $2210 = $x153;
          $2211 = $2209 * $2210;
          $2212 = $2206 + $2211;
          $2213 = $x152;
          $2214 = -1.0 * $2213;
          $2215 = $x156;
          $2216 = $2214 * $2215;
          $2217 = $2212 + $2216;
          $2218 = (($evalcond27) + 32|0);
          HEAPF64[$2218>>3] = $2217;
          $2219 = (($4) + 384|0);
          $2220 = +HEAPF64[$2219>>3];
          $2221 = -1.0 * $2220;
          $2222 = $x152;
          $2223 = $2221 * $2222;
          $2224 = (($4) + 240|0);
          $2225 = +HEAPF64[$2224>>3];
          $2226 = -1.0 * $2225;
          $2227 = $x150;
          $2228 = $2226 * $2227;
          $2229 = $x153;
          $2230 = $2228 * $2229;
          $2231 = $2223 + $2230;
          $2232 = (($4) + 312|0);
          $2233 = +HEAPF64[$2232>>3];
          $2234 = $x154;
          $2235 = $2233 * $2234;
          $2236 = $2231 + $2235;
          $2237 = (($evalcond27) + 40|0);
          HEAPF64[$2237>>3] = $2236;
          $2238 = (($4) + 336|0);
          $2239 = +HEAPF64[$2238>>3];
          $2240 = $x154;
          $2241 = $2239 * $2240;
          $2242 = (($4) + 408|0);
          $2243 = +HEAPF64[$2242>>3];
          $2244 = -1.0 * $2243;
          $2245 = $x152;
          $2246 = $2244 * $2245;
          $2247 = $2241 + $2246;
          $2248 = (($4) + 264|0);
          $2249 = +HEAPF64[$2248>>3];
          $2250 = -1.0 * $2249;
          $2251 = $x150;
          $2252 = $2250 * $2251;
          $2253 = $x153;
          $2254 = $2252 * $2253;
          $2255 = $2247 + $2254;
          $2256 = (($evalcond27) + 48|0);
          HEAPF64[$2256>>3] = $2255;
          $2257 = (($4) + 360|0);
          $2258 = +HEAPF64[$2257>>3];
          $2259 = $x154;
          $2260 = $2258 * $2259;
          $2261 = 1.0 + $2260;
          $2262 = $x153;
          $2263 = -1.0 * $2262;
          $2264 = $x155;
          $2265 = $2263 * $2264;
          $2266 = $2261 + $2265;
          $2267 = (($4) + 432|0);
          $2268 = +HEAPF64[$2267>>3];
          $2269 = -1.0 * $2268;
          $2270 = $x152;
          $2271 = $2269 * $2270;
          $2272 = $2266 + $2271;
          $2273 = (($evalcond27) + 56|0);
          HEAPF64[$2273>>3] = $2272;
          $2274 = +HEAPF64[$evalcond27>>3];
          $2275 = (+__Z5IKabsd($2274));
          $2276 = $2275 > 5.0000000000000004E-6;
          do {
           if (!($2276)) {
            $2277 = (($evalcond27) + 8|0);
            $2278 = +HEAPF64[$2277>>3];
            $2279 = (+__Z5IKabsd($2278));
            $2280 = $2279 > 5.0000000000000004E-6;
            if ($2280) {
             break;
            }
            $2281 = (($evalcond27) + 16|0);
            $2282 = +HEAPF64[$2281>>3];
            $2283 = (+__Z5IKabsd($2282));
            $2284 = $2283 > 5.0000000000000004E-6;
            if ($2284) {
             break;
            }
            $2285 = (($evalcond27) + 24|0);
            $2286 = +HEAPF64[$2285>>3];
            $2287 = (+__Z5IKabsd($2286));
            $2288 = $2287 > 5.0000000000000004E-6;
            if ($2288) {
             break;
            }
            $2289 = (($evalcond27) + 32|0);
            $2290 = +HEAPF64[$2289>>3];
            $2291 = (+__Z5IKabsd($2290));
            $2292 = $2291 > 5.0000000000000004E-6;
            if ($2292) {
             break;
            }
            $2293 = (($evalcond27) + 40|0);
            $2294 = +HEAPF64[$2293>>3];
            $2295 = (+__Z5IKabsd($2294));
            $2296 = $2295 > 5.0000000000000004E-6;
            if ($2296) {
             break;
            }
            $2297 = (($evalcond27) + 48|0);
            $2298 = +HEAPF64[$2297>>3];
            $2299 = (+__Z5IKabsd($2298));
            $2300 = $2299 > 5.0000000000000004E-6;
            if ($2300) {
             break;
            }
            $2301 = (($evalcond27) + 56|0);
            $2302 = +HEAPF64[$2301>>3];
            $2303 = (+__Z5IKabsd($2302));
            $2304 = $2303 > 5.0000000000000004E-6;
            if ($2304) {
             break;
            }
            $2305 = (($4) + 8|0);
            $2306 = +HEAPF64[$2305>>3];
            $2307 = 1.0 * $2306;
            $x157 = $2307;
            $2308 = (($4) + 344|0);
            $2309 = +HEAPF64[$2308>>3];
            $2310 = (($4) + 16|0);
            $2311 = +HEAPF64[$2310>>3];
            $2312 = $2309 * $2311;
            $x158 = $2312;
            $2313 = (($4) + 56|0);
            $2314 = +HEAPF64[$2313>>3];
            $2315 = (($4) + 96|0);
            $2316 = +HEAPF64[$2315>>3];
            $2317 = $2314 * $2316;
            $x159 = $2317;
            $2318 = (($4) + 320|0);
            $2319 = +HEAPF64[$2318>>3];
            $2320 = (($4) + 16|0);
            $2321 = +HEAPF64[$2320>>3];
            $2322 = $2319 * $2321;
            $x160 = $2322;
            $2323 = (($4) + 8|0);
            $2324 = +HEAPF64[$2323>>3];
            $2325 = (($4) + 248|0);
            $2326 = +HEAPF64[$2325>>3];
            $2327 = $2324 * $2326;
            $x161 = $2327;
            $2328 = (($4) + 48|0);
            $2329 = +HEAPF64[$2328>>3];
            $2330 = (($4) + 88|0);
            $2331 = +HEAPF64[$2330>>3];
            $2332 = $2329 * $2331;
            $x162 = $2332;
            $2333 = (($4) + 8|0);
            $2334 = +HEAPF64[$2333>>3];
            $2335 = (($4) + 272|0);
            $2336 = +HEAPF64[$2335>>3];
            $2337 = $2334 * $2336;
            $x163 = $2337;
            $2338 = (($4) + 368|0);
            $2339 = +HEAPF64[$2338>>3];
            $2340 = (($4) + 16|0);
            $2341 = +HEAPF64[$2340>>3];
            $2342 = $2339 * $2341;
            $x164 = $2342;
            $2343 = (($4) + 8|0);
            $2344 = +HEAPF64[$2343>>3];
            $2345 = (($4) + 296|0);
            $2346 = +HEAPF64[$2345>>3];
            $2347 = $2344 * $2346;
            $x165 = $2347;
            $2348 = $x162;
            $2349 = $x159;
            $2350 = -1.0 * $2349;
            $2351 = $2348 + $2350;
            $x166 = $2351;
            $2352 = $x159;
            $2353 = $x162;
            $2354 = -1.0 * $2353;
            $2355 = $2352 + $2354;
            $x167 = $2355;
            $2356 = (($4) + 16|0);
            $2357 = +HEAPF64[$2356>>3];
            $2358 = $x167;
            $2359 = $2357 * $2358;
            $x168 = $2359;
            $2360 = $x98;
            $x169 = $2360;
            $2361 = (($4) + 8|0);
            $2362 = +HEAPF64[$2361>>3];
            $2363 = $x169;
            $2364 = $2362 * $2363;
            $x170 = $2364;
            $2365 = (($4) + 248|0);
            $2366 = +HEAPF64[$2365>>3];
            $2367 = (($4) + 16|0);
            $2368 = +HEAPF64[$2367>>3];
            $2369 = $2366 * $2368;
            $2370 = (($4) + 320|0);
            $2371 = +HEAPF64[$2370>>3];
            $2372 = -1.0 * $2371;
            $2373 = $x157;
            $2374 = $2372 * $2373;
            $2375 = $2369 + $2374;
            $2376 = (($4) + 240|0);
            HEAPF64[$2376>>3] = $2375;
            $2377 = (($4) + 272|0);
            $2378 = +HEAPF64[$2377>>3];
            $2379 = (($4) + 16|0);
            $2380 = +HEAPF64[$2379>>3];
            $2381 = $2378 * $2380;
            $2382 = (($4) + 344|0);
            $2383 = +HEAPF64[$2382>>3];
            $2384 = -1.0 * $2383;
            $2385 = $x157;
            $2386 = $2384 * $2385;
            $2387 = $2381 + $2386;
            $2388 = (($4) + 264|0);
            HEAPF64[$2388>>3] = $2387;
            $2389 = (($4) + 296|0);
            $2390 = +HEAPF64[$2389>>3];
            $2391 = (($4) + 16|0);
            $2392 = +HEAPF64[$2391>>3];
            $2393 = $2390 * $2392;
            $2394 = (($4) + 368|0);
            $2395 = +HEAPF64[$2394>>3];
            $2396 = -1.0 * $2395;
            $2397 = $x157;
            $2398 = $2396 * $2397;
            $2399 = $2393 + $2398;
            $2400 = (($4) + 288|0);
            HEAPF64[$2400>>3] = $2399;
            $2401 = $x161;
            $2402 = $x169;
            $2403 = $2401 * $2402;
            $2404 = (($4) + 392|0);
            $2405 = +HEAPF64[$2404>>3];
            $2406 = $x166;
            $2407 = $2405 * $2406;
            $2408 = $2403 + $2407;
            $2409 = $x160;
            $2410 = $x169;
            $2411 = $2409 * $2410;
            $2412 = $2408 + $2411;
            $2413 = (($4) + 312|0);
            HEAPF64[$2413>>3] = $2412;
            $2414 = (($4) + 416|0);
            $2415 = +HEAPF64[$2414>>3];
            $2416 = $x166;
            $2417 = $2415 * $2416;
            $2418 = $x158;
            $2419 = $x169;
            $2420 = $2418 * $2419;
            $2421 = $2417 + $2420;
            $2422 = $x163;
            $2423 = $x169;
            $2424 = $2422 * $2423;
            $2425 = $2421 + $2424;
            $2426 = (($4) + 336|0);
            HEAPF64[$2426>>3] = $2425;
            $2427 = (($4) + 440|0);
            $2428 = +HEAPF64[$2427>>3];
            $2429 = $x166;
            $2430 = $2428 * $2429;
            $2431 = $x164;
            $2432 = $x169;
            $2433 = $2431 * $2432;
            $2434 = $2430 + $2433;
            $2435 = $x165;
            $2436 = $x169;
            $2437 = $2435 * $2436;
            $2438 = $2434 + $2437;
            $2439 = (($4) + 360|0);
            HEAPF64[$2439>>3] = $2438;
            $2440 = $x161;
            $2441 = $x167;
            $2442 = $2440 * $2441;
            $2443 = (($4) + 392|0);
            $2444 = +HEAPF64[$2443>>3];
            $2445 = $x169;
            $2446 = $2444 * $2445;
            $2447 = $2442 + $2446;
            $2448 = $x160;
            $2449 = $x167;
            $2450 = $2448 * $2449;
            $2451 = $2447 + $2450;
            $2452 = (($4) + 384|0);
            HEAPF64[$2452>>3] = $2451;
            $2453 = (($4) + 416|0);
            $2454 = +HEAPF64[$2453>>3];
            $2455 = $x169;
            $2456 = $2454 * $2455;
            $2457 = $x158;
            $2458 = $x167;
            $2459 = $2457 * $2458;
            $2460 = $2456 + $2459;
            $2461 = $x163;
            $2462 = $x167;
            $2463 = $2461 * $2462;
            $2464 = $2460 + $2463;
            $2465 = (($4) + 408|0);
            HEAPF64[$2465>>3] = $2464;
            $2466 = (($4) + 440|0);
            $2467 = +HEAPF64[$2466>>3];
            $2468 = $x169;
            $2469 = $2467 * $2468;
            $2470 = $x164;
            $2471 = $x167;
            $2472 = $2470 * $2471;
            $2473 = $2469 + $2472;
            $2474 = $x165;
            $2475 = $x167;
            $2476 = $2474 * $2475;
            $2477 = $2473 + $2476;
            $2478 = (($4) + 432|0);
            HEAPF64[$2478>>3] = $2477;
            $2479 = (($4) + 176|0);
            $2480 = +HEAPF64[$2479>>3];
            HEAPF64[$j5eval28>>3] = $2480;
            $2481 = (($4) + 176|0);
            $2482 = +HEAPF64[$2481>>3];
            $2483 = (+__Z6IKsignd($2482));
            $2484 = (($j5eval28) + 8|0);
            HEAPF64[$2484>>3] = $2483;
            $2485 = +HEAPF64[$j5eval28>>3];
            $2486 = (+__Z5IKabsd($2485));
            $2487 = $2486 < 9.9999999999999995E-7;
            do {
             if ($2487) {
              label = 283;
             } else {
              $2488 = (($j5eval28) + 8|0);
              $2489 = +HEAPF64[$2488>>3];
              $2490 = (+__Z5IKabsd($2489));
              $2491 = $2490 < 9.9999999999999995E-7;
              if ($2491) {
               label = 283;
               break;
              }
              ;HEAP8[$j5valid134+0>>0]=0|0;
              $8524 = (($4) + 553|0);
              HEAP8[$8524>>0] = 1;
              $8525 = (($4) + 176|0);
              $8526 = +HEAPF64[$8525>>3];
              $8527 = (+__Z6IKsignd($8526));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x295,$8527,-1);
              $8528 = (($x295) + 8|0);
              $8529 = HEAP8[$8528>>0]|0;
              $8530 = $8529&1;
              if (!($8530)) {
               break L726;
              }
              $8531 = (($4) + 384|0);
              $8532 = +HEAPF64[$8531>>3];
              $8533 = (($4) + 408|0);
              $8534 = +HEAPF64[$8533>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x296,$8532,$8534,1.9999999999999999E-6);
              $8535 = (($x296) + 8|0);
              $8536 = HEAP8[$8535>>0]|0;
              $8537 = $8536&1;
              if (!($8537)) {
               break L726;
              }
              $8538 = +HEAPF64[$x295>>3];
              $8539 = 1.5707963267949001 * $8538;
              $8540 = -1.5707963267949001 + $8539;
              $8541 = +HEAPF64[$x296>>3];
              $8542 = $8540 + $8541;
              HEAPF64[$j5array131>>3] = $8542;
              $8543 = +HEAPF64[$j5array131>>3];
              $8544 = (+__Z5IKsind($8543));
              HEAPF64[$sj5array133>>3] = $8544;
              $8545 = +HEAPF64[$j5array131>>3];
              $8546 = (+__Z5IKcosd($8545));
              HEAPF64[$cj5array132>>3] = $8546;
              $8547 = +HEAPF64[$j5array131>>3];
              $8548 = $8547 > 3.14159265358979;
              if ($8548) {
               $8549 = +HEAPF64[$j5array131>>3];
               $8550 = $8549 - 6.2831853071795898;
               HEAPF64[$j5array131>>3] = $8550;
              } else {
               $8551 = +HEAPF64[$j5array131>>3];
               $8552 = $8551 < -3.14159265358979;
               if ($8552) {
                $8553 = +HEAPF64[$j5array131>>3];
                $8554 = $8553 + 6.2831853071795898;
                HEAPF64[$j5array131>>3] = $8554;
               }
              }
              HEAP8[$j5valid134>>0] = 1;
              $ij5135 = 0;
              while(1) {
               $8555 = $ij5135;
               $8556 = ($8555|0)<(1);
               if (!($8556)) {
                break;
               }
               $8557 = $ij5135;
               $8558 = (($j5valid134) + ($8557)|0);
               $8559 = HEAP8[$8558>>0]|0;
               $8560 = $8559&1;
               L768: do {
                if ($8560) {
                 $8561 = $ij5135;
                 $8562 = $8561&255;
                 $8563 = (($4) + 551|0);
                 HEAP8[$8563>>0] = $8562;
                 $8564 = (($4) + 551|0);
                 $8565 = (($8564) + 1|0);
                 HEAP8[$8565>>0] = -1;
                 $8566 = $ij5135;
                 $8567 = (($8566) + 1)|0;
                 $iij5136 = $8567;
                 L771: while(1) {
                  $8568 = $iij5136;
                  $8569 = ($8568|0)<(1);
                  if (!($8569)) {
                   break;
                  }
                  $8570 = $iij5136;
                  $8571 = (($j5valid134) + ($8570)|0);
                  $8572 = HEAP8[$8571>>0]|0;
                  $8573 = $8572&1;
                  do {
                   if ($8573) {
                    $8574 = $ij5135;
                    $8575 = (($cj5array132) + ($8574<<3)|0);
                    $8576 = +HEAPF64[$8575>>3];
                    $8577 = $iij5136;
                    $8578 = (($cj5array132) + ($8577<<3)|0);
                    $8579 = +HEAPF64[$8578>>3];
                    $8580 = $8576 - $8579;
                    $8581 = (+__Z5IKabsd($8580));
                    $8582 = $8581 < 9.9999999999999995E-7;
                    if (!($8582)) {
                     break;
                    }
                    $8583 = $ij5135;
                    $8584 = (($sj5array133) + ($8583<<3)|0);
                    $8585 = +HEAPF64[$8584>>3];
                    $8586 = $iij5136;
                    $8587 = (($sj5array133) + ($8586<<3)|0);
                    $8588 = +HEAPF64[$8587>>3];
                    $8589 = $8585 - $8588;
                    $8590 = (+__Z5IKabsd($8589));
                    $8591 = $8590 < 9.9999999999999995E-7;
                    if ($8591) {
                     label = 1157;
                     break L771;
                    }
                   }
                  } while(0);
                  $8598 = $iij5136;
                  $8599 = (($8598) + 1)|0;
                  $iij5136 = $8599;
                 }
                 if ((label|0) == 1157) {
                  label = 0;
                  $8592 = $iij5136;
                  $8593 = (($j5valid134) + ($8592)|0);
                  HEAP8[$8593>>0] = 0;
                  $8594 = $iij5136;
                  $8595 = $8594&255;
                  $8596 = (($4) + 551|0);
                  $8597 = (($8596) + 1|0);
                  HEAP8[$8597>>0] = $8595;
                 }
                 $8600 = $ij5135;
                 $8601 = (($j5array131) + ($8600<<3)|0);
                 $8602 = +HEAPF64[$8601>>3];
                 $8603 = (($4) + 200|0);
                 HEAPF64[$8603>>3] = $8602;
                 $8604 = $ij5135;
                 $8605 = (($cj5array132) + ($8604<<3)|0);
                 $8606 = +HEAPF64[$8605>>3];
                 $8607 = (($4) + 208|0);
                 HEAPF64[$8607>>3] = $8606;
                 $8608 = $ij5135;
                 $8609 = (($sj5array133) + ($8608<<3)|0);
                 $8610 = +HEAPF64[$8609>>3];
                 $8611 = (($4) + 216|0);
                 HEAPF64[$8611>>3] = $8610;
                 $8612 = (($4) + 200|0);
                 $8613 = +HEAPF64[$8612>>3];
                 $8614 = (+__Z5IKsind($8613));
                 $x297 = $8614;
                 $8615 = (($4) + 200|0);
                 $8616 = +HEAPF64[$8615>>3];
                 $8617 = (+__Z5IKcosd($8616));
                 $x298 = $8617;
                 $8618 = (($4) + 168|0);
                 $8619 = +HEAPF64[$8618>>3];
                 $8620 = (($4) + 136|0);
                 $8621 = +HEAPF64[$8620>>3];
                 $8622 = $8619 * $8621;
                 $x299 = $8622;
                 $8623 = (($4) + 128|0);
                 $8624 = +HEAPF64[$8623>>3];
                 $8625 = (($4) + 312|0);
                 $8626 = +HEAPF64[$8625>>3];
                 $8627 = $8624 * $8626;
                 $x300 = $8627;
                 $8628 = (($4) + 128|0);
                 $8629 = +HEAPF64[$8628>>3];
                 $8630 = (($4) + 336|0);
                 $8631 = +HEAPF64[$8630>>3];
                 $8632 = $8629 * $8631;
                 $x301 = $8632;
                 $8633 = (($4) + 136|0);
                 $8634 = +HEAPF64[$8633>>3];
                 $8635 = 1.0 * $8634;
                 $x302 = $8635;
                 $8636 = (($4) + 168|0);
                 $8637 = +HEAPF64[$8636>>3];
                 $8638 = 1.0 * $8637;
                 $x303 = $8638;
                 $8639 = (($4) + 176|0);
                 $8640 = +HEAPF64[$8639>>3];
                 $8641 = 1.0 * $8640;
                 $x304 = $8641;
                 $8642 = (($4) + 168|0);
                 $8643 = +HEAPF64[$8642>>3];
                 $8644 = $x297;
                 $8645 = $8643 * $8644;
                 $x305 = $8645;
                 $8646 = $x298;
                 $8647 = 1.0 * $8646;
                 $x306 = $8647;
                 $8648 = $x297;
                 $8649 = -1.0 * $8648;
                 $8650 = $x304;
                 $8651 = $8649 * $8650;
                 $8652 = (($4) + 384|0);
                 $8653 = +HEAPF64[$8652>>3];
                 $8654 = $8651 + $8653;
                 HEAPF64[$evalcond137>>3] = $8654;
                 $8655 = $x298;
                 $8656 = -1.0 * $8655;
                 $8657 = $x304;
                 $8658 = $8656 * $8657;
                 $8659 = (($4) + 408|0);
                 $8660 = +HEAPF64[$8659>>3];
                 $8661 = $8658 + $8660;
                 $8662 = (($evalcond137) + 8|0);
                 HEAPF64[$8662>>3] = $8661;
                 $8663 = (($4) + 336|0);
                 $8664 = +HEAPF64[$8663>>3];
                 $8665 = (($4) + 136|0);
                 $8666 = +HEAPF64[$8665>>3];
                 $8667 = $8664 * $8666;
                 $8668 = $x297;
                 $8669 = $8667 + $8668;
                 $8670 = (($4) + 128|0);
                 $8671 = +HEAPF64[$8670>>3];
                 $8672 = (($4) + 264|0);
                 $8673 = +HEAPF64[$8672>>3];
                 $8674 = $8671 * $8673;
                 $8675 = $8669 + $8674;
                 $8676 = (($evalcond137) + 16|0);
                 HEAPF64[$8676>>3] = $8675;
                 $8677 = (($4) + 312|0);
                 $8678 = +HEAPF64[$8677>>3];
                 $8679 = (($4) + 136|0);
                 $8680 = +HEAPF64[$8679>>3];
                 $8681 = $8678 * $8680;
                 $8682 = (($4) + 128|0);
                 $8683 = +HEAPF64[$8682>>3];
                 $8684 = (($4) + 240|0);
                 $8685 = +HEAPF64[$8684>>3];
                 $8686 = $8683 * $8685;
                 $8687 = $8681 + $8686;
                 $8688 = $x306;
                 $8689 = -1.0 * $8688;
                 $8690 = $8687 + $8689;
                 $8691 = (($evalcond137) + 24|0);
                 HEAPF64[$8691>>3] = $8690;
                 $8692 = (($4) + 128|0);
                 $8693 = +HEAPF64[$8692>>3];
                 $8694 = $x297;
                 $8695 = $8693 * $8694;
                 $8696 = $x298;
                 $8697 = $x299;
                 $8698 = $8696 * $8697;
                 $8699 = $8695 + $8698;
                 $8700 = (($4) + 264|0);
                 $8701 = +HEAPF64[$8700>>3];
                 $8702 = $8699 + $8701;
                 $8703 = (($evalcond137) + 32|0);
                 HEAPF64[$8703>>3] = $8702;
                 $8704 = (($4) + 128|0);
                 $8705 = +HEAPF64[$8704>>3];
                 $8706 = -1.0 * $8705;
                 $8707 = $x306;
                 $8708 = $8706 * $8707;
                 $8709 = $x297;
                 $8710 = $x299;
                 $8711 = $8709 * $8710;
                 $8712 = $8708 + $8711;
                 $8713 = (($4) + 240|0);
                 $8714 = +HEAPF64[$8713>>3];
                 $8715 = $8712 + $8714;
                 $8716 = (($evalcond137) + 40|0);
                 HEAPF64[$8716>>3] = $8715;
                 $8717 = (($4) + 128|0);
                 $8718 = +HEAPF64[$8717>>3];
                 $8719 = -1.0 * $8718;
                 $8720 = $x298;
                 $8721 = $8719 * $8720;
                 $8722 = $x303;
                 $8723 = $8721 * $8722;
                 $8724 = (($4) + 336|0);
                 $8725 = +HEAPF64[$8724>>3];
                 $8726 = $8723 + $8725;
                 $8727 = (($4) + 136|0);
                 $8728 = +HEAPF64[$8727>>3];
                 $8729 = $x297;
                 $8730 = $8728 * $8729;
                 $8731 = $8726 + $8730;
                 $8732 = (($evalcond137) + 48|0);
                 HEAPF64[$8732>>3] = $8731;
                 $8733 = $x297;
                 $8734 = -1.0 * $8733;
                 $8735 = $x303;
                 $8736 = $8734 * $8735;
                 $8737 = $x300;
                 $8738 = $8736 + $8737;
                 $8739 = (($4) + 240|0);
                 $8740 = +HEAPF64[$8739>>3];
                 $8741 = -1.0 * $8740;
                 $8742 = $x302;
                 $8743 = $8741 * $8742;
                 $8744 = $8738 + $8743;
                 $8745 = (($evalcond137) + 56|0);
                 HEAPF64[$8745>>3] = $8744;
                 $8746 = $x298;
                 $8747 = -1.0 * $8746;
                 $8748 = $x303;
                 $8749 = $8747 * $8748;
                 $8750 = $x301;
                 $8751 = $8749 + $8750;
                 $8752 = (($4) + 264|0);
                 $8753 = +HEAPF64[$8752>>3];
                 $8754 = -1.0 * $8753;
                 $8755 = $x302;
                 $8756 = $8754 * $8755;
                 $8757 = $8751 + $8756;
                 $8758 = (($evalcond137) + 64|0);
                 HEAPF64[$8758>>3] = $8757;
                 $8759 = $x298;
                 $8760 = -1.0 * $8759;
                 $8761 = $x302;
                 $8762 = $8760 * $8761;
                 $8763 = (($4) + 128|0);
                 $8764 = +HEAPF64[$8763>>3];
                 $8765 = -1.0 * $8764;
                 $8766 = $x297;
                 $8767 = $8765 * $8766;
                 $8768 = $x303;
                 $8769 = $8767 * $8768;
                 $8770 = $8762 + $8769;
                 $8771 = (($4) + 312|0);
                 $8772 = +HEAPF64[$8771>>3];
                 $8773 = $8770 + $8772;
                 $8774 = (($evalcond137) + 72|0);
                 HEAPF64[$8774>>3] = $8773;
                 $8775 = (($4) + 384|0);
                 $8776 = +HEAPF64[$8775>>3];
                 $8777 = -1.0 * $8776;
                 $8778 = $x304;
                 $8779 = $8777 * $8778;
                 $8780 = (($4) + 240|0);
                 $8781 = +HEAPF64[$8780>>3];
                 $8782 = $x299;
                 $8783 = $8781 * $8782;
                 $8784 = $8779 + $8783;
                 $8785 = $x297;
                 $8786 = $8784 + $8785;
                 $8787 = $x300;
                 $8788 = -1.0 * $8787;
                 $8789 = $x303;
                 $8790 = $8788 * $8789;
                 $8791 = $8786 + $8790;
                 $8792 = (($evalcond137) + 80|0);
                 HEAPF64[$8792>>3] = $8791;
                 $8793 = $x301;
                 $8794 = -1.0 * $8793;
                 $8795 = $x303;
                 $8796 = $8794 * $8795;
                 $8797 = (($4) + 408|0);
                 $8798 = +HEAPF64[$8797>>3];
                 $8799 = -1.0 * $8798;
                 $8800 = $x304;
                 $8801 = $8799 * $8800;
                 $8802 = $8796 + $8801;
                 $8803 = $x298;
                 $8804 = $8802 + $8803;
                 $8805 = (($4) + 264|0);
                 $8806 = +HEAPF64[$8805>>3];
                 $8807 = $x299;
                 $8808 = $8806 * $8807;
                 $8809 = $8804 + $8808;
                 $8810 = (($evalcond137) + 88|0);
                 HEAPF64[$8810>>3] = $8809;
                 $8811 = +HEAPF64[$evalcond137>>3];
                 $8812 = (+__Z5IKabsd($8811));
                 $8813 = $8812 > 5.0000000000000004E-6;
                 do {
                  if (!($8813)) {
                   $8814 = (($evalcond137) + 8|0);
                   $8815 = +HEAPF64[$8814>>3];
                   $8816 = (+__Z5IKabsd($8815));
                   $8817 = $8816 > 5.0000000000000004E-6;
                   if ($8817) {
                    break;
                   }
                   $8818 = (($evalcond137) + 16|0);
                   $8819 = +HEAPF64[$8818>>3];
                   $8820 = (+__Z5IKabsd($8819));
                   $8821 = $8820 > 5.0000000000000004E-6;
                   if ($8821) {
                    break;
                   }
                   $8822 = (($evalcond137) + 24|0);
                   $8823 = +HEAPF64[$8822>>3];
                   $8824 = (+__Z5IKabsd($8823));
                   $8825 = $8824 > 5.0000000000000004E-6;
                   if ($8825) {
                    break;
                   }
                   $8826 = (($evalcond137) + 32|0);
                   $8827 = +HEAPF64[$8826>>3];
                   $8828 = (+__Z5IKabsd($8827));
                   $8829 = $8828 > 5.0000000000000004E-6;
                   if ($8829) {
                    break;
                   }
                   $8830 = (($evalcond137) + 40|0);
                   $8831 = +HEAPF64[$8830>>3];
                   $8832 = (+__Z5IKabsd($8831));
                   $8833 = $8832 > 5.0000000000000004E-6;
                   if ($8833) {
                    break;
                   }
                   $8834 = (($evalcond137) + 48|0);
                   $8835 = +HEAPF64[$8834>>3];
                   $8836 = (+__Z5IKabsd($8835));
                   $8837 = $8836 > 5.0000000000000004E-6;
                   if ($8837) {
                    break;
                   }
                   $8838 = (($evalcond137) + 56|0);
                   $8839 = +HEAPF64[$8838>>3];
                   $8840 = (+__Z5IKabsd($8839));
                   $8841 = $8840 > 5.0000000000000004E-6;
                   if ($8841) {
                    break;
                   }
                   $8842 = (($evalcond137) + 64|0);
                   $8843 = +HEAPF64[$8842>>3];
                   $8844 = (+__Z5IKabsd($8843));
                   $8845 = $8844 > 5.0000000000000004E-6;
                   if ($8845) {
                    break;
                   }
                   $8846 = (($evalcond137) + 72|0);
                   $8847 = +HEAPF64[$8846>>3];
                   $8848 = (+__Z5IKabsd($8847));
                   $8849 = $8848 > 5.0000000000000004E-6;
                   if ($8849) {
                    break;
                   }
                   $8850 = (($evalcond137) + 80|0);
                   $8851 = +HEAPF64[$8850>>3];
                   $8852 = (+__Z5IKabsd($8851));
                   $8853 = $8852 > 5.0000000000000004E-6;
                   if ($8853) {
                    break;
                   }
                   $8854 = (($evalcond137) + 88|0);
                   $8855 = +HEAPF64[$8854>>3];
                   $8856 = (+__Z5IKabsd($8855));
                   $8857 = $8856 > 5.0000000000000004E-6;
                   if ($8857) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos138,6);
                   __THREW__ = 0;
                   $8858 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8859 = __THREW__; __THREW__ = 0;
                   $8860 = $8859&1;
                   if ($8860) {
                    label = 1208;
                    break L1;
                   }
                   $8861 = (($8858) + 17|0);
                   HEAP8[$8861>>0] = 1;
                   $8862 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $8863 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8864 = __THREW__; __THREW__ = 0;
                   $8865 = $8864&1;
                   if ($8865) {
                    label = 1208;
                    break L1;
                   }
                   $8866 = (($8863) + 8|0);
                   HEAPF64[$8866>>3] = $8862;
                   $8867 = (($4) + 536|0);
                   $8868 = HEAP8[$8867>>0]|0;
                   __THREW__ = 0;
                   $8869 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8870 = __THREW__; __THREW__ = 0;
                   $8871 = $8870&1;
                   if ($8871) {
                    label = 1208;
                    break L1;
                   }
                   $8872 = (($8869) + 19|0);
                   HEAP8[$8872>>0] = $8868;
                   $8873 = (($4) + 536|0);
                   $8874 = (($8873) + 1|0);
                   $8875 = HEAP8[$8874>>0]|0;
                   __THREW__ = 0;
                   $8876 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8877 = __THREW__; __THREW__ = 0;
                   $8878 = $8877&1;
                   if ($8878) {
                    label = 1208;
                    break L1;
                   }
                   $8879 = (($8876) + 19|0);
                   $8880 = (($8879) + 1|0);
                   HEAP8[$8880>>0] = $8875;
                   $8881 = (($4) + 538|0);
                   $8882 = HEAP8[$8881>>0]|0;
                   __THREW__ = 0;
                   $8883 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8884 = __THREW__; __THREW__ = 0;
                   $8885 = $8884&1;
                   if ($8885) {
                    label = 1208;
                    break L1;
                   }
                   $8886 = (($8883) + 18|0);
                   HEAP8[$8886>>0] = $8882;
                   __THREW__ = 0;
                   $8887 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8888 = __THREW__; __THREW__ = 0;
                   $8889 = $8888&1;
                   if ($8889) {
                    label = 1208;
                    break L1;
                   }
                   $8890 = (($8887) + 17|0);
                   HEAP8[$8890>>0] = 1;
                   $8891 = (($4) + 40|0);
                   $8892 = +HEAPF64[$8891>>3];
                   __THREW__ = 0;
                   $8893 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8894 = __THREW__; __THREW__ = 0;
                   $8895 = $8894&1;
                   if ($8895) {
                    label = 1208;
                    break L1;
                   }
                   $8896 = (($8893) + 8|0);
                   HEAPF64[$8896>>3] = $8892;
                   $8897 = (($4) + 539|0);
                   $8898 = HEAP8[$8897>>0]|0;
                   __THREW__ = 0;
                   $8899 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8900 = __THREW__; __THREW__ = 0;
                   $8901 = $8900&1;
                   if ($8901) {
                    label = 1208;
                    break L1;
                   }
                   $8902 = (($8899) + 19|0);
                   HEAP8[$8902>>0] = $8898;
                   $8903 = (($4) + 539|0);
                   $8904 = (($8903) + 1|0);
                   $8905 = HEAP8[$8904>>0]|0;
                   __THREW__ = 0;
                   $8906 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8907 = __THREW__; __THREW__ = 0;
                   $8908 = $8907&1;
                   if ($8908) {
                    label = 1208;
                    break L1;
                   }
                   $8909 = (($8906) + 19|0);
                   $8910 = (($8909) + 1|0);
                   HEAP8[$8910>>0] = $8905;
                   $8911 = (($4) + 541|0);
                   $8912 = HEAP8[$8911>>0]|0;
                   __THREW__ = 0;
                   $8913 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8914 = __THREW__; __THREW__ = 0;
                   $8915 = $8914&1;
                   if ($8915) {
                    label = 1208;
                    break L1;
                   }
                   $8916 = (($8913) + 18|0);
                   HEAP8[$8916>>0] = $8912;
                   __THREW__ = 0;
                   $8917 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8918 = __THREW__; __THREW__ = 0;
                   $8919 = $8918&1;
                   if ($8919) {
                    label = 1208;
                    break L1;
                   }
                   $8920 = (($8917) + 17|0);
                   HEAP8[$8920>>0] = 1;
                   $8921 = (($4) + 80|0);
                   $8922 = +HEAPF64[$8921>>3];
                   __THREW__ = 0;
                   $8923 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8924 = __THREW__; __THREW__ = 0;
                   $8925 = $8924&1;
                   if ($8925) {
                    label = 1208;
                    break L1;
                   }
                   $8926 = (($8923) + 8|0);
                   HEAPF64[$8926>>3] = $8922;
                   $8927 = (($4) + 542|0);
                   $8928 = HEAP8[$8927>>0]|0;
                   __THREW__ = 0;
                   $8929 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8930 = __THREW__; __THREW__ = 0;
                   $8931 = $8930&1;
                   if ($8931) {
                    label = 1208;
                    break L1;
                   }
                   $8932 = (($8929) + 19|0);
                   HEAP8[$8932>>0] = $8928;
                   $8933 = (($4) + 542|0);
                   $8934 = (($8933) + 1|0);
                   $8935 = HEAP8[$8934>>0]|0;
                   __THREW__ = 0;
                   $8936 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8937 = __THREW__; __THREW__ = 0;
                   $8938 = $8937&1;
                   if ($8938) {
                    label = 1208;
                    break L1;
                   }
                   $8939 = (($8936) + 19|0);
                   $8940 = (($8939) + 1|0);
                   HEAP8[$8940>>0] = $8935;
                   $8941 = (($4) + 544|0);
                   $8942 = HEAP8[$8941>>0]|0;
                   __THREW__ = 0;
                   $8943 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8944 = __THREW__; __THREW__ = 0;
                   $8945 = $8944&1;
                   if ($8945) {
                    label = 1208;
                    break L1;
                   }
                   $8946 = (($8943) + 18|0);
                   HEAP8[$8946>>0] = $8942;
                   __THREW__ = 0;
                   $8947 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8948 = __THREW__; __THREW__ = 0;
                   $8949 = $8948&1;
                   if ($8949) {
                    label = 1208;
                    break L1;
                   }
                   $8950 = (($8947) + 17|0);
                   HEAP8[$8950>>0] = 1;
                   $8951 = (($4) + 120|0);
                   $8952 = +HEAPF64[$8951>>3];
                   __THREW__ = 0;
                   $8953 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8954 = __THREW__; __THREW__ = 0;
                   $8955 = $8954&1;
                   if ($8955) {
                    label = 1208;
                    break L1;
                   }
                   $8956 = (($8953) + 8|0);
                   HEAPF64[$8956>>3] = $8952;
                   $8957 = (($4) + 545|0);
                   $8958 = HEAP8[$8957>>0]|0;
                   __THREW__ = 0;
                   $8959 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8960 = __THREW__; __THREW__ = 0;
                   $8961 = $8960&1;
                   if ($8961) {
                    label = 1208;
                    break L1;
                   }
                   $8962 = (($8959) + 19|0);
                   HEAP8[$8962>>0] = $8958;
                   $8963 = (($4) + 545|0);
                   $8964 = (($8963) + 1|0);
                   $8965 = HEAP8[$8964>>0]|0;
                   __THREW__ = 0;
                   $8966 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8967 = __THREW__; __THREW__ = 0;
                   $8968 = $8967&1;
                   if ($8968) {
                    label = 1208;
                    break L1;
                   }
                   $8969 = (($8966) + 19|0);
                   $8970 = (($8969) + 1|0);
                   HEAP8[$8970>>0] = $8965;
                   $8971 = (($4) + 547|0);
                   $8972 = HEAP8[$8971>>0]|0;
                   __THREW__ = 0;
                   $8973 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8974 = __THREW__; __THREW__ = 0;
                   $8975 = $8974&1;
                   if ($8975) {
                    label = 1208;
                    break L1;
                   }
                   $8976 = (($8973) + 18|0);
                   HEAP8[$8976>>0] = $8972;
                   __THREW__ = 0;
                   $8977 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $8978 = __THREW__; __THREW__ = 0;
                   $8979 = $8978&1;
                   if ($8979) {
                    label = 1208;
                    break L1;
                   }
                   $8980 = (($8977) + 17|0);
                   HEAP8[$8980>>0] = 1;
                   $8981 = (($4) + 160|0);
                   $8982 = +HEAPF64[$8981>>3];
                   __THREW__ = 0;
                   $8983 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $8984 = __THREW__; __THREW__ = 0;
                   $8985 = $8984&1;
                   if ($8985) {
                    label = 1208;
                    break L1;
                   }
                   $8986 = (($8983) + 8|0);
                   HEAPF64[$8986>>3] = $8982;
                   $8987 = (($4) + 548|0);
                   $8988 = HEAP8[$8987>>0]|0;
                   __THREW__ = 0;
                   $8989 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $8990 = __THREW__; __THREW__ = 0;
                   $8991 = $8990&1;
                   if ($8991) {
                    label = 1208;
                    break L1;
                   }
                   $8992 = (($8989) + 19|0);
                   HEAP8[$8992>>0] = $8988;
                   $8993 = (($4) + 548|0);
                   $8994 = (($8993) + 1|0);
                   $8995 = HEAP8[$8994>>0]|0;
                   __THREW__ = 0;
                   $8996 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $8997 = __THREW__; __THREW__ = 0;
                   $8998 = $8997&1;
                   if ($8998) {
                    label = 1208;
                    break L1;
                   }
                   $8999 = (($8996) + 19|0);
                   $9000 = (($8999) + 1|0);
                   HEAP8[$9000>>0] = $8995;
                   $9001 = (($4) + 550|0);
                   $9002 = HEAP8[$9001>>0]|0;
                   __THREW__ = 0;
                   $9003 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9004 = __THREW__; __THREW__ = 0;
                   $9005 = $9004&1;
                   if ($9005) {
                    label = 1208;
                    break L1;
                   }
                   $9006 = (($9003) + 18|0);
                   HEAP8[$9006>>0] = $9002;
                   __THREW__ = 0;
                   $9007 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9008 = __THREW__; __THREW__ = 0;
                   $9009 = $9008&1;
                   if ($9009) {
                    label = 1208;
                    break L1;
                   }
                   $9010 = (($9007) + 17|0);
                   HEAP8[$9010>>0] = 1;
                   $9011 = (($4) + 200|0);
                   $9012 = +HEAPF64[$9011>>3];
                   __THREW__ = 0;
                   $9013 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9014 = __THREW__; __THREW__ = 0;
                   $9015 = $9014&1;
                   if ($9015) {
                    label = 1208;
                    break L1;
                   }
                   $9016 = (($9013) + 8|0);
                   HEAPF64[$9016>>3] = $9012;
                   $9017 = (($4) + 551|0);
                   $9018 = HEAP8[$9017>>0]|0;
                   __THREW__ = 0;
                   $9019 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9020 = __THREW__; __THREW__ = 0;
                   $9021 = $9020&1;
                   if ($9021) {
                    label = 1208;
                    break L1;
                   }
                   $9022 = (($9019) + 19|0);
                   HEAP8[$9022>>0] = $9018;
                   $9023 = (($4) + 551|0);
                   $9024 = (($9023) + 1|0);
                   $9025 = HEAP8[$9024>>0]|0;
                   __THREW__ = 0;
                   $9026 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9027 = __THREW__; __THREW__ = 0;
                   $9028 = $9027&1;
                   if ($9028) {
                    label = 1208;
                    break L1;
                   }
                   $9029 = (($9026) + 19|0);
                   $9030 = (($9029) + 1|0);
                   HEAP8[$9030>>0] = $9025;
                   $9031 = (($4) + 553|0);
                   $9032 = HEAP8[$9031>>0]|0;
                   __THREW__ = 0;
                   $9033 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9034 = __THREW__; __THREW__ = 0;
                   $9035 = $9034&1;
                   if ($9035) {
                    label = 1208;
                    break L1;
                   }
                   $9036 = (($9033) + 18|0);
                   HEAP8[$9036>>0] = $9032;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree139|0),0);
                   $9037 = __THREW__; __THREW__ = 0;
                   $9038 = $9037&1;
                   if ($9038) {
                    label = 1208;
                    break L1;
                   }
                   $9039 = $1;
                   $9040 = HEAP32[$9039>>2]|0;
                   $9041 = (($9040) + 8|0);
                   $9042 = HEAP32[$9041>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($9042|0,($9039|0),($vinfos138|0),($vfree139|0))|0);
                   $9043 = __THREW__; __THREW__ = 0;
                   $9044 = $9043&1;
                   if ($9044) {
                    label = 1209;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree139|0));
                   $9045 = __THREW__; __THREW__ = 0;
                   $9046 = $9045&1;
                   if ($9046) {
                    label = 1208;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos138);
                   break L768;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $9047 = $ij5135;
               $9048 = (($9047) + 1)|0;
               $ij5135 = $9048;
              }
             }
            } while(0);
            if ((label|0) == 283) {
             label = 0;
             $2492 = (($4) + 8|0);
             $2493 = +HEAPF64[$2492>>3];
             $2494 = 1.0 * $2493;
             $x171 = $2494;
             $2495 = (($4) + 344|0);
             $2496 = +HEAPF64[$2495>>3];
             $2497 = (($4) + 16|0);
             $2498 = +HEAPF64[$2497>>3];
             $2499 = $2496 * $2498;
             $x172 = $2499;
             $2500 = (($4) + 56|0);
             $2501 = +HEAPF64[$2500>>3];
             $2502 = (($4) + 96|0);
             $2503 = +HEAPF64[$2502>>3];
             $2504 = $2501 * $2503;
             $x173 = $2504;
             $2505 = (($4) + 320|0);
             $2506 = +HEAPF64[$2505>>3];
             $2507 = (($4) + 16|0);
             $2508 = +HEAPF64[$2507>>3];
             $2509 = $2506 * $2508;
             $x174 = $2509;
             $2510 = (($4) + 8|0);
             $2511 = +HEAPF64[$2510>>3];
             $2512 = (($4) + 248|0);
             $2513 = +HEAPF64[$2512>>3];
             $2514 = $2511 * $2513;
             $x175 = $2514;
             $2515 = (($4) + 48|0);
             $2516 = +HEAPF64[$2515>>3];
             $2517 = (($4) + 88|0);
             $2518 = +HEAPF64[$2517>>3];
             $2519 = $2516 * $2518;
             $x176 = $2519;
             $2520 = (($4) + 8|0);
             $2521 = +HEAPF64[$2520>>3];
             $2522 = (($4) + 272|0);
             $2523 = +HEAPF64[$2522>>3];
             $2524 = $2521 * $2523;
             $x177 = $2524;
             $2525 = (($4) + 368|0);
             $2526 = +HEAPF64[$2525>>3];
             $2527 = (($4) + 16|0);
             $2528 = +HEAPF64[$2527>>3];
             $2529 = $2526 * $2528;
             $x178 = $2529;
             $2530 = (($4) + 8|0);
             $2531 = +HEAPF64[$2530>>3];
             $2532 = (($4) + 296|0);
             $2533 = +HEAPF64[$2532>>3];
             $2534 = $2531 * $2533;
             $x179 = $2534;
             $2535 = $x173;
             $2536 = -1.0 * $2535;
             $2537 = $x176;
             $2538 = $2536 + $2537;
             $x180 = $2538;
             $2539 = $x176;
             $2540 = -1.0 * $2539;
             $2541 = $x173;
             $2542 = $2540 + $2541;
             $x181 = $2542;
             $2543 = (($4) + 16|0);
             $2544 = +HEAPF64[$2543>>3];
             $2545 = $x181;
             $2546 = $2544 * $2545;
             $x182 = $2546;
             $2547 = $x98;
             $x183 = $2547;
             $2548 = (($4) + 8|0);
             $2549 = +HEAPF64[$2548>>3];
             $2550 = $x183;
             $2551 = $2549 * $2550;
             $x184 = $2551;
             $2552 = (($4) + 248|0);
             $2553 = +HEAPF64[$2552>>3];
             $2554 = (($4) + 16|0);
             $2555 = +HEAPF64[$2554>>3];
             $2556 = $2553 * $2555;
             $2557 = (($4) + 320|0);
             $2558 = +HEAPF64[$2557>>3];
             $2559 = -1.0 * $2558;
             $2560 = $x171;
             $2561 = $2559 * $2560;
             $2562 = $2556 + $2561;
             $2563 = (($4) + 240|0);
             HEAPF64[$2563>>3] = $2562;
             $2564 = (($4) + 344|0);
             $2565 = +HEAPF64[$2564>>3];
             $2566 = -1.0 * $2565;
             $2567 = $x171;
             $2568 = $2566 * $2567;
             $2569 = (($4) + 272|0);
             $2570 = +HEAPF64[$2569>>3];
             $2571 = (($4) + 16|0);
             $2572 = +HEAPF64[$2571>>3];
             $2573 = $2570 * $2572;
             $2574 = $2568 + $2573;
             $2575 = (($4) + 264|0);
             HEAPF64[$2575>>3] = $2574;
             $2576 = (($4) + 296|0);
             $2577 = +HEAPF64[$2576>>3];
             $2578 = (($4) + 16|0);
             $2579 = +HEAPF64[$2578>>3];
             $2580 = $2577 * $2579;
             $2581 = (($4) + 368|0);
             $2582 = +HEAPF64[$2581>>3];
             $2583 = -1.0 * $2582;
             $2584 = $x171;
             $2585 = $2583 * $2584;
             $2586 = $2580 + $2585;
             $2587 = (($4) + 288|0);
             HEAPF64[$2587>>3] = $2586;
             $2588 = $x174;
             $2589 = $x183;
             $2590 = $2588 * $2589;
             $2591 = (($4) + 392|0);
             $2592 = +HEAPF64[$2591>>3];
             $2593 = $x180;
             $2594 = $2592 * $2593;
             $2595 = $2590 + $2594;
             $2596 = $x175;
             $2597 = $x183;
             $2598 = $2596 * $2597;
             $2599 = $2595 + $2598;
             $2600 = (($4) + 312|0);
             HEAPF64[$2600>>3] = $2599;
             $2601 = $x177;
             $2602 = $x183;
             $2603 = $2601 * $2602;
             $2604 = $x172;
             $2605 = $x183;
             $2606 = $2604 * $2605;
             $2607 = $2603 + $2606;
             $2608 = (($4) + 416|0);
             $2609 = +HEAPF64[$2608>>3];
             $2610 = $x180;
             $2611 = $2609 * $2610;
             $2612 = $2607 + $2611;
             $2613 = (($4) + 336|0);
             HEAPF64[$2613>>3] = $2612;
             $2614 = $x178;
             $2615 = $x183;
             $2616 = $2614 * $2615;
             $2617 = $x179;
             $2618 = $x183;
             $2619 = $2617 * $2618;
             $2620 = $2616 + $2619;
             $2621 = (($4) + 440|0);
             $2622 = +HEAPF64[$2621>>3];
             $2623 = $x180;
             $2624 = $2622 * $2623;
             $2625 = $2620 + $2624;
             $2626 = (($4) + 360|0);
             HEAPF64[$2626>>3] = $2625;
             $2627 = $x174;
             $2628 = $x181;
             $2629 = $2627 * $2628;
             $2630 = (($4) + 392|0);
             $2631 = +HEAPF64[$2630>>3];
             $2632 = $x183;
             $2633 = $2631 * $2632;
             $2634 = $2629 + $2633;
             $2635 = $x175;
             $2636 = $x181;
             $2637 = $2635 * $2636;
             $2638 = $2634 + $2637;
             $2639 = (($4) + 384|0);
             HEAPF64[$2639>>3] = $2638;
             $2640 = $x177;
             $2641 = $x181;
             $2642 = $2640 * $2641;
             $2643 = $x172;
             $2644 = $x181;
             $2645 = $2643 * $2644;
             $2646 = $2642 + $2645;
             $2647 = (($4) + 416|0);
             $2648 = +HEAPF64[$2647>>3];
             $2649 = $x183;
             $2650 = $2648 * $2649;
             $2651 = $2646 + $2650;
             $2652 = (($4) + 408|0);
             HEAPF64[$2652>>3] = $2651;
             $2653 = $x178;
             $2654 = $x181;
             $2655 = $2653 * $2654;
             $2656 = $x179;
             $2657 = $x181;
             $2658 = $2656 * $2657;
             $2659 = $2655 + $2658;
             $2660 = (($4) + 440|0);
             $2661 = +HEAPF64[$2660>>3];
             $2662 = $x183;
             $2663 = $2661 * $2662;
             $2664 = $2659 + $2663;
             $2665 = (($4) + 432|0);
             HEAPF64[$2665>>3] = $2664;
             $2666 = (($4) + 176|0);
             $2667 = +HEAPF64[$2666>>3];
             HEAPF64[$j5eval29>>3] = $2667;
             $2668 = (($4) + 128|0);
             $2669 = +HEAPF64[$2668>>3];
             $2670 = (($j5eval29) + 8|0);
             HEAPF64[$2670>>3] = $2669;
             $2671 = +HEAPF64[$j5eval29>>3];
             $2672 = (+__Z5IKabsd($2671));
             $2673 = $2672 < 9.9999999999999995E-7;
             do {
              if ($2673) {
               label = 285;
              } else {
               $2674 = (($j5eval29) + 8|0);
               $2675 = +HEAPF64[$2674>>3];
               $2676 = (+__Z5IKabsd($2675));
               $2677 = $2676 < 9.9999999999999995E-7;
               if ($2677) {
                label = 285;
                break;
               }
               ;HEAP8[$j5valid125+0>>0]=0|0;
               $7921 = (($4) + 553|0);
               HEAP8[$7921>>0] = 1;
               $7922 = (($4) + 176|0);
               $7923 = +HEAPF64[$7922>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x283,$7923,-1);
               $7924 = (($x283) + 8|0);
               $7925 = HEAP8[$7924>>0]|0;
               $7926 = $7925&1;
               if (!($7926)) {
                break L726;
               }
               $7927 = +HEAPF64[$x283>>3];
               $x282 = $7927;
               $7928 = (($4) + 128|0);
               $7929 = +HEAPF64[$7928>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x284,$7929,-1);
               $7930 = (($x284) + 8|0);
               $7931 = HEAP8[$7930>>0]|0;
               $7932 = $7931&1;
               if (!($7932)) {
                break L726;
               }
               $7933 = (($4) + 384|0);
               $7934 = +HEAPF64[$7933>>3];
               $7935 = $x282;
               $7936 = $7934 * $7935;
               $7937 = (+__Z5IKabsd($7936));
               $7938 = $7937 < 1.9999999999999999E-6;
               do {
                if ($7938) {
                 $7939 = $x282;
                 $7940 = +HEAPF64[$x284>>3];
                 $7941 = $7939 * $7940;
                 $7942 = (($4) + 240|0);
                 $7943 = +HEAPF64[$7942>>3];
                 $7944 = (($4) + 176|0);
                 $7945 = +HEAPF64[$7944>>3];
                 $7946 = $7943 * $7945;
                 $7947 = (($4) + 168|0);
                 $7948 = +HEAPF64[$7947>>3];
                 $7949 = (($4) + 384|0);
                 $7950 = +HEAPF64[$7949>>3];
                 $7951 = $7948 * $7950;
                 $7952 = (($4) + 136|0);
                 $7953 = +HEAPF64[$7952>>3];
                 $7954 = $7951 * $7953;
                 $7955 = $7946 + $7954;
                 $7956 = $7941 * $7955;
                 $7957 = (+__Z5IKabsd($7956));
                 $7958 = $7957 < 1.9999999999999999E-6;
                 if (!($7958)) {
                  break;
                 }
                 $7959 = (($4) + 384|0);
                 $7960 = +HEAPF64[$7959>>3];
                 $7961 = $x282;
                 $7962 = $7960 * $7961;
                 $7963 = (+__Z5IKsqrd($7962));
                 $7964 = $x282;
                 $7965 = +HEAPF64[$x284>>3];
                 $7966 = $7964 * $7965;
                 $7967 = (($4) + 240|0);
                 $7968 = +HEAPF64[$7967>>3];
                 $7969 = (($4) + 176|0);
                 $7970 = +HEAPF64[$7969>>3];
                 $7971 = $7968 * $7970;
                 $7972 = (($4) + 168|0);
                 $7973 = +HEAPF64[$7972>>3];
                 $7974 = (($4) + 384|0);
                 $7975 = +HEAPF64[$7974>>3];
                 $7976 = $7973 * $7975;
                 $7977 = (($4) + 136|0);
                 $7978 = +HEAPF64[$7977>>3];
                 $7979 = $7976 * $7978;
                 $7980 = $7971 + $7979;
                 $7981 = $7966 * $7980;
                 $7982 = (+__Z5IKsqrd($7981));
                 $7983 = $7963 + $7982;
                 $7984 = $7983 - 1.0;
                 $7985 = (+__Z5IKabsd($7984));
                 $7986 = $7985 <= 1.9999999999999999E-6;
                 if (!($7986)) {
                  break;
                 }
                 break L726;
                }
               } while(0);
               $7987 = (($4) + 384|0);
               $7988 = +HEAPF64[$7987>>3];
               $7989 = $x282;
               $7990 = $7988 * $7989;
               $7991 = $x282;
               $7992 = +HEAPF64[$x284>>3];
               $7993 = $7991 * $7992;
               $7994 = (($4) + 240|0);
               $7995 = +HEAPF64[$7994>>3];
               $7996 = (($4) + 176|0);
               $7997 = +HEAPF64[$7996>>3];
               $7998 = $7995 * $7997;
               $7999 = (($4) + 168|0);
               $8000 = +HEAPF64[$7999>>3];
               $8001 = (($4) + 384|0);
               $8002 = +HEAPF64[$8001>>3];
               $8003 = $8000 * $8002;
               $8004 = (($4) + 136|0);
               $8005 = +HEAPF64[$8004>>3];
               $8006 = $8003 * $8005;
               $8007 = $7998 + $8006;
               $8008 = $7993 * $8007;
               $8009 = (+__Z7IKatan2dd($7990,$8008));
               HEAPF64[$j5array122>>3] = $8009;
               $8010 = +HEAPF64[$j5array122>>3];
               $8011 = (+__Z5IKsind($8010));
               HEAPF64[$sj5array124>>3] = $8011;
               $8012 = +HEAPF64[$j5array122>>3];
               $8013 = (+__Z5IKcosd($8012));
               HEAPF64[$cj5array123>>3] = $8013;
               $8014 = +HEAPF64[$j5array122>>3];
               $8015 = $8014 > 3.14159265358979;
               if ($8015) {
                $8016 = +HEAPF64[$j5array122>>3];
                $8017 = $8016 - 6.2831853071795898;
                HEAPF64[$j5array122>>3] = $8017;
               } else {
                $8018 = +HEAPF64[$j5array122>>3];
                $8019 = $8018 < -3.14159265358979;
                if ($8019) {
                 $8020 = +HEAPF64[$j5array122>>3];
                 $8021 = $8020 + 6.2831853071795898;
                 HEAPF64[$j5array122>>3] = $8021;
                }
               }
               HEAP8[$j5valid125>>0] = 1;
               $ij5126 = 0;
               while(1) {
                $8022 = $ij5126;
                $8023 = ($8022|0)<(1);
                if (!($8023)) {
                 break;
                }
                $8024 = $ij5126;
                $8025 = (($j5valid125) + ($8024)|0);
                $8026 = HEAP8[$8025>>0]|0;
                $8027 = $8026&1;
                L857: do {
                 if ($8027) {
                  $8028 = $ij5126;
                  $8029 = $8028&255;
                  $8030 = (($4) + 551|0);
                  HEAP8[$8030>>0] = $8029;
                  $8031 = (($4) + 551|0);
                  $8032 = (($8031) + 1|0);
                  HEAP8[$8032>>0] = -1;
                  $8033 = $ij5126;
                  $8034 = (($8033) + 1)|0;
                  $iij5127 = $8034;
                  L860: while(1) {
                   $8035 = $iij5127;
                   $8036 = ($8035|0)<(1);
                   if (!($8036)) {
                    break;
                   }
                   $8037 = $iij5127;
                   $8038 = (($j5valid125) + ($8037)|0);
                   $8039 = HEAP8[$8038>>0]|0;
                   $8040 = $8039&1;
                   do {
                    if ($8040) {
                     $8041 = $ij5126;
                     $8042 = (($cj5array123) + ($8041<<3)|0);
                     $8043 = +HEAPF64[$8042>>3];
                     $8044 = $iij5127;
                     $8045 = (($cj5array123) + ($8044<<3)|0);
                     $8046 = +HEAPF64[$8045>>3];
                     $8047 = $8043 - $8046;
                     $8048 = (+__Z5IKabsd($8047));
                     $8049 = $8048 < 9.9999999999999995E-7;
                     if (!($8049)) {
                      break;
                     }
                     $8050 = $ij5126;
                     $8051 = (($sj5array124) + ($8050<<3)|0);
                     $8052 = +HEAPF64[$8051>>3];
                     $8053 = $iij5127;
                     $8054 = (($sj5array124) + ($8053<<3)|0);
                     $8055 = +HEAPF64[$8054>>3];
                     $8056 = $8052 - $8055;
                     $8057 = (+__Z5IKabsd($8056));
                     $8058 = $8057 < 9.9999999999999995E-7;
                     if ($8058) {
                      label = 1081;
                      break L860;
                     }
                    }
                   } while(0);
                   $8065 = $iij5127;
                   $8066 = (($8065) + 1)|0;
                   $iij5127 = $8066;
                  }
                  if ((label|0) == 1081) {
                   label = 0;
                   $8059 = $iij5127;
                   $8060 = (($j5valid125) + ($8059)|0);
                   HEAP8[$8060>>0] = 0;
                   $8061 = $iij5127;
                   $8062 = $8061&255;
                   $8063 = (($4) + 551|0);
                   $8064 = (($8063) + 1|0);
                   HEAP8[$8064>>0] = $8062;
                  }
                  $8067 = $ij5126;
                  $8068 = (($j5array122) + ($8067<<3)|0);
                  $8069 = +HEAPF64[$8068>>3];
                  $8070 = (($4) + 200|0);
                  HEAPF64[$8070>>3] = $8069;
                  $8071 = $ij5126;
                  $8072 = (($cj5array123) + ($8071<<3)|0);
                  $8073 = +HEAPF64[$8072>>3];
                  $8074 = (($4) + 208|0);
                  HEAPF64[$8074>>3] = $8073;
                  $8075 = $ij5126;
                  $8076 = (($sj5array124) + ($8075<<3)|0);
                  $8077 = +HEAPF64[$8076>>3];
                  $8078 = (($4) + 216|0);
                  HEAPF64[$8078>>3] = $8077;
                  $8079 = (($4) + 200|0);
                  $8080 = +HEAPF64[$8079>>3];
                  $8081 = (+__Z5IKsind($8080));
                  $x285 = $8081;
                  $8082 = (($4) + 200|0);
                  $8083 = +HEAPF64[$8082>>3];
                  $8084 = (+__Z5IKcosd($8083));
                  $x286 = $8084;
                  $8085 = (($4) + 168|0);
                  $8086 = +HEAPF64[$8085>>3];
                  $8087 = (($4) + 136|0);
                  $8088 = +HEAPF64[$8087>>3];
                  $8089 = $8086 * $8088;
                  $x287 = $8089;
                  $8090 = (($4) + 128|0);
                  $8091 = +HEAPF64[$8090>>3];
                  $8092 = (($4) + 312|0);
                  $8093 = +HEAPF64[$8092>>3];
                  $8094 = $8091 * $8093;
                  $x288 = $8094;
                  $8095 = (($4) + 128|0);
                  $8096 = +HEAPF64[$8095>>3];
                  $8097 = (($4) + 336|0);
                  $8098 = +HEAPF64[$8097>>3];
                  $8099 = $8096 * $8098;
                  $x289 = $8099;
                  $8100 = (($4) + 136|0);
                  $8101 = +HEAPF64[$8100>>3];
                  $8102 = 1.0 * $8101;
                  $x290 = $8102;
                  $8103 = (($4) + 168|0);
                  $8104 = +HEAPF64[$8103>>3];
                  $8105 = 1.0 * $8104;
                  $x291 = $8105;
                  $8106 = (($4) + 176|0);
                  $8107 = +HEAPF64[$8106>>3];
                  $8108 = 1.0 * $8107;
                  $x292 = $8108;
                  $8109 = (($4) + 168|0);
                  $8110 = +HEAPF64[$8109>>3];
                  $8111 = $x285;
                  $8112 = $8110 * $8111;
                  $x293 = $8112;
                  $8113 = $x286;
                  $8114 = 1.0 * $8113;
                  $x294 = $8114;
                  $8115 = $x285;
                  $8116 = -1.0 * $8115;
                  $8117 = $x292;
                  $8118 = $8116 * $8117;
                  $8119 = (($4) + 384|0);
                  $8120 = +HEAPF64[$8119>>3];
                  $8121 = $8118 + $8120;
                  HEAPF64[$evalcond128>>3] = $8121;
                  $8122 = $x286;
                  $8123 = -1.0 * $8122;
                  $8124 = $x292;
                  $8125 = $8123 * $8124;
                  $8126 = (($4) + 408|0);
                  $8127 = +HEAPF64[$8126>>3];
                  $8128 = $8125 + $8127;
                  $8129 = (($evalcond128) + 8|0);
                  HEAPF64[$8129>>3] = $8128;
                  $8130 = (($4) + 336|0);
                  $8131 = +HEAPF64[$8130>>3];
                  $8132 = (($4) + 136|0);
                  $8133 = +HEAPF64[$8132>>3];
                  $8134 = $8131 * $8133;
                  $8135 = $x285;
                  $8136 = $8134 + $8135;
                  $8137 = (($4) + 128|0);
                  $8138 = +HEAPF64[$8137>>3];
                  $8139 = (($4) + 264|0);
                  $8140 = +HEAPF64[$8139>>3];
                  $8141 = $8138 * $8140;
                  $8142 = $8136 + $8141;
                  $8143 = (($evalcond128) + 16|0);
                  HEAPF64[$8143>>3] = $8142;
                  $8144 = (($4) + 312|0);
                  $8145 = +HEAPF64[$8144>>3];
                  $8146 = (($4) + 136|0);
                  $8147 = +HEAPF64[$8146>>3];
                  $8148 = $8145 * $8147;
                  $8149 = $x294;
                  $8150 = -1.0 * $8149;
                  $8151 = $8148 + $8150;
                  $8152 = (($4) + 128|0);
                  $8153 = +HEAPF64[$8152>>3];
                  $8154 = (($4) + 240|0);
                  $8155 = +HEAPF64[$8154>>3];
                  $8156 = $8153 * $8155;
                  $8157 = $8151 + $8156;
                  $8158 = (($evalcond128) + 24|0);
                  HEAPF64[$8158>>3] = $8157;
                  $8159 = $x286;
                  $8160 = $x287;
                  $8161 = $8159 * $8160;
                  $8162 = (($4) + 128|0);
                  $8163 = +HEAPF64[$8162>>3];
                  $8164 = $x285;
                  $8165 = $8163 * $8164;
                  $8166 = $8161 + $8165;
                  $8167 = (($4) + 264|0);
                  $8168 = +HEAPF64[$8167>>3];
                  $8169 = $8166 + $8168;
                  $8170 = (($evalcond128) + 32|0);
                  HEAPF64[$8170>>3] = $8169;
                  $8171 = $x285;
                  $8172 = $x287;
                  $8173 = $8171 * $8172;
                  $8174 = (($4) + 128|0);
                  $8175 = +HEAPF64[$8174>>3];
                  $8176 = -1.0 * $8175;
                  $8177 = $x294;
                  $8178 = $8176 * $8177;
                  $8179 = $8173 + $8178;
                  $8180 = (($4) + 240|0);
                  $8181 = +HEAPF64[$8180>>3];
                  $8182 = $8179 + $8181;
                  $8183 = (($evalcond128) + 40|0);
                  HEAPF64[$8183>>3] = $8182;
                  $8184 = (($4) + 136|0);
                  $8185 = +HEAPF64[$8184>>3];
                  $8186 = $x285;
                  $8187 = $8185 * $8186;
                  $8188 = (($4) + 128|0);
                  $8189 = +HEAPF64[$8188>>3];
                  $8190 = -1.0 * $8189;
                  $8191 = $x286;
                  $8192 = $8190 * $8191;
                  $8193 = $x291;
                  $8194 = $8192 * $8193;
                  $8195 = $8187 + $8194;
                  $8196 = (($4) + 336|0);
                  $8197 = +HEAPF64[$8196>>3];
                  $8198 = $8195 + $8197;
                  $8199 = (($evalcond128) + 48|0);
                  HEAPF64[$8199>>3] = $8198;
                  $8200 = $x285;
                  $8201 = -1.0 * $8200;
                  $8202 = $x291;
                  $8203 = $8201 * $8202;
                  $8204 = $x288;
                  $8205 = $8203 + $8204;
                  $8206 = (($4) + 240|0);
                  $8207 = +HEAPF64[$8206>>3];
                  $8208 = -1.0 * $8207;
                  $8209 = $x290;
                  $8210 = $8208 * $8209;
                  $8211 = $8205 + $8210;
                  $8212 = (($evalcond128) + 56|0);
                  HEAPF64[$8212>>3] = $8211;
                  $8213 = (($4) + 264|0);
                  $8214 = +HEAPF64[$8213>>3];
                  $8215 = -1.0 * $8214;
                  $8216 = $x290;
                  $8217 = $8215 * $8216;
                  $8218 = $x286;
                  $8219 = -1.0 * $8218;
                  $8220 = $x291;
                  $8221 = $8219 * $8220;
                  $8222 = $8217 + $8221;
                  $8223 = $x289;
                  $8224 = $8222 + $8223;
                  $8225 = (($evalcond128) + 64|0);
                  HEAPF64[$8225>>3] = $8224;
                  $8226 = $x286;
                  $8227 = -1.0 * $8226;
                  $8228 = $x290;
                  $8229 = $8227 * $8228;
                  $8230 = (($4) + 312|0);
                  $8231 = +HEAPF64[$8230>>3];
                  $8232 = $8229 + $8231;
                  $8233 = (($4) + 128|0);
                  $8234 = +HEAPF64[$8233>>3];
                  $8235 = -1.0 * $8234;
                  $8236 = $x285;
                  $8237 = $8235 * $8236;
                  $8238 = $x291;
                  $8239 = $8237 * $8238;
                  $8240 = $8232 + $8239;
                  $8241 = (($evalcond128) + 72|0);
                  HEAPF64[$8241>>3] = $8240;
                  $8242 = (($4) + 384|0);
                  $8243 = +HEAPF64[$8242>>3];
                  $8244 = -1.0 * $8243;
                  $8245 = $x292;
                  $8246 = $8244 * $8245;
                  $8247 = $x285;
                  $8248 = $8246 + $8247;
                  $8249 = $x288;
                  $8250 = -1.0 * $8249;
                  $8251 = $x291;
                  $8252 = $8250 * $8251;
                  $8253 = $8248 + $8252;
                  $8254 = (($4) + 240|0);
                  $8255 = +HEAPF64[$8254>>3];
                  $8256 = $x287;
                  $8257 = $8255 * $8256;
                  $8258 = $8253 + $8257;
                  $8259 = (($evalcond128) + 80|0);
                  HEAPF64[$8259>>3] = $8258;
                  $8260 = (($4) + 408|0);
                  $8261 = +HEAPF64[$8260>>3];
                  $8262 = -1.0 * $8261;
                  $8263 = $x292;
                  $8264 = $8262 * $8263;
                  $8265 = $x289;
                  $8266 = -1.0 * $8265;
                  $8267 = $x291;
                  $8268 = $8266 * $8267;
                  $8269 = $8264 + $8268;
                  $8270 = $x286;
                  $8271 = $8269 + $8270;
                  $8272 = (($4) + 264|0);
                  $8273 = +HEAPF64[$8272>>3];
                  $8274 = $x287;
                  $8275 = $8273 * $8274;
                  $8276 = $8271 + $8275;
                  $8277 = (($evalcond128) + 88|0);
                  HEAPF64[$8277>>3] = $8276;
                  $8278 = +HEAPF64[$evalcond128>>3];
                  $8279 = (+__Z5IKabsd($8278));
                  $8280 = $8279 > 5.0000000000000004E-6;
                  do {
                   if (!($8280)) {
                    $8281 = (($evalcond128) + 8|0);
                    $8282 = +HEAPF64[$8281>>3];
                    $8283 = (+__Z5IKabsd($8282));
                    $8284 = $8283 > 5.0000000000000004E-6;
                    if ($8284) {
                     break;
                    }
                    $8285 = (($evalcond128) + 16|0);
                    $8286 = +HEAPF64[$8285>>3];
                    $8287 = (+__Z5IKabsd($8286));
                    $8288 = $8287 > 5.0000000000000004E-6;
                    if ($8288) {
                     break;
                    }
                    $8289 = (($evalcond128) + 24|0);
                    $8290 = +HEAPF64[$8289>>3];
                    $8291 = (+__Z5IKabsd($8290));
                    $8292 = $8291 > 5.0000000000000004E-6;
                    if ($8292) {
                     break;
                    }
                    $8293 = (($evalcond128) + 32|0);
                    $8294 = +HEAPF64[$8293>>3];
                    $8295 = (+__Z5IKabsd($8294));
                    $8296 = $8295 > 5.0000000000000004E-6;
                    if ($8296) {
                     break;
                    }
                    $8297 = (($evalcond128) + 40|0);
                    $8298 = +HEAPF64[$8297>>3];
                    $8299 = (+__Z5IKabsd($8298));
                    $8300 = $8299 > 5.0000000000000004E-6;
                    if ($8300) {
                     break;
                    }
                    $8301 = (($evalcond128) + 48|0);
                    $8302 = +HEAPF64[$8301>>3];
                    $8303 = (+__Z5IKabsd($8302));
                    $8304 = $8303 > 5.0000000000000004E-6;
                    if ($8304) {
                     break;
                    }
                    $8305 = (($evalcond128) + 56|0);
                    $8306 = +HEAPF64[$8305>>3];
                    $8307 = (+__Z5IKabsd($8306));
                    $8308 = $8307 > 5.0000000000000004E-6;
                    if ($8308) {
                     break;
                    }
                    $8309 = (($evalcond128) + 64|0);
                    $8310 = +HEAPF64[$8309>>3];
                    $8311 = (+__Z5IKabsd($8310));
                    $8312 = $8311 > 5.0000000000000004E-6;
                    if ($8312) {
                     break;
                    }
                    $8313 = (($evalcond128) + 72|0);
                    $8314 = +HEAPF64[$8313>>3];
                    $8315 = (+__Z5IKabsd($8314));
                    $8316 = $8315 > 5.0000000000000004E-6;
                    if ($8316) {
                     break;
                    }
                    $8317 = (($evalcond128) + 80|0);
                    $8318 = +HEAPF64[$8317>>3];
                    $8319 = (+__Z5IKabsd($8318));
                    $8320 = $8319 > 5.0000000000000004E-6;
                    if ($8320) {
                     break;
                    }
                    $8321 = (($evalcond128) + 88|0);
                    $8322 = +HEAPF64[$8321>>3];
                    $8323 = (+__Z5IKabsd($8322));
                    $8324 = $8323 > 5.0000000000000004E-6;
                    if ($8324) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos129,6);
                    __THREW__ = 0;
                    $8325 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8326 = __THREW__; __THREW__ = 0;
                    $8327 = $8326&1;
                    if ($8327) {
                     label = 1132;
                     break L1;
                    }
                    $8328 = (($8325) + 17|0);
                    HEAP8[$8328>>0] = 1;
                    $8329 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $8330 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8331 = __THREW__; __THREW__ = 0;
                    $8332 = $8331&1;
                    if ($8332) {
                     label = 1132;
                     break L1;
                    }
                    $8333 = (($8330) + 8|0);
                    HEAPF64[$8333>>3] = $8329;
                    $8334 = (($4) + 536|0);
                    $8335 = HEAP8[$8334>>0]|0;
                    __THREW__ = 0;
                    $8336 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8337 = __THREW__; __THREW__ = 0;
                    $8338 = $8337&1;
                    if ($8338) {
                     label = 1132;
                     break L1;
                    }
                    $8339 = (($8336) + 19|0);
                    HEAP8[$8339>>0] = $8335;
                    $8340 = (($4) + 536|0);
                    $8341 = (($8340) + 1|0);
                    $8342 = HEAP8[$8341>>0]|0;
                    __THREW__ = 0;
                    $8343 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8344 = __THREW__; __THREW__ = 0;
                    $8345 = $8344&1;
                    if ($8345) {
                     label = 1132;
                     break L1;
                    }
                    $8346 = (($8343) + 19|0);
                    $8347 = (($8346) + 1|0);
                    HEAP8[$8347>>0] = $8342;
                    $8348 = (($4) + 538|0);
                    $8349 = HEAP8[$8348>>0]|0;
                    __THREW__ = 0;
                    $8350 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8351 = __THREW__; __THREW__ = 0;
                    $8352 = $8351&1;
                    if ($8352) {
                     label = 1132;
                     break L1;
                    }
                    $8353 = (($8350) + 18|0);
                    HEAP8[$8353>>0] = $8349;
                    __THREW__ = 0;
                    $8354 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8355 = __THREW__; __THREW__ = 0;
                    $8356 = $8355&1;
                    if ($8356) {
                     label = 1132;
                     break L1;
                    }
                    $8357 = (($8354) + 17|0);
                    HEAP8[$8357>>0] = 1;
                    $8358 = (($4) + 40|0);
                    $8359 = +HEAPF64[$8358>>3];
                    __THREW__ = 0;
                    $8360 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8361 = __THREW__; __THREW__ = 0;
                    $8362 = $8361&1;
                    if ($8362) {
                     label = 1132;
                     break L1;
                    }
                    $8363 = (($8360) + 8|0);
                    HEAPF64[$8363>>3] = $8359;
                    $8364 = (($4) + 539|0);
                    $8365 = HEAP8[$8364>>0]|0;
                    __THREW__ = 0;
                    $8366 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8367 = __THREW__; __THREW__ = 0;
                    $8368 = $8367&1;
                    if ($8368) {
                     label = 1132;
                     break L1;
                    }
                    $8369 = (($8366) + 19|0);
                    HEAP8[$8369>>0] = $8365;
                    $8370 = (($4) + 539|0);
                    $8371 = (($8370) + 1|0);
                    $8372 = HEAP8[$8371>>0]|0;
                    __THREW__ = 0;
                    $8373 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8374 = __THREW__; __THREW__ = 0;
                    $8375 = $8374&1;
                    if ($8375) {
                     label = 1132;
                     break L1;
                    }
                    $8376 = (($8373) + 19|0);
                    $8377 = (($8376) + 1|0);
                    HEAP8[$8377>>0] = $8372;
                    $8378 = (($4) + 541|0);
                    $8379 = HEAP8[$8378>>0]|0;
                    __THREW__ = 0;
                    $8380 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8381 = __THREW__; __THREW__ = 0;
                    $8382 = $8381&1;
                    if ($8382) {
                     label = 1132;
                     break L1;
                    }
                    $8383 = (($8380) + 18|0);
                    HEAP8[$8383>>0] = $8379;
                    __THREW__ = 0;
                    $8384 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8385 = __THREW__; __THREW__ = 0;
                    $8386 = $8385&1;
                    if ($8386) {
                     label = 1132;
                     break L1;
                    }
                    $8387 = (($8384) + 17|0);
                    HEAP8[$8387>>0] = 1;
                    $8388 = (($4) + 80|0);
                    $8389 = +HEAPF64[$8388>>3];
                    __THREW__ = 0;
                    $8390 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8391 = __THREW__; __THREW__ = 0;
                    $8392 = $8391&1;
                    if ($8392) {
                     label = 1132;
                     break L1;
                    }
                    $8393 = (($8390) + 8|0);
                    HEAPF64[$8393>>3] = $8389;
                    $8394 = (($4) + 542|0);
                    $8395 = HEAP8[$8394>>0]|0;
                    __THREW__ = 0;
                    $8396 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8397 = __THREW__; __THREW__ = 0;
                    $8398 = $8397&1;
                    if ($8398) {
                     label = 1132;
                     break L1;
                    }
                    $8399 = (($8396) + 19|0);
                    HEAP8[$8399>>0] = $8395;
                    $8400 = (($4) + 542|0);
                    $8401 = (($8400) + 1|0);
                    $8402 = HEAP8[$8401>>0]|0;
                    __THREW__ = 0;
                    $8403 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8404 = __THREW__; __THREW__ = 0;
                    $8405 = $8404&1;
                    if ($8405) {
                     label = 1132;
                     break L1;
                    }
                    $8406 = (($8403) + 19|0);
                    $8407 = (($8406) + 1|0);
                    HEAP8[$8407>>0] = $8402;
                    $8408 = (($4) + 544|0);
                    $8409 = HEAP8[$8408>>0]|0;
                    __THREW__ = 0;
                    $8410 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8411 = __THREW__; __THREW__ = 0;
                    $8412 = $8411&1;
                    if ($8412) {
                     label = 1132;
                     break L1;
                    }
                    $8413 = (($8410) + 18|0);
                    HEAP8[$8413>>0] = $8409;
                    __THREW__ = 0;
                    $8414 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8415 = __THREW__; __THREW__ = 0;
                    $8416 = $8415&1;
                    if ($8416) {
                     label = 1132;
                     break L1;
                    }
                    $8417 = (($8414) + 17|0);
                    HEAP8[$8417>>0] = 1;
                    $8418 = (($4) + 120|0);
                    $8419 = +HEAPF64[$8418>>3];
                    __THREW__ = 0;
                    $8420 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8421 = __THREW__; __THREW__ = 0;
                    $8422 = $8421&1;
                    if ($8422) {
                     label = 1132;
                     break L1;
                    }
                    $8423 = (($8420) + 8|0);
                    HEAPF64[$8423>>3] = $8419;
                    $8424 = (($4) + 545|0);
                    $8425 = HEAP8[$8424>>0]|0;
                    __THREW__ = 0;
                    $8426 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8427 = __THREW__; __THREW__ = 0;
                    $8428 = $8427&1;
                    if ($8428) {
                     label = 1132;
                     break L1;
                    }
                    $8429 = (($8426) + 19|0);
                    HEAP8[$8429>>0] = $8425;
                    $8430 = (($4) + 545|0);
                    $8431 = (($8430) + 1|0);
                    $8432 = HEAP8[$8431>>0]|0;
                    __THREW__ = 0;
                    $8433 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8434 = __THREW__; __THREW__ = 0;
                    $8435 = $8434&1;
                    if ($8435) {
                     label = 1132;
                     break L1;
                    }
                    $8436 = (($8433) + 19|0);
                    $8437 = (($8436) + 1|0);
                    HEAP8[$8437>>0] = $8432;
                    $8438 = (($4) + 547|0);
                    $8439 = HEAP8[$8438>>0]|0;
                    __THREW__ = 0;
                    $8440 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8441 = __THREW__; __THREW__ = 0;
                    $8442 = $8441&1;
                    if ($8442) {
                     label = 1132;
                     break L1;
                    }
                    $8443 = (($8440) + 18|0);
                    HEAP8[$8443>>0] = $8439;
                    __THREW__ = 0;
                    $8444 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8445 = __THREW__; __THREW__ = 0;
                    $8446 = $8445&1;
                    if ($8446) {
                     label = 1132;
                     break L1;
                    }
                    $8447 = (($8444) + 17|0);
                    HEAP8[$8447>>0] = 1;
                    $8448 = (($4) + 160|0);
                    $8449 = +HEAPF64[$8448>>3];
                    __THREW__ = 0;
                    $8450 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8451 = __THREW__; __THREW__ = 0;
                    $8452 = $8451&1;
                    if ($8452) {
                     label = 1132;
                     break L1;
                    }
                    $8453 = (($8450) + 8|0);
                    HEAPF64[$8453>>3] = $8449;
                    $8454 = (($4) + 548|0);
                    $8455 = HEAP8[$8454>>0]|0;
                    __THREW__ = 0;
                    $8456 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8457 = __THREW__; __THREW__ = 0;
                    $8458 = $8457&1;
                    if ($8458) {
                     label = 1132;
                     break L1;
                    }
                    $8459 = (($8456) + 19|0);
                    HEAP8[$8459>>0] = $8455;
                    $8460 = (($4) + 548|0);
                    $8461 = (($8460) + 1|0);
                    $8462 = HEAP8[$8461>>0]|0;
                    __THREW__ = 0;
                    $8463 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8464 = __THREW__; __THREW__ = 0;
                    $8465 = $8464&1;
                    if ($8465) {
                     label = 1132;
                     break L1;
                    }
                    $8466 = (($8463) + 19|0);
                    $8467 = (($8466) + 1|0);
                    HEAP8[$8467>>0] = $8462;
                    $8468 = (($4) + 550|0);
                    $8469 = HEAP8[$8468>>0]|0;
                    __THREW__ = 0;
                    $8470 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8471 = __THREW__; __THREW__ = 0;
                    $8472 = $8471&1;
                    if ($8472) {
                     label = 1132;
                     break L1;
                    }
                    $8473 = (($8470) + 18|0);
                    HEAP8[$8473>>0] = $8469;
                    __THREW__ = 0;
                    $8474 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8475 = __THREW__; __THREW__ = 0;
                    $8476 = $8475&1;
                    if ($8476) {
                     label = 1132;
                     break L1;
                    }
                    $8477 = (($8474) + 17|0);
                    HEAP8[$8477>>0] = 1;
                    $8478 = (($4) + 200|0);
                    $8479 = +HEAPF64[$8478>>3];
                    __THREW__ = 0;
                    $8480 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8481 = __THREW__; __THREW__ = 0;
                    $8482 = $8481&1;
                    if ($8482) {
                     label = 1132;
                     break L1;
                    }
                    $8483 = (($8480) + 8|0);
                    HEAPF64[$8483>>3] = $8479;
                    $8484 = (($4) + 551|0);
                    $8485 = HEAP8[$8484>>0]|0;
                    __THREW__ = 0;
                    $8486 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8487 = __THREW__; __THREW__ = 0;
                    $8488 = $8487&1;
                    if ($8488) {
                     label = 1132;
                     break L1;
                    }
                    $8489 = (($8486) + 19|0);
                    HEAP8[$8489>>0] = $8485;
                    $8490 = (($4) + 551|0);
                    $8491 = (($8490) + 1|0);
                    $8492 = HEAP8[$8491>>0]|0;
                    __THREW__ = 0;
                    $8493 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8494 = __THREW__; __THREW__ = 0;
                    $8495 = $8494&1;
                    if ($8495) {
                     label = 1132;
                     break L1;
                    }
                    $8496 = (($8493) + 19|0);
                    $8497 = (($8496) + 1|0);
                    HEAP8[$8497>>0] = $8492;
                    $8498 = (($4) + 553|0);
                    $8499 = HEAP8[$8498>>0]|0;
                    __THREW__ = 0;
                    $8500 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8501 = __THREW__; __THREW__ = 0;
                    $8502 = $8501&1;
                    if ($8502) {
                     label = 1132;
                     break L1;
                    }
                    $8503 = (($8500) + 18|0);
                    HEAP8[$8503>>0] = $8499;
                    __THREW__ = 0;
                    invoke_vii(382,($vfree130|0),0);
                    $8504 = __THREW__; __THREW__ = 0;
                    $8505 = $8504&1;
                    if ($8505) {
                     label = 1132;
                     break L1;
                    }
                    $8506 = $1;
                    $8507 = HEAP32[$8506>>2]|0;
                    $8508 = (($8507) + 8|0);
                    $8509 = HEAP32[$8508>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($8509|0,($8506|0),($vinfos129|0),($vfree130|0))|0);
                    $8510 = __THREW__; __THREW__ = 0;
                    $8511 = $8510&1;
                    if ($8511) {
                     label = 1133;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(366,($vfree130|0));
                    $8512 = __THREW__; __THREW__ = 0;
                    $8513 = $8512&1;
                    if ($8513) {
                     label = 1132;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos129);
                    break L857;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $8514 = $ij5126;
                $8515 = (($8514) + 1)|0;
                $ij5126 = $8515;
               }
              }
             } while(0);
             if ((label|0) == 285) {
              label = 0;
              $2678 = (($4) + 8|0);
              $2679 = +HEAPF64[$2678>>3];
              $2680 = 1.0 * $2679;
              $x185 = $2680;
              $2681 = (($4) + 344|0);
              $2682 = +HEAPF64[$2681>>3];
              $2683 = (($4) + 16|0);
              $2684 = +HEAPF64[$2683>>3];
              $2685 = $2682 * $2684;
              $x186 = $2685;
              $2686 = (($4) + 56|0);
              $2687 = +HEAPF64[$2686>>3];
              $2688 = (($4) + 96|0);
              $2689 = +HEAPF64[$2688>>3];
              $2690 = $2687 * $2689;
              $x187 = $2690;
              $2691 = (($4) + 320|0);
              $2692 = +HEAPF64[$2691>>3];
              $2693 = (($4) + 16|0);
              $2694 = +HEAPF64[$2693>>3];
              $2695 = $2692 * $2694;
              $x188 = $2695;
              $2696 = (($4) + 8|0);
              $2697 = +HEAPF64[$2696>>3];
              $2698 = (($4) + 248|0);
              $2699 = +HEAPF64[$2698>>3];
              $2700 = $2697 * $2699;
              $x189 = $2700;
              $2701 = (($4) + 48|0);
              $2702 = +HEAPF64[$2701>>3];
              $2703 = (($4) + 88|0);
              $2704 = +HEAPF64[$2703>>3];
              $2705 = $2702 * $2704;
              $x190 = $2705;
              $2706 = (($4) + 8|0);
              $2707 = +HEAPF64[$2706>>3];
              $2708 = (($4) + 272|0);
              $2709 = +HEAPF64[$2708>>3];
              $2710 = $2707 * $2709;
              $x191 = $2710;
              $2711 = (($4) + 368|0);
              $2712 = +HEAPF64[$2711>>3];
              $2713 = (($4) + 16|0);
              $2714 = +HEAPF64[$2713>>3];
              $2715 = $2712 * $2714;
              $x192 = $2715;
              $2716 = (($4) + 8|0);
              $2717 = +HEAPF64[$2716>>3];
              $2718 = (($4) + 296|0);
              $2719 = +HEAPF64[$2718>>3];
              $2720 = $2717 * $2719;
              $x193 = $2720;
              $2721 = $x187;
              $2722 = -1.0 * $2721;
              $2723 = $x190;
              $2724 = $2722 + $2723;
              $x194 = $2724;
              $2725 = $x190;
              $2726 = -1.0 * $2725;
              $2727 = $x187;
              $2728 = $2726 + $2727;
              $x195 = $2728;
              $2729 = (($4) + 16|0);
              $2730 = +HEAPF64[$2729>>3];
              $2731 = $x195;
              $2732 = $2730 * $2731;
              $x196 = $2732;
              $2733 = $x98;
              $x197 = $2733;
              $2734 = (($4) + 8|0);
              $2735 = +HEAPF64[$2734>>3];
              $2736 = $x197;
              $2737 = $2735 * $2736;
              $x198 = $2737;
              $2738 = (($4) + 248|0);
              $2739 = +HEAPF64[$2738>>3];
              $2740 = (($4) + 16|0);
              $2741 = +HEAPF64[$2740>>3];
              $2742 = $2739 * $2741;
              $2743 = (($4) + 320|0);
              $2744 = +HEAPF64[$2743>>3];
              $2745 = -1.0 * $2744;
              $2746 = $x185;
              $2747 = $2745 * $2746;
              $2748 = $2742 + $2747;
              $2749 = (($4) + 240|0);
              HEAPF64[$2749>>3] = $2748;
              $2750 = (($4) + 344|0);
              $2751 = +HEAPF64[$2750>>3];
              $2752 = -1.0 * $2751;
              $2753 = $x185;
              $2754 = $2752 * $2753;
              $2755 = (($4) + 272|0);
              $2756 = +HEAPF64[$2755>>3];
              $2757 = (($4) + 16|0);
              $2758 = +HEAPF64[$2757>>3];
              $2759 = $2756 * $2758;
              $2760 = $2754 + $2759;
              $2761 = (($4) + 264|0);
              HEAPF64[$2761>>3] = $2760;
              $2762 = (($4) + 368|0);
              $2763 = +HEAPF64[$2762>>3];
              $2764 = -1.0 * $2763;
              $2765 = $x185;
              $2766 = $2764 * $2765;
              $2767 = (($4) + 296|0);
              $2768 = +HEAPF64[$2767>>3];
              $2769 = (($4) + 16|0);
              $2770 = +HEAPF64[$2769>>3];
              $2771 = $2768 * $2770;
              $2772 = $2766 + $2771;
              $2773 = (($4) + 288|0);
              HEAPF64[$2773>>3] = $2772;
              $2774 = $x188;
              $2775 = $x197;
              $2776 = $2774 * $2775;
              $2777 = $x189;
              $2778 = $x197;
              $2779 = $2777 * $2778;
              $2780 = $2776 + $2779;
              $2781 = (($4) + 392|0);
              $2782 = +HEAPF64[$2781>>3];
              $2783 = $x194;
              $2784 = $2782 * $2783;
              $2785 = $2780 + $2784;
              $2786 = (($4) + 312|0);
              HEAPF64[$2786>>3] = $2785;
              $2787 = $x186;
              $2788 = $x197;
              $2789 = $2787 * $2788;
              $2790 = $x191;
              $2791 = $x197;
              $2792 = $2790 * $2791;
              $2793 = $2789 + $2792;
              $2794 = (($4) + 416|0);
              $2795 = +HEAPF64[$2794>>3];
              $2796 = $x194;
              $2797 = $2795 * $2796;
              $2798 = $2793 + $2797;
              $2799 = (($4) + 336|0);
              HEAPF64[$2799>>3] = $2798;
              $2800 = $x193;
              $2801 = $x197;
              $2802 = $2800 * $2801;
              $2803 = $x192;
              $2804 = $x197;
              $2805 = $2803 * $2804;
              $2806 = $2802 + $2805;
              $2807 = (($4) + 440|0);
              $2808 = +HEAPF64[$2807>>3];
              $2809 = $x194;
              $2810 = $2808 * $2809;
              $2811 = $2806 + $2810;
              $2812 = (($4) + 360|0);
              HEAPF64[$2812>>3] = $2811;
              $2813 = $x188;
              $2814 = $x195;
              $2815 = $2813 * $2814;
              $2816 = $x189;
              $2817 = $x195;
              $2818 = $2816 * $2817;
              $2819 = $2815 + $2818;
              $2820 = (($4) + 392|0);
              $2821 = +HEAPF64[$2820>>3];
              $2822 = $x197;
              $2823 = $2821 * $2822;
              $2824 = $2819 + $2823;
              $2825 = (($4) + 384|0);
              HEAPF64[$2825>>3] = $2824;
              $2826 = $x186;
              $2827 = $x195;
              $2828 = $2826 * $2827;
              $2829 = $x191;
              $2830 = $x195;
              $2831 = $2829 * $2830;
              $2832 = $2828 + $2831;
              $2833 = (($4) + 416|0);
              $2834 = +HEAPF64[$2833>>3];
              $2835 = $x197;
              $2836 = $2834 * $2835;
              $2837 = $2832 + $2836;
              $2838 = (($4) + 408|0);
              HEAPF64[$2838>>3] = $2837;
              $2839 = $x193;
              $2840 = $x195;
              $2841 = $2839 * $2840;
              $2842 = $x192;
              $2843 = $x195;
              $2844 = $2842 * $2843;
              $2845 = $2841 + $2844;
              $2846 = (($4) + 440|0);
              $2847 = +HEAPF64[$2846>>3];
              $2848 = $x197;
              $2849 = $2847 * $2848;
              $2850 = $2845 + $2849;
              $2851 = (($4) + 432|0);
              HEAPF64[$2851>>3] = $2850;
              $2852 = (($4) + 176|0);
              $2853 = +HEAPF64[$2852>>3];
              HEAPF64[$j5eval30>>3] = $2853;
              $2854 = (($4) + 168|0);
              $2855 = +HEAPF64[$2854>>3];
              $2856 = (($j5eval30) + 8|0);
              HEAPF64[$2856>>3] = $2855;
              $2857 = (($4) + 136|0);
              $2858 = +HEAPF64[$2857>>3];
              $2859 = (($j5eval30) + 16|0);
              HEAPF64[$2859>>3] = $2858;
              $2860 = +HEAPF64[$j5eval30>>3];
              $2861 = (+__Z5IKabsd($2860));
              $2862 = $2861 < 9.9999999999999995E-7;
              do {
               if ($2862) {
                label = 288;
               } else {
                $2863 = (($j5eval30) + 8|0);
                $2864 = +HEAPF64[$2863>>3];
                $2865 = (+__Z5IKabsd($2864));
                $2866 = $2865 < 9.9999999999999995E-7;
                if ($2866) {
                 label = 288;
                 break;
                }
                $2867 = (($j5eval30) + 16|0);
                $2868 = +HEAPF64[$2867>>3];
                $2869 = (+__Z5IKabsd($2868));
                $2870 = $2869 < 9.9999999999999995E-7;
                if ($2870) {
                 label = 288;
                 break;
                }
                ;HEAP8[$j5valid116+0>>0]=0|0;
                $7310 = (($4) + 553|0);
                HEAP8[$7310>>0] = 1;
                $7311 = (($4) + 176|0);
                $7312 = +HEAPF64[$7311>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x269,$7312,-1);
                $7313 = (($x269) + 8|0);
                $7314 = HEAP8[$7313>>0]|0;
                $7315 = $7314&1;
                if (!($7315)) {
                 break L726;
                }
                $7316 = +HEAPF64[$x269>>3];
                $x268 = $7316;
                $7317 = (($4) + 168|0);
                $7318 = +HEAPF64[$7317>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x270,$7318,-1);
                $7319 = (($x270) + 8|0);
                $7320 = HEAP8[$7319>>0]|0;
                $7321 = $7320&1;
                if (!($7321)) {
                 break L726;
                }
                $7322 = (($4) + 136|0);
                $7323 = +HEAPF64[$7322>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x271,$7323,-1);
                $7324 = (($x271) + 8|0);
                $7325 = HEAP8[$7324>>0]|0;
                $7326 = $7325&1;
                if (!($7326)) {
                 break L726;
                }
                $7327 = (($4) + 384|0);
                $7328 = +HEAPF64[$7327>>3];
                $7329 = $x268;
                $7330 = $7328 * $7329;
                $7331 = (+__Z5IKabsd($7330));
                $7332 = $7331 < 1.9999999999999999E-6;
                do {
                 if ($7332) {
                  $7333 = $x268;
                  $7334 = +HEAPF64[$x270>>3];
                  $7335 = $7333 * $7334;
                  $7336 = +HEAPF64[$x271>>3];
                  $7337 = $7335 * $7336;
                  $7338 = (($4) + 264|0);
                  $7339 = +HEAPF64[$7338>>3];
                  $7340 = -1.0 * $7339;
                  $7341 = (($4) + 176|0);
                  $7342 = +HEAPF64[$7341>>3];
                  $7343 = $7340 * $7342;
                  $7344 = (($4) + 128|0);
                  $7345 = +HEAPF64[$7344>>3];
                  $7346 = -1.0 * $7345;
                  $7347 = (($4) + 384|0);
                  $7348 = +HEAPF64[$7347>>3];
                  $7349 = $7346 * $7348;
                  $7350 = $7343 + $7349;
                  $7351 = $7337 * $7350;
                  $7352 = (+__Z5IKabsd($7351));
                  $7353 = $7352 < 1.9999999999999999E-6;
                  if (!($7353)) {
                   break;
                  }
                  $7354 = (($4) + 384|0);
                  $7355 = +HEAPF64[$7354>>3];
                  $7356 = $x268;
                  $7357 = $7355 * $7356;
                  $7358 = (+__Z5IKsqrd($7357));
                  $7359 = $x268;
                  $7360 = +HEAPF64[$x270>>3];
                  $7361 = $7359 * $7360;
                  $7362 = +HEAPF64[$x271>>3];
                  $7363 = $7361 * $7362;
                  $7364 = (($4) + 264|0);
                  $7365 = +HEAPF64[$7364>>3];
                  $7366 = -1.0 * $7365;
                  $7367 = (($4) + 176|0);
                  $7368 = +HEAPF64[$7367>>3];
                  $7369 = $7366 * $7368;
                  $7370 = (($4) + 128|0);
                  $7371 = +HEAPF64[$7370>>3];
                  $7372 = -1.0 * $7371;
                  $7373 = (($4) + 384|0);
                  $7374 = +HEAPF64[$7373>>3];
                  $7375 = $7372 * $7374;
                  $7376 = $7369 + $7375;
                  $7377 = $7363 * $7376;
                  $7378 = (+__Z5IKsqrd($7377));
                  $7379 = $7358 + $7378;
                  $7380 = $7379 - 1.0;
                  $7381 = (+__Z5IKabsd($7380));
                  $7382 = $7381 <= 1.9999999999999999E-6;
                  if (!($7382)) {
                   break;
                  }
                  break L726;
                 }
                } while(0);
                $7383 = (($4) + 384|0);
                $7384 = +HEAPF64[$7383>>3];
                $7385 = $x268;
                $7386 = $7384 * $7385;
                $7387 = $x268;
                $7388 = +HEAPF64[$x270>>3];
                $7389 = $7387 * $7388;
                $7390 = +HEAPF64[$x271>>3];
                $7391 = $7389 * $7390;
                $7392 = (($4) + 264|0);
                $7393 = +HEAPF64[$7392>>3];
                $7394 = -1.0 * $7393;
                $7395 = (($4) + 176|0);
                $7396 = +HEAPF64[$7395>>3];
                $7397 = $7394 * $7396;
                $7398 = (($4) + 128|0);
                $7399 = +HEAPF64[$7398>>3];
                $7400 = -1.0 * $7399;
                $7401 = (($4) + 384|0);
                $7402 = +HEAPF64[$7401>>3];
                $7403 = $7400 * $7402;
                $7404 = $7397 + $7403;
                $7405 = $7391 * $7404;
                $7406 = (+__Z7IKatan2dd($7386,$7405));
                HEAPF64[$j5array113>>3] = $7406;
                $7407 = +HEAPF64[$j5array113>>3];
                $7408 = (+__Z5IKsind($7407));
                HEAPF64[$sj5array115>>3] = $7408;
                $7409 = +HEAPF64[$j5array113>>3];
                $7410 = (+__Z5IKcosd($7409));
                HEAPF64[$cj5array114>>3] = $7410;
                $7411 = +HEAPF64[$j5array113>>3];
                $7412 = $7411 > 3.14159265358979;
                if ($7412) {
                 $7413 = +HEAPF64[$j5array113>>3];
                 $7414 = $7413 - 6.2831853071795898;
                 HEAPF64[$j5array113>>3] = $7414;
                } else {
                 $7415 = +HEAPF64[$j5array113>>3];
                 $7416 = $7415 < -3.14159265358979;
                 if ($7416) {
                  $7417 = +HEAPF64[$j5array113>>3];
                  $7418 = $7417 + 6.2831853071795898;
                  HEAPF64[$j5array113>>3] = $7418;
                 }
                }
                HEAP8[$j5valid116>>0] = 1;
                $ij5117 = 0;
                while(1) {
                 $7419 = $ij5117;
                 $7420 = ($7419|0)<(1);
                 if (!($7420)) {
                  break;
                 }
                 $7421 = $ij5117;
                 $7422 = (($j5valid116) + ($7421)|0);
                 $7423 = HEAP8[$7422>>0]|0;
                 $7424 = $7423&1;
                 L950: do {
                  if ($7424) {
                   $7425 = $ij5117;
                   $7426 = $7425&255;
                   $7427 = (($4) + 551|0);
                   HEAP8[$7427>>0] = $7426;
                   $7428 = (($4) + 551|0);
                   $7429 = (($7428) + 1|0);
                   HEAP8[$7429>>0] = -1;
                   $7430 = $ij5117;
                   $7431 = (($7430) + 1)|0;
                   $iij5118 = $7431;
                   L953: while(1) {
                    $7432 = $iij5118;
                    $7433 = ($7432|0)<(1);
                    if (!($7433)) {
                     break;
                    }
                    $7434 = $iij5118;
                    $7435 = (($j5valid116) + ($7434)|0);
                    $7436 = HEAP8[$7435>>0]|0;
                    $7437 = $7436&1;
                    do {
                     if ($7437) {
                      $7438 = $ij5117;
                      $7439 = (($cj5array114) + ($7438<<3)|0);
                      $7440 = +HEAPF64[$7439>>3];
                      $7441 = $iij5118;
                      $7442 = (($cj5array114) + ($7441<<3)|0);
                      $7443 = +HEAPF64[$7442>>3];
                      $7444 = $7440 - $7443;
                      $7445 = (+__Z5IKabsd($7444));
                      $7446 = $7445 < 9.9999999999999995E-7;
                      if (!($7446)) {
                       break;
                      }
                      $7447 = $ij5117;
                      $7448 = (($sj5array115) + ($7447<<3)|0);
                      $7449 = +HEAPF64[$7448>>3];
                      $7450 = $iij5118;
                      $7451 = (($sj5array115) + ($7450<<3)|0);
                      $7452 = +HEAPF64[$7451>>3];
                      $7453 = $7449 - $7452;
                      $7454 = (+__Z5IKabsd($7453));
                      $7455 = $7454 < 9.9999999999999995E-7;
                      if ($7455) {
                       label = 1001;
                       break L953;
                      }
                     }
                    } while(0);
                    $7462 = $iij5118;
                    $7463 = (($7462) + 1)|0;
                    $iij5118 = $7463;
                   }
                   if ((label|0) == 1001) {
                    label = 0;
                    $7456 = $iij5118;
                    $7457 = (($j5valid116) + ($7456)|0);
                    HEAP8[$7457>>0] = 0;
                    $7458 = $iij5118;
                    $7459 = $7458&255;
                    $7460 = (($4) + 551|0);
                    $7461 = (($7460) + 1|0);
                    HEAP8[$7461>>0] = $7459;
                   }
                   $7464 = $ij5117;
                   $7465 = (($j5array113) + ($7464<<3)|0);
                   $7466 = +HEAPF64[$7465>>3];
                   $7467 = (($4) + 200|0);
                   HEAPF64[$7467>>3] = $7466;
                   $7468 = $ij5117;
                   $7469 = (($cj5array114) + ($7468<<3)|0);
                   $7470 = +HEAPF64[$7469>>3];
                   $7471 = (($4) + 208|0);
                   HEAPF64[$7471>>3] = $7470;
                   $7472 = $ij5117;
                   $7473 = (($sj5array115) + ($7472<<3)|0);
                   $7474 = +HEAPF64[$7473>>3];
                   $7475 = (($4) + 216|0);
                   HEAPF64[$7475>>3] = $7474;
                   $7476 = (($4) + 200|0);
                   $7477 = +HEAPF64[$7476>>3];
                   $7478 = (+__Z5IKsind($7477));
                   $x272 = $7478;
                   $7479 = (($4) + 200|0);
                   $7480 = +HEAPF64[$7479>>3];
                   $7481 = (+__Z5IKcosd($7480));
                   $x273 = $7481;
                   $7482 = (($4) + 168|0);
                   $7483 = +HEAPF64[$7482>>3];
                   $7484 = (($4) + 136|0);
                   $7485 = +HEAPF64[$7484>>3];
                   $7486 = $7483 * $7485;
                   $x274 = $7486;
                   $7487 = (($4) + 128|0);
                   $7488 = +HEAPF64[$7487>>3];
                   $7489 = (($4) + 312|0);
                   $7490 = +HEAPF64[$7489>>3];
                   $7491 = $7488 * $7490;
                   $x275 = $7491;
                   $7492 = (($4) + 128|0);
                   $7493 = +HEAPF64[$7492>>3];
                   $7494 = (($4) + 336|0);
                   $7495 = +HEAPF64[$7494>>3];
                   $7496 = $7493 * $7495;
                   $x276 = $7496;
                   $7497 = (($4) + 136|0);
                   $7498 = +HEAPF64[$7497>>3];
                   $7499 = 1.0 * $7498;
                   $x277 = $7499;
                   $7500 = (($4) + 168|0);
                   $7501 = +HEAPF64[$7500>>3];
                   $7502 = 1.0 * $7501;
                   $x278 = $7502;
                   $7503 = (($4) + 176|0);
                   $7504 = +HEAPF64[$7503>>3];
                   $7505 = 1.0 * $7504;
                   $x279 = $7505;
                   $7506 = (($4) + 168|0);
                   $7507 = +HEAPF64[$7506>>3];
                   $7508 = $x272;
                   $7509 = $7507 * $7508;
                   $x280 = $7509;
                   $7510 = $x273;
                   $7511 = 1.0 * $7510;
                   $x281 = $7511;
                   $7512 = $x272;
                   $7513 = -1.0 * $7512;
                   $7514 = $x279;
                   $7515 = $7513 * $7514;
                   $7516 = (($4) + 384|0);
                   $7517 = +HEAPF64[$7516>>3];
                   $7518 = $7515 + $7517;
                   HEAPF64[$evalcond119>>3] = $7518;
                   $7519 = $x273;
                   $7520 = -1.0 * $7519;
                   $7521 = $x279;
                   $7522 = $7520 * $7521;
                   $7523 = (($4) + 408|0);
                   $7524 = +HEAPF64[$7523>>3];
                   $7525 = $7522 + $7524;
                   $7526 = (($evalcond119) + 8|0);
                   HEAPF64[$7526>>3] = $7525;
                   $7527 = (($4) + 336|0);
                   $7528 = +HEAPF64[$7527>>3];
                   $7529 = (($4) + 136|0);
                   $7530 = +HEAPF64[$7529>>3];
                   $7531 = $7528 * $7530;
                   $7532 = $x272;
                   $7533 = $7531 + $7532;
                   $7534 = (($4) + 128|0);
                   $7535 = +HEAPF64[$7534>>3];
                   $7536 = (($4) + 264|0);
                   $7537 = +HEAPF64[$7536>>3];
                   $7538 = $7535 * $7537;
                   $7539 = $7533 + $7538;
                   $7540 = (($evalcond119) + 16|0);
                   HEAPF64[$7540>>3] = $7539;
                   $7541 = (($4) + 312|0);
                   $7542 = +HEAPF64[$7541>>3];
                   $7543 = (($4) + 136|0);
                   $7544 = +HEAPF64[$7543>>3];
                   $7545 = $7542 * $7544;
                   $7546 = (($4) + 128|0);
                   $7547 = +HEAPF64[$7546>>3];
                   $7548 = (($4) + 240|0);
                   $7549 = +HEAPF64[$7548>>3];
                   $7550 = $7547 * $7549;
                   $7551 = $7545 + $7550;
                   $7552 = $x281;
                   $7553 = -1.0 * $7552;
                   $7554 = $7551 + $7553;
                   $7555 = (($evalcond119) + 24|0);
                   HEAPF64[$7555>>3] = $7554;
                   $7556 = $x273;
                   $7557 = $x274;
                   $7558 = $7556 * $7557;
                   $7559 = (($4) + 264|0);
                   $7560 = +HEAPF64[$7559>>3];
                   $7561 = $7558 + $7560;
                   $7562 = (($4) + 128|0);
                   $7563 = +HEAPF64[$7562>>3];
                   $7564 = $x272;
                   $7565 = $7563 * $7564;
                   $7566 = $7561 + $7565;
                   $7567 = (($evalcond119) + 32|0);
                   HEAPF64[$7567>>3] = $7566;
                   $7568 = $x272;
                   $7569 = $x274;
                   $7570 = $7568 * $7569;
                   $7571 = (($4) + 128|0);
                   $7572 = +HEAPF64[$7571>>3];
                   $7573 = -1.0 * $7572;
                   $7574 = $x281;
                   $7575 = $7573 * $7574;
                   $7576 = $7570 + $7575;
                   $7577 = (($4) + 240|0);
                   $7578 = +HEAPF64[$7577>>3];
                   $7579 = $7576 + $7578;
                   $7580 = (($evalcond119) + 40|0);
                   HEAPF64[$7580>>3] = $7579;
                   $7581 = (($4) + 136|0);
                   $7582 = +HEAPF64[$7581>>3];
                   $7583 = $x272;
                   $7584 = $7582 * $7583;
                   $7585 = (($4) + 128|0);
                   $7586 = +HEAPF64[$7585>>3];
                   $7587 = -1.0 * $7586;
                   $7588 = $x273;
                   $7589 = $7587 * $7588;
                   $7590 = $x278;
                   $7591 = $7589 * $7590;
                   $7592 = $7584 + $7591;
                   $7593 = (($4) + 336|0);
                   $7594 = +HEAPF64[$7593>>3];
                   $7595 = $7592 + $7594;
                   $7596 = (($evalcond119) + 48|0);
                   HEAPF64[$7596>>3] = $7595;
                   $7597 = $x272;
                   $7598 = -1.0 * $7597;
                   $7599 = $x278;
                   $7600 = $7598 * $7599;
                   $7601 = (($4) + 240|0);
                   $7602 = +HEAPF64[$7601>>3];
                   $7603 = -1.0 * $7602;
                   $7604 = $x277;
                   $7605 = $7603 * $7604;
                   $7606 = $7600 + $7605;
                   $7607 = $x275;
                   $7608 = $7606 + $7607;
                   $7609 = (($evalcond119) + 56|0);
                   HEAPF64[$7609>>3] = $7608;
                   $7610 = $x273;
                   $7611 = -1.0 * $7610;
                   $7612 = $x278;
                   $7613 = $7611 * $7612;
                   $7614 = (($4) + 264|0);
                   $7615 = +HEAPF64[$7614>>3];
                   $7616 = -1.0 * $7615;
                   $7617 = $x277;
                   $7618 = $7616 * $7617;
                   $7619 = $7613 + $7618;
                   $7620 = $x276;
                   $7621 = $7619 + $7620;
                   $7622 = (($evalcond119) + 64|0);
                   HEAPF64[$7622>>3] = $7621;
                   $7623 = $x273;
                   $7624 = -1.0 * $7623;
                   $7625 = $x277;
                   $7626 = $7624 * $7625;
                   $7627 = (($4) + 128|0);
                   $7628 = +HEAPF64[$7627>>3];
                   $7629 = -1.0 * $7628;
                   $7630 = $x272;
                   $7631 = $7629 * $7630;
                   $7632 = $x278;
                   $7633 = $7631 * $7632;
                   $7634 = $7626 + $7633;
                   $7635 = (($4) + 312|0);
                   $7636 = +HEAPF64[$7635>>3];
                   $7637 = $7634 + $7636;
                   $7638 = (($evalcond119) + 72|0);
                   HEAPF64[$7638>>3] = $7637;
                   $7639 = $x272;
                   $7640 = (($4) + 240|0);
                   $7641 = +HEAPF64[$7640>>3];
                   $7642 = $x274;
                   $7643 = $7641 * $7642;
                   $7644 = $7639 + $7643;
                   $7645 = (($4) + 384|0);
                   $7646 = +HEAPF64[$7645>>3];
                   $7647 = -1.0 * $7646;
                   $7648 = $x279;
                   $7649 = $7647 * $7648;
                   $7650 = $7644 + $7649;
                   $7651 = $x275;
                   $7652 = -1.0 * $7651;
                   $7653 = $x278;
                   $7654 = $7652 * $7653;
                   $7655 = $7650 + $7654;
                   $7656 = (($evalcond119) + 80|0);
                   HEAPF64[$7656>>3] = $7655;
                   $7657 = (($4) + 408|0);
                   $7658 = +HEAPF64[$7657>>3];
                   $7659 = -1.0 * $7658;
                   $7660 = $x279;
                   $7661 = $7659 * $7660;
                   $7662 = $x273;
                   $7663 = $7661 + $7662;
                   $7664 = (($4) + 264|0);
                   $7665 = +HEAPF64[$7664>>3];
                   $7666 = $x274;
                   $7667 = $7665 * $7666;
                   $7668 = $7663 + $7667;
                   $7669 = $x276;
                   $7670 = -1.0 * $7669;
                   $7671 = $x278;
                   $7672 = $7670 * $7671;
                   $7673 = $7668 + $7672;
                   $7674 = (($evalcond119) + 88|0);
                   HEAPF64[$7674>>3] = $7673;
                   $7675 = +HEAPF64[$evalcond119>>3];
                   $7676 = (+__Z5IKabsd($7675));
                   $7677 = $7676 > 5.0000000000000004E-6;
                   do {
                    if (!($7677)) {
                     $7678 = (($evalcond119) + 8|0);
                     $7679 = +HEAPF64[$7678>>3];
                     $7680 = (+__Z5IKabsd($7679));
                     $7681 = $7680 > 5.0000000000000004E-6;
                     if ($7681) {
                      break;
                     }
                     $7682 = (($evalcond119) + 16|0);
                     $7683 = +HEAPF64[$7682>>3];
                     $7684 = (+__Z5IKabsd($7683));
                     $7685 = $7684 > 5.0000000000000004E-6;
                     if ($7685) {
                      break;
                     }
                     $7686 = (($evalcond119) + 24|0);
                     $7687 = +HEAPF64[$7686>>3];
                     $7688 = (+__Z5IKabsd($7687));
                     $7689 = $7688 > 5.0000000000000004E-6;
                     if ($7689) {
                      break;
                     }
                     $7690 = (($evalcond119) + 32|0);
                     $7691 = +HEAPF64[$7690>>3];
                     $7692 = (+__Z5IKabsd($7691));
                     $7693 = $7692 > 5.0000000000000004E-6;
                     if ($7693) {
                      break;
                     }
                     $7694 = (($evalcond119) + 40|0);
                     $7695 = +HEAPF64[$7694>>3];
                     $7696 = (+__Z5IKabsd($7695));
                     $7697 = $7696 > 5.0000000000000004E-6;
                     if ($7697) {
                      break;
                     }
                     $7698 = (($evalcond119) + 48|0);
                     $7699 = +HEAPF64[$7698>>3];
                     $7700 = (+__Z5IKabsd($7699));
                     $7701 = $7700 > 5.0000000000000004E-6;
                     if ($7701) {
                      break;
                     }
                     $7702 = (($evalcond119) + 56|0);
                     $7703 = +HEAPF64[$7702>>3];
                     $7704 = (+__Z5IKabsd($7703));
                     $7705 = $7704 > 5.0000000000000004E-6;
                     if ($7705) {
                      break;
                     }
                     $7706 = (($evalcond119) + 64|0);
                     $7707 = +HEAPF64[$7706>>3];
                     $7708 = (+__Z5IKabsd($7707));
                     $7709 = $7708 > 5.0000000000000004E-6;
                     if ($7709) {
                      break;
                     }
                     $7710 = (($evalcond119) + 72|0);
                     $7711 = +HEAPF64[$7710>>3];
                     $7712 = (+__Z5IKabsd($7711));
                     $7713 = $7712 > 5.0000000000000004E-6;
                     if ($7713) {
                      break;
                     }
                     $7714 = (($evalcond119) + 80|0);
                     $7715 = +HEAPF64[$7714>>3];
                     $7716 = (+__Z5IKabsd($7715));
                     $7717 = $7716 > 5.0000000000000004E-6;
                     if ($7717) {
                      break;
                     }
                     $7718 = (($evalcond119) + 88|0);
                     $7719 = +HEAPF64[$7718>>3];
                     $7720 = (+__Z5IKabsd($7719));
                     $7721 = $7720 > 5.0000000000000004E-6;
                     if ($7721) {
                      break;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,6);
                     __THREW__ = 0;
                     $7722 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7723 = __THREW__; __THREW__ = 0;
                     $7724 = $7723&1;
                     if ($7724) {
                      label = 1052;
                      break L1;
                     }
                     $7725 = (($7722) + 17|0);
                     HEAP8[$7725>>0] = 1;
                     $7726 = +HEAPF64[$4>>3];
                     __THREW__ = 0;
                     $7727 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7728 = __THREW__; __THREW__ = 0;
                     $7729 = $7728&1;
                     if ($7729) {
                      label = 1052;
                      break L1;
                     }
                     $7730 = (($7727) + 8|0);
                     HEAPF64[$7730>>3] = $7726;
                     $7731 = (($4) + 536|0);
                     $7732 = HEAP8[$7731>>0]|0;
                     __THREW__ = 0;
                     $7733 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7734 = __THREW__; __THREW__ = 0;
                     $7735 = $7734&1;
                     if ($7735) {
                      label = 1052;
                      break L1;
                     }
                     $7736 = (($7733) + 19|0);
                     HEAP8[$7736>>0] = $7732;
                     $7737 = (($4) + 536|0);
                     $7738 = (($7737) + 1|0);
                     $7739 = HEAP8[$7738>>0]|0;
                     __THREW__ = 0;
                     $7740 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7741 = __THREW__; __THREW__ = 0;
                     $7742 = $7741&1;
                     if ($7742) {
                      label = 1052;
                      break L1;
                     }
                     $7743 = (($7740) + 19|0);
                     $7744 = (($7743) + 1|0);
                     HEAP8[$7744>>0] = $7739;
                     $7745 = (($4) + 538|0);
                     $7746 = HEAP8[$7745>>0]|0;
                     __THREW__ = 0;
                     $7747 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7748 = __THREW__; __THREW__ = 0;
                     $7749 = $7748&1;
                     if ($7749) {
                      label = 1052;
                      break L1;
                     }
                     $7750 = (($7747) + 18|0);
                     HEAP8[$7750>>0] = $7746;
                     __THREW__ = 0;
                     $7751 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7752 = __THREW__; __THREW__ = 0;
                     $7753 = $7752&1;
                     if ($7753) {
                      label = 1052;
                      break L1;
                     }
                     $7754 = (($7751) + 17|0);
                     HEAP8[$7754>>0] = 1;
                     $7755 = (($4) + 40|0);
                     $7756 = +HEAPF64[$7755>>3];
                     __THREW__ = 0;
                     $7757 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7758 = __THREW__; __THREW__ = 0;
                     $7759 = $7758&1;
                     if ($7759) {
                      label = 1052;
                      break L1;
                     }
                     $7760 = (($7757) + 8|0);
                     HEAPF64[$7760>>3] = $7756;
                     $7761 = (($4) + 539|0);
                     $7762 = HEAP8[$7761>>0]|0;
                     __THREW__ = 0;
                     $7763 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7764 = __THREW__; __THREW__ = 0;
                     $7765 = $7764&1;
                     if ($7765) {
                      label = 1052;
                      break L1;
                     }
                     $7766 = (($7763) + 19|0);
                     HEAP8[$7766>>0] = $7762;
                     $7767 = (($4) + 539|0);
                     $7768 = (($7767) + 1|0);
                     $7769 = HEAP8[$7768>>0]|0;
                     __THREW__ = 0;
                     $7770 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7771 = __THREW__; __THREW__ = 0;
                     $7772 = $7771&1;
                     if ($7772) {
                      label = 1052;
                      break L1;
                     }
                     $7773 = (($7770) + 19|0);
                     $7774 = (($7773) + 1|0);
                     HEAP8[$7774>>0] = $7769;
                     $7775 = (($4) + 541|0);
                     $7776 = HEAP8[$7775>>0]|0;
                     __THREW__ = 0;
                     $7777 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7778 = __THREW__; __THREW__ = 0;
                     $7779 = $7778&1;
                     if ($7779) {
                      label = 1052;
                      break L1;
                     }
                     $7780 = (($7777) + 18|0);
                     HEAP8[$7780>>0] = $7776;
                     __THREW__ = 0;
                     $7781 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7782 = __THREW__; __THREW__ = 0;
                     $7783 = $7782&1;
                     if ($7783) {
                      label = 1052;
                      break L1;
                     }
                     $7784 = (($7781) + 17|0);
                     HEAP8[$7784>>0] = 1;
                     $7785 = (($4) + 80|0);
                     $7786 = +HEAPF64[$7785>>3];
                     __THREW__ = 0;
                     $7787 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7788 = __THREW__; __THREW__ = 0;
                     $7789 = $7788&1;
                     if ($7789) {
                      label = 1052;
                      break L1;
                     }
                     $7790 = (($7787) + 8|0);
                     HEAPF64[$7790>>3] = $7786;
                     $7791 = (($4) + 542|0);
                     $7792 = HEAP8[$7791>>0]|0;
                     __THREW__ = 0;
                     $7793 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7794 = __THREW__; __THREW__ = 0;
                     $7795 = $7794&1;
                     if ($7795) {
                      label = 1052;
                      break L1;
                     }
                     $7796 = (($7793) + 19|0);
                     HEAP8[$7796>>0] = $7792;
                     $7797 = (($4) + 542|0);
                     $7798 = (($7797) + 1|0);
                     $7799 = HEAP8[$7798>>0]|0;
                     __THREW__ = 0;
                     $7800 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7801 = __THREW__; __THREW__ = 0;
                     $7802 = $7801&1;
                     if ($7802) {
                      label = 1052;
                      break L1;
                     }
                     $7803 = (($7800) + 19|0);
                     $7804 = (($7803) + 1|0);
                     HEAP8[$7804>>0] = $7799;
                     $7805 = (($4) + 544|0);
                     $7806 = HEAP8[$7805>>0]|0;
                     __THREW__ = 0;
                     $7807 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7808 = __THREW__; __THREW__ = 0;
                     $7809 = $7808&1;
                     if ($7809) {
                      label = 1052;
                      break L1;
                     }
                     $7810 = (($7807) + 18|0);
                     HEAP8[$7810>>0] = $7806;
                     __THREW__ = 0;
                     $7811 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7812 = __THREW__; __THREW__ = 0;
                     $7813 = $7812&1;
                     if ($7813) {
                      label = 1052;
                      break L1;
                     }
                     $7814 = (($7811) + 17|0);
                     HEAP8[$7814>>0] = 1;
                     $7815 = (($4) + 120|0);
                     $7816 = +HEAPF64[$7815>>3];
                     __THREW__ = 0;
                     $7817 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7818 = __THREW__; __THREW__ = 0;
                     $7819 = $7818&1;
                     if ($7819) {
                      label = 1052;
                      break L1;
                     }
                     $7820 = (($7817) + 8|0);
                     HEAPF64[$7820>>3] = $7816;
                     $7821 = (($4) + 545|0);
                     $7822 = HEAP8[$7821>>0]|0;
                     __THREW__ = 0;
                     $7823 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7824 = __THREW__; __THREW__ = 0;
                     $7825 = $7824&1;
                     if ($7825) {
                      label = 1052;
                      break L1;
                     }
                     $7826 = (($7823) + 19|0);
                     HEAP8[$7826>>0] = $7822;
                     $7827 = (($4) + 545|0);
                     $7828 = (($7827) + 1|0);
                     $7829 = HEAP8[$7828>>0]|0;
                     __THREW__ = 0;
                     $7830 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7831 = __THREW__; __THREW__ = 0;
                     $7832 = $7831&1;
                     if ($7832) {
                      label = 1052;
                      break L1;
                     }
                     $7833 = (($7830) + 19|0);
                     $7834 = (($7833) + 1|0);
                     HEAP8[$7834>>0] = $7829;
                     $7835 = (($4) + 547|0);
                     $7836 = HEAP8[$7835>>0]|0;
                     __THREW__ = 0;
                     $7837 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7838 = __THREW__; __THREW__ = 0;
                     $7839 = $7838&1;
                     if ($7839) {
                      label = 1052;
                      break L1;
                     }
                     $7840 = (($7837) + 18|0);
                     HEAP8[$7840>>0] = $7836;
                     __THREW__ = 0;
                     $7841 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7842 = __THREW__; __THREW__ = 0;
                     $7843 = $7842&1;
                     if ($7843) {
                      label = 1052;
                      break L1;
                     }
                     $7844 = (($7841) + 17|0);
                     HEAP8[$7844>>0] = 1;
                     $7845 = (($4) + 160|0);
                     $7846 = +HEAPF64[$7845>>3];
                     __THREW__ = 0;
                     $7847 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7848 = __THREW__; __THREW__ = 0;
                     $7849 = $7848&1;
                     if ($7849) {
                      label = 1052;
                      break L1;
                     }
                     $7850 = (($7847) + 8|0);
                     HEAPF64[$7850>>3] = $7846;
                     $7851 = (($4) + 548|0);
                     $7852 = HEAP8[$7851>>0]|0;
                     __THREW__ = 0;
                     $7853 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7854 = __THREW__; __THREW__ = 0;
                     $7855 = $7854&1;
                     if ($7855) {
                      label = 1052;
                      break L1;
                     }
                     $7856 = (($7853) + 19|0);
                     HEAP8[$7856>>0] = $7852;
                     $7857 = (($4) + 548|0);
                     $7858 = (($7857) + 1|0);
                     $7859 = HEAP8[$7858>>0]|0;
                     __THREW__ = 0;
                     $7860 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7861 = __THREW__; __THREW__ = 0;
                     $7862 = $7861&1;
                     if ($7862) {
                      label = 1052;
                      break L1;
                     }
                     $7863 = (($7860) + 19|0);
                     $7864 = (($7863) + 1|0);
                     HEAP8[$7864>>0] = $7859;
                     $7865 = (($4) + 550|0);
                     $7866 = HEAP8[$7865>>0]|0;
                     __THREW__ = 0;
                     $7867 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7868 = __THREW__; __THREW__ = 0;
                     $7869 = $7868&1;
                     if ($7869) {
                      label = 1052;
                      break L1;
                     }
                     $7870 = (($7867) + 18|0);
                     HEAP8[$7870>>0] = $7866;
                     __THREW__ = 0;
                     $7871 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7872 = __THREW__; __THREW__ = 0;
                     $7873 = $7872&1;
                     if ($7873) {
                      label = 1052;
                      break L1;
                     }
                     $7874 = (($7871) + 17|0);
                     HEAP8[$7874>>0] = 1;
                     $7875 = (($4) + 200|0);
                     $7876 = +HEAPF64[$7875>>3];
                     __THREW__ = 0;
                     $7877 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7878 = __THREW__; __THREW__ = 0;
                     $7879 = $7878&1;
                     if ($7879) {
                      label = 1052;
                      break L1;
                     }
                     $7880 = (($7877) + 8|0);
                     HEAPF64[$7880>>3] = $7876;
                     $7881 = (($4) + 551|0);
                     $7882 = HEAP8[$7881>>0]|0;
                     __THREW__ = 0;
                     $7883 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7884 = __THREW__; __THREW__ = 0;
                     $7885 = $7884&1;
                     if ($7885) {
                      label = 1052;
                      break L1;
                     }
                     $7886 = (($7883) + 19|0);
                     HEAP8[$7886>>0] = $7882;
                     $7887 = (($4) + 551|0);
                     $7888 = (($7887) + 1|0);
                     $7889 = HEAP8[$7888>>0]|0;
                     __THREW__ = 0;
                     $7890 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7891 = __THREW__; __THREW__ = 0;
                     $7892 = $7891&1;
                     if ($7892) {
                      label = 1052;
                      break L1;
                     }
                     $7893 = (($7890) + 19|0);
                     $7894 = (($7893) + 1|0);
                     HEAP8[$7894>>0] = $7889;
                     $7895 = (($4) + 553|0);
                     $7896 = HEAP8[$7895>>0]|0;
                     __THREW__ = 0;
                     $7897 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7898 = __THREW__; __THREW__ = 0;
                     $7899 = $7898&1;
                     if ($7899) {
                      label = 1052;
                      break L1;
                     }
                     $7900 = (($7897) + 18|0);
                     HEAP8[$7900>>0] = $7896;
                     __THREW__ = 0;
                     invoke_vii(382,($vfree121|0),0);
                     $7901 = __THREW__; __THREW__ = 0;
                     $7902 = $7901&1;
                     if ($7902) {
                      label = 1052;
                      break L1;
                     }
                     $7903 = $1;
                     $7904 = HEAP32[$7903>>2]|0;
                     $7905 = (($7904) + 8|0);
                     $7906 = HEAP32[$7905>>2]|0;
                     __THREW__ = 0;
                     (invoke_iiii($7906|0,($7903|0),($vinfos120|0),($vfree121|0))|0);
                     $7907 = __THREW__; __THREW__ = 0;
                     $7908 = $7907&1;
                     if ($7908) {
                      label = 1053;
                      break L1;
                     }
                     __THREW__ = 0;
                     invoke_vi(366,($vfree121|0));
                     $7909 = __THREW__; __THREW__ = 0;
                     $7910 = $7909&1;
                     if ($7910) {
                      label = 1052;
                      break L1;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
                     break L950;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $7911 = $ij5117;
                 $7912 = (($7911) + 1)|0;
                 $ij5117 = $7912;
                }
               }
              } while(0);
              if ((label|0) == 288) {
               label = 0;
               $bgotonextstatement32 = 1;
               $2871 = (($4) + 128|0);
               $2872 = +HEAPF64[$2871>>3];
               $2873 = (($4) + 360|0);
               $2874 = +HEAPF64[$2873>>3];
               $2875 = $2872 * $2874;
               $x199 = $2875;
               $2876 = (($4) + 288|0);
               $2877 = +HEAPF64[$2876>>3];
               $2878 = (($4) + 136|0);
               $2879 = +HEAPF64[$2878>>3];
               $2880 = $2877 * $2879;
               $x200 = $2880;
               $2881 = (($4) + 360|0);
               $2882 = +HEAPF64[$2881>>3];
               $2883 = (($4) + 136|0);
               $2884 = +HEAPF64[$2883>>3];
               $2885 = $2882 * $2884;
               $2886 = (($4) + 128|0);
               $2887 = +HEAPF64[$2886>>3];
               $2888 = (($4) + 288|0);
               $2889 = +HEAPF64[$2888>>3];
               $2890 = $2887 * $2889;
               $2891 = $2885 + $2890;
               $x201 = $2891;
               $2892 = (($4) + 160|0);
               $2893 = +HEAPF64[$2892>>3];
               $2894 = (+__Z5IKabsd($2893));
               $2895 = 3.14159265358979 + $2894;
               $2896 = (+__Z6IKfmoddd($2895,6.2831853071795898));
               $2897 = -3.14159265358979 + $2896;
               HEAPF64[$evalcond31>>3] = $2897;
               $2898 = (($4) + 432|0);
               $2899 = +HEAPF64[$2898>>3];
               $2900 = -1.0 + $2899;
               $2901 = (($evalcond31) + 8|0);
               HEAPF64[$2901>>3] = $2900;
               $2902 = (($4) + 360|0);
               $2903 = +HEAPF64[$2902>>3];
               $2904 = (($evalcond31) + 16|0);
               HEAPF64[$2904>>3] = $2903;
               $2905 = (($4) + 288|0);
               $2906 = +HEAPF64[$2905>>3];
               $2907 = (($evalcond31) + 24|0);
               HEAPF64[$2907>>3] = $2906;
               $2908 = (($4) + 384|0);
               $2909 = +HEAPF64[$2908>>3];
               $2910 = (($evalcond31) + 32|0);
               HEAPF64[$2910>>3] = $2909;
               $2911 = (($4) + 408|0);
               $2912 = +HEAPF64[$2911>>3];
               $2913 = (($evalcond31) + 40|0);
               HEAPF64[$2913>>3] = $2912;
               $2914 = $x201;
               $2915 = (($evalcond31) + 48|0);
               HEAPF64[$2915>>3] = $2914;
               $2916 = $x201;
               $2917 = (($evalcond31) + 56|0);
               HEAPF64[$2917>>3] = $2916;
               $2918 = $x199;
               $2919 = $x200;
               $2920 = -1.0 * $2919;
               $2921 = $2918 + $2920;
               $2922 = (($evalcond31) + 64|0);
               HEAPF64[$2922>>3] = $2921;
               $2923 = $x199;
               $2924 = -1.0 * $2923;
               $2925 = $x200;
               $2926 = $2924 + $2925;
               $2927 = (($evalcond31) + 72|0);
               HEAPF64[$2927>>3] = $2926;
               $2928 = +HEAPF64[$evalcond31>>3];
               $2929 = (+__Z5IKabsd($2928));
               $2930 = $2929 < 9.9999999999999995E-7;
               L1016: do {
                if ($2930) {
                 $2931 = (($evalcond31) + 8|0);
                 $2932 = +HEAPF64[$2931>>3];
                 $2933 = (+__Z5IKabsd($2932));
                 $2934 = $2933 < 9.9999999999999995E-7;
                 if (!($2934)) {
                  label = 370;
                  break;
                 }
                 $2935 = (($evalcond31) + 16|0);
                 $2936 = +HEAPF64[$2935>>3];
                 $2937 = (+__Z5IKabsd($2936));
                 $2938 = $2937 < 9.9999999999999995E-7;
                 if (!($2938)) {
                  label = 370;
                  break;
                 }
                 $2939 = (($evalcond31) + 24|0);
                 $2940 = +HEAPF64[$2939>>3];
                 $2941 = (+__Z5IKabsd($2940));
                 $2942 = $2941 < 9.9999999999999995E-7;
                 if (!($2942)) {
                  label = 370;
                  break;
                 }
                 $2943 = (($evalcond31) + 32|0);
                 $2944 = +HEAPF64[$2943>>3];
                 $2945 = (+__Z5IKabsd($2944));
                 $2946 = $2945 < 9.9999999999999995E-7;
                 if (!($2946)) {
                  label = 370;
                  break;
                 }
                 $2947 = (($evalcond31) + 40|0);
                 $2948 = +HEAPF64[$2947>>3];
                 $2949 = (+__Z5IKabsd($2948));
                 $2950 = $2949 < 9.9999999999999995E-7;
                 if (!($2950)) {
                  label = 370;
                  break;
                 }
                 $2951 = (($evalcond31) + 48|0);
                 $2952 = +HEAPF64[$2951>>3];
                 $2953 = (+__Z5IKabsd($2952));
                 $2954 = $2953 < 9.9999999999999995E-7;
                 if (!($2954)) {
                  label = 370;
                  break;
                 }
                 $2955 = (($evalcond31) + 56|0);
                 $2956 = +HEAPF64[$2955>>3];
                 $2957 = (+__Z5IKabsd($2956));
                 $2958 = $2957 < 9.9999999999999995E-7;
                 if (!($2958)) {
                  label = 370;
                  break;
                 }
                 $2959 = (($evalcond31) + 64|0);
                 $2960 = +HEAPF64[$2959>>3];
                 $2961 = (+__Z5IKabsd($2960));
                 $2962 = $2961 < 9.9999999999999995E-7;
                 if (!($2962)) {
                  label = 370;
                  break;
                 }
                 $2963 = (($evalcond31) + 72|0);
                 $2964 = +HEAPF64[$2963>>3];
                 $2965 = (+__Z5IKabsd($2964));
                 $2966 = $2965 < 9.9999999999999995E-7;
                 if (!($2966)) {
                  label = 370;
                  break;
                 }
                 $bgotonextstatement32 = 0;
                 ;HEAP8[$j5valid36+0>>0]=0|0;
                 $2967 = (($4) + 553|0);
                 HEAP8[$2967>>0] = 1;
                 $2968 = (($4) + 264|0);
                 $2969 = +HEAPF64[$2968>>3];
                 $2970 = 1.0 * $2969;
                 $x202 = $2970;
                 $2971 = (($4) + 240|0);
                 $2972 = +HEAPF64[$2971>>3];
                 $2973 = -1.0 * $2972;
                 $2974 = (($4) + 136|0);
                 $2975 = +HEAPF64[$2974>>3];
                 $2976 = $2973 * $2975;
                 $2977 = (($4) + 128|0);
                 $2978 = +HEAPF64[$2977>>3];
                 $2979 = -1.0 * $2978;
                 $2980 = $x202;
                 $2981 = $2979 * $2980;
                 $2982 = $2976 + $2981;
                 $2983 = (+__Z5IKabsd($2982));
                 $2984 = $2983 < 1.9999999999999999E-6;
                 do {
                  if ($2984) {
                   $2985 = (($4) + 128|0);
                   $2986 = +HEAPF64[$2985>>3];
                   $2987 = (($4) + 240|0);
                   $2988 = +HEAPF64[$2987>>3];
                   $2989 = $2986 * $2988;
                   $2990 = (($4) + 136|0);
                   $2991 = +HEAPF64[$2990>>3];
                   $2992 = -1.0 * $2991;
                   $2993 = $x202;
                   $2994 = $2992 * $2993;
                   $2995 = $2989 + $2994;
                   $2996 = (+__Z5IKabsd($2995));
                   $2997 = $2996 < 1.9999999999999999E-6;
                   if (!($2997)) {
                    break;
                   }
                   $2998 = (($4) + 240|0);
                   $2999 = +HEAPF64[$2998>>3];
                   $3000 = -1.0 * $2999;
                   $3001 = (($4) + 136|0);
                   $3002 = +HEAPF64[$3001>>3];
                   $3003 = $3000 * $3002;
                   $3004 = (($4) + 128|0);
                   $3005 = +HEAPF64[$3004>>3];
                   $3006 = -1.0 * $3005;
                   $3007 = $x202;
                   $3008 = $3006 * $3007;
                   $3009 = $3003 + $3008;
                   $3010 = (+__Z5IKsqrd($3009));
                   $3011 = (($4) + 128|0);
                   $3012 = +HEAPF64[$3011>>3];
                   $3013 = (($4) + 240|0);
                   $3014 = +HEAPF64[$3013>>3];
                   $3015 = $3012 * $3014;
                   $3016 = (($4) + 136|0);
                   $3017 = +HEAPF64[$3016>>3];
                   $3018 = -1.0 * $3017;
                   $3019 = $x202;
                   $3020 = $3018 * $3019;
                   $3021 = $3015 + $3020;
                   $3022 = (+__Z5IKsqrd($3021));
                   $3023 = $3010 + $3022;
                   $3024 = $3023 - 1.0;
                   $3025 = (+__Z5IKabsd($3024));
                   $3026 = $3025 <= 1.9999999999999999E-6;
                   if (!($3026)) {
                    break;
                   }
                   break L1016;
                  }
                 } while(0);
                 $3027 = (($4) + 240|0);
                 $3028 = +HEAPF64[$3027>>3];
                 $3029 = -1.0 * $3028;
                 $3030 = (($4) + 136|0);
                 $3031 = +HEAPF64[$3030>>3];
                 $3032 = $3029 * $3031;
                 $3033 = (($4) + 128|0);
                 $3034 = +HEAPF64[$3033>>3];
                 $3035 = -1.0 * $3034;
                 $3036 = $x202;
                 $3037 = $3035 * $3036;
                 $3038 = $3032 + $3037;
                 $3039 = (($4) + 128|0);
                 $3040 = +HEAPF64[$3039>>3];
                 $3041 = (($4) + 240|0);
                 $3042 = +HEAPF64[$3041>>3];
                 $3043 = $3040 * $3042;
                 $3044 = (($4) + 136|0);
                 $3045 = +HEAPF64[$3044>>3];
                 $3046 = -1.0 * $3045;
                 $3047 = $x202;
                 $3048 = $3046 * $3047;
                 $3049 = $3043 + $3048;
                 $3050 = (+__Z7IKatan2dd($3038,$3049));
                 HEAPF64[$j5array33>>3] = $3050;
                 $3051 = +HEAPF64[$j5array33>>3];
                 $3052 = (+__Z5IKsind($3051));
                 HEAPF64[$sj5array35>>3] = $3052;
                 $3053 = +HEAPF64[$j5array33>>3];
                 $3054 = (+__Z5IKcosd($3053));
                 HEAPF64[$cj5array34>>3] = $3054;
                 $3055 = +HEAPF64[$j5array33>>3];
                 $3056 = $3055 > 3.14159265358979;
                 if ($3056) {
                  $3057 = +HEAPF64[$j5array33>>3];
                  $3058 = $3057 - 6.2831853071795898;
                  HEAPF64[$j5array33>>3] = $3058;
                 } else {
                  $3059 = +HEAPF64[$j5array33>>3];
                  $3060 = $3059 < -3.14159265358979;
                  if ($3060) {
                   $3061 = +HEAPF64[$j5array33>>3];
                   $3062 = $3061 + 6.2831853071795898;
                   HEAPF64[$j5array33>>3] = $3062;
                  }
                 }
                 HEAP8[$j5valid36>>0] = 1;
                 $ij537 = 0;
                 while(1) {
                  $3063 = $ij537;
                  $3064 = ($3063|0)<(1);
                  if (!($3064)) {
                   break;
                  }
                  $3065 = $ij537;
                  $3066 = (($j5valid36) + ($3065)|0);
                  $3067 = HEAP8[$3066>>0]|0;
                  $3068 = $3067&1;
                  L1042: do {
                   if ($3068) {
                    $3069 = $ij537;
                    $3070 = $3069&255;
                    $3071 = (($4) + 551|0);
                    HEAP8[$3071>>0] = $3070;
                    $3072 = (($4) + 551|0);
                    $3073 = (($3072) + 1|0);
                    HEAP8[$3073>>0] = -1;
                    $3074 = $ij537;
                    $3075 = (($3074) + 1)|0;
                    $iij538 = $3075;
                    L1045: while(1) {
                     $3076 = $iij538;
                     $3077 = ($3076|0)<(1);
                     if (!($3077)) {
                      break;
                     }
                     $3078 = $iij538;
                     $3079 = (($j5valid36) + ($3078)|0);
                     $3080 = HEAP8[$3079>>0]|0;
                     $3081 = $3080&1;
                     do {
                      if ($3081) {
                       $3082 = $ij537;
                       $3083 = (($cj5array34) + ($3082<<3)|0);
                       $3084 = +HEAPF64[$3083>>3];
                       $3085 = $iij538;
                       $3086 = (($cj5array34) + ($3085<<3)|0);
                       $3087 = +HEAPF64[$3086>>3];
                       $3088 = $3084 - $3087;
                       $3089 = (+__Z5IKabsd($3088));
                       $3090 = $3089 < 9.9999999999999995E-7;
                       if (!($3090)) {
                        break;
                       }
                       $3091 = $ij537;
                       $3092 = (($sj5array35) + ($3091<<3)|0);
                       $3093 = +HEAPF64[$3092>>3];
                       $3094 = $iij538;
                       $3095 = (($sj5array35) + ($3094<<3)|0);
                       $3096 = +HEAPF64[$3095>>3];
                       $3097 = $3093 - $3096;
                       $3098 = (+__Z5IKabsd($3097));
                       $3099 = $3098 < 9.9999999999999995E-7;
                       if ($3099) {
                        label = 317;
                        break L1045;
                       }
                      }
                     } while(0);
                     $3106 = $iij538;
                     $3107 = (($3106) + 1)|0;
                     $iij538 = $3107;
                    }
                    if ((label|0) == 317) {
                     label = 0;
                     $3100 = $iij538;
                     $3101 = (($j5valid36) + ($3100)|0);
                     HEAP8[$3101>>0] = 0;
                     $3102 = $iij538;
                     $3103 = $3102&255;
                     $3104 = (($4) + 551|0);
                     $3105 = (($3104) + 1|0);
                     HEAP8[$3105>>0] = $3103;
                    }
                    $3108 = $ij537;
                    $3109 = (($j5array33) + ($3108<<3)|0);
                    $3110 = +HEAPF64[$3109>>3];
                    $3111 = (($4) + 200|0);
                    HEAPF64[$3111>>3] = $3110;
                    $3112 = $ij537;
                    $3113 = (($cj5array34) + ($3112<<3)|0);
                    $3114 = +HEAPF64[$3113>>3];
                    $3115 = (($4) + 208|0);
                    HEAPF64[$3115>>3] = $3114;
                    $3116 = $ij537;
                    $3117 = (($sj5array35) + ($3116<<3)|0);
                    $3118 = +HEAPF64[$3117>>3];
                    $3119 = (($4) + 216|0);
                    HEAPF64[$3119>>3] = $3118;
                    $3120 = (($4) + 200|0);
                    $3121 = +HEAPF64[$3120>>3];
                    $3122 = (+__Z5IKsind($3121));
                    $x203 = $3122;
                    $3123 = (($4) + 200|0);
                    $3124 = +HEAPF64[$3123>>3];
                    $3125 = (+__Z5IKcosd($3124));
                    $x204 = $3125;
                    $3126 = (($4) + 136|0);
                    $3127 = +HEAPF64[$3126>>3];
                    $3128 = 1.0 * $3127;
                    $x205 = $3128;
                    $3129 = (($4) + 136|0);
                    $3130 = +HEAPF64[$3129>>3];
                    $3131 = $x203;
                    $3132 = $3130 * $3131;
                    $x206 = $3132;
                    $3133 = $x204;
                    $3134 = 1.0 * $3133;
                    $x207 = $3134;
                    $3135 = $x203;
                    $3136 = 1.0 * $3135;
                    $x208 = $3136;
                    $3137 = (($4) + 128|0);
                    $3138 = +HEAPF64[$3137>>3];
                    $3139 = $x207;
                    $3140 = $3138 * $3139;
                    $x209 = $3140;
                    $3141 = (($4) + 336|0);
                    $3142 = +HEAPF64[$3141>>3];
                    $3143 = (($4) + 136|0);
                    $3144 = +HEAPF64[$3143>>3];
                    $3145 = $3142 * $3144;
                    $3146 = $x203;
                    $3147 = $3145 + $3146;
                    $3148 = (($4) + 128|0);
                    $3149 = +HEAPF64[$3148>>3];
                    $3150 = (($4) + 264|0);
                    $3151 = +HEAPF64[$3150>>3];
                    $3152 = $3149 * $3151;
                    $3153 = $3147 + $3152;
                    HEAPF64[$evalcond39>>3] = $3153;
                    $3154 = (($4) + 312|0);
                    $3155 = +HEAPF64[$3154>>3];
                    $3156 = (($4) + 136|0);
                    $3157 = +HEAPF64[$3156>>3];
                    $3158 = $3155 * $3157;
                    $3159 = $x207;
                    $3160 = -1.0 * $3159;
                    $3161 = $3158 + $3160;
                    $3162 = (($4) + 128|0);
                    $3163 = +HEAPF64[$3162>>3];
                    $3164 = (($4) + 240|0);
                    $3165 = +HEAPF64[$3164>>3];
                    $3166 = $3163 * $3165;
                    $3167 = $3161 + $3166;
                    $3168 = (($evalcond39) + 8|0);
                    HEAPF64[$3168>>3] = $3167;
                    $3169 = (($4) + 136|0);
                    $3170 = +HEAPF64[$3169>>3];
                    $3171 = $x204;
                    $3172 = $3170 * $3171;
                    $3173 = (($4) + 128|0);
                    $3174 = +HEAPF64[$3173>>3];
                    $3175 = $x203;
                    $3176 = $3174 * $3175;
                    $3177 = $3172 + $3176;
                    $3178 = (($4) + 264|0);
                    $3179 = +HEAPF64[$3178>>3];
                    $3180 = $3177 + $3179;
                    $3181 = (($evalcond39) + 16|0);
                    HEAPF64[$3181>>3] = $3180;
                    $3182 = $x209;
                    $3183 = -1.0 * $3182;
                    $3184 = $x206;
                    $3185 = $3183 + $3184;
                    $3186 = (($4) + 240|0);
                    $3187 = +HEAPF64[$3186>>3];
                    $3188 = $3185 + $3187;
                    $3189 = (($evalcond39) + 24|0);
                    HEAPF64[$3189>>3] = $3188;
                    $3190 = $x209;
                    $3191 = -1.0 * $3190;
                    $3192 = $x206;
                    $3193 = $3191 + $3192;
                    $3194 = (($4) + 336|0);
                    $3195 = +HEAPF64[$3194>>3];
                    $3196 = $3193 + $3195;
                    $3197 = (($evalcond39) + 32|0);
                    HEAPF64[$3197>>3] = $3196;
                    $3198 = (($4) + 240|0);
                    $3199 = +HEAPF64[$3198>>3];
                    $3200 = -1.0 * $3199;
                    $3201 = $x205;
                    $3202 = $3200 * $3201;
                    $3203 = $x208;
                    $3204 = -1.0 * $3203;
                    $3205 = $3202 + $3204;
                    $3206 = (($4) + 128|0);
                    $3207 = +HEAPF64[$3206>>3];
                    $3208 = (($4) + 312|0);
                    $3209 = +HEAPF64[$3208>>3];
                    $3210 = $3207 * $3209;
                    $3211 = $3205 + $3210;
                    $3212 = (($evalcond39) + 40|0);
                    HEAPF64[$3212>>3] = $3211;
                    $3213 = $x207;
                    $3214 = -1.0 * $3213;
                    $3215 = (($4) + 128|0);
                    $3216 = +HEAPF64[$3215>>3];
                    $3217 = (($4) + 336|0);
                    $3218 = +HEAPF64[$3217>>3];
                    $3219 = $3216 * $3218;
                    $3220 = $3214 + $3219;
                    $3221 = (($4) + 264|0);
                    $3222 = +HEAPF64[$3221>>3];
                    $3223 = -1.0 * $3222;
                    $3224 = $x205;
                    $3225 = $3223 * $3224;
                    $3226 = $3220 + $3225;
                    $3227 = (($evalcond39) + 48|0);
                    HEAPF64[$3227>>3] = $3226;
                    $3228 = $x204;
                    $3229 = -1.0 * $3228;
                    $3230 = $x205;
                    $3231 = $3229 * $3230;
                    $3232 = (($4) + 312|0);
                    $3233 = +HEAPF64[$3232>>3];
                    $3234 = $3231 + $3233;
                    $3235 = (($4) + 128|0);
                    $3236 = +HEAPF64[$3235>>3];
                    $3237 = -1.0 * $3236;
                    $3238 = $x208;
                    $3239 = $3237 * $3238;
                    $3240 = $3234 + $3239;
                    $3241 = (($evalcond39) + 56|0);
                    HEAPF64[$3241>>3] = $3240;
                    $3242 = +HEAPF64[$evalcond39>>3];
                    $3243 = (+__Z5IKabsd($3242));
                    $3244 = $3243 > 5.0000000000000004E-6;
                    do {
                     if (!($3244)) {
                      $3245 = (($evalcond39) + 8|0);
                      $3246 = +HEAPF64[$3245>>3];
                      $3247 = (+__Z5IKabsd($3246));
                      $3248 = $3247 > 5.0000000000000004E-6;
                      if ($3248) {
                       break;
                      }
                      $3249 = (($evalcond39) + 16|0);
                      $3250 = +HEAPF64[$3249>>3];
                      $3251 = (+__Z5IKabsd($3250));
                      $3252 = $3251 > 5.0000000000000004E-6;
                      if ($3252) {
                       break;
                      }
                      $3253 = (($evalcond39) + 24|0);
                      $3254 = +HEAPF64[$3253>>3];
                      $3255 = (+__Z5IKabsd($3254));
                      $3256 = $3255 > 5.0000000000000004E-6;
                      if ($3256) {
                       break;
                      }
                      $3257 = (($evalcond39) + 32|0);
                      $3258 = +HEAPF64[$3257>>3];
                      $3259 = (+__Z5IKabsd($3258));
                      $3260 = $3259 > 5.0000000000000004E-6;
                      if ($3260) {
                       break;
                      }
                      $3261 = (($evalcond39) + 40|0);
                      $3262 = +HEAPF64[$3261>>3];
                      $3263 = (+__Z5IKabsd($3262));
                      $3264 = $3263 > 5.0000000000000004E-6;
                      if ($3264) {
                       break;
                      }
                      $3265 = (($evalcond39) + 48|0);
                      $3266 = +HEAPF64[$3265>>3];
                      $3267 = (+__Z5IKabsd($3266));
                      $3268 = $3267 > 5.0000000000000004E-6;
                      if ($3268) {
                       break;
                      }
                      $3269 = (($evalcond39) + 56|0);
                      $3270 = +HEAPF64[$3269>>3];
                      $3271 = (+__Z5IKabsd($3270));
                      $3272 = $3271 > 5.0000000000000004E-6;
                      if ($3272) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos40,6);
                      __THREW__ = 0;
                      $3273 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3274 = __THREW__; __THREW__ = 0;
                      $3275 = $3274&1;
                      if ($3275) {
                       label = 364;
                       break L1;
                      }
                      $3276 = (($3273) + 17|0);
                      HEAP8[$3276>>0] = 1;
                      $3277 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $3278 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3279 = __THREW__; __THREW__ = 0;
                      $3280 = $3279&1;
                      if ($3280) {
                       label = 364;
                       break L1;
                      }
                      $3281 = (($3278) + 8|0);
                      HEAPF64[$3281>>3] = $3277;
                      $3282 = (($4) + 536|0);
                      $3283 = HEAP8[$3282>>0]|0;
                      __THREW__ = 0;
                      $3284 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3285 = __THREW__; __THREW__ = 0;
                      $3286 = $3285&1;
                      if ($3286) {
                       label = 364;
                       break L1;
                      }
                      $3287 = (($3284) + 19|0);
                      HEAP8[$3287>>0] = $3283;
                      $3288 = (($4) + 536|0);
                      $3289 = (($3288) + 1|0);
                      $3290 = HEAP8[$3289>>0]|0;
                      __THREW__ = 0;
                      $3291 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3292 = __THREW__; __THREW__ = 0;
                      $3293 = $3292&1;
                      if ($3293) {
                       label = 364;
                       break L1;
                      }
                      $3294 = (($3291) + 19|0);
                      $3295 = (($3294) + 1|0);
                      HEAP8[$3295>>0] = $3290;
                      $3296 = (($4) + 538|0);
                      $3297 = HEAP8[$3296>>0]|0;
                      __THREW__ = 0;
                      $3298 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3299 = __THREW__; __THREW__ = 0;
                      $3300 = $3299&1;
                      if ($3300) {
                       label = 364;
                       break L1;
                      }
                      $3301 = (($3298) + 18|0);
                      HEAP8[$3301>>0] = $3297;
                      __THREW__ = 0;
                      $3302 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3303 = __THREW__; __THREW__ = 0;
                      $3304 = $3303&1;
                      if ($3304) {
                       label = 364;
                       break L1;
                      }
                      $3305 = (($3302) + 17|0);
                      HEAP8[$3305>>0] = 1;
                      $3306 = (($4) + 40|0);
                      $3307 = +HEAPF64[$3306>>3];
                      __THREW__ = 0;
                      $3308 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3309 = __THREW__; __THREW__ = 0;
                      $3310 = $3309&1;
                      if ($3310) {
                       label = 364;
                       break L1;
                      }
                      $3311 = (($3308) + 8|0);
                      HEAPF64[$3311>>3] = $3307;
                      $3312 = (($4) + 539|0);
                      $3313 = HEAP8[$3312>>0]|0;
                      __THREW__ = 0;
                      $3314 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3315 = __THREW__; __THREW__ = 0;
                      $3316 = $3315&1;
                      if ($3316) {
                       label = 364;
                       break L1;
                      }
                      $3317 = (($3314) + 19|0);
                      HEAP8[$3317>>0] = $3313;
                      $3318 = (($4) + 539|0);
                      $3319 = (($3318) + 1|0);
                      $3320 = HEAP8[$3319>>0]|0;
                      __THREW__ = 0;
                      $3321 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3322 = __THREW__; __THREW__ = 0;
                      $3323 = $3322&1;
                      if ($3323) {
                       label = 364;
                       break L1;
                      }
                      $3324 = (($3321) + 19|0);
                      $3325 = (($3324) + 1|0);
                      HEAP8[$3325>>0] = $3320;
                      $3326 = (($4) + 541|0);
                      $3327 = HEAP8[$3326>>0]|0;
                      __THREW__ = 0;
                      $3328 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3329 = __THREW__; __THREW__ = 0;
                      $3330 = $3329&1;
                      if ($3330) {
                       label = 364;
                       break L1;
                      }
                      $3331 = (($3328) + 18|0);
                      HEAP8[$3331>>0] = $3327;
                      __THREW__ = 0;
                      $3332 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3333 = __THREW__; __THREW__ = 0;
                      $3334 = $3333&1;
                      if ($3334) {
                       label = 364;
                       break L1;
                      }
                      $3335 = (($3332) + 17|0);
                      HEAP8[$3335>>0] = 1;
                      $3336 = (($4) + 80|0);
                      $3337 = +HEAPF64[$3336>>3];
                      __THREW__ = 0;
                      $3338 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3339 = __THREW__; __THREW__ = 0;
                      $3340 = $3339&1;
                      if ($3340) {
                       label = 364;
                       break L1;
                      }
                      $3341 = (($3338) + 8|0);
                      HEAPF64[$3341>>3] = $3337;
                      $3342 = (($4) + 542|0);
                      $3343 = HEAP8[$3342>>0]|0;
                      __THREW__ = 0;
                      $3344 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3345 = __THREW__; __THREW__ = 0;
                      $3346 = $3345&1;
                      if ($3346) {
                       label = 364;
                       break L1;
                      }
                      $3347 = (($3344) + 19|0);
                      HEAP8[$3347>>0] = $3343;
                      $3348 = (($4) + 542|0);
                      $3349 = (($3348) + 1|0);
                      $3350 = HEAP8[$3349>>0]|0;
                      __THREW__ = 0;
                      $3351 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3352 = __THREW__; __THREW__ = 0;
                      $3353 = $3352&1;
                      if ($3353) {
                       label = 364;
                       break L1;
                      }
                      $3354 = (($3351) + 19|0);
                      $3355 = (($3354) + 1|0);
                      HEAP8[$3355>>0] = $3350;
                      $3356 = (($4) + 544|0);
                      $3357 = HEAP8[$3356>>0]|0;
                      __THREW__ = 0;
                      $3358 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3359 = __THREW__; __THREW__ = 0;
                      $3360 = $3359&1;
                      if ($3360) {
                       label = 364;
                       break L1;
                      }
                      $3361 = (($3358) + 18|0);
                      HEAP8[$3361>>0] = $3357;
                      __THREW__ = 0;
                      $3362 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3363 = __THREW__; __THREW__ = 0;
                      $3364 = $3363&1;
                      if ($3364) {
                       label = 364;
                       break L1;
                      }
                      $3365 = (($3362) + 17|0);
                      HEAP8[$3365>>0] = 1;
                      $3366 = (($4) + 120|0);
                      $3367 = +HEAPF64[$3366>>3];
                      __THREW__ = 0;
                      $3368 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3369 = __THREW__; __THREW__ = 0;
                      $3370 = $3369&1;
                      if ($3370) {
                       label = 364;
                       break L1;
                      }
                      $3371 = (($3368) + 8|0);
                      HEAPF64[$3371>>3] = $3367;
                      $3372 = (($4) + 545|0);
                      $3373 = HEAP8[$3372>>0]|0;
                      __THREW__ = 0;
                      $3374 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3375 = __THREW__; __THREW__ = 0;
                      $3376 = $3375&1;
                      if ($3376) {
                       label = 364;
                       break L1;
                      }
                      $3377 = (($3374) + 19|0);
                      HEAP8[$3377>>0] = $3373;
                      $3378 = (($4) + 545|0);
                      $3379 = (($3378) + 1|0);
                      $3380 = HEAP8[$3379>>0]|0;
                      __THREW__ = 0;
                      $3381 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3382 = __THREW__; __THREW__ = 0;
                      $3383 = $3382&1;
                      if ($3383) {
                       label = 364;
                       break L1;
                      }
                      $3384 = (($3381) + 19|0);
                      $3385 = (($3384) + 1|0);
                      HEAP8[$3385>>0] = $3380;
                      $3386 = (($4) + 547|0);
                      $3387 = HEAP8[$3386>>0]|0;
                      __THREW__ = 0;
                      $3388 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3389 = __THREW__; __THREW__ = 0;
                      $3390 = $3389&1;
                      if ($3390) {
                       label = 364;
                       break L1;
                      }
                      $3391 = (($3388) + 18|0);
                      HEAP8[$3391>>0] = $3387;
                      __THREW__ = 0;
                      $3392 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3393 = __THREW__; __THREW__ = 0;
                      $3394 = $3393&1;
                      if ($3394) {
                       label = 364;
                       break L1;
                      }
                      $3395 = (($3392) + 17|0);
                      HEAP8[$3395>>0] = 1;
                      $3396 = (($4) + 160|0);
                      $3397 = +HEAPF64[$3396>>3];
                      __THREW__ = 0;
                      $3398 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3399 = __THREW__; __THREW__ = 0;
                      $3400 = $3399&1;
                      if ($3400) {
                       label = 364;
                       break L1;
                      }
                      $3401 = (($3398) + 8|0);
                      HEAPF64[$3401>>3] = $3397;
                      $3402 = (($4) + 548|0);
                      $3403 = HEAP8[$3402>>0]|0;
                      __THREW__ = 0;
                      $3404 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3405 = __THREW__; __THREW__ = 0;
                      $3406 = $3405&1;
                      if ($3406) {
                       label = 364;
                       break L1;
                      }
                      $3407 = (($3404) + 19|0);
                      HEAP8[$3407>>0] = $3403;
                      $3408 = (($4) + 548|0);
                      $3409 = (($3408) + 1|0);
                      $3410 = HEAP8[$3409>>0]|0;
                      __THREW__ = 0;
                      $3411 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3412 = __THREW__; __THREW__ = 0;
                      $3413 = $3412&1;
                      if ($3413) {
                       label = 364;
                       break L1;
                      }
                      $3414 = (($3411) + 19|0);
                      $3415 = (($3414) + 1|0);
                      HEAP8[$3415>>0] = $3410;
                      $3416 = (($4) + 550|0);
                      $3417 = HEAP8[$3416>>0]|0;
                      __THREW__ = 0;
                      $3418 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3419 = __THREW__; __THREW__ = 0;
                      $3420 = $3419&1;
                      if ($3420) {
                       label = 364;
                       break L1;
                      }
                      $3421 = (($3418) + 18|0);
                      HEAP8[$3421>>0] = $3417;
                      __THREW__ = 0;
                      $3422 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3423 = __THREW__; __THREW__ = 0;
                      $3424 = $3423&1;
                      if ($3424) {
                       label = 364;
                       break L1;
                      }
                      $3425 = (($3422) + 17|0);
                      HEAP8[$3425>>0] = 1;
                      $3426 = (($4) + 200|0);
                      $3427 = +HEAPF64[$3426>>3];
                      __THREW__ = 0;
                      $3428 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3429 = __THREW__; __THREW__ = 0;
                      $3430 = $3429&1;
                      if ($3430) {
                       label = 364;
                       break L1;
                      }
                      $3431 = (($3428) + 8|0);
                      HEAPF64[$3431>>3] = $3427;
                      $3432 = (($4) + 551|0);
                      $3433 = HEAP8[$3432>>0]|0;
                      __THREW__ = 0;
                      $3434 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3435 = __THREW__; __THREW__ = 0;
                      $3436 = $3435&1;
                      if ($3436) {
                       label = 364;
                       break L1;
                      }
                      $3437 = (($3434) + 19|0);
                      HEAP8[$3437>>0] = $3433;
                      $3438 = (($4) + 551|0);
                      $3439 = (($3438) + 1|0);
                      $3440 = HEAP8[$3439>>0]|0;
                      __THREW__ = 0;
                      $3441 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3442 = __THREW__; __THREW__ = 0;
                      $3443 = $3442&1;
                      if ($3443) {
                       label = 364;
                       break L1;
                      }
                      $3444 = (($3441) + 19|0);
                      $3445 = (($3444) + 1|0);
                      HEAP8[$3445>>0] = $3440;
                      $3446 = (($4) + 553|0);
                      $3447 = HEAP8[$3446>>0]|0;
                      __THREW__ = 0;
                      $3448 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3449 = __THREW__; __THREW__ = 0;
                      $3450 = $3449&1;
                      if ($3450) {
                       label = 364;
                       break L1;
                      }
                      $3451 = (($3448) + 18|0);
                      HEAP8[$3451>>0] = $3447;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree41|0),0);
                      $3452 = __THREW__; __THREW__ = 0;
                      $3453 = $3452&1;
                      if ($3453) {
                       label = 364;
                       break L1;
                      }
                      $3454 = $1;
                      $3455 = HEAP32[$3454>>2]|0;
                      $3456 = (($3455) + 8|0);
                      $3457 = HEAP32[$3456>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($3457|0,($3454|0),($vinfos40|0),($vfree41|0))|0);
                      $3458 = __THREW__; __THREW__ = 0;
                      $3459 = $3458&1;
                      if ($3459) {
                       label = 365;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree41|0));
                      $3460 = __THREW__; __THREW__ = 0;
                      $3461 = $3460&1;
                      if ($3461) {
                       label = 364;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos40);
                      break L1042;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $3462 = $ij537;
                  $3463 = (($3462) + 1)|0;
                  $ij537 = $3463;
                 }
                 label = 370;
                } else {
                 label = 370;
                }
               } while(0);
               if ((label|0) == 370) {
                label = 0;
               }
               $3472 = $bgotonextstatement32;
               $3473 = $3472&1;
               if ($3473) {
                $bgotonextstatement42 = 1;
                $3474 = (($4) + 360|0);
                $3475 = +HEAPF64[$3474>>3];
                $3476 = (($4) + 136|0);
                $3477 = +HEAPF64[$3476>>3];
                $3478 = $3475 * $3477;
                $3479 = (($4) + 128|0);
                $3480 = +HEAPF64[$3479>>3];
                $3481 = (($4) + 288|0);
                $3482 = +HEAPF64[$3481>>3];
                $3483 = $3480 * $3482;
                $3484 = $3478 + $3483;
                $x210 = $3484;
                $3485 = (($4) + 288|0);
                $3486 = +HEAPF64[$3485>>3];
                $3487 = -1.0 * $3486;
                $3488 = (($4) + 136|0);
                $3489 = +HEAPF64[$3488>>3];
                $3490 = $3487 * $3489;
                $3491 = (($4) + 128|0);
                $3492 = +HEAPF64[$3491>>3];
                $3493 = (($4) + 360|0);
                $3494 = +HEAPF64[$3493>>3];
                $3495 = $3492 * $3494;
                $3496 = $3490 + $3495;
                $x211 = $3496;
                $3497 = (($4) + 160|0);
                $3498 = +HEAPF64[$3497>>3];
                $3499 = -3.14159265358979 + $3498;
                $3500 = (+__Z5IKabsd($3499));
                $3501 = 3.14159265358979 + $3500;
                $3502 = (+__Z6IKfmoddd($3501,6.2831853071795898));
                $3503 = -3.14159265358979 + $3502;
                HEAPF64[$evalcond31>>3] = $3503;
                $3504 = (($4) + 432|0);
                $3505 = +HEAPF64[$3504>>3];
                $3506 = 1.0 + $3505;
                $3507 = (($evalcond31) + 8|0);
                HEAPF64[$3507>>3] = $3506;
                $3508 = (($4) + 360|0);
                $3509 = +HEAPF64[$3508>>3];
                $3510 = (($evalcond31) + 16|0);
                HEAPF64[$3510>>3] = $3509;
                $3511 = (($4) + 288|0);
                $3512 = +HEAPF64[$3511>>3];
                $3513 = (($evalcond31) + 24|0);
                HEAPF64[$3513>>3] = $3512;
                $3514 = (($4) + 384|0);
                $3515 = +HEAPF64[$3514>>3];
                $3516 = (($evalcond31) + 32|0);
                HEAPF64[$3516>>3] = $3515;
                $3517 = (($4) + 408|0);
                $3518 = +HEAPF64[$3517>>3];
                $3519 = (($evalcond31) + 40|0);
                HEAPF64[$3519>>3] = $3518;
                $3520 = $x210;
                $3521 = (($evalcond31) + 48|0);
                HEAPF64[$3521>>3] = $3520;
                $3522 = $x210;
                $3523 = (($evalcond31) + 56|0);
                HEAPF64[$3523>>3] = $3522;
                $3524 = $x211;
                $3525 = (($evalcond31) + 64|0);
                HEAPF64[$3525>>3] = $3524;
                $3526 = $x211;
                $3527 = (($evalcond31) + 72|0);
                HEAPF64[$3527>>3] = $3526;
                $3528 = +HEAPF64[$evalcond31>>3];
                $3529 = (+__Z5IKabsd($3528));
                $3530 = $3529 < 9.9999999999999995E-7;
                L1107: do {
                 if ($3530) {
                  $3531 = (($evalcond31) + 8|0);
                  $3532 = +HEAPF64[$3531>>3];
                  $3533 = (+__Z5IKabsd($3532));
                  $3534 = $3533 < 9.9999999999999995E-7;
                  if (!($3534)) {
                   label = 454;
                   break;
                  }
                  $3535 = (($evalcond31) + 16|0);
                  $3536 = +HEAPF64[$3535>>3];
                  $3537 = (+__Z5IKabsd($3536));
                  $3538 = $3537 < 9.9999999999999995E-7;
                  if (!($3538)) {
                   label = 454;
                   break;
                  }
                  $3539 = (($evalcond31) + 24|0);
                  $3540 = +HEAPF64[$3539>>3];
                  $3541 = (+__Z5IKabsd($3540));
                  $3542 = $3541 < 9.9999999999999995E-7;
                  if (!($3542)) {
                   label = 454;
                   break;
                  }
                  $3543 = (($evalcond31) + 32|0);
                  $3544 = +HEAPF64[$3543>>3];
                  $3545 = (+__Z5IKabsd($3544));
                  $3546 = $3545 < 9.9999999999999995E-7;
                  if (!($3546)) {
                   label = 454;
                   break;
                  }
                  $3547 = (($evalcond31) + 40|0);
                  $3548 = +HEAPF64[$3547>>3];
                  $3549 = (+__Z5IKabsd($3548));
                  $3550 = $3549 < 9.9999999999999995E-7;
                  if (!($3550)) {
                   label = 454;
                   break;
                  }
                  $3551 = (($evalcond31) + 48|0);
                  $3552 = +HEAPF64[$3551>>3];
                  $3553 = (+__Z5IKabsd($3552));
                  $3554 = $3553 < 9.9999999999999995E-7;
                  if (!($3554)) {
                   label = 454;
                   break;
                  }
                  $3555 = (($evalcond31) + 56|0);
                  $3556 = +HEAPF64[$3555>>3];
                  $3557 = (+__Z5IKabsd($3556));
                  $3558 = $3557 < 9.9999999999999995E-7;
                  if (!($3558)) {
                   label = 454;
                   break;
                  }
                  $3559 = (($evalcond31) + 64|0);
                  $3560 = +HEAPF64[$3559>>3];
                  $3561 = (+__Z5IKabsd($3560));
                  $3562 = $3561 < 9.9999999999999995E-7;
                  if (!($3562)) {
                   label = 454;
                   break;
                  }
                  $3563 = (($evalcond31) + 72|0);
                  $3564 = +HEAPF64[$3563>>3];
                  $3565 = (+__Z5IKabsd($3564));
                  $3566 = $3565 < 9.9999999999999995E-7;
                  if (!($3566)) {
                   label = 454;
                   break;
                  }
                  $bgotonextstatement42 = 0;
                  ;HEAP8[$j5valid46+0>>0]=0|0;
                  $3567 = (($4) + 553|0);
                  HEAP8[$3567>>0] = 1;
                  $3568 = (($4) + 128|0);
                  $3569 = +HEAPF64[$3568>>3];
                  $3570 = 1.0 * $3569;
                  $x212 = $3570;
                  $3571 = (($4) + 264|0);
                  $3572 = +HEAPF64[$3571>>3];
                  $3573 = -1.0 * $3572;
                  $3574 = $x212;
                  $3575 = $3573 * $3574;
                  $3576 = (($4) + 336|0);
                  $3577 = +HEAPF64[$3576>>3];
                  $3578 = -1.0 * $3577;
                  $3579 = (($4) + 136|0);
                  $3580 = +HEAPF64[$3579>>3];
                  $3581 = $3578 * $3580;
                  $3582 = $3575 + $3581;
                  $3583 = (+__Z5IKabsd($3582));
                  $3584 = $3583 < 1.9999999999999999E-6;
                  do {
                   if ($3584) {
                    $3585 = (($4) + 336|0);
                    $3586 = +HEAPF64[$3585>>3];
                    $3587 = -1.0 * $3586;
                    $3588 = $x212;
                    $3589 = $3587 * $3588;
                    $3590 = (($4) + 264|0);
                    $3591 = +HEAPF64[$3590>>3];
                    $3592 = (($4) + 136|0);
                    $3593 = +HEAPF64[$3592>>3];
                    $3594 = $3591 * $3593;
                    $3595 = $3589 + $3594;
                    $3596 = (+__Z5IKabsd($3595));
                    $3597 = $3596 < 1.9999999999999999E-6;
                    if (!($3597)) {
                     break;
                    }
                    $3598 = (($4) + 264|0);
                    $3599 = +HEAPF64[$3598>>3];
                    $3600 = -1.0 * $3599;
                    $3601 = $x212;
                    $3602 = $3600 * $3601;
                    $3603 = (($4) + 336|0);
                    $3604 = +HEAPF64[$3603>>3];
                    $3605 = -1.0 * $3604;
                    $3606 = (($4) + 136|0);
                    $3607 = +HEAPF64[$3606>>3];
                    $3608 = $3605 * $3607;
                    $3609 = $3602 + $3608;
                    $3610 = (+__Z5IKsqrd($3609));
                    $3611 = (($4) + 336|0);
                    $3612 = +HEAPF64[$3611>>3];
                    $3613 = -1.0 * $3612;
                    $3614 = $x212;
                    $3615 = $3613 * $3614;
                    $3616 = (($4) + 264|0);
                    $3617 = +HEAPF64[$3616>>3];
                    $3618 = (($4) + 136|0);
                    $3619 = +HEAPF64[$3618>>3];
                    $3620 = $3617 * $3619;
                    $3621 = $3615 + $3620;
                    $3622 = (+__Z5IKsqrd($3621));
                    $3623 = $3610 + $3622;
                    $3624 = $3623 - 1.0;
                    $3625 = (+__Z5IKabsd($3624));
                    $3626 = $3625 <= 1.9999999999999999E-6;
                    if (!($3626)) {
                     break;
                    }
                    break L1107;
                   }
                  } while(0);
                  $3627 = (($4) + 264|0);
                  $3628 = +HEAPF64[$3627>>3];
                  $3629 = -1.0 * $3628;
                  $3630 = $x212;
                  $3631 = $3629 * $3630;
                  $3632 = (($4) + 336|0);
                  $3633 = +HEAPF64[$3632>>3];
                  $3634 = -1.0 * $3633;
                  $3635 = (($4) + 136|0);
                  $3636 = +HEAPF64[$3635>>3];
                  $3637 = $3634 * $3636;
                  $3638 = $3631 + $3637;
                  $3639 = (($4) + 336|0);
                  $3640 = +HEAPF64[$3639>>3];
                  $3641 = -1.0 * $3640;
                  $3642 = $x212;
                  $3643 = $3641 * $3642;
                  $3644 = (($4) + 264|0);
                  $3645 = +HEAPF64[$3644>>3];
                  $3646 = (($4) + 136|0);
                  $3647 = +HEAPF64[$3646>>3];
                  $3648 = $3645 * $3647;
                  $3649 = $3643 + $3648;
                  $3650 = (+__Z7IKatan2dd($3638,$3649));
                  HEAPF64[$j5array43>>3] = $3650;
                  $3651 = +HEAPF64[$j5array43>>3];
                  $3652 = (+__Z5IKsind($3651));
                  HEAPF64[$sj5array45>>3] = $3652;
                  $3653 = +HEAPF64[$j5array43>>3];
                  $3654 = (+__Z5IKcosd($3653));
                  HEAPF64[$cj5array44>>3] = $3654;
                  $3655 = +HEAPF64[$j5array43>>3];
                  $3656 = $3655 > 3.14159265358979;
                  if ($3656) {
                   $3657 = +HEAPF64[$j5array43>>3];
                   $3658 = $3657 - 6.2831853071795898;
                   HEAPF64[$j5array43>>3] = $3658;
                  } else {
                   $3659 = +HEAPF64[$j5array43>>3];
                   $3660 = $3659 < -3.14159265358979;
                   if ($3660) {
                    $3661 = +HEAPF64[$j5array43>>3];
                    $3662 = $3661 + 6.2831853071795898;
                    HEAPF64[$j5array43>>3] = $3662;
                   }
                  }
                  HEAP8[$j5valid46>>0] = 1;
                  $ij547 = 0;
                  while(1) {
                   $3663 = $ij547;
                   $3664 = ($3663|0)<(1);
                   if (!($3664)) {
                    break;
                   }
                   $3665 = $ij547;
                   $3666 = (($j5valid46) + ($3665)|0);
                   $3667 = HEAP8[$3666>>0]|0;
                   $3668 = $3667&1;
                   L1133: do {
                    if ($3668) {
                     $3669 = $ij547;
                     $3670 = $3669&255;
                     $3671 = (($4) + 551|0);
                     HEAP8[$3671>>0] = $3670;
                     $3672 = (($4) + 551|0);
                     $3673 = (($3672) + 1|0);
                     HEAP8[$3673>>0] = -1;
                     $3674 = $ij547;
                     $3675 = (($3674) + 1)|0;
                     $iij548 = $3675;
                     L1136: while(1) {
                      $3676 = $iij548;
                      $3677 = ($3676|0)<(1);
                      if (!($3677)) {
                       break;
                      }
                      $3678 = $iij548;
                      $3679 = (($j5valid46) + ($3678)|0);
                      $3680 = HEAP8[$3679>>0]|0;
                      $3681 = $3680&1;
                      do {
                       if ($3681) {
                        $3682 = $ij547;
                        $3683 = (($cj5array44) + ($3682<<3)|0);
                        $3684 = +HEAPF64[$3683>>3];
                        $3685 = $iij548;
                        $3686 = (($cj5array44) + ($3685<<3)|0);
                        $3687 = +HEAPF64[$3686>>3];
                        $3688 = $3684 - $3687;
                        $3689 = (+__Z5IKabsd($3688));
                        $3690 = $3689 < 9.9999999999999995E-7;
                        if (!($3690)) {
                         break;
                        }
                        $3691 = $ij547;
                        $3692 = (($sj5array45) + ($3691<<3)|0);
                        $3693 = +HEAPF64[$3692>>3];
                        $3694 = $iij548;
                        $3695 = (($sj5array45) + ($3694<<3)|0);
                        $3696 = +HEAPF64[$3695>>3];
                        $3697 = $3693 - $3696;
                        $3698 = (+__Z5IKabsd($3697));
                        $3699 = $3698 < 9.9999999999999995E-7;
                        if ($3699) {
                         label = 401;
                         break L1136;
                        }
                       }
                      } while(0);
                      $3706 = $iij548;
                      $3707 = (($3706) + 1)|0;
                      $iij548 = $3707;
                     }
                     if ((label|0) == 401) {
                      label = 0;
                      $3700 = $iij548;
                      $3701 = (($j5valid46) + ($3700)|0);
                      HEAP8[$3701>>0] = 0;
                      $3702 = $iij548;
                      $3703 = $3702&255;
                      $3704 = (($4) + 551|0);
                      $3705 = (($3704) + 1|0);
                      HEAP8[$3705>>0] = $3703;
                     }
                     $3708 = $ij547;
                     $3709 = (($j5array43) + ($3708<<3)|0);
                     $3710 = +HEAPF64[$3709>>3];
                     $3711 = (($4) + 200|0);
                     HEAPF64[$3711>>3] = $3710;
                     $3712 = $ij547;
                     $3713 = (($cj5array44) + ($3712<<3)|0);
                     $3714 = +HEAPF64[$3713>>3];
                     $3715 = (($4) + 208|0);
                     HEAPF64[$3715>>3] = $3714;
                     $3716 = $ij547;
                     $3717 = (($sj5array45) + ($3716<<3)|0);
                     $3718 = +HEAPF64[$3717>>3];
                     $3719 = (($4) + 216|0);
                     HEAPF64[$3719>>3] = $3718;
                     $3720 = (($4) + 200|0);
                     $3721 = +HEAPF64[$3720>>3];
                     $3722 = (+__Z5IKsind($3721));
                     $x213 = $3722;
                     $3723 = (($4) + 200|0);
                     $3724 = +HEAPF64[$3723>>3];
                     $3725 = (+__Z5IKcosd($3724));
                     $x214 = $3725;
                     $3726 = (($4) + 136|0);
                     $3727 = +HEAPF64[$3726>>3];
                     $3728 = 1.0 * $3727;
                     $x215 = $3728;
                     $3729 = (($4) + 128|0);
                     $3730 = +HEAPF64[$3729>>3];
                     $3731 = $x213;
                     $3732 = $3730 * $3731;
                     $x216 = $3732;
                     $3733 = $x214;
                     $3734 = 1.0 * $3733;
                     $x217 = $3734;
                     $3735 = $x214;
                     $3736 = $x215;
                     $3737 = $3735 * $3736;
                     $x218 = $3737;
                     $3738 = (($4) + 336|0);
                     $3739 = +HEAPF64[$3738>>3];
                     $3740 = (($4) + 136|0);
                     $3741 = +HEAPF64[$3740>>3];
                     $3742 = $3739 * $3741;
                     $3743 = $x213;
                     $3744 = $3742 + $3743;
                     $3745 = (($4) + 128|0);
                     $3746 = +HEAPF64[$3745>>3];
                     $3747 = (($4) + 264|0);
                     $3748 = +HEAPF64[$3747>>3];
                     $3749 = $3746 * $3748;
                     $3750 = $3744 + $3749;
                     HEAPF64[$evalcond49>>3] = $3750;
                     $3751 = $x213;
                     $3752 = (($4) + 128|0);
                     $3753 = +HEAPF64[$3752>>3];
                     $3754 = (($4) + 312|0);
                     $3755 = +HEAPF64[$3754>>3];
                     $3756 = $3753 * $3755;
                     $3757 = $3751 + $3756;
                     $3758 = (($4) + 240|0);
                     $3759 = +HEAPF64[$3758>>3];
                     $3760 = -1.0 * $3759;
                     $3761 = $x215;
                     $3762 = $3760 * $3761;
                     $3763 = $3757 + $3762;
                     $3764 = (($evalcond49) + 8|0);
                     HEAPF64[$3764>>3] = $3763;
                     $3765 = $x214;
                     $3766 = (($4) + 264|0);
                     $3767 = +HEAPF64[$3766>>3];
                     $3768 = -1.0 * $3767;
                     $3769 = $x215;
                     $3770 = $3768 * $3769;
                     $3771 = $3765 + $3770;
                     $3772 = (($4) + 128|0);
                     $3773 = +HEAPF64[$3772>>3];
                     $3774 = (($4) + 336|0);
                     $3775 = +HEAPF64[$3774>>3];
                     $3776 = $3773 * $3775;
                     $3777 = $3771 + $3776;
                     $3778 = (($evalcond49) + 16|0);
                     HEAPF64[$3778>>3] = $3777;
                     $3779 = (($4) + 312|0);
                     $3780 = +HEAPF64[$3779>>3];
                     $3781 = (($4) + 136|0);
                     $3782 = +HEAPF64[$3781>>3];
                     $3783 = $3780 * $3782;
                     $3784 = (($4) + 128|0);
                     $3785 = +HEAPF64[$3784>>3];
                     $3786 = (($4) + 240|0);
                     $3787 = +HEAPF64[$3786>>3];
                     $3788 = $3785 * $3787;
                     $3789 = $3783 + $3788;
                     $3790 = $x217;
                     $3791 = -1.0 * $3790;
                     $3792 = $3789 + $3791;
                     $3793 = (($evalcond49) + 24|0);
                     HEAPF64[$3793>>3] = $3792;
                     $3794 = (($4) + 136|0);
                     $3795 = +HEAPF64[$3794>>3];
                     $3796 = $x213;
                     $3797 = $3795 * $3796;
                     $3798 = (($4) + 128|0);
                     $3799 = +HEAPF64[$3798>>3];
                     $3800 = $x214;
                     $3801 = $3799 * $3800;
                     $3802 = $3797 + $3801;
                     $3803 = (($4) + 336|0);
                     $3804 = +HEAPF64[$3803>>3];
                     $3805 = $3802 + $3804;
                     $3806 = (($evalcond49) + 32|0);
                     HEAPF64[$3806>>3] = $3805;
                     $3807 = $x216;
                     $3808 = (($4) + 264|0);
                     $3809 = +HEAPF64[$3808>>3];
                     $3810 = $3807 + $3809;
                     $3811 = $x218;
                     $3812 = -1.0 * $3811;
                     $3813 = $3810 + $3812;
                     $3814 = (($evalcond49) + 40|0);
                     HEAPF64[$3814>>3] = $3813;
                     $3815 = $x216;
                     $3816 = (($4) + 312|0);
                     $3817 = +HEAPF64[$3816>>3];
                     $3818 = $3815 + $3817;
                     $3819 = $x218;
                     $3820 = -1.0 * $3819;
                     $3821 = $3818 + $3820;
                     $3822 = (($evalcond49) + 48|0);
                     HEAPF64[$3822>>3] = $3821;
                     $3823 = (($4) + 128|0);
                     $3824 = +HEAPF64[$3823>>3];
                     $3825 = -1.0 * $3824;
                     $3826 = $x217;
                     $3827 = $3825 * $3826;
                     $3828 = $x213;
                     $3829 = -1.0 * $3828;
                     $3830 = $x215;
                     $3831 = $3829 * $3830;
                     $3832 = $3827 + $3831;
                     $3833 = (($4) + 240|0);
                     $3834 = +HEAPF64[$3833>>3];
                     $3835 = $3832 + $3834;
                     $3836 = (($evalcond49) + 56|0);
                     HEAPF64[$3836>>3] = $3835;
                     $3837 = +HEAPF64[$evalcond49>>3];
                     $3838 = (+__Z5IKabsd($3837));
                     $3839 = $3838 > 5.0000000000000004E-6;
                     do {
                      if (!($3839)) {
                       $3840 = (($evalcond49) + 8|0);
                       $3841 = +HEAPF64[$3840>>3];
                       $3842 = (+__Z5IKabsd($3841));
                       $3843 = $3842 > 5.0000000000000004E-6;
                       if ($3843) {
                        break;
                       }
                       $3844 = (($evalcond49) + 16|0);
                       $3845 = +HEAPF64[$3844>>3];
                       $3846 = (+__Z5IKabsd($3845));
                       $3847 = $3846 > 5.0000000000000004E-6;
                       if ($3847) {
                        break;
                       }
                       $3848 = (($evalcond49) + 24|0);
                       $3849 = +HEAPF64[$3848>>3];
                       $3850 = (+__Z5IKabsd($3849));
                       $3851 = $3850 > 5.0000000000000004E-6;
                       if ($3851) {
                        break;
                       }
                       $3852 = (($evalcond49) + 32|0);
                       $3853 = +HEAPF64[$3852>>3];
                       $3854 = (+__Z5IKabsd($3853));
                       $3855 = $3854 > 5.0000000000000004E-6;
                       if ($3855) {
                        break;
                       }
                       $3856 = (($evalcond49) + 40|0);
                       $3857 = +HEAPF64[$3856>>3];
                       $3858 = (+__Z5IKabsd($3857));
                       $3859 = $3858 > 5.0000000000000004E-6;
                       if ($3859) {
                        break;
                       }
                       $3860 = (($evalcond49) + 48|0);
                       $3861 = +HEAPF64[$3860>>3];
                       $3862 = (+__Z5IKabsd($3861));
                       $3863 = $3862 > 5.0000000000000004E-6;
                       if ($3863) {
                        break;
                       }
                       $3864 = (($evalcond49) + 56|0);
                       $3865 = +HEAPF64[$3864>>3];
                       $3866 = (+__Z5IKabsd($3865));
                       $3867 = $3866 > 5.0000000000000004E-6;
                       if ($3867) {
                        break;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos50,6);
                       __THREW__ = 0;
                       $3868 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3869 = __THREW__; __THREW__ = 0;
                       $3870 = $3869&1;
                       if ($3870) {
                        label = 448;
                        break L1;
                       }
                       $3871 = (($3868) + 17|0);
                       HEAP8[$3871>>0] = 1;
                       $3872 = +HEAPF64[$4>>3];
                       __THREW__ = 0;
                       $3873 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3874 = __THREW__; __THREW__ = 0;
                       $3875 = $3874&1;
                       if ($3875) {
                        label = 448;
                        break L1;
                       }
                       $3876 = (($3873) + 8|0);
                       HEAPF64[$3876>>3] = $3872;
                       $3877 = (($4) + 536|0);
                       $3878 = HEAP8[$3877>>0]|0;
                       __THREW__ = 0;
                       $3879 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3880 = __THREW__; __THREW__ = 0;
                       $3881 = $3880&1;
                       if ($3881) {
                        label = 448;
                        break L1;
                       }
                       $3882 = (($3879) + 19|0);
                       HEAP8[$3882>>0] = $3878;
                       $3883 = (($4) + 536|0);
                       $3884 = (($3883) + 1|0);
                       $3885 = HEAP8[$3884>>0]|0;
                       __THREW__ = 0;
                       $3886 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3887 = __THREW__; __THREW__ = 0;
                       $3888 = $3887&1;
                       if ($3888) {
                        label = 448;
                        break L1;
                       }
                       $3889 = (($3886) + 19|0);
                       $3890 = (($3889) + 1|0);
                       HEAP8[$3890>>0] = $3885;
                       $3891 = (($4) + 538|0);
                       $3892 = HEAP8[$3891>>0]|0;
                       __THREW__ = 0;
                       $3893 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3894 = __THREW__; __THREW__ = 0;
                       $3895 = $3894&1;
                       if ($3895) {
                        label = 448;
                        break L1;
                       }
                       $3896 = (($3893) + 18|0);
                       HEAP8[$3896>>0] = $3892;
                       __THREW__ = 0;
                       $3897 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3898 = __THREW__; __THREW__ = 0;
                       $3899 = $3898&1;
                       if ($3899) {
                        label = 448;
                        break L1;
                       }
                       $3900 = (($3897) + 17|0);
                       HEAP8[$3900>>0] = 1;
                       $3901 = (($4) + 40|0);
                       $3902 = +HEAPF64[$3901>>3];
                       __THREW__ = 0;
                       $3903 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3904 = __THREW__; __THREW__ = 0;
                       $3905 = $3904&1;
                       if ($3905) {
                        label = 448;
                        break L1;
                       }
                       $3906 = (($3903) + 8|0);
                       HEAPF64[$3906>>3] = $3902;
                       $3907 = (($4) + 539|0);
                       $3908 = HEAP8[$3907>>0]|0;
                       __THREW__ = 0;
                       $3909 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3910 = __THREW__; __THREW__ = 0;
                       $3911 = $3910&1;
                       if ($3911) {
                        label = 448;
                        break L1;
                       }
                       $3912 = (($3909) + 19|0);
                       HEAP8[$3912>>0] = $3908;
                       $3913 = (($4) + 539|0);
                       $3914 = (($3913) + 1|0);
                       $3915 = HEAP8[$3914>>0]|0;
                       __THREW__ = 0;
                       $3916 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3917 = __THREW__; __THREW__ = 0;
                       $3918 = $3917&1;
                       if ($3918) {
                        label = 448;
                        break L1;
                       }
                       $3919 = (($3916) + 19|0);
                       $3920 = (($3919) + 1|0);
                       HEAP8[$3920>>0] = $3915;
                       $3921 = (($4) + 541|0);
                       $3922 = HEAP8[$3921>>0]|0;
                       __THREW__ = 0;
                       $3923 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3924 = __THREW__; __THREW__ = 0;
                       $3925 = $3924&1;
                       if ($3925) {
                        label = 448;
                        break L1;
                       }
                       $3926 = (($3923) + 18|0);
                       HEAP8[$3926>>0] = $3922;
                       __THREW__ = 0;
                       $3927 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3928 = __THREW__; __THREW__ = 0;
                       $3929 = $3928&1;
                       if ($3929) {
                        label = 448;
                        break L1;
                       }
                       $3930 = (($3927) + 17|0);
                       HEAP8[$3930>>0] = 1;
                       $3931 = (($4) + 80|0);
                       $3932 = +HEAPF64[$3931>>3];
                       __THREW__ = 0;
                       $3933 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3934 = __THREW__; __THREW__ = 0;
                       $3935 = $3934&1;
                       if ($3935) {
                        label = 448;
                        break L1;
                       }
                       $3936 = (($3933) + 8|0);
                       HEAPF64[$3936>>3] = $3932;
                       $3937 = (($4) + 542|0);
                       $3938 = HEAP8[$3937>>0]|0;
                       __THREW__ = 0;
                       $3939 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3940 = __THREW__; __THREW__ = 0;
                       $3941 = $3940&1;
                       if ($3941) {
                        label = 448;
                        break L1;
                       }
                       $3942 = (($3939) + 19|0);
                       HEAP8[$3942>>0] = $3938;
                       $3943 = (($4) + 542|0);
                       $3944 = (($3943) + 1|0);
                       $3945 = HEAP8[$3944>>0]|0;
                       __THREW__ = 0;
                       $3946 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3947 = __THREW__; __THREW__ = 0;
                       $3948 = $3947&1;
                       if ($3948) {
                        label = 448;
                        break L1;
                       }
                       $3949 = (($3946) + 19|0);
                       $3950 = (($3949) + 1|0);
                       HEAP8[$3950>>0] = $3945;
                       $3951 = (($4) + 544|0);
                       $3952 = HEAP8[$3951>>0]|0;
                       __THREW__ = 0;
                       $3953 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3954 = __THREW__; __THREW__ = 0;
                       $3955 = $3954&1;
                       if ($3955) {
                        label = 448;
                        break L1;
                       }
                       $3956 = (($3953) + 18|0);
                       HEAP8[$3956>>0] = $3952;
                       __THREW__ = 0;
                       $3957 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3958 = __THREW__; __THREW__ = 0;
                       $3959 = $3958&1;
                       if ($3959) {
                        label = 448;
                        break L1;
                       }
                       $3960 = (($3957) + 17|0);
                       HEAP8[$3960>>0] = 1;
                       $3961 = (($4) + 120|0);
                       $3962 = +HEAPF64[$3961>>3];
                       __THREW__ = 0;
                       $3963 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3964 = __THREW__; __THREW__ = 0;
                       $3965 = $3964&1;
                       if ($3965) {
                        label = 448;
                        break L1;
                       }
                       $3966 = (($3963) + 8|0);
                       HEAPF64[$3966>>3] = $3962;
                       $3967 = (($4) + 545|0);
                       $3968 = HEAP8[$3967>>0]|0;
                       __THREW__ = 0;
                       $3969 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3970 = __THREW__; __THREW__ = 0;
                       $3971 = $3970&1;
                       if ($3971) {
                        label = 448;
                        break L1;
                       }
                       $3972 = (($3969) + 19|0);
                       HEAP8[$3972>>0] = $3968;
                       $3973 = (($4) + 545|0);
                       $3974 = (($3973) + 1|0);
                       $3975 = HEAP8[$3974>>0]|0;
                       __THREW__ = 0;
                       $3976 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3977 = __THREW__; __THREW__ = 0;
                       $3978 = $3977&1;
                       if ($3978) {
                        label = 448;
                        break L1;
                       }
                       $3979 = (($3976) + 19|0);
                       $3980 = (($3979) + 1|0);
                       HEAP8[$3980>>0] = $3975;
                       $3981 = (($4) + 547|0);
                       $3982 = HEAP8[$3981>>0]|0;
                       __THREW__ = 0;
                       $3983 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3984 = __THREW__; __THREW__ = 0;
                       $3985 = $3984&1;
                       if ($3985) {
                        label = 448;
                        break L1;
                       }
                       $3986 = (($3983) + 18|0);
                       HEAP8[$3986>>0] = $3982;
                       __THREW__ = 0;
                       $3987 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3988 = __THREW__; __THREW__ = 0;
                       $3989 = $3988&1;
                       if ($3989) {
                        label = 448;
                        break L1;
                       }
                       $3990 = (($3987) + 17|0);
                       HEAP8[$3990>>0] = 1;
                       $3991 = (($4) + 160|0);
                       $3992 = +HEAPF64[$3991>>3];
                       __THREW__ = 0;
                       $3993 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3994 = __THREW__; __THREW__ = 0;
                       $3995 = $3994&1;
                       if ($3995) {
                        label = 448;
                        break L1;
                       }
                       $3996 = (($3993) + 8|0);
                       HEAPF64[$3996>>3] = $3992;
                       $3997 = (($4) + 548|0);
                       $3998 = HEAP8[$3997>>0]|0;
                       __THREW__ = 0;
                       $3999 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $4000 = __THREW__; __THREW__ = 0;
                       $4001 = $4000&1;
                       if ($4001) {
                        label = 448;
                        break L1;
                       }
                       $4002 = (($3999) + 19|0);
                       HEAP8[$4002>>0] = $3998;
                       $4003 = (($4) + 548|0);
                       $4004 = (($4003) + 1|0);
                       $4005 = HEAP8[$4004>>0]|0;
                       __THREW__ = 0;
                       $4006 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $4007 = __THREW__; __THREW__ = 0;
                       $4008 = $4007&1;
                       if ($4008) {
                        label = 448;
                        break L1;
                       }
                       $4009 = (($4006) + 19|0);
                       $4010 = (($4009) + 1|0);
                       HEAP8[$4010>>0] = $4005;
                       $4011 = (($4) + 550|0);
                       $4012 = HEAP8[$4011>>0]|0;
                       __THREW__ = 0;
                       $4013 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $4014 = __THREW__; __THREW__ = 0;
                       $4015 = $4014&1;
                       if ($4015) {
                        label = 448;
                        break L1;
                       }
                       $4016 = (($4013) + 18|0);
                       HEAP8[$4016>>0] = $4012;
                       __THREW__ = 0;
                       $4017 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4018 = __THREW__; __THREW__ = 0;
                       $4019 = $4018&1;
                       if ($4019) {
                        label = 448;
                        break L1;
                       }
                       $4020 = (($4017) + 17|0);
                       HEAP8[$4020>>0] = 1;
                       $4021 = (($4) + 200|0);
                       $4022 = +HEAPF64[$4021>>3];
                       __THREW__ = 0;
                       $4023 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4024 = __THREW__; __THREW__ = 0;
                       $4025 = $4024&1;
                       if ($4025) {
                        label = 448;
                        break L1;
                       }
                       $4026 = (($4023) + 8|0);
                       HEAPF64[$4026>>3] = $4022;
                       $4027 = (($4) + 551|0);
                       $4028 = HEAP8[$4027>>0]|0;
                       __THREW__ = 0;
                       $4029 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4030 = __THREW__; __THREW__ = 0;
                       $4031 = $4030&1;
                       if ($4031) {
                        label = 448;
                        break L1;
                       }
                       $4032 = (($4029) + 19|0);
                       HEAP8[$4032>>0] = $4028;
                       $4033 = (($4) + 551|0);
                       $4034 = (($4033) + 1|0);
                       $4035 = HEAP8[$4034>>0]|0;
                       __THREW__ = 0;
                       $4036 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4037 = __THREW__; __THREW__ = 0;
                       $4038 = $4037&1;
                       if ($4038) {
                        label = 448;
                        break L1;
                       }
                       $4039 = (($4036) + 19|0);
                       $4040 = (($4039) + 1|0);
                       HEAP8[$4040>>0] = $4035;
                       $4041 = (($4) + 553|0);
                       $4042 = HEAP8[$4041>>0]|0;
                       __THREW__ = 0;
                       $4043 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $4044 = __THREW__; __THREW__ = 0;
                       $4045 = $4044&1;
                       if ($4045) {
                        label = 448;
                        break L1;
                       }
                       $4046 = (($4043) + 18|0);
                       HEAP8[$4046>>0] = $4042;
                       __THREW__ = 0;
                       invoke_vii(382,($vfree51|0),0);
                       $4047 = __THREW__; __THREW__ = 0;
                       $4048 = $4047&1;
                       if ($4048) {
                        label = 448;
                        break L1;
                       }
                       $4049 = $1;
                       $4050 = HEAP32[$4049>>2]|0;
                       $4051 = (($4050) + 8|0);
                       $4052 = HEAP32[$4051>>2]|0;
                       __THREW__ = 0;
                       (invoke_iiii($4052|0,($4049|0),($vinfos50|0),($vfree51|0))|0);
                       $4053 = __THREW__; __THREW__ = 0;
                       $4054 = $4053&1;
                       if ($4054) {
                        label = 449;
                        break L1;
                       }
                       __THREW__ = 0;
                       invoke_vi(366,($vfree51|0));
                       $4055 = __THREW__; __THREW__ = 0;
                       $4056 = $4055&1;
                       if ($4056) {
                        label = 448;
                        break L1;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos50);
                       break L1133;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $4057 = $ij547;
                   $4058 = (($4057) + 1)|0;
                   $ij547 = $4058;
                  }
                  label = 454;
                 } else {
                  label = 454;
                 }
                } while(0);
                if ((label|0) == 454) {
                 label = 0;
                }
                $4067 = $bgotonextstatement42;
                $4068 = $4067&1;
                if ($4068) {
                 $bgotonextstatement52 = 1;
                 $4069 = (($4) + 136|0);
                 $4070 = +HEAPF64[$4069>>3];
                 $4071 = 1.0 * $4070;
                 $x219 = $4071;
                 $4072 = (($4) + 360|0);
                 $4073 = +HEAPF64[$4072>>3];
                 $4074 = (($4) + 136|0);
                 $4075 = +HEAPF64[$4074>>3];
                 $4076 = $4073 * $4075;
                 $4077 = (($4) + 128|0);
                 $4078 = +HEAPF64[$4077>>3];
                 $4079 = (($4) + 288|0);
                 $4080 = +HEAPF64[$4079>>3];
                 $4081 = $4078 * $4080;
                 $4082 = $4076 + $4081;
                 $x220 = $4082;
                 $4083 = (($4) + 128|0);
                 $4084 = +HEAPF64[$4083>>3];
                 $4085 = (($4) + 312|0);
                 $4086 = +HEAPF64[$4085>>3];
                 $4087 = $4084 * $4086;
                 $4088 = (($4) + 240|0);
                 $4089 = +HEAPF64[$4088>>3];
                 $4090 = -1.0 * $4089;
                 $4091 = $x219;
                 $4092 = $4090 * $4091;
                 $4093 = $4087 + $4092;
                 $x221 = $4093;
                 $4094 = (($4) + 264|0);
                 $4095 = +HEAPF64[$4094>>3];
                 $4096 = -1.0 * $4095;
                 $4097 = $x219;
                 $4098 = $4096 * $4097;
                 $4099 = (($4) + 128|0);
                 $4100 = +HEAPF64[$4099>>3];
                 $4101 = (($4) + 336|0);
                 $4102 = +HEAPF64[$4101>>3];
                 $4103 = $4100 * $4102;
                 $4104 = $4098 + $4103;
                 $x222 = $4104;
                 $4105 = (($4) + 288|0);
                 $4106 = +HEAPF64[$4105>>3];
                 $4107 = -1.0 * $4106;
                 $4108 = $x219;
                 $4109 = $4107 * $4108;
                 $4110 = 1.0 + $4109;
                 $4111 = (($4) + 128|0);
                 $4112 = +HEAPF64[$4111>>3];
                 $4113 = (($4) + 360|0);
                 $4114 = +HEAPF64[$4113>>3];
                 $4115 = $4112 * $4114;
                 $4116 = $4110 + $4115;
                 $x223 = $4116;
                 $4117 = (($4) + 160|0);
                 $4118 = +HEAPF64[$4117>>3];
                 $4119 = -1.5707963267949001 + $4118;
                 $4120 = (+__Z5IKabsd($4119));
                 $4121 = 3.14159265358979 + $4120;
                 $4122 = (+__Z6IKfmoddd($4121,6.2831853071795898));
                 $4123 = -3.14159265358979 + $4122;
                 HEAPF64[$evalcond31>>3] = $4123;
                 $4124 = (($4) + 432|0);
                 $4125 = +HEAPF64[$4124>>3];
                 $4126 = (($evalcond31) + 8|0);
                 HEAPF64[$4126>>3] = $4125;
                 $4127 = (($4) + 128|0);
                 $4128 = +HEAPF64[$4127>>3];
                 $4129 = (($4) + 360|0);
                 $4130 = +HEAPF64[$4129>>3];
                 $4131 = $4128 + $4130;
                 $4132 = (($evalcond31) + 16|0);
                 HEAPF64[$4132>>3] = $4131;
                 $4133 = (($4) + 288|0);
                 $4134 = +HEAPF64[$4133>>3];
                 $4135 = $x219;
                 $4136 = -1.0 * $4135;
                 $4137 = $4134 + $4136;
                 $4138 = (($evalcond31) + 24|0);
                 HEAPF64[$4138>>3] = $4137;
                 $4139 = $x220;
                 $4140 = (($evalcond31) + 32|0);
                 HEAPF64[$4140>>3] = $4139;
                 $4141 = $x220;
                 $4142 = (($evalcond31) + 40|0);
                 HEAPF64[$4142>>3] = $4141;
                 $4143 = $x223;
                 $4144 = (($evalcond31) + 48|0);
                 HEAPF64[$4144>>3] = $4143;
                 $4145 = $x221;
                 $4146 = (($evalcond31) + 56|0);
                 HEAPF64[$4146>>3] = $4145;
                 $4147 = $x222;
                 $4148 = (($evalcond31) + 64|0);
                 HEAPF64[$4148>>3] = $4147;
                 $4149 = $x221;
                 $4150 = (($evalcond31) + 72|0);
                 HEAPF64[$4150>>3] = $4149;
                 $4151 = $x222;
                 $4152 = (($evalcond31) + 80|0);
                 HEAPF64[$4152>>3] = $4151;
                 $4153 = $x223;
                 $4154 = (($evalcond31) + 88|0);
                 HEAPF64[$4154>>3] = $4153;
                 $4155 = +HEAPF64[$evalcond31>>3];
                 $4156 = (+__Z5IKabsd($4155));
                 $4157 = $4156 < 9.9999999999999995E-7;
                 L1198: do {
                  if ($4157) {
                   $4158 = (($evalcond31) + 8|0);
                   $4159 = +HEAPF64[$4158>>3];
                   $4160 = (+__Z5IKabsd($4159));
                   $4161 = $4160 < 9.9999999999999995E-7;
                   if (!($4161)) {
                    label = 540;
                    break;
                   }
                   $4162 = (($evalcond31) + 16|0);
                   $4163 = +HEAPF64[$4162>>3];
                   $4164 = (+__Z5IKabsd($4163));
                   $4165 = $4164 < 9.9999999999999995E-7;
                   if (!($4165)) {
                    label = 540;
                    break;
                   }
                   $4166 = (($evalcond31) + 24|0);
                   $4167 = +HEAPF64[$4166>>3];
                   $4168 = (+__Z5IKabsd($4167));
                   $4169 = $4168 < 9.9999999999999995E-7;
                   if (!($4169)) {
                    label = 540;
                    break;
                   }
                   $4170 = (($evalcond31) + 32|0);
                   $4171 = +HEAPF64[$4170>>3];
                   $4172 = (+__Z5IKabsd($4171));
                   $4173 = $4172 < 9.9999999999999995E-7;
                   if (!($4173)) {
                    label = 540;
                    break;
                   }
                   $4174 = (($evalcond31) + 40|0);
                   $4175 = +HEAPF64[$4174>>3];
                   $4176 = (+__Z5IKabsd($4175));
                   $4177 = $4176 < 9.9999999999999995E-7;
                   if (!($4177)) {
                    label = 540;
                    break;
                   }
                   $4178 = (($evalcond31) + 48|0);
                   $4179 = +HEAPF64[$4178>>3];
                   $4180 = (+__Z5IKabsd($4179));
                   $4181 = $4180 < 9.9999999999999995E-7;
                   if (!($4181)) {
                    label = 540;
                    break;
                   }
                   $4182 = (($evalcond31) + 56|0);
                   $4183 = +HEAPF64[$4182>>3];
                   $4184 = (+__Z5IKabsd($4183));
                   $4185 = $4184 < 9.9999999999999995E-7;
                   if (!($4185)) {
                    label = 540;
                    break;
                   }
                   $4186 = (($evalcond31) + 64|0);
                   $4187 = +HEAPF64[$4186>>3];
                   $4188 = (+__Z5IKabsd($4187));
                   $4189 = $4188 < 9.9999999999999995E-7;
                   if (!($4189)) {
                    label = 540;
                    break;
                   }
                   $4190 = (($evalcond31) + 72|0);
                   $4191 = +HEAPF64[$4190>>3];
                   $4192 = (+__Z5IKabsd($4191));
                   $4193 = $4192 < 9.9999999999999995E-7;
                   if (!($4193)) {
                    label = 540;
                    break;
                   }
                   $4194 = (($evalcond31) + 80|0);
                   $4195 = +HEAPF64[$4194>>3];
                   $4196 = (+__Z5IKabsd($4195));
                   $4197 = $4196 < 9.9999999999999995E-7;
                   if (!($4197)) {
                    label = 540;
                    break;
                   }
                   $4198 = (($evalcond31) + 88|0);
                   $4199 = +HEAPF64[$4198>>3];
                   $4200 = (+__Z5IKabsd($4199));
                   $4201 = $4200 < 9.9999999999999995E-7;
                   if (!($4201)) {
                    label = 540;
                    break;
                   }
                   $bgotonextstatement52 = 0;
                   ;HEAP8[$j5valid56+0>>0]=0|0;
                   $4202 = (($4) + 553|0);
                   HEAP8[$4202>>0] = 1;
                   $4203 = (($4) + 384|0);
                   $4204 = +HEAPF64[$4203>>3];
                   $4205 = (+__Z5IKabsd($4204));
                   $4206 = $4205 < 1.9999999999999999E-6;
                   do {
                    if ($4206) {
                     $4207 = (($4) + 408|0);
                     $4208 = +HEAPF64[$4207>>3];
                     $4209 = (+__Z5IKabsd($4208));
                     $4210 = $4209 < 1.9999999999999999E-6;
                     if (!($4210)) {
                      break;
                     }
                     $4211 = (($4) + 384|0);
                     $4212 = +HEAPF64[$4211>>3];
                     $4213 = (+__Z5IKsqrd($4212));
                     $4214 = (($4) + 408|0);
                     $4215 = +HEAPF64[$4214>>3];
                     $4216 = (+__Z5IKsqrd($4215));
                     $4217 = $4213 + $4216;
                     $4218 = $4217 - 1.0;
                     $4219 = (+__Z5IKabsd($4218));
                     $4220 = $4219 <= 1.9999999999999999E-6;
                     if (!($4220)) {
                      break;
                     }
                     break L1198;
                    }
                   } while(0);
                   $4221 = (($4) + 384|0);
                   $4222 = +HEAPF64[$4221>>3];
                   $4223 = (($4) + 408|0);
                   $4224 = +HEAPF64[$4223>>3];
                   $4225 = (+__Z7IKatan2dd($4222,$4224));
                   HEAPF64[$j5array53>>3] = $4225;
                   $4226 = +HEAPF64[$j5array53>>3];
                   $4227 = (+__Z5IKsind($4226));
                   HEAPF64[$sj5array55>>3] = $4227;
                   $4228 = +HEAPF64[$j5array53>>3];
                   $4229 = (+__Z5IKcosd($4228));
                   HEAPF64[$cj5array54>>3] = $4229;
                   $4230 = +HEAPF64[$j5array53>>3];
                   $4231 = $4230 > 3.14159265358979;
                   if ($4231) {
                    $4232 = +HEAPF64[$j5array53>>3];
                    $4233 = $4232 - 6.2831853071795898;
                    HEAPF64[$j5array53>>3] = $4233;
                   } else {
                    $4234 = +HEAPF64[$j5array53>>3];
                    $4235 = $4234 < -3.14159265358979;
                    if ($4235) {
                     $4236 = +HEAPF64[$j5array53>>3];
                     $4237 = $4236 + 6.2831853071795898;
                     HEAPF64[$j5array53>>3] = $4237;
                    }
                   }
                   HEAP8[$j5valid56>>0] = 1;
                   $ij557 = 0;
                   while(1) {
                    $4238 = $ij557;
                    $4239 = ($4238|0)<(1);
                    if (!($4239)) {
                     break;
                    }
                    $4240 = $ij557;
                    $4241 = (($j5valid56) + ($4240)|0);
                    $4242 = HEAP8[$4241>>0]|0;
                    $4243 = $4242&1;
                    L1226: do {
                     if ($4243) {
                      $4244 = $ij557;
                      $4245 = $4244&255;
                      $4246 = (($4) + 551|0);
                      HEAP8[$4246>>0] = $4245;
                      $4247 = (($4) + 551|0);
                      $4248 = (($4247) + 1|0);
                      HEAP8[$4248>>0] = -1;
                      $4249 = $ij557;
                      $4250 = (($4249) + 1)|0;
                      $iij558 = $4250;
                      L1229: while(1) {
                       $4251 = $iij558;
                       $4252 = ($4251|0)<(1);
                       if (!($4252)) {
                        break;
                       }
                       $4253 = $iij558;
                       $4254 = (($j5valid56) + ($4253)|0);
                       $4255 = HEAP8[$4254>>0]|0;
                       $4256 = $4255&1;
                       do {
                        if ($4256) {
                         $4257 = $ij557;
                         $4258 = (($cj5array54) + ($4257<<3)|0);
                         $4259 = +HEAPF64[$4258>>3];
                         $4260 = $iij558;
                         $4261 = (($cj5array54) + ($4260<<3)|0);
                         $4262 = +HEAPF64[$4261>>3];
                         $4263 = $4259 - $4262;
                         $4264 = (+__Z5IKabsd($4263));
                         $4265 = $4264 < 9.9999999999999995E-7;
                         if (!($4265)) {
                          break;
                         }
                         $4266 = $ij557;
                         $4267 = (($sj5array55) + ($4266<<3)|0);
                         $4268 = +HEAPF64[$4267>>3];
                         $4269 = $iij558;
                         $4270 = (($sj5array55) + ($4269<<3)|0);
                         $4271 = +HEAPF64[$4270>>3];
                         $4272 = $4268 - $4271;
                         $4273 = (+__Z5IKabsd($4272));
                         $4274 = $4273 < 9.9999999999999995E-7;
                         if ($4274) {
                          label = 487;
                          break L1229;
                         }
                        }
                       } while(0);
                       $4281 = $iij558;
                       $4282 = (($4281) + 1)|0;
                       $iij558 = $4282;
                      }
                      if ((label|0) == 487) {
                       label = 0;
                       $4275 = $iij558;
                       $4276 = (($j5valid56) + ($4275)|0);
                       HEAP8[$4276>>0] = 0;
                       $4277 = $iij558;
                       $4278 = $4277&255;
                       $4279 = (($4) + 551|0);
                       $4280 = (($4279) + 1|0);
                       HEAP8[$4280>>0] = $4278;
                      }
                      $4283 = $ij557;
                      $4284 = (($j5array53) + ($4283<<3)|0);
                      $4285 = +HEAPF64[$4284>>3];
                      $4286 = (($4) + 200|0);
                      HEAPF64[$4286>>3] = $4285;
                      $4287 = $ij557;
                      $4288 = (($cj5array54) + ($4287<<3)|0);
                      $4289 = +HEAPF64[$4288>>3];
                      $4290 = (($4) + 208|0);
                      HEAPF64[$4290>>3] = $4289;
                      $4291 = $ij557;
                      $4292 = (($sj5array55) + ($4291<<3)|0);
                      $4293 = +HEAPF64[$4292>>3];
                      $4294 = (($4) + 216|0);
                      HEAPF64[$4294>>3] = $4293;
                      $4295 = (($4) + 200|0);
                      $4296 = +HEAPF64[$4295>>3];
                      $4297 = (+__Z5IKcosd($4296));
                      $x224 = $4297;
                      $4298 = (($4) + 200|0);
                      $4299 = +HEAPF64[$4298>>3];
                      $4300 = (+__Z5IKsind($4299));
                      $x225 = $4300;
                      $4301 = (($4) + 360|0);
                      $4302 = +HEAPF64[$4301>>3];
                      $4303 = 1.0 * $4302;
                      $x226 = $4303;
                      $4304 = $x224;
                      $4305 = 1.0 * $4304;
                      $x227 = $4305;
                      $4306 = $x225;
                      $4307 = 1.0 * $4306;
                      $x228 = $4307;
                      $4308 = (($4) + 384|0);
                      $4309 = +HEAPF64[$4308>>3];
                      $4310 = $x228;
                      $4311 = -1.0 * $4310;
                      $4312 = $4309 + $4311;
                      HEAPF64[$evalcond59>>3] = $4312;
                      $4313 = (($4) + 408|0);
                      $4314 = +HEAPF64[$4313>>3];
                      $4315 = $x227;
                      $4316 = -1.0 * $4315;
                      $4317 = $4314 + $4316;
                      $4318 = (($evalcond59) + 8|0);
                      HEAPF64[$4318>>3] = $4317;
                      $4319 = (($4) + 360|0);
                      $4320 = +HEAPF64[$4319>>3];
                      $4321 = $x224;
                      $4322 = $4320 * $4321;
                      $4323 = (($4) + 240|0);
                      $4324 = +HEAPF64[$4323>>3];
                      $4325 = $4322 + $4324;
                      $4326 = (($evalcond59) + 16|0);
                      HEAPF64[$4326>>3] = $4325;
                      $4327 = (($4) + 288|0);
                      $4328 = +HEAPF64[$4327>>3];
                      $4329 = $x225;
                      $4330 = $4328 * $4329;
                      $4331 = (($4) + 336|0);
                      $4332 = +HEAPF64[$4331>>3];
                      $4333 = $4330 + $4332;
                      $4334 = (($evalcond59) + 24|0);
                      HEAPF64[$4334>>3] = $4333;
                      $4335 = $x225;
                      $4336 = -1.0 * $4335;
                      $4337 = $x226;
                      $4338 = $4336 * $4337;
                      $4339 = (($4) + 264|0);
                      $4340 = +HEAPF64[$4339>>3];
                      $4341 = $4338 + $4340;
                      $4342 = (($evalcond59) + 32|0);
                      HEAPF64[$4342>>3] = $4341;
                      $4343 = (($4) + 312|0);
                      $4344 = +HEAPF64[$4343>>3];
                      $4345 = (($4) + 288|0);
                      $4346 = +HEAPF64[$4345>>3];
                      $4347 = -1.0 * $4346;
                      $4348 = $x227;
                      $4349 = $4347 * $4348;
                      $4350 = $4344 + $4349;
                      $4351 = (($evalcond59) + 40|0);
                      HEAPF64[$4351>>3] = $4350;
                      $4352 = (($4) + 264|0);
                      $4353 = +HEAPF64[$4352>>3];
                      $4354 = -1.0 * $4353;
                      $4355 = $x226;
                      $4356 = $4354 * $4355;
                      $4357 = $x225;
                      $4358 = $4356 + $4357;
                      $4359 = (($4) + 288|0);
                      $4360 = +HEAPF64[$4359>>3];
                      $4361 = (($4) + 336|0);
                      $4362 = +HEAPF64[$4361>>3];
                      $4363 = $4360 * $4362;
                      $4364 = $4358 + $4363;
                      $4365 = (($evalcond59) + 48|0);
                      HEAPF64[$4365>>3] = $4364;
                      $4366 = (($4) + 288|0);
                      $4367 = +HEAPF64[$4366>>3];
                      $4368 = (($4) + 312|0);
                      $4369 = +HEAPF64[$4368>>3];
                      $4370 = $4367 * $4369;
                      $4371 = $x227;
                      $4372 = -1.0 * $4371;
                      $4373 = $4370 + $4372;
                      $4374 = (($4) + 240|0);
                      $4375 = +HEAPF64[$4374>>3];
                      $4376 = -1.0 * $4375;
                      $4377 = $x226;
                      $4378 = $4376 * $4377;
                      $4379 = $4373 + $4378;
                      $4380 = (($evalcond59) + 56|0);
                      HEAPF64[$4380>>3] = $4379;
                      $4381 = +HEAPF64[$evalcond59>>3];
                      $4382 = (+__Z5IKabsd($4381));
                      $4383 = $4382 > 5.0000000000000004E-6;
                      do {
                       if (!($4383)) {
                        $4384 = (($evalcond59) + 8|0);
                        $4385 = +HEAPF64[$4384>>3];
                        $4386 = (+__Z5IKabsd($4385));
                        $4387 = $4386 > 5.0000000000000004E-6;
                        if ($4387) {
                         break;
                        }
                        $4388 = (($evalcond59) + 16|0);
                        $4389 = +HEAPF64[$4388>>3];
                        $4390 = (+__Z5IKabsd($4389));
                        $4391 = $4390 > 5.0000000000000004E-6;
                        if ($4391) {
                         break;
                        }
                        $4392 = (($evalcond59) + 24|0);
                        $4393 = +HEAPF64[$4392>>3];
                        $4394 = (+__Z5IKabsd($4393));
                        $4395 = $4394 > 5.0000000000000004E-6;
                        if ($4395) {
                         break;
                        }
                        $4396 = (($evalcond59) + 32|0);
                        $4397 = +HEAPF64[$4396>>3];
                        $4398 = (+__Z5IKabsd($4397));
                        $4399 = $4398 > 5.0000000000000004E-6;
                        if ($4399) {
                         break;
                        }
                        $4400 = (($evalcond59) + 40|0);
                        $4401 = +HEAPF64[$4400>>3];
                        $4402 = (+__Z5IKabsd($4401));
                        $4403 = $4402 > 5.0000000000000004E-6;
                        if ($4403) {
                         break;
                        }
                        $4404 = (($evalcond59) + 48|0);
                        $4405 = +HEAPF64[$4404>>3];
                        $4406 = (+__Z5IKabsd($4405));
                        $4407 = $4406 > 5.0000000000000004E-6;
                        if ($4407) {
                         break;
                        }
                        $4408 = (($evalcond59) + 56|0);
                        $4409 = +HEAPF64[$4408>>3];
                        $4410 = (+__Z5IKabsd($4409));
                        $4411 = $4410 > 5.0000000000000004E-6;
                        if ($4411) {
                         break;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos60,6);
                        __THREW__ = 0;
                        $4412 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4413 = __THREW__; __THREW__ = 0;
                        $4414 = $4413&1;
                        if ($4414) {
                         label = 534;
                         break L1;
                        }
                        $4415 = (($4412) + 17|0);
                        HEAP8[$4415>>0] = 1;
                        $4416 = +HEAPF64[$4>>3];
                        __THREW__ = 0;
                        $4417 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4418 = __THREW__; __THREW__ = 0;
                        $4419 = $4418&1;
                        if ($4419) {
                         label = 534;
                         break L1;
                        }
                        $4420 = (($4417) + 8|0);
                        HEAPF64[$4420>>3] = $4416;
                        $4421 = (($4) + 536|0);
                        $4422 = HEAP8[$4421>>0]|0;
                        __THREW__ = 0;
                        $4423 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4424 = __THREW__; __THREW__ = 0;
                        $4425 = $4424&1;
                        if ($4425) {
                         label = 534;
                         break L1;
                        }
                        $4426 = (($4423) + 19|0);
                        HEAP8[$4426>>0] = $4422;
                        $4427 = (($4) + 536|0);
                        $4428 = (($4427) + 1|0);
                        $4429 = HEAP8[$4428>>0]|0;
                        __THREW__ = 0;
                        $4430 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4431 = __THREW__; __THREW__ = 0;
                        $4432 = $4431&1;
                        if ($4432) {
                         label = 534;
                         break L1;
                        }
                        $4433 = (($4430) + 19|0);
                        $4434 = (($4433) + 1|0);
                        HEAP8[$4434>>0] = $4429;
                        $4435 = (($4) + 538|0);
                        $4436 = HEAP8[$4435>>0]|0;
                        __THREW__ = 0;
                        $4437 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4438 = __THREW__; __THREW__ = 0;
                        $4439 = $4438&1;
                        if ($4439) {
                         label = 534;
                         break L1;
                        }
                        $4440 = (($4437) + 18|0);
                        HEAP8[$4440>>0] = $4436;
                        __THREW__ = 0;
                        $4441 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4442 = __THREW__; __THREW__ = 0;
                        $4443 = $4442&1;
                        if ($4443) {
                         label = 534;
                         break L1;
                        }
                        $4444 = (($4441) + 17|0);
                        HEAP8[$4444>>0] = 1;
                        $4445 = (($4) + 40|0);
                        $4446 = +HEAPF64[$4445>>3];
                        __THREW__ = 0;
                        $4447 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4448 = __THREW__; __THREW__ = 0;
                        $4449 = $4448&1;
                        if ($4449) {
                         label = 534;
                         break L1;
                        }
                        $4450 = (($4447) + 8|0);
                        HEAPF64[$4450>>3] = $4446;
                        $4451 = (($4) + 539|0);
                        $4452 = HEAP8[$4451>>0]|0;
                        __THREW__ = 0;
                        $4453 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4454 = __THREW__; __THREW__ = 0;
                        $4455 = $4454&1;
                        if ($4455) {
                         label = 534;
                         break L1;
                        }
                        $4456 = (($4453) + 19|0);
                        HEAP8[$4456>>0] = $4452;
                        $4457 = (($4) + 539|0);
                        $4458 = (($4457) + 1|0);
                        $4459 = HEAP8[$4458>>0]|0;
                        __THREW__ = 0;
                        $4460 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4461 = __THREW__; __THREW__ = 0;
                        $4462 = $4461&1;
                        if ($4462) {
                         label = 534;
                         break L1;
                        }
                        $4463 = (($4460) + 19|0);
                        $4464 = (($4463) + 1|0);
                        HEAP8[$4464>>0] = $4459;
                        $4465 = (($4) + 541|0);
                        $4466 = HEAP8[$4465>>0]|0;
                        __THREW__ = 0;
                        $4467 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4468 = __THREW__; __THREW__ = 0;
                        $4469 = $4468&1;
                        if ($4469) {
                         label = 534;
                         break L1;
                        }
                        $4470 = (($4467) + 18|0);
                        HEAP8[$4470>>0] = $4466;
                        __THREW__ = 0;
                        $4471 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4472 = __THREW__; __THREW__ = 0;
                        $4473 = $4472&1;
                        if ($4473) {
                         label = 534;
                         break L1;
                        }
                        $4474 = (($4471) + 17|0);
                        HEAP8[$4474>>0] = 1;
                        $4475 = (($4) + 80|0);
                        $4476 = +HEAPF64[$4475>>3];
                        __THREW__ = 0;
                        $4477 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4478 = __THREW__; __THREW__ = 0;
                        $4479 = $4478&1;
                        if ($4479) {
                         label = 534;
                         break L1;
                        }
                        $4480 = (($4477) + 8|0);
                        HEAPF64[$4480>>3] = $4476;
                        $4481 = (($4) + 542|0);
                        $4482 = HEAP8[$4481>>0]|0;
                        __THREW__ = 0;
                        $4483 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4484 = __THREW__; __THREW__ = 0;
                        $4485 = $4484&1;
                        if ($4485) {
                         label = 534;
                         break L1;
                        }
                        $4486 = (($4483) + 19|0);
                        HEAP8[$4486>>0] = $4482;
                        $4487 = (($4) + 542|0);
                        $4488 = (($4487) + 1|0);
                        $4489 = HEAP8[$4488>>0]|0;
                        __THREW__ = 0;
                        $4490 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4491 = __THREW__; __THREW__ = 0;
                        $4492 = $4491&1;
                        if ($4492) {
                         label = 534;
                         break L1;
                        }
                        $4493 = (($4490) + 19|0);
                        $4494 = (($4493) + 1|0);
                        HEAP8[$4494>>0] = $4489;
                        $4495 = (($4) + 544|0);
                        $4496 = HEAP8[$4495>>0]|0;
                        __THREW__ = 0;
                        $4497 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4498 = __THREW__; __THREW__ = 0;
                        $4499 = $4498&1;
                        if ($4499) {
                         label = 534;
                         break L1;
                        }
                        $4500 = (($4497) + 18|0);
                        HEAP8[$4500>>0] = $4496;
                        __THREW__ = 0;
                        $4501 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4502 = __THREW__; __THREW__ = 0;
                        $4503 = $4502&1;
                        if ($4503) {
                         label = 534;
                         break L1;
                        }
                        $4504 = (($4501) + 17|0);
                        HEAP8[$4504>>0] = 1;
                        $4505 = (($4) + 120|0);
                        $4506 = +HEAPF64[$4505>>3];
                        __THREW__ = 0;
                        $4507 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4508 = __THREW__; __THREW__ = 0;
                        $4509 = $4508&1;
                        if ($4509) {
                         label = 534;
                         break L1;
                        }
                        $4510 = (($4507) + 8|0);
                        HEAPF64[$4510>>3] = $4506;
                        $4511 = (($4) + 545|0);
                        $4512 = HEAP8[$4511>>0]|0;
                        __THREW__ = 0;
                        $4513 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4514 = __THREW__; __THREW__ = 0;
                        $4515 = $4514&1;
                        if ($4515) {
                         label = 534;
                         break L1;
                        }
                        $4516 = (($4513) + 19|0);
                        HEAP8[$4516>>0] = $4512;
                        $4517 = (($4) + 545|0);
                        $4518 = (($4517) + 1|0);
                        $4519 = HEAP8[$4518>>0]|0;
                        __THREW__ = 0;
                        $4520 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4521 = __THREW__; __THREW__ = 0;
                        $4522 = $4521&1;
                        if ($4522) {
                         label = 534;
                         break L1;
                        }
                        $4523 = (($4520) + 19|0);
                        $4524 = (($4523) + 1|0);
                        HEAP8[$4524>>0] = $4519;
                        $4525 = (($4) + 547|0);
                        $4526 = HEAP8[$4525>>0]|0;
                        __THREW__ = 0;
                        $4527 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4528 = __THREW__; __THREW__ = 0;
                        $4529 = $4528&1;
                        if ($4529) {
                         label = 534;
                         break L1;
                        }
                        $4530 = (($4527) + 18|0);
                        HEAP8[$4530>>0] = $4526;
                        __THREW__ = 0;
                        $4531 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4532 = __THREW__; __THREW__ = 0;
                        $4533 = $4532&1;
                        if ($4533) {
                         label = 534;
                         break L1;
                        }
                        $4534 = (($4531) + 17|0);
                        HEAP8[$4534>>0] = 1;
                        $4535 = (($4) + 160|0);
                        $4536 = +HEAPF64[$4535>>3];
                        __THREW__ = 0;
                        $4537 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4538 = __THREW__; __THREW__ = 0;
                        $4539 = $4538&1;
                        if ($4539) {
                         label = 534;
                         break L1;
                        }
                        $4540 = (($4537) + 8|0);
                        HEAPF64[$4540>>3] = $4536;
                        $4541 = (($4) + 548|0);
                        $4542 = HEAP8[$4541>>0]|0;
                        __THREW__ = 0;
                        $4543 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4544 = __THREW__; __THREW__ = 0;
                        $4545 = $4544&1;
                        if ($4545) {
                         label = 534;
                         break L1;
                        }
                        $4546 = (($4543) + 19|0);
                        HEAP8[$4546>>0] = $4542;
                        $4547 = (($4) + 548|0);
                        $4548 = (($4547) + 1|0);
                        $4549 = HEAP8[$4548>>0]|0;
                        __THREW__ = 0;
                        $4550 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4551 = __THREW__; __THREW__ = 0;
                        $4552 = $4551&1;
                        if ($4552) {
                         label = 534;
                         break L1;
                        }
                        $4553 = (($4550) + 19|0);
                        $4554 = (($4553) + 1|0);
                        HEAP8[$4554>>0] = $4549;
                        $4555 = (($4) + 550|0);
                        $4556 = HEAP8[$4555>>0]|0;
                        __THREW__ = 0;
                        $4557 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4558 = __THREW__; __THREW__ = 0;
                        $4559 = $4558&1;
                        if ($4559) {
                         label = 534;
                         break L1;
                        }
                        $4560 = (($4557) + 18|0);
                        HEAP8[$4560>>0] = $4556;
                        __THREW__ = 0;
                        $4561 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4562 = __THREW__; __THREW__ = 0;
                        $4563 = $4562&1;
                        if ($4563) {
                         label = 534;
                         break L1;
                        }
                        $4564 = (($4561) + 17|0);
                        HEAP8[$4564>>0] = 1;
                        $4565 = (($4) + 200|0);
                        $4566 = +HEAPF64[$4565>>3];
                        __THREW__ = 0;
                        $4567 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4568 = __THREW__; __THREW__ = 0;
                        $4569 = $4568&1;
                        if ($4569) {
                         label = 534;
                         break L1;
                        }
                        $4570 = (($4567) + 8|0);
                        HEAPF64[$4570>>3] = $4566;
                        $4571 = (($4) + 551|0);
                        $4572 = HEAP8[$4571>>0]|0;
                        __THREW__ = 0;
                        $4573 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4574 = __THREW__; __THREW__ = 0;
                        $4575 = $4574&1;
                        if ($4575) {
                         label = 534;
                         break L1;
                        }
                        $4576 = (($4573) + 19|0);
                        HEAP8[$4576>>0] = $4572;
                        $4577 = (($4) + 551|0);
                        $4578 = (($4577) + 1|0);
                        $4579 = HEAP8[$4578>>0]|0;
                        __THREW__ = 0;
                        $4580 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4581 = __THREW__; __THREW__ = 0;
                        $4582 = $4581&1;
                        if ($4582) {
                         label = 534;
                         break L1;
                        }
                        $4583 = (($4580) + 19|0);
                        $4584 = (($4583) + 1|0);
                        HEAP8[$4584>>0] = $4579;
                        $4585 = (($4) + 553|0);
                        $4586 = HEAP8[$4585>>0]|0;
                        __THREW__ = 0;
                        $4587 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4588 = __THREW__; __THREW__ = 0;
                        $4589 = $4588&1;
                        if ($4589) {
                         label = 534;
                         break L1;
                        }
                        $4590 = (($4587) + 18|0);
                        HEAP8[$4590>>0] = $4586;
                        __THREW__ = 0;
                        invoke_vii(382,($vfree61|0),0);
                        $4591 = __THREW__; __THREW__ = 0;
                        $4592 = $4591&1;
                        if ($4592) {
                         label = 534;
                         break L1;
                        }
                        $4593 = $1;
                        $4594 = HEAP32[$4593>>2]|0;
                        $4595 = (($4594) + 8|0);
                        $4596 = HEAP32[$4595>>2]|0;
                        __THREW__ = 0;
                        (invoke_iiii($4596|0,($4593|0),($vinfos60|0),($vfree61|0))|0);
                        $4597 = __THREW__; __THREW__ = 0;
                        $4598 = $4597&1;
                        if ($4598) {
                         label = 535;
                         break L1;
                        }
                        __THREW__ = 0;
                        invoke_vi(366,($vfree61|0));
                        $4599 = __THREW__; __THREW__ = 0;
                        $4600 = $4599&1;
                        if ($4600) {
                         label = 534;
                         break L1;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos60);
                        break L1226;
                       }
                      } while(0);
                     } else {
                     }
                    } while(0);
                    $4601 = $ij557;
                    $4602 = (($4601) + 1)|0;
                    $ij557 = $4602;
                   }
                   label = 540;
                  } else {
                   label = 540;
                  }
                 } while(0);
                 if ((label|0) == 540) {
                  label = 0;
                 }
                 $4611 = $bgotonextstatement52;
                 $4612 = $4611&1;
                 if ($4612) {
                  $bgotonextstatement62 = 1;
                  $4613 = (($4) + 128|0);
                  $4614 = +HEAPF64[$4613>>3];
                  $4615 = (($4) + 360|0);
                  $4616 = +HEAPF64[$4615>>3];
                  $4617 = $4614 * $4616;
                  $x229 = $4617;
                  $4618 = (($4) + 264|0);
                  $4619 = +HEAPF64[$4618>>3];
                  $4620 = (($4) + 136|0);
                  $4621 = +HEAPF64[$4620>>3];
                  $4622 = $4619 * $4621;
                  $x230 = $4622;
                  $4623 = (($4) + 128|0);
                  $4624 = +HEAPF64[$4623>>3];
                  $4625 = 1.0 * $4624;
                  $x231 = $4625;
                  $4626 = (($4) + 240|0);
                  $4627 = +HEAPF64[$4626>>3];
                  $4628 = (($4) + 136|0);
                  $4629 = +HEAPF64[$4628>>3];
                  $4630 = $4627 * $4629;
                  $x232 = $4630;
                  $4631 = (($4) + 288|0);
                  $4632 = +HEAPF64[$4631>>3];
                  $4633 = (($4) + 136|0);
                  $4634 = +HEAPF64[$4633>>3];
                  $4635 = $4632 * $4634;
                  $x233 = $4635;
                  $4636 = (($4) + 360|0);
                  $4637 = +HEAPF64[$4636>>3];
                  $4638 = (($4) + 136|0);
                  $4639 = +HEAPF64[$4638>>3];
                  $4640 = $4637 * $4639;
                  $4641 = (($4) + 128|0);
                  $4642 = +HEAPF64[$4641>>3];
                  $4643 = (($4) + 288|0);
                  $4644 = +HEAPF64[$4643>>3];
                  $4645 = $4642 * $4644;
                  $4646 = $4640 + $4645;
                  $x234 = $4646;
                  $4647 = (($4) + 160|0);
                  $4648 = +HEAPF64[$4647>>3];
                  $4649 = 1.5707963267949001 + $4648;
                  $4650 = (+__Z5IKabsd($4649));
                  $4651 = 3.14159265358979 + $4650;
                  $4652 = (+__Z6IKfmoddd($4651,6.2831853071795898));
                  $4653 = -3.14159265358979 + $4652;
                  HEAPF64[$evalcond31>>3] = $4653;
                  $4654 = (($4) + 432|0);
                  $4655 = +HEAPF64[$4654>>3];
                  $4656 = (($evalcond31) + 8|0);
                  HEAPF64[$4656>>3] = $4655;
                  $4657 = $x231;
                  $4658 = -1.0 * $4657;
                  $4659 = (($4) + 360|0);
                  $4660 = +HEAPF64[$4659>>3];
                  $4661 = $4658 + $4660;
                  $4662 = (($evalcond31) + 16|0);
                  HEAPF64[$4662>>3] = $4661;
                  $4663 = (($4) + 136|0);
                  $4664 = +HEAPF64[$4663>>3];
                  $4665 = (($4) + 288|0);
                  $4666 = +HEAPF64[$4665>>3];
                  $4667 = $4664 + $4666;
                  $4668 = (($evalcond31) + 24|0);
                  HEAPF64[$4668>>3] = $4667;
                  $4669 = $x234;
                  $4670 = (($evalcond31) + 32|0);
                  HEAPF64[$4670>>3] = $4669;
                  $4671 = $x234;
                  $4672 = (($evalcond31) + 40|0);
                  HEAPF64[$4672>>3] = $4671;
                  $4673 = $x229;
                  $4674 = -1.0 + $4673;
                  $4675 = $x233;
                  $4676 = -1.0 * $4675;
                  $4677 = $4674 + $4676;
                  $4678 = (($evalcond31) + 48|0);
                  HEAPF64[$4678>>3] = $4677;
                  $4679 = (($4) + 128|0);
                  $4680 = +HEAPF64[$4679>>3];
                  $4681 = (($4) + 312|0);
                  $4682 = +HEAPF64[$4681>>3];
                  $4683 = $4680 * $4682;
                  $4684 = $x232;
                  $4685 = -1.0 * $4684;
                  $4686 = $4683 + $4685;
                  $4687 = (($evalcond31) + 56|0);
                  HEAPF64[$4687>>3] = $4686;
                  $4688 = (($4) + 128|0);
                  $4689 = +HEAPF64[$4688>>3];
                  $4690 = (($4) + 336|0);
                  $4691 = +HEAPF64[$4690>>3];
                  $4692 = $4689 * $4691;
                  $4693 = $x230;
                  $4694 = -1.0 * $4693;
                  $4695 = $4692 + $4694;
                  $4696 = (($evalcond31) + 64|0);
                  HEAPF64[$4696>>3] = $4695;
                  $4697 = $x232;
                  $4698 = (($4) + 312|0);
                  $4699 = +HEAPF64[$4698>>3];
                  $4700 = -1.0 * $4699;
                  $4701 = $x231;
                  $4702 = $4700 * $4701;
                  $4703 = $4697 + $4702;
                  $4704 = (($evalcond31) + 72|0);
                  HEAPF64[$4704>>3] = $4703;
                  $4705 = $x230;
                  $4706 = (($4) + 336|0);
                  $4707 = +HEAPF64[$4706>>3];
                  $4708 = -1.0 * $4707;
                  $4709 = $x231;
                  $4710 = $4708 * $4709;
                  $4711 = $4705 + $4710;
                  $4712 = (($evalcond31) + 80|0);
                  HEAPF64[$4712>>3] = $4711;
                  $4713 = $x233;
                  $4714 = 1.0 + $4713;
                  $4715 = $x229;
                  $4716 = -1.0 * $4715;
                  $4717 = $4714 + $4716;
                  $4718 = (($evalcond31) + 88|0);
                  HEAPF64[$4718>>3] = $4717;
                  $4719 = +HEAPF64[$evalcond31>>3];
                  $4720 = (+__Z5IKabsd($4719));
                  $4721 = $4720 < 9.9999999999999995E-7;
                  L1291: do {
                   if ($4721) {
                    $4722 = (($evalcond31) + 8|0);
                    $4723 = +HEAPF64[$4722>>3];
                    $4724 = (+__Z5IKabsd($4723));
                    $4725 = $4724 < 9.9999999999999995E-7;
                    if (!($4725)) {
                     label = 626;
                     break;
                    }
                    $4726 = (($evalcond31) + 16|0);
                    $4727 = +HEAPF64[$4726>>3];
                    $4728 = (+__Z5IKabsd($4727));
                    $4729 = $4728 < 9.9999999999999995E-7;
                    if (!($4729)) {
                     label = 626;
                     break;
                    }
                    $4730 = (($evalcond31) + 24|0);
                    $4731 = +HEAPF64[$4730>>3];
                    $4732 = (+__Z5IKabsd($4731));
                    $4733 = $4732 < 9.9999999999999995E-7;
                    if (!($4733)) {
                     label = 626;
                     break;
                    }
                    $4734 = (($evalcond31) + 32|0);
                    $4735 = +HEAPF64[$4734>>3];
                    $4736 = (+__Z5IKabsd($4735));
                    $4737 = $4736 < 9.9999999999999995E-7;
                    if (!($4737)) {
                     label = 626;
                     break;
                    }
                    $4738 = (($evalcond31) + 40|0);
                    $4739 = +HEAPF64[$4738>>3];
                    $4740 = (+__Z5IKabsd($4739));
                    $4741 = $4740 < 9.9999999999999995E-7;
                    if (!($4741)) {
                     label = 626;
                     break;
                    }
                    $4742 = (($evalcond31) + 48|0);
                    $4743 = +HEAPF64[$4742>>3];
                    $4744 = (+__Z5IKabsd($4743));
                    $4745 = $4744 < 9.9999999999999995E-7;
                    if (!($4745)) {
                     label = 626;
                     break;
                    }
                    $4746 = (($evalcond31) + 56|0);
                    $4747 = +HEAPF64[$4746>>3];
                    $4748 = (+__Z5IKabsd($4747));
                    $4749 = $4748 < 9.9999999999999995E-7;
                    if (!($4749)) {
                     label = 626;
                     break;
                    }
                    $4750 = (($evalcond31) + 64|0);
                    $4751 = +HEAPF64[$4750>>3];
                    $4752 = (+__Z5IKabsd($4751));
                    $4753 = $4752 < 9.9999999999999995E-7;
                    if (!($4753)) {
                     label = 626;
                     break;
                    }
                    $4754 = (($evalcond31) + 72|0);
                    $4755 = +HEAPF64[$4754>>3];
                    $4756 = (+__Z5IKabsd($4755));
                    $4757 = $4756 < 9.9999999999999995E-7;
                    if (!($4757)) {
                     label = 626;
                     break;
                    }
                    $4758 = (($evalcond31) + 80|0);
                    $4759 = +HEAPF64[$4758>>3];
                    $4760 = (+__Z5IKabsd($4759));
                    $4761 = $4760 < 9.9999999999999995E-7;
                    if (!($4761)) {
                     label = 626;
                     break;
                    }
                    $4762 = (($evalcond31) + 88|0);
                    $4763 = +HEAPF64[$4762>>3];
                    $4764 = (+__Z5IKabsd($4763));
                    $4765 = $4764 < 9.9999999999999995E-7;
                    if (!($4765)) {
                     label = 626;
                     break;
                    }
                    $bgotonextstatement62 = 0;
                    ;HEAP8[$j5valid66+0>>0]=0|0;
                    $4766 = (($4) + 553|0);
                    HEAP8[$4766>>0] = 1;
                    $4767 = (($4) + 384|0);
                    $4768 = +HEAPF64[$4767>>3];
                    $4769 = -1.0 * $4768;
                    $4770 = (+__Z5IKabsd($4769));
                    $4771 = $4770 < 1.9999999999999999E-6;
                    do {
                     if ($4771) {
                      $4772 = (($4) + 408|0);
                      $4773 = +HEAPF64[$4772>>3];
                      $4774 = -1.0 * $4773;
                      $4775 = (+__Z5IKabsd($4774));
                      $4776 = $4775 < 1.9999999999999999E-6;
                      if (!($4776)) {
                       break;
                      }
                      $4777 = (($4) + 384|0);
                      $4778 = +HEAPF64[$4777>>3];
                      $4779 = -1.0 * $4778;
                      $4780 = (+__Z5IKsqrd($4779));
                      $4781 = (($4) + 408|0);
                      $4782 = +HEAPF64[$4781>>3];
                      $4783 = -1.0 * $4782;
                      $4784 = (+__Z5IKsqrd($4783));
                      $4785 = $4780 + $4784;
                      $4786 = $4785 - 1.0;
                      $4787 = (+__Z5IKabsd($4786));
                      $4788 = $4787 <= 1.9999999999999999E-6;
                      if (!($4788)) {
                       break;
                      }
                      break L1291;
                     }
                    } while(0);
                    $4789 = (($4) + 384|0);
                    $4790 = +HEAPF64[$4789>>3];
                    $4791 = -1.0 * $4790;
                    $4792 = (($4) + 408|0);
                    $4793 = +HEAPF64[$4792>>3];
                    $4794 = -1.0 * $4793;
                    $4795 = (+__Z7IKatan2dd($4791,$4794));
                    HEAPF64[$j5array63>>3] = $4795;
                    $4796 = +HEAPF64[$j5array63>>3];
                    $4797 = (+__Z5IKsind($4796));
                    HEAPF64[$sj5array65>>3] = $4797;
                    $4798 = +HEAPF64[$j5array63>>3];
                    $4799 = (+__Z5IKcosd($4798));
                    HEAPF64[$cj5array64>>3] = $4799;
                    $4800 = +HEAPF64[$j5array63>>3];
                    $4801 = $4800 > 3.14159265358979;
                    if ($4801) {
                     $4802 = +HEAPF64[$j5array63>>3];
                     $4803 = $4802 - 6.2831853071795898;
                     HEAPF64[$j5array63>>3] = $4803;
                    } else {
                     $4804 = +HEAPF64[$j5array63>>3];
                     $4805 = $4804 < -3.14159265358979;
                     if ($4805) {
                      $4806 = +HEAPF64[$j5array63>>3];
                      $4807 = $4806 + 6.2831853071795898;
                      HEAPF64[$j5array63>>3] = $4807;
                     }
                    }
                    HEAP8[$j5valid66>>0] = 1;
                    $ij567 = 0;
                    while(1) {
                     $4808 = $ij567;
                     $4809 = ($4808|0)<(1);
                     if (!($4809)) {
                      break;
                     }
                     $4810 = $ij567;
                     $4811 = (($j5valid66) + ($4810)|0);
                     $4812 = HEAP8[$4811>>0]|0;
                     $4813 = $4812&1;
                     L1319: do {
                      if ($4813) {
                       $4814 = $ij567;
                       $4815 = $4814&255;
                       $4816 = (($4) + 551|0);
                       HEAP8[$4816>>0] = $4815;
                       $4817 = (($4) + 551|0);
                       $4818 = (($4817) + 1|0);
                       HEAP8[$4818>>0] = -1;
                       $4819 = $ij567;
                       $4820 = (($4819) + 1)|0;
                       $iij568 = $4820;
                       L1322: while(1) {
                        $4821 = $iij568;
                        $4822 = ($4821|0)<(1);
                        if (!($4822)) {
                         break;
                        }
                        $4823 = $iij568;
                        $4824 = (($j5valid66) + ($4823)|0);
                        $4825 = HEAP8[$4824>>0]|0;
                        $4826 = $4825&1;
                        do {
                         if ($4826) {
                          $4827 = $ij567;
                          $4828 = (($cj5array64) + ($4827<<3)|0);
                          $4829 = +HEAPF64[$4828>>3];
                          $4830 = $iij568;
                          $4831 = (($cj5array64) + ($4830<<3)|0);
                          $4832 = +HEAPF64[$4831>>3];
                          $4833 = $4829 - $4832;
                          $4834 = (+__Z5IKabsd($4833));
                          $4835 = $4834 < 9.9999999999999995E-7;
                          if (!($4835)) {
                           break;
                          }
                          $4836 = $ij567;
                          $4837 = (($sj5array65) + ($4836<<3)|0);
                          $4838 = +HEAPF64[$4837>>3];
                          $4839 = $iij568;
                          $4840 = (($sj5array65) + ($4839<<3)|0);
                          $4841 = +HEAPF64[$4840>>3];
                          $4842 = $4838 - $4841;
                          $4843 = (+__Z5IKabsd($4842));
                          $4844 = $4843 < 9.9999999999999995E-7;
                          if ($4844) {
                           label = 573;
                           break L1322;
                          }
                         }
                        } while(0);
                        $4851 = $iij568;
                        $4852 = (($4851) + 1)|0;
                        $iij568 = $4852;
                       }
                       if ((label|0) == 573) {
                        label = 0;
                        $4845 = $iij568;
                        $4846 = (($j5valid66) + ($4845)|0);
                        HEAP8[$4846>>0] = 0;
                        $4847 = $iij568;
                        $4848 = $4847&255;
                        $4849 = (($4) + 551|0);
                        $4850 = (($4849) + 1|0);
                        HEAP8[$4850>>0] = $4848;
                       }
                       $4853 = $ij567;
                       $4854 = (($j5array63) + ($4853<<3)|0);
                       $4855 = +HEAPF64[$4854>>3];
                       $4856 = (($4) + 200|0);
                       HEAPF64[$4856>>3] = $4855;
                       $4857 = $ij567;
                       $4858 = (($cj5array64) + ($4857<<3)|0);
                       $4859 = +HEAPF64[$4858>>3];
                       $4860 = (($4) + 208|0);
                       HEAPF64[$4860>>3] = $4859;
                       $4861 = $ij567;
                       $4862 = (($sj5array65) + ($4861<<3)|0);
                       $4863 = +HEAPF64[$4862>>3];
                       $4864 = (($4) + 216|0);
                       HEAPF64[$4864>>3] = $4863;
                       $4865 = (($4) + 200|0);
                       $4866 = +HEAPF64[$4865>>3];
                       $4867 = (+__Z5IKsind($4866));
                       $x235 = $4867;
                       $4868 = (($4) + 200|0);
                       $4869 = +HEAPF64[$4868>>3];
                       $4870 = (+__Z5IKcosd($4869));
                       $x236 = $4870;
                       $4871 = (($4) + 288|0);
                       $4872 = +HEAPF64[$4871>>3];
                       $4873 = 1.0 * $4872;
                       $x237 = $4873;
                       $4874 = $x236;
                       $4875 = 1.0 * $4874;
                       $x238 = $4875;
                       $4876 = $x235;
                       $4877 = (($4) + 384|0);
                       $4878 = +HEAPF64[$4877>>3];
                       $4879 = $4876 + $4878;
                       HEAPF64[$evalcond69>>3] = $4879;
                       $4880 = $x236;
                       $4881 = (($4) + 408|0);
                       $4882 = +HEAPF64[$4881>>3];
                       $4883 = $4880 + $4882;
                       $4884 = (($evalcond69) + 8|0);
                       HEAPF64[$4884>>3] = $4883;
                       $4885 = (($4) + 360|0);
                       $4886 = +HEAPF64[$4885>>3];
                       $4887 = $x235;
                       $4888 = $4886 * $4887;
                       $4889 = (($4) + 264|0);
                       $4890 = +HEAPF64[$4889>>3];
                       $4891 = $4888 + $4890;
                       $4892 = (($evalcond69) + 16|0);
                       HEAPF64[$4892>>3] = $4891;
                       $4893 = (($4) + 288|0);
                       $4894 = +HEAPF64[$4893>>3];
                       $4895 = $x236;
                       $4896 = $4894 * $4895;
                       $4897 = (($4) + 312|0);
                       $4898 = +HEAPF64[$4897>>3];
                       $4899 = $4896 + $4898;
                       $4900 = (($evalcond69) + 24|0);
                       HEAPF64[$4900>>3] = $4899;
                       $4901 = (($4) + 360|0);
                       $4902 = +HEAPF64[$4901>>3];
                       $4903 = -1.0 * $4902;
                       $4904 = $x238;
                       $4905 = $4903 * $4904;
                       $4906 = (($4) + 240|0);
                       $4907 = +HEAPF64[$4906>>3];
                       $4908 = $4905 + $4907;
                       $4909 = (($evalcond69) + 32|0);
                       HEAPF64[$4909>>3] = $4908;
                       $4910 = $x235;
                       $4911 = -1.0 * $4910;
                       $4912 = $x237;
                       $4913 = $4911 * $4912;
                       $4914 = (($4) + 336|0);
                       $4915 = +HEAPF64[$4914>>3];
                       $4916 = $4913 + $4915;
                       $4917 = (($evalcond69) + 40|0);
                       HEAPF64[$4917>>3] = $4916;
                       $4918 = (($4) + 264|0);
                       $4919 = +HEAPF64[$4918>>3];
                       $4920 = (($4) + 360|0);
                       $4921 = +HEAPF64[$4920>>3];
                       $4922 = $4919 * $4921;
                       $4923 = $x235;
                       $4924 = $4922 + $4923;
                       $4925 = (($4) + 336|0);
                       $4926 = +HEAPF64[$4925>>3];
                       $4927 = -1.0 * $4926;
                       $4928 = $x237;
                       $4929 = $4927 * $4928;
                       $4930 = $4924 + $4929;
                       $4931 = (($evalcond69) + 48|0);
                       HEAPF64[$4931>>3] = $4930;
                       $4932 = (($4) + 240|0);
                       $4933 = +HEAPF64[$4932>>3];
                       $4934 = (($4) + 360|0);
                       $4935 = +HEAPF64[$4934>>3];
                       $4936 = $4933 * $4935;
                       $4937 = $x238;
                       $4938 = -1.0 * $4937;
                       $4939 = $4936 + $4938;
                       $4940 = (($4) + 312|0);
                       $4941 = +HEAPF64[$4940>>3];
                       $4942 = -1.0 * $4941;
                       $4943 = $x237;
                       $4944 = $4942 * $4943;
                       $4945 = $4939 + $4944;
                       $4946 = (($evalcond69) + 56|0);
                       HEAPF64[$4946>>3] = $4945;
                       $4947 = +HEAPF64[$evalcond69>>3];
                       $4948 = (+__Z5IKabsd($4947));
                       $4949 = $4948 > 5.0000000000000004E-6;
                       do {
                        if (!($4949)) {
                         $4950 = (($evalcond69) + 8|0);
                         $4951 = +HEAPF64[$4950>>3];
                         $4952 = (+__Z5IKabsd($4951));
                         $4953 = $4952 > 5.0000000000000004E-6;
                         if ($4953) {
                          break;
                         }
                         $4954 = (($evalcond69) + 16|0);
                         $4955 = +HEAPF64[$4954>>3];
                         $4956 = (+__Z5IKabsd($4955));
                         $4957 = $4956 > 5.0000000000000004E-6;
                         if ($4957) {
                          break;
                         }
                         $4958 = (($evalcond69) + 24|0);
                         $4959 = +HEAPF64[$4958>>3];
                         $4960 = (+__Z5IKabsd($4959));
                         $4961 = $4960 > 5.0000000000000004E-6;
                         if ($4961) {
                          break;
                         }
                         $4962 = (($evalcond69) + 32|0);
                         $4963 = +HEAPF64[$4962>>3];
                         $4964 = (+__Z5IKabsd($4963));
                         $4965 = $4964 > 5.0000000000000004E-6;
                         if ($4965) {
                          break;
                         }
                         $4966 = (($evalcond69) + 40|0);
                         $4967 = +HEAPF64[$4966>>3];
                         $4968 = (+__Z5IKabsd($4967));
                         $4969 = $4968 > 5.0000000000000004E-6;
                         if ($4969) {
                          break;
                         }
                         $4970 = (($evalcond69) + 48|0);
                         $4971 = +HEAPF64[$4970>>3];
                         $4972 = (+__Z5IKabsd($4971));
                         $4973 = $4972 > 5.0000000000000004E-6;
                         if ($4973) {
                          break;
                         }
                         $4974 = (($evalcond69) + 56|0);
                         $4975 = +HEAPF64[$4974>>3];
                         $4976 = (+__Z5IKabsd($4975));
                         $4977 = $4976 > 5.0000000000000004E-6;
                         if ($4977) {
                          break;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos70,6);
                         __THREW__ = 0;
                         $4978 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4979 = __THREW__; __THREW__ = 0;
                         $4980 = $4979&1;
                         if ($4980) {
                          label = 620;
                          break L1;
                         }
                         $4981 = (($4978) + 17|0);
                         HEAP8[$4981>>0] = 1;
                         $4982 = +HEAPF64[$4>>3];
                         __THREW__ = 0;
                         $4983 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4984 = __THREW__; __THREW__ = 0;
                         $4985 = $4984&1;
                         if ($4985) {
                          label = 620;
                          break L1;
                         }
                         $4986 = (($4983) + 8|0);
                         HEAPF64[$4986>>3] = $4982;
                         $4987 = (($4) + 536|0);
                         $4988 = HEAP8[$4987>>0]|0;
                         __THREW__ = 0;
                         $4989 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4990 = __THREW__; __THREW__ = 0;
                         $4991 = $4990&1;
                         if ($4991) {
                          label = 620;
                          break L1;
                         }
                         $4992 = (($4989) + 19|0);
                         HEAP8[$4992>>0] = $4988;
                         $4993 = (($4) + 536|0);
                         $4994 = (($4993) + 1|0);
                         $4995 = HEAP8[$4994>>0]|0;
                         __THREW__ = 0;
                         $4996 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4997 = __THREW__; __THREW__ = 0;
                         $4998 = $4997&1;
                         if ($4998) {
                          label = 620;
                          break L1;
                         }
                         $4999 = (($4996) + 19|0);
                         $5000 = (($4999) + 1|0);
                         HEAP8[$5000>>0] = $4995;
                         $5001 = (($4) + 538|0);
                         $5002 = HEAP8[$5001>>0]|0;
                         __THREW__ = 0;
                         $5003 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $5004 = __THREW__; __THREW__ = 0;
                         $5005 = $5004&1;
                         if ($5005) {
                          label = 620;
                          break L1;
                         }
                         $5006 = (($5003) + 18|0);
                         HEAP8[$5006>>0] = $5002;
                         __THREW__ = 0;
                         $5007 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $5008 = __THREW__; __THREW__ = 0;
                         $5009 = $5008&1;
                         if ($5009) {
                          label = 620;
                          break L1;
                         }
                         $5010 = (($5007) + 17|0);
                         HEAP8[$5010>>0] = 1;
                         $5011 = (($4) + 40|0);
                         $5012 = +HEAPF64[$5011>>3];
                         __THREW__ = 0;
                         $5013 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $5014 = __THREW__; __THREW__ = 0;
                         $5015 = $5014&1;
                         if ($5015) {
                          label = 620;
                          break L1;
                         }
                         $5016 = (($5013) + 8|0);
                         HEAPF64[$5016>>3] = $5012;
                         $5017 = (($4) + 539|0);
                         $5018 = HEAP8[$5017>>0]|0;
                         __THREW__ = 0;
                         $5019 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $5020 = __THREW__; __THREW__ = 0;
                         $5021 = $5020&1;
                         if ($5021) {
                          label = 620;
                          break L1;
                         }
                         $5022 = (($5019) + 19|0);
                         HEAP8[$5022>>0] = $5018;
                         $5023 = (($4) + 539|0);
                         $5024 = (($5023) + 1|0);
                         $5025 = HEAP8[$5024>>0]|0;
                         __THREW__ = 0;
                         $5026 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $5027 = __THREW__; __THREW__ = 0;
                         $5028 = $5027&1;
                         if ($5028) {
                          label = 620;
                          break L1;
                         }
                         $5029 = (($5026) + 19|0);
                         $5030 = (($5029) + 1|0);
                         HEAP8[$5030>>0] = $5025;
                         $5031 = (($4) + 541|0);
                         $5032 = HEAP8[$5031>>0]|0;
                         __THREW__ = 0;
                         $5033 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $5034 = __THREW__; __THREW__ = 0;
                         $5035 = $5034&1;
                         if ($5035) {
                          label = 620;
                          break L1;
                         }
                         $5036 = (($5033) + 18|0);
                         HEAP8[$5036>>0] = $5032;
                         __THREW__ = 0;
                         $5037 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5038 = __THREW__; __THREW__ = 0;
                         $5039 = $5038&1;
                         if ($5039) {
                          label = 620;
                          break L1;
                         }
                         $5040 = (($5037) + 17|0);
                         HEAP8[$5040>>0] = 1;
                         $5041 = (($4) + 80|0);
                         $5042 = +HEAPF64[$5041>>3];
                         __THREW__ = 0;
                         $5043 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5044 = __THREW__; __THREW__ = 0;
                         $5045 = $5044&1;
                         if ($5045) {
                          label = 620;
                          break L1;
                         }
                         $5046 = (($5043) + 8|0);
                         HEAPF64[$5046>>3] = $5042;
                         $5047 = (($4) + 542|0);
                         $5048 = HEAP8[$5047>>0]|0;
                         __THREW__ = 0;
                         $5049 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5050 = __THREW__; __THREW__ = 0;
                         $5051 = $5050&1;
                         if ($5051) {
                          label = 620;
                          break L1;
                         }
                         $5052 = (($5049) + 19|0);
                         HEAP8[$5052>>0] = $5048;
                         $5053 = (($4) + 542|0);
                         $5054 = (($5053) + 1|0);
                         $5055 = HEAP8[$5054>>0]|0;
                         __THREW__ = 0;
                         $5056 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5057 = __THREW__; __THREW__ = 0;
                         $5058 = $5057&1;
                         if ($5058) {
                          label = 620;
                          break L1;
                         }
                         $5059 = (($5056) + 19|0);
                         $5060 = (($5059) + 1|0);
                         HEAP8[$5060>>0] = $5055;
                         $5061 = (($4) + 544|0);
                         $5062 = HEAP8[$5061>>0]|0;
                         __THREW__ = 0;
                         $5063 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $5064 = __THREW__; __THREW__ = 0;
                         $5065 = $5064&1;
                         if ($5065) {
                          label = 620;
                          break L1;
                         }
                         $5066 = (($5063) + 18|0);
                         HEAP8[$5066>>0] = $5062;
                         __THREW__ = 0;
                         $5067 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5068 = __THREW__; __THREW__ = 0;
                         $5069 = $5068&1;
                         if ($5069) {
                          label = 620;
                          break L1;
                         }
                         $5070 = (($5067) + 17|0);
                         HEAP8[$5070>>0] = 1;
                         $5071 = (($4) + 120|0);
                         $5072 = +HEAPF64[$5071>>3];
                         __THREW__ = 0;
                         $5073 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5074 = __THREW__; __THREW__ = 0;
                         $5075 = $5074&1;
                         if ($5075) {
                          label = 620;
                          break L1;
                         }
                         $5076 = (($5073) + 8|0);
                         HEAPF64[$5076>>3] = $5072;
                         $5077 = (($4) + 545|0);
                         $5078 = HEAP8[$5077>>0]|0;
                         __THREW__ = 0;
                         $5079 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5080 = __THREW__; __THREW__ = 0;
                         $5081 = $5080&1;
                         if ($5081) {
                          label = 620;
                          break L1;
                         }
                         $5082 = (($5079) + 19|0);
                         HEAP8[$5082>>0] = $5078;
                         $5083 = (($4) + 545|0);
                         $5084 = (($5083) + 1|0);
                         $5085 = HEAP8[$5084>>0]|0;
                         __THREW__ = 0;
                         $5086 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5087 = __THREW__; __THREW__ = 0;
                         $5088 = $5087&1;
                         if ($5088) {
                          label = 620;
                          break L1;
                         }
                         $5089 = (($5086) + 19|0);
                         $5090 = (($5089) + 1|0);
                         HEAP8[$5090>>0] = $5085;
                         $5091 = (($4) + 547|0);
                         $5092 = HEAP8[$5091>>0]|0;
                         __THREW__ = 0;
                         $5093 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $5094 = __THREW__; __THREW__ = 0;
                         $5095 = $5094&1;
                         if ($5095) {
                          label = 620;
                          break L1;
                         }
                         $5096 = (($5093) + 18|0);
                         HEAP8[$5096>>0] = $5092;
                         __THREW__ = 0;
                         $5097 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5098 = __THREW__; __THREW__ = 0;
                         $5099 = $5098&1;
                         if ($5099) {
                          label = 620;
                          break L1;
                         }
                         $5100 = (($5097) + 17|0);
                         HEAP8[$5100>>0] = 1;
                         $5101 = (($4) + 160|0);
                         $5102 = +HEAPF64[$5101>>3];
                         __THREW__ = 0;
                         $5103 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5104 = __THREW__; __THREW__ = 0;
                         $5105 = $5104&1;
                         if ($5105) {
                          label = 620;
                          break L1;
                         }
                         $5106 = (($5103) + 8|0);
                         HEAPF64[$5106>>3] = $5102;
                         $5107 = (($4) + 548|0);
                         $5108 = HEAP8[$5107>>0]|0;
                         __THREW__ = 0;
                         $5109 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5110 = __THREW__; __THREW__ = 0;
                         $5111 = $5110&1;
                         if ($5111) {
                          label = 620;
                          break L1;
                         }
                         $5112 = (($5109) + 19|0);
                         HEAP8[$5112>>0] = $5108;
                         $5113 = (($4) + 548|0);
                         $5114 = (($5113) + 1|0);
                         $5115 = HEAP8[$5114>>0]|0;
                         __THREW__ = 0;
                         $5116 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5117 = __THREW__; __THREW__ = 0;
                         $5118 = $5117&1;
                         if ($5118) {
                          label = 620;
                          break L1;
                         }
                         $5119 = (($5116) + 19|0);
                         $5120 = (($5119) + 1|0);
                         HEAP8[$5120>>0] = $5115;
                         $5121 = (($4) + 550|0);
                         $5122 = HEAP8[$5121>>0]|0;
                         __THREW__ = 0;
                         $5123 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $5124 = __THREW__; __THREW__ = 0;
                         $5125 = $5124&1;
                         if ($5125) {
                          label = 620;
                          break L1;
                         }
                         $5126 = (($5123) + 18|0);
                         HEAP8[$5126>>0] = $5122;
                         __THREW__ = 0;
                         $5127 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5128 = __THREW__; __THREW__ = 0;
                         $5129 = $5128&1;
                         if ($5129) {
                          label = 620;
                          break L1;
                         }
                         $5130 = (($5127) + 17|0);
                         HEAP8[$5130>>0] = 1;
                         $5131 = (($4) + 200|0);
                         $5132 = +HEAPF64[$5131>>3];
                         __THREW__ = 0;
                         $5133 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5134 = __THREW__; __THREW__ = 0;
                         $5135 = $5134&1;
                         if ($5135) {
                          label = 620;
                          break L1;
                         }
                         $5136 = (($5133) + 8|0);
                         HEAPF64[$5136>>3] = $5132;
                         $5137 = (($4) + 551|0);
                         $5138 = HEAP8[$5137>>0]|0;
                         __THREW__ = 0;
                         $5139 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5140 = __THREW__; __THREW__ = 0;
                         $5141 = $5140&1;
                         if ($5141) {
                          label = 620;
                          break L1;
                         }
                         $5142 = (($5139) + 19|0);
                         HEAP8[$5142>>0] = $5138;
                         $5143 = (($4) + 551|0);
                         $5144 = (($5143) + 1|0);
                         $5145 = HEAP8[$5144>>0]|0;
                         __THREW__ = 0;
                         $5146 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5147 = __THREW__; __THREW__ = 0;
                         $5148 = $5147&1;
                         if ($5148) {
                          label = 620;
                          break L1;
                         }
                         $5149 = (($5146) + 19|0);
                         $5150 = (($5149) + 1|0);
                         HEAP8[$5150>>0] = $5145;
                         $5151 = (($4) + 553|0);
                         $5152 = HEAP8[$5151>>0]|0;
                         __THREW__ = 0;
                         $5153 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5154 = __THREW__; __THREW__ = 0;
                         $5155 = $5154&1;
                         if ($5155) {
                          label = 620;
                          break L1;
                         }
                         $5156 = (($5153) + 18|0);
                         HEAP8[$5156>>0] = $5152;
                         __THREW__ = 0;
                         invoke_vii(382,($vfree71|0),0);
                         $5157 = __THREW__; __THREW__ = 0;
                         $5158 = $5157&1;
                         if ($5158) {
                          label = 620;
                          break L1;
                         }
                         $5159 = $1;
                         $5160 = HEAP32[$5159>>2]|0;
                         $5161 = (($5160) + 8|0);
                         $5162 = HEAP32[$5161>>2]|0;
                         __THREW__ = 0;
                         (invoke_iiii($5162|0,($5159|0),($vinfos70|0),($vfree71|0))|0);
                         $5163 = __THREW__; __THREW__ = 0;
                         $5164 = $5163&1;
                         if ($5164) {
                          label = 621;
                          break L1;
                         }
                         __THREW__ = 0;
                         invoke_vi(366,($vfree71|0));
                         $5165 = __THREW__; __THREW__ = 0;
                         $5166 = $5165&1;
                         if ($5166) {
                          label = 620;
                          break L1;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos70);
                         break L1319;
                        }
                       } while(0);
                      } else {
                      }
                     } while(0);
                     $5167 = $ij567;
                     $5168 = (($5167) + 1)|0;
                     $ij567 = $5168;
                    }
                    label = 626;
                   } else {
                    label = 626;
                   }
                  } while(0);
                  if ((label|0) == 626) {
                   label = 0;
                  }
                  $5177 = $bgotonextstatement62;
                  $5178 = $5177&1;
                  if ($5178) {
                   $bgotonextstatement72 = 1;
                   $5179 = (($4) + 432|0);
                   $5180 = +HEAPF64[$5179>>3];
                   $5181 = (($4) + 168|0);
                   $5182 = +HEAPF64[$5181>>3];
                   $5183 = -1.0 * $5182;
                   $5184 = $5180 + $5183;
                   $x239 = $5184;
                   $5185 = (($4) + 176|0);
                   $5186 = +HEAPF64[$5185>>3];
                   $5187 = (($4) + 360|0);
                   $5188 = +HEAPF64[$5187>>3];
                   $5189 = $5186 + $5188;
                   $x240 = $5189;
                   $5190 = (($4) + 168|0);
                   $5191 = +HEAPF64[$5190>>3];
                   $5192 = 1.0 * $5191;
                   $x241 = $5192;
                   $5193 = (($4) + 120|0);
                   $5194 = +HEAPF64[$5193>>3];
                   $5195 = (+__Z5IKabsd($5194));
                   $5196 = 3.14159265358979 + $5195;
                   $5197 = (+__Z6IKfmoddd($5196,6.2831853071795898));
                   $5198 = -3.14159265358979 + $5197;
                   HEAPF64[$evalcond31>>3] = $5198;
                   $5199 = $x239;
                   $5200 = (($evalcond31) + 8|0);
                   HEAPF64[$5200>>3] = $5199;
                   $5201 = $x239;
                   $5202 = (($evalcond31) + 16|0);
                   HEAPF64[$5202>>3] = $5201;
                   $5203 = $x240;
                   $5204 = (($evalcond31) + 24|0);
                   HEAPF64[$5204>>3] = $5203;
                   $5205 = (($4) + 288|0);
                   $5206 = +HEAPF64[$5205>>3];
                   $5207 = (($evalcond31) + 32|0);
                   HEAPF64[$5207>>3] = $5206;
                   $5208 = $x240;
                   $5209 = (($evalcond31) + 40|0);
                   HEAPF64[$5209>>3] = $5208;
                   $5210 = (($4) + 360|0);
                   $5211 = +HEAPF64[$5210>>3];
                   $5212 = -1.0 * $5211;
                   $5213 = $x241;
                   $5214 = $5212 * $5213;
                   $5215 = (($4) + 432|0);
                   $5216 = +HEAPF64[$5215>>3];
                   $5217 = -1.0 * $5216;
                   $5218 = (($4) + 176|0);
                   $5219 = +HEAPF64[$5218>>3];
                   $5220 = $5217 * $5219;
                   $5221 = $5214 + $5220;
                   $5222 = (($evalcond31) + 48|0);
                   HEAPF64[$5222>>3] = $5221;
                   $5223 = (($4) + 312|0);
                   $5224 = +HEAPF64[$5223>>3];
                   $5225 = (($4) + 176|0);
                   $5226 = +HEAPF64[$5225>>3];
                   $5227 = $5224 * $5226;
                   $5228 = (($4) + 384|0);
                   $5229 = +HEAPF64[$5228>>3];
                   $5230 = -1.0 * $5229;
                   $5231 = $x241;
                   $5232 = $5230 * $5231;
                   $5233 = $5227 + $5232;
                   $5234 = (($evalcond31) + 56|0);
                   HEAPF64[$5234>>3] = $5233;
                   $5235 = (($4) + 336|0);
                   $5236 = +HEAPF64[$5235>>3];
                   $5237 = (($4) + 176|0);
                   $5238 = +HEAPF64[$5237>>3];
                   $5239 = $5236 * $5238;
                   $5240 = (($4) + 408|0);
                   $5241 = +HEAPF64[$5240>>3];
                   $5242 = -1.0 * $5241;
                   $5243 = $x241;
                   $5244 = $5242 * $5243;
                   $5245 = $5239 + $5244;
                   $5246 = (($evalcond31) + 64|0);
                   HEAPF64[$5246>>3] = $5245;
                   $5247 = (($4) + 360|0);
                   $5248 = +HEAPF64[$5247>>3];
                   $5249 = (($4) + 176|0);
                   $5250 = +HEAPF64[$5249>>3];
                   $5251 = $5248 * $5250;
                   $5252 = 1.0 + $5251;
                   $5253 = (($4) + 432|0);
                   $5254 = +HEAPF64[$5253>>3];
                   $5255 = -1.0 * $5254;
                   $5256 = $x241;
                   $5257 = $5255 * $5256;
                   $5258 = $5252 + $5257;
                   $5259 = (($evalcond31) + 72|0);
                   HEAPF64[$5259>>3] = $5258;
                   $5260 = +HEAPF64[$evalcond31>>3];
                   $5261 = (+__Z5IKabsd($5260));
                   $5262 = $5261 < 9.9999999999999995E-7;
                   L1384: do {
                    if ($5262) {
                     $5263 = (($evalcond31) + 8|0);
                     $5264 = +HEAPF64[$5263>>3];
                     $5265 = (+__Z5IKabsd($5264));
                     $5266 = $5265 < 9.9999999999999995E-7;
                     if (!($5266)) {
                      label = 710;
                      break;
                     }
                     $5267 = (($evalcond31) + 16|0);
                     $5268 = +HEAPF64[$5267>>3];
                     $5269 = (+__Z5IKabsd($5268));
                     $5270 = $5269 < 9.9999999999999995E-7;
                     if (!($5270)) {
                      label = 710;
                      break;
                     }
                     $5271 = (($evalcond31) + 24|0);
                     $5272 = +HEAPF64[$5271>>3];
                     $5273 = (+__Z5IKabsd($5272));
                     $5274 = $5273 < 9.9999999999999995E-7;
                     if (!($5274)) {
                      label = 710;
                      break;
                     }
                     $5275 = (($evalcond31) + 32|0);
                     $5276 = +HEAPF64[$5275>>3];
                     $5277 = (+__Z5IKabsd($5276));
                     $5278 = $5277 < 9.9999999999999995E-7;
                     if (!($5278)) {
                      label = 710;
                      break;
                     }
                     $5279 = (($evalcond31) + 40|0);
                     $5280 = +HEAPF64[$5279>>3];
                     $5281 = (+__Z5IKabsd($5280));
                     $5282 = $5281 < 9.9999999999999995E-7;
                     if (!($5282)) {
                      label = 710;
                      break;
                     }
                     $5283 = (($evalcond31) + 48|0);
                     $5284 = +HEAPF64[$5283>>3];
                     $5285 = (+__Z5IKabsd($5284));
                     $5286 = $5285 < 9.9999999999999995E-7;
                     if (!($5286)) {
                      label = 710;
                      break;
                     }
                     $5287 = (($evalcond31) + 56|0);
                     $5288 = +HEAPF64[$5287>>3];
                     $5289 = (+__Z5IKabsd($5288));
                     $5290 = $5289 < 9.9999999999999995E-7;
                     if (!($5290)) {
                      label = 710;
                      break;
                     }
                     $5291 = (($evalcond31) + 64|0);
                     $5292 = +HEAPF64[$5291>>3];
                     $5293 = (+__Z5IKabsd($5292));
                     $5294 = $5293 < 9.9999999999999995E-7;
                     if (!($5294)) {
                      label = 710;
                      break;
                     }
                     $5295 = (($evalcond31) + 72|0);
                     $5296 = +HEAPF64[$5295>>3];
                     $5297 = (+__Z5IKabsd($5296));
                     $5298 = $5297 < 9.9999999999999995E-7;
                     if (!($5298)) {
                      label = 710;
                      break;
                     }
                     $bgotonextstatement72 = 0;
                     ;HEAP8[$j5valid76+0>>0]=0|0;
                     $5299 = (($4) + 553|0);
                     HEAP8[$5299>>0] = 1;
                     $5300 = (($4) + 264|0);
                     $5301 = +HEAPF64[$5300>>3];
                     $5302 = -1.0 * $5301;
                     $5303 = (+__Z5IKabsd($5302));
                     $5304 = $5303 < 1.9999999999999999E-6;
                     do {
                      if ($5304) {
                       $5305 = (($4) + 240|0);
                       $5306 = +HEAPF64[$5305>>3];
                       $5307 = (+__Z5IKabsd($5306));
                       $5308 = $5307 < 1.9999999999999999E-6;
                       if (!($5308)) {
                        break;
                       }
                       $5309 = (($4) + 264|0);
                       $5310 = +HEAPF64[$5309>>3];
                       $5311 = -1.0 * $5310;
                       $5312 = (+__Z5IKsqrd($5311));
                       $5313 = (($4) + 240|0);
                       $5314 = +HEAPF64[$5313>>3];
                       $5315 = (+__Z5IKsqrd($5314));
                       $5316 = $5312 + $5315;
                       $5317 = $5316 - 1.0;
                       $5318 = (+__Z5IKabsd($5317));
                       $5319 = $5318 <= 1.9999999999999999E-6;
                       if (!($5319)) {
                        break;
                       }
                       break L1384;
                      }
                     } while(0);
                     $5320 = (($4) + 264|0);
                     $5321 = +HEAPF64[$5320>>3];
                     $5322 = -1.0 * $5321;
                     $5323 = (($4) + 240|0);
                     $5324 = +HEAPF64[$5323>>3];
                     $5325 = (+__Z7IKatan2dd($5322,$5324));
                     HEAPF64[$j5array73>>3] = $5325;
                     $5326 = +HEAPF64[$j5array73>>3];
                     $5327 = (+__Z5IKsind($5326));
                     HEAPF64[$sj5array75>>3] = $5327;
                     $5328 = +HEAPF64[$j5array73>>3];
                     $5329 = (+__Z5IKcosd($5328));
                     HEAPF64[$cj5array74>>3] = $5329;
                     $5330 = +HEAPF64[$j5array73>>3];
                     $5331 = $5330 > 3.14159265358979;
                     if ($5331) {
                      $5332 = +HEAPF64[$j5array73>>3];
                      $5333 = $5332 - 6.2831853071795898;
                      HEAPF64[$j5array73>>3] = $5333;
                     } else {
                      $5334 = +HEAPF64[$j5array73>>3];
                      $5335 = $5334 < -3.14159265358979;
                      if ($5335) {
                       $5336 = +HEAPF64[$j5array73>>3];
                       $5337 = $5336 + 6.2831853071795898;
                       HEAPF64[$j5array73>>3] = $5337;
                      }
                     }
                     HEAP8[$j5valid76>>0] = 1;
                     $ij577 = 0;
                     while(1) {
                      $5338 = $ij577;
                      $5339 = ($5338|0)<(1);
                      if (!($5339)) {
                       break;
                      }
                      $5340 = $ij577;
                      $5341 = (($j5valid76) + ($5340)|0);
                      $5342 = HEAP8[$5341>>0]|0;
                      $5343 = $5342&1;
                      L1410: do {
                       if ($5343) {
                        $5344 = $ij577;
                        $5345 = $5344&255;
                        $5346 = (($4) + 551|0);
                        HEAP8[$5346>>0] = $5345;
                        $5347 = (($4) + 551|0);
                        $5348 = (($5347) + 1|0);
                        HEAP8[$5348>>0] = -1;
                        $5349 = $ij577;
                        $5350 = (($5349) + 1)|0;
                        $iij578 = $5350;
                        L1413: while(1) {
                         $5351 = $iij578;
                         $5352 = ($5351|0)<(1);
                         if (!($5352)) {
                          break;
                         }
                         $5353 = $iij578;
                         $5354 = (($j5valid76) + ($5353)|0);
                         $5355 = HEAP8[$5354>>0]|0;
                         $5356 = $5355&1;
                         do {
                          if ($5356) {
                           $5357 = $ij577;
                           $5358 = (($cj5array74) + ($5357<<3)|0);
                           $5359 = +HEAPF64[$5358>>3];
                           $5360 = $iij578;
                           $5361 = (($cj5array74) + ($5360<<3)|0);
                           $5362 = +HEAPF64[$5361>>3];
                           $5363 = $5359 - $5362;
                           $5364 = (+__Z5IKabsd($5363));
                           $5365 = $5364 < 9.9999999999999995E-7;
                           if (!($5365)) {
                            break;
                           }
                           $5366 = $ij577;
                           $5367 = (($sj5array75) + ($5366<<3)|0);
                           $5368 = +HEAPF64[$5367>>3];
                           $5369 = $iij578;
                           $5370 = (($sj5array75) + ($5369<<3)|0);
                           $5371 = +HEAPF64[$5370>>3];
                           $5372 = $5368 - $5371;
                           $5373 = (+__Z5IKabsd($5372));
                           $5374 = $5373 < 9.9999999999999995E-7;
                           if ($5374) {
                            label = 657;
                            break L1413;
                           }
                          }
                         } while(0);
                         $5381 = $iij578;
                         $5382 = (($5381) + 1)|0;
                         $iij578 = $5382;
                        }
                        if ((label|0) == 657) {
                         label = 0;
                         $5375 = $iij578;
                         $5376 = (($j5valid76) + ($5375)|0);
                         HEAP8[$5376>>0] = 0;
                         $5377 = $iij578;
                         $5378 = $5377&255;
                         $5379 = (($4) + 551|0);
                         $5380 = (($5379) + 1|0);
                         HEAP8[$5380>>0] = $5378;
                        }
                        $5383 = $ij577;
                        $5384 = (($j5array73) + ($5383<<3)|0);
                        $5385 = +HEAPF64[$5384>>3];
                        $5386 = (($4) + 200|0);
                        HEAPF64[$5386>>3] = $5385;
                        $5387 = $ij577;
                        $5388 = (($cj5array74) + ($5387<<3)|0);
                        $5389 = +HEAPF64[$5388>>3];
                        $5390 = (($4) + 208|0);
                        HEAPF64[$5390>>3] = $5389;
                        $5391 = $ij577;
                        $5392 = (($sj5array75) + ($5391<<3)|0);
                        $5393 = +HEAPF64[$5392>>3];
                        $5394 = (($4) + 216|0);
                        HEAPF64[$5394>>3] = $5393;
                        $5395 = (($4) + 200|0);
                        $5396 = +HEAPF64[$5395>>3];
                        $5397 = (+__Z5IKsind($5396));
                        $x242 = $5397;
                        $5398 = (($4) + 200|0);
                        $5399 = +HEAPF64[$5398>>3];
                        $5400 = (+__Z5IKcosd($5399));
                        $x243 = $5400;
                        $5401 = (($4) + 432|0);
                        $5402 = +HEAPF64[$5401>>3];
                        $5403 = 1.0 * $5402;
                        $x244 = $5403;
                        $5404 = $x242;
                        $5405 = (($4) + 264|0);
                        $5406 = +HEAPF64[$5405>>3];
                        $5407 = $5404 + $5406;
                        HEAPF64[$evalcond79>>3] = $5407;
                        $5408 = (($4) + 360|0);
                        $5409 = +HEAPF64[$5408>>3];
                        $5410 = $x242;
                        $5411 = $5409 * $5410;
                        $5412 = (($4) + 384|0);
                        $5413 = +HEAPF64[$5412>>3];
                        $5414 = $5411 + $5413;
                        $5415 = (($evalcond79) + 8|0);
                        HEAPF64[$5415>>3] = $5414;
                        $5416 = (($4) + 360|0);
                        $5417 = +HEAPF64[$5416>>3];
                        $5418 = $x243;
                        $5419 = $5417 * $5418;
                        $5420 = (($4) + 408|0);
                        $5421 = +HEAPF64[$5420>>3];
                        $5422 = $5419 + $5421;
                        $5423 = (($evalcond79) + 16|0);
                        HEAPF64[$5423>>3] = $5422;
                        $5424 = $x243;
                        $5425 = -1.0 * $5424;
                        $5426 = (($4) + 240|0);
                        $5427 = +HEAPF64[$5426>>3];
                        $5428 = $5425 + $5427;
                        $5429 = (($evalcond79) + 24|0);
                        HEAPF64[$5429>>3] = $5428;
                        $5430 = $x243;
                        $5431 = -1.0 * $5430;
                        $5432 = $x244;
                        $5433 = $5431 * $5432;
                        $5434 = (($4) + 336|0);
                        $5435 = +HEAPF64[$5434>>3];
                        $5436 = $5433 + $5435;
                        $5437 = (($evalcond79) + 32|0);
                        HEAPF64[$5437>>3] = $5436;
                        $5438 = $x242;
                        $5439 = -1.0 * $5438;
                        $5440 = $x244;
                        $5441 = $5439 * $5440;
                        $5442 = (($4) + 312|0);
                        $5443 = +HEAPF64[$5442>>3];
                        $5444 = $5441 + $5443;
                        $5445 = (($evalcond79) + 40|0);
                        HEAPF64[$5445>>3] = $5444;
                        $5446 = (($4) + 360|0);
                        $5447 = +HEAPF64[$5446>>3];
                        $5448 = (($4) + 384|0);
                        $5449 = +HEAPF64[$5448>>3];
                        $5450 = $5447 * $5449;
                        $5451 = $x242;
                        $5452 = $5450 + $5451;
                        $5453 = (($4) + 312|0);
                        $5454 = +HEAPF64[$5453>>3];
                        $5455 = -1.0 * $5454;
                        $5456 = $x244;
                        $5457 = $5455 * $5456;
                        $5458 = $5452 + $5457;
                        $5459 = (($evalcond79) + 48|0);
                        HEAPF64[$5459>>3] = $5458;
                        $5460 = (($4) + 360|0);
                        $5461 = +HEAPF64[$5460>>3];
                        $5462 = (($4) + 408|0);
                        $5463 = +HEAPF64[$5462>>3];
                        $5464 = $5461 * $5463;
                        $5465 = $x243;
                        $5466 = $5464 + $5465;
                        $5467 = (($4) + 336|0);
                        $5468 = +HEAPF64[$5467>>3];
                        $5469 = -1.0 * $5468;
                        $5470 = $x244;
                        $5471 = $5469 * $5470;
                        $5472 = $5466 + $5471;
                        $5473 = (($evalcond79) + 56|0);
                        HEAPF64[$5473>>3] = $5472;
                        $5474 = +HEAPF64[$evalcond79>>3];
                        $5475 = (+__Z5IKabsd($5474));
                        $5476 = $5475 > 5.0000000000000004E-6;
                        do {
                         if (!($5476)) {
                          $5477 = (($evalcond79) + 8|0);
                          $5478 = +HEAPF64[$5477>>3];
                          $5479 = (+__Z5IKabsd($5478));
                          $5480 = $5479 > 5.0000000000000004E-6;
                          if ($5480) {
                           break;
                          }
                          $5481 = (($evalcond79) + 16|0);
                          $5482 = +HEAPF64[$5481>>3];
                          $5483 = (+__Z5IKabsd($5482));
                          $5484 = $5483 > 5.0000000000000004E-6;
                          if ($5484) {
                           break;
                          }
                          $5485 = (($evalcond79) + 24|0);
                          $5486 = +HEAPF64[$5485>>3];
                          $5487 = (+__Z5IKabsd($5486));
                          $5488 = $5487 > 5.0000000000000004E-6;
                          if ($5488) {
                           break;
                          }
                          $5489 = (($evalcond79) + 32|0);
                          $5490 = +HEAPF64[$5489>>3];
                          $5491 = (+__Z5IKabsd($5490));
                          $5492 = $5491 > 5.0000000000000004E-6;
                          if ($5492) {
                           break;
                          }
                          $5493 = (($evalcond79) + 40|0);
                          $5494 = +HEAPF64[$5493>>3];
                          $5495 = (+__Z5IKabsd($5494));
                          $5496 = $5495 > 5.0000000000000004E-6;
                          if ($5496) {
                           break;
                          }
                          $5497 = (($evalcond79) + 48|0);
                          $5498 = +HEAPF64[$5497>>3];
                          $5499 = (+__Z5IKabsd($5498));
                          $5500 = $5499 > 5.0000000000000004E-6;
                          if ($5500) {
                           break;
                          }
                          $5501 = (($evalcond79) + 56|0);
                          $5502 = +HEAPF64[$5501>>3];
                          $5503 = (+__Z5IKabsd($5502));
                          $5504 = $5503 > 5.0000000000000004E-6;
                          if ($5504) {
                           break;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos80,6);
                          __THREW__ = 0;
                          $5505 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5506 = __THREW__; __THREW__ = 0;
                          $5507 = $5506&1;
                          if ($5507) {
                           label = 704;
                           break L1;
                          }
                          $5508 = (($5505) + 17|0);
                          HEAP8[$5508>>0] = 1;
                          $5509 = +HEAPF64[$4>>3];
                          __THREW__ = 0;
                          $5510 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5511 = __THREW__; __THREW__ = 0;
                          $5512 = $5511&1;
                          if ($5512) {
                           label = 704;
                           break L1;
                          }
                          $5513 = (($5510) + 8|0);
                          HEAPF64[$5513>>3] = $5509;
                          $5514 = (($4) + 536|0);
                          $5515 = HEAP8[$5514>>0]|0;
                          __THREW__ = 0;
                          $5516 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5517 = __THREW__; __THREW__ = 0;
                          $5518 = $5517&1;
                          if ($5518) {
                           label = 704;
                           break L1;
                          }
                          $5519 = (($5516) + 19|0);
                          HEAP8[$5519>>0] = $5515;
                          $5520 = (($4) + 536|0);
                          $5521 = (($5520) + 1|0);
                          $5522 = HEAP8[$5521>>0]|0;
                          __THREW__ = 0;
                          $5523 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5524 = __THREW__; __THREW__ = 0;
                          $5525 = $5524&1;
                          if ($5525) {
                           label = 704;
                           break L1;
                          }
                          $5526 = (($5523) + 19|0);
                          $5527 = (($5526) + 1|0);
                          HEAP8[$5527>>0] = $5522;
                          $5528 = (($4) + 538|0);
                          $5529 = HEAP8[$5528>>0]|0;
                          __THREW__ = 0;
                          $5530 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5531 = __THREW__; __THREW__ = 0;
                          $5532 = $5531&1;
                          if ($5532) {
                           label = 704;
                           break L1;
                          }
                          $5533 = (($5530) + 18|0);
                          HEAP8[$5533>>0] = $5529;
                          __THREW__ = 0;
                          $5534 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5535 = __THREW__; __THREW__ = 0;
                          $5536 = $5535&1;
                          if ($5536) {
                           label = 704;
                           break L1;
                          }
                          $5537 = (($5534) + 17|0);
                          HEAP8[$5537>>0] = 1;
                          $5538 = (($4) + 40|0);
                          $5539 = +HEAPF64[$5538>>3];
                          __THREW__ = 0;
                          $5540 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5541 = __THREW__; __THREW__ = 0;
                          $5542 = $5541&1;
                          if ($5542) {
                           label = 704;
                           break L1;
                          }
                          $5543 = (($5540) + 8|0);
                          HEAPF64[$5543>>3] = $5539;
                          $5544 = (($4) + 539|0);
                          $5545 = HEAP8[$5544>>0]|0;
                          __THREW__ = 0;
                          $5546 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5547 = __THREW__; __THREW__ = 0;
                          $5548 = $5547&1;
                          if ($5548) {
                           label = 704;
                           break L1;
                          }
                          $5549 = (($5546) + 19|0);
                          HEAP8[$5549>>0] = $5545;
                          $5550 = (($4) + 539|0);
                          $5551 = (($5550) + 1|0);
                          $5552 = HEAP8[$5551>>0]|0;
                          __THREW__ = 0;
                          $5553 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5554 = __THREW__; __THREW__ = 0;
                          $5555 = $5554&1;
                          if ($5555) {
                           label = 704;
                           break L1;
                          }
                          $5556 = (($5553) + 19|0);
                          $5557 = (($5556) + 1|0);
                          HEAP8[$5557>>0] = $5552;
                          $5558 = (($4) + 541|0);
                          $5559 = HEAP8[$5558>>0]|0;
                          __THREW__ = 0;
                          $5560 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5561 = __THREW__; __THREW__ = 0;
                          $5562 = $5561&1;
                          if ($5562) {
                           label = 704;
                           break L1;
                          }
                          $5563 = (($5560) + 18|0);
                          HEAP8[$5563>>0] = $5559;
                          __THREW__ = 0;
                          $5564 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5565 = __THREW__; __THREW__ = 0;
                          $5566 = $5565&1;
                          if ($5566) {
                           label = 704;
                           break L1;
                          }
                          $5567 = (($5564) + 17|0);
                          HEAP8[$5567>>0] = 1;
                          $5568 = (($4) + 80|0);
                          $5569 = +HEAPF64[$5568>>3];
                          __THREW__ = 0;
                          $5570 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5571 = __THREW__; __THREW__ = 0;
                          $5572 = $5571&1;
                          if ($5572) {
                           label = 704;
                           break L1;
                          }
                          $5573 = (($5570) + 8|0);
                          HEAPF64[$5573>>3] = $5569;
                          $5574 = (($4) + 542|0);
                          $5575 = HEAP8[$5574>>0]|0;
                          __THREW__ = 0;
                          $5576 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5577 = __THREW__; __THREW__ = 0;
                          $5578 = $5577&1;
                          if ($5578) {
                           label = 704;
                           break L1;
                          }
                          $5579 = (($5576) + 19|0);
                          HEAP8[$5579>>0] = $5575;
                          $5580 = (($4) + 542|0);
                          $5581 = (($5580) + 1|0);
                          $5582 = HEAP8[$5581>>0]|0;
                          __THREW__ = 0;
                          $5583 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5584 = __THREW__; __THREW__ = 0;
                          $5585 = $5584&1;
                          if ($5585) {
                           label = 704;
                           break L1;
                          }
                          $5586 = (($5583) + 19|0);
                          $5587 = (($5586) + 1|0);
                          HEAP8[$5587>>0] = $5582;
                          $5588 = (($4) + 544|0);
                          $5589 = HEAP8[$5588>>0]|0;
                          __THREW__ = 0;
                          $5590 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5591 = __THREW__; __THREW__ = 0;
                          $5592 = $5591&1;
                          if ($5592) {
                           label = 704;
                           break L1;
                          }
                          $5593 = (($5590) + 18|0);
                          HEAP8[$5593>>0] = $5589;
                          __THREW__ = 0;
                          $5594 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5595 = __THREW__; __THREW__ = 0;
                          $5596 = $5595&1;
                          if ($5596) {
                           label = 704;
                           break L1;
                          }
                          $5597 = (($5594) + 17|0);
                          HEAP8[$5597>>0] = 1;
                          $5598 = (($4) + 120|0);
                          $5599 = +HEAPF64[$5598>>3];
                          __THREW__ = 0;
                          $5600 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5601 = __THREW__; __THREW__ = 0;
                          $5602 = $5601&1;
                          if ($5602) {
                           label = 704;
                           break L1;
                          }
                          $5603 = (($5600) + 8|0);
                          HEAPF64[$5603>>3] = $5599;
                          $5604 = (($4) + 545|0);
                          $5605 = HEAP8[$5604>>0]|0;
                          __THREW__ = 0;
                          $5606 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5607 = __THREW__; __THREW__ = 0;
                          $5608 = $5607&1;
                          if ($5608) {
                           label = 704;
                           break L1;
                          }
                          $5609 = (($5606) + 19|0);
                          HEAP8[$5609>>0] = $5605;
                          $5610 = (($4) + 545|0);
                          $5611 = (($5610) + 1|0);
                          $5612 = HEAP8[$5611>>0]|0;
                          __THREW__ = 0;
                          $5613 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5614 = __THREW__; __THREW__ = 0;
                          $5615 = $5614&1;
                          if ($5615) {
                           label = 704;
                           break L1;
                          }
                          $5616 = (($5613) + 19|0);
                          $5617 = (($5616) + 1|0);
                          HEAP8[$5617>>0] = $5612;
                          $5618 = (($4) + 547|0);
                          $5619 = HEAP8[$5618>>0]|0;
                          __THREW__ = 0;
                          $5620 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5621 = __THREW__; __THREW__ = 0;
                          $5622 = $5621&1;
                          if ($5622) {
                           label = 704;
                           break L1;
                          }
                          $5623 = (($5620) + 18|0);
                          HEAP8[$5623>>0] = $5619;
                          __THREW__ = 0;
                          $5624 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5625 = __THREW__; __THREW__ = 0;
                          $5626 = $5625&1;
                          if ($5626) {
                           label = 704;
                           break L1;
                          }
                          $5627 = (($5624) + 17|0);
                          HEAP8[$5627>>0] = 1;
                          $5628 = (($4) + 160|0);
                          $5629 = +HEAPF64[$5628>>3];
                          __THREW__ = 0;
                          $5630 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5631 = __THREW__; __THREW__ = 0;
                          $5632 = $5631&1;
                          if ($5632) {
                           label = 704;
                           break L1;
                          }
                          $5633 = (($5630) + 8|0);
                          HEAPF64[$5633>>3] = $5629;
                          $5634 = (($4) + 548|0);
                          $5635 = HEAP8[$5634>>0]|0;
                          __THREW__ = 0;
                          $5636 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5637 = __THREW__; __THREW__ = 0;
                          $5638 = $5637&1;
                          if ($5638) {
                           label = 704;
                           break L1;
                          }
                          $5639 = (($5636) + 19|0);
                          HEAP8[$5639>>0] = $5635;
                          $5640 = (($4) + 548|0);
                          $5641 = (($5640) + 1|0);
                          $5642 = HEAP8[$5641>>0]|0;
                          __THREW__ = 0;
                          $5643 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5644 = __THREW__; __THREW__ = 0;
                          $5645 = $5644&1;
                          if ($5645) {
                           label = 704;
                           break L1;
                          }
                          $5646 = (($5643) + 19|0);
                          $5647 = (($5646) + 1|0);
                          HEAP8[$5647>>0] = $5642;
                          $5648 = (($4) + 550|0);
                          $5649 = HEAP8[$5648>>0]|0;
                          __THREW__ = 0;
                          $5650 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5651 = __THREW__; __THREW__ = 0;
                          $5652 = $5651&1;
                          if ($5652) {
                           label = 704;
                           break L1;
                          }
                          $5653 = (($5650) + 18|0);
                          HEAP8[$5653>>0] = $5649;
                          __THREW__ = 0;
                          $5654 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5655 = __THREW__; __THREW__ = 0;
                          $5656 = $5655&1;
                          if ($5656) {
                           label = 704;
                           break L1;
                          }
                          $5657 = (($5654) + 17|0);
                          HEAP8[$5657>>0] = 1;
                          $5658 = (($4) + 200|0);
                          $5659 = +HEAPF64[$5658>>3];
                          __THREW__ = 0;
                          $5660 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5661 = __THREW__; __THREW__ = 0;
                          $5662 = $5661&1;
                          if ($5662) {
                           label = 704;
                           break L1;
                          }
                          $5663 = (($5660) + 8|0);
                          HEAPF64[$5663>>3] = $5659;
                          $5664 = (($4) + 551|0);
                          $5665 = HEAP8[$5664>>0]|0;
                          __THREW__ = 0;
                          $5666 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5667 = __THREW__; __THREW__ = 0;
                          $5668 = $5667&1;
                          if ($5668) {
                           label = 704;
                           break L1;
                          }
                          $5669 = (($5666) + 19|0);
                          HEAP8[$5669>>0] = $5665;
                          $5670 = (($4) + 551|0);
                          $5671 = (($5670) + 1|0);
                          $5672 = HEAP8[$5671>>0]|0;
                          __THREW__ = 0;
                          $5673 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5674 = __THREW__; __THREW__ = 0;
                          $5675 = $5674&1;
                          if ($5675) {
                           label = 704;
                           break L1;
                          }
                          $5676 = (($5673) + 19|0);
                          $5677 = (($5676) + 1|0);
                          HEAP8[$5677>>0] = $5672;
                          $5678 = (($4) + 553|0);
                          $5679 = HEAP8[$5678>>0]|0;
                          __THREW__ = 0;
                          $5680 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5681 = __THREW__; __THREW__ = 0;
                          $5682 = $5681&1;
                          if ($5682) {
                           label = 704;
                           break L1;
                          }
                          $5683 = (($5680) + 18|0);
                          HEAP8[$5683>>0] = $5679;
                          __THREW__ = 0;
                          invoke_vii(382,($vfree81|0),0);
                          $5684 = __THREW__; __THREW__ = 0;
                          $5685 = $5684&1;
                          if ($5685) {
                           label = 704;
                           break L1;
                          }
                          $5686 = $1;
                          $5687 = HEAP32[$5686>>2]|0;
                          $5688 = (($5687) + 8|0);
                          $5689 = HEAP32[$5688>>2]|0;
                          __THREW__ = 0;
                          (invoke_iiii($5689|0,($5686|0),($vinfos80|0),($vfree81|0))|0);
                          $5690 = __THREW__; __THREW__ = 0;
                          $5691 = $5690&1;
                          if ($5691) {
                           label = 705;
                           break L1;
                          }
                          __THREW__ = 0;
                          invoke_vi(366,($vfree81|0));
                          $5692 = __THREW__; __THREW__ = 0;
                          $5693 = $5692&1;
                          if ($5693) {
                           label = 704;
                           break L1;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos80);
                          break L1410;
                         }
                        } while(0);
                       } else {
                       }
                      } while(0);
                      $5694 = $ij577;
                      $5695 = (($5694) + 1)|0;
                      $ij577 = $5695;
                     }
                     label = 710;
                    } else {
                     label = 710;
                    }
                   } while(0);
                   if ((label|0) == 710) {
                    label = 0;
                   }
                   $5704 = $bgotonextstatement72;
                   $5705 = $5704&1;
                   if ($5705) {
                    $bgotonextstatement82 = 1;
                    $5706 = (($4) + 432|0);
                    $5707 = +HEAPF64[$5706>>3];
                    $5708 = (($4) + 168|0);
                    $5709 = +HEAPF64[$5708>>3];
                    $5710 = -1.0 * $5709;
                    $5711 = $5707 + $5710;
                    $x245 = $5711;
                    $5712 = (($4) + 168|0);
                    $5713 = +HEAPF64[$5712>>3];
                    $5714 = 1.0 * $5713;
                    $x246 = $5714;
                    $5715 = (($4) + 360|0);
                    $5716 = +HEAPF64[$5715>>3];
                    $5717 = 1.0 * $5716;
                    $x247 = $5717;
                    $5718 = (($4) + 176|0);
                    $5719 = +HEAPF64[$5718>>3];
                    $5720 = 1.0 * $5719;
                    $x248 = $5720;
                    $5721 = (($4) + 120|0);
                    $5722 = +HEAPF64[$5721>>3];
                    $5723 = -3.14159265358979 + $5722;
                    $5724 = (+__Z5IKabsd($5723));
                    $5725 = 3.14159265358979 + $5724;
                    $5726 = (+__Z6IKfmoddd($5725,6.2831853071795898));
                    $5727 = -3.14159265358979 + $5726;
                    HEAPF64[$evalcond31>>3] = $5727;
                    $5728 = $x245;
                    $5729 = (($evalcond31) + 8|0);
                    HEAPF64[$5729>>3] = $5728;
                    $5730 = $x245;
                    $5731 = (($evalcond31) + 16|0);
                    HEAPF64[$5731>>3] = $5730;
                    $5732 = $x248;
                    $5733 = -1.0 * $5732;
                    $5734 = (($4) + 360|0);
                    $5735 = +HEAPF64[$5734>>3];
                    $5736 = $5733 + $5735;
                    $5737 = (($evalcond31) + 24|0);
                    HEAPF64[$5737>>3] = $5736;
                    $5738 = (($4) + 288|0);
                    $5739 = +HEAPF64[$5738>>3];
                    $5740 = (($evalcond31) + 32|0);
                    HEAPF64[$5740>>3] = $5739;
                    $5741 = (($4) + 176|0);
                    $5742 = +HEAPF64[$5741>>3];
                    $5743 = $x247;
                    $5744 = -1.0 * $5743;
                    $5745 = $5742 + $5744;
                    $5746 = (($evalcond31) + 40|0);
                    HEAPF64[$5746>>3] = $5745;
                    $5747 = (($4) + 168|0);
                    $5748 = +HEAPF64[$5747>>3];
                    $5749 = (($4) + 360|0);
                    $5750 = +HEAPF64[$5749>>3];
                    $5751 = $5748 * $5750;
                    $5752 = (($4) + 432|0);
                    $5753 = +HEAPF64[$5752>>3];
                    $5754 = -1.0 * $5753;
                    $5755 = $x248;
                    $5756 = $5754 * $5755;
                    $5757 = $5751 + $5756;
                    $5758 = (($evalcond31) + 48|0);
                    HEAPF64[$5758>>3] = $5757;
                    $5759 = (($4) + 384|0);
                    $5760 = +HEAPF64[$5759>>3];
                    $5761 = -1.0 * $5760;
                    $5762 = $x246;
                    $5763 = $5761 * $5762;
                    $5764 = (($4) + 312|0);
                    $5765 = +HEAPF64[$5764>>3];
                    $5766 = -1.0 * $5765;
                    $5767 = $x248;
                    $5768 = $5766 * $5767;
                    $5769 = $5763 + $5768;
                    $5770 = (($evalcond31) + 56|0);
                    HEAPF64[$5770>>3] = $5769;
                    $5771 = (($4) + 408|0);
                    $5772 = +HEAPF64[$5771>>3];
                    $5773 = -1.0 * $5772;
                    $5774 = $x246;
                    $5775 = $5773 * $5774;
                    $5776 = (($4) + 336|0);
                    $5777 = +HEAPF64[$5776>>3];
                    $5778 = -1.0 * $5777;
                    $5779 = $x248;
                    $5780 = $5778 * $5779;
                    $5781 = $5775 + $5780;
                    $5782 = (($evalcond31) + 64|0);
                    HEAPF64[$5782>>3] = $5781;
                    $5783 = (($4) + 176|0);
                    $5784 = +HEAPF64[$5783>>3];
                    $5785 = -1.0 * $5784;
                    $5786 = $x247;
                    $5787 = $5785 * $5786;
                    $5788 = 1.0 + $5787;
                    $5789 = (($4) + 432|0);
                    $5790 = +HEAPF64[$5789>>3];
                    $5791 = -1.0 * $5790;
                    $5792 = $x246;
                    $5793 = $5791 * $5792;
                    $5794 = $5788 + $5793;
                    $5795 = (($evalcond31) + 72|0);
                    HEAPF64[$5795>>3] = $5794;
                    $5796 = +HEAPF64[$evalcond31>>3];
                    $5797 = (+__Z5IKabsd($5796));
                    $5798 = $5797 < 9.9999999999999995E-7;
                    L1475: do {
                     if ($5798) {
                      $5799 = (($evalcond31) + 8|0);
                      $5800 = +HEAPF64[$5799>>3];
                      $5801 = (+__Z5IKabsd($5800));
                      $5802 = $5801 < 9.9999999999999995E-7;
                      if (!($5802)) {
                       label = 794;
                       break;
                      }
                      $5803 = (($evalcond31) + 16|0);
                      $5804 = +HEAPF64[$5803>>3];
                      $5805 = (+__Z5IKabsd($5804));
                      $5806 = $5805 < 9.9999999999999995E-7;
                      if (!($5806)) {
                       label = 794;
                       break;
                      }
                      $5807 = (($evalcond31) + 24|0);
                      $5808 = +HEAPF64[$5807>>3];
                      $5809 = (+__Z5IKabsd($5808));
                      $5810 = $5809 < 9.9999999999999995E-7;
                      if (!($5810)) {
                       label = 794;
                       break;
                      }
                      $5811 = (($evalcond31) + 32|0);
                      $5812 = +HEAPF64[$5811>>3];
                      $5813 = (+__Z5IKabsd($5812));
                      $5814 = $5813 < 9.9999999999999995E-7;
                      if (!($5814)) {
                       label = 794;
                       break;
                      }
                      $5815 = (($evalcond31) + 40|0);
                      $5816 = +HEAPF64[$5815>>3];
                      $5817 = (+__Z5IKabsd($5816));
                      $5818 = $5817 < 9.9999999999999995E-7;
                      if (!($5818)) {
                       label = 794;
                       break;
                      }
                      $5819 = (($evalcond31) + 48|0);
                      $5820 = +HEAPF64[$5819>>3];
                      $5821 = (+__Z5IKabsd($5820));
                      $5822 = $5821 < 9.9999999999999995E-7;
                      if (!($5822)) {
                       label = 794;
                       break;
                      }
                      $5823 = (($evalcond31) + 56|0);
                      $5824 = +HEAPF64[$5823>>3];
                      $5825 = (+__Z5IKabsd($5824));
                      $5826 = $5825 < 9.9999999999999995E-7;
                      if (!($5826)) {
                       label = 794;
                       break;
                      }
                      $5827 = (($evalcond31) + 64|0);
                      $5828 = +HEAPF64[$5827>>3];
                      $5829 = (+__Z5IKabsd($5828));
                      $5830 = $5829 < 9.9999999999999995E-7;
                      if (!($5830)) {
                       label = 794;
                       break;
                      }
                      $5831 = (($evalcond31) + 72|0);
                      $5832 = +HEAPF64[$5831>>3];
                      $5833 = (+__Z5IKabsd($5832));
                      $5834 = $5833 < 9.9999999999999995E-7;
                      if (!($5834)) {
                       label = 794;
                       break;
                      }
                      $bgotonextstatement82 = 0;
                      ;HEAP8[$j5valid86+0>>0]=0|0;
                      $5835 = (($4) + 553|0);
                      HEAP8[$5835>>0] = 1;
                      $5836 = (($4) + 264|0);
                      $5837 = +HEAPF64[$5836>>3];
                      $5838 = (+__Z5IKabsd($5837));
                      $5839 = $5838 < 1.9999999999999999E-6;
                      do {
                       if ($5839) {
                        $5840 = (($4) + 240|0);
                        $5841 = +HEAPF64[$5840>>3];
                        $5842 = -1.0 * $5841;
                        $5843 = (+__Z5IKabsd($5842));
                        $5844 = $5843 < 1.9999999999999999E-6;
                        if (!($5844)) {
                         break;
                        }
                        $5845 = (($4) + 264|0);
                        $5846 = +HEAPF64[$5845>>3];
                        $5847 = (+__Z5IKsqrd($5846));
                        $5848 = (($4) + 240|0);
                        $5849 = +HEAPF64[$5848>>3];
                        $5850 = -1.0 * $5849;
                        $5851 = (+__Z5IKsqrd($5850));
                        $5852 = $5847 + $5851;
                        $5853 = $5852 - 1.0;
                        $5854 = (+__Z5IKabsd($5853));
                        $5855 = $5854 <= 1.9999999999999999E-6;
                        if (!($5855)) {
                         break;
                        }
                        break L1475;
                       }
                      } while(0);
                      $5856 = (($4) + 264|0);
                      $5857 = +HEAPF64[$5856>>3];
                      $5858 = (($4) + 240|0);
                      $5859 = +HEAPF64[$5858>>3];
                      $5860 = -1.0 * $5859;
                      $5861 = (+__Z7IKatan2dd($5857,$5860));
                      HEAPF64[$j5array83>>3] = $5861;
                      $5862 = +HEAPF64[$j5array83>>3];
                      $5863 = (+__Z5IKsind($5862));
                      HEAPF64[$sj5array85>>3] = $5863;
                      $5864 = +HEAPF64[$j5array83>>3];
                      $5865 = (+__Z5IKcosd($5864));
                      HEAPF64[$cj5array84>>3] = $5865;
                      $5866 = +HEAPF64[$j5array83>>3];
                      $5867 = $5866 > 3.14159265358979;
                      if ($5867) {
                       $5868 = +HEAPF64[$j5array83>>3];
                       $5869 = $5868 - 6.2831853071795898;
                       HEAPF64[$j5array83>>3] = $5869;
                      } else {
                       $5870 = +HEAPF64[$j5array83>>3];
                       $5871 = $5870 < -3.14159265358979;
                       if ($5871) {
                        $5872 = +HEAPF64[$j5array83>>3];
                        $5873 = $5872 + 6.2831853071795898;
                        HEAPF64[$j5array83>>3] = $5873;
                       }
                      }
                      HEAP8[$j5valid86>>0] = 1;
                      $ij587 = 0;
                      while(1) {
                       $5874 = $ij587;
                       $5875 = ($5874|0)<(1);
                       if (!($5875)) {
                        break;
                       }
                       $5876 = $ij587;
                       $5877 = (($j5valid86) + ($5876)|0);
                       $5878 = HEAP8[$5877>>0]|0;
                       $5879 = $5878&1;
                       L1501: do {
                        if ($5879) {
                         $5880 = $ij587;
                         $5881 = $5880&255;
                         $5882 = (($4) + 551|0);
                         HEAP8[$5882>>0] = $5881;
                         $5883 = (($4) + 551|0);
                         $5884 = (($5883) + 1|0);
                         HEAP8[$5884>>0] = -1;
                         $5885 = $ij587;
                         $5886 = (($5885) + 1)|0;
                         $iij588 = $5886;
                         L1504: while(1) {
                          $5887 = $iij588;
                          $5888 = ($5887|0)<(1);
                          if (!($5888)) {
                           break;
                          }
                          $5889 = $iij588;
                          $5890 = (($j5valid86) + ($5889)|0);
                          $5891 = HEAP8[$5890>>0]|0;
                          $5892 = $5891&1;
                          do {
                           if ($5892) {
                            $5893 = $ij587;
                            $5894 = (($cj5array84) + ($5893<<3)|0);
                            $5895 = +HEAPF64[$5894>>3];
                            $5896 = $iij588;
                            $5897 = (($cj5array84) + ($5896<<3)|0);
                            $5898 = +HEAPF64[$5897>>3];
                            $5899 = $5895 - $5898;
                            $5900 = (+__Z5IKabsd($5899));
                            $5901 = $5900 < 9.9999999999999995E-7;
                            if (!($5901)) {
                             break;
                            }
                            $5902 = $ij587;
                            $5903 = (($sj5array85) + ($5902<<3)|0);
                            $5904 = +HEAPF64[$5903>>3];
                            $5905 = $iij588;
                            $5906 = (($sj5array85) + ($5905<<3)|0);
                            $5907 = +HEAPF64[$5906>>3];
                            $5908 = $5904 - $5907;
                            $5909 = (+__Z5IKabsd($5908));
                            $5910 = $5909 < 9.9999999999999995E-7;
                            if ($5910) {
                             label = 741;
                             break L1504;
                            }
                           }
                          } while(0);
                          $5917 = $iij588;
                          $5918 = (($5917) + 1)|0;
                          $iij588 = $5918;
                         }
                         if ((label|0) == 741) {
                          label = 0;
                          $5911 = $iij588;
                          $5912 = (($j5valid86) + ($5911)|0);
                          HEAP8[$5912>>0] = 0;
                          $5913 = $iij588;
                          $5914 = $5913&255;
                          $5915 = (($4) + 551|0);
                          $5916 = (($5915) + 1|0);
                          HEAP8[$5916>>0] = $5914;
                         }
                         $5919 = $ij587;
                         $5920 = (($j5array83) + ($5919<<3)|0);
                         $5921 = +HEAPF64[$5920>>3];
                         $5922 = (($4) + 200|0);
                         HEAPF64[$5922>>3] = $5921;
                         $5923 = $ij587;
                         $5924 = (($cj5array84) + ($5923<<3)|0);
                         $5925 = +HEAPF64[$5924>>3];
                         $5926 = (($4) + 208|0);
                         HEAPF64[$5926>>3] = $5925;
                         $5927 = $ij587;
                         $5928 = (($sj5array85) + ($5927<<3)|0);
                         $5929 = +HEAPF64[$5928>>3];
                         $5930 = (($4) + 216|0);
                         HEAPF64[$5930>>3] = $5929;
                         $5931 = (($4) + 200|0);
                         $5932 = +HEAPF64[$5931>>3];
                         $5933 = (+__Z5IKsind($5932));
                         $x249 = $5933;
                         $5934 = (($4) + 200|0);
                         $5935 = +HEAPF64[$5934>>3];
                         $5936 = (+__Z5IKcosd($5935));
                         $x250 = $5936;
                         $5937 = (($4) + 360|0);
                         $5938 = +HEAPF64[$5937>>3];
                         $5939 = 1.0 * $5938;
                         $x251 = $5939;
                         $5940 = $x249;
                         $5941 = 1.0 * $5940;
                         $x252 = $5941;
                         $5942 = $x250;
                         $5943 = 1.0 * $5942;
                         $x253 = $5943;
                         $5944 = $x249;
                         $5945 = (($4) + 264|0);
                         $5946 = +HEAPF64[$5945>>3];
                         $5947 = -1.0 * $5946;
                         $5948 = $5944 + $5947;
                         HEAPF64[$evalcond89>>3] = $5948;
                         $5949 = (($4) + 432|0);
                         $5950 = +HEAPF64[$5949>>3];
                         $5951 = $x250;
                         $5952 = $5950 * $5951;
                         $5953 = (($4) + 336|0);
                         $5954 = +HEAPF64[$5953>>3];
                         $5955 = $5952 + $5954;
                         $5956 = (($evalcond89) + 8|0);
                         HEAPF64[$5956>>3] = $5955;
                         $5957 = $x249;
                         $5958 = -1.0 * $5957;
                         $5959 = $x251;
                         $5960 = $5958 * $5959;
                         $5961 = (($4) + 384|0);
                         $5962 = +HEAPF64[$5961>>3];
                         $5963 = $5960 + $5962;
                         $5964 = (($evalcond89) + 16|0);
                         HEAPF64[$5964>>3] = $5963;
                         $5965 = $x250;
                         $5966 = -1.0 * $5965;
                         $5967 = $x251;
                         $5968 = $5966 * $5967;
                         $5969 = (($4) + 408|0);
                         $5970 = +HEAPF64[$5969>>3];
                         $5971 = $5968 + $5970;
                         $5972 = (($evalcond89) + 24|0);
                         HEAPF64[$5972>>3] = $5971;
                         $5973 = (($4) + 240|0);
                         $5974 = +HEAPF64[$5973>>3];
                         $5975 = -1.0 * $5974;
                         $5976 = $x253;
                         $5977 = -1.0 * $5976;
                         $5978 = $5975 + $5977;
                         $5979 = (($evalcond89) + 32|0);
                         HEAPF64[$5979>>3] = $5978;
                         $5980 = (($4) + 312|0);
                         $5981 = +HEAPF64[$5980>>3];
                         $5982 = -1.0 * $5981;
                         $5983 = (($4) + 432|0);
                         $5984 = +HEAPF64[$5983>>3];
                         $5985 = -1.0 * $5984;
                         $5986 = $x252;
                         $5987 = $5985 * $5986;
                         $5988 = $5982 + $5987;
                         $5989 = (($evalcond89) + 40|0);
                         HEAPF64[$5989>>3] = $5988;
                         $5990 = $x249;
                         $5991 = (($4) + 312|0);
                         $5992 = +HEAPF64[$5991>>3];
                         $5993 = (($4) + 432|0);
                         $5994 = +HEAPF64[$5993>>3];
                         $5995 = $5992 * $5994;
                         $5996 = $5990 + $5995;
                         $5997 = (($4) + 384|0);
                         $5998 = +HEAPF64[$5997>>3];
                         $5999 = -1.0 * $5998;
                         $6000 = $x251;
                         $6001 = $5999 * $6000;
                         $6002 = $5996 + $6001;
                         $6003 = (($evalcond89) + 48|0);
                         HEAPF64[$6003>>3] = $6002;
                         $6004 = (($4) + 408|0);
                         $6005 = +HEAPF64[$6004>>3];
                         $6006 = -1.0 * $6005;
                         $6007 = $x251;
                         $6008 = $6006 * $6007;
                         $6009 = $x250;
                         $6010 = $6008 + $6009;
                         $6011 = (($4) + 336|0);
                         $6012 = +HEAPF64[$6011>>3];
                         $6013 = (($4) + 432|0);
                         $6014 = +HEAPF64[$6013>>3];
                         $6015 = $6012 * $6014;
                         $6016 = $6010 + $6015;
                         $6017 = (($evalcond89) + 56|0);
                         HEAPF64[$6017>>3] = $6016;
                         $6018 = +HEAPF64[$evalcond89>>3];
                         $6019 = (+__Z5IKabsd($6018));
                         $6020 = $6019 > 5.0000000000000004E-6;
                         do {
                          if (!($6020)) {
                           $6021 = (($evalcond89) + 8|0);
                           $6022 = +HEAPF64[$6021>>3];
                           $6023 = (+__Z5IKabsd($6022));
                           $6024 = $6023 > 5.0000000000000004E-6;
                           if ($6024) {
                            break;
                           }
                           $6025 = (($evalcond89) + 16|0);
                           $6026 = +HEAPF64[$6025>>3];
                           $6027 = (+__Z5IKabsd($6026));
                           $6028 = $6027 > 5.0000000000000004E-6;
                           if ($6028) {
                            break;
                           }
                           $6029 = (($evalcond89) + 24|0);
                           $6030 = +HEAPF64[$6029>>3];
                           $6031 = (+__Z5IKabsd($6030));
                           $6032 = $6031 > 5.0000000000000004E-6;
                           if ($6032) {
                            break;
                           }
                           $6033 = (($evalcond89) + 32|0);
                           $6034 = +HEAPF64[$6033>>3];
                           $6035 = (+__Z5IKabsd($6034));
                           $6036 = $6035 > 5.0000000000000004E-6;
                           if ($6036) {
                            break;
                           }
                           $6037 = (($evalcond89) + 40|0);
                           $6038 = +HEAPF64[$6037>>3];
                           $6039 = (+__Z5IKabsd($6038));
                           $6040 = $6039 > 5.0000000000000004E-6;
                           if ($6040) {
                            break;
                           }
                           $6041 = (($evalcond89) + 48|0);
                           $6042 = +HEAPF64[$6041>>3];
                           $6043 = (+__Z5IKabsd($6042));
                           $6044 = $6043 > 5.0000000000000004E-6;
                           if ($6044) {
                            break;
                           }
                           $6045 = (($evalcond89) + 56|0);
                           $6046 = +HEAPF64[$6045>>3];
                           $6047 = (+__Z5IKabsd($6046));
                           $6048 = $6047 > 5.0000000000000004E-6;
                           if ($6048) {
                            break;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos90,6);
                           __THREW__ = 0;
                           $6049 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6050 = __THREW__; __THREW__ = 0;
                           $6051 = $6050&1;
                           if ($6051) {
                            label = 788;
                            break L1;
                           }
                           $6052 = (($6049) + 17|0);
                           HEAP8[$6052>>0] = 1;
                           $6053 = +HEAPF64[$4>>3];
                           __THREW__ = 0;
                           $6054 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6055 = __THREW__; __THREW__ = 0;
                           $6056 = $6055&1;
                           if ($6056) {
                            label = 788;
                            break L1;
                           }
                           $6057 = (($6054) + 8|0);
                           HEAPF64[$6057>>3] = $6053;
                           $6058 = (($4) + 536|0);
                           $6059 = HEAP8[$6058>>0]|0;
                           __THREW__ = 0;
                           $6060 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6061 = __THREW__; __THREW__ = 0;
                           $6062 = $6061&1;
                           if ($6062) {
                            label = 788;
                            break L1;
                           }
                           $6063 = (($6060) + 19|0);
                           HEAP8[$6063>>0] = $6059;
                           $6064 = (($4) + 536|0);
                           $6065 = (($6064) + 1|0);
                           $6066 = HEAP8[$6065>>0]|0;
                           __THREW__ = 0;
                           $6067 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6068 = __THREW__; __THREW__ = 0;
                           $6069 = $6068&1;
                           if ($6069) {
                            label = 788;
                            break L1;
                           }
                           $6070 = (($6067) + 19|0);
                           $6071 = (($6070) + 1|0);
                           HEAP8[$6071>>0] = $6066;
                           $6072 = (($4) + 538|0);
                           $6073 = HEAP8[$6072>>0]|0;
                           __THREW__ = 0;
                           $6074 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6075 = __THREW__; __THREW__ = 0;
                           $6076 = $6075&1;
                           if ($6076) {
                            label = 788;
                            break L1;
                           }
                           $6077 = (($6074) + 18|0);
                           HEAP8[$6077>>0] = $6073;
                           __THREW__ = 0;
                           $6078 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6079 = __THREW__; __THREW__ = 0;
                           $6080 = $6079&1;
                           if ($6080) {
                            label = 788;
                            break L1;
                           }
                           $6081 = (($6078) + 17|0);
                           HEAP8[$6081>>0] = 1;
                           $6082 = (($4) + 40|0);
                           $6083 = +HEAPF64[$6082>>3];
                           __THREW__ = 0;
                           $6084 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6085 = __THREW__; __THREW__ = 0;
                           $6086 = $6085&1;
                           if ($6086) {
                            label = 788;
                            break L1;
                           }
                           $6087 = (($6084) + 8|0);
                           HEAPF64[$6087>>3] = $6083;
                           $6088 = (($4) + 539|0);
                           $6089 = HEAP8[$6088>>0]|0;
                           __THREW__ = 0;
                           $6090 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6091 = __THREW__; __THREW__ = 0;
                           $6092 = $6091&1;
                           if ($6092) {
                            label = 788;
                            break L1;
                           }
                           $6093 = (($6090) + 19|0);
                           HEAP8[$6093>>0] = $6089;
                           $6094 = (($4) + 539|0);
                           $6095 = (($6094) + 1|0);
                           $6096 = HEAP8[$6095>>0]|0;
                           __THREW__ = 0;
                           $6097 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6098 = __THREW__; __THREW__ = 0;
                           $6099 = $6098&1;
                           if ($6099) {
                            label = 788;
                            break L1;
                           }
                           $6100 = (($6097) + 19|0);
                           $6101 = (($6100) + 1|0);
                           HEAP8[$6101>>0] = $6096;
                           $6102 = (($4) + 541|0);
                           $6103 = HEAP8[$6102>>0]|0;
                           __THREW__ = 0;
                           $6104 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6105 = __THREW__; __THREW__ = 0;
                           $6106 = $6105&1;
                           if ($6106) {
                            label = 788;
                            break L1;
                           }
                           $6107 = (($6104) + 18|0);
                           HEAP8[$6107>>0] = $6103;
                           __THREW__ = 0;
                           $6108 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6109 = __THREW__; __THREW__ = 0;
                           $6110 = $6109&1;
                           if ($6110) {
                            label = 788;
                            break L1;
                           }
                           $6111 = (($6108) + 17|0);
                           HEAP8[$6111>>0] = 1;
                           $6112 = (($4) + 80|0);
                           $6113 = +HEAPF64[$6112>>3];
                           __THREW__ = 0;
                           $6114 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6115 = __THREW__; __THREW__ = 0;
                           $6116 = $6115&1;
                           if ($6116) {
                            label = 788;
                            break L1;
                           }
                           $6117 = (($6114) + 8|0);
                           HEAPF64[$6117>>3] = $6113;
                           $6118 = (($4) + 542|0);
                           $6119 = HEAP8[$6118>>0]|0;
                           __THREW__ = 0;
                           $6120 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6121 = __THREW__; __THREW__ = 0;
                           $6122 = $6121&1;
                           if ($6122) {
                            label = 788;
                            break L1;
                           }
                           $6123 = (($6120) + 19|0);
                           HEAP8[$6123>>0] = $6119;
                           $6124 = (($4) + 542|0);
                           $6125 = (($6124) + 1|0);
                           $6126 = HEAP8[$6125>>0]|0;
                           __THREW__ = 0;
                           $6127 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6128 = __THREW__; __THREW__ = 0;
                           $6129 = $6128&1;
                           if ($6129) {
                            label = 788;
                            break L1;
                           }
                           $6130 = (($6127) + 19|0);
                           $6131 = (($6130) + 1|0);
                           HEAP8[$6131>>0] = $6126;
                           $6132 = (($4) + 544|0);
                           $6133 = HEAP8[$6132>>0]|0;
                           __THREW__ = 0;
                           $6134 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6135 = __THREW__; __THREW__ = 0;
                           $6136 = $6135&1;
                           if ($6136) {
                            label = 788;
                            break L1;
                           }
                           $6137 = (($6134) + 18|0);
                           HEAP8[$6137>>0] = $6133;
                           __THREW__ = 0;
                           $6138 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6139 = __THREW__; __THREW__ = 0;
                           $6140 = $6139&1;
                           if ($6140) {
                            label = 788;
                            break L1;
                           }
                           $6141 = (($6138) + 17|0);
                           HEAP8[$6141>>0] = 1;
                           $6142 = (($4) + 120|0);
                           $6143 = +HEAPF64[$6142>>3];
                           __THREW__ = 0;
                           $6144 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6145 = __THREW__; __THREW__ = 0;
                           $6146 = $6145&1;
                           if ($6146) {
                            label = 788;
                            break L1;
                           }
                           $6147 = (($6144) + 8|0);
                           HEAPF64[$6147>>3] = $6143;
                           $6148 = (($4) + 545|0);
                           $6149 = HEAP8[$6148>>0]|0;
                           __THREW__ = 0;
                           $6150 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6151 = __THREW__; __THREW__ = 0;
                           $6152 = $6151&1;
                           if ($6152) {
                            label = 788;
                            break L1;
                           }
                           $6153 = (($6150) + 19|0);
                           HEAP8[$6153>>0] = $6149;
                           $6154 = (($4) + 545|0);
                           $6155 = (($6154) + 1|0);
                           $6156 = HEAP8[$6155>>0]|0;
                           __THREW__ = 0;
                           $6157 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6158 = __THREW__; __THREW__ = 0;
                           $6159 = $6158&1;
                           if ($6159) {
                            label = 788;
                            break L1;
                           }
                           $6160 = (($6157) + 19|0);
                           $6161 = (($6160) + 1|0);
                           HEAP8[$6161>>0] = $6156;
                           $6162 = (($4) + 547|0);
                           $6163 = HEAP8[$6162>>0]|0;
                           __THREW__ = 0;
                           $6164 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6165 = __THREW__; __THREW__ = 0;
                           $6166 = $6165&1;
                           if ($6166) {
                            label = 788;
                            break L1;
                           }
                           $6167 = (($6164) + 18|0);
                           HEAP8[$6167>>0] = $6163;
                           __THREW__ = 0;
                           $6168 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6169 = __THREW__; __THREW__ = 0;
                           $6170 = $6169&1;
                           if ($6170) {
                            label = 788;
                            break L1;
                           }
                           $6171 = (($6168) + 17|0);
                           HEAP8[$6171>>0] = 1;
                           $6172 = (($4) + 160|0);
                           $6173 = +HEAPF64[$6172>>3];
                           __THREW__ = 0;
                           $6174 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6175 = __THREW__; __THREW__ = 0;
                           $6176 = $6175&1;
                           if ($6176) {
                            label = 788;
                            break L1;
                           }
                           $6177 = (($6174) + 8|0);
                           HEAPF64[$6177>>3] = $6173;
                           $6178 = (($4) + 548|0);
                           $6179 = HEAP8[$6178>>0]|0;
                           __THREW__ = 0;
                           $6180 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6181 = __THREW__; __THREW__ = 0;
                           $6182 = $6181&1;
                           if ($6182) {
                            label = 788;
                            break L1;
                           }
                           $6183 = (($6180) + 19|0);
                           HEAP8[$6183>>0] = $6179;
                           $6184 = (($4) + 548|0);
                           $6185 = (($6184) + 1|0);
                           $6186 = HEAP8[$6185>>0]|0;
                           __THREW__ = 0;
                           $6187 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6188 = __THREW__; __THREW__ = 0;
                           $6189 = $6188&1;
                           if ($6189) {
                            label = 788;
                            break L1;
                           }
                           $6190 = (($6187) + 19|0);
                           $6191 = (($6190) + 1|0);
                           HEAP8[$6191>>0] = $6186;
                           $6192 = (($4) + 550|0);
                           $6193 = HEAP8[$6192>>0]|0;
                           __THREW__ = 0;
                           $6194 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6195 = __THREW__; __THREW__ = 0;
                           $6196 = $6195&1;
                           if ($6196) {
                            label = 788;
                            break L1;
                           }
                           $6197 = (($6194) + 18|0);
                           HEAP8[$6197>>0] = $6193;
                           __THREW__ = 0;
                           $6198 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6199 = __THREW__; __THREW__ = 0;
                           $6200 = $6199&1;
                           if ($6200) {
                            label = 788;
                            break L1;
                           }
                           $6201 = (($6198) + 17|0);
                           HEAP8[$6201>>0] = 1;
                           $6202 = (($4) + 200|0);
                           $6203 = +HEAPF64[$6202>>3];
                           __THREW__ = 0;
                           $6204 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6205 = __THREW__; __THREW__ = 0;
                           $6206 = $6205&1;
                           if ($6206) {
                            label = 788;
                            break L1;
                           }
                           $6207 = (($6204) + 8|0);
                           HEAPF64[$6207>>3] = $6203;
                           $6208 = (($4) + 551|0);
                           $6209 = HEAP8[$6208>>0]|0;
                           __THREW__ = 0;
                           $6210 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6211 = __THREW__; __THREW__ = 0;
                           $6212 = $6211&1;
                           if ($6212) {
                            label = 788;
                            break L1;
                           }
                           $6213 = (($6210) + 19|0);
                           HEAP8[$6213>>0] = $6209;
                           $6214 = (($4) + 551|0);
                           $6215 = (($6214) + 1|0);
                           $6216 = HEAP8[$6215>>0]|0;
                           __THREW__ = 0;
                           $6217 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6218 = __THREW__; __THREW__ = 0;
                           $6219 = $6218&1;
                           if ($6219) {
                            label = 788;
                            break L1;
                           }
                           $6220 = (($6217) + 19|0);
                           $6221 = (($6220) + 1|0);
                           HEAP8[$6221>>0] = $6216;
                           $6222 = (($4) + 553|0);
                           $6223 = HEAP8[$6222>>0]|0;
                           __THREW__ = 0;
                           $6224 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6225 = __THREW__; __THREW__ = 0;
                           $6226 = $6225&1;
                           if ($6226) {
                            label = 788;
                            break L1;
                           }
                           $6227 = (($6224) + 18|0);
                           HEAP8[$6227>>0] = $6223;
                           __THREW__ = 0;
                           invoke_vii(382,($vfree91|0),0);
                           $6228 = __THREW__; __THREW__ = 0;
                           $6229 = $6228&1;
                           if ($6229) {
                            label = 788;
                            break L1;
                           }
                           $6230 = $1;
                           $6231 = HEAP32[$6230>>2]|0;
                           $6232 = (($6231) + 8|0);
                           $6233 = HEAP32[$6232>>2]|0;
                           __THREW__ = 0;
                           (invoke_iiii($6233|0,($6230|0),($vinfos90|0),($vfree91|0))|0);
                           $6234 = __THREW__; __THREW__ = 0;
                           $6235 = $6234&1;
                           if ($6235) {
                            label = 789;
                            break L1;
                           }
                           __THREW__ = 0;
                           invoke_vi(366,($vfree91|0));
                           $6236 = __THREW__; __THREW__ = 0;
                           $6237 = $6236&1;
                           if ($6237) {
                            label = 788;
                            break L1;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos90);
                           break L1501;
                          }
                         } while(0);
                        } else {
                        }
                       } while(0);
                       $6238 = $ij587;
                       $6239 = (($6238) + 1)|0;
                       $ij587 = $6239;
                      }
                      label = 794;
                     } else {
                      label = 794;
                     }
                    } while(0);
                    if ((label|0) == 794) {
                     label = 0;
                    }
                    $6248 = $bgotonextstatement82;
                    $6249 = $6248&1;
                    if ($6249) {
                     $bgotonextstatement92 = 1;
                     $6250 = (($4) + 432|0);
                     $6251 = +HEAPF64[$6250>>3];
                     $6252 = (($4) + 168|0);
                     $6253 = +HEAPF64[$6252>>3];
                     $6254 = -1.0 * $6253;
                     $6255 = $6251 + $6254;
                     $x254 = $6255;
                     $6256 = (($4) + 168|0);
                     $6257 = +HEAPF64[$6256>>3];
                     $6258 = 1.0 * $6257;
                     $x255 = $6258;
                     $6259 = (($4) + 176|0);
                     $6260 = +HEAPF64[$6259>>3];
                     $6261 = 1.0 * $6260;
                     $x256 = $6261;
                     $6262 = (($4) + 120|0);
                     $6263 = +HEAPF64[$6262>>3];
                     $6264 = -1.5707963267949001 + $6263;
                     $6265 = (+__Z5IKabsd($6264));
                     $6266 = 3.14159265358979 + $6265;
                     $6267 = (+__Z6IKfmoddd($6266,6.2831853071795898));
                     $6268 = -3.14159265358979 + $6267;
                     HEAPF64[$evalcond31>>3] = $6268;
                     $6269 = $x254;
                     $6270 = (($evalcond31) + 8|0);
                     HEAPF64[$6270>>3] = $6269;
                     $6271 = $x254;
                     $6272 = (($evalcond31) + 16|0);
                     HEAPF64[$6272>>3] = $6271;
                     $6273 = (($4) + 360|0);
                     $6274 = +HEAPF64[$6273>>3];
                     $6275 = (($evalcond31) + 24|0);
                     HEAPF64[$6275>>3] = $6274;
                     $6276 = (($4) + 288|0);
                     $6277 = +HEAPF64[$6276>>3];
                     $6278 = $x256;
                     $6279 = -1.0 * $6278;
                     $6280 = $6277 + $6279;
                     $6281 = (($evalcond31) + 32|0);
                     HEAPF64[$6281>>3] = $6280;
                     $6282 = (($4) + 176|0);
                     $6283 = +HEAPF64[$6282>>3];
                     $6284 = (($4) + 288|0);
                     $6285 = +HEAPF64[$6284>>3];
                     $6286 = -1.0 * $6285;
                     $6287 = $6283 + $6286;
                     $6288 = (($evalcond31) + 40|0);
                     HEAPF64[$6288>>3] = $6287;
                     $6289 = (($4) + 168|0);
                     $6290 = +HEAPF64[$6289>>3];
                     $6291 = (($4) + 288|0);
                     $6292 = +HEAPF64[$6291>>3];
                     $6293 = $6290 * $6292;
                     $6294 = (($4) + 432|0);
                     $6295 = +HEAPF64[$6294>>3];
                     $6296 = -1.0 * $6295;
                     $6297 = $x256;
                     $6298 = $6296 * $6297;
                     $6299 = $6293 + $6298;
                     $6300 = (($evalcond31) + 48|0);
                     HEAPF64[$6300>>3] = $6299;
                     $6301 = (($4) + 384|0);
                     $6302 = +HEAPF64[$6301>>3];
                     $6303 = -1.0 * $6302;
                     $6304 = $x255;
                     $6305 = $6303 * $6304;
                     $6306 = (($4) + 240|0);
                     $6307 = +HEAPF64[$6306>>3];
                     $6308 = -1.0 * $6307;
                     $6309 = $x256;
                     $6310 = $6308 * $6309;
                     $6311 = $6305 + $6310;
                     $6312 = (($evalcond31) + 56|0);
                     HEAPF64[$6312>>3] = $6311;
                     $6313 = (($4) + 408|0);
                     $6314 = +HEAPF64[$6313>>3];
                     $6315 = -1.0 * $6314;
                     $6316 = $x255;
                     $6317 = $6315 * $6316;
                     $6318 = (($4) + 264|0);
                     $6319 = +HEAPF64[$6318>>3];
                     $6320 = -1.0 * $6319;
                     $6321 = $x256;
                     $6322 = $6320 * $6321;
                     $6323 = $6317 + $6322;
                     $6324 = (($evalcond31) + 64|0);
                     HEAPF64[$6324>>3] = $6323;
                     $6325 = (($4) + 432|0);
                     $6326 = +HEAPF64[$6325>>3];
                     $6327 = -1.0 * $6326;
                     $6328 = $x255;
                     $6329 = $6327 * $6328;
                     $6330 = 1.0 + $6329;
                     $6331 = (($4) + 288|0);
                     $6332 = +HEAPF64[$6331>>3];
                     $6333 = -1.0 * $6332;
                     $6334 = $x256;
                     $6335 = $6333 * $6334;
                     $6336 = $6330 + $6335;
                     $6337 = (($evalcond31) + 72|0);
                     HEAPF64[$6337>>3] = $6336;
                     $6338 = +HEAPF64[$evalcond31>>3];
                     $6339 = (+__Z5IKabsd($6338));
                     $6340 = $6339 < 9.9999999999999995E-7;
                     L1566: do {
                      if ($6340) {
                       $6341 = (($evalcond31) + 8|0);
                       $6342 = +HEAPF64[$6341>>3];
                       $6343 = (+__Z5IKabsd($6342));
                       $6344 = $6343 < 9.9999999999999995E-7;
                       if (!($6344)) {
                        label = 878;
                        break;
                       }
                       $6345 = (($evalcond31) + 16|0);
                       $6346 = +HEAPF64[$6345>>3];
                       $6347 = (+__Z5IKabsd($6346));
                       $6348 = $6347 < 9.9999999999999995E-7;
                       if (!($6348)) {
                        label = 878;
                        break;
                       }
                       $6349 = (($evalcond31) + 24|0);
                       $6350 = +HEAPF64[$6349>>3];
                       $6351 = (+__Z5IKabsd($6350));
                       $6352 = $6351 < 9.9999999999999995E-7;
                       if (!($6352)) {
                        label = 878;
                        break;
                       }
                       $6353 = (($evalcond31) + 32|0);
                       $6354 = +HEAPF64[$6353>>3];
                       $6355 = (+__Z5IKabsd($6354));
                       $6356 = $6355 < 9.9999999999999995E-7;
                       if (!($6356)) {
                        label = 878;
                        break;
                       }
                       $6357 = (($evalcond31) + 40|0);
                       $6358 = +HEAPF64[$6357>>3];
                       $6359 = (+__Z5IKabsd($6358));
                       $6360 = $6359 < 9.9999999999999995E-7;
                       if (!($6360)) {
                        label = 878;
                        break;
                       }
                       $6361 = (($evalcond31) + 48|0);
                       $6362 = +HEAPF64[$6361>>3];
                       $6363 = (+__Z5IKabsd($6362));
                       $6364 = $6363 < 9.9999999999999995E-7;
                       if (!($6364)) {
                        label = 878;
                        break;
                       }
                       $6365 = (($evalcond31) + 56|0);
                       $6366 = +HEAPF64[$6365>>3];
                       $6367 = (+__Z5IKabsd($6366));
                       $6368 = $6367 < 9.9999999999999995E-7;
                       if (!($6368)) {
                        label = 878;
                        break;
                       }
                       $6369 = (($evalcond31) + 64|0);
                       $6370 = +HEAPF64[$6369>>3];
                       $6371 = (+__Z5IKabsd($6370));
                       $6372 = $6371 < 9.9999999999999995E-7;
                       if (!($6372)) {
                        label = 878;
                        break;
                       }
                       $6373 = (($evalcond31) + 72|0);
                       $6374 = +HEAPF64[$6373>>3];
                       $6375 = (+__Z5IKabsd($6374));
                       $6376 = $6375 < 9.9999999999999995E-7;
                       if (!($6376)) {
                        label = 878;
                        break;
                       }
                       $bgotonextstatement92 = 0;
                       ;HEAP8[$j5valid96+0>>0]=0|0;
                       $6377 = (($4) + 553|0);
                       HEAP8[$6377>>0] = 1;
                       $6378 = (($4) + 336|0);
                       $6379 = +HEAPF64[$6378>>3];
                       $6380 = -1.0 * $6379;
                       $6381 = (+__Z5IKabsd($6380));
                       $6382 = $6381 < 1.9999999999999999E-6;
                       do {
                        if ($6382) {
                         $6383 = (($4) + 312|0);
                         $6384 = +HEAPF64[$6383>>3];
                         $6385 = (+__Z5IKabsd($6384));
                         $6386 = $6385 < 1.9999999999999999E-6;
                         if (!($6386)) {
                          break;
                         }
                         $6387 = (($4) + 336|0);
                         $6388 = +HEAPF64[$6387>>3];
                         $6389 = -1.0 * $6388;
                         $6390 = (+__Z5IKsqrd($6389));
                         $6391 = (($4) + 312|0);
                         $6392 = +HEAPF64[$6391>>3];
                         $6393 = (+__Z5IKsqrd($6392));
                         $6394 = $6390 + $6393;
                         $6395 = $6394 - 1.0;
                         $6396 = (+__Z5IKabsd($6395));
                         $6397 = $6396 <= 1.9999999999999999E-6;
                         if (!($6397)) {
                          break;
                         }
                         break L1566;
                        }
                       } while(0);
                       $6398 = (($4) + 336|0);
                       $6399 = +HEAPF64[$6398>>3];
                       $6400 = -1.0 * $6399;
                       $6401 = (($4) + 312|0);
                       $6402 = +HEAPF64[$6401>>3];
                       $6403 = (+__Z7IKatan2dd($6400,$6402));
                       HEAPF64[$j5array93>>3] = $6403;
                       $6404 = +HEAPF64[$j5array93>>3];
                       $6405 = (+__Z5IKsind($6404));
                       HEAPF64[$sj5array95>>3] = $6405;
                       $6406 = +HEAPF64[$j5array93>>3];
                       $6407 = (+__Z5IKcosd($6406));
                       HEAPF64[$cj5array94>>3] = $6407;
                       $6408 = +HEAPF64[$j5array93>>3];
                       $6409 = $6408 > 3.14159265358979;
                       if ($6409) {
                        $6410 = +HEAPF64[$j5array93>>3];
                        $6411 = $6410 - 6.2831853071795898;
                        HEAPF64[$j5array93>>3] = $6411;
                       } else {
                        $6412 = +HEAPF64[$j5array93>>3];
                        $6413 = $6412 < -3.14159265358979;
                        if ($6413) {
                         $6414 = +HEAPF64[$j5array93>>3];
                         $6415 = $6414 + 6.2831853071795898;
                         HEAPF64[$j5array93>>3] = $6415;
                        }
                       }
                       HEAP8[$j5valid96>>0] = 1;
                       $ij597 = 0;
                       while(1) {
                        $6416 = $ij597;
                        $6417 = ($6416|0)<(1);
                        if (!($6417)) {
                         break;
                        }
                        $6418 = $ij597;
                        $6419 = (($j5valid96) + ($6418)|0);
                        $6420 = HEAP8[$6419>>0]|0;
                        $6421 = $6420&1;
                        L1592: do {
                         if ($6421) {
                          $6422 = $ij597;
                          $6423 = $6422&255;
                          $6424 = (($4) + 551|0);
                          HEAP8[$6424>>0] = $6423;
                          $6425 = (($4) + 551|0);
                          $6426 = (($6425) + 1|0);
                          HEAP8[$6426>>0] = -1;
                          $6427 = $ij597;
                          $6428 = (($6427) + 1)|0;
                          $iij598 = $6428;
                          L1595: while(1) {
                           $6429 = $iij598;
                           $6430 = ($6429|0)<(1);
                           if (!($6430)) {
                            break;
                           }
                           $6431 = $iij598;
                           $6432 = (($j5valid96) + ($6431)|0);
                           $6433 = HEAP8[$6432>>0]|0;
                           $6434 = $6433&1;
                           do {
                            if ($6434) {
                             $6435 = $ij597;
                             $6436 = (($cj5array94) + ($6435<<3)|0);
                             $6437 = +HEAPF64[$6436>>3];
                             $6438 = $iij598;
                             $6439 = (($cj5array94) + ($6438<<3)|0);
                             $6440 = +HEAPF64[$6439>>3];
                             $6441 = $6437 - $6440;
                             $6442 = (+__Z5IKabsd($6441));
                             $6443 = $6442 < 9.9999999999999995E-7;
                             if (!($6443)) {
                              break;
                             }
                             $6444 = $ij597;
                             $6445 = (($sj5array95) + ($6444<<3)|0);
                             $6446 = +HEAPF64[$6445>>3];
                             $6447 = $iij598;
                             $6448 = (($sj5array95) + ($6447<<3)|0);
                             $6449 = +HEAPF64[$6448>>3];
                             $6450 = $6446 - $6449;
                             $6451 = (+__Z5IKabsd($6450));
                             $6452 = $6451 < 9.9999999999999995E-7;
                             if ($6452) {
                              label = 825;
                              break L1595;
                             }
                            }
                           } while(0);
                           $6459 = $iij598;
                           $6460 = (($6459) + 1)|0;
                           $iij598 = $6460;
                          }
                          if ((label|0) == 825) {
                           label = 0;
                           $6453 = $iij598;
                           $6454 = (($j5valid96) + ($6453)|0);
                           HEAP8[$6454>>0] = 0;
                           $6455 = $iij598;
                           $6456 = $6455&255;
                           $6457 = (($4) + 551|0);
                           $6458 = (($6457) + 1|0);
                           HEAP8[$6458>>0] = $6456;
                          }
                          $6461 = $ij597;
                          $6462 = (($j5array93) + ($6461<<3)|0);
                          $6463 = +HEAPF64[$6462>>3];
                          $6464 = (($4) + 200|0);
                          HEAPF64[$6464>>3] = $6463;
                          $6465 = $ij597;
                          $6466 = (($cj5array94) + ($6465<<3)|0);
                          $6467 = +HEAPF64[$6466>>3];
                          $6468 = (($4) + 208|0);
                          HEAPF64[$6468>>3] = $6467;
                          $6469 = $ij597;
                          $6470 = (($sj5array95) + ($6469<<3)|0);
                          $6471 = +HEAPF64[$6470>>3];
                          $6472 = (($4) + 216|0);
                          HEAPF64[$6472>>3] = $6471;
                          $6473 = (($4) + 200|0);
                          $6474 = +HEAPF64[$6473>>3];
                          $6475 = (+__Z5IKcosd($6474));
                          $x257 = $6475;
                          $6476 = (($4) + 200|0);
                          $6477 = +HEAPF64[$6476>>3];
                          $6478 = (+__Z5IKsind($6477));
                          $x258 = $6478;
                          $6479 = (($4) + 288|0);
                          $6480 = +HEAPF64[$6479>>3];
                          $6481 = 1.0 * $6480;
                          $x259 = $6481;
                          $6482 = $x258;
                          $6483 = (($4) + 336|0);
                          $6484 = +HEAPF64[$6483>>3];
                          $6485 = $6482 + $6484;
                          HEAPF64[$evalcond99>>3] = $6485;
                          $6486 = (($4) + 312|0);
                          $6487 = +HEAPF64[$6486>>3];
                          $6488 = $x257;
                          $6489 = -1.0 * $6488;
                          $6490 = $6487 + $6489;
                          $6491 = (($evalcond99) + 8|0);
                          HEAPF64[$6491>>3] = $6490;
                          $6492 = (($4) + 432|0);
                          $6493 = +HEAPF64[$6492>>3];
                          $6494 = $x257;
                          $6495 = $6493 * $6494;
                          $6496 = (($4) + 264|0);
                          $6497 = +HEAPF64[$6496>>3];
                          $6498 = $6495 + $6497;
                          $6499 = (($evalcond99) + 16|0);
                          HEAPF64[$6499>>3] = $6498;
                          $6500 = (($4) + 432|0);
                          $6501 = +HEAPF64[$6500>>3];
                          $6502 = $x258;
                          $6503 = $6501 * $6502;
                          $6504 = (($4) + 240|0);
                          $6505 = +HEAPF64[$6504>>3];
                          $6506 = $6503 + $6505;
                          $6507 = (($evalcond99) + 24|0);
                          HEAPF64[$6507>>3] = $6506;
                          $6508 = (($4) + 384|0);
                          $6509 = +HEAPF64[$6508>>3];
                          $6510 = $x258;
                          $6511 = -1.0 * $6510;
                          $6512 = $x259;
                          $6513 = $6511 * $6512;
                          $6514 = $6509 + $6513;
                          $6515 = (($evalcond99) + 32|0);
                          HEAPF64[$6515>>3] = $6514;
                          $6516 = $x257;
                          $6517 = -1.0 * $6516;
                          $6518 = $x259;
                          $6519 = $6517 * $6518;
                          $6520 = (($4) + 408|0);
                          $6521 = +HEAPF64[$6520>>3];
                          $6522 = $6519 + $6521;
                          $6523 = (($evalcond99) + 40|0);
                          HEAPF64[$6523>>3] = $6522;
                          $6524 = (($4) + 240|0);
                          $6525 = +HEAPF64[$6524>>3];
                          $6526 = (($4) + 432|0);
                          $6527 = +HEAPF64[$6526>>3];
                          $6528 = $6525 * $6527;
                          $6529 = $x258;
                          $6530 = $6528 + $6529;
                          $6531 = (($4) + 384|0);
                          $6532 = +HEAPF64[$6531>>3];
                          $6533 = -1.0 * $6532;
                          $6534 = $x259;
                          $6535 = $6533 * $6534;
                          $6536 = $6530 + $6535;
                          $6537 = (($evalcond99) + 48|0);
                          HEAPF64[$6537>>3] = $6536;
                          $6538 = (($4) + 408|0);
                          $6539 = +HEAPF64[$6538>>3];
                          $6540 = -1.0 * $6539;
                          $6541 = $x259;
                          $6542 = $6540 * $6541;
                          $6543 = (($4) + 264|0);
                          $6544 = +HEAPF64[$6543>>3];
                          $6545 = (($4) + 432|0);
                          $6546 = +HEAPF64[$6545>>3];
                          $6547 = $6544 * $6546;
                          $6548 = $6542 + $6547;
                          $6549 = $x257;
                          $6550 = $6548 + $6549;
                          $6551 = (($evalcond99) + 56|0);
                          HEAPF64[$6551>>3] = $6550;
                          $6552 = +HEAPF64[$evalcond99>>3];
                          $6553 = (+__Z5IKabsd($6552));
                          $6554 = $6553 > 5.0000000000000004E-6;
                          do {
                           if (!($6554)) {
                            $6555 = (($evalcond99) + 8|0);
                            $6556 = +HEAPF64[$6555>>3];
                            $6557 = (+__Z5IKabsd($6556));
                            $6558 = $6557 > 5.0000000000000004E-6;
                            if ($6558) {
                             break;
                            }
                            $6559 = (($evalcond99) + 16|0);
                            $6560 = +HEAPF64[$6559>>3];
                            $6561 = (+__Z5IKabsd($6560));
                            $6562 = $6561 > 5.0000000000000004E-6;
                            if ($6562) {
                             break;
                            }
                            $6563 = (($evalcond99) + 24|0);
                            $6564 = +HEAPF64[$6563>>3];
                            $6565 = (+__Z5IKabsd($6564));
                            $6566 = $6565 > 5.0000000000000004E-6;
                            if ($6566) {
                             break;
                            }
                            $6567 = (($evalcond99) + 32|0);
                            $6568 = +HEAPF64[$6567>>3];
                            $6569 = (+__Z5IKabsd($6568));
                            $6570 = $6569 > 5.0000000000000004E-6;
                            if ($6570) {
                             break;
                            }
                            $6571 = (($evalcond99) + 40|0);
                            $6572 = +HEAPF64[$6571>>3];
                            $6573 = (+__Z5IKabsd($6572));
                            $6574 = $6573 > 5.0000000000000004E-6;
                            if ($6574) {
                             break;
                            }
                            $6575 = (($evalcond99) + 48|0);
                            $6576 = +HEAPF64[$6575>>3];
                            $6577 = (+__Z5IKabsd($6576));
                            $6578 = $6577 > 5.0000000000000004E-6;
                            if ($6578) {
                             break;
                            }
                            $6579 = (($evalcond99) + 56|0);
                            $6580 = +HEAPF64[$6579>>3];
                            $6581 = (+__Z5IKabsd($6580));
                            $6582 = $6581 > 5.0000000000000004E-6;
                            if ($6582) {
                             break;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos100,6);
                            __THREW__ = 0;
                            $6583 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6584 = __THREW__; __THREW__ = 0;
                            $6585 = $6584&1;
                            if ($6585) {
                             label = 872;
                             break L1;
                            }
                            $6586 = (($6583) + 17|0);
                            HEAP8[$6586>>0] = 1;
                            $6587 = +HEAPF64[$4>>3];
                            __THREW__ = 0;
                            $6588 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6589 = __THREW__; __THREW__ = 0;
                            $6590 = $6589&1;
                            if ($6590) {
                             label = 872;
                             break L1;
                            }
                            $6591 = (($6588) + 8|0);
                            HEAPF64[$6591>>3] = $6587;
                            $6592 = (($4) + 536|0);
                            $6593 = HEAP8[$6592>>0]|0;
                            __THREW__ = 0;
                            $6594 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6595 = __THREW__; __THREW__ = 0;
                            $6596 = $6595&1;
                            if ($6596) {
                             label = 872;
                             break L1;
                            }
                            $6597 = (($6594) + 19|0);
                            HEAP8[$6597>>0] = $6593;
                            $6598 = (($4) + 536|0);
                            $6599 = (($6598) + 1|0);
                            $6600 = HEAP8[$6599>>0]|0;
                            __THREW__ = 0;
                            $6601 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6602 = __THREW__; __THREW__ = 0;
                            $6603 = $6602&1;
                            if ($6603) {
                             label = 872;
                             break L1;
                            }
                            $6604 = (($6601) + 19|0);
                            $6605 = (($6604) + 1|0);
                            HEAP8[$6605>>0] = $6600;
                            $6606 = (($4) + 538|0);
                            $6607 = HEAP8[$6606>>0]|0;
                            __THREW__ = 0;
                            $6608 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6609 = __THREW__; __THREW__ = 0;
                            $6610 = $6609&1;
                            if ($6610) {
                             label = 872;
                             break L1;
                            }
                            $6611 = (($6608) + 18|0);
                            HEAP8[$6611>>0] = $6607;
                            __THREW__ = 0;
                            $6612 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6613 = __THREW__; __THREW__ = 0;
                            $6614 = $6613&1;
                            if ($6614) {
                             label = 872;
                             break L1;
                            }
                            $6615 = (($6612) + 17|0);
                            HEAP8[$6615>>0] = 1;
                            $6616 = (($4) + 40|0);
                            $6617 = +HEAPF64[$6616>>3];
                            __THREW__ = 0;
                            $6618 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6619 = __THREW__; __THREW__ = 0;
                            $6620 = $6619&1;
                            if ($6620) {
                             label = 872;
                             break L1;
                            }
                            $6621 = (($6618) + 8|0);
                            HEAPF64[$6621>>3] = $6617;
                            $6622 = (($4) + 539|0);
                            $6623 = HEAP8[$6622>>0]|0;
                            __THREW__ = 0;
                            $6624 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6625 = __THREW__; __THREW__ = 0;
                            $6626 = $6625&1;
                            if ($6626) {
                             label = 872;
                             break L1;
                            }
                            $6627 = (($6624) + 19|0);
                            HEAP8[$6627>>0] = $6623;
                            $6628 = (($4) + 539|0);
                            $6629 = (($6628) + 1|0);
                            $6630 = HEAP8[$6629>>0]|0;
                            __THREW__ = 0;
                            $6631 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6632 = __THREW__; __THREW__ = 0;
                            $6633 = $6632&1;
                            if ($6633) {
                             label = 872;
                             break L1;
                            }
                            $6634 = (($6631) + 19|0);
                            $6635 = (($6634) + 1|0);
                            HEAP8[$6635>>0] = $6630;
                            $6636 = (($4) + 541|0);
                            $6637 = HEAP8[$6636>>0]|0;
                            __THREW__ = 0;
                            $6638 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6639 = __THREW__; __THREW__ = 0;
                            $6640 = $6639&1;
                            if ($6640) {
                             label = 872;
                             break L1;
                            }
                            $6641 = (($6638) + 18|0);
                            HEAP8[$6641>>0] = $6637;
                            __THREW__ = 0;
                            $6642 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6643 = __THREW__; __THREW__ = 0;
                            $6644 = $6643&1;
                            if ($6644) {
                             label = 872;
                             break L1;
                            }
                            $6645 = (($6642) + 17|0);
                            HEAP8[$6645>>0] = 1;
                            $6646 = (($4) + 80|0);
                            $6647 = +HEAPF64[$6646>>3];
                            __THREW__ = 0;
                            $6648 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6649 = __THREW__; __THREW__ = 0;
                            $6650 = $6649&1;
                            if ($6650) {
                             label = 872;
                             break L1;
                            }
                            $6651 = (($6648) + 8|0);
                            HEAPF64[$6651>>3] = $6647;
                            $6652 = (($4) + 542|0);
                            $6653 = HEAP8[$6652>>0]|0;
                            __THREW__ = 0;
                            $6654 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6655 = __THREW__; __THREW__ = 0;
                            $6656 = $6655&1;
                            if ($6656) {
                             label = 872;
                             break L1;
                            }
                            $6657 = (($6654) + 19|0);
                            HEAP8[$6657>>0] = $6653;
                            $6658 = (($4) + 542|0);
                            $6659 = (($6658) + 1|0);
                            $6660 = HEAP8[$6659>>0]|0;
                            __THREW__ = 0;
                            $6661 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6662 = __THREW__; __THREW__ = 0;
                            $6663 = $6662&1;
                            if ($6663) {
                             label = 872;
                             break L1;
                            }
                            $6664 = (($6661) + 19|0);
                            $6665 = (($6664) + 1|0);
                            HEAP8[$6665>>0] = $6660;
                            $6666 = (($4) + 544|0);
                            $6667 = HEAP8[$6666>>0]|0;
                            __THREW__ = 0;
                            $6668 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6669 = __THREW__; __THREW__ = 0;
                            $6670 = $6669&1;
                            if ($6670) {
                             label = 872;
                             break L1;
                            }
                            $6671 = (($6668) + 18|0);
                            HEAP8[$6671>>0] = $6667;
                            __THREW__ = 0;
                            $6672 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6673 = __THREW__; __THREW__ = 0;
                            $6674 = $6673&1;
                            if ($6674) {
                             label = 872;
                             break L1;
                            }
                            $6675 = (($6672) + 17|0);
                            HEAP8[$6675>>0] = 1;
                            $6676 = (($4) + 120|0);
                            $6677 = +HEAPF64[$6676>>3];
                            __THREW__ = 0;
                            $6678 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6679 = __THREW__; __THREW__ = 0;
                            $6680 = $6679&1;
                            if ($6680) {
                             label = 872;
                             break L1;
                            }
                            $6681 = (($6678) + 8|0);
                            HEAPF64[$6681>>3] = $6677;
                            $6682 = (($4) + 545|0);
                            $6683 = HEAP8[$6682>>0]|0;
                            __THREW__ = 0;
                            $6684 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6685 = __THREW__; __THREW__ = 0;
                            $6686 = $6685&1;
                            if ($6686) {
                             label = 872;
                             break L1;
                            }
                            $6687 = (($6684) + 19|0);
                            HEAP8[$6687>>0] = $6683;
                            $6688 = (($4) + 545|0);
                            $6689 = (($6688) + 1|0);
                            $6690 = HEAP8[$6689>>0]|0;
                            __THREW__ = 0;
                            $6691 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6692 = __THREW__; __THREW__ = 0;
                            $6693 = $6692&1;
                            if ($6693) {
                             label = 872;
                             break L1;
                            }
                            $6694 = (($6691) + 19|0);
                            $6695 = (($6694) + 1|0);
                            HEAP8[$6695>>0] = $6690;
                            $6696 = (($4) + 547|0);
                            $6697 = HEAP8[$6696>>0]|0;
                            __THREW__ = 0;
                            $6698 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6699 = __THREW__; __THREW__ = 0;
                            $6700 = $6699&1;
                            if ($6700) {
                             label = 872;
                             break L1;
                            }
                            $6701 = (($6698) + 18|0);
                            HEAP8[$6701>>0] = $6697;
                            __THREW__ = 0;
                            $6702 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6703 = __THREW__; __THREW__ = 0;
                            $6704 = $6703&1;
                            if ($6704) {
                             label = 872;
                             break L1;
                            }
                            $6705 = (($6702) + 17|0);
                            HEAP8[$6705>>0] = 1;
                            $6706 = (($4) + 160|0);
                            $6707 = +HEAPF64[$6706>>3];
                            __THREW__ = 0;
                            $6708 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6709 = __THREW__; __THREW__ = 0;
                            $6710 = $6709&1;
                            if ($6710) {
                             label = 872;
                             break L1;
                            }
                            $6711 = (($6708) + 8|0);
                            HEAPF64[$6711>>3] = $6707;
                            $6712 = (($4) + 548|0);
                            $6713 = HEAP8[$6712>>0]|0;
                            __THREW__ = 0;
                            $6714 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6715 = __THREW__; __THREW__ = 0;
                            $6716 = $6715&1;
                            if ($6716) {
                             label = 872;
                             break L1;
                            }
                            $6717 = (($6714) + 19|0);
                            HEAP8[$6717>>0] = $6713;
                            $6718 = (($4) + 548|0);
                            $6719 = (($6718) + 1|0);
                            $6720 = HEAP8[$6719>>0]|0;
                            __THREW__ = 0;
                            $6721 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6722 = __THREW__; __THREW__ = 0;
                            $6723 = $6722&1;
                            if ($6723) {
                             label = 872;
                             break L1;
                            }
                            $6724 = (($6721) + 19|0);
                            $6725 = (($6724) + 1|0);
                            HEAP8[$6725>>0] = $6720;
                            $6726 = (($4) + 550|0);
                            $6727 = HEAP8[$6726>>0]|0;
                            __THREW__ = 0;
                            $6728 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6729 = __THREW__; __THREW__ = 0;
                            $6730 = $6729&1;
                            if ($6730) {
                             label = 872;
                             break L1;
                            }
                            $6731 = (($6728) + 18|0);
                            HEAP8[$6731>>0] = $6727;
                            __THREW__ = 0;
                            $6732 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6733 = __THREW__; __THREW__ = 0;
                            $6734 = $6733&1;
                            if ($6734) {
                             label = 872;
                             break L1;
                            }
                            $6735 = (($6732) + 17|0);
                            HEAP8[$6735>>0] = 1;
                            $6736 = (($4) + 200|0);
                            $6737 = +HEAPF64[$6736>>3];
                            __THREW__ = 0;
                            $6738 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6739 = __THREW__; __THREW__ = 0;
                            $6740 = $6739&1;
                            if ($6740) {
                             label = 872;
                             break L1;
                            }
                            $6741 = (($6738) + 8|0);
                            HEAPF64[$6741>>3] = $6737;
                            $6742 = (($4) + 551|0);
                            $6743 = HEAP8[$6742>>0]|0;
                            __THREW__ = 0;
                            $6744 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6745 = __THREW__; __THREW__ = 0;
                            $6746 = $6745&1;
                            if ($6746) {
                             label = 872;
                             break L1;
                            }
                            $6747 = (($6744) + 19|0);
                            HEAP8[$6747>>0] = $6743;
                            $6748 = (($4) + 551|0);
                            $6749 = (($6748) + 1|0);
                            $6750 = HEAP8[$6749>>0]|0;
                            __THREW__ = 0;
                            $6751 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6752 = __THREW__; __THREW__ = 0;
                            $6753 = $6752&1;
                            if ($6753) {
                             label = 872;
                             break L1;
                            }
                            $6754 = (($6751) + 19|0);
                            $6755 = (($6754) + 1|0);
                            HEAP8[$6755>>0] = $6750;
                            $6756 = (($4) + 553|0);
                            $6757 = HEAP8[$6756>>0]|0;
                            __THREW__ = 0;
                            $6758 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6759 = __THREW__; __THREW__ = 0;
                            $6760 = $6759&1;
                            if ($6760) {
                             label = 872;
                             break L1;
                            }
                            $6761 = (($6758) + 18|0);
                            HEAP8[$6761>>0] = $6757;
                            __THREW__ = 0;
                            invoke_vii(382,($vfree101|0),0);
                            $6762 = __THREW__; __THREW__ = 0;
                            $6763 = $6762&1;
                            if ($6763) {
                             label = 872;
                             break L1;
                            }
                            $6764 = $1;
                            $6765 = HEAP32[$6764>>2]|0;
                            $6766 = (($6765) + 8|0);
                            $6767 = HEAP32[$6766>>2]|0;
                            __THREW__ = 0;
                            (invoke_iiii($6767|0,($6764|0),($vinfos100|0),($vfree101|0))|0);
                            $6768 = __THREW__; __THREW__ = 0;
                            $6769 = $6768&1;
                            if ($6769) {
                             label = 873;
                             break L1;
                            }
                            __THREW__ = 0;
                            invoke_vi(366,($vfree101|0));
                            $6770 = __THREW__; __THREW__ = 0;
                            $6771 = $6770&1;
                            if ($6771) {
                             label = 872;
                             break L1;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos100);
                            break L1592;
                           }
                          } while(0);
                         } else {
                         }
                        } while(0);
                        $6772 = $ij597;
                        $6773 = (($6772) + 1)|0;
                        $ij597 = $6773;
                       }
                       label = 878;
                      } else {
                       label = 878;
                      }
                     } while(0);
                     if ((label|0) == 878) {
                      label = 0;
                     }
                     $6782 = $bgotonextstatement92;
                     $6783 = $6782&1;
                     if ($6783) {
                      $bgotonextstatement102 = 1;
                      $6784 = (($4) + 432|0);
                      $6785 = +HEAPF64[$6784>>3];
                      $6786 = (($4) + 168|0);
                      $6787 = +HEAPF64[$6786>>3];
                      $6788 = -1.0 * $6787;
                      $6789 = $6785 + $6788;
                      $x260 = $6789;
                      $6790 = (($4) + 176|0);
                      $6791 = +HEAPF64[$6790>>3];
                      $6792 = (($4) + 288|0);
                      $6793 = +HEAPF64[$6792>>3];
                      $6794 = $6791 + $6793;
                      $x261 = $6794;
                      $6795 = (($4) + 168|0);
                      $6796 = +HEAPF64[$6795>>3];
                      $6797 = 1.0 * $6796;
                      $x262 = $6797;
                      $6798 = (($4) + 120|0);
                      $6799 = +HEAPF64[$6798>>3];
                      $6800 = 1.5707963267949001 + $6799;
                      $6801 = (+__Z5IKabsd($6800));
                      $6802 = 3.14159265358979 + $6801;
                      $6803 = (+__Z6IKfmoddd($6802,6.2831853071795898));
                      $6804 = -3.14159265358979 + $6803;
                      HEAPF64[$evalcond31>>3] = $6804;
                      $6805 = $x260;
                      $6806 = (($evalcond31) + 8|0);
                      HEAPF64[$6806>>3] = $6805;
                      $6807 = $x260;
                      $6808 = (($evalcond31) + 16|0);
                      HEAPF64[$6808>>3] = $6807;
                      $6809 = (($4) + 360|0);
                      $6810 = +HEAPF64[$6809>>3];
                      $6811 = (($evalcond31) + 24|0);
                      HEAPF64[$6811>>3] = $6810;
                      $6812 = $x261;
                      $6813 = (($evalcond31) + 32|0);
                      HEAPF64[$6813>>3] = $6812;
                      $6814 = $x261;
                      $6815 = (($evalcond31) + 40|0);
                      HEAPF64[$6815>>3] = $6814;
                      $6816 = (($4) + 432|0);
                      $6817 = +HEAPF64[$6816>>3];
                      $6818 = -1.0 * $6817;
                      $6819 = (($4) + 176|0);
                      $6820 = +HEAPF64[$6819>>3];
                      $6821 = $6818 * $6820;
                      $6822 = (($4) + 288|0);
                      $6823 = +HEAPF64[$6822>>3];
                      $6824 = -1.0 * $6823;
                      $6825 = $x262;
                      $6826 = $6824 * $6825;
                      $6827 = $6821 + $6826;
                      $6828 = (($evalcond31) + 48|0);
                      HEAPF64[$6828>>3] = $6827;
                      $6829 = (($4) + 240|0);
                      $6830 = +HEAPF64[$6829>>3];
                      $6831 = (($4) + 176|0);
                      $6832 = +HEAPF64[$6831>>3];
                      $6833 = $6830 * $6832;
                      $6834 = (($4) + 384|0);
                      $6835 = +HEAPF64[$6834>>3];
                      $6836 = -1.0 * $6835;
                      $6837 = $x262;
                      $6838 = $6836 * $6837;
                      $6839 = $6833 + $6838;
                      $6840 = (($evalcond31) + 56|0);
                      HEAPF64[$6840>>3] = $6839;
                      $6841 = (($4) + 264|0);
                      $6842 = +HEAPF64[$6841>>3];
                      $6843 = (($4) + 176|0);
                      $6844 = +HEAPF64[$6843>>3];
                      $6845 = $6842 * $6844;
                      $6846 = (($4) + 408|0);
                      $6847 = +HEAPF64[$6846>>3];
                      $6848 = -1.0 * $6847;
                      $6849 = $x262;
                      $6850 = $6848 * $6849;
                      $6851 = $6845 + $6850;
                      $6852 = (($evalcond31) + 64|0);
                      HEAPF64[$6852>>3] = $6851;
                      $6853 = (($4) + 288|0);
                      $6854 = +HEAPF64[$6853>>3];
                      $6855 = (($4) + 176|0);
                      $6856 = +HEAPF64[$6855>>3];
                      $6857 = $6854 * $6856;
                      $6858 = 1.0 + $6857;
                      $6859 = (($4) + 432|0);
                      $6860 = +HEAPF64[$6859>>3];
                      $6861 = -1.0 * $6860;
                      $6862 = $x262;
                      $6863 = $6861 * $6862;
                      $6864 = $6858 + $6863;
                      $6865 = (($evalcond31) + 72|0);
                      HEAPF64[$6865>>3] = $6864;
                      $6866 = +HEAPF64[$evalcond31>>3];
                      $6867 = (+__Z5IKabsd($6866));
                      $6868 = $6867 < 9.9999999999999995E-7;
                      do {
                       if ($6868) {
                        $6869 = (($evalcond31) + 8|0);
                        $6870 = +HEAPF64[$6869>>3];
                        $6871 = (+__Z5IKabsd($6870));
                        $6872 = $6871 < 9.9999999999999995E-7;
                        if (!($6872)) {
                         label = 962;
                         break;
                        }
                        $6873 = (($evalcond31) + 16|0);
                        $6874 = +HEAPF64[$6873>>3];
                        $6875 = (+__Z5IKabsd($6874));
                        $6876 = $6875 < 9.9999999999999995E-7;
                        if (!($6876)) {
                         label = 962;
                         break;
                        }
                        $6877 = (($evalcond31) + 24|0);
                        $6878 = +HEAPF64[$6877>>3];
                        $6879 = (+__Z5IKabsd($6878));
                        $6880 = $6879 < 9.9999999999999995E-7;
                        if (!($6880)) {
                         label = 962;
                         break;
                        }
                        $6881 = (($evalcond31) + 32|0);
                        $6882 = +HEAPF64[$6881>>3];
                        $6883 = (+__Z5IKabsd($6882));
                        $6884 = $6883 < 9.9999999999999995E-7;
                        if (!($6884)) {
                         label = 962;
                         break;
                        }
                        $6885 = (($evalcond31) + 40|0);
                        $6886 = +HEAPF64[$6885>>3];
                        $6887 = (+__Z5IKabsd($6886));
                        $6888 = $6887 < 9.9999999999999995E-7;
                        if (!($6888)) {
                         label = 962;
                         break;
                        }
                        $6889 = (($evalcond31) + 48|0);
                        $6890 = +HEAPF64[$6889>>3];
                        $6891 = (+__Z5IKabsd($6890));
                        $6892 = $6891 < 9.9999999999999995E-7;
                        if (!($6892)) {
                         label = 962;
                         break;
                        }
                        $6893 = (($evalcond31) + 56|0);
                        $6894 = +HEAPF64[$6893>>3];
                        $6895 = (+__Z5IKabsd($6894));
                        $6896 = $6895 < 9.9999999999999995E-7;
                        if (!($6896)) {
                         label = 962;
                         break;
                        }
                        $6897 = (($evalcond31) + 64|0);
                        $6898 = +HEAPF64[$6897>>3];
                        $6899 = (+__Z5IKabsd($6898));
                        $6900 = $6899 < 9.9999999999999995E-7;
                        if (!($6900)) {
                         label = 962;
                         break;
                        }
                        $6901 = (($evalcond31) + 72|0);
                        $6902 = +HEAPF64[$6901>>3];
                        $6903 = (+__Z5IKabsd($6902));
                        $6904 = $6903 < 9.9999999999999995E-7;
                        if (!($6904)) {
                         label = 962;
                         break;
                        }
                        $bgotonextstatement102 = 0;
                        ;HEAP8[$j5valid106+0>>0]=0|0;
                        $6905 = (($4) + 553|0);
                        HEAP8[$6905>>0] = 1;
                        $6906 = (($4) + 288|0);
                        $6907 = +HEAPF64[$6906>>3];
                        $6908 = (+__Z6IKsignd($6907));
                        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x263,$6908,-1);
                        $6909 = (($x263) + 8|0);
                        $6910 = HEAP8[$6909>>0]|0;
                        $6911 = $6910&1;
                        if (!($6911)) {
                         break;
                        }
                        $6912 = (($4) + 384|0);
                        $6913 = +HEAPF64[$6912>>3];
                        $6914 = -1.0 * $6913;
                        $6915 = (($4) + 408|0);
                        $6916 = +HEAPF64[$6915>>3];
                        $6917 = -1.0 * $6916;
                        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x264,$6914,$6917,1.9999999999999999E-6);
                        $6918 = (($x264) + 8|0);
                        $6919 = HEAP8[$6918>>0]|0;
                        $6920 = $6919&1;
                        if (!($6920)) {
                         break;
                        }
                        $6921 = +HEAPF64[$x263>>3];
                        $6922 = 1.5707963267949001 * $6921;
                        $6923 = -1.5707963267949001 + $6922;
                        $6924 = +HEAPF64[$x264>>3];
                        $6925 = $6923 + $6924;
                        HEAPF64[$j5array103>>3] = $6925;
                        $6926 = +HEAPF64[$j5array103>>3];
                        $6927 = (+__Z5IKsind($6926));
                        HEAPF64[$sj5array105>>3] = $6927;
                        $6928 = +HEAPF64[$j5array103>>3];
                        $6929 = (+__Z5IKcosd($6928));
                        HEAPF64[$cj5array104>>3] = $6929;
                        $6930 = +HEAPF64[$j5array103>>3];
                        $6931 = $6930 > 3.14159265358979;
                        if ($6931) {
                         $6932 = +HEAPF64[$j5array103>>3];
                         $6933 = $6932 - 6.2831853071795898;
                         HEAPF64[$j5array103>>3] = $6933;
                        } else {
                         $6934 = +HEAPF64[$j5array103>>3];
                         $6935 = $6934 < -3.14159265358979;
                         if ($6935) {
                          $6936 = +HEAPF64[$j5array103>>3];
                          $6937 = $6936 + 6.2831853071795898;
                          HEAPF64[$j5array103>>3] = $6937;
                         }
                        }
                        HEAP8[$j5valid106>>0] = 1;
                        $ij5107 = 0;
                        while(1) {
                         $6938 = $ij5107;
                         $6939 = ($6938|0)<(1);
                         if (!($6939)) {
                          break;
                         }
                         $6940 = $ij5107;
                         $6941 = (($j5valid106) + ($6940)|0);
                         $6942 = HEAP8[$6941>>0]|0;
                         $6943 = $6942&1;
                         L1684: do {
                          if ($6943) {
                           $6944 = $ij5107;
                           $6945 = $6944&255;
                           $6946 = (($4) + 551|0);
                           HEAP8[$6946>>0] = $6945;
                           $6947 = (($4) + 551|0);
                           $6948 = (($6947) + 1|0);
                           HEAP8[$6948>>0] = -1;
                           $6949 = $ij5107;
                           $6950 = (($6949) + 1)|0;
                           $iij5108 = $6950;
                           L1687: while(1) {
                            $6951 = $iij5108;
                            $6952 = ($6951|0)<(1);
                            if (!($6952)) {
                             break;
                            }
                            $6953 = $iij5108;
                            $6954 = (($j5valid106) + ($6953)|0);
                            $6955 = HEAP8[$6954>>0]|0;
                            $6956 = $6955&1;
                            do {
                             if ($6956) {
                              $6957 = $ij5107;
                              $6958 = (($cj5array104) + ($6957<<3)|0);
                              $6959 = +HEAPF64[$6958>>3];
                              $6960 = $iij5108;
                              $6961 = (($cj5array104) + ($6960<<3)|0);
                              $6962 = +HEAPF64[$6961>>3];
                              $6963 = $6959 - $6962;
                              $6964 = (+__Z5IKabsd($6963));
                              $6965 = $6964 < 9.9999999999999995E-7;
                              if (!($6965)) {
                               break;
                              }
                              $6966 = $ij5107;
                              $6967 = (($sj5array105) + ($6966<<3)|0);
                              $6968 = +HEAPF64[$6967>>3];
                              $6969 = $iij5108;
                              $6970 = (($sj5array105) + ($6969<<3)|0);
                              $6971 = +HEAPF64[$6970>>3];
                              $6972 = $6968 - $6971;
                              $6973 = (+__Z5IKabsd($6972));
                              $6974 = $6973 < 9.9999999999999995E-7;
                              if ($6974) {
                               label = 909;
                               break L1687;
                              }
                             }
                            } while(0);
                            $6981 = $iij5108;
                            $6982 = (($6981) + 1)|0;
                            $iij5108 = $6982;
                           }
                           if ((label|0) == 909) {
                            label = 0;
                            $6975 = $iij5108;
                            $6976 = (($j5valid106) + ($6975)|0);
                            HEAP8[$6976>>0] = 0;
                            $6977 = $iij5108;
                            $6978 = $6977&255;
                            $6979 = (($4) + 551|0);
                            $6980 = (($6979) + 1|0);
                            HEAP8[$6980>>0] = $6978;
                           }
                           $6983 = $ij5107;
                           $6984 = (($j5array103) + ($6983<<3)|0);
                           $6985 = +HEAPF64[$6984>>3];
                           $6986 = (($4) + 200|0);
                           HEAPF64[$6986>>3] = $6985;
                           $6987 = $ij5107;
                           $6988 = (($cj5array104) + ($6987<<3)|0);
                           $6989 = +HEAPF64[$6988>>3];
                           $6990 = (($4) + 208|0);
                           HEAPF64[$6990>>3] = $6989;
                           $6991 = $ij5107;
                           $6992 = (($sj5array105) + ($6991<<3)|0);
                           $6993 = +HEAPF64[$6992>>3];
                           $6994 = (($4) + 216|0);
                           HEAPF64[$6994>>3] = $6993;
                           $6995 = (($4) + 200|0);
                           $6996 = +HEAPF64[$6995>>3];
                           $6997 = (+__Z5IKsind($6996));
                           $x265 = $6997;
                           $6998 = (($4) + 200|0);
                           $6999 = +HEAPF64[$6998>>3];
                           $7000 = (+__Z5IKcosd($6999));
                           $x266 = $7000;
                           $7001 = (($4) + 432|0);
                           $7002 = +HEAPF64[$7001>>3];
                           $7003 = 1.0 * $7002;
                           $x267 = $7003;
                           $7004 = (($4) + 384|0);
                           $7005 = +HEAPF64[$7004>>3];
                           $7006 = (($4) + 288|0);
                           $7007 = +HEAPF64[$7006>>3];
                           $7008 = $x265;
                           $7009 = $7007 * $7008;
                           $7010 = $7005 + $7009;
                           HEAPF64[$evalcond109>>3] = $7010;
                           $7011 = (($4) + 408|0);
                           $7012 = +HEAPF64[$7011>>3];
                           $7013 = (($4) + 288|0);
                           $7014 = +HEAPF64[$7013>>3];
                           $7015 = $x266;
                           $7016 = $7014 * $7015;
                           $7017 = $7012 + $7016;
                           $7018 = (($evalcond109) + 8|0);
                           HEAPF64[$7018>>3] = $7017;
                           $7019 = $x265;
                           $7020 = (($4) + 336|0);
                           $7021 = +HEAPF64[$7020>>3];
                           $7022 = -1.0 * $7021;
                           $7023 = $7019 + $7022;
                           $7024 = (($evalcond109) + 16|0);
                           HEAPF64[$7024>>3] = $7023;
                           $7025 = (($4) + 264|0);
                           $7026 = +HEAPF64[$7025>>3];
                           $7027 = $x266;
                           $7028 = -1.0 * $7027;
                           $7029 = $x267;
                           $7030 = $7028 * $7029;
                           $7031 = $7026 + $7030;
                           $7032 = (($evalcond109) + 24|0);
                           HEAPF64[$7032>>3] = $7031;
                           $7033 = $x265;
                           $7034 = -1.0 * $7033;
                           $7035 = $x267;
                           $7036 = $7034 * $7035;
                           $7037 = (($4) + 240|0);
                           $7038 = +HEAPF64[$7037>>3];
                           $7039 = $7036 + $7038;
                           $7040 = (($evalcond109) + 32|0);
                           HEAPF64[$7040>>3] = $7039;
                           $7041 = $x266;
                           $7042 = -1.0 * $7041;
                           $7043 = (($4) + 312|0);
                           $7044 = +HEAPF64[$7043>>3];
                           $7045 = -1.0 * $7044;
                           $7046 = $7042 + $7045;
                           $7047 = (($evalcond109) + 40|0);
                           HEAPF64[$7047>>3] = $7046;
                           $7048 = (($4) + 240|0);
                           $7049 = +HEAPF64[$7048>>3];
                           $7050 = -1.0 * $7049;
                           $7051 = $x267;
                           $7052 = $7050 * $7051;
                           $7053 = $x265;
                           $7054 = $7052 + $7053;
                           $7055 = (($4) + 288|0);
                           $7056 = +HEAPF64[$7055>>3];
                           $7057 = (($4) + 384|0);
                           $7058 = +HEAPF64[$7057>>3];
                           $7059 = $7056 * $7058;
                           $7060 = $7054 + $7059;
                           $7061 = (($evalcond109) + 48|0);
                           HEAPF64[$7061>>3] = $7060;
                           $7062 = (($4) + 264|0);
                           $7063 = +HEAPF64[$7062>>3];
                           $7064 = -1.0 * $7063;
                           $7065 = $x267;
                           $7066 = $7064 * $7065;
                           $7067 = $x266;
                           $7068 = $7066 + $7067;
                           $7069 = (($4) + 288|0);
                           $7070 = +HEAPF64[$7069>>3];
                           $7071 = (($4) + 408|0);
                           $7072 = +HEAPF64[$7071>>3];
                           $7073 = $7070 * $7072;
                           $7074 = $7068 + $7073;
                           $7075 = (($evalcond109) + 56|0);
                           HEAPF64[$7075>>3] = $7074;
                           $7076 = +HEAPF64[$evalcond109>>3];
                           $7077 = (+__Z5IKabsd($7076));
                           $7078 = $7077 > 5.0000000000000004E-6;
                           do {
                            if (!($7078)) {
                             $7079 = (($evalcond109) + 8|0);
                             $7080 = +HEAPF64[$7079>>3];
                             $7081 = (+__Z5IKabsd($7080));
                             $7082 = $7081 > 5.0000000000000004E-6;
                             if ($7082) {
                              break;
                             }
                             $7083 = (($evalcond109) + 16|0);
                             $7084 = +HEAPF64[$7083>>3];
                             $7085 = (+__Z5IKabsd($7084));
                             $7086 = $7085 > 5.0000000000000004E-6;
                             if ($7086) {
                              break;
                             }
                             $7087 = (($evalcond109) + 24|0);
                             $7088 = +HEAPF64[$7087>>3];
                             $7089 = (+__Z5IKabsd($7088));
                             $7090 = $7089 > 5.0000000000000004E-6;
                             if ($7090) {
                              break;
                             }
                             $7091 = (($evalcond109) + 32|0);
                             $7092 = +HEAPF64[$7091>>3];
                             $7093 = (+__Z5IKabsd($7092));
                             $7094 = $7093 > 5.0000000000000004E-6;
                             if ($7094) {
                              break;
                             }
                             $7095 = (($evalcond109) + 40|0);
                             $7096 = +HEAPF64[$7095>>3];
                             $7097 = (+__Z5IKabsd($7096));
                             $7098 = $7097 > 5.0000000000000004E-6;
                             if ($7098) {
                              break;
                             }
                             $7099 = (($evalcond109) + 48|0);
                             $7100 = +HEAPF64[$7099>>3];
                             $7101 = (+__Z5IKabsd($7100));
                             $7102 = $7101 > 5.0000000000000004E-6;
                             if ($7102) {
                              break;
                             }
                             $7103 = (($evalcond109) + 56|0);
                             $7104 = +HEAPF64[$7103>>3];
                             $7105 = (+__Z5IKabsd($7104));
                             $7106 = $7105 > 5.0000000000000004E-6;
                             if ($7106) {
                              break;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos110,6);
                             __THREW__ = 0;
                             $7107 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7108 = __THREW__; __THREW__ = 0;
                             $7109 = $7108&1;
                             if ($7109) {
                              label = 956;
                              break L1;
                             }
                             $7110 = (($7107) + 17|0);
                             HEAP8[$7110>>0] = 1;
                             $7111 = +HEAPF64[$4>>3];
                             __THREW__ = 0;
                             $7112 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7113 = __THREW__; __THREW__ = 0;
                             $7114 = $7113&1;
                             if ($7114) {
                              label = 956;
                              break L1;
                             }
                             $7115 = (($7112) + 8|0);
                             HEAPF64[$7115>>3] = $7111;
                             $7116 = (($4) + 536|0);
                             $7117 = HEAP8[$7116>>0]|0;
                             __THREW__ = 0;
                             $7118 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7119 = __THREW__; __THREW__ = 0;
                             $7120 = $7119&1;
                             if ($7120) {
                              label = 956;
                              break L1;
                             }
                             $7121 = (($7118) + 19|0);
                             HEAP8[$7121>>0] = $7117;
                             $7122 = (($4) + 536|0);
                             $7123 = (($7122) + 1|0);
                             $7124 = HEAP8[$7123>>0]|0;
                             __THREW__ = 0;
                             $7125 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7126 = __THREW__; __THREW__ = 0;
                             $7127 = $7126&1;
                             if ($7127) {
                              label = 956;
                              break L1;
                             }
                             $7128 = (($7125) + 19|0);
                             $7129 = (($7128) + 1|0);
                             HEAP8[$7129>>0] = $7124;
                             $7130 = (($4) + 538|0);
                             $7131 = HEAP8[$7130>>0]|0;
                             __THREW__ = 0;
                             $7132 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7133 = __THREW__; __THREW__ = 0;
                             $7134 = $7133&1;
                             if ($7134) {
                              label = 956;
                              break L1;
                             }
                             $7135 = (($7132) + 18|0);
                             HEAP8[$7135>>0] = $7131;
                             __THREW__ = 0;
                             $7136 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7137 = __THREW__; __THREW__ = 0;
                             $7138 = $7137&1;
                             if ($7138) {
                              label = 956;
                              break L1;
                             }
                             $7139 = (($7136) + 17|0);
                             HEAP8[$7139>>0] = 1;
                             $7140 = (($4) + 40|0);
                             $7141 = +HEAPF64[$7140>>3];
                             __THREW__ = 0;
                             $7142 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7143 = __THREW__; __THREW__ = 0;
                             $7144 = $7143&1;
                             if ($7144) {
                              label = 956;
                              break L1;
                             }
                             $7145 = (($7142) + 8|0);
                             HEAPF64[$7145>>3] = $7141;
                             $7146 = (($4) + 539|0);
                             $7147 = HEAP8[$7146>>0]|0;
                             __THREW__ = 0;
                             $7148 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7149 = __THREW__; __THREW__ = 0;
                             $7150 = $7149&1;
                             if ($7150) {
                              label = 956;
                              break L1;
                             }
                             $7151 = (($7148) + 19|0);
                             HEAP8[$7151>>0] = $7147;
                             $7152 = (($4) + 539|0);
                             $7153 = (($7152) + 1|0);
                             $7154 = HEAP8[$7153>>0]|0;
                             __THREW__ = 0;
                             $7155 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7156 = __THREW__; __THREW__ = 0;
                             $7157 = $7156&1;
                             if ($7157) {
                              label = 956;
                              break L1;
                             }
                             $7158 = (($7155) + 19|0);
                             $7159 = (($7158) + 1|0);
                             HEAP8[$7159>>0] = $7154;
                             $7160 = (($4) + 541|0);
                             $7161 = HEAP8[$7160>>0]|0;
                             __THREW__ = 0;
                             $7162 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7163 = __THREW__; __THREW__ = 0;
                             $7164 = $7163&1;
                             if ($7164) {
                              label = 956;
                              break L1;
                             }
                             $7165 = (($7162) + 18|0);
                             HEAP8[$7165>>0] = $7161;
                             __THREW__ = 0;
                             $7166 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7167 = __THREW__; __THREW__ = 0;
                             $7168 = $7167&1;
                             if ($7168) {
                              label = 956;
                              break L1;
                             }
                             $7169 = (($7166) + 17|0);
                             HEAP8[$7169>>0] = 1;
                             $7170 = (($4) + 80|0);
                             $7171 = +HEAPF64[$7170>>3];
                             __THREW__ = 0;
                             $7172 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7173 = __THREW__; __THREW__ = 0;
                             $7174 = $7173&1;
                             if ($7174) {
                              label = 956;
                              break L1;
                             }
                             $7175 = (($7172) + 8|0);
                             HEAPF64[$7175>>3] = $7171;
                             $7176 = (($4) + 542|0);
                             $7177 = HEAP8[$7176>>0]|0;
                             __THREW__ = 0;
                             $7178 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7179 = __THREW__; __THREW__ = 0;
                             $7180 = $7179&1;
                             if ($7180) {
                              label = 956;
                              break L1;
                             }
                             $7181 = (($7178) + 19|0);
                             HEAP8[$7181>>0] = $7177;
                             $7182 = (($4) + 542|0);
                             $7183 = (($7182) + 1|0);
                             $7184 = HEAP8[$7183>>0]|0;
                             __THREW__ = 0;
                             $7185 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7186 = __THREW__; __THREW__ = 0;
                             $7187 = $7186&1;
                             if ($7187) {
                              label = 956;
                              break L1;
                             }
                             $7188 = (($7185) + 19|0);
                             $7189 = (($7188) + 1|0);
                             HEAP8[$7189>>0] = $7184;
                             $7190 = (($4) + 544|0);
                             $7191 = HEAP8[$7190>>0]|0;
                             __THREW__ = 0;
                             $7192 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7193 = __THREW__; __THREW__ = 0;
                             $7194 = $7193&1;
                             if ($7194) {
                              label = 956;
                              break L1;
                             }
                             $7195 = (($7192) + 18|0);
                             HEAP8[$7195>>0] = $7191;
                             __THREW__ = 0;
                             $7196 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7197 = __THREW__; __THREW__ = 0;
                             $7198 = $7197&1;
                             if ($7198) {
                              label = 956;
                              break L1;
                             }
                             $7199 = (($7196) + 17|0);
                             HEAP8[$7199>>0] = 1;
                             $7200 = (($4) + 120|0);
                             $7201 = +HEAPF64[$7200>>3];
                             __THREW__ = 0;
                             $7202 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7203 = __THREW__; __THREW__ = 0;
                             $7204 = $7203&1;
                             if ($7204) {
                              label = 956;
                              break L1;
                             }
                             $7205 = (($7202) + 8|0);
                             HEAPF64[$7205>>3] = $7201;
                             $7206 = (($4) + 545|0);
                             $7207 = HEAP8[$7206>>0]|0;
                             __THREW__ = 0;
                             $7208 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7209 = __THREW__; __THREW__ = 0;
                             $7210 = $7209&1;
                             if ($7210) {
                              label = 956;
                              break L1;
                             }
                             $7211 = (($7208) + 19|0);
                             HEAP8[$7211>>0] = $7207;
                             $7212 = (($4) + 545|0);
                             $7213 = (($7212) + 1|0);
                             $7214 = HEAP8[$7213>>0]|0;
                             __THREW__ = 0;
                             $7215 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7216 = __THREW__; __THREW__ = 0;
                             $7217 = $7216&1;
                             if ($7217) {
                              label = 956;
                              break L1;
                             }
                             $7218 = (($7215) + 19|0);
                             $7219 = (($7218) + 1|0);
                             HEAP8[$7219>>0] = $7214;
                             $7220 = (($4) + 547|0);
                             $7221 = HEAP8[$7220>>0]|0;
                             __THREW__ = 0;
                             $7222 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7223 = __THREW__; __THREW__ = 0;
                             $7224 = $7223&1;
                             if ($7224) {
                              label = 956;
                              break L1;
                             }
                             $7225 = (($7222) + 18|0);
                             HEAP8[$7225>>0] = $7221;
                             __THREW__ = 0;
                             $7226 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7227 = __THREW__; __THREW__ = 0;
                             $7228 = $7227&1;
                             if ($7228) {
                              label = 956;
                              break L1;
                             }
                             $7229 = (($7226) + 17|0);
                             HEAP8[$7229>>0] = 1;
                             $7230 = (($4) + 160|0);
                             $7231 = +HEAPF64[$7230>>3];
                             __THREW__ = 0;
                             $7232 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7233 = __THREW__; __THREW__ = 0;
                             $7234 = $7233&1;
                             if ($7234) {
                              label = 956;
                              break L1;
                             }
                             $7235 = (($7232) + 8|0);
                             HEAPF64[$7235>>3] = $7231;
                             $7236 = (($4) + 548|0);
                             $7237 = HEAP8[$7236>>0]|0;
                             __THREW__ = 0;
                             $7238 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7239 = __THREW__; __THREW__ = 0;
                             $7240 = $7239&1;
                             if ($7240) {
                              label = 956;
                              break L1;
                             }
                             $7241 = (($7238) + 19|0);
                             HEAP8[$7241>>0] = $7237;
                             $7242 = (($4) + 548|0);
                             $7243 = (($7242) + 1|0);
                             $7244 = HEAP8[$7243>>0]|0;
                             __THREW__ = 0;
                             $7245 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7246 = __THREW__; __THREW__ = 0;
                             $7247 = $7246&1;
                             if ($7247) {
                              label = 956;
                              break L1;
                             }
                             $7248 = (($7245) + 19|0);
                             $7249 = (($7248) + 1|0);
                             HEAP8[$7249>>0] = $7244;
                             $7250 = (($4) + 550|0);
                             $7251 = HEAP8[$7250>>0]|0;
                             __THREW__ = 0;
                             $7252 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7253 = __THREW__; __THREW__ = 0;
                             $7254 = $7253&1;
                             if ($7254) {
                              label = 956;
                              break L1;
                             }
                             $7255 = (($7252) + 18|0);
                             HEAP8[$7255>>0] = $7251;
                             __THREW__ = 0;
                             $7256 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7257 = __THREW__; __THREW__ = 0;
                             $7258 = $7257&1;
                             if ($7258) {
                              label = 956;
                              break L1;
                             }
                             $7259 = (($7256) + 17|0);
                             HEAP8[$7259>>0] = 1;
                             $7260 = (($4) + 200|0);
                             $7261 = +HEAPF64[$7260>>3];
                             __THREW__ = 0;
                             $7262 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7263 = __THREW__; __THREW__ = 0;
                             $7264 = $7263&1;
                             if ($7264) {
                              label = 956;
                              break L1;
                             }
                             $7265 = (($7262) + 8|0);
                             HEAPF64[$7265>>3] = $7261;
                             $7266 = (($4) + 551|0);
                             $7267 = HEAP8[$7266>>0]|0;
                             __THREW__ = 0;
                             $7268 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7269 = __THREW__; __THREW__ = 0;
                             $7270 = $7269&1;
                             if ($7270) {
                              label = 956;
                              break L1;
                             }
                             $7271 = (($7268) + 19|0);
                             HEAP8[$7271>>0] = $7267;
                             $7272 = (($4) + 551|0);
                             $7273 = (($7272) + 1|0);
                             $7274 = HEAP8[$7273>>0]|0;
                             __THREW__ = 0;
                             $7275 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7276 = __THREW__; __THREW__ = 0;
                             $7277 = $7276&1;
                             if ($7277) {
                              label = 956;
                              break L1;
                             }
                             $7278 = (($7275) + 19|0);
                             $7279 = (($7278) + 1|0);
                             HEAP8[$7279>>0] = $7274;
                             $7280 = (($4) + 553|0);
                             $7281 = HEAP8[$7280>>0]|0;
                             __THREW__ = 0;
                             $7282 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7283 = __THREW__; __THREW__ = 0;
                             $7284 = $7283&1;
                             if ($7284) {
                              label = 956;
                              break L1;
                             }
                             $7285 = (($7282) + 18|0);
                             HEAP8[$7285>>0] = $7281;
                             __THREW__ = 0;
                             invoke_vii(382,($vfree111|0),0);
                             $7286 = __THREW__; __THREW__ = 0;
                             $7287 = $7286&1;
                             if ($7287) {
                              label = 956;
                              break L1;
                             }
                             $7288 = $1;
                             $7289 = HEAP32[$7288>>2]|0;
                             $7290 = (($7289) + 8|0);
                             $7291 = HEAP32[$7290>>2]|0;
                             __THREW__ = 0;
                             (invoke_iiii($7291|0,($7288|0),($vinfos110|0),($vfree111|0))|0);
                             $7292 = __THREW__; __THREW__ = 0;
                             $7293 = $7292&1;
                             if ($7293) {
                              label = 957;
                              break L1;
                             }
                             __THREW__ = 0;
                             invoke_vi(366,($vfree111|0));
                             $7294 = __THREW__; __THREW__ = 0;
                             $7295 = $7294&1;
                             if ($7295) {
                              label = 956;
                              break L1;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos110);
                             break L1684;
                            }
                           } while(0);
                          } else {
                          }
                         } while(0);
                         $7296 = $ij5107;
                         $7297 = (($7296) + 1)|0;
                         $ij5107 = $7297;
                        }
                        label = 962;
                       } else {
                        label = 962;
                       }
                      } while(0);
                      if ((label|0) == 962) {
                       label = 0;
                      }
                      $7306 = $bgotonextstatement102;
                      $7307 = $7306&1;
                      if ($7307) {
                       $bgotonextstatement112 = 1;
                       $bgotonextstatement112 = 0;
                       $7308 = $bgotonextstatement112;
                       $7309 = $7308&1;
                       if ($7309) {
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
            break L726;
           }
          } while(0);
         } else {
         }
        } while(0);
        $9057 = $ij325;
        $9058 = (($9057) + 1)|0;
        $ij325 = $9058;
       }
      }
     }
    } else {
    }
   } while(0);
   $11965 = $ij4;
   $11966 = (($11965) + 1)|0;
   $ij4 = $11966;
  }
  $11967 = $rotationiter;
  $11968 = (($11967) + 1)|0;
  $rotationiter = $11968;
 }
 switch (label|0) {
  case 122: {
   $1302 = ___cxa_find_matching_catch()|0;
   $1303 = tempRet0;
   $2 = $1302;
   $3 = $1303;
   label = 125;
   break;
  }
  case 123: {
   $1304 = ___cxa_find_matching_catch()|0;
   $1305 = tempRet0;
   $2 = $1304;
   $3 = $1305;
   __THREW__ = 0;
   invoke_vi(366,($vfree|0));
   $1306 = __THREW__; __THREW__ = 0;
   $1307 = $1306&1;
   if ($1307) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 125;
    break;
   }
   break;
  }
  case 230: {
   $1974 = ___cxa_find_matching_catch()|0;
   $1975 = tempRet0;
   $2 = $1974;
   $3 = $1975;
   label = 233;
   break;
  }
  case 231: {
   $1976 = ___cxa_find_matching_catch()|0;
   $1977 = tempRet0;
   $2 = $1976;
   $3 = $1977;
   __THREW__ = 0;
   invoke_vi(366,($vfree19|0));
   $1978 = __THREW__; __THREW__ = 0;
   $1979 = $1978&1;
   if ($1979) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 233;
    break;
   }
   break;
  }
  case 364: {
   $3464 = ___cxa_find_matching_catch()|0;
   $3465 = tempRet0;
   $2 = $3464;
   $3 = $3465;
   label = 367;
   break;
  }
  case 365: {
   $3466 = ___cxa_find_matching_catch()|0;
   $3467 = tempRet0;
   $2 = $3466;
   $3 = $3467;
   __THREW__ = 0;
   invoke_vi(366,($vfree41|0));
   $3468 = __THREW__; __THREW__ = 0;
   $3469 = $3468&1;
   if ($3469) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 367;
    break;
   }
   break;
  }
  case 448: {
   $4059 = ___cxa_find_matching_catch()|0;
   $4060 = tempRet0;
   $2 = $4059;
   $3 = $4060;
   label = 451;
   break;
  }
  case 449: {
   $4061 = ___cxa_find_matching_catch()|0;
   $4062 = tempRet0;
   $2 = $4061;
   $3 = $4062;
   __THREW__ = 0;
   invoke_vi(366,($vfree51|0));
   $4063 = __THREW__; __THREW__ = 0;
   $4064 = $4063&1;
   if ($4064) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 451;
    break;
   }
   break;
  }
  case 534: {
   $4603 = ___cxa_find_matching_catch()|0;
   $4604 = tempRet0;
   $2 = $4603;
   $3 = $4604;
   label = 537;
   break;
  }
  case 535: {
   $4605 = ___cxa_find_matching_catch()|0;
   $4606 = tempRet0;
   $2 = $4605;
   $3 = $4606;
   __THREW__ = 0;
   invoke_vi(366,($vfree61|0));
   $4607 = __THREW__; __THREW__ = 0;
   $4608 = $4607&1;
   if ($4608) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 537;
    break;
   }
   break;
  }
  case 620: {
   $5169 = ___cxa_find_matching_catch()|0;
   $5170 = tempRet0;
   $2 = $5169;
   $3 = $5170;
   label = 623;
   break;
  }
  case 621: {
   $5171 = ___cxa_find_matching_catch()|0;
   $5172 = tempRet0;
   $2 = $5171;
   $3 = $5172;
   __THREW__ = 0;
   invoke_vi(366,($vfree71|0));
   $5173 = __THREW__; __THREW__ = 0;
   $5174 = $5173&1;
   if ($5174) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 623;
    break;
   }
   break;
  }
  case 704: {
   $5696 = ___cxa_find_matching_catch()|0;
   $5697 = tempRet0;
   $2 = $5696;
   $3 = $5697;
   label = 707;
   break;
  }
  case 705: {
   $5698 = ___cxa_find_matching_catch()|0;
   $5699 = tempRet0;
   $2 = $5698;
   $3 = $5699;
   __THREW__ = 0;
   invoke_vi(366,($vfree81|0));
   $5700 = __THREW__; __THREW__ = 0;
   $5701 = $5700&1;
   if ($5701) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 707;
    break;
   }
   break;
  }
  case 788: {
   $6240 = ___cxa_find_matching_catch()|0;
   $6241 = tempRet0;
   $2 = $6240;
   $3 = $6241;
   label = 791;
   break;
  }
  case 789: {
   $6242 = ___cxa_find_matching_catch()|0;
   $6243 = tempRet0;
   $2 = $6242;
   $3 = $6243;
   __THREW__ = 0;
   invoke_vi(366,($vfree91|0));
   $6244 = __THREW__; __THREW__ = 0;
   $6245 = $6244&1;
   if ($6245) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 791;
    break;
   }
   break;
  }
  case 872: {
   $6774 = ___cxa_find_matching_catch()|0;
   $6775 = tempRet0;
   $2 = $6774;
   $3 = $6775;
   label = 875;
   break;
  }
  case 873: {
   $6776 = ___cxa_find_matching_catch()|0;
   $6777 = tempRet0;
   $2 = $6776;
   $3 = $6777;
   __THREW__ = 0;
   invoke_vi(366,($vfree101|0));
   $6778 = __THREW__; __THREW__ = 0;
   $6779 = $6778&1;
   if ($6779) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 875;
    break;
   }
   break;
  }
  case 956: {
   $7298 = ___cxa_find_matching_catch()|0;
   $7299 = tempRet0;
   $2 = $7298;
   $3 = $7299;
   label = 959;
   break;
  }
  case 957: {
   $7300 = ___cxa_find_matching_catch()|0;
   $7301 = tempRet0;
   $2 = $7300;
   $3 = $7301;
   __THREW__ = 0;
   invoke_vi(366,($vfree111|0));
   $7302 = __THREW__; __THREW__ = 0;
   $7303 = $7302&1;
   if ($7303) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 959;
    break;
   }
   break;
  }
  case 1052: {
   $7913 = ___cxa_find_matching_catch()|0;
   $7914 = tempRet0;
   $2 = $7913;
   $3 = $7914;
   label = 1055;
   break;
  }
  case 1053: {
   $7915 = ___cxa_find_matching_catch()|0;
   $7916 = tempRet0;
   $2 = $7915;
   $3 = $7916;
   __THREW__ = 0;
   invoke_vi(366,($vfree121|0));
   $7917 = __THREW__; __THREW__ = 0;
   $7918 = $7917&1;
   if ($7918) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1055;
    break;
   }
   break;
  }
  case 1132: {
   $8516 = ___cxa_find_matching_catch()|0;
   $8517 = tempRet0;
   $2 = $8516;
   $3 = $8517;
   label = 1135;
   break;
  }
  case 1133: {
   $8518 = ___cxa_find_matching_catch()|0;
   $8519 = tempRet0;
   $2 = $8518;
   $3 = $8519;
   __THREW__ = 0;
   invoke_vi(366,($vfree130|0));
   $8520 = __THREW__; __THREW__ = 0;
   $8521 = $8520&1;
   if ($8521) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1135;
    break;
   }
   break;
  }
  case 1208: {
   $9049 = ___cxa_find_matching_catch()|0;
   $9050 = tempRet0;
   $2 = $9049;
   $3 = $9050;
   label = 1211;
   break;
  }
  case 1209: {
   $9051 = ___cxa_find_matching_catch()|0;
   $9052 = tempRet0;
   $2 = $9051;
   $3 = $9052;
   __THREW__ = 0;
   invoke_vi(366,($vfree139|0));
   $9053 = __THREW__; __THREW__ = 0;
   $9054 = $9053&1;
   if ($9054) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1211;
    break;
   }
   break;
  }
  case 1319: {
   $10057 = ___cxa_find_matching_catch()|0;
   $10058 = tempRet0;
   $2 = $10057;
   $3 = $10058;
   label = 1322;
   break;
  }
  case 1320: {
   $10059 = ___cxa_find_matching_catch()|0;
   $10060 = tempRet0;
   $2 = $10059;
   $3 = $10060;
   __THREW__ = 0;
   invoke_vi(366,($vfree159|0));
   $10061 = __THREW__; __THREW__ = 0;
   $10062 = $10061&1;
   if ($10062) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1322;
    break;
   }
   break;
  }
  case 1401: {
   $10583 = ___cxa_find_matching_catch()|0;
   $10584 = tempRet0;
   $2 = $10583;
   $3 = $10584;
   label = 1404;
   break;
  }
  case 1402: {
   $10585 = ___cxa_find_matching_catch()|0;
   $10586 = tempRet0;
   $2 = $10585;
   $3 = $10586;
   __THREW__ = 0;
   invoke_vi(366,($vfree169|0));
   $10587 = __THREW__; __THREW__ = 0;
   $10588 = $10587&1;
   if ($10588) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1404;
    break;
   }
   break;
  }
  case 1495: {
   $11304 = ___cxa_find_matching_catch()|0;
   $11305 = tempRet0;
   $2 = $11304;
   $3 = $11305;
   label = 1498;
   break;
  }
  case 1496: {
   $11306 = ___cxa_find_matching_catch()|0;
   $11307 = tempRet0;
   $2 = $11306;
   $3 = $11307;
   __THREW__ = 0;
   invoke_vi(366,($vfree179|0));
   $11308 = __THREW__; __THREW__ = 0;
   $11309 = $11308&1;
   if ($11309) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1498;
    break;
   }
   break;
  }
  case 1577: {
   $11955 = ___cxa_find_matching_catch()|0;
   $11956 = tempRet0;
   $2 = $11955;
   $3 = $11956;
   label = 1580;
   break;
  }
  case 1578: {
   $11957 = ___cxa_find_matching_catch()|0;
   $11958 = tempRet0;
   $2 = $11957;
   $3 = $11958;
   __THREW__ = 0;
   invoke_vi(366,($vfree188|0));
   $11959 = __THREW__; __THREW__ = 0;
   $11960 = $11959&1;
   if ($11960) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   } else {
    label = 1580;
    break;
   }
   break;
  }
  case 1590: {
   STACKTOP = sp;return;
   break;
  }
 }
 switch (label|0) {
  case 125: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos|0));
   $1308 = __THREW__; __THREW__ = 0;
   $1309 = $1308&1;
   if ($1309) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 233: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos18|0));
   $1980 = __THREW__; __THREW__ = 0;
   $1981 = $1980&1;
   if ($1981) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 367: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos40|0));
   $3470 = __THREW__; __THREW__ = 0;
   $3471 = $3470&1;
   if ($3471) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 451: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos50|0));
   $4065 = __THREW__; __THREW__ = 0;
   $4066 = $4065&1;
   if ($4066) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 537: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos60|0));
   $4609 = __THREW__; __THREW__ = 0;
   $4610 = $4609&1;
   if ($4610) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 623: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos70|0));
   $5175 = __THREW__; __THREW__ = 0;
   $5176 = $5175&1;
   if ($5176) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 707: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos80|0));
   $5702 = __THREW__; __THREW__ = 0;
   $5703 = $5702&1;
   if ($5703) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 791: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos90|0));
   $6246 = __THREW__; __THREW__ = 0;
   $6247 = $6246&1;
   if ($6247) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 875: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos100|0));
   $6780 = __THREW__; __THREW__ = 0;
   $6781 = $6780&1;
   if ($6781) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 959: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos110|0));
   $7304 = __THREW__; __THREW__ = 0;
   $7305 = $7304&1;
   if ($7305) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1055: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos120|0));
   $7919 = __THREW__; __THREW__ = 0;
   $7920 = $7919&1;
   if ($7920) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1135: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos129|0));
   $8522 = __THREW__; __THREW__ = 0;
   $8523 = $8522&1;
   if ($8523) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1211: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos138|0));
   $9055 = __THREW__; __THREW__ = 0;
   $9056 = $9055&1;
   if ($9056) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1322: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos158|0));
   $10063 = __THREW__; __THREW__ = 0;
   $10064 = $10063&1;
   if ($10064) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1404: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos168|0));
   $10589 = __THREW__; __THREW__ = 0;
   $10590 = $10589&1;
   if ($10590) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1498: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos178|0));
   $11310 = __THREW__; __THREW__ = 0;
   $11311 = $11310&1;
   if ($11311) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
  case 1580: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos187|0));
   $11961 = __THREW__; __THREW__ = 0;
   $11962 = $11961&1;
   if ($11962) {
    $11971 = ___cxa_find_matching_catch(0|0)|0;
    $11972 = tempRet0;
    ___clang_call_terminate($11971);
    // unreachable;
   }
   $11969 = $2;
   $11970 = $3;
   ___resumeException($11969|0);
   // unreachable;
   break;
  }
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (832 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($3)|0);
 __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<3)|0);
  $13 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $5 = $0;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($5);
 $6 = (528 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 4|0);
 __THREW__ = 0;
 invoke_vi(383,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $21 = ___cxa_find_matching_catch()|0;
   $22 = tempRet0;
   $3 = $21;
   $4 = $22;
  } else {
   $10 = (($5) + 16|0);
   __THREW__ = 0;
   invoke_vi(384,($10|0));
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if ($12) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $3 = $23;
     $4 = $24;
    } else {
     $13 = (($5) + 4|0);
     $14 = $1;
     __THREW__ = 0;
     (invoke_iii(385,($13|0),($14|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      $17 = (($5) + 16|0);
      $18 = $2;
      __THREW__ = 0;
      (invoke_iii(386,($17|0),($18|0))|0);
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if (!($20)) {
       STACKTOP = sp;return;
      }
     }
     $25 = ___cxa_find_matching_catch()|0;
     $26 = tempRet0;
     $3 = $25;
     $4 = $26;
     __THREW__ = 0;
     invoke_vi(366,($10|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $35 = ___cxa_find_matching_catch(0|0)|0;
      $36 = tempRet0;
      ___clang_call_terminate($35);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   __THREW__ = 0;
   invoke_vi(367,($7|0));
   $29 = __THREW__; __THREW__ = 0;
   $30 = $29&1;
   if ($30) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $3;
 $34 = $4;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hold = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 40|0;
 $__hold = sp + 16|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($5)|0);
 $__na = $6;
 $7 = $__na;
 $8 = (__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($7,1)|0);
 $9 = $__na;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($2,$9,1);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($__hold,$8,$$byval_copy);
 $10 = $__na;
 $11 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($__hold)|0);
 $12 = (($11) + 8|0);
 $13 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($12)|0);
 $14 = $1;
 __THREW__ = 0;
 invoke_viii(387,($10|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  $17 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  $18 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  __THREW__ = 0;
  invoke_viii(388,($5|0),($17|0),($18|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if (!($20)) {
   $21 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($5)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + 1)|0;
   HEAP32[$21>>2] = $23;
   (__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($__hold)|0);
   __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($__hold);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $3 = $24;
 $4 = $25;
 __THREW__ = 0;
 invoke_vi(389,($__hold|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $3;
 $29 = $4;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<3)|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z17__libcpp_isfiniteIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<2)|0);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)!=($6|0);
 if ($7) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $8 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
  $9 = (($2) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($2) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  STACKTOP = sp;return;
 } else {
  $16 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($2,$16);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vtt;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = (($5) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$4>>2]|0;
 $10 = (($9) + -12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($4) + ($11)|0);
 HEAP32[$12>>2] = $8;
 $13 = (($5) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($4) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = (($4) + 12|0);
 __THREW__ = 0;
 invoke_vi(41,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  STACKTOP = sp;return;
 }
 $19 = ___cxa_find_matching_catch()|0;
 $20 = tempRet0;
 $2 = $19;
 $3 = $20;
 __THREW__ = 0;
 $21 = __THREW__; __THREW__ = 0;
 $22 = $21&1;
 if ($22) {
  $25 = ___cxa_find_matching_catch(0|0)|0;
  $26 = tempRet0;
  ___clang_call_terminate($25);
  // unreachable;
 }
 $23 = $2;
 $24 = $3;
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__14fposI11__mbstate_tEC2Ex($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $2 = $this;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $2;
 ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;
 $9 = (($8) + 8|0);
 $10 = $3;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 STACKTOP = sp;return;
}
function __ZNKSt3__14fposI11__mbstate_tEcvxEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 tempRet0 = $8;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $3 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($1,$2)|0);
 if ($3) {
  $4 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
  $5 = $4 ^ -1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $2 << 24 >> 24;
 $4 = $1;
 $5 = $4 << 24 >> 24;
 $6 = ($3|0)==($5|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__13maxIPcEERKT_S4_S4_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return +nan;
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $0;
 $3 = $1;
 $4 = (+Math_atan2((+$2),(+$3)));
 STACKTOP = sp;return (+$4);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $4 = $0;
 $5 = (($4) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (976 + 12|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 64|0);
 $8 = (976 + 52|0);
 HEAP32[$7>>2] = $8;
 $9 = (($4) + 8|0);
 $10 = (976 + 32|0);
 HEAP32[$9>>2] = $10;
 $11 = (($4) + 12|0);
 __THREW__ = 0;
 $12 = (1040 + 4|0);
 invoke_viii(390,($4|0),($12|0),($11|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 do {
  if ($14) {
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $2 = $24;
   $3 = $25;
  } else {
   $15 = (976 + 12|0);
   HEAP32[$4>>2] = $15;
   $16 = (($4) + 64|0);
   $17 = (976 + 52|0);
   HEAP32[$16>>2] = $17;
   $18 = (($4) + 8|0);
   $19 = (976 + 32|0);
   HEAP32[$18>>2] = $19;
   $20 = (($4) + 12|0);
   $21 = $1;
   __THREW__ = 0;
   invoke_vii(391,($20|0),($21|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if (!($23)) {
    STACKTOP = sp;return;
   }
   $26 = ___cxa_find_matching_catch()|0;
   $27 = tempRet0;
   $2 = $26;
   $3 = $27;
   __THREW__ = 0;
   $28 = __THREW__; __THREW__ = 0;
   $29 = $28&1;
   if ($29) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 $30 = (($4) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($30|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $2;
 $34 = $3;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$2);
 STACKTOP = sp;return;
}
function __Z14__libcpp_isnanIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(392,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)>(2146435072);
  $10 = ($4>>>0)>(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = 3.14159265358979;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 0.0;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_acos((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(912|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),163)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14712|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1464|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(928|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1472|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(960|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2560|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $x;
 $1 = $y;
 while(1) {
  $2 = $0;
  $3 = $2 < 0.0;
  if (!($3)) {
   break;
  }
  $4 = $1;
  $5 = $0;
  $6 = $5 + $4;
  $0 = $6;
 }
 $7 = $0;
 $8 = $1;
 $9 = (+_fmod($7,$8));
 STACKTOP = sp;return (+$9);
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = $0;
 $3 = $1 * $2;
 STACKTOP = sp;return (+$3);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 48|0;
 $5 = sp + 24|0;
 $6 = sp + 192|0;
 $1 = $fy;
 $2 = $fx;
 $7 = $1;
 $8 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($7)|0);
 if (!($8)) {
  $56 = $2;
  $57 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($56)|0);
  if ($57) {
   $0 = 0.0;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
  $58 = $1;
  $59 = $2;
  $60 = (+Math_atan2((+$58),(+$59)));
  $0 = $60;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 $9 = $2;
 $10 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($9)|0);
 if (!($10)) {
  $0 = 1.5707963267949001;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $11 = (($ss) + 8|0);
 __THREW__ = 0;
 $12 = (invoke_iii(376,($11|0),(864|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  label = 15;
 } else {
  __THREW__ = 0;
  $15 = (invoke_iii(376,($12|0),(888|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   label = 15;
  } else {
   __THREW__ = 0;
   $18 = (invoke_iii(376,($15|0),(912|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    label = 15;
   } else {
    __THREW__ = 0;
    $21 = (invoke_iii(377,($18|0),194)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 15;
    } else {
     __THREW__ = 0;
     $24 = (invoke_iii(376,($21|0),(14712|0))|0);
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      label = 15;
     } else {
      __THREW__ = 0;
      $27 = (invoke_iii(376,($24|0),(920|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       label = 15;
      } else {
       __THREW__ = 0;
       $30 = (invoke_iii(376,($27|0),(928|0))|0);
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        label = 15;
       } else {
        __THREW__ = 0;
        $33 = (invoke_iii(376,($30|0),(944|0))|0);
        $34 = __THREW__; __THREW__ = 0;
        $35 = $34&1;
        if ($35) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($33|0),(960|0))|0);
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if ($37) {
          label = 15;
         } else {
          $38 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$6>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($5|0),($ss|0));
          $39 = __THREW__; __THREW__ = 0;
          $40 = $39&1;
          do {
           if ($40) {
            $47 = ___cxa_find_matching_catch()|0;
            $48 = tempRet0;
            $3 = $47;
            $4 = $48;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($38|0),($5|0));
            $41 = __THREW__; __THREW__ = 0;
            $42 = $41&1;
            if (!($42)) {
             $$expand_i1_val2 = 0;
             HEAP8[$6>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($38|0),(2560|0),(62|0));
             $43 = __THREW__; __THREW__ = 0;
             $44 = $43&1;
             if (!($44)) {
              // unreachable;
             }
            }
            $49 = ___cxa_find_matching_catch()|0;
            $50 = tempRet0;
            $3 = $49;
            $4 = $50;
            __THREW__ = 0;
            invoke_vi(369,($5|0));
            $51 = __THREW__; __THREW__ = 0;
            $52 = $51&1;
            if ($52) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$6>>0]|0;
          $53 = $$pre_trunc&1;
          if ($53) {
           ___cxa_free_exception(($38|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $3 = $45;
  $4 = $46;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $3;
 $63 = $4;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(393,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(394,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(395,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(396,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(397,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(398,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($1);
 $2 = (($1) + 8|0);
 __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($2,0);
 STACKTOP = sp;return;
}
function __ZNSt3__115__get_nullptr_tEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 __ZNSt3__19nullptr_tC2EMNS0_5__natEi($0,-1);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_IdEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIdE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIdEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAPF64[$2>>3] = 0.0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($1,$2);
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIdE10deallocateEPdj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = ($3|0)>=(0);
 if ($4) {
  while(1) {
   $5 = $2;
   $6 = ($5|0)>(0);
   if (!($6)) {
    break;
   }
   $7 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($7)|0);
   $8 = $2;
   $9 = (($8) + -1)|0;
   $2 = $9;
  }
  STACKTOP = sp;return;
 } else {
  while(1) {
   $10 = $2;
   $11 = ($10|0)<(0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($12)|0);
   $13 = $2;
   $14 = (($13) + 1)|0;
   $2 = $14;
  }
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (800 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($this,$__a,$__s) {
 $this = $this|0;
 $__a = $__a|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__a;
 $2 = $__s;
 $3 = $0;
 $4 = $1;
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 $6 = $2;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($this,$__p,$__d) {
 $this = $this|0;
 $__p = $__p|0;
 $__d = $__d|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__p;
 $3 = $0;
 $4 = (__ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__d)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($3,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_($this,$__f,$__l) {
 $this = $this|0;
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__f;
 $2 = $__l;
 $3 = $0;
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($3)|0);
 $5 = $2;
 $6 = (($5) + 4|0);
 HEAP32[$6>>2] = $4;
 $7 = HEAP32[$3>>2]|0;
 $8 = $1;
 HEAP32[$8>>2] = $7;
 $9 = $1;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 HEAP32[$12>>2] = $9;
 $13 = $2;
 HEAP32[$3>>2] = $13;
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $__t = $3;
 $4 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 HEAP32[$4>>2] = 0;
 $5 = $__t;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($1,0);
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f = 0, $__l = 0, $__n = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($3)|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($3)|0);
 $__na = $5;
 $6 = (($3) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $__f = $7;
 $8 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($3)|0);
 $__l = $8;
 $9 = $__f;
 $10 = $__l;
 $11 = HEAP32[$10>>2]|0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($9,$11);
 $12 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($3)|0);
 HEAP32[$12>>2] = 0;
 while(1) {
  $13 = $__f;
  $14 = $__l;
  $15 = ($13|0)!=($14|0);
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $__f;
  $__n = $16;
  $17 = $__f;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $__f = $19;
  $20 = $__na;
  $21 = $__n;
  $22 = (($21) + 8|0);
  $23 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($22)|0);
  __THREW__ = 0;
  invoke_vii(400,($20|0),($23|0));
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   label = 6;
   break;
  }
  $26 = $__na;
  $27 = $__n;
  __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($26,$27,1);
 }
 if ((label|0) == 6) {
  $28 = ___cxa_find_matching_catch()|0;
  $29 = tempRet0;
  $1 = $28;
  $2 = $29;
  $30 = $1;
  ___cxa_call_unexpected(($30|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 8)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(401,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(402,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(403,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(404,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __Z17__libcpp_isfiniteIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(392,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)<(2146435072);
  $10 = ($4>>>0)<(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 4)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(405,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(408,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__to_raw_pointerIjEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $5;
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $7 = (($6) + 1)|0;
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$7)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $10 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$8,$9,$10);
 $11 = $__a;
 $12 = (($__v) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
 $15 = $1;
 $16 = (__ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($15)|0);
 __THREW__ = 0;
 invoke_viii(409,($11|0),($14|0),($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  $19 = (($__v) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + 4|0);
  HEAP32[$19>>2] = $21;
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $2 = $24;
 $3 = $25;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $2;
 $29 = $3;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIPcS1_EclERKS1_S4_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp;
 $0 = $this;
 $1 = $__wch;
 $5 = $0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (1312 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 32|0);
 __THREW__ = 0;
 invoke_vi(410,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $19 = ___cxa_find_matching_catch()|0;
   $20 = tempRet0;
   $2 = $19;
   $3 = $20;
  } else {
   $10 = (($5) + 44|0);
   HEAP32[$10>>2] = 0;
   $11 = (($5) + 48|0);
   $12 = $1;
   HEAP32[$11>>2] = $12;
   __THREW__ = 0;
   invoke_vi(410,($4|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 7;
    } else {
     __THREW__ = 0;
     invoke_vii(411,($5|0),($4|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      invoke_vi(369,($4|0));
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 7;
       break;
      }
      STACKTOP = sp;return;
     }
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $2 = $23;
     $3 = $24;
     __THREW__ = 0;
     invoke_vi(369,($4|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      $33 = ___cxa_find_matching_catch(0|0)|0;
      $34 = tempRet0;
      ___clang_call_terminate($33);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   if ((label|0) == 7) {
    $21 = ___cxa_find_matching_catch()|0;
    $22 = tempRet0;
    $2 = $21;
    $3 = $22;
   }
   __THREW__ = 0;
   invoke_vi(369,($7|0));
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(89,($5|0));
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $33 = ___cxa_find_matching_catch(0|0)|0;
  $34 = tempRet0;
  ___clang_call_terminate($33);
  // unreachable;
 }
 $31 = $2;
 $32 = $3;
 ___resumeException($31|0);
 // unreachable;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen(($1|0))|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 36|0;
 $__s = sp + 16|0;
 $5 = sp + 4|0;
 $6 = sp;
 $0 = $__os;
 $1 = $__str;
 $2 = $__len;
 $7 = $0;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L1: do {
  if ($9) {
   label = 13;
  } else {
   __THREW__ = 0;
   $10 = (invoke_ii(413,($__s|0))|0);
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if (!($12)) {
     if ($10) {
      $13 = $0;
      __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($5,$13);
      $14 = $1;
      $15 = $0;
      $16 = HEAP32[$15>>2]|0;
      $17 = (($16) + -12|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($15) + ($18)|0);
      __THREW__ = 0;
      $20 = (invoke_ii(414,($19|0))|0);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       break;
      }
      $23 = $20 & 176;
      $24 = ($23|0)==(32);
      if ($24) {
       $25 = $1;
       $26 = $2;
       $27 = (($25) + ($26)|0);
       $45 = $27;
      } else {
       $28 = $1;
       $45 = $28;
      }
      $29 = $1;
      $30 = $2;
      $31 = (($29) + ($30)|0);
      $32 = $0;
      $33 = HEAP32[$32>>2]|0;
      $34 = (($33) + -12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + ($35)|0);
      $37 = $0;
      $38 = HEAP32[$37>>2]|0;
      $39 = (($38) + -12|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = (($37) + ($40)|0);
      __THREW__ = 0;
      $42 = (invoke_ii(415,($41|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break;
      }
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$5+0>>2]|0;
      invoke_viiiiiii(416,($6|0),($$byval_copy|0),($14|0),($45|0),($31|0),($36|0),($42|0));
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
      $48 = (__ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($6)|0);
      if ($48) {
       $49 = $0;
       $50 = HEAP32[$49>>2]|0;
       $51 = (($50) + -12|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = (($49) + ($52)|0);
       __THREW__ = 0;
       invoke_vii(417,($53|0),5);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
      }
     }
     __THREW__ = 0;
     invoke_vi(418,($__s|0));
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 13;
      break L1;
     }
     $72 = $0;
     STACKTOP = sp;return ($72|0);
    }
   } while(0);
   $58 = ___cxa_find_matching_catch(0|0)|0;
   $59 = tempRet0;
   $3 = $58;
   $4 = $59;
   __THREW__ = 0;
   invoke_vi(418,($__s|0));
   $60 = __THREW__; __THREW__ = 0;
   $61 = $60&1;
   if ($61) {
    $79 = ___cxa_find_matching_catch(0|0)|0;
    $80 = tempRet0;
    ___clang_call_terminate($79);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 if ((label|0) == 13) {
  $56 = ___cxa_find_matching_catch(0|0)|0;
  $57 = tempRet0;
  $3 = $56;
  $4 = $57;
 }
 $64 = $3;
 (___cxa_begin_catch(($64|0))|0);
 $65 = $0;
 $66 = HEAP32[$65>>2]|0;
 $67 = (($66) + -12|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($65) + ($68)|0);
 __THREW__ = 0;
 invoke_vi(419,($69|0));
 $70 = __THREW__; __THREW__ = 0;
 $71 = $70&1;
 if (!($71)) {
  ___cxa_end_catch();
  $72 = $0;
  STACKTOP = sp;return ($72|0);
 }
 $73 = ___cxa_find_matching_catch()|0;
 $74 = tempRet0;
 $3 = $73;
 $4 = $74;
 __THREW__ = 0;
 invoke_v(420);
 $75 = __THREW__; __THREW__ = 0;
 $76 = $75&1;
 if ($76) {
  $79 = ___cxa_find_matching_catch(0|0)|0;
  $80 = tempRet0;
  ___clang_call_terminate($79);
  // unreachable;
 }
 $77 = $3;
 $78 = $4;
 ___resumeException($77|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 6|0;
 $2 = sp + 5|0;
 $3 = sp + 4|0;
 $0 = $this;
 $4 = $0;
 $5 = (($4) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 16;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = (($4) + 44|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
  $12 = ($10>>>0)<($11>>>0);
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
   $14 = (($4) + 44|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($4)|0);
  $16 = (($4) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$15,$17,$1);
  STACKTOP = sp;return;
 }
 $18 = (($4) + 48|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 8;
 $21 = ($20|0)!=(0);
 if ($21) {
  $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($4)|0);
  $23 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($4)|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$22,$23,$2);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($agg$result,$3);
 STACKTOP = sp;return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__u = sp;
 $0 = $__f;
 $1 = $0;
 HEAPF64[$__u>>3] = $1;
 $2 = $__u;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 tempRet0 = $7;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + (($11*24)|0)|0);
  $13 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 24|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<2)|0);
  $13 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$1>>2] = $2;
 $3 = (($1) + 4|0);
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__19nullptr_tC2EMNS0_5__natEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIdEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(421,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114numeric_limitsIjE3maxEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv()|0);
 return ($0|0);
}
function __ZNSt3__13minIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIdE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<3;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -8|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(422,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIdE10deallocateEPdj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = $1;
 HEAP32[$2>>2] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $4;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPiS1_EET0_T_S3_S2_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*36)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($5,$6);
 $7 = (528 + 8|0);
 HEAP32[$5>>2] = $7;
 $8 = (($5) + 4|0);
 $9 = $2;
 $10 = (($9) + 4|0);
 __THREW__ = 0;
 invoke_vii(424,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 do {
  if ($12) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $3 = $18;
   $4 = $19;
  } else {
   $13 = (($5) + 16|0);
   $14 = $2;
   $15 = (($14) + 16|0);
   __THREW__ = 0;
   invoke_vii(425,($13|0),($15|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    STACKTOP = sp;return;
   }
   $20 = ___cxa_find_matching_catch()|0;
   $21 = tempRet0;
   $3 = $20;
   $4 = $21;
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 $4 = HEAP32[$3>>2]|0;
 $__tmp = $4;
 $5 = $1;
 $6 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 HEAP32[$6>>2] = $5;
 $7 = $__tmp;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($2)|0);
 $10 = $__tmp;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($9,$10);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($__r) {
 $__r = $__r|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__r;
 $1 = $0;
 $2 = (__ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($__f,$__l) {
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__f;
 $1 = $__l;
 $2 = $1;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 4|0);
 HEAP32[$7>>2] = $4;
 $8 = $0;
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = (($10) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IiEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIiE10deallocateEPij($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<3)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<3)|0);
 $27 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPdEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPdEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPdEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<2)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<2)|0);
 $27 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPjEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPjEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPjEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(426,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__16__lessIPcS1_EclERKS1_S4_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $2 = $0;
 $3 = (($2) + 32|0);
 $4 = $1;
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3,$4)|0);
 $5 = (($2) + 44|0);
 HEAP32[$5>>2] = 0;
 $6 = (($2) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)!=(0);
 if ($9) {
  $10 = (($2) + 32|0);
  $11 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($10)|0);
  $12 = (($2) + 32|0);
  $13 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($12)|0);
  $14 = (($11) + ($13)|0);
  $15 = (($2) + 44|0);
  HEAP32[$15>>2] = $14;
  $16 = (($2) + 32|0);
  $17 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($16)|0);
  $18 = (($2) + 32|0);
  $19 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($18)|0);
  $20 = (($2) + 44|0);
  $21 = HEAP32[$20>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$19,$21);
 }
 $22 = (($2) + 48|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 16;
 $25 = ($24|0)!=(0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $26 = (($2) + 32|0);
 $27 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($26)|0);
 $__sz = $27;
 $28 = (($2) + 32|0);
 $29 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($28)|0);
 $30 = $__sz;
 $31 = (($29) + ($30)|0);
 $32 = (($2) + 44|0);
 HEAP32[$32>>2] = $31;
 $33 = (($2) + 32|0);
 $34 = (($2) + 32|0);
 $35 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($34)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($33,$35);
 $36 = (($2) + 32|0);
 $37 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($36)|0);
 $38 = (($2) + 32|0);
 $39 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($38)|0);
 $40 = (($2) + 32|0);
 $41 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($40)|0);
 $42 = (($39) + ($41)|0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($2,$37,$42);
 $43 = (($2) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $44 & 3;
 $46 = ($45|0)!=(0);
 if ($46) {
  $47 = $__sz;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($2,$47);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + -12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($5) + ($8)|0);
 __THREW__ = 0;
 $10 = (invoke_ii(427,($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  HEAP32[$4>>2] = $10;
  STACKTOP = sp;return;
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 $15 = $2;
 ___cxa_call_unexpected(($15|0));
 // unreachable;
}
function __ZNKSt3__18ios_base5flagsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $__np = 0, $__ns = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 48|0;
 $6 = sp + 32|0;
 $__sp = sp + 20|0;
 $9 = sp + 8|0;
 $11 = sp;
 $0 = $__ob;
 $1 = $__op;
 $2 = $__oe;
 $3 = $__iob;
 $4 = $__fl;
 $12 = HEAP32[$__s>>2]|0;
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$5>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($5)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
  STACKTOP = sp;return;
 }
 $16 = $2;
 $17 = $0;
 $18 = $16;
 $19 = $17;
 $20 = (($18) - ($19))|0;
 $__sz = $20;
 $21 = $3;
 $22 = (__ZNKSt3__18ios_base5widthEv($21)|0);
 $__ns = $22;
 $23 = $__ns;
 $24 = $__sz;
 $25 = ($23|0)>($24|0);
 if ($25) {
  $26 = $__sz;
  $27 = $__ns;
  $28 = (($27) - ($26))|0;
  $__ns = $28;
 } else {
  $__ns = 0;
 }
 $29 = $1;
 $30 = $0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $__np = $33;
 $34 = $__np;
 $35 = ($34|0)>(0);
 do {
  if ($35) {
   $36 = HEAP32[$__s>>2]|0;
   $37 = $0;
   $38 = $__np;
   $39 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($36,$37,$38)|0);
   $40 = $__np;
   $41 = ($39|0)!=($40|0);
   if (!($41)) {
    break;
   }
   $42 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$6>>2] = $42;
   $43 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($6)|0);
   HEAP32[$__s>>2] = $43;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $44 = $__ns;
 $45 = ($44|0)>(0);
 L16: do {
  if ($45) {
   $46 = $__ns;
   $47 = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($__sp,$46,$47);
   $48 = HEAP32[$__s>>2]|0;
   $49 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($__sp)|0);
   $50 = $__ns;
   __THREW__ = 0;
   $51 = (invoke_iiii(428,($48|0),($49|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   do {
    if (!($53)) {
     $54 = $__ns;
     $55 = ($51|0)!=($54|0);
     if ($55) {
      __THREW__ = 0;
      $56 = (invoke_i(429)|0);
      $57 = __THREW__; __THREW__ = 0;
      $58 = $57&1;
      if ($58) {
       break;
      }
      HEAP32[$9>>2] = $56;
      __THREW__ = 0;
      $59 = (invoke_ii(430,($9|0))|0);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if ($61) {
       break;
      }
      HEAP32[$__s>>2] = $59;
      ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
      $10 = 1;
     } else {
      $10 = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
     $cleanup$dest = $10;
     if ((($cleanup$dest|0) == 0)) {
      break L16;
     } else if ((($cleanup$dest|0) == 1)) {
      STACKTOP = sp;return;
     } else {
      // unreachable;
     }
    }
   } while(0);
   $62 = ___cxa_find_matching_catch()|0;
   $63 = tempRet0;
   $7 = $62;
   $8 = $63;
   __THREW__ = 0;
   invoke_vi(369,($__sp|0));
   $64 = __THREW__; __THREW__ = 0;
   $65 = $64&1;
   if ($65) {
    $84 = ___cxa_find_matching_catch(0|0)|0;
    $85 = tempRet0;
    ___clang_call_terminate($84);
    // unreachable;
   }
   $82 = $7;
   $83 = $8;
   ___resumeException($82|0);
   // unreachable;
  }
 } while(0);
 $66 = $2;
 $67 = $1;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $__np = $70;
 $71 = $__np;
 $72 = ($71|0)>(0);
 do {
  if ($72) {
   $73 = HEAP32[$__s>>2]|0;
   $74 = $1;
   $75 = $__np;
   $76 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($73,$74,$75)|0);
   $77 = $__np;
   $78 = ($76|0)!=($77|0);
   if (!($78)) {
    break;
   }
   $79 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$11>>2] = $79;
   $80 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($11)|0);
   HEAP32[$__s>>2] = $80;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $81 = $3;
 (__ZNSt3__18ios_base5widthEi($81,0)|0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($this,$__first,$__last,$__a) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 17|0;
 $4 = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $__a;
 $5 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$4+0>>0]|0;
 __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($5,$$byval_copy);
 $6 = $1;
 $7 = $2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($5,$6,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if ($3) {
  STACKTOP = sp;return;
 }
 __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIiE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIiEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIdE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $1;
 $3 = $0;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__allocateEj($__size) {
 $__size = $__size|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__size;
 $1 = $0;
 $2 = (__Znwj($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__112__deallocateEPv($__ptr) {
 $__ptr = $__ptr|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__ptr;
 $1 = $0;
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($7)|0);
 $9 = (__ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 24|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 24|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(432,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(432,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPiS1_EET0_T_S3_S2_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($7)|0);
 $9 = (__ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 4|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(434,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(434,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 $5 = (($2) + 4|0);
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$5+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = (800 + 8|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($2,$7);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(393,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(435,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(395,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($2,$7);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(396,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(436,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(398,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($3,$4,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vi[$6 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(437,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIiE10deallocateEPij($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -24|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($12)|0);
  __THREW__ = 0;
  invoke_vii(438,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__13maxIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<3)|0);
 $6 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<3)|0);
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 8)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<3)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<3;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPdEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPdEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPdEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPdEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(399,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__19nullptr_tcvPT_IjEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIjE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<2)|0);
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<2)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 4)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<2)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<2;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPjEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPjEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPjEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPjEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIjE10deallocateEPjj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNKSt3__18ios_base5widthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__18ios_base5widthEi($this,$__wide) {
 $this = $this|0;
 $__wide = $__wide|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wide;
 $2 = $0;
 $3 = (($2) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $__r = $4;
 $5 = $1;
 $6 = (($2) + 12|0);
 HEAP32[$6>>2] = $5;
 $7 = $__r;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $this;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($2,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap = 0, $__p = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 24|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = (__ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($5,$6)|0);
 $__sz = $7;
 $8 = $__sz;
 $9 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($4)|0);
 $10 = ($8>>>0)>($9>>>0);
 if ($10) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $11 = $__sz;
 $12 = ($11>>>0)<(11);
 if ($12) {
  $13 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($4,$13);
  $14 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($4)|0);
  $__p = $14;
 } else {
  $15 = $__sz;
  $16 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($15)|0);
  $__cap = $16;
  $17 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($4)|0);
  $18 = $__cap;
  $19 = (($18) + 1)|0;
  $20 = (__ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($17,$19)|0);
  $__p = $20;
  $21 = $__p;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($4,$21);
  $22 = $__cap;
  $23 = (($22) + 1)|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($4,$23);
  $24 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($4,$24);
 }
 while(1) {
  $25 = $1;
  $26 = $2;
  $27 = ($25|0)!=($26|0);
  if (!($27)) {
   break;
  }
  $28 = $__p;
  $29 = $1;
  __ZNSt3__111char_traitsIcE6assignERcRKc($28,$29);
  $30 = $1;
  $31 = (($30) + 1|0);
  $1 = $31;
  $32 = $__p;
  $33 = (($32) + 1|0);
  $__p = $33;
 }
 $34 = $__p;
 HEAP8[$3>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($34,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(439,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*24)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 HEAPF64[$1>>3] = 0.0;
 $2 = (($1) + 8|0);
 HEAPF64[$2>>3] = 0.0;
 $3 = (($1) + 16|0);
 HEAP8[$3>>0] = -1;
 $4 = (($1) + 18|0);
 HEAP8[$4>>0] = 1;
 $5 = (($1) + 19|0);
 $6 = (($5) + 4|0);
 HEAP8[$6>>0] = -1;
 $7 = (($1) + 19|0);
 $8 = (($7) + 3|0);
 HEAP8[$8>>0] = -1;
 $9 = (($1) + 19|0);
 $10 = (($9) + 2|0);
 HEAP8[$10>>0] = -1;
 $11 = (($1) + 19|0);
 $12 = (($11) + 1|0);
 HEAP8[$12>>0] = -1;
 $13 = (($1) + 19|0);
 HEAP8[$13>>0] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIiEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(440,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIiE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIdE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 536870911;
}
function __ZNKSt3__16__lessIjjEclERKjS3_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + (($3*24)|0)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = ($11*24)|0;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + (($14*24)|0)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 ;HEAP32[$3+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$5+8>>2]|0;HEAP32[$3+12>>2]=HEAP32[$5+12>>2]|0;HEAP32[$3+16>>2]=HEAP32[$5+16>>2]|0;HEAP32[$3+20>>2]=HEAP32[$5+20>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(441,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($3<<2)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPiEET_S2_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = $11<<2;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + ($14<<2)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(442,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPdEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(443,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIjE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPjEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIjE10deallocateEPjj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIcE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $0;
 HEAP8[$4>>0] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19allocatorIiEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIiE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -8|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(422,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIjE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -4|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(426,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__19allocatorIcE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 178956970;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIiE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIjE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1752;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa22 = 0, $$lcssa24 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1760 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = (($src) + 1|0);
      $17 = (1544 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     }
     $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     while(1) {
      $29 = $c$1 << 6;
      $30 = (($s$1) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa24 = $35;
       label = 14;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $$lcssa22 = $34;
       label = 17;
       break;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       label = 19;
       break;
      }
     }
     if ((label|0) == 14) {
      HEAP32[$$st>>2] = 0;
      HEAP32[$11>>2] = $$lcssa;
      $37 = (($n) - ($$lcssa24))|0;
      $$0 = $37;
      STACKTOP = sp;return ($$0|0);
     }
     else if ((label|0) == 17) {
      $c$2 = $$lcssa22;
      break;
     }
     else if ((label|0) == 19) {
      break L1;
     }
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$ = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$0$lcssa$ph = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $2 = ($0|0)!=(0|0);
 $3 = ($wn$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $wn$;$$031 = $n;$32 = $0;$cnt$029 = 0;$ws$030 = $wcs$;
   while(1) {
    $4 = $$031 >>> 2;
    $5 = ($4>>>0)>=($$01428>>>0);
    $6 = ($$031>>>0)>(131);
    $or$cond13 = $6 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $32;$cnt$0$lcssa$ph = $cnt$029;$ws$0$lcssa$ph = $ws$030;
     label = 8;
     break;
    }
    $$014$ = $5 ? $$01428 : $4;
    $7 = (($$031) - ($$014$))|0;
    $8 = (_mbsrtowcs($ws$030,$s,$$014$,$st)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     label = 17;
     break;
    }
    $10 = ($ws$030|0)==($wbuf|0);
    if ($10) {
     $$115 = $$01428;$ws$1 = $wbuf;
    } else {
     $11 = (($ws$030) + ($8<<2)|0);
     $12 = (($$01428) - ($8))|0;
     $$115 = $12;$ws$1 = $11;
    }
    $13 = (($8) + ($cnt$029))|0;
    $14 = HEAP32[$s>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$115|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $7;$32 = $14;$cnt$029 = $13;$ws$030 = $ws$1;
    } else {
     $$0$lcssa$ph = $7;$$014$lcssa$ph = $$115;$$ph = $14;$cnt$0$lcssa$ph = $13;$ws$0$lcssa$ph = $ws$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$17 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$ws$0$lcssa = $ws$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 17) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $n;$$014$lcssa = $wn$;$17 = $0;$cnt$0$lcssa = 0;$ws$0$lcssa = $wcs$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $18 = ($17|0)!=(0|0);
   $19 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $19 & $18;
   $20 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $20 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $17;$cnt$2 = $cnt$0$lcssa;$ws$2 = $ws$0$lcssa;
    while(1) {
     $22 = (_mbrtowc($ws$2,$21,$$2,$st)|0);
     $23 = (($22) + 2)|0;
     $24 = ($23>>>0)<(3);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $25 = HEAP32[$s>>2]|0;
     $26 = (($25) + ($22)|0);
     HEAP32[$s>>2] = $26;
     $27 = (($$2) - ($22))|0;
     $28 = (($ws$2) + 4|0);
     $29 = (($$3) + -1)|0;
     $30 = (($cnt$2) + 1)|0;
     $$old4 = ($29|0)!=(0);
     $$old7 = ($$2|0)!=($22|0);
     $or$cond10 = $$old4 & $$old7;
     if ($or$cond10) {
      $$2 = $27;$$3 = $29;$21 = $26;$cnt$2 = $30;$ws$2 = $28;
     } else {
      $$lcssa61 = $30;
      label = 16;
      break;
     }
    }
    if ((label|0) == 16) {
     $cnt$3 = $$lcssa61;
     break;
    }
    if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $31 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $31;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$03$ph = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0;
 var $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa59 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa67 = 0, $$lcssa69 = 0, $$old1 = 0, $$pre$pre = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$0$ph = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0;
 var $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 20;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 43;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03$ph = $wn;$s$0$ph = $0;
   label = 6;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 7;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $$03 = $$03$ph;$s$0 = $s$0$ph;
   while(1) {
    $7 = HEAP8[$s$0>>0]|0;
    $8 = $7&255;
    $9 = (($8) + -1)|0;
    $10 = ($9>>>0)<(127);
    if ($10) {
     $11 = $s$0;
     $12 = $11 & 3;
     $13 = ($12|0)==(0);
     if ($13) {
      $14 = HEAP32[$s$0>>2]|0;
      $15 = (($14) + -16843009)|0;
      $16 = $15 | $14;
      $17 = $16 & -2139062144;
      $18 = ($17|0)==(0);
      if ($18) {
       $$1415 = $$03;$s$116 = $s$0;
       while(1) {
        $19 = (($s$116) + 4|0);
        $20 = (($$1415) + -4)|0;
        $21 = HEAP32[$19>>2]|0;
        $22 = (($21) + -16843009)|0;
        $23 = $22 | $21;
        $24 = $23 & -2139062144;
        $25 = ($24|0)==(0);
        if ($25) {
         $$1415 = $20;$s$116 = $19;
        } else {
         $$lcssa = $19;$$lcssa53 = $20;$$lcssa54 = $21;
         break;
        }
       }
       $$14$lcssa = $$lcssa53;$$in = $$lcssa54;$s$1$lcssa = $$lcssa;
      } else {
       $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
      }
      $26 = $$in&255;
      $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
     } else {
      $$25 = $$03;$28 = $7;$s$2 = $s$0;
     }
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
    $27 = $28&255;
    $29 = (($27) + -1)|0;
    $30 = ($29>>>0)<(127);
    if (!($30)) {
     $$25$lcssa = $$25;$$lcssa55 = $27;$s$2$lcssa = $s$2;
     break;
    }
    $31 = (($s$2) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
   }
   $33 = (($$lcssa55) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 54;
    break;
   }
   $35 = (($s$2$lcssa) + 1|0);
   $36 = (1544 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 20;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 31;
    break;
   }
   $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa59 = $71;$s$6$lcssa = $s$6;
         label = 38;
         break;
        }
        $76 = (($s$6) + 1|0);
        $77 = $71 & 255;
        $78 = (($$1) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = (($s$6) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = (($$1) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = (($s$6) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = (($$1) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = (($s$6) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = (($$1) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa61 = $87;$$lcssa62 = $90;$$lcssa63 = $91;
         label = 37;
         break;
        }
       }
       if ((label|0) == 37) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa61>>0]|0;
        $$2 = $$lcssa62;$$6 = $$lcssa63;$94 = $$pre$pre;$s$7 = $$lcssa61;
        break;
       }
       else if ((label|0) == 38) {
        label = 0;
        $92 = $$lcssa59&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa67 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = (($s$7) + 1|0);
    $98 = (($$2) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $$lcssa69 = $97;
     label = 30;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa67) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 54;
    break;
   }
   $103 = (($s$7$lcssa) + 1|0);
   $104 = (1544 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 43;
   continue;
  }
  else if ((label|0) == 20) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 21;
    break;
   }
   $47 = (($s$3) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 24;
     break;
    }
    $54 = (($s$3) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 27;
      break;
     }
     $61 = (($s$3) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03$ph = $62;$s$0$ph = $s$4;
   label = 6;
   continue;
  }
  else if ((label|0) == 43) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 44;
    break;
   }
   $115 = $c$4 << 6;
   $116 = (($s$8) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 47;
     break;
    }
    $125 = $118 << 6;
    $126 = (($s$8) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 50;
      break;
     }
     $135 = $128 << 6;
     $136 = (($s$8) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = (($$3) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 7;
   continue;
  }
 }
 if ((label|0) == 21) {
  $46 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 53;
 }
 else if ((label|0) == 24) {
  $53 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 53;
 }
 else if ((label|0) == 27) {
  $60 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 53;
 }
 else if ((label|0) == 30) {
  $s$5$lcssa = $$lcssa69;
  label = 31;
 }
 else if ((label|0) == 44) {
  $114 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 53;
 }
 else if ((label|0) == 47) {
  $124 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 50) {
  $134 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 31) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 53) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 54;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 54) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = (($src) + 1|0);
    $13 = (1544 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = (($src) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = (($src) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$$0 = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0, $or$cond10 = 0;
 var $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0, $s$0$lcssa = 0, $s$0$lcssa$ph = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $2 = ($0|0)!=(0|0);
 $3 = ($n$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $n$;$$031 = $wn;$33 = $0;$cnt$029 = 0;$s$030 = $dst$;
   while(1) {
    $4 = ($$031>>>0)>=($$01428>>>0);
    $5 = ($$031>>>0)>(32);
    $or$cond13 = $4 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $33;$cnt$0$lcssa$ph = $cnt$029;$s$0$lcssa$ph = $s$030;
     label = 8;
     break;
    }
    $$014$$0 = $4 ? $$01428 : $$031;
    $6 = (($$031) - ($$014$$0))|0;
    $7 = (_wcsrtombs($s$030,$ws,$$014$$0,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     label = 16;
     break;
    }
    $9 = ($s$030|0)==($buf|0);
    if ($9) {
     $$115 = $$01428;$s$1 = $buf;
    } else {
     $10 = (($s$030) + ($7)|0);
     $11 = (($$01428) - ($7))|0;
     $$115 = $11;$s$1 = $10;
    }
    $12 = (($7) + ($cnt$029))|0;
    $13 = HEAP32[$ws>>2]|0;
    $14 = ($13|0)!=(0|0);
    $15 = ($$115|0)!=(0);
    $or$cond = $15 & $14;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $6;$33 = $13;$cnt$029 = $12;$s$030 = $s$1;
    } else {
     $$0$lcssa$ph = $6;$$014$lcssa$ph = $$115;$$ph = $13;$cnt$0$lcssa$ph = $12;$s$0$lcssa$ph = $s$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$16 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$s$0$lcssa = $s$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 16) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $wn;$$014$lcssa = $n$;$16 = $0;$cnt$0$lcssa = 0;$s$0$lcssa = $dst$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $17 = ($16|0)!=(0|0);
   $18 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $18 & $17;
   $19 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $19 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $16;$cnt$2 = $cnt$0$lcssa;$s$2 = $s$0$lcssa;
    while(1) {
     $20 = HEAP32[$21>>2]|0;
     $22 = (_wcrtomb($s$2,$20,0)|0);
     $23 = (($22) + 1)|0;
     $24 = ($23>>>0)<(2);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $26 = HEAP32[$ws>>2]|0;
     $27 = (($26) + 4|0);
     HEAP32[$ws>>2] = $27;
     $28 = (($$2) + -1)|0;
     $29 = (($s$2) + ($22)|0);
     $30 = (($$3) - ($22))|0;
     $31 = (($cnt$2) + 1)|0;
     $$old4 = ($$3|0)!=($22|0);
     $$old7 = ($28|0)!=(0);
     $or$cond10 = $$old7 & $$old4;
     if ($or$cond10) {
      $$2 = $28;$$3 = $30;$21 = $27;$cnt$2 = $31;$s$2 = $29;
     } else {
      $$lcssa61 = $31;
      label = 15;
      break;
     }
    }
    if ((label|0) == 15) {
     $cnt$3 = $$lcssa61;
     break;
    }
    $25 = ($$lcssa|0)==(0);
    if ($25) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $32 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $32;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$0$ph = 0, $$0$ph58 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$1$lcssa = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$35$lcssa = 0, $$422 = 0, $$422$lcssa = 0;
 var $$422$lcssa63 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $$0218 = 0;$5 = $3;$ws2$019 = $2;
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0$ph = -1;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = (($ws2$019) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0$ph = $$13;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = ($n>>>0)>(3);
 do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      label = 14;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      label = 30;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = (($$0129) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = (($27) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$1$lcssa = $$1;$$35$lcssa = $$35;
     label = 9;
     break;
    }
   }
   if ((label|0) == 9) {
    $$01$lcssa = $$1$lcssa;$$24$lcssa = $$35$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    HEAP8[$$0129$lcssa>>0] = 0;
    HEAP32[$ws>>2] = 0;
    $18 = (($n) - ($$2428$lcssa))|0;
    $$0 = $18;
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 30) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 21;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0$ph58 = -1;
    label = 29;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa63 = $$422;
    label = 24;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = (($$223) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = (($46) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0$ph58 = $n;
   label = 29;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 21) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 24) {
  $38 = (($n) - ($$422$lcssa63))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 29) {
  $$0 = $$0$ph58;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $k$0 = $2;
 } else {
  $5 = $3;
  $6 = $1;
  $7 = (($5) - ($6))|0;
  $k$0 = $7;
 }
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = (($f) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = (($f) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$8 = 0, $$lcssa = 0, $$lcssa317 = 0, $$lcssa318 = 0, $$lcssa319 = 0, $$lcssa320 = 0, $$lcssa366 = 0, $$lcssa39 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi223Z2D = 0, $$pre209 = 0, $$pre211 = 0, $$pre215 = 0;
 var $$pre217 = 0, $$pre218 = 0, $$pre220 = 0, $$pre221 = 0, $$pre222 = 0, $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0.0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0.0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0$lcssa = 0, $alloc$0$lcssa381 = 0, $alloc$0$lcssa382 = 0, $alloc$0$lcssa383 = 0, $alloc$0$lcssa385 = 0, $alloc$0$lcssa386 = 0, $alloc$0$lcssa387 = 0, $alloc$0204 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0;
 var $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0101 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor17 = 0, $i$0$i = 0, $i$0$ph = 0;
 var $i$0$ph$lcssa = 0, $i$0$ph$lcssa333 = 0, $i$0$ph21 = 0, $i$0$ph21$lcssa = 0, $i$0$ph21$lcssa336 = 0, $i$0$ph21$us106 = 0, $i$0$ph21$us106$lcssa = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$lcssa = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$3$lcssa = 0, $i$4 = 0, $invert$0 = 0, $isdigit = 0, $isdigit7 = 0, $isdigit796 = 0, $isdigittmp = 0;
 var $isdigittmp6 = 0, $isdigittmp695 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0111 = 0, $matches$0111$lcssa = 0, $matches$0111$lcssa338 = 0, $matches$0111$lcssa339 = 0, $matches$0111$lcssa340 = 0, $matches$0111$lcssa341 = 0, $matches$0111$lcssa342 = 0, $matches$0111$lcssa343 = 0, $matches$0111$lcssa344 = 0, $matches$0111$lcssa345 = 0, $matches$0111347 = 0, $matches$1 = 0, $matches$1$lcssa = 0, $matches$2 = 0, $matches$3 = 0;
 var $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond9 = 0, $p$0117 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$397 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$lcssa = 0, $p$7$ph = 0, $p$8 = 0;
 var $p$9 = 0, $pos$0116 = 0, $pos$1 = 0, $pos$2 = 0, $s$0109 = 0, $s$0109$lcssa = 0, $s$1 = 0, $s$1$lcssa368 = 0, $s$2$ph = 0, $s$2$ph$lcssa = 0, $s$2$ph$lcssa323 = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$6$ph = 0, $s$7 = 0, $s$8 = 0, $s$8$ph = 0, $scanset = 0;
 var $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0110 = 0, $wcs$0110$lcssa = 0, $wcs$1 = 0, $wcs$1$lcssa375 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph$lcssa$lcssa = 0, $wcs$3$ph$lcssa326 = 0, $wcs$3$ph$lcssa327 = 0, $wcs$3$ph$lcssa330 = 0, $wcs$3$ph139 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0;
 var $wcs$7$ph = 0, $wcs$8 = 0, $wcs$9 = 0, $wcs$9$ph = 0, $width$0$lcssa = 0, $width$098 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 $5 = (($f) + 108|0);
 $6 = (($f) + 8|0);
 $7 = (($scanset) + 10|0);
 $8 = (($scanset) + 33|0);
 $9 = (($st) + 4|0);
 $10 = (($scanset) + 46|0);
 $11 = (($scanset) + 94|0);
 $13 = $1;$matches$0111 = 0;$p$0117 = $fmt;$pos$0116 = 0;$s$0109 = 0;$wcs$0110 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0117>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L22: do {
     if ($43) {
      $44 = (($p$0117) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L22;
       } else if ((($45<<24>>24) == 42)) {
        $66 = (($p$0117) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = (($p$0117) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = (0 + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = (0 + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = (($77) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = (($p$0117) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = (0 + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = (0 + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = (($86) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp695 = (($89) + -48)|0;
      $isdigit796 = ($isdigittmp695>>>0)<(10);
      if ($isdigit796) {
       $93 = $89;$p$397 = $p$2;$width$098 = 0;
       while(1) {
        $90 = ($width$098*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = (($p$397) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$397 = $94;$width$098 = $92;
        } else {
         $$lcssa317 = $92;$$lcssa318 = $94;$$lcssa319 = $95;
         break;
        }
       }
       $$lcssa39 = $$lcssa319;$p$3$lcssa = $$lcssa318;$width$0$lcssa = $$lcssa317;
      } else {
       $$lcssa39 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa39<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = (($p$3$lcssa) + 1|0);
       $$pre = HEAP8[$100>>0]|0;
       $103 = $$pre;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa39;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0109;$wcs$1 = $wcs$0110;
      }
      $101 = (($p$4) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = (($p$4) + 2|0);
       $$12 = $108 ? $109 : $101;
       $$13 = $108 ? 3 : 1;
       $p$5 = $$12;$size$0 = $$13;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = (($p$4) + 2|0);
       $$10 = $105 ? $106 : $101;
       $$11 = $105 ? -2 : -1;
       $p$5 = $$10;$size$0 = $$11;
       break;
      }
      default: {
       $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
       label = 188;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0116;$width$1 = $$width$0;
      } else if ((($$|0) == 110)) {
       $116 = ($pos$0116|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case -2:  {
        $119 = $pos$0116&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0116&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0116;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0116;$width$1 = $width$0$lcssa;
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = (($125) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre209 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre209;
       } else {
        $137 = (($$pre209) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0116))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = (($146) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
        label = 188;
        break L4;
       }
       $$pre211 = HEAP32[$4>>2]|0;
       $152 = $$pre211;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = (($154) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L81: do {
       switch ($$|0) {
       case 111:  {
        $base$0 = 8;
        label = 164;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 164;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 164;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 164;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $337 = (+___floatscan($f,$$size$0,0));
        $338 = HEAP32[$5>>2]|0;
        $339 = HEAP32[$3>>2]|0;
        $340 = HEAP32[$6>>2]|0;
        $341 = $339;
        $342 = $340;
        $343 = (($342) - ($341))|0;
        $344 = ($338|0)==($343|0);
        if ($344) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $345 = ($dest$0|0)==(0|0);
        if ($345) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 0)) {
          $346 = $337;
          HEAPF32[$dest$0>>2] = $346;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         }
        }
        break;
       }
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        if ($158) {
         $159 = ($$|0)==(115);
         _memset(($scanset|0),-1,257)|0;
         HEAP8[$scanset>>0] = 0;
         if ($159) {
          HEAP8[$8>>0] = 0;
          ;HEAP8[$7+0>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
          $p$9 = $p$5;
         } else {
          $p$9 = $p$5;
         }
        } else {
         $160 = (($p$5) + 1|0);
         $161 = HEAP8[$160>>0]|0;
         $162 = ($161<<24>>24)==(94);
         $163 = (($p$5) + 2|0);
         $invert$0 = $162&1;
         $164 = $162 ? $160 : $p$5;
         $p$6 = $162 ? $163 : $160;
         $165 = $162&1;
         _memset(($scanset|0),($165|0),257)|0;
         HEAP8[$scanset>>0] = 0;
         $166 = HEAP8[$p$6>>0]|0;
         if ((($166<<24>>24) == 45)) {
          $167 = (($164) + 2|0);
          $168 = $invert$0 ^ 1;
          $169 = $168&255;
          HEAP8[$10>>0] = $169;
          $$pre$phi223Z2D = $169;$p$7$ph = $167;
         } else if ((($166<<24>>24) == 93)) {
          $170 = (($164) + 2|0);
          $171 = $invert$0 ^ 1;
          $172 = $171&255;
          HEAP8[$11>>0] = $172;
          $$pre$phi223Z2D = $172;$p$7$ph = $170;
         } else {
          $$pre221 = $invert$0 ^ 1;
          $$pre222 = $$pre221&255;
          $$pre$phi223Z2D = $$pre222;$p$7$ph = $p$6;
         }
         $p$7 = $p$7$ph;
         while(1) {
          $173 = HEAP8[$p$7>>0]|0;
          if ((($173<<24>>24) == 0)) {
           $alloc$0$lcssa382 = $alloc$0;$matches$0111$lcssa340 = $matches$0111;$s$1$lcssa368 = $s$1;$wcs$1$lcssa375 = $wcs$1;
           label = 187;
           break L4;
          } else if ((($173<<24>>24) == 45)) {
           $174 = (($p$7) + 1|0);
           $175 = HEAP8[$174>>0]|0;
           if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
            $186 = 45;$p$8 = $p$7;
           } else {
            $176 = (($p$7) + -1|0);
            $177 = HEAP8[$176>>0]|0;
            $178 = ($177&255)<($175&255);
            if ($178) {
             $179 = $177&255;
             $c$0101 = $179;
             while(1) {
              $180 = (($c$0101) + 1)|0;
              $181 = (($scanset) + ($180)|0);
              HEAP8[$181>>0] = $$pre$phi223Z2D;
              $182 = HEAP8[$174>>0]|0;
              $183 = $182&255;
              $184 = ($180|0)<($183|0);
              if ($184) {
               $c$0101 = $180;
              } else {
               $$lcssa320 = $182;
               break;
              }
             }
             $186 = $$lcssa320;$p$8 = $174;
            } else {
             $186 = $175;$p$8 = $174;
            }
           }
          } else if ((($173<<24>>24) == 93)) {
           $p$7$lcssa = $p$7;
           break;
          } else {
           $186 = $173;$p$8 = $p$7;
          }
          $185 = $186&255;
          $187 = (($185) + 1)|0;
          $188 = (($scanset) + ($187)|0);
          HEAP8[$188>>0] = $$pre$phi223Z2D;
          $189 = (($p$8) + 1|0);
          $p$7 = $189;
         }
         $p$9 = $p$7$lcssa;
        }
        $190 = (($width$1) + 1)|0;
        $$8 = $156 ? $190 : 31;
        $191 = ($$size$0|0)==(1);
        $192 = ($alloc$0|0)!=(0);
        do {
         if ($191) {
          if ($192) {
           $193 = $$8 << 2;
           $194 = (_malloc($193)|0);
           $195 = ($194|0)==(0|0);
           if ($195) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $194;
            label = 188;
            break L4;
           } else {
            $wcs$2 = $194;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $$8;$wcs$3$ph = $wcs$2;
          L155: while(1) {
           $196 = ($wcs$3$ph|0)==(0|0);
           if ($196) {
            while(1) {
             $199 = HEAP32[$3>>2]|0;
             $210 = HEAP32[$4>>2]|0;
             $211 = ($199>>>0)<($210>>>0);
             if ($211) {
              $198 = (($199) + 1|0);
              HEAP32[$3>>2] = $198;
              $200 = HEAP8[$199>>0]|0;
              $201 = $200&255;
              $203 = $201;
             } else {
              $197 = (___shgetc($f)|0);
              $203 = $197;
             }
             $202 = (($203) + 1)|0;
             $204 = (($scanset) + ($202)|0);
             $205 = HEAP8[$204>>0]|0;
             $206 = ($205<<24>>24)==(0);
             if ($206) {
              $i$0$ph$lcssa333 = $i$0$ph;
              label = 120;
              break L155;
             }
             $207 = $203&255;
             HEAP8[$0>>0] = $207;
             $208 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($208|0) == -1)) {
              $alloc$0$lcssa386 = $alloc$0;$matches$0111$lcssa344 = $matches$0111;
              label = 184;
              break L4;
             } else if (!((($208|0) == -2))) {
              $209 = ($i$0$ph|0)==($k$0$ph|0);
              $or$cond$us = $192 & $209;
              if ($or$cond$us) {
               break;
              }
             }
            }
            $i$1$lcssa = $i$0$ph;
           } else {
            if (!($192)) {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 91;
             break;
            }
            $i$0$ph21$us106 = $i$0$ph;
            while(1) {
             while(1) {
              $214 = HEAP32[$3>>2]|0;
              $228 = HEAP32[$4>>2]|0;
              $229 = ($214>>>0)<($228>>>0);
              if ($229) {
               $213 = (($214) + 1|0);
               HEAP32[$3>>2] = $213;
               $215 = HEAP8[$214>>0]|0;
               $216 = $215&255;
               $218 = $216;
              } else {
               $212 = (___shgetc($f)|0);
               $218 = $212;
              }
              $217 = (($218) + 1)|0;
              $219 = (($scanset) + ($217)|0);
              $220 = HEAP8[$219>>0]|0;
              $221 = ($220<<24>>24)==(0);
              if ($221) {
               $i$0$ph21$us106$lcssa = $i$0$ph21$us106;$wcs$3$ph$lcssa326 = $wcs$3$ph;
               label = 118;
               break L155;
              }
              $222 = $218&255;
              HEAP8[$0>>0] = $222;
              $223 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($223|0) == -1)) {
               $alloc$0$lcssa385 = $alloc$0;$matches$0111$lcssa343 = $matches$0111;$wcs$3$ph$lcssa327 = $wcs$3$ph;
               label = 182;
               break L4;
              } else if (!((($223|0) == -2))) {
               break;
              }
             }
             $224 = HEAP32[$wc>>2]|0;
             $225 = (($i$0$ph21$us106) + 1)|0;
             $226 = (($wcs$3$ph) + ($i$0$ph21$us106<<2)|0);
             HEAP32[$226>>2] = $224;
             $227 = ($225|0)==($k$0$ph|0);
             if ($227) {
              break;
             } else {
              $i$0$ph21$us106 = $225;
             }
            }
            $i$1$lcssa = $k$0$ph;
           }
           $factor = $k$0$ph << 1;
           $247 = $factor | 1;
           $248 = $247 << 2;
           $249 = (_realloc($wcs$3$ph,$248)|0);
           $250 = ($249|0)==(0|0);
           if ($250) {
            $alloc$0$lcssa387 = $alloc$0;$matches$0111$lcssa345 = $matches$0111;$wcs$3$ph$lcssa330 = $wcs$3$ph;
            label = 185;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $247;$wcs$3$ph = $249;
          }
          if ((label|0) == 91) {
           label = 0;
           $i$0$ph21 = $i$0$ph$lcssa;
           L189: while(1) {
            while(1) {
             $230 = HEAP32[$3>>2]|0;
             $231 = HEAP32[$4>>2]|0;
             $232 = ($230>>>0)<($231>>>0);
             if ($232) {
              $233 = (($230) + 1|0);
              HEAP32[$3>>2] = $233;
              $234 = HEAP8[$230>>0]|0;
              $235 = $234&255;
              $238 = $235;
             } else {
              $236 = (___shgetc($f)|0);
              $238 = $236;
             }
             $237 = (($238) + 1)|0;
             $239 = (($scanset) + ($237)|0);
             $240 = HEAP8[$239>>0]|0;
             $241 = ($240<<24>>24)==(0);
             if ($241) {
              $i$0$ph21$lcssa336 = $i$0$ph21;
              break L189;
             }
             $242 = $238&255;
             HEAP8[$0>>0] = $242;
             $243 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($243|0) == -1)) {
              $matches$0111$lcssa342 = $matches$0111;$wcs$3$ph$lcssa$lcssa = $wcs$3$ph$lcssa;
              label = 183;
              break L4;
             } else if (!((($243|0) == -2))) {
              break;
             }
            }
            $244 = HEAP32[$wc>>2]|0;
            $245 = (($i$0$ph21) + 1)|0;
            $246 = (($wcs$3$ph$lcssa) + ($i$0$ph21<<2)|0);
            HEAP32[$246>>2] = $244;
            $i$0$ph21 = $245;
           }
           $i$0$ph21$lcssa = $i$0$ph21$lcssa336;$wcs$3$ph139 = $wcs$3$ph$lcssa;
          }
          else if ((label|0) == 118) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph21$us106$lcssa;$wcs$3$ph139 = $wcs$3$ph$lcssa326;
          }
          else if ((label|0) == 120) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph$lcssa333;$wcs$3$ph139 = 0;
          }
          $251 = (_mbsinit($st)|0);
          $252 = ($251|0)==(0);
          if ($252) {
           $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $wcs$3$ph139;
           label = 188;
           break L4;
          } else {
           $i$4 = $i$0$ph21$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph139;
          }
         } else {
          if ($192) {
           $253 = (_malloc($$8)|0);
           $254 = ($253|0)==(0|0);
           if ($254) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = 0;
            label = 188;
            break L4;
           }
           $i$2$ph = 0;$k$1$ph = $$8;$s$2$ph = $253;
           L119: while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $255 = HEAP32[$3>>2]|0;
             $256 = HEAP32[$4>>2]|0;
             $257 = ($255>>>0)<($256>>>0);
             if ($257) {
              $258 = (($255) + 1|0);
              HEAP32[$3>>2] = $258;
              $259 = HEAP8[$255>>0]|0;
              $260 = $259&255;
              $263 = $260;
             } else {
              $261 = (___shgetc($f)|0);
              $263 = $261;
             }
             $262 = (($263) + 1)|0;
             $264 = (($scanset) + ($262)|0);
             $265 = HEAP8[$264>>0]|0;
             $266 = ($265<<24>>24)==(0);
             if ($266) {
              $i$2$lcssa = $i$2;$s$2$ph$lcssa = $s$2$ph;
              break L119;
             }
             $267 = $263&255;
             $268 = (($i$2) + 1)|0;
             $269 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$269>>0] = $267;
             $270 = ($268|0)==($k$1$ph|0);
             if ($270) {
              break;
             } else {
              $i$2 = $268;
             }
            }
            $factor17 = $k$1$ph << 1;
            $271 = $factor17 | 1;
            $272 = (_realloc($s$2$ph,$271)|0);
            $273 = ($272|0)==(0|0);
            if ($273) {
             $alloc$0$lcssa383 = $alloc$0;$matches$0111$lcssa341 = $matches$0111;$s$2$ph$lcssa323 = $s$2$ph;
             label = 186;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $271;$s$2$ph = $272;$i$2$ph = $i$2$ph$phi;
            }
           }
           $i$4 = $i$2$lcssa;$s$3 = $s$2$ph$lcssa;$wcs$4 = 0;
           break;
          }
          $274 = ($dest$0|0)==(0|0);
          if ($274) {
           $292 = $152;
           while(1) {
            $290 = HEAP32[$3>>2]|0;
            $291 = ($290>>>0)<($292>>>0);
            if ($291) {
             $293 = (($290) + 1|0);
             HEAP32[$3>>2] = $293;
             $294 = HEAP8[$290>>0]|0;
             $295 = $294&255;
             $298 = $295;
            } else {
             $296 = (___shgetc($f)|0);
             $298 = $296;
            }
            $297 = (($298) + 1)|0;
            $299 = (($scanset) + ($297)|0);
            $300 = HEAP8[$299>>0]|0;
            $301 = ($300<<24>>24)==(0);
            if ($301) {
             break;
            }
            $$pre217 = HEAP32[$4>>2]|0;
            $292 = $$pre217;
           }
           $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
           break;
          } else {
           $277 = $152;$i$3 = 0;
           while(1) {
            $275 = HEAP32[$3>>2]|0;
            $276 = ($275>>>0)<($277>>>0);
            if ($276) {
             $278 = (($275) + 1|0);
             HEAP32[$3>>2] = $278;
             $279 = HEAP8[$275>>0]|0;
             $280 = $279&255;
             $283 = $280;
            } else {
             $281 = (___shgetc($f)|0);
             $283 = $281;
            }
            $282 = (($283) + 1)|0;
            $284 = (($scanset) + ($282)|0);
            $285 = HEAP8[$284>>0]|0;
            $286 = ($285<<24>>24)==(0);
            if ($286) {
             $i$3$lcssa = $i$3;
             break;
            }
            $287 = $283&255;
            $288 = (($i$3) + 1)|0;
            $289 = (($dest$0) + ($i$3)|0);
            HEAP8[$289>>0] = $287;
            $$pre218 = HEAP32[$4>>2]|0;
            $277 = $$pre218;$i$3 = $288;
           }
           $i$4 = $i$3$lcssa;$s$3 = $dest$0;$wcs$4 = 0;
           break;
          }
         }
        } while(0);
        $302 = HEAP32[$4>>2]|0;
        $303 = ($302|0)==(0|0);
        $$pre215 = HEAP32[$3>>2]|0;
        if ($303) {
         $307 = $$pre215;
        } else {
         $304 = (($$pre215) + -1|0);
         HEAP32[$3>>2] = $304;
         $307 = $304;
        }
        $305 = HEAP32[$5>>2]|0;
        $306 = HEAP32[$6>>2]|0;
        $308 = $307;
        $309 = $306;
        $310 = (($308) - ($309))|0;
        $311 = (($310) + ($305))|0;
        $312 = ($311|0)==(0);
        if ($312) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        $$not = $156 ^ 1;
        $313 = ($311|0)==($width$1|0);
        $or$cond9 = $313 | $$not;
        if (!($or$cond9)) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        do {
         if ($192) {
          if ($191) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $314 = ($wcs$4|0)==(0|0);
         if (!($314)) {
          $315 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$315>>2] = 0;
         }
         $316 = ($s$3|0)==(0|0);
         if ($316) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $317 = (($s$3) + ($i$4)|0);
          HEAP8[$317>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L218: do {
       if ((label|0) == 164) {
        label = 0;
        $318 = (___intscan($f,$base$0,0,-1,-1)|0);
        $319 = tempRet0;
        $320 = HEAP32[$5>>2]|0;
        $321 = HEAP32[$3>>2]|0;
        $322 = HEAP32[$6>>2]|0;
        $323 = $321;
        $324 = $322;
        $325 = (($324) - ($323))|0;
        $326 = ($320|0)==($325|0);
        if ($326) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $327 = ($$|0)==(112);
        $328 = ($dest$0|0)!=(0|0);
        $or$cond3 = $328 & $327;
        if ($or$cond3) {
         $329 = $318;
         HEAP32[$dest$0>>2] = $329;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $330 = ($dest$0|0)==(0|0);
        if ($330) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $331 = $318&255;
          HEAP8[$dest$0>>0] = $331;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case -1:  {
          $332 = $318&65535;
          HEAP16[$dest$0>>1] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 3:  {
          $333 = $dest$0;
          $334 = $333;
          HEAP32[$334>>2] = $318;
          $335 = (($333) + 4)|0;
          $336 = $335;
          HEAP32[$336>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
         }
         }
        }
       }
      } while(0);
      $347 = HEAP32[$5>>2]|0;
      $348 = HEAP32[$3>>2]|0;
      $349 = HEAP32[$6>>2]|0;
      $350 = $348;
      $351 = $349;
      $352 = (($347) + ($pos$1))|0;
      $353 = (($352) + ($350))|0;
      $354 = (($353) - ($351))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $355 = $not$&1;
      $matches$0$ = (($355) + ($matches$0111))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $354;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0117) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = (($48) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa366 = $57;$matches$0111$lcssa = $matches$0111;$s$0109$lcssa = $s$0109;$wcs$0110$lcssa = $wcs$0110;
     label = 20;
     break L4;
    }
    $65 = (($pos$0116) + 1)|0;
    $matches$1 = $matches$0111;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   } else {
    $p$1 = $p$0117;
    while(1) {
     $16 = (($p$1) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = (($21) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre220 = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre220;
    } else {
     $33 = (($$pre220) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0116))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0111;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   }
  } while(0);
  $356 = (($p$11) + 1|0);
  $357 = HEAP8[$356>>0]|0;
  $358 = ($357<<24>>24)==(0);
  if ($358) {
   $matches$1$lcssa = $matches$1;
   label = 194;
   break;
  } else {
   $13 = $357;$matches$0111 = $matches$1;$p$0117 = $356;$pos$0116 = $pos$2;$s$0109 = $s$5;$wcs$0110 = $wcs$6;
  }
 }
 switch (label|0) {
  case 20: {
   $59 = HEAP32[$4>>2]|0;
   $60 = ($59|0)==(0|0);
   if (!($60)) {
    $61 = HEAP32[$3>>2]|0;
    $62 = (($61) + -1|0);
    HEAP32[$3>>2] = $62;
   }
   $63 = ($$lcssa366|0)>(-1);
   $64 = ($matches$0111$lcssa|0)!=(0);
   $or$cond5 = $64 | $63;
   if ($or$cond5) {
    $matches$3 = $matches$0111$lcssa;
    STACKTOP = sp;return ($matches$3|0);
   } else {
    $alloc$1 = 0;$s$7 = $s$0109$lcssa;$wcs$8 = $wcs$0110$lcssa;
    label = 190;
   }
   break;
  }
  case 182: {
   $alloc$0204 = $alloc$0$lcssa385;$matches$0111347 = $matches$0111$lcssa343;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa327;
   label = 189;
   break;
  }
  case 183: {
   $alloc$0204 = 0;$matches$0111347 = $matches$0111$lcssa342;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa$lcssa;
   label = 189;
   break;
  }
  case 184: {
   $alloc$0204 = $alloc$0$lcssa386;$matches$0111347 = $matches$0111$lcssa344;$s$6 = 0;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 185: {
   $alloc$0204 = $alloc$0$lcssa387;$matches$0111347 = $matches$0111$lcssa345;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa330;
   label = 189;
   break;
  }
  case 186: {
   $alloc$0204 = $alloc$0$lcssa383;$matches$0111347 = $matches$0111$lcssa341;$s$6 = $s$2$ph$lcssa323;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 187: {
   $alloc$0204 = $alloc$0$lcssa382;$matches$0111347 = $matches$0111$lcssa340;$s$6 = $s$1$lcssa368;$wcs$7 = $wcs$1$lcssa375;
   label = 189;
   break;
  }
  case 188: {
   $alloc$0204 = $alloc$0$lcssa;$matches$0111347 = $matches$0111$lcssa338;$s$6 = $s$6$ph;$wcs$7 = $wcs$7$ph;
   label = 189;
   break;
  }
  case 191: {
   $alloc$2 = $alloc$0$lcssa381;$matches$2 = $matches$0111$lcssa339;$s$8 = $s$8$ph;$wcs$9 = $wcs$9$ph;
   break;
  }
  case 194: {
   $matches$3 = $matches$1$lcssa;
   STACKTOP = sp;return ($matches$3|0);
   break;
  }
 }
 if ((label|0) == 189) {
  $$old4 = ($matches$0111347|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0204;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 190;
  } else {
   $alloc$2 = $alloc$0204;$matches$2 = $matches$0111347;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 if ((label|0) == 190) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $359 = ($alloc$2|0)==(0);
 if ($359) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f) + 32|0);
 HEAP32[$0>>2] = 444;
 $1 = (($f) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = (($f) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = (($f) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$014 = $n;$$023 = $s;$$05 = $d;
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = (($$023) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = (($$05) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  }
  $$in = $n;
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  }
  $$025 = $s;$$07 = $d;$$16 = $n;
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = (($$025) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = (($$07) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$012 = $n;$$03 = $d;
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = (($$03) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((1952|0),(445|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[1944>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(1960,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 while(1) {
  $1 = (_malloc($$size)|0);
  $2 = ($1|0)==(0|0);
  if (!($2)) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = (__ZSt15get_new_handlerv()|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 1023]();
 }
 if ((label|0) == 5) {
  $5 = (___cxa_allocate_exception(4)|0);
  HEAP32[$5>>2] = ((2128 + 8|0));
  ___cxa_throw(($5|0),(2184|0),(56|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($$lcssa|0);
 }
 return (0)|0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2128 + 8|0));
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2152|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(446,(2200|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
  $3 = $2&1;
  if (!($3)) {
   // unreachable;
  }
 }
 $4 = ___cxa_find_matching_catch(0|0)|0;
 $5 = tempRet0;
 (___cxa_begin_catch(($4|0))|0);
 __THREW__ = 0;
 invoke_vii(446,(2240|0),($vararg_buffer1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  // unreachable;
 }
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 __THREW__ = 0;
 invoke_v(420);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $12 = ___cxa_find_matching_catch(0|0)|0;
  $13 = tempRet0;
  ___clang_call_terminate($12);
  // unreachable;
 } else {
  ___clang_call_terminate($8);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(447)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = (($4) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = (($4) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = HEAP32[442]|0;HEAP32[442] = (($19+0)|0);
 $20 = $19;
 __ZSt11__terminatePFvvE($20);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2296>>2]|0;HEAP32[2296>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2328 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2352 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2576 + 8|0));
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2600|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2712,2768,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info+0|0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = (($info) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = (($info) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = (($info) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = (($7) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 127]($2,$info,$10,1);
    $11 = (($info) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = (($info) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = (($info) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = (($info) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = (($info) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = (($info) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = (($info) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = (($info) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 127]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 127]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 16|0);
  $4 = (($this) + 12|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this) + ($5<<3)|0) + 16|0);
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
  $7 = ($5|0)>(1);
  if ($7) {
   $8 = (($this) + 24|0);
   $9 = (($info) + 54|0);
   $p$0 = $8;
   while(1) {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     break;
    }
    $12 = (($p$0) + 8|0);
    $13 = ($12>>>0)<($6>>>0);
    if ($13) {
     $p$0 = $12;
    } else {
     break;
    }
   }
  }
 }
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = (($0) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = (($0) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = (($info) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = (($info) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = (($info) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = (($info) + 16|0);
 $11 = (($info) + 20|0);
 $12 = (($info) + 24|0);
 $13 = (($info) + 28|0);
 $14 = (($info) + 32|0);
 $15 = (($info) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10+0|0; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = (($info) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = (($18) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 511]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = (($info) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = (($24) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 127]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = (($info) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = (($info) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = (($info) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = (($info) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = (($info) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = (($info) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = (($info) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = (($info) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = (($info) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = (($info) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = (($info) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = (($info) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0;
 var $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $56 = (($this) + 16|0);
    $57 = (($this) + 12|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ((($this) + ($58<<3)|0) + 16|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($56,$info,$current_ptr,$path_below,$use_strcmp);
    $60 = (($this) + 24|0);
    $61 = ($58|0)>(1);
    if (!($61)) {
     break;
    }
    $62 = (($this) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = $63 & 2;
    $65 = ($64|0)==(0);
    if ($65) {
     $66 = (($info) + 36|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ($67|0)==(1);
     if (!($68)) {
      $74 = $63 & 1;
      $75 = ($74|0)==(0);
      if ($75) {
       $78 = (($info) + 54|0);
       $p2$2 = $60;
       while(1) {
        $87 = HEAP8[$78>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if (!($88)) {
         break;
        }
        $89 = HEAP32[$66>>2]|0;
        $90 = ($89|0)==(1);
        if ($90) {
         break;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $91 = (($p2$2) + 8|0);
        $92 = ($91>>>0)<($59>>>0);
        if ($92) {
         $p2$2 = $91;
        } else {
         break;
        }
       }
       break;
      }
      $76 = (($info) + 24|0);
      $77 = (($info) + 54|0);
      $p2$1 = $60;
      while(1) {
       $79 = HEAP8[$77>>0]|0;
       $80 = ($79<<24>>24)==(0);
       if (!($80)) {
        break;
       }
       $81 = HEAP32[$66>>2]|0;
       $82 = ($81|0)==(1);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ($83|0)==(1);
        if ($84) {
         break;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $85 = (($p2$1) + 8|0);
       $86 = ($85>>>0)<($59>>>0);
       if ($86) {
        $p2$1 = $85;
       } else {
        break;
       }
      }
      break;
     }
    }
    $69 = (($info) + 54|0);
    $p2$0 = $60;
    while(1) {
     $70 = HEAP8[$69>>0]|0;
     $71 = ($70<<24>>24)==(0);
     if (!($71)) {
      break;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $72 = (($p2$0) + 8|0);
     $73 = ($72>>>0)<($59>>>0);
     if ($73) {
      $p2$0 = $72;
     } else {
      break;
     }
    }
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($this) + 16|0);
     $24 = (($this) + 12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($this) + ($25<<3)|0) + 16|0);
     $27 = (($info) + 52|0);
     $28 = (($info) + 53|0);
     $29 = (($info) + 54|0);
     $30 = (($this) + 8|0);
     $31 = (($info) + 24|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type$0$off0 = 0;$p$0 = $23;
     L34: while(1) {
      $32 = ($p$0>>>0)<($26>>>0);
      if (!($32)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      HEAP8[$27>>0] = 0;
      HEAP8[$28>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $33 = HEAP8[$29>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      $35 = HEAP8[$28>>0]|0;
      $36 = ($35<<24>>24)==(0);
      do {
       if ($36) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
       } else {
        $37 = HEAP8[$27>>0]|0;
        $38 = ($37<<24>>24)==(0);
        if ($38) {
         $44 = HEAP32[$30>>2]|0;
         $45 = $44 & 1;
         $46 = ($45|0)==(0);
         if ($46) {
          $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = 1;
          label = 20;
          break L34;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = 1;
          break;
         }
        }
        $39 = HEAP32[$31>>2]|0;
        $40 = ($39|0)==(1);
        if ($40) {
         label = 25;
         break L34;
        }
        $41 = HEAP32[$30>>2]|0;
        $42 = $41 & 2;
        $43 = ($42|0)==(0);
        if ($43) {
         label = 25;
         break L34;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
        }
       }
      } while(0);
      $47 = (($p$0) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;$p$0 = $47;
     }
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $48 = (($info) + 40|0);
        $49 = HEAP32[$48>>2]|0;
        $50 = (($49) + 1)|0;
        HEAP32[$48>>2] = $50;
        $51 = (($info) + 36|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = ($52|0)==(1);
        if ($53) {
         $54 = HEAP32[$31>>2]|0;
         $55 = ($54|0)==(2);
         if ($55) {
          HEAP8[$29>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
      else if ((label|0) == 25) {
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 511]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 127]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = (($this) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 127]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($info) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = (($info) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 511]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = (($info) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = (($info) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = (($info) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = (($info) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = (($info) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = (($info) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = (($info) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = (($info) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = (($info) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = (($info) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = (($info) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = (($info) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = (($info) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($info) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = (($info) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = (($this) + 16|0);
  $8 = (($this) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($this) + ($9<<3)|0) + 16|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  if ($11) {
   $12 = (($this) + 24|0);
   $13 = (($info) + 24|0);
   $14 = (($this) + 8|0);
   $15 = (($info) + 54|0);
   $p$0 = $12;
   while(1) {
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==(0);
    if (!($17)) {
     break;
    }
    $18 = HEAP8[$3>>0]|0;
    $19 = ($18<<24>>24)==(0);
    if ($19) {
     $25 = HEAP8[$5>>0]|0;
     $26 = ($25<<24>>24)==(0);
     if (!($26)) {
      $27 = HEAP32[$14>>2]|0;
      $28 = $27 & 1;
      $29 = ($28|0)==(0);
      if ($29) {
       break;
      }
     }
    } else {
     $20 = HEAP32[$13>>2]|0;
     $21 = ($20|0)==(1);
     if ($21) {
      break;
     }
     $22 = HEAP32[$14>>2]|0;
     $23 = $22 & 2;
     $24 = ($23|0)==(0);
     if ($24) {
      break;
     }
    }
    HEAP8[$3>>0] = 0;
    HEAP8[$5>>0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
    $30 = (($p$0) + 8|0);
    $31 = ($30>>>0)<($10>>>0);
    if ($31) {
     $p$0 = $30;
    } else {
     break;
    }
   }
  }
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 511]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = (($1) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2712,2880,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(2184|0),(56|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = (($2) + 80|0);
   $5 = (($2) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 1776;
    _abort_message(1888,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = (($22) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[2320>>2]|0;
   $26 = (($25) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](2320,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = (($30) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = 1776;
    $vararg_ptr1 = (($vararg_buffer) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = (($vararg_buffer) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(1792,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 1776;
    $vararg_ptr6 = (($vararg_buffer3) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(1840,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(1928,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((1944|0),(448|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2016,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[1944>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2072,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0;
 var $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre108 = 0, $$pre58$i$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i12$i = 0, $$sum$i13$i = 0, $$sum$i16$i = 0, $$sum$i19$i = 0, $$sum$i2337 = 0;
 var $$sum$i32 = 0, $$sum$i38 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum110$i = 0, $$sum111$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0;
 var $$sum116$i = 0, $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum14$pre$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i15$i = 0, $$sum2$i17$i = 0, $$sum2$i21$i = 0, $$sum2$pre$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum26$pre$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0;
 var $$sum3$i = 0, $$sum3$i27 = 0, $$sum3$pre$i$i = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0;
 var $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum8$pre = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0;
 var $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0;
 var $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i26$i = 0;
 var $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond24$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond55$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0;
 var $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0;
 var $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   if ($1) {
    $5 = 16;
   } else {
    $2 = (($bytes) + 11)|0;
    $3 = $2 & -8;
    $5 = $3;
   }
   $4 = $5 >>> 3;
   $6 = HEAP32[3128>>2]|0;
   $7 = $6 >>> $4;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($4))|0;
    $13 = $12 << 1;
    $14 = ((3128 + ($13<<2)|0) + 40|0);
    $$sum10 = (($13) + 2)|0;
    $15 = ((3128 + ($$sum10<<2)|0) + 40|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($16) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3128>>2] = $22;
     } else {
      $23 = HEAP32[((3128 + 16|0))>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = (($18) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = (($16) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[((3128 + 8|0))>>2]|0;
   $35 = ($5>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $4;
     $38 = 2 << $4;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = ((3128 + ($65<<2)|0) + 40|0);
     $$sum4 = (($65) + 2)|0;
     $67 = ((3128 + ($$sum4<<2)|0) + 40|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3128>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[((3128 + 16|0))>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = (($70) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[((3128 + 8|0))>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($5))|0;
     $82 = $5 | 3;
     $83 = (($68) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($5)|0);
     $85 = $81 | 1;
     $$sum56 = $5 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[((3128 + 20|0))>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = ((3128 + ($92<<2)|0) + 40|0);
      $94 = HEAP32[3128>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3128>>2] = $98;
       $$sum8$pre = (($92) + 2)|0;
       $$pre108 = ((3128 + ($$sum8$pre<<2)|0) + 40|0);
       $$pre$phiZ2D = $$pre108;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = ((3128 + ($$sum9<<2)|0) + 40|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[((3128 + 16|0))>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = (($F4$0) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = (($90) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = (($90) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[((3128 + 8|0))>>2] = $81;
     HEAP32[((3128 + 20|0))>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[((3128 + 4|0))>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $5;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = ((3128 + ($130<<2)|0) + 304|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (($132) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($5))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = (($t$0$i) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = (($t$0$i) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = (($144) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($5))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[((3128 + 16|0))>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($5)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = (($v$0$i$lcssa) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (($v$0$i$lcssa) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = (($v$0$i$lcssa) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = (($v$0$i$lcssa) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i$ph = $171;$RP$0$i$ph = $170;
        }
       } else {
        $R$0$i$ph = $168;$RP$0$i$ph = $167;
       }
       $R$0$i = $R$0$i$ph;$RP$0$i = $RP$0$i$ph;
       while(1) {
        $173 = (($R$0$i) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if ($175) {
         $176 = (($R$0$i) + 16|0);
         $177 = HEAP32[$176>>2]|0;
         $178 = ($177|0)==(0|0);
         if ($178) {
          $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
          break;
         } else {
          $R$0$i$be = $177;$RP$0$i$be = $176;
         }
        } else {
         $R$0$i$be = $174;$RP$0$i$be = $173;
        }
        $R$0$i = $R$0$i$be;$RP$0$i = $RP$0$i$be;
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = (($v$0$i$lcssa) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = (($159) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = (($156) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = (($v$0$i$lcssa) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ((3128 + ($182<<2)|0) + 304|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[((3128 + 4|0))>>2]|0;
         $189 = $188 & $187;
         HEAP32[((3128 + 4|0))>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[((3128 + 16|0))>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = (($154) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = (($154) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[((3128 + 16|0))>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = (($R$1$i) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = (($v$0$i$lcssa) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = (($R$1$i) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = (($201) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = (($v$0$i$lcssa) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[((3128 + 16|0))>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = (($R$1$i) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = (($207) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($5))|0;
      $215 = $214 | 3;
      $216 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $5 | 3;
      $221 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i38 = $5 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i38)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($5))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[((3128 + 8|0))>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[((3128 + 20|0))>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = ((3128 + ($229<<2)|0) + 40|0);
       $231 = HEAP32[3128>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3128>>2] = $235;
        $$sum2$pre$i = (($229) + 2)|0;
        $$pre$i = ((3128 + ($$sum2$pre$i<<2)|0) + 40|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = ((3128 + ($$sum3$i<<2)|0) + 40|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[((3128 + 16|0))>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = (($F1$0$i) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = (($227) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = (($227) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[((3128 + 8|0))>>2] = $rsize$0$i$lcssa;
      HEAP32[((3128 + 20|0))>>2] = $151;
     }
     $243 = (($v$0$i$lcssa) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $5;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[((3128 + 4|0))>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = ((3128 + ($idx$0$i<<2)|0) + 304|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 93;
      } else {
       $278 = ($idx$0$i|0)==(31);
       if ($278) {
        $282 = 0;
       } else {
        $279 = $idx$0$i >>> 1;
        $280 = (25 - ($279))|0;
        $282 = $280;
       }
       $281 = $246 << $282;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $281;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = (($t$0$i14) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $$lcssa174 = $286;$t$0$i14$lcssa = $t$0$i14;
          label = 97;
          break;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = (($t$0$i14) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ((($t$0$i14) + ($291<<2)|0) + 16|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$1$i$lcssa = $rsize$1$i;$rst$1$i$lcssa = $rst$1$i;$v$1$i$lcssa = $v$1$i;
         label = 92;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
       if ((label|0) == 92) {
        $rsize$2$i = $rsize$1$i$lcssa;$t$1$i = $rst$1$i$lcssa;$v$2$i = $v$1$i$lcssa;
        label = 93;
        break;
       }
       else if ((label|0) == 97) {
        $rsize$331$i$ph = $$lcssa174;$t$230$i$ph = $t$0$i14$lcssa;$v$332$i$ph = $t$0$i14$lcssa;
        label = 98;
        break;
       }
      }
     } while(0);
     if ((label|0) == 93) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = ((3128 + ($327<<2)|0) + 304|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;
      } else {
       $t$2$ph$i = $t$1$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$2$i;
      } else {
       $rsize$331$i$ph = $rsize$2$i;$t$230$i$ph = $t$2$ph$i;$v$332$i$ph = $v$2$i;
       label = 98;
      }
     }
     if ((label|0) == 98) {
      $rsize$331$i = $rsize$331$i$ph;$t$230$i = $t$230$i$ph;$v$332$i = $v$332$i$ph;
      while(1) {
       $331 = (($t$230$i) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = (($t$230$i) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if ($338) {
        $339 = (($t$230$i) + 20|0);
        $340 = HEAP32[$339>>2]|0;
        $341 = ($340|0)==(0|0);
        if ($341) {
         $$rsize$3$i$lcssa = $$rsize$3$i;$t$2$v$3$i$lcssa = $t$2$v$3$i;
         break;
        } else {
         $t$230$i$be = $340;
        }
       } else {
        $t$230$i$be = $337;
       }
       $rsize$331$i = $$rsize$3$i;$t$230$i = $t$230$i$be;$v$332$i = $t$2$v$3$i;
      }
      $rsize$3$lcssa$i = $$rsize$3$i$lcssa;$v$3$lcssa$i = $t$2$v$3$i$lcssa;
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[((3128 + 8|0))>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[((3128 + 16|0))>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = (($v$3$lcssa$i) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = (($v$3$lcssa$i) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = (($v$3$lcssa$i) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = (($v$3$lcssa$i) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18$ph = $368;$RP$0$i17$ph = $367;
          }
         } else {
          $R$0$i18$ph = $365;$RP$0$i17$ph = $364;
         }
         $R$0$i18 = $R$0$i18$ph;$RP$0$i17 = $RP$0$i17$ph;
         while(1) {
          $370 = (($R$0$i18) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if ($372) {
           $373 = (($R$0$i18) + 16|0);
           $374 = HEAP32[$373>>2]|0;
           $375 = ($374|0)==(0|0);
           if ($375) {
            $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
            break;
           } else {
            $R$0$i18$be = $374;$RP$0$i17$be = $373;
           }
          } else {
           $R$0$i18$be = $371;$RP$0$i17$be = $370;
          }
          $R$0$i18 = $R$0$i18$be;$RP$0$i17 = $RP$0$i17$be;
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = (($v$3$lcssa$i) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = (($356) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = (($353) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = (($v$3$lcssa$i) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = ((3128 + ($379<<2)|0) + 304|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[((3128 + 4|0))>>2]|0;
           $386 = $385 & $384;
           HEAP32[((3128 + 4|0))>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[((3128 + 16|0))>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = (($351) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = (($351) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[((3128 + 16|0))>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = (($R$1$i20) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = (($v$3$lcssa$i) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = (($R$1$i20) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = (($398) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = (($v$3$lcssa$i) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[((3128 + 16|0))>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = (($R$1$i20) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = (($404) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L218: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2337 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2337)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = ((3128 + ($424<<2)|0) + 40|0);
          $426 = HEAP32[3128>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3128>>2] = $430;
           $$sum14$pre$i = (($424) + 2)|0;
           $$pre$i25 = ((3128 + ($$sum14$pre$i<<2)|0) + 40|0);
           $$pre$phi$i26Z2D = $$pre$i25;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = ((3128 + ($$sum17$i<<2)|0) + 40|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[((3128 + 16|0))>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = (($F5$0$i) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = ((3128 + ($I7$0$i<<2)|0) + 304|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[((3128 + 4|0))>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[((3128 + 4|0))>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ($I7$0$i|0)==(31);
         if ($476) {
          $484 = 0;
         } else {
          $477 = $I7$0$i >>> 1;
          $478 = (25 - ($477))|0;
          $484 = $478;
         }
         $479 = (($475) + 4|0);
         $480 = HEAP32[$479>>2]|0;
         $481 = $480 & -8;
         $482 = ($481|0)==($rsize$3$lcssa$i|0);
         do {
          if ($482) {
           $T$0$lcssa$i = $475;
          } else {
           $483 = $rsize$3$lcssa$i << $484;
           $K12$029$i = $483;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = ((($T$028$i) + ($491<<2)|0) + 16|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa169 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = (($487) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $$lcssa172 = $487;
             label = 164;
             break;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           if ((label|0) == 164) {
            $T$0$lcssa$i = $$lcssa172;
            break;
           }
           $494 = HEAP32[((3128 + 16|0))>>2]|0;
           $495 = ($$lcssa169>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa169>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L218;
           }
          }
         } while(0);
         $499 = (($T$0$lcssa$i) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[((3128 + 16|0))>>2]|0;
         $502 = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = ($500>>>0)>=($501>>>0);
         $or$cond24$i = $502 & $503;
         if ($or$cond24$i) {
          $504 = (($500) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = (($v$3$lcssa$i) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[((3128 + 8|0))>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[((3128 + 20|0))>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[((3128 + 20|0))>>2] = $514;
   HEAP32[((3128 + 8|0))>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = (($512) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[((3128 + 8|0))>>2] = 0;
   HEAP32[((3128 + 20|0))>>2] = 0;
   $520 = $509 | 3;
   $521 = (($512) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = (($512) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[((3128 + 12|0))>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[((3128 + 12|0))>>2] = $528;
  $529 = HEAP32[((3128 + 24|0))>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[((3128 + 24|0))>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = (($529) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = (($529) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3600>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[((3600 + 8|0))>>2] = $538;
    HEAP32[((3600 + 4|0))>>2] = $538;
    HEAP32[((3600 + 12|0))>>2] = -1;
    HEAP32[((3600 + 16|0))>>2] = -1;
    HEAP32[((3600 + 20|0))>>2] = 0;
    HEAP32[((3128 + 444|0))>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3600>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[((3600 + 8|0))>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[((3128 + 440|0))>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[((3128 + 432|0))>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[((3128 + 444|0))>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L282: do {
  if ($560) {
   $561 = HEAP32[((3128 + 24|0))>>2]|0;
   $562 = ($561|0)==(0|0);
   do {
    if ($562) {
     label = 191;
    } else {
     $sp$0$i$i = ((3128 + 448|0));
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = (($sp$0$i$i) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa165 = $sp$0$i$i;$$lcssa167 = $565;
        break;
       }
      }
      $569 = (($sp$0$i$i) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 190;
       break;
      } else {
       $sp$0$i$i = $570;
      }
     }
     if ((label|0) == 190) {
      label = 191;
      break;
     }
     $594 = HEAP32[((3128 + 12|0))>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa165>>2]|0;
      $600 = HEAP32[$$lcssa167>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0313843$i = $596;
       } else {
        $tbase$253$i = $598;$tsize$252$i = $596;
        label = 211;
        break L282;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;
       label = 201;
      }
     } else {
      $tsize$0313843$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 191) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0313843$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[((3600 + 4|0))>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[((3128 + 432|0))>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[((3128 + 440|0))>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0313843$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       if ($593) {
        $tbase$253$i = $572;$tsize$252$i = $ssize$0$i;
        label = 211;
        break L282;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;
        label = 201;
       }
      } else {
       $tsize$0313843$i = 0;
      }
     }
    }
   } while(0);
   L306: do {
    if ((label|0) == 201) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond4$i = $607 & $or$cond5$i;
     do {
      if ($or$cond4$i) {
       $608 = HEAP32[((3600 + 8|0))>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0313843$i = 0;
         break L306;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0313843$i = 0;
     } else {
      $tbase$253$i = $br$0$ph$i;$tsize$252$i = $ssize$2$i;
      label = 211;
      break L282;
     }
    }
   } while(0);
   $618 = HEAP32[((3128 + 444|0))>>2]|0;
   $619 = $618 | 4;
   HEAP32[((3128 + 444|0))>>2] = $619;
   $tsize$1$i = $tsize$0313843$i;
   label = 208;
  } else {
   $tsize$1$i = 0;
   label = 208;
  }
 } while(0);
 if ((label|0) == 208) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond6$i = $625 & $or$cond3$i;
   if ($or$cond6$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$253$i = $621;$tsize$252$i = $$tsize$1$i;
     label = 211;
    }
   }
  }
 }
 if ((label|0) == 211) {
  $631 = HEAP32[((3128 + 432|0))>>2]|0;
  $632 = (($631) + ($tsize$252$i))|0;
  HEAP32[((3128 + 432|0))>>2] = $632;
  $633 = HEAP32[((3128 + 436|0))>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[((3128 + 436|0))>>2] = $632;
  }
  $635 = HEAP32[((3128 + 24|0))>>2]|0;
  $636 = ($635|0)==(0|0);
  L325: do {
   if ($636) {
    $637 = HEAP32[((3128 + 16|0))>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$253$i>>>0)<($637>>>0);
    $or$cond8$i = $638 | $639;
    if ($or$cond8$i) {
     HEAP32[((3128 + 16|0))>>2] = $tbase$253$i;
    }
    HEAP32[((3128 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3128 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3128 + 460|0))>>2] = 0;
    $640 = HEAP32[3600>>2]|0;
    HEAP32[((3128 + 36|0))>>2] = $640;
    HEAP32[((3128 + 32|0))>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = ((3128 + ($641<<2)|0) + 40|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = ((3128 + ($$sum$i$i<<2)|0) + 40|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = ((3128 + ($$sum1$i$i<<2)|0) + 40|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$252$i) + -40)|0;
    $647 = (($tbase$253$i) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    if ($650) {
     $654 = 0;
    } else {
     $651 = (0 - ($648))|0;
     $652 = $651 & 7;
     $654 = $652;
    }
    $653 = (($tbase$253$i) + ($654)|0);
    $655 = (($646) - ($654))|0;
    HEAP32[((3128 + 24|0))>>2] = $653;
    HEAP32[((3128 + 12|0))>>2] = $655;
    $656 = $655 | 1;
    $$sum$i12$i = (($654) + 4)|0;
    $657 = (($tbase$253$i) + ($$sum$i12$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$252$i) + -36)|0;
    $658 = (($tbase$253$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[((3600 + 16|0))>>2]|0;
    HEAP32[((3128 + 28|0))>>2] = $659;
   } else {
    $sp$082$i = ((3128 + 448|0));
    while(1) {
     $660 = HEAP32[$sp$082$i>>2]|0;
     $661 = (($sp$082$i) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$253$i|0)==($663|0);
     if ($664) {
      $$lcssa159 = $660;$$lcssa161 = $661;$$lcssa163 = $662;$sp$082$i$lcssa = $sp$082$i;
      label = 224;
      break;
     }
     $665 = (($sp$082$i) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      label = 229;
      break;
     } else {
      $sp$082$i = $666;
     }
    }
    if ((label|0) == 224) {
     $668 = (($sp$082$i$lcssa) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa159>>>0);
      $673 = ($635>>>0)<($tbase$253$i>>>0);
      $or$cond55$i = $673 & $672;
      if ($or$cond55$i) {
       $674 = (($$lcssa163) + ($tsize$252$i))|0;
       HEAP32[$$lcssa161>>2] = $674;
       $675 = HEAP32[((3128 + 12|0))>>2]|0;
       $676 = (($675) + ($tsize$252$i))|0;
       $677 = (($635) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       if ($680) {
        $684 = 0;
       } else {
        $681 = (0 - ($678))|0;
        $682 = $681 & 7;
        $684 = $682;
       }
       $683 = (($635) + ($684)|0);
       $685 = (($676) - ($684))|0;
       HEAP32[((3128 + 24|0))>>2] = $683;
       HEAP32[((3128 + 12|0))>>2] = $685;
       $686 = $685 | 1;
       $$sum$i16$i = (($684) + 4)|0;
       $687 = (($635) + ($$sum$i16$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i17$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i17$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[((3600 + 16|0))>>2]|0;
       HEAP32[((3128 + 28|0))>>2] = $689;
       break;
      }
     }
    }
    else if ((label|0) == 229) {
    }
    $690 = HEAP32[((3128 + 16|0))>>2]|0;
    $691 = ($tbase$253$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[((3128 + 16|0))>>2] = $tbase$253$i;
     $755 = $tbase$253$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$253$i) + ($tsize$252$i)|0);
    $sp$181$i = ((3128 + 448|0));
    while(1) {
     $693 = HEAP32[$sp$181$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa156 = $sp$181$i;$sp$181$i$lcssa = $sp$181$i;
      label = 235;
      break;
     }
     $695 = (($sp$181$i) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      label = 236;
      break;
     } else {
      $sp$181$i = $696;
     }
    }
    if ((label|0) == 235) {
     $698 = (($sp$181$i$lcssa) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa156>>2] = $tbase$253$i;
      $702 = (($sp$181$i$lcssa) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$252$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = (($tbase$253$i) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      if ($708) {
       $712 = 0;
      } else {
       $709 = (0 - ($706))|0;
       $710 = $709 & 7;
       $712 = $710;
      }
      $711 = (($tbase$253$i) + ($712)|0);
      $$sum110$i = (($tsize$252$i) + 8)|0;
      $713 = (($tbase$253$i) + ($$sum110$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      if ($716) {
       $719 = 0;
      } else {
       $717 = (0 - ($714))|0;
       $718 = $717 & 7;
       $719 = $718;
      }
      $$sum111$i = (($719) + ($tsize$252$i))|0;
      $720 = (($tbase$253$i) + ($$sum111$i)|0);
      $721 = $720;
      $722 = $711;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($712) + ($nb$0))|0;
      $724 = (($tbase$253$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($712) + 4)|0;
      $727 = (($tbase$253$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L354: do {
       if ($728) {
        $729 = HEAP32[((3128 + 12|0))>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[((3128 + 12|0))>>2] = $730;
        HEAP32[((3128 + 24|0))>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$253$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[((3128 + 20|0))>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[((3128 + 8|0))>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[((3128 + 8|0))>>2] = $736;
         HEAP32[((3128 + 20|0))>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$253$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$253$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$252$i) + 4)|0;
        $$sum112$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$253$i) + ($$sum112$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L362: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum122$i = (($$sum3738$i$i) + ($tsize$252$i))|0;
           $747 = (($tbase$253$i) + ($$sum122$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$252$i) + 12)|0;
           $$sum123$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$253$i) + ($$sum123$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = ((3128 + ($751<<2)|0) + 40|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = (($748) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3128>>2]|0;
            $763 = $762 & $761;
            HEAP32[3128>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre58$i$i = (($750) + 8|0);
             $$pre$phi59$i$iZ2D = $$pre58$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = (($750) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi59$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = (($748) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi59$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum113$i = (($$sum34$i$i) + ($tsize$252$i))|0;
           $770 = (($tbase$253$i) + ($$sum113$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$252$i) + 12)|0;
           $$sum114$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$253$i) + ($$sum114$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum120$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$253$i) + ($$sum120$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum121$i = (($$sum67$i$i) + ($tsize$252$i))|0;
              $787 = (($tbase$253$i) + ($$sum121$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i$ph = $788;$RP$0$i$i$ph = $787;
              }
             } else {
              $R$0$i$i$ph = $785;$RP$0$i$i$ph = $784;
             }
             $R$0$i$i = $R$0$i$i$ph;$RP$0$i$i = $RP$0$i$i$ph;
             while(1) {
              $790 = (($R$0$i$i) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               $793 = (($R$0$i$i) + 16|0);
               $794 = HEAP32[$793>>2]|0;
               $795 = ($794|0)==(0|0);
               if ($795) {
                $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
                break;
               } else {
                $R$0$i$i$be = $794;$RP$0$i$i$be = $793;
               }
              } else {
               $R$0$i$i$be = $791;$RP$0$i$i$be = $790;
              }
              $R$0$i$i = $R$0$i$i$be;$RP$0$i$i = $RP$0$i$i$be;
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum115$i = (($$sum3536$i$i) + ($tsize$252$i))|0;
             $775 = (($tbase$253$i) + ($$sum115$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = (($776) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = (($773) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$252$i) + 28)|0;
           $$sum116$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$253$i) + ($$sum116$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = ((3128 + ($799<<2)|0) + 304|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[((3128 + 4|0))>>2]|0;
             $806 = $805 & $804;
             HEAP32[((3128 + 4|0))>>2] = $806;
             break L362;
            } else {
             $807 = HEAP32[((3128 + 16|0))>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = (($771) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = (($771) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L362;
             }
            }
           } while(0);
           $814 = HEAP32[((3128 + 16|0))>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = (($R$1$i$i) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum117$i = (($$sum3132$i$i) + ($tsize$252$i))|0;
           $817 = (($tbase$253$i) + ($$sum117$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = (($R$1$i$i) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = (($818) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum118$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$253$i) + ($$sum118$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[((3128 + 16|0))>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = (($R$1$i$i) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = (($824) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum119$i = (($$sum9$i$i) + ($tsize$252$i))|0;
         $830 = (($tbase$253$i) + ($$sum119$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = (($oldfirst$0$i$i) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$253$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$253$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = ((3128 + ($840<<2)|0) + 40|0);
         $842 = HEAP32[3128>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3128>>2] = $846;
           $$sum26$pre$i$i = (($840) + 2)|0;
           $$pre$i22$i = ((3128 + ($$sum26$pre$i$i<<2)|0) + 40|0);
           $$pre$phi$i23$iZ2D = $$pre$i22$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = ((3128 + ($$sum29$i$i<<2)|0) + 40|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[((3128 + 16|0))>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = (($F4$0$i$i) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$253$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$253$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = ((3128 + ($I7$0$i$i<<2)|0) + 304|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$253$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$253$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$253$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[((3128 + 4|0))>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[((3128 + 4|0))>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$253$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$253$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$253$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ($I7$0$i$i|0)==(31);
        if ($892) {
         $900 = 0;
        } else {
         $893 = $I7$0$i$i >>> 1;
         $894 = (25 - ($893))|0;
         $900 = $894;
        }
        $895 = (($891) + 4|0);
        $896 = HEAP32[$895>>2]|0;
        $897 = $896 & -8;
        $898 = ($897|0)==($qsize$0$i$i|0);
        do {
         if ($898) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $899 = $qsize$0$i$i << $900;
          $K8$053$i$i = $899;$T$052$i$i = $891;
          while(1) {
           $907 = $K8$053$i$i >>> 31;
           $908 = ((($T$052$i$i) + ($907<<2)|0) + 16|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$052$i$i$lcssa = $T$052$i$i;
            break;
           }
           $901 = $K8$053$i$i << 1;
           $902 = (($903) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $$lcssa146 = $903;
            label = 316;
            break;
           } else {
            $K8$053$i$i = $901;$T$052$i$i = $903;
           }
          }
          if ((label|0) == 316) {
           $T$0$lcssa$i25$i = $$lcssa146;
           break;
          }
          $910 = HEAP32[((3128 + 16|0))>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$253$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$052$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$253$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$253$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L354;
          }
         }
        } while(0);
        $915 = (($T$0$lcssa$i25$i) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[((3128 + 16|0))>>2]|0;
        $918 = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = ($916>>>0)>=($917>>>0);
        $or$cond$i26$i = $918 & $919;
        if ($or$cond$i26$i) {
         $920 = (($916) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$253$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$253$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$253$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $712 | 8;
      $924 = (($tbase$253$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     }
    }
    else if ((label|0) == 236) {
    }
    $sp$0$i$i$i = ((3128 + 448|0));
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = (($sp$0$i$i$i) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa152 = $925;$$lcssa153 = $928;$$lcssa154 = $929;
       break;
      }
     }
     $931 = (($sp$0$i$i$i) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i13$i = (($$lcssa153) + -47)|0;
    $$sum1$i14$i = (($$lcssa153) + -39)|0;
    $933 = (($$lcssa152) + ($$sum1$i14$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    if ($936) {
     $939 = 0;
    } else {
     $937 = (0 - ($934))|0;
     $938 = $937 & 7;
     $939 = $938;
    }
    $$sum2$i15$i = (($$sum$i13$i) + ($939))|0;
    $940 = (($$lcssa152) + ($$sum2$i15$i)|0);
    $941 = (($635) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = (($943) + 8|0);
    $945 = (($tsize$252$i) + -40)|0;
    $946 = (($tbase$253$i) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    if ($949) {
     $953 = 0;
    } else {
     $950 = (0 - ($947))|0;
     $951 = $950 & 7;
     $953 = $951;
    }
    $952 = (($tbase$253$i) + ($953)|0);
    $954 = (($945) - ($953))|0;
    HEAP32[((3128 + 24|0))>>2] = $952;
    HEAP32[((3128 + 12|0))>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($953) + 4)|0;
    $956 = (($tbase$253$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$252$i) + -36)|0;
    $957 = (($tbase$253$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[((3600 + 16|0))>>2]|0;
    HEAP32[((3128 + 28|0))>>2] = $958;
    $959 = (($943) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944+0>>2]=HEAP32[((3128 + 448|0))+0>>2]|0;HEAP32[$944+4>>2]=HEAP32[((3128 + 448|0))+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[((3128 + 448|0))+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[((3128 + 448|0))+12>>2]|0;
    HEAP32[((3128 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3128 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3128 + 460|0))>>2] = 0;
    HEAP32[((3128 + 456|0))>>2] = $944;
    $960 = (($943) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = (($943) + 32|0);
    $962 = ($961>>>0)<($$lcssa154>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = (($964) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = (($964) + 8|0);
      $966 = ($965>>>0)<($$lcssa154>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = (($635) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = ((3128 + ($977<<2)|0) + 40|0);
      $979 = HEAP32[3128>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      do {
       if ($982) {
        $983 = $979 | $980;
        HEAP32[3128>>2] = $983;
        $$sum3$pre$i$i = (($977) + 2)|0;
        $$pre$i$i = ((3128 + ($$sum3$pre$i$i<<2)|0) + 40|0);
        $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $978;
       } else {
        $$sum4$i$i = (($977) + 2)|0;
        $984 = ((3128 + ($$sum4$i$i<<2)|0) + 40|0);
        $985 = HEAP32[$984>>2]|0;
        $986 = HEAP32[((3128 + 16|0))>>2]|0;
        $987 = ($985>>>0)<($986>>>0);
        if (!($987)) {
         $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
         break;
        }
        _abort();
        // unreachable;
       }
      } while(0);
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = (($F$0$i$i) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = (($635) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = (($635) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = ((3128 + ($I1$0$i$i<<2)|0) + 304|0);
     $1017 = (($635) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = (($635) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[((3128 + 4|0))>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[((3128 + 4|0))>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = (($635) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = (($635) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = (($635) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ($I1$0$i$i|0)==(31);
     if ($1028) {
      $1036 = 0;
     } else {
      $1029 = $I1$0$i$i >>> 1;
      $1030 = (25 - ($1029))|0;
      $1036 = $1030;
     }
     $1031 = (($1027) + 4|0);
     $1032 = HEAP32[$1031>>2]|0;
     $1033 = $1032 & -8;
     $1034 = ($1033|0)==($970|0);
     do {
      if ($1034) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1035 = $970 << $1036;
       $K2$08$i$i = $1035;$T$07$i$i = $1027;
       while(1) {
        $1043 = $K2$08$i$i >>> 31;
        $1044 = ((($T$07$i$i) + ($1043<<2)|0) + 16|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa148 = $1044;$T$07$i$i$lcssa = $T$07$i$i;
         break;
        }
        $1037 = $K2$08$i$i << 1;
        $1038 = (($1039) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $$lcssa151 = $1039;
         label = 353;
         break;
        } else {
         $K2$08$i$i = $1037;$T$07$i$i = $1039;
        }
       }
       if ((label|0) == 353) {
        $T$0$lcssa$i$i = $$lcssa151;
        break;
       }
       $1046 = HEAP32[((3128 + 16|0))>>2]|0;
       $1047 = ($$lcssa148>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa148>>2] = $635;
        $1048 = (($635) + 24|0);
        HEAP32[$1048>>2] = $T$07$i$i$lcssa;
        $1049 = (($635) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = (($635) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L325;
       }
      }
     } while(0);
     $1051 = (($T$0$lcssa$i$i) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[((3128 + 16|0))>>2]|0;
     $1054 = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = ($1052>>>0)>=($1053>>>0);
     $or$cond$i$i = $1054 & $1055;
     if ($or$cond$i$i) {
      $1056 = (($1052) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = (($635) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = (($635) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = (($635) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[((3128 + 12|0))>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[((3128 + 12|0))>>2] = $1062;
   $1063 = HEAP32[((3128 + 24|0))>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[((3128 + 24|0))>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = (($1063) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = (($1063) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $$pre61 = 0, $$sum = 0, $$sum10$pre = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0;
 var $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0;
 var $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $cond = 0;
 var $cond48 = 0, $or$cond = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = (($mem) + -8|0);
 $2 = HEAP32[((3128 + 16|0))>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = (($mem) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[((3128 + 20|0))>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[((3128 + 8|0))>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = ((3128 + ($25<<2)|0) + 40|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = (($22) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3128>>2]|0;
     $36 = $35 & $34;
     HEAP32[3128>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre61 = (($24) + 8|0);
     $$pre$phi62Z2D = $$pre61;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = (($24) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi62Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = (($22) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi62Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $61;$RP$0$ph = $60;
      }
     } else {
      $R$0$ph = $58;$RP$0$ph = $57;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $63 = (($R$0) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if ($65) {
       $66 = (($R$0) + 16|0);
       $67 = HEAP32[$66>>2]|0;
       $68 = ($67|0)==(0|0);
       if ($68) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $67;$RP$0$be = $66;
       }
      } else {
       $R$0$be = $64;$RP$0$be = $63;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = (($49) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = (($46) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((3128 + ($72<<2)|0) + 304|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[((3128 + 4|0))>>2]|0;
      $79 = $78 & $77;
      HEAP32[((3128 + 4|0))>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[((3128 + 16|0))>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = (($44) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = (($44) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[((3128 + 16|0))>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = (($R$1) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = (($R$1) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = (($91) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[((3128 + 16|0))>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = (($R$1) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = (($97) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[((3128 + 24|0))>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[((3128 + 12|0))>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[((3128 + 12|0))>>2] = $120;
   HEAP32[((3128 + 24|0))>>2] = $p$0;
   $121 = $120 | 1;
   $122 = (($p$0) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[((3128 + 20|0))>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[((3128 + 20|0))>>2] = 0;
   HEAP32[((3128 + 8|0))>>2] = 0;
   return;
  }
  $125 = HEAP32[((3128 + 20|0))>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[((3128 + 8|0))>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[((3128 + 8|0))>>2] = $128;
   HEAP32[((3128 + 20|0))>>2] = $p$0;
   $129 = $128 | 1;
   $130 = (($p$0) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = ((3128 + ($140<<2)|0) + 40|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[((3128 + 16|0))>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = (($137) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3128>>2]|0;
     $152 = $151 & $150;
     HEAP32[3128>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre59 = (($139) + 8|0);
     $$pre$phi60Z2D = $$pre59;
    } else {
     $154 = HEAP32[((3128 + 16|0))>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = (($139) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi60Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = (($137) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi60Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $179;$RP9$0$ph = $178;
       }
      } else {
       $R7$0$ph = $176;$RP9$0$ph = $175;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $181 = (($R7$0) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $184 = (($R7$0) + 16|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if ($186) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $185;$RP9$0$be = $184;
        }
       } else {
        $R7$0$be = $182;$RP9$0$be = $181;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $187 = HEAP32[((3128 + 16|0))>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[((3128 + 16|0))>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = (($166) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = (($163) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((3128 + ($191<<2)|0) + 304|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond48 = ($R7$1|0)==(0|0);
      if ($cond48) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[((3128 + 4|0))>>2]|0;
       $198 = $197 & $196;
       HEAP32[((3128 + 4|0))>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[((3128 + 16|0))>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = (($161) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = (($161) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[((3128 + 16|0))>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = (($R7$1) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = (($R7$1) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = (($210) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[((3128 + 16|0))>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = (($R7$1) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = (($216) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = (($p$0) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[((3128 + 20|0))>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[((3128 + 8|0))>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = (($p$0) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = ((3128 + ($233<<2)|0) + 40|0);
  $235 = HEAP32[3128>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3128>>2] = $239;
   $$sum10$pre = (($233) + 2)|0;
   $$pre = ((3128 + ($$sum10$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = ((3128 + ($$sum11<<2)|0) + 40|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[((3128 + 16|0))>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = (($F16$0) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = (($p$0) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = (($p$0) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = ((3128 + ($I18$0<<2)|0) + 304|0);
 $273 = (($p$0) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = (($p$0) + 16|0);
 $275 = (($p$0) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[((3128 + 4|0))>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L205: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[((3128 + 4|0))>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = (($p$0) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = (($p$0) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = (($p$0) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ($I18$0|0)==(31);
   if ($285) {
    $293 = 0;
   } else {
    $286 = $I18$0 >>> 1;
    $287 = (25 - ($286))|0;
    $293 = $287;
   }
   $288 = (($284) + 4|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = $289 & -8;
   $291 = ($290|0)==($psize$1|0);
   do {
    if ($291) {
     $T$0$lcssa = $284;
    } else {
     $292 = $psize$1 << $293;
     $K19$054 = $292;$T$053 = $284;
     while(1) {
      $300 = $K19$054 >>> 31;
      $301 = ((($T$053) + ($300<<2)|0) + 16|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$053$lcssa = $T$053;
       break;
      }
      $294 = $K19$054 << 1;
      $295 = (($296) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $$lcssa71 = $296;
       label = 137;
       break;
      } else {
       $K19$054 = $294;$T$053 = $296;
      }
     }
     if ((label|0) == 137) {
      $T$0$lcssa = $$lcssa71;
      break;
     }
     $303 = HEAP32[((3128 + 16|0))>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = (($p$0) + 24|0);
      HEAP32[$305>>2] = $T$053$lcssa;
      $306 = (($p$0) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = (($p$0) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L205;
     }
    }
   } while(0);
   $308 = (($T$0$lcssa) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[((3128 + 16|0))>>2]|0;
   $311 = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = ($309>>>0)>=($310>>>0);
   $or$cond = $311 & $312;
   if ($or$cond) {
    $313 = (($309) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = (($p$0) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = (($p$0) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = (($p$0) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[((3128 + 32|0))>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[((3128 + 32|0))>>2] = $318;
 $319 = ($318|0)==(0);
 if (!($319)) {
  return;
 }
 $sp$0$in$i = ((3128 + 456|0));
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = (($sp$0$i) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[((3128 + 32|0))>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 if ($4) {
  $8 = 16;
 } else {
  $5 = (($bytes) + 11)|0;
  $6 = $5 & -8;
  $8 = $6;
 }
 $7 = (($oldmem) + -8|0);
 $9 = (_try_realloc_chunk($7,$8)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (($9) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = (($oldmem) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 if ($0) {
  $4 = 1;
 } else {
  $1 = (($c) + -9)|0;
  $2 = ($1>>>0)<(5);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$1 = 0, $$124 = 0, $$125 = 0, $$22 = 0, $$23 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $$sum = 0, $$sum14 = 0, $$sum1447 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum1867 = 0, $$sum19 = 0, $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond42 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $279 = 0;$280 = 0;
  tempRet0 = $279;
  return ($280|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = (($6) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa122 = $13;
   break;
  }
 }
 $16 = ($$lcssa122|0)==(45);
 do {
  if ((($$lcssa122|0) == 43) | (($$lcssa122|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = (($18) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa122;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = (($29) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$125 = 8;$c$126 = $37;
     label = 48;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = (($39) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3624 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = (($52) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    if ($51) {
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = (($55) + -1|0);
    HEAP32[$3>>2] = $56;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   } else {
    $$125 = 16;$c$126 = $46;
    label = 48;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3624 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = (($63) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$084 = 0;
    while(1) {
     $69 = ($x$084*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = (($72) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $$ = $80 & $81;
     if ($$) {
      $71 = $79;$x$084 = $70;
     } else {
      $$lcssa121 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $281 = $$lcssa121;$282 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $281 = 0;$282 = 0;$c$2$lcssa = $c$1;
   }
   $82 = (($c$2$lcssa) + -48)|0;
   $83 = ($82>>>0)<(10);
   if ($83) {
    $84 = $281;$85 = $282;$88 = $82;$c$373 = $c$2$lcssa;
    while(1) {
     $86 = (___muldi3(($84|0),($85|0),10,0)|0);
     $87 = tempRet0;
     $89 = ($88|0)<(0);
     $90 = $89 << 31 >> 31;
     $91 = $88 ^ -1;
     $92 = $90 ^ -1;
     $93 = ($87>>>0)>($92>>>0);
     $94 = ($86>>>0)>($91>>>0);
     $95 = ($87|0)==($92|0);
     $96 = $95 & $94;
     $97 = $93 | $96;
     if ($97) {
      $$lcssa = $88;$283 = $84;$284 = $85;$c$3$lcssa = $c$373;
      break;
     }
     $98 = (_i64Add(($86|0),($87|0),($88|0),($90|0))|0);
     $99 = tempRet0;
     $100 = HEAP32[$3>>2]|0;
     $101 = HEAP32[$4>>2]|0;
     $102 = ($100>>>0)<($101>>>0);
     if ($102) {
      $103 = (($100) + 1|0);
      HEAP32[$3>>2] = $103;
      $104 = HEAP8[$100>>0]|0;
      $105 = $104&255;
      $c$3$be = $105;
     } else {
      $106 = (___shgetc($f)|0);
      $c$3$be = $106;
     }
     $107 = (($c$3$be) + -48)|0;
     $108 = ($107>>>0)<(10);
     $109 = ($99>>>0)<(429496729);
     $110 = ($98>>>0)<(2576980378);
     $111 = ($99|0)==(429496729);
     $112 = $111 & $110;
     $113 = $109 | $112;
     $or$cond7 = $108 & $113;
     if ($or$cond7) {
      $84 = $98;$85 = $99;$88 = $107;$c$373 = $c$3$be;
     } else {
      $$lcssa = $107;$283 = $98;$284 = $99;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $114 = ($$lcssa>>>0)>(9);
    if ($114) {
     $252 = $284;$254 = $283;
    } else {
     $$124 = 10;$285 = $283;$286 = $284;$c$8 = $c$3$lcssa;
     label = 79;
    }
   } else {
    $252 = $282;$254 = $281;
   }
  } else {
   $$125 = $$1;$c$126 = $c$1;
   label = 48;
  }
 }
 do {
  if ((label|0) == 48) {
   $115 = (($$125) + -1)|0;
   $116 = $115 & $$125;
   $117 = ($116|0)==(0);
   if ($117) {
    $122 = ($$125*23)|0;
    $123 = $122 >>> 5;
    $124 = $123 & 7;
    $125 = (3888 + ($124)|0);
    $126 = HEAP8[$125>>0]|0;
    $127 = $126 << 24 >> 24;
    $$sum1447 = (($c$126) + 1)|0;
    $128 = (3624 + ($$sum1447)|0);
    $129 = HEAP8[$128>>0]|0;
    $130 = $129&255;
    $131 = ($130>>>0)<($$125>>>0);
    if ($131) {
     $134 = $130;$x$148 = 0;
     while(1) {
      $132 = $x$148 << $127;
      $133 = $134 | $132;
      $135 = HEAP32[$3>>2]|0;
      $136 = HEAP32[$4>>2]|0;
      $137 = ($135>>>0)<($136>>>0);
      if ($137) {
       $138 = (($135) + 1|0);
       HEAP32[$3>>2] = $138;
       $139 = HEAP8[$135>>0]|0;
       $140 = $139&255;
       $c$4$be = $140;
      } else {
       $141 = (___shgetc($f)|0);
       $c$4$be = $141;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $142 = (3624 + ($$sum14)|0);
      $143 = HEAP8[$142>>0]|0;
      $144 = $143&255;
      $145 = ($144>>>0)<($$125>>>0);
      $146 = ($133>>>0)<(134217728);
      $$22 = $146 & $145;
      if ($$22) {
       $134 = $144;$x$148 = $133;
      } else {
       $$lcssa117 = $133;$$lcssa118 = $143;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $150 = $$lcssa118;$152 = 0;$154 = $$lcssa117;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $150 = $129;$152 = 0;$154 = 0;$c$4$lcssa = $c$126;
    }
    $147 = (_bitshift64Lshr(-1,-1,($127|0))|0);
    $148 = tempRet0;
    $149 = $150&255;
    $151 = ($149>>>0)>=($$125>>>0);
    $153 = ($152>>>0)>($148>>>0);
    $155 = ($154>>>0)>($147>>>0);
    $156 = ($152|0)==($148|0);
    $157 = $156 & $155;
    $158 = $153 | $157;
    $or$cond42 = $151 | $158;
    if ($or$cond42) {
     $$124 = $$125;$285 = $154;$286 = $152;$c$8 = $c$4$lcssa;
     label = 79;
     break;
    }
    $159 = $154;$160 = $152;$164 = $150;
    while(1) {
     $161 = (_bitshift64Shl(($159|0),($160|0),($127|0))|0);
     $162 = tempRet0;
     $163 = $164&255;
     $165 = $163 | $161;
     $166 = HEAP32[$3>>2]|0;
     $167 = HEAP32[$4>>2]|0;
     $168 = ($166>>>0)<($167>>>0);
     if ($168) {
      $169 = (($166) + 1|0);
      HEAP32[$3>>2] = $169;
      $170 = HEAP8[$166>>0]|0;
      $171 = $170&255;
      $c$5$be = $171;
     } else {
      $172 = (___shgetc($f)|0);
      $c$5$be = $172;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $173 = (3624 + ($$sum15)|0);
     $174 = HEAP8[$173>>0]|0;
     $175 = $174&255;
     $176 = ($175>>>0)>=($$125>>>0);
     $177 = ($162>>>0)>($148>>>0);
     $178 = ($165>>>0)>($147>>>0);
     $179 = ($162|0)==($148|0);
     $180 = $179 & $178;
     $181 = $177 | $180;
     $or$cond = $176 | $181;
     if ($or$cond) {
      $289 = $165;$290 = $162;$c$5$be$lcssa = $c$5$be;
      break;
     } else {
      $159 = $165;$160 = $162;$164 = $174;
     }
    }
    $$124 = $$125;$285 = $289;$286 = $290;$c$8 = $c$5$be$lcssa;
    label = 79;
    break;
   }
   $$sum1867 = (($c$126) + 1)|0;
   $118 = (3624 + ($$sum1867)|0);
   $119 = HEAP8[$118>>0]|0;
   $120 = $119&255;
   $121 = ($120>>>0)<($$125>>>0);
   if ($121) {
    $184 = $120;$x$268 = 0;
    while(1) {
     $182 = Math_imul($x$268, $$125)|0;
     $183 = (($184) + ($182))|0;
     $185 = HEAP32[$3>>2]|0;
     $186 = HEAP32[$4>>2]|0;
     $187 = ($185>>>0)<($186>>>0);
     if ($187) {
      $188 = (($185) + 1|0);
      HEAP32[$3>>2] = $188;
      $189 = HEAP8[$185>>0]|0;
      $190 = $189&255;
      $c$6$be = $190;
     } else {
      $191 = (___shgetc($f)|0);
      $c$6$be = $191;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $192 = (3624 + ($$sum18)|0);
     $193 = HEAP8[$192>>0]|0;
     $194 = $193&255;
     $195 = ($194>>>0)<($$125>>>0);
     $196 = ($183>>>0)<(119304647);
     $$23 = $196 & $195;
     if ($$23) {
      $184 = $194;$x$268 = $183;
     } else {
      $$lcssa119 = $183;$$lcssa120 = $193;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $198 = $$lcssa120;$287 = $$lcssa119;$288 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $198 = $119;$287 = 0;$288 = 0;$c$6$lcssa = $c$126;
   }
   $197 = $198&255;
   $199 = ($197>>>0)<($$125>>>0);
   if ($199) {
    $200 = (___udivdi3(-1,-1,($$125|0),0)|0);
    $201 = tempRet0;
    $202 = $288;$204 = $287;$212 = $198;$c$755 = $c$6$lcssa;
    while(1) {
     $203 = ($202>>>0)>($201>>>0);
     $205 = ($204>>>0)>($200>>>0);
     $206 = ($202|0)==($201|0);
     $207 = $206 & $205;
     $208 = $203 | $207;
     if ($208) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $209 = (___muldi3(($204|0),($202|0),($$125|0),0)|0);
     $210 = tempRet0;
     $211 = $212&255;
     $213 = $211 ^ -1;
     $214 = ($210>>>0)>(4294967295);
     $215 = ($209>>>0)>($213>>>0);
     $216 = ($210|0)==(-1);
     $217 = $216 & $215;
     $218 = $214 | $217;
     if ($218) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $219 = (_i64Add(($211|0),0,($209|0),($210|0))|0);
     $220 = tempRet0;
     $221 = HEAP32[$3>>2]|0;
     $222 = HEAP32[$4>>2]|0;
     $223 = ($221>>>0)<($222>>>0);
     if ($223) {
      $224 = (($221) + 1|0);
      HEAP32[$3>>2] = $224;
      $225 = HEAP8[$221>>0]|0;
      $226 = $225&255;
      $c$7$be = $226;
     } else {
      $227 = (___shgetc($f)|0);
      $c$7$be = $227;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $228 = (3624 + ($$sum19)|0);
     $229 = HEAP8[$228>>0]|0;
     $230 = $229&255;
     $231 = ($230>>>0)<($$125>>>0);
     if ($231) {
      $202 = $220;$204 = $219;$212 = $229;$c$755 = $c$7$be;
     } else {
      $291 = $219;$292 = $220;$c$8$ph = $c$7$be;
      break;
     }
    }
    $$124 = $$125;$285 = $291;$286 = $292;$c$8 = $c$8$ph;
    label = 79;
   } else {
    $$124 = $$125;$285 = $287;$286 = $288;$c$8 = $c$6$lcssa;
    label = 79;
   }
  }
 } while(0);
 if ((label|0) == 79) {
  $$sum16 = (($c$8) + 1)|0;
  $232 = (3624 + ($$sum16)|0);
  $233 = HEAP8[$232>>0]|0;
  $234 = $233&255;
  $235 = ($234>>>0)<($$124>>>0);
  if ($235) {
   while(1) {
    $236 = HEAP32[$3>>2]|0;
    $237 = HEAP32[$4>>2]|0;
    $238 = ($236>>>0)<($237>>>0);
    if ($238) {
     $239 = (($236) + 1|0);
     HEAP32[$3>>2] = $239;
     $240 = HEAP8[$236>>0]|0;
     $241 = $240&255;
     $c$9$be = $241;
    } else {
     $242 = (___shgetc($f)|0);
     $c$9$be = $242;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $243 = (3624 + ($$sum17)|0);
    $244 = HEAP8[$243>>0]|0;
    $245 = $244&255;
    $246 = ($245>>>0)<($$124>>>0);
    if (!($246)) {
     break;
    }
   }
   $247 = (___errno_location()|0);
   HEAP32[$247>>2] = 34;
   $252 = $1;$254 = $0;
  } else {
   $252 = $286;$254 = $285;
  }
 }
 $248 = HEAP32[$4>>2]|0;
 $249 = ($248|0)==(0|0);
 if (!($249)) {
  $250 = HEAP32[$3>>2]|0;
  $251 = (($250) + -1|0);
  HEAP32[$3>>2] = $251;
 }
 $253 = ($252>>>0)<($1>>>0);
 $255 = ($254>>>0)<($0>>>0);
 $256 = ($252|0)==($1|0);
 $257 = $256 & $255;
 $258 = $253 | $257;
 if (!($258)) {
  $259 = $0 & 1;
  $260 = ($259|0)!=(0);
  $261 = (0)!=(0);
  $262 = $260 | $261;
  $263 = ($neg$0|0)!=(0);
  $or$cond12 = $262 | $263;
  if (!($or$cond12)) {
   $264 = (___errno_location()|0);
   HEAP32[$264>>2] = 34;
   $265 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $266 = tempRet0;
   $279 = $266;$280 = $265;
   tempRet0 = $279;
   return ($280|0);
  }
  $267 = ($252>>>0)>($1>>>0);
  $268 = ($254>>>0)>($0>>>0);
  $269 = ($252|0)==($1|0);
  $270 = $269 & $268;
  $271 = $267 | $270;
  if ($271) {
   $272 = (___errno_location()|0);
   HEAP32[$272>>2] = 34;
   $279 = $1;$280 = $0;
   tempRet0 = $279;
   return ($280|0);
  }
 }
 $273 = ($neg$0|0)<(0);
 $274 = $273 << 31 >> 31;
 $275 = $254 ^ $neg$0;
 $276 = $252 ^ $274;
 $277 = (_i64Subtract(($275|0),($276|0),($neg$0|0),($274|0))|0);
 $278 = tempRet0;
 $279 = $278;$280 = $277;
 tempRet0 = $279;
 return ($280|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i27 = 0.0, $$012$i = 0, $$012$i$be = 0, $$012$i$lcssa = 0, $$013$i = 0, $$01335$i = 0, $$01336$i = 0, $$07$i = 0, $$0711$i = 0, $$0712$i = 0, $$1$be$i = 0, $$1$be$i$lcssa = 0, $$1$ph$i = 0, $$14$i = 0, $$2$i = 0, $$21$i = 0, $$3$be$i = 0, $$3$be$i$lcssa = 0;
 var $$3$lcssa$i = 0, $$3131$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa190 = 0, $$lcssa191 = 0, $$lcssa201 = 0, $$lcssa202 = 0, $$lcssa205 = 0, $$lcssa207 = 0, $$lcssa207$lcssa = 0, $$lcssa208 = 0, $$lcssa208$lcssa = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa232 = 0;
 var $$lcssa59$i = 0, $$lnz$0$i = 0, $$neg41$i = 0, $$old$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$promoted$i = 0, $$sink$off0$us$i = 0, $$sink$off0$us102$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0.0;
 var $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0.0, $417 = 0.0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0.0, $446 = 0.0, $447 = 0.0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0, $473 = 0.0, $474 = 0.0, $475 = 0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0.0, $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0.0;
 var $484 = 0.0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0.0, $497 = 0.0, $498 = 0, $499 = 0, $5 = 0, $50 = 0.0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0.0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0;
 var $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0;
 var $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0.0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0.0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0.0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0.0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa186$i = 0, $a$0110$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph47$i = 0, $a$2$ph47$i$lcssa = 0, $a$2$ph47$i$lcssa219 = 0;
 var $a$2$ph47$i$ph = 0, $a$2$ph47$i220 = 0, $a$3$i = 0, $a$3$i$lcssa = 0, $a$3$i$lcssa198 = 0, $a$3$i$lcssa199 = 0, $a$3$i$ph = 0, $a$3$i200 = 0, $a$3$ph$i = 0, $a$487$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i24 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge136 = 0, $c$0 = 0, $c$0$i = 0;
 var $c$0$i$be = 0, $c$0$i$lcssa = 0, $c$0$i$ph = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$186 = 0, $c$2 = 0, $c$2$i = 0, $c$2$i$be = 0, $c$2$i$ph = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0112$i = 0, $carry1$0$us$i = 0, $carry1$0$us98$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0;
 var $carry1$1$us$i$lcssa$lcssa = 0, $carry1$1$us103$i = 0, $carry1$1$us103$i$lcssa = 0, $carry1$1$us103$i$lcssa$lcssa = 0, $carry3$090$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$033$i = 0, $denormal$034$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$ph$i$lcssa = 0, $e2$0$us$i = 0, $e2$0$us93$i = 0, $e2$0$us93$i$lcssa = 0, $e2$1$i = 0, $e2$1$i$lcssa = 0, $e2$1$i$lcssa195 = 0;
 var $e2$1$i$ph = 0, $e2$1$i197 = 0, $e2$1$ph$i = 0, $e2$1$ph$i$ph = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond175$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa = 0, $gotdig$0$i$lcssa193 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa = 0, $gotdig$0$i12$lcssa230 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i$ph = 0;
 var $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3127$i = 0, $gotdig$3127$i$lcssa = 0, $gotdig$4$i = 0, $gotdig$4$i$lcssa = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i$ph = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1128$i = 0, $gotrad$2$i = 0, $gotrad$2$i$lcssa = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0;
 var $i$085 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0130$i = 0, $j$0130$i$lcssa = 0, $j$076$i = 0, $j$077$i = 0, $j$078$i = 0, $j$2$i = 0, $j$2$i$lcssa = 0, $j$3119$i = 0, $k$0$lcssa$i = 0, $k$0129$i = 0, $k$0129$i$lcssa = 0, $k$072$i = 0, $k$073$i = 0, $k$074$i = 0, $k$2$i = 0;
 var $k$2$i$lcssa = 0, $k$3$i = 0, $k$4111$i = 0, $k$5$in$us$i = 0, $k$5$in$us97$i = 0, $k$5$us$i = 0, $k$5$us99$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us105$i = 0, $k$688$i = 0, $lnz$0$lcssa$i = 0, $lnz$0126$i = 0, $lnz$0126$i$lcssa = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$068$i = 0, $lnz$2$i = 0, $lnz$2$i$lcssa = 0, $notlhs = 0, $notrhs = 0;
 var $or$cond = 0, $or$cond$i = 0, $or$cond$i17 = 0, $or$cond11$i = 0, $or$cond11123$i = 0, $or$cond16$i = 0, $or$cond18$i = 0, $or$cond19$i = 0, $or$cond191$i = 0, $or$cond192$i = 0, $or$cond20$us$i = 0, $or$cond20$us104$i = 0, $or$cond22$i = 0, $or$cond23$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond9$i = 0;
 var $or$cond9$i26 = 0, $or$cond9$not = 0, $rp$0$lcssa187$i = 0, $rp$0109$i = 0, $rp$1$i19 = 0, $rp$1$i19$lcssa = 0, $rp$2$ph45$i = 0, $rp$2$ph45$i$lcssa = 0, $rp$2$ph45$i$ph = 0, $rp$3$i$ph = 0, $rp$3$ph43$i = 0, $rp$3$ph43$i$ph = 0, $rp$486$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0;
 var $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$325$i = 0, $x$4$lcssa$i = 0, $x$420$i = 0, $x$5$i = 0, $x$5$i$lcssa = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i23 = 0.0, $y$2$i = 0.0, $y$2$i25 = 0.0;
 var $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$321$i = 0.0, $y$4$i = 0.0, $y$4$i$lcssa = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph46$i = 0, $z$1$ph46$i$lcssa = 0, $z$1$ph46$i$ph = 0, $z$1$us$i = 0, $z$1$us94$i = 0, $z$1$us94$i$lcssa = 0, $z$2$us$i = 0, $z$2$us96$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us$i$lcssa$lcssa = 0, $z$3$us106$i = 0;
 var $z$3$us106$i$lcssa = 0, $z$3$us106$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$5$ph$i$lcssa = 0, $z$5$ph$i$lcssa209 = 0, $z$5$ph$i$ph = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = (($f) + 4|0);
 $1 = (($f) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = (($2) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa232 = $9;
   break;
  }
 }
 $12 = ($$lcssa232|0)==(45);
 do {
  if ((($$lcssa232|0) == 43) | (($$lcssa232|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = (($16) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa232;$sign$0 = 1;
  }
 } while(0);
 $c$186 = $c$0;$i$085 = 0;
 while(1) {
  $23 = $c$186 | 32;
  $24 = (3904 + ($i$085)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$186;$i$0$lcssa = $i$085;
   break;
  }
  $28 = ($i$085>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = (($29) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$186;
   }
  } while(0);
  $36 = (($i$085) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$186 = $c$2;$i$085 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = (($54) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $710 = HEAP32[$0>>2]|0;
      $711 = HEAP32[$1>>2]|0;
      $712 = ($710>>>0)<($711>>>0);
      if ($712) {
       $714 = (($710) + 1|0);
       HEAP32[$0>>2] = $714;
       $715 = HEAP8[$710>>0]|0;
       $716 = $715&255;
       $c$4$1 = $716;
      } else {
       $713 = (___shgetc($f)|0);
       $c$4$1 = $713;
      }
      $717 = $c$4$1 | 32;
      $718 = ($717|0)==(110);
      if (!($718)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = (($63) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if (!($71)) {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = (($74) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $i$4 = 1;
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = (($76) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = (($94) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge136 = $96 | $93;
      if ($brmerge136) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$in = $i$4$lcssa;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = HEAP32[$0>>2]|0;
       $100 = (($99) + -1|0);
       HEAP32[$0>>2] = $100;
       $101 = ($98|0)==(0);
       if ($101) {
        break;
       } else {
        $$in = $98;
       }
      }
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = (($109) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = (($322) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = (($119) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i$ph = $124;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i$ph = $125;
       }
       $c$0$i = $c$0$i$ph;$gotdig$0$i = 0;
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa193 = $gotdig$0$i;
         label = 74;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $c$0$i$lcssa = $c$0$i;$gotdig$0$i$lcssa = $gotdig$0$i;
         label = 84;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = (($126) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i$be = $131;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i$be = $132;
        }
        $c$0$i = $c$0$i$be;$gotdig$0$i = 1;
       }
       if ((label|0) == 74) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = (($133) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = (($141) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $$lcssa191 = $152;$721 = $150;$722 = $151;
           break;
          }
         }
         $719 = $721;$720 = $722;$c$2$i$ph = $$lcssa191;$gotdig$2$i$ph = 1;$gotrad$0$i$ph = 1;
        } else {
         $719 = 0;$720 = 0;$c$2$i$ph = $c$1$ph$i;$gotdig$2$i$ph = $gotdig$0$i$lcssa193;$gotrad$0$i$ph = 1;
        }
       }
       else if ((label|0) == 84) {
        $719 = 0;$720 = 0;$c$2$i$ph = $c$0$i$lcssa;$gotdig$2$i$ph = $gotdig$0$i$lcssa;$gotrad$0$i$ph = 0;
       }
       $163 = 0;$165 = 0;$723 = $719;$724 = $720;$c$2$i = $c$2$i$ph;$gotdig$2$i = $gotdig$2$i$ph;$gotrad$0$i = $gotrad$0$i$ph;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
       L124: while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        do {
         if ($155) {
          $d$0$i = $154;
          label = 91;
         } else {
          $156 = $c$2$i | 32;
          $157 = (($156) + -97)|0;
          $158 = ($157>>>0)<(6);
          $159 = ($c$2$i|0)==(46);
          $or$cond6$i = $159 | $158;
          if (!($or$cond6$i)) {
           $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break L124;
          }
          if ($159) {
           $160 = ($gotrad$0$i|0)==(0);
           if ($160) {
            $725 = $165;$726 = $163;$727 = $165;$728 = $163;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
            break;
           } else {
            $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break L124;
           }
          } else {
           $161 = ($c$2$i|0)>(57);
           $162 = (($156) + -87)|0;
           $$$i = $161 ? $162 : $154;
           $d$0$i = $$$i;
           label = 91;
           break;
          }
         }
        } while(0);
        if ((label|0) == 91) {
         label = 0;
         $164 = ($163|0)<(0);
         $166 = ($165>>>0)<(8);
         $167 = ($163|0)==(0);
         $168 = $167 & $166;
         $169 = $164 | $168;
         do {
          if ($169) {
           $170 = $x$0$i << 4;
           $171 = (($d$0$i) + ($170))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $171;$y$1$i = $y$0$i;
          } else {
           $172 = ($163|0)<(0);
           $173 = ($165>>>0)<(14);
           $174 = ($163|0)==(0);
           $175 = $174 & $173;
           $176 = $172 | $175;
           if ($176) {
            $177 = (+($d$0$i|0));
            $178 = $scale$0$i * 0.0625;
            $179 = $178 * $177;
            $180 = $y$0$i + $179;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $178;$x$1$i = $x$0$i;$y$1$i = $180;
            break;
           }
           $181 = ($d$0$i|0)==(0);
           $182 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $182 | $181;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $183 = $scale$0$i * 0.5;
            $184 = $y$0$i + $183;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $184;
           }
          }
         } while(0);
         $185 = (_i64Add(($165|0),($163|0),1,0)|0);
         $186 = tempRet0;
         $725 = $723;$726 = $724;$727 = $185;$728 = $186;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $187 = HEAP32[$0>>2]|0;
        $188 = HEAP32[$1>>2]|0;
        $189 = ($187>>>0)<($188>>>0);
        if ($189) {
         $190 = (($187) + 1|0);
         HEAP32[$0>>2] = $190;
         $191 = HEAP8[$187>>0]|0;
         $192 = $191&255;
         $c$2$i$be = $192;
        } else {
         $193 = (___shgetc($f)|0);
         $c$2$i$be = $193;
        }
        $163 = $728;$165 = $727;$723 = $725;$724 = $726;$c$2$i = $c$2$i$be;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
       }
       $194 = ($gotdig$2$i$lcssa|0)==(0);
       if ($194) {
        $195 = HEAP32[$1>>2]|0;
        $196 = ($195|0)==(0|0);
        if (!($196)) {
         $197 = HEAP32[$0>>2]|0;
         $198 = (($197) + -1|0);
         HEAP32[$0>>2] = $198;
        }
        $199 = ($pok|0)==(0);
        if ($199) {
         ___shlim($f,0);
        } else {
         if (!($196)) {
          $200 = HEAP32[$0>>2]|0;
          $201 = (($200) + -1|0);
          HEAP32[$0>>2] = $201;
          $202 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($202)) {
           $203 = (($200) + -2|0);
           HEAP32[$0>>2] = $203;
          }
         }
        }
        $204 = (+($sign$0|0));
        $205 = $204 * 0.0;
        $$0 = $205;
        STACKTOP = sp;return (+$$0);
       }
       $206 = ($gotrad$0$i$lcssa|0)==(0);
       $209 = $206 ? $208 : $207;
       $212 = $206 ? $211 : $210;
       $213 = ($211|0)<(0);
       $214 = ($208>>>0)<(8);
       $215 = ($211|0)==(0);
       $216 = $215 & $214;
       $217 = $213 | $216;
       if ($217) {
        $219 = $208;$220 = $211;$x$325$i = $x$0$i$lcssa;
        while(1) {
         $218 = $x$325$i << 4;
         $221 = (_i64Add(($219|0),($220|0),1,0)|0);
         $222 = tempRet0;
         $223 = ($222|0)<(0);
         $224 = ($221>>>0)<(8);
         $225 = ($222|0)==(0);
         $226 = $225 & $224;
         $227 = $223 | $226;
         if ($227) {
          $219 = $221;$220 = $222;$x$325$i = $218;
         } else {
          $$lcssa190 = $218;
          break;
         }
        }
        $x$3$lcssa$i = $$lcssa190;
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $228 = $c$2$lcssa$i | 32;
       $229 = ($228|0)==(112);
       do {
        if ($229) {
         $230 = (_scanexp($f,$pok)|0);
         $231 = tempRet0;
         $232 = ($230|0)==(0);
         $233 = ($231|0)==(-2147483648);
         $234 = $232 & $233;
         if ($234) {
          $235 = ($pok|0)==(0);
          if ($235) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $236 = HEAP32[$1>>2]|0;
           $237 = ($236|0)==(0|0);
           if ($237) {
            $248 = 0;$249 = 0;
            break;
           }
           $238 = HEAP32[$0>>2]|0;
           $239 = (($238) + -1|0);
           HEAP32[$0>>2] = $239;
           $248 = 0;$249 = 0;
           break;
          }
         } else {
          $248 = $230;$249 = $231;
         }
        } else {
         $240 = HEAP32[$1>>2]|0;
         $241 = ($240|0)==(0|0);
         if ($241) {
          $248 = 0;$249 = 0;
         } else {
          $242 = HEAP32[$0>>2]|0;
          $243 = (($242) + -1|0);
          HEAP32[$0>>2] = $243;
          $248 = 0;$249 = 0;
         }
        }
       } while(0);
       $244 = (_bitshift64Shl(($209|0),($212|0),2)|0);
       $245 = tempRet0;
       $246 = (_i64Add(($244|0),($245|0),-32,-1)|0);
       $247 = tempRet0;
       $250 = (_i64Add(($246|0),($247|0),($248|0),($249|0))|0);
       $251 = tempRet0;
       $252 = ($x$3$lcssa$i|0)==(0);
       if ($252) {
        $253 = (+($sign$0|0));
        $254 = $253 * 0.0;
        $$0 = $254;
        STACKTOP = sp;return (+$$0);
       }
       $255 = (0 - ($emin$0$ph))|0;
       $256 = ($251|0)>(0);
       $257 = ($250>>>0)>($255>>>0);
       $258 = ($251|0)==(0);
       $259 = $258 & $257;
       $260 = $256 | $259;
       if ($260) {
        $261 = (___errno_location()|0);
        HEAP32[$261>>2] = 34;
        $262 = (+($sign$0|0));
        $263 = $262 * 1.7976931348623157E+308;
        $264 = $263 * 1.7976931348623157E+308;
        $$0 = $264;
        STACKTOP = sp;return (+$$0);
       }
       $265 = (($emin$0$ph) + -106)|0;
       $266 = ($265|0)<(0);
       $267 = $266 << 31 >> 31;
       $268 = ($251|0)<($267|0);
       $269 = ($250>>>0)<($265>>>0);
       $270 = ($251|0)==($267|0);
       $271 = $270 & $269;
       $272 = $268 | $271;
       if ($272) {
        $274 = (___errno_location()|0);
        HEAP32[$274>>2] = 34;
        $275 = (+($sign$0|0));
        $276 = $275 * 2.2250738585072014E-308;
        $277 = $276 * 2.2250738585072014E-308;
        $$0 = $277;
        STACKTOP = sp;return (+$$0);
       }
       $273 = ($x$3$lcssa$i|0)>(-1);
       if ($273) {
        $282 = $250;$283 = $251;$x$420$i = $x$3$lcssa$i;$y$321$i = $y$0$i$lcssa;
        while(1) {
         $278 = !($y$321$i >= 0.5);
         $279 = $x$420$i << 1;
         if ($278) {
          $$pn$i = $y$321$i;$x$5$i = $279;
         } else {
          $280 = $279 | 1;
          $281 = $y$321$i + -1.0;
          $$pn$i = $281;$x$5$i = $280;
         }
         $y$4$i = $y$321$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($x$5$i|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$420$i = $x$5$i;$y$321$i = $y$4$i;
         } else {
          $729 = $284;$730 = $285;$x$5$i$lcssa = $x$5$i;$y$4$i$lcssa = $y$4$i;
          break;
         }
        }
        $291 = $729;$292 = $730;$x$4$lcssa$i = $x$5$i$lcssa;$y$3$lcssa$i = $y$4$i$lcssa;
       } else {
        $291 = $250;$292 = $251;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0711$i = 0;
         label = 139;
        } else {
         $$07$i = $293;
         label = 137;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 137;
       }
       do {
        if ((label|0) == 137) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0711$i = $$07$i;
          label = 139;
          break;
         }
         $$pre$i = (+($sign$0|0));
         $$0712$i = $$07$i;$$pre$phi$iZ2D = $$pre$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 139) {
        $302 = (84 - ($$0711$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0712$i = $$0711$i;$$pre$phi$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0712$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$012$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$012$i|0) == 46)) {
       $gotdig$0$i12$lcssa230 = $gotdig$0$i12;
       label = 151;
       break;
      } else if (!((($$012$i|0) == 48))) {
       $$012$i$lcssa = $$012$i;$gotdig$0$i12$lcssa = $gotdig$0$i12;
       label = 161;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = (($325) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$012$i$be = $330;
      } else {
       $331 = (___shgetc($f)|0);
       $$012$i$be = $331;
      }
      $$012$i = $$012$i$be;$gotdig$0$i12 = 1;
     }
     if ((label|0) == 151) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = (($332) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = (($344) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$1$be$i$lcssa = $$1$be$i;$733 = $342;$734 = $343;
         break;
        }
       }
       $$2$i = $$1$be$i$lcssa;$731 = $733;$732 = $734;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
      } else {
       $$2$i = $$1$ph$i;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa230;$gotrad$0$i14 = 1;
      }
     }
     else if ((label|0) == 161) {
      $$2$i = $$012$i$lcssa;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa;$gotrad$0$i14 = 0;
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $or$cond11123$i = $354 | $353;
     do {
      if ($or$cond11123$i) {
       $355 = (($x$i) + 496|0);
       $$3131$i = $$2$i;$358 = 0;$359 = 0;$735 = $354;$736 = $352;$737 = $731;$738 = $732;$gotdig$3127$i = $gotdig$2$i13;$gotrad$1128$i = $gotrad$0$i14;$j$0130$i = 0;$k$0129$i = 0;$lnz$0126$i = 0;
       L237: while(1) {
        do {
         if ($735) {
          $cond$i = ($gotrad$1128$i|0)==(0);
          if ($cond$i) {
           $739 = $358;$740 = $359;$741 = $358;$742 = $359;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = 1;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
          } else {
           $743 = $737;$744 = $738;$745 = $358;$746 = $359;$gotdig$3127$i$lcssa = $gotdig$3127$i;$j$0130$i$lcssa = $j$0130$i;$k$0129$i$lcssa = $k$0129$i;$lnz$0126$i$lcssa = $lnz$0126$i;
           label = 166;
           break L237;
          }
         } else {
          $357 = ($k$0129$i|0)<(125);
          $360 = (_i64Add(($358|0),($359|0),1,0)|0);
          $361 = tempRet0;
          $362 = ($$3131$i|0)!=(48);
          if (!($357)) {
           if (!($362)) {
            $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
            break;
           }
           $372 = HEAP32[$355>>2]|0;
           $373 = $372 | 1;
           HEAP32[$355>>2] = $373;
           $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
           break;
          }
          $$lnz$0$i = $362 ? $360 : $lnz$0126$i;
          $363 = ($j$0130$i|0)==(0);
          $364 = (($x$i) + ($k$0129$i<<2)|0);
          if ($363) {
           $storemerge$i = $736;
          } else {
           $365 = HEAP32[$364>>2]|0;
           $366 = ($365*10)|0;
           $367 = (($$3131$i) + -48)|0;
           $368 = (($367) + ($366))|0;
           $storemerge$i = $368;
          }
          HEAP32[$364>>2] = $storemerge$i;
          $369 = (($j$0130$i) + 1)|0;
          $370 = ($369|0)==(9);
          $371 = $370&1;
          $$k$0$i = (($371) + ($k$0129$i))|0;
          $$14$i = $370 ? 0 : $369;
          $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $$14$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $374 = HEAP32[$0>>2]|0;
        $375 = HEAP32[$1>>2]|0;
        $376 = ($374>>>0)<($375>>>0);
        if ($376) {
         $377 = (($374) + 1|0);
         HEAP32[$0>>2] = $377;
         $378 = HEAP8[$374>>0]|0;
         $379 = $378&255;
         $$3$be$i = $379;
        } else {
         $380 = (___shgetc($f)|0);
         $$3$be$i = $380;
        }
        $381 = (($$3$be$i) + -48)|0;
        $382 = ($381>>>0)<(10);
        $383 = ($$3$be$i|0)==(46);
        $or$cond11$i = $383 | $382;
        if ($or$cond11$i) {
         $$3131$i = $$3$be$i;$358 = $741;$359 = $742;$735 = $383;$736 = $381;$737 = $739;$738 = $740;$gotdig$3127$i = $gotdig$4$i;$gotrad$1128$i = $gotrad$2$i;$j$0130$i = $j$2$i;$k$0129$i = $k$2$i;$lnz$0126$i = $lnz$2$i;
        } else {
         $$3$be$i$lcssa = $$3$be$i;$752 = $741;$753 = $742;$754 = $739;$755 = $740;$gotdig$4$i$lcssa = $gotdig$4$i;$gotrad$2$i$lcssa = $gotrad$2$i;$j$2$i$lcssa = $j$2$i;$k$2$i$lcssa = $k$2$i;$lnz$2$i$lcssa = $lnz$2$i;
         label = 177;
         break;
        }
       }
       if ((label|0) == 166) {
        $356 = ($gotdig$3127$i$lcssa|0)!=(0);
        $747 = $745;$748 = $746;$749 = $743;$750 = $744;$751 = $356;$j$078$i = $j$0130$i$lcssa;$k$074$i = $k$0129$i$lcssa;$lnz$068$i = $lnz$0126$i$lcssa;
        label = 186;
        break;
       }
       else if ((label|0) == 177) {
        $$3$lcssa$i = $$3$be$i$lcssa;$385 = $754;$386 = $752;$388 = $755;$389 = $753;$gotdig$3$lcssa$i = $gotdig$4$i$lcssa;$gotrad$1$lcssa$i = $gotrad$2$i$lcssa;$j$0$lcssa$i = $j$2$i$lcssa;$k$0$lcssa$i = $k$2$i$lcssa;$lnz$0$lcssa$i = $lnz$2$i$lcssa;
        label = 178;
        break;
       }
      } else {
       $$3$lcssa$i = $$2$i;$385 = $731;$386 = 0;$388 = $732;$389 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 178;
      }
     } while(0);
     do {
      if ((label|0) == 178) {
       $384 = ($gotrad$1$lcssa$i|0)==(0);
       $387 = $384 ? $386 : $385;
       $390 = $384 ? $389 : $388;
       $391 = ($gotdig$3$lcssa$i|0)!=(0);
       $392 = $$3$lcssa$i | 32;
       $393 = ($392|0)==(101);
       $or$cond16$i = $393 & $391;
       if (!($or$cond16$i)) {
        $408 = ($$3$lcssa$i|0)>(-1);
        if ($408) {
         $747 = $386;$748 = $389;$749 = $387;$750 = $390;$751 = $391;$j$078$i = $j$0$lcssa$i;$k$074$i = $k$0$lcssa$i;$lnz$068$i = $lnz$0$lcssa$i;
         label = 186;
         break;
        } else {
         $756 = $386;$757 = $389;$758 = $391;$759 = $387;$760 = $390;$j$077$i = $j$0$lcssa$i;$k$073$i = $k$0$lcssa$i;$lnz$067$i = $lnz$0$lcssa$i;
         label = 188;
         break;
        }
       }
       $394 = (_scanexp($f,$pok)|0);
       $395 = tempRet0;
       $396 = ($394|0)==(0);
       $397 = ($395|0)==(-2147483648);
       $398 = $396 & $397;
       if ($398) {
        $399 = ($pok|0)==(0);
        if ($399) {
         ___shlim($f,0);
         $$0$i27 = 0.0;
         break;
        }
        $400 = HEAP32[$1>>2]|0;
        $401 = ($400|0)==(0|0);
        if ($401) {
         $404 = 0;$405 = 0;
        } else {
         $402 = HEAP32[$0>>2]|0;
         $403 = (($402) + -1|0);
         HEAP32[$0>>2] = $403;
         $404 = 0;$405 = 0;
        }
       } else {
        $404 = $394;$405 = $395;
       }
       $406 = (_i64Add(($404|0),($405|0),($387|0),($390|0))|0);
       $407 = tempRet0;
       $418 = $406;$420 = $386;$421 = $407;$423 = $389;$j$076$i = $j$0$lcssa$i;$k$072$i = $k$0$lcssa$i;$lnz$066$i = $lnz$0$lcssa$i;
       label = 190;
      }
     } while(0);
     if ((label|0) == 186) {
      $409 = HEAP32[$1>>2]|0;
      $410 = ($409|0)==(0|0);
      if ($410) {
       $756 = $747;$757 = $748;$758 = $751;$759 = $749;$760 = $750;$j$077$i = $j$078$i;$k$073$i = $k$074$i;$lnz$067$i = $lnz$068$i;
       label = 188;
      } else {
       $411 = HEAP32[$0>>2]|0;
       $412 = (($411) + -1|0);
       HEAP32[$0>>2] = $412;
       if ($751) {
        $418 = $749;$420 = $747;$421 = $750;$423 = $748;$j$076$i = $j$078$i;$k$072$i = $k$074$i;$lnz$066$i = $lnz$068$i;
        label = 190;
       } else {
        label = 189;
       }
      }
     }
     if ((label|0) == 188) {
      if ($758) {
       $418 = $759;$420 = $756;$421 = $760;$423 = $757;$j$076$i = $j$077$i;$k$072$i = $k$073$i;$lnz$066$i = $lnz$067$i;
       label = 190;
      } else {
       label = 189;
      }
     }
     do {
      if ((label|0) == 189) {
       $413 = (___errno_location()|0);
       HEAP32[$413>>2] = 22;
       ___shlim($f,0);
       $$0$i27 = 0.0;
      }
      else if ((label|0) == 190) {
       $414 = HEAP32[$x$i>>2]|0;
       $415 = ($414|0)==(0);
       if ($415) {
        $416 = (+($sign$0|0));
        $417 = $416 * 0.0;
        $$0$i27 = $417;
        break;
       }
       $419 = ($418|0)==($420|0);
       $422 = ($421|0)==($423|0);
       $424 = $419 & $422;
       $425 = ($423|0)<(0);
       $426 = ($420>>>0)<(10);
       $427 = ($423|0)==(0);
       $428 = $427 & $426;
       $429 = $425 | $428;
       $or$cond$i17 = $429 & $424;
       if ($or$cond$i17) {
        $430 = ($bits$0$ph>>>0)>(30);
        $431 = $414 >>> $bits$0$ph;
        $432 = ($431|0)==(0);
        $or$cond18$i = $430 | $432;
        if ($or$cond18$i) {
         $433 = (+($sign$0|0));
         $434 = (+($414>>>0));
         $435 = $433 * $434;
         $$0$i27 = $435;
         break;
        }
       }
       $436 = (($emin$0$ph|0) / -2)&-1;
       $437 = ($436|0)<(0);
       $438 = $437 << 31 >> 31;
       $439 = ($421|0)>($438|0);
       $440 = ($418>>>0)>($436>>>0);
       $441 = ($421|0)==($438|0);
       $442 = $441 & $440;
       $443 = $439 | $442;
       if ($443) {
        $444 = (___errno_location()|0);
        HEAP32[$444>>2] = 34;
        $445 = (+($sign$0|0));
        $446 = $445 * 1.7976931348623157E+308;
        $447 = $446 * 1.7976931348623157E+308;
        $$0$i27 = $447;
        break;
       }
       $448 = (($emin$0$ph) + -106)|0;
       $449 = ($448|0)<(0);
       $450 = $449 << 31 >> 31;
       $451 = ($421|0)<($450|0);
       $452 = ($418>>>0)<($448>>>0);
       $453 = ($421|0)==($450|0);
       $454 = $453 & $452;
       $455 = $451 | $454;
       if ($455) {
        $456 = (___errno_location()|0);
        HEAP32[$456>>2] = 34;
        $457 = (+($sign$0|0));
        $458 = $457 * 2.2250738585072014E-308;
        $459 = $458 * 2.2250738585072014E-308;
        $$0$i27 = $459;
        break;
       }
       $460 = ($j$076$i|0)==(0);
       if ($460) {
        $k$3$i = $k$072$i;
       } else {
        $461 = ($j$076$i|0)<(9);
        if ($461) {
         $462 = (($x$i) + ($k$072$i<<2)|0);
         $$promoted$i = HEAP32[$462>>2]|0;
         $464 = $$promoted$i;$j$3119$i = $j$076$i;
         while(1) {
          $463 = ($464*10)|0;
          $465 = (($j$3119$i) + 1)|0;
          $exitcond175$i = ($j$3119$i|0)==(8);
          if ($exitcond175$i) {
           $$lcssa222 = $463;
           break;
          } else {
           $464 = $463;$j$3119$i = $465;
          }
         }
         HEAP32[$462>>2] = $$lcssa222;
        }
        $466 = (($k$072$i) + 1)|0;
        $k$3$i = $466;
       }
       $467 = ($lnz$066$i|0)<(9);
       if ($467) {
        $468 = ($lnz$066$i|0)<=($418|0);
        $469 = ($418|0)<(18);
        $or$cond3$i = $468 & $469;
        if ($or$cond3$i) {
         $470 = ($418|0)==(9);
         if ($470) {
          $471 = (+($sign$0|0));
          $472 = HEAP32[$x$i>>2]|0;
          $473 = (+($472>>>0));
          $474 = $471 * $473;
          $$0$i27 = $474;
          break;
         }
         $475 = ($418|0)<(9);
         if ($475) {
          $476 = (+($sign$0|0));
          $477 = HEAP32[$x$i>>2]|0;
          $478 = (+($477>>>0));
          $479 = $476 * $478;
          $480 = (8 - ($418))|0;
          $481 = (3920 + ($480<<2)|0);
          $482 = HEAP32[$481>>2]|0;
          $483 = (+($482|0));
          $484 = $479 / $483;
          $$0$i27 = $484;
          break;
         }
         $$neg41$i = (($bits$0$ph) + 27)|0;
         $485 = Math_imul($418, -3)|0;
         $486 = (($$neg41$i) + ($485))|0;
         $487 = ($486|0)>(30);
         $$pre$i18 = HEAP32[$x$i>>2]|0;
         $488 = $$pre$i18 >>> $486;
         $489 = ($488|0)==(0);
         $or$cond191$i = $487 | $489;
         if ($or$cond191$i) {
          $490 = (+($sign$0|0));
          $491 = (+($$pre$i18>>>0));
          $492 = $490 * $491;
          $493 = (($418) + -10)|0;
          $494 = (3920 + ($493<<2)|0);
          $495 = HEAP32[$494>>2]|0;
          $496 = (+($495|0));
          $497 = $492 * $496;
          $$0$i27 = $497;
          break;
         }
        }
       }
       $498 = (($418|0) % 9)&-1;
       $499 = ($498|0)==(0);
       if ($499) {
        $a$2$ph47$i$ph = 0;$rp$2$ph45$i$ph = $418;$z$1$ph46$i$ph = $k$3$i;
       } else {
        $500 = ($418|0)>(-1);
        $501 = (($498) + 9)|0;
        $502 = $500 ? $498 : $501;
        $503 = (8 - ($502))|0;
        $504 = (3920 + ($503<<2)|0);
        $505 = HEAP32[$504>>2]|0;
        $506 = ($k$3$i|0)==(0);
        if ($506) {
         $a$0$lcssa186$i = 0;$rp$0$lcssa187$i = $418;$z$0$i = 0;
        } else {
         $507 = (1000000000 / ($505|0))&-1;
         $a$0110$i = 0;$carry$0112$i = 0;$k$4111$i = 0;$rp$0109$i = $418;
         while(1) {
          $508 = (($x$i) + ($k$4111$i<<2)|0);
          $509 = HEAP32[$508>>2]|0;
          $510 = (($509>>>0) % ($505>>>0))&-1;
          $511 = (($509>>>0) / ($505>>>0))&-1;
          $512 = (($511) + ($carry$0112$i))|0;
          HEAP32[$508>>2] = $512;
          $513 = Math_imul($510, $507)|0;
          $514 = ($k$4111$i|0)==($a$0110$i|0);
          $515 = ($512|0)==(0);
          $or$cond19$i = $514 & $515;
          $516 = (($k$4111$i) + 1)|0;
          if ($or$cond19$i) {
           $517 = $516 & 127;
           $518 = (($rp$0109$i) + -9)|0;
           $a$1$i = $517;$rp$1$i19 = $518;
          } else {
           $a$1$i = $a$0110$i;$rp$1$i19 = $rp$0109$i;
          }
          $519 = ($516|0)==($k$3$i|0);
          if ($519) {
           $$lcssa221 = $513;$a$1$i$lcssa = $a$1$i;$rp$1$i19$lcssa = $rp$1$i19;
           break;
          } else {
           $a$0110$i = $a$1$i;$carry$0112$i = $513;$k$4111$i = $516;$rp$0109$i = $rp$1$i19;
          }
         }
         $520 = ($$lcssa221|0)==(0);
         if ($520) {
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $k$3$i;
         } else {
          $521 = (($k$3$i) + 1)|0;
          $522 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$522>>2] = $$lcssa221;
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $521;
         }
        }
        $523 = (9 - ($502))|0;
        $524 = (($523) + ($rp$0$lcssa187$i))|0;
        $a$2$ph47$i$ph = $a$0$lcssa186$i;$rp$2$ph45$i$ph = $524;$z$1$ph46$i$ph = $z$0$i;
       }
       $a$2$ph47$i = $a$2$ph47$i$ph;$e2$0$ph$i = 0;$rp$2$ph45$i = $rp$2$ph45$i$ph;$z$1$ph46$i = $z$1$ph46$i$ph;
       L323: while(1) {
        $525 = ($rp$2$ph45$i|0)<(18);
        $526 = (($x$i) + ($a$2$ph47$i<<2)|0);
        if ($525) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph46$i;
         while(1) {
          $528 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $528;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $529 = (($x$i) + ($k$5$us$i<<2)|0);
           $530 = HEAP32[$529>>2]|0;
           $531 = (_bitshift64Shl(($530|0),0,29)|0);
           $532 = tempRet0;
           $533 = (_i64Add(($531|0),($532|0),($carry1$0$us$i|0),0)|0);
           $534 = tempRet0;
           $535 = ($534>>>0)>(0);
           $536 = ($533>>>0)>(1000000000);
           $537 = ($534|0)==(0);
           $538 = $537 & $536;
           $539 = $535 | $538;
           if ($539) {
            $540 = (___udivdi3(($533|0),($534|0),1000000000,0)|0);
            $541 = tempRet0;
            $542 = (___uremdi3(($533|0),($534|0),1000000000,0)|0);
            $543 = tempRet0;
            $$sink$off0$us$i = $542;$carry1$1$us$i = $540;
           } else {
            $$sink$off0$us$i = $533;$carry1$1$us$i = 0;
           }
           HEAP32[$529>>2] = $$sink$off0$us$i;
           $544 = (($z$2$us$i) + 127)|0;
           $545 = $544 & 127;
           $546 = ($k$5$us$i|0)!=($545|0);
           $547 = ($k$5$us$i|0)==($a$2$ph47$i|0);
           $or$cond20$us$i = $546 | $547;
           if ($or$cond20$us$i) {
            $z$3$us$i = $z$2$us$i;
           } else {
            $548 = ($$sink$off0$us$i|0)==(0);
            $k$5$z$2$us$i = $548 ? $k$5$us$i : $z$2$us$i;
            $z$3$us$i = $k$5$z$2$us$i;
           }
           $549 = (($k$5$us$i) + -1)|0;
           if ($547) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $549;$z$2$us$i = $z$3$us$i;
           }
          }
          $550 = (($e2$0$us$i) + -29)|0;
          $551 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($551) {
           $e2$0$us$i = $550;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa215 = $550;$carry1$1$us$i$lcssa$lcssa = $carry1$1$us$i$lcssa;$z$3$us$i$lcssa$lcssa = $z$3$us$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa215;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa$lcssa;
        } else {
         $527 = ($rp$2$ph45$i|0)==(18);
         if (!($527)) {
          $a$2$ph47$i$lcssa = $a$2$ph47$i;$e2$0$ph$i$lcssa = $e2$0$ph$i;$rp$2$ph45$i$lcssa = $rp$2$ph45$i;$z$1$ph46$i$lcssa = $z$1$ph46$i;
          label = 236;
          break;
         }
         $e2$0$us93$i = $e2$0$ph$i;$z$1$us94$i = $z$1$ph46$i;
         while(1) {
          $552 = HEAP32[$526>>2]|0;
          $553 = ($552>>>0)<(9007199);
          if (!($553)) {
           $a$2$ph47$i$lcssa219 = $a$2$ph47$i;$e2$0$us93$i$lcssa = $e2$0$us93$i;$z$1$us94$i$lcssa = $z$1$us94$i;
           label = 235;
           break L323;
          }
          $554 = (($z$1$us94$i) + 127)|0;
          $carry1$0$us98$i = 0;$k$5$in$us97$i = $554;$z$2$us96$i = $z$1$us94$i;
          while(1) {
           $k$5$us99$i = $k$5$in$us97$i & 127;
           $555 = (($x$i) + ($k$5$us99$i<<2)|0);
           $556 = HEAP32[$555>>2]|0;
           $557 = (_bitshift64Shl(($556|0),0,29)|0);
           $558 = tempRet0;
           $559 = (_i64Add(($557|0),($558|0),($carry1$0$us98$i|0),0)|0);
           $560 = tempRet0;
           $561 = ($560>>>0)>(0);
           $562 = ($559>>>0)>(1000000000);
           $563 = ($560|0)==(0);
           $564 = $563 & $562;
           $565 = $561 | $564;
           if ($565) {
            $566 = (___udivdi3(($559|0),($560|0),1000000000,0)|0);
            $567 = tempRet0;
            $568 = (___uremdi3(($559|0),($560|0),1000000000,0)|0);
            $569 = tempRet0;
            $$sink$off0$us102$i = $568;$carry1$1$us103$i = $566;
           } else {
            $$sink$off0$us102$i = $559;$carry1$1$us103$i = 0;
           }
           HEAP32[$555>>2] = $$sink$off0$us102$i;
           $570 = (($z$2$us96$i) + 127)|0;
           $571 = $570 & 127;
           $572 = ($k$5$us99$i|0)!=($571|0);
           $573 = ($k$5$us99$i|0)==($a$2$ph47$i|0);
           $or$cond20$us104$i = $572 | $573;
           if ($or$cond20$us104$i) {
            $z$3$us106$i = $z$2$us96$i;
           } else {
            $574 = ($$sink$off0$us102$i|0)==(0);
            $k$5$z$2$us105$i = $574 ? $k$5$us99$i : $z$2$us96$i;
            $z$3$us106$i = $k$5$z$2$us105$i;
           }
           $575 = (($k$5$us99$i) + -1)|0;
           if ($573) {
            $carry1$1$us103$i$lcssa = $carry1$1$us103$i;$z$3$us106$i$lcssa = $z$3$us106$i;
            break;
           } else {
            $carry1$0$us98$i = $carry1$1$us103$i;$k$5$in$us97$i = $575;$z$2$us96$i = $z$3$us106$i;
           }
          }
          $576 = (($e2$0$us93$i) + -29)|0;
          $577 = ($carry1$1$us103$i$lcssa|0)==(0);
          if ($577) {
           $e2$0$us93$i = $576;$z$1$us94$i = $z$3$us106$i$lcssa;
          } else {
           $$lcssa214 = $576;$carry1$1$us103$i$lcssa$lcssa = $carry1$1$us103$i$lcssa;$z$3$us106$i$lcssa$lcssa = $z$3$us106$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa214;$carry1$1$lcssa$lcssa$i = $carry1$1$us103$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us106$i$lcssa$lcssa;
        }
        $578 = (($rp$2$ph45$i) + 9)|0;
        $579 = (($a$2$ph47$i) + 127)|0;
        $580 = $579 & 127;
        $581 = ($580|0)==($z$3$lcssa$lcssa$i|0);
        if ($581) {
         $582 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $583 = $582 & 127;
         $584 = (($x$i) + ($583<<2)|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $587 = $586 & 127;
         $588 = (($x$i) + ($587<<2)|0);
         $589 = HEAP32[$588>>2]|0;
         $590 = $589 | $585;
         HEAP32[$588>>2] = $590;
         $z$4$i = $583;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $591 = (($x$i) + ($580<<2)|0);
        HEAP32[$591>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph47$i = $580;$e2$0$ph$i = $$lcssa59$i;$rp$2$ph45$i = $578;$z$1$ph46$i = $z$4$i;
       }
       if ((label|0) == 235) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa219;$e2$1$ph$i$ph = $e2$0$us93$i$lcssa;$rp$3$ph43$i$ph = 18;$z$5$ph$i$ph = $z$1$us94$i$lcssa;
       }
       else if ((label|0) == 236) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa;$e2$1$ph$i$ph = $e2$0$ph$i$lcssa;$rp$3$ph43$i$ph = $rp$2$ph45$i$lcssa;$z$5$ph$i$ph = $z$1$ph46$i$lcssa;
       }
       $a$3$ph$i = $a$2$ph47$i220;$e2$1$ph$i = $e2$1$ph$i$ph;$rp$3$ph43$i = $rp$3$ph43$i$ph;$z$5$ph$i = $z$5$ph$i$ph;
       L362: while(1) {
        $622 = (($z$5$ph$i) + 1)|0;
        $619 = $622 & 127;
        $623 = (($z$5$ph$i) + 127)|0;
        $624 = $623 & 127;
        $625 = (($x$i) + ($624<<2)|0);
        $a$3$i$ph = $a$3$ph$i;$e2$1$i$ph = $e2$1$ph$i;$rp$3$i$ph = $rp$3$ph43$i;
        while(1) {
         $$old$i = ($rp$3$i$ph|0)==(18);
         $626 = ($rp$3$i$ph|0)>(27);
         $$21$i = $626 ? 9 : 1;
         $a$3$i = $a$3$i$ph;$e2$1$i = $e2$1$i$ph;
         while(1) {
          $592 = $a$3$i & 127;
          $593 = ($592|0)==($z$5$ph$i|0);
          do {
           if ($593) {
            label = 254;
           } else {
            $594 = (($x$i) + ($592<<2)|0);
            $595 = HEAP32[$594>>2]|0;
            $596 = ($595>>>0)<(9007199);
            if ($596) {
             label = 254;
             break;
            }
            $597 = ($595>>>0)>(9007199);
            if ($597) {
             break;
            }
            $598 = (($a$3$i) + 1)|0;
            $599 = $598 & 127;
            $600 = ($599|0)==($z$5$ph$i|0);
            if ($600) {
             label = 254;
             break;
            }
            $706 = (($x$i) + ($599<<2)|0);
            $707 = HEAP32[$706>>2]|0;
            $708 = ($707>>>0)<(254740991);
            if ($708) {
             label = 254;
             break;
            }
            $709 = ($707>>>0)<(254740992);
            $or$cond192$i = $$old$i & $709;
            if ($or$cond192$i) {
             $$lcssa201 = $592;$a$3$i$lcssa = $a$3$i;$e2$1$i$lcssa = $e2$1$i;$z$5$ph$i$lcssa = $z$5$ph$i;
             label = 267;
             break L362;
            }
           }
          } while(0);
          if ((label|0) == 254) {
           label = 0;
           if ($$old$i) {
            $$lcssa202 = $592;$$lcssa205 = $593;$$lcssa211 = $619;$a$3$i$lcssa198 = $a$3$i;$e2$1$i$lcssa195 = $e2$1$i;$z$5$ph$i$lcssa209 = $z$5$ph$i;
            label = 255;
            break L362;
           }
          }
          $601 = (($$21$i) + ($e2$1$i))|0;
          $602 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($602) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $601;
          } else {
           $$lcssa207 = $601;$a$3$i$lcssa199 = $a$3$i;
           break;
          }
         }
         $603 = 1 << $$21$i;
         $604 = (($603) + -1)|0;
         $605 = 1000000000 >>> $$21$i;
         $a$487$i = $a$3$i$lcssa199;$carry3$090$i = 0;$k$688$i = $a$3$i$lcssa199;$rp$486$i = $rp$3$i$ph;
         while(1) {
          $606 = (($x$i) + ($k$688$i<<2)|0);
          $607 = HEAP32[$606>>2]|0;
          $608 = $607 & $604;
          $609 = $607 >>> $$21$i;
          $610 = (($609) + ($carry3$090$i))|0;
          HEAP32[$606>>2] = $610;
          $611 = Math_imul($608, $605)|0;
          $612 = ($k$688$i|0)==($a$487$i|0);
          $613 = ($610|0)==(0);
          $or$cond22$i = $612 & $613;
          $614 = (($k$688$i) + 1)|0;
          $615 = $614 & 127;
          $616 = (($rp$486$i) + -9)|0;
          $rp$5$i = $or$cond22$i ? $616 : $rp$486$i;
          $a$5$i = $or$cond22$i ? $615 : $a$487$i;
          $617 = ($615|0)==($z$5$ph$i|0);
          if ($617) {
           $$lcssa208 = $611;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$487$i = $a$5$i;$carry3$090$i = $611;$k$688$i = $615;$rp$486$i = $rp$5$i;
          }
         }
         $618 = ($$lcssa208|0)==(0);
         if (!($618)) {
          $620 = ($619|0)==($a$5$i$lcssa|0);
          if (!($620)) {
           $$lcssa207$lcssa = $$lcssa207;$$lcssa208$lcssa = $$lcssa208;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
           break;
          }
          $627 = HEAP32[$625>>2]|0;
          $628 = $627 | 1;
          HEAP32[$625>>2] = $628;
         }
         $a$3$i$ph = $a$5$i$lcssa;$e2$1$i$ph = $$lcssa207;$rp$3$i$ph = $rp$5$i$lcssa;
        }
        $621 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$621>>2] = $$lcssa208$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa207$lcssa;$rp$3$ph43$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $619;
       }
       if ((label|0) == 255) {
        if ($$lcssa205) {
         $629 = (($$lcssa211) + -1)|0;
         $630 = (($x$i) + ($629<<2)|0);
         HEAP32[$630>>2] = 0;
         $632 = $z$5$ph$i$lcssa209;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $$lcssa211;
        } else {
         $632 = $$lcssa202;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $z$5$ph$i$lcssa209;
        }
       }
       else if ((label|0) == 267) {
        $632 = $$lcssa201;$a$3$i200 = $a$3$i$lcssa;$e2$1$i197 = $e2$1$i$lcssa;$z$7$i = $z$5$ph$i$lcssa;
       }
       $631 = (($x$i) + ($632<<2)|0);
       $633 = HEAP32[$631>>2]|0;
       $634 = (+($633>>>0));
       $635 = (($a$3$i200) + 1)|0;
       $636 = $635 & 127;
       $637 = ($636|0)==($z$7$i|0);
       if ($637) {
        $696 = (($z$7$i) + 1)|0;
        $697 = $696 & 127;
        $698 = (($697) + -1)|0;
        $699 = (($x$i) + ($698<<2)|0);
        HEAP32[$699>>2] = 0;
        $z$7$1$i = $697;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $700 = $634 * 1.0E+9;
       $701 = (($x$i) + ($636<<2)|0);
       $702 = HEAP32[$701>>2]|0;
       $703 = (+($702>>>0));
       $704 = $700 + $703;
       $661 = (+($sign$0|0));
       $643 = $661 * $704;
       $681 = (($e2$1$i197) + 53)|0;
       $638 = (($681) - ($emin$0$ph))|0;
       $705 = ($638|0)<($bits$0$ph|0);
       if ($705) {
        $639 = ($638|0)<(0);
        if ($639) {
         $$01335$i = 0;$denormal$034$i = 1;
         label = 271;
        } else {
         $$013$i = $638;$denormal$0$i = 1;
         label = 270;
        }
       } else {
        $$013$i = $bits$0$ph;$denormal$0$i = 0;
        label = 270;
       }
       if ((label|0) == 270) {
        $640 = ($$013$i|0)<(53);
        if ($640) {
         $$01335$i = $$013$i;$denormal$034$i = $denormal$0$i;
         label = 271;
        } else {
         $$01336$i = $$013$i;$bias$0$i24 = 0.0;$denormal$033$i = $denormal$0$i;$frac$0$i = 0.0;$y$1$i23 = $643;
        }
       }
       if ((label|0) == 271) {
        $641 = (105 - ($$01335$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$01335$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $$01336$i = $$01335$i;$bias$0$i24 = $644;$denormal$033$i = $denormal$034$i;$frac$0$i = $647;$y$1$i23 = $649;
       }
       $650 = (($a$3$i200) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i200) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i200) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$01336$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i23 + $frac$2$i;
       $679 = $678 - $bias$0$i24;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$033$i;$e2$2$i = $e2$1$i197;$y$2$i25 = $679;
         } else {
          $686 = ($denormal$033$i|0)!=(0);
          $687 = ($$01336$i|0)==($638|0);
          $or$cond23$i = $687 & $686;
          $denormal$1$i = $or$cond23$i ? 0 : $denormal$033$i;
          $688 = $679 * 0.5;
          $689 = (($e2$1$i197) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $689;$y$2$i25 = $688;
         }
         $690 = (($e2$2$i) + 50)|0;
         $691 = ($690|0)>($324|0);
         if (!($691)) {
          $692 = ($denormal$2$i|0)!=(0);
          $693 = $frac$2$i != 0.0;
          $or$cond9$i26 = $693 & $692;
          if (!($or$cond9$i26)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
           break;
          }
         }
         $694 = (___errno_location()|0);
         HEAP32[$694>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
        } else {
         $e2$3$i = $e2$1$i197;$y$3$i = $679;
        }
       } while(0);
       $695 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i27 = $695;
      }
     } while(0);
     $$0 = $$0$i27;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = (($105) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = (($43) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $i$1 = $i$0$lcssa;
   while(1) {
    $45 = HEAP32[$0>>2]|0;
    $46 = (($45) + -1|0);
    HEAP32[$0>>2] = $46;
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $i$1 = $47;
    } else {
     break;
    }
   }
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = (($f) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($f) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($f) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if (!($or$cond)) {
  $$sink = $2;
  $12 = (($f) + 100|0);
  HEAP32[$12>>2] = $$sink;
  return;
 }
 $11 = (($4) + ($lim)|0);
 $$sink = $11;
 $12 = (($f) + 100|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert2 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (($f) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = (($f) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($10) {
    label = 8;
   } else {
    $11 = (($f) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $$pre;
    $14 = $12;
    $15 = (($13) - ($14))|0;
    $16 = (($f) + 108|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($9) - ($17))|0;
    $19 = (($18) + -1)|0;
    $20 = ($15|0)>($19|0);
    if ($20) {
     $21 = (($12) + ($19)|0);
     $22 = (($f) + 100|0);
     HEAP32[$22>>2] = $21;
    } else {
     label = 8;
    }
   }
   if ((label|0) == 8) {
    $23 = (($f) + 100|0);
    HEAP32[$23>>2] = $$pre;
   }
   $24 = ($$pre|0)==(0|0);
   $$phi$trans$insert2 = (($f) + 4|0);
   $$pre3 = HEAP32[$$phi$trans$insert2>>2]|0;
   if (!($24)) {
    $25 = $$pre;
    $26 = $$pre3;
    $27 = (($f) + 108|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($25) + 1)|0;
    $30 = (($29) - ($26))|0;
    $31 = (($30) + ($28))|0;
    HEAP32[$27>>2] = $31;
   }
   $32 = (($$pre3) + -1|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33&255;
   $35 = ($34|0)==($6|0);
   if ($35) {
    $$0 = $6;
    return ($$0|0);
   }
   $36 = $6&255;
   HEAP8[$32>>0] = $36;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = (($f) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa49 = 0, $$lcssa51 = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    if (!($34)) {
     $$0 = $x;
     return (+$$0);
    }
    $35 = $x * 0.0;
    $$0 = $35;
    return (+$$0);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $$lcssa55 = $44;
       break;
      }
     }
     $ex$0$lcssa = $$lcssa55;
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $$lcssa54 = $67;
       break;
      }
     }
     $ey$0$lcssa = $$lcssa54;
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   do {
    if ($82) {
     $154 = $93;$155 = $87;$156 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($154) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $155;$101 = $156;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $154 = $112;$155 = $106;$156 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa51 = $104;$$lcssa53 = $112;$157 = $106;$158 = $107;$159 = $102;$160 = $103;
       label = 27;
       break;
      }
     }
     if ((label|0) == 27) {
      $$lcssa7 = $$lcssa53;$113 = $159;$115 = $160;$152 = $157;$153 = $158;$ex$2$lcssa = $$lcssa51;
      break;
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$152 = $87;$153 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $153;$120 = $152;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $$lcssa49 = $130;$161 = $128;$162 = $129;
      break;
     }
    }
    $137 = $161;$138 = $162;$ex$3$lcssa = $$lcssa49;
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = (($s) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = (($s) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = (($s) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = (($s) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = (($s) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = (($s) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = (($f) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($f) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = (($f) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = (($f) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = (($f) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = (($f) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = (($f) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = (($f) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = (($f) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = (($f) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($f) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = (($f) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = (($f) + 48|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($13) + ($17)|0);
  $19 = (($f) + 16|0);
  HEAP32[$19>>2] = $18;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = (($f) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = (($f) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa8 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = (($f) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = (($f) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = (($f) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     label = 12;
     break;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa8 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   if ((label|0) == 12) {
    $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    break;
   }
   $23 = (($f) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa8)|0);
   $26 = ($25>>>0)<($i$0$lcssa8>>>0);
   if ($26) {
    $$0 = $i$0$lcssa8;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa8)|0);
    $28 = (($l) - ($i$0$lcssa8))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa8;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (($f) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = (($f) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = (($f) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = (($f) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = (($internal_buf) + 80|0);
  $11 = (($f) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = (($f) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f+0|0; src=4520+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = (($f) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = (($f) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = (($f) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = (($f) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = (($f) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 dest=$f$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = (($f$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i$i = sp;
 dest=$f$i$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = (($f$i$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$019$lcssa = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$24$ph = 0, $$3 = 0, $$3$ph = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa58 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$020$lcssa = 0;
 var $s$15 = 0, $s$15$ph = 0, $s$2 = 0, $s$2$ph = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$019$lcssa = $$019;$s$020$lcssa = $s$020;
     label = 7;
     break;
    }
    $8 = (($s$020) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$lcssa61 = $8;$$lcssa62 = $9;$$lcssa63 = $13;
     label = 5;
     break;
    }
   }
   if ((label|0) == 5) {
    $$0$lcssa = $$lcssa62;$$lcssa = $$lcssa63;$s$0$lcssa = $$lcssa61;
    label = 6;
    break;
   }
   else if ((label|0) == 7) {
    $$0$lcssa44 = $$019$lcssa;$s$0$lcssa43 = $s$020$lcssa;
    break;
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 6;
  }
 } while(0);
 if ((label|0) == 6) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  }
 }
 $14 = HEAP8[$s$0$lcssa43>>0]|0;
 $15 = $c&255;
 $16 = ($14<<24>>24)==($15<<24>>24);
 if ($16) {
  $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
  $35 = ($$3|0)!=(0);
  $36 = $35 ? $s$2 : 0;
  return ($36|0);
 }
 $17 = Math_imul($0, 16843009)|0;
 $18 = ($$0$lcssa44>>>0)>(3);
 do {
  if ($18) {
   $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
   while(1) {
    $19 = HEAP32[$w$011>>2]|0;
    $20 = $19 ^ $17;
    $21 = (($20) + -16843009)|0;
    $22 = $20 & -2139062144;
    $23 = $22 ^ -2139062144;
    $24 = $23 & $21;
    $25 = ($24|0)==(0);
    if (!($25)) {
     $$110$lcssa = $$110;$w$011$lcssa = $w$011;
     label = 12;
     break;
    }
    $26 = (($w$011) + 4|0);
    $27 = (($$110) + -4)|0;
    $28 = ($27>>>0)>(3);
    if ($28) {
     $$110 = $27;$w$011 = $26;
    } else {
     $$lcssa57 = $26;$$lcssa58 = $27;
     label = 14;
     break;
    }
   }
   if ((label|0) == 12) {
    $$24$ph = $$110$lcssa;$s$15$ph = $w$011$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    $$1$lcssa = $$lcssa58;$w$0$lcssa = $$lcssa57;
    label = 15;
    break;
   }
  } else {
   $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $29 = ($$1$lcssa|0)==(0);
  if ($29) {
   $$3 = 0;$s$2 = $w$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  } else {
   $$24$ph = $$1$lcssa;$s$15$ph = $w$0$lcssa;
  }
 }
 $$24 = $$24$ph;$s$15 = $s$15$ph;
 while(1) {
  $30 = HEAP8[$s$15>>0]|0;
  $31 = ($30<<24>>24)==($15<<24>>24);
  if ($31) {
   $$3$ph = $$24;$s$2$ph = $s$15;
   break;
  }
  $32 = (($s$15) + 1|0);
  $33 = (($$24) + -1)|0;
  $34 = ($33|0)==(0);
  if ($34) {
   $$3$ph = 0;$s$2$ph = $32;
   break;
  } else {
   $$24 = $33;$s$15 = $32;
  }
 }
 $$3 = $$3$ph;$s$2 = $s$2$ph;
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $cond = 0, $newp$0 = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[((3128 + 16|0))>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[((3600 + 8|0))>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[((3128 + 24|0))>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[((3128 + 12|0))>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[((3128 + 24|0))>>2] = $36;
  HEAP32[((3128 + 12|0))>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[((3128 + 20|0))>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[((3128 + 8|0))>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[((3128 + 8|0))>>2] = $storemerge21;
  HEAP32[((3128 + 20|0))>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = ((3128 + ($77<<2)|0) + 40|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = (($74) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3128>>2]|0;
    $88 = $87 & $86;
    HEAP32[3128>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = (($76) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = (($76) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = (($74) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $113;$RP$0$ph = $112;
      }
     } else {
      $R$0$ph = $110;$RP$0$ph = $109;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $115 = (($R$0) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if ($117) {
       $118 = (($R$0) + 16|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119|0)==(0|0);
       if ($120) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $119;$RP$0$be = $118;
       }
      } else {
       $R$0$be = $116;$RP$0$be = $115;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = (($101) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = (($98) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((3128 + ($124<<2)|0) + 304|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[((3128 + 4|0))>>2]|0;
      $131 = $130 & $129;
      HEAP32[((3128 + 4|0))>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[((3128 + 16|0))>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = (($96) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = (($96) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[((3128 + 16|0))>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = (($R$1) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = (($R$1) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = (($143) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[((3128 + 16|0))>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = (($R$1) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = (($149) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $$pre52 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum6$pre = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, $cond = 0, $cond40 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = (($p) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[((3128 + 16|0))>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[((3128 + 20|0))>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[((3128 + 8|0))>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = ((3128 + ($21<<2)|0) + 40|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = (($18) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3128>>2]|0;
     $32 = $31 & $30;
     HEAP32[3128>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre52 = (($20) + 8|0);
     $$pre$phi53Z2D = $$pre52;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = (($20) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi53Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = (($18) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi53Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $57;$RP$0$ph = $56;
      }
     } else {
      $R$0$ph = $54;$RP$0$ph = $53;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $59 = (($R$0) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if ($61) {
       $62 = (($R$0) + 16|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if ($64) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $63;$RP$0$be = $62;
       }
      } else {
       $R$0$be = $60;$RP$0$be = $59;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = (($45) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = (($42) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ((3128 + ($68<<2)|0) + 304|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[((3128 + 4|0))>>2]|0;
      $75 = $74 & $73;
      HEAP32[((3128 + 4|0))>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[((3128 + 16|0))>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = (($40) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = (($40) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[((3128 + 16|0))>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = (($R$1) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = (($R$1) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = (($87) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[((3128 + 16|0))>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = (($R$1) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = (($93) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[((3128 + 16|0))>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[((3128 + 24|0))>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[((3128 + 12|0))>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[((3128 + 12|0))>>2] = $115;
   HEAP32[((3128 + 24|0))>>2] = $$0;
   $116 = $115 | 1;
   $117 = (($$0) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[((3128 + 20|0))>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[((3128 + 20|0))>>2] = 0;
   HEAP32[((3128 + 8|0))>>2] = 0;
   return;
  }
  $120 = HEAP32[((3128 + 20|0))>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[((3128 + 8|0))>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[((3128 + 8|0))>>2] = $123;
   HEAP32[((3128 + 20|0))>>2] = $$0;
   $124 = $123 | 1;
   $125 = (($$0) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = ((3128 + ($135<<2)|0) + 40|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = (($132) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3128>>2]|0;
     $146 = $145 & $144;
     HEAP32[3128>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre50 = (($134) + 8|0);
     $$pre$phi51Z2D = $$pre50;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = (($134) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi51Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = (($132) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi51Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $171;$RP9$0$ph = $170;
       }
      } else {
       $R7$0$ph = $168;$RP9$0$ph = $167;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $173 = (($R7$0) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = (($R7$0) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $177;$RP9$0$be = $176;
        }
       } else {
        $R7$0$be = $174;$RP9$0$be = $173;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = (($159) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = (($156) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ((3128 + ($182<<2)|0) + 304|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond40 = ($R7$1|0)==(0|0);
      if ($cond40) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[((3128 + 4|0))>>2]|0;
       $189 = $188 & $187;
       HEAP32[((3128 + 4|0))>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[((3128 + 16|0))>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = (($154) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = (($154) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[((3128 + 16|0))>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = (($R7$1) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = (($R7$1) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = (($201) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[((3128 + 16|0))>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = (($R7$1) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = (($207) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = (($$0) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[((3128 + 20|0))>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[((3128 + 8|0))>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = (($$0) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = ((3128 + ($224<<2)|0) + 40|0);
  $226 = HEAP32[3128>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3128>>2] = $230;
   $$sum6$pre = (($224) + 2)|0;
   $$pre = ((3128 + ($$sum6$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = ((3128 + ($$sum7<<2)|0) + 40|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[((3128 + 16|0))>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = (($F16$0) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = (($$0) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = (($$0) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = ((3128 + ($I19$0<<2)|0) + 304|0);
 $264 = (($$0) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = (($$0) + 16|0);
 $266 = (($$0) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[((3128 + 4|0))>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[((3128 + 4|0))>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = (($$0) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = (($$0) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = (($$0) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ($I19$0|0)==(31);
 if ($276) {
  $284 = 0;
 } else {
  $277 = $I19$0 >>> 1;
  $278 = (25 - ($277))|0;
  $284 = $278;
 }
 $279 = (($275) + 4|0);
 $280 = HEAP32[$279>>2]|0;
 $281 = $280 & -8;
 $282 = ($281|0)==($$1|0);
 do {
  if ($282) {
   $T$0$lcssa = $275;
  } else {
   $283 = $$1 << $284;
   $K20$045 = $283;$T$044 = $275;
   while(1) {
    $291 = $K20$045 >>> 31;
    $292 = ((($T$044) + ($291<<2)|0) + 16|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$044$lcssa = $T$044;
     break;
    }
    $285 = $K20$045 << 1;
    $286 = (($287) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $$lcssa62 = $287;
     label = 134;
     break;
    } else {
     $K20$045 = $285;$T$044 = $287;
    }
   }
   if ((label|0) == 134) {
    $T$0$lcssa = $$lcssa62;
    break;
   }
   $294 = HEAP32[((3128 + 16|0))>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = (($$0) + 24|0);
   HEAP32[$296>>2] = $T$044$lcssa;
   $297 = (($$0) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = (($$0) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = (($T$0$lcssa) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[((3128 + 16|0))>>2]|0;
 $302 = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = ($300>>>0)>=($301>>>0);
 $or$cond = $302 & $303;
 if (!($or$cond)) {
  _abort();
  // unreachable;
 }
 $304 = (($300) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = (($$0) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = (($$0) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = (($$0) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$ = 0, $$lcssa18 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$111 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $or$cond5 = 0, $x$012 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = (($1) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = (($12) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = (($25) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $96 = -2147483648;$97 = 0;
   tempRet0 = $96;
   return ($97|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = (($31) + -1|0);
  HEAP32[$0>>2] = $32;
  $96 = -2147483648;$97 = 0;
  tempRet0 = $96;
  return ($97|0);
 }
 $c$111 = $c$0;$x$012 = 0;
 while(1) {
  $33 = ($x$012*10)|0;
  $34 = (($c$111) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = (($36) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $$ = $44 & $45;
  if ($$) {
   $c$111 = $c$1$be;$x$012 = $35;
  } else {
   $$lcssa18 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $46 = ($$lcssa18|0)<(0);
 $47 = $46 << 31 >> 31;
 $48 = (($c$1$be$lcssa) + -48)|0;
 $49 = ($48>>>0)<(10);
 if ($49) {
  $52 = $$lcssa18;$53 = $47;$c$27 = $c$1$be$lcssa;
  while(1) {
   $54 = (___muldi3(($52|0),($53|0),10,0)|0);
   $55 = tempRet0;
   $56 = ($c$27|0)<(0);
   $57 = $56 << 31 >> 31;
   $58 = (_i64Add(($c$27|0),($57|0),-48,-1)|0);
   $59 = tempRet0;
   $60 = (_i64Add(($58|0),($59|0),($54|0),($55|0))|0);
   $61 = tempRet0;
   $62 = HEAP32[$0>>2]|0;
   $63 = HEAP32[$2>>2]|0;
   $64 = ($62>>>0)<($63>>>0);
   if ($64) {
    $65 = (($62) + 1|0);
    HEAP32[$0>>2] = $65;
    $66 = HEAP8[$62>>0]|0;
    $67 = $66&255;
    $c$2$be = $67;
   } else {
    $68 = (___shgetc($f)|0);
    $c$2$be = $68;
   }
   $69 = (($c$2$be) + -48)|0;
   $70 = ($69>>>0)<(10);
   $71 = ($61|0)<(21474836);
   $72 = ($60>>>0)<(2061584302);
   $73 = ($61|0)==(21474836);
   $74 = $73 & $72;
   $75 = $71 | $74;
   $or$cond5 = $70 & $75;
   if ($or$cond5) {
    $52 = $60;$53 = $61;$c$27 = $c$2$be;
   } else {
    $98 = $60;$99 = $61;$c$2$be$lcssa = $c$2$be;
    break;
   }
  }
  $90 = $98;$91 = $99;$c$2$lcssa = $c$2$be$lcssa;
 } else {
  $90 = $$lcssa18;$91 = $47;$c$2$lcssa = $c$1$be$lcssa;
 }
 $50 = (($c$2$lcssa) + -48)|0;
 $51 = ($50>>>0)<(10);
 if ($51) {
  while(1) {
   $76 = HEAP32[$0>>2]|0;
   $77 = HEAP32[$2>>2]|0;
   $78 = ($76>>>0)<($77>>>0);
   if ($78) {
    $79 = (($76) + 1|0);
    HEAP32[$0>>2] = $79;
    $80 = HEAP8[$76>>0]|0;
    $81 = $80&255;
    $c$3$be = $81;
   } else {
    $82 = (___shgetc($f)|0);
    $c$3$be = $82;
   }
   $83 = (($c$3$be) + -48)|0;
   $84 = ($83>>>0)<(10);
   if (!($84)) {
    break;
   }
  }
 }
 $85 = HEAP32[$2>>2]|0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$0>>2]|0;
  $88 = (($87) + -1|0);
  HEAP32[$0>>2] = $88;
 }
 $89 = ($neg$0|0)!=(0);
 $92 = (_i64Subtract(0,0,($90|0),($91|0))|0);
 $93 = tempRet0;
 $94 = $89 ? $92 : $90;
 $95 = $89 ? $93 : $91;
 $96 = $95;$97 = $94;
 tempRet0 = $96;
 return ($97|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$5$i = 0, $$$i = 0, $$$p$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i105$i = 0, $$0$lcssa$i112$i = 0, $$0$lcssa$i136$i = 0, $$0$lcssa$i151$i = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i47$i = 0, $$0$lcssa$i52 = 0, $$0$lcssa$i54 = 0, $$0$lcssa$i54$i = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i64$i = 0;
 var $$0$lcssa$i69 = 0, $$0$lcssa$i71$i = 0, $$0$lcssa$i76 = 0, $$0$lcssa$i77$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i86 = 0, $$0$lcssa$i92$i = 0, $$0$ph = 0, $$0$ph340 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i103$i = 0, $$01$i110$i = 0, $$01$i134$i = 0, $$01$i149$i = 0, $$01$i45 = 0, $$01$i45$i = 0, $$01$i52$i = 0, $$01$i60 = 0, $$01$i62$i = 0;
 var $$01$i67 = 0, $$01$i69$i = 0, $$01$i74 = 0, $$01$i75$i = 0, $$01$i82$i = 0, $$01$i84 = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i93$i = 0, $$012$i = 0, $$013$i = 0.0, $$019$i = 0, $$03$i49 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i87$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i120$i = 0, $$12$i = 0;
 var $$12$i$i = 0, $$12$i118$i = 0, $$12$i127$i = 0, $$12$i142$i = 0, $$12$i142$i$lcssa = 0, $$12$i95$i = 0, $$120$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$21 = 0, $$216$$29$i = 0, $$216$$31$i = 0, $$216$i = 0, $$25 = 0, $$26 = 0, $$26$i = 0, $$26$us$i = 0, $$27$i = 0, $$28$i = 0.0;
 var $$29$i = 0, $$3$i = 0.0, $$31$i = 0, $$317$i = 0, $$39$i = 0, $$4$i = 0.0, $$418$lcssa$i = 0, $$418193$i = 0, $$5205$i = 0, $$93 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us309$i = 0, $$a$3$us310$i = 0, $$a$3$us310$i$lcssa = 0, $$a$3311$i = 0, $$a$3312$i = 0, $$a$3312$i$lcssa = 0, $$be = 0, $$be341 = 0;
 var $$be342 = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa107 = 0, $$lcssa107$ph = 0, $$lcssa283$i = 0, $$lcssa344 = 0, $$lcssa345 = 0, $$lcssa346 = 0, $$lcssa347 = 0, $$lcssa348 = 0, $$lcssa350 = 0, $$lcssa352 = 0, $$lcssa353 = 0, $$lcssa354 = 0, $$lcssa355 = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0;
 var $$lcssa359 = 0, $$lcssa360 = 0, $$lcssa361 = 0, $$lcssa362 = 0, $$lcssa363 = 0, $$lcssa364 = 0, $$lcssa365 = 0, $$lcssa367 = 0, $$lcssa368 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa371 = 0, $$lcssa372 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa375 = 0, $$lcssa376 = 0, $$lcssa377 = 0, $$lcssa378 = 0.0, $$lcssa379 = 0;
 var $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$mask$i = 0, $$mask$i39 = 0, $$mask1$i = 0, $$mask1$i38 = 0, $$neg159$i = 0, $$neg160$i = 0, $$not$i = 0, $$p$5 = 0, $$p$i = 0, $$ph = 0, $$pn$i = 0, $$pr$i = 0, $$pr154$i = 0, $$pre = 0, $$pre$i = 0;
 var $$pre269 = 0, $$pre308$i = 0, $$sum$i = 0, $$sum21$i = 0, $$sum22$i = 0, $$z$3$i = 0, $$z$4$us$i = 0, $$z$4$us$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0;
 var $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0;
 var $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0;
 var $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0;
 var $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0;
 var $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0;
 var $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0;
 var $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0;
 var $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0;
 var $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0.0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0.0, $1168 = 0, $1169 = 0, $117 = 0;
 var $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0;
 var $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $140$phi = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0.0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0.0, $473 = 0.0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0.0;
 var $544 = 0.0, $545 = 0.0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0.0, $574 = 0.0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0.0, $638 = 0.0, $639 = 0.0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $655$phi = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0.0, $777 = 0.0;
 var $778 = 0, $779 = 0.0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $955$phi = 0, $956 = 0;
 var $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0;
 var $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0;
 var $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1261$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$2$ph$i$lcssa = 0, $a$3$lcssa$i = 0, $a$3248$i = 0, $a$3248$us$i = 0, $a$5$lcssa$i = 0, $a$5223$i = 0, $a$6$i = 0;
 var $a$6$i$lcssa = 0, $a$7$i = 0, $a$8$ph$i = 0, $a$8$ph294$i = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0;
 var $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0;
 var $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0, $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0254$i = 0, $carry3$0242$i = 0, $carry3$0242$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0253$i = 0;
 var $d$0255$i = 0, $d$1241$i = 0, $d$1241$us$i = 0, $d$2$lcssa$i = 0, $d$2222$i = 0, $d$3$i = 0, $d$4199$i = 0, $d$5192$i = 0, $d$6204$i = 0, $e$0237$i = 0, $e$1$i = 0, $e$2218$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1209$i = 0;
 var $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0, $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0;
 var $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0, $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0;
 var $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0, $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0;
 var $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0, $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0;
 var $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0, $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0;
 var $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0, $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0111 = 0, $fl$0111$ph = 0, $fl$0171 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0;
 var $i$0$lcssa = 0, $i$0$lcssa272 = 0, $i$0176 = 0, $i$0236$i = 0, $i$03$i = 0, $i$03$i31 = 0, $i$1$lcssa$i = 0, $i$1187 = 0, $i$1230$i = 0, $i$2163 = 0, $i$2163$lcssa = 0, $i$2217$i = 0, $i$3161 = 0, $i$3213$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i33 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0;
 var $isdigit2$i29 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i32 = 0, $isdigittmp1$i = 0, $isdigittmp1$i28 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i30 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0229$i = 0, $j$0231$i = 0, $j$1214$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$be = 0, $l$0$i = 0, $l$1$i = 0;
 var $l$1175 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$be = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i101$i = 0, $or$cond$i108$i = 0, $or$cond$i43$i = 0, $or$cond$i50$i = 0, $or$cond$i58 = 0, $or$cond$i60$i = 0;
 var $or$cond$i65 = 0, $or$cond$i67$i = 0, $or$cond$i72 = 0, $or$cond$i80 = 0, $or$cond$i80$i = 0, $or$cond$i82 = 0, $or$cond10$i = 0, $or$cond10191$i = 0, $or$cond12$i = 0, $or$cond15 = 0, $or$cond19 = 0, $or$cond23 = 0, $or$cond274 = 0, $or$cond35$i = 0, $or$cond37$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0;
 var $p$4271 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1187$i = 0, $round$0186$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0;
 var $s$1$i = 0, $s$1$i$lcssa = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$i$lcssa = 0, $s$1$us$us$i = 0, $s$1$us$us$i$lcssa = 0, $s1$0$i = 0, $s7$0196$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0188$i = 0, $s8$0188$i$ph = 0, $s9$0$i = 0, $s9$1200$i = 0, $s9$2$i = 0, $sext = 0, $sext94 = 0, $small$0$i = 0.0, $small$1$i = 0.0;
 var $st$0 = 0, $st$0$lcssa351 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8109 = 0, $storemerge8109$ph = 0, $storemerge8170 = 0, $t$0 = 0, $t$1 = 0, $uglygep$i = 0, $uglygep296$i = 0, $uglygep300$i = 0, $uglygep300301$i = 0, $umax$i = 0, $umax297$i = 0, $umax297298299$i = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $w$25$i = 0, $w$38$i = 0, $wc = 0, $ws$0177 = 0, $ws$1188 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i117$i = 0, $y$03$i126$i = 0, $y$03$i141$i = 0, $y$03$i94$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0$lcssa$ph = 0, $z$0164 = 0, $z$1$lcssa$i = 0, $z$1260$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0;
 var $z$2$i$lcssa$lcssa = 0, $z$3$lcssa$i = 0, $z$3247$i = 0, $z$3247$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$5$i$lcssa = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = (($buf) + 40|0);
 $3 = $2;
 $4 = (($buf) + 39|0);
 $5 = (($wc) + 4|0);
 $6 = $wc;
 $7 = (($ebuf0$i) + 12|0);
 $8 = (($ebuf0$i) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = (($big$i) + 288|0);
 $14 = (($buf$i) + 9|0);
 $15 = $14;
 $16 = (($buf$i) + 8|0);
 $1175 = 0;$1176 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 429;
   break;
  }
  $1177 = $22;$26 = $23;
  while(1) {
   if ((($1177<<24>>24) == 0)) {
    $$lcssa344 = $26;
    label = 14;
    break;
   } else if ((($1177<<24>>24) == 37)) {
    $$lcssa = $26;
    label = 9;
    break;
   }
   $25 = (($26) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1177 = $$pre;$26 = $25;
  }
  if ((label|0) == 9) {
   label = 0;
   $28 = $$lcssa;$z$0164 = $$lcssa;
   while(1) {
    $27 = (($28) + 1|0);
    $29 = HEAP8[$27>>0]|0;
    $30 = ($29<<24>>24)==(37);
    if (!($30)) {
     $$lcssa107$ph = $28;$z$0$lcssa$ph = $z$0164;
     break;
    }
    $31 = (($z$0164) + 1|0);
    $32 = (($28) + 2|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = ($33<<24>>24)==(37);
    if ($34) {
     $28 = $32;$z$0164 = $31;
    } else {
     $$lcssa107$ph = $32;$z$0$lcssa$ph = $31;
     break;
    }
   }
   $$lcssa107 = $$lcssa107$ph;$z$0$lcssa = $z$0$lcssa$ph;
  }
  else if ((label|0) == 14) {
   label = 0;
   $$lcssa107 = $$lcssa344;$z$0$lcssa = $$lcssa344;
  }
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  L24: do {
   if ($38) {
    $39 = (($$lcssa107) + 1|0);
    $40 = HEAP8[$39>>0]|0;
    $41 = $40 << 24 >> 24;
    $isdigittmp = (($41) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $42 = (($$lcssa107) + 2|0);
     $43 = HEAP8[$42>>0]|0;
     $44 = ($43<<24>>24)==(36);
     $45 = (($$lcssa107) + 3|0);
     $$93 = $44 ? $45 : $39;
     $$l10n$0 = $44 ? 1 : $l10n$0;
     $isdigittmp$ = $44 ? $isdigittmp : -1;
     $$pre269 = HEAP8[$$93>>0]|0;
     $47 = $$pre269;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$93;
    } else {
     $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
    }
    $46 = $47 << 24 >> 24;
    $48 = $46 & -32;
    $49 = ($48|0)==(32);
    if ($49) {
     $51 = $46;$56 = $47;$fl$0171 = 0;$storemerge8170 = $storemerge;
     while(1) {
      $50 = (($51) + -32)|0;
      $52 = 1 << $50;
      $53 = $52 & 75913;
      $54 = ($53|0)==(0);
      if ($54) {
       $$ph = $56;$fl$0111$ph = $fl$0171;$storemerge8109$ph = $storemerge8170;
       break;
      }
      $55 = $56 << 24 >> 24;
      $57 = (($55) + -32)|0;
      $58 = 1 << $57;
      $59 = $58 | $fl$0171;
      $60 = (($storemerge8170) + 1|0);
      $61 = HEAP8[$60>>0]|0;
      $62 = $61 << 24 >> 24;
      $63 = $62 & -32;
      $64 = ($63|0)==(32);
      if ($64) {
       $51 = $62;$56 = $61;$fl$0171 = $59;$storemerge8170 = $60;
      } else {
       $$ph = $61;$fl$0111$ph = $59;$storemerge8109$ph = $60;
       break;
      }
     }
     $65 = $$ph;$fl$0111 = $fl$0111$ph;$storemerge8109 = $storemerge8109$ph;
    } else {
     $65 = $47;$fl$0111 = 0;$storemerge8109 = $storemerge;
    }
    $66 = ($65<<24>>24)==(42);
    do {
     if ($66) {
      $67 = (($storemerge8109) + 1|0);
      $68 = HEAP8[$67>>0]|0;
      $69 = $68 << 24 >> 24;
      $isdigittmp11 = (($69) + -48)|0;
      $isdigit12 = ($isdigittmp11>>>0)<(10);
      if ($isdigit12) {
       $70 = (($storemerge8109) + 2|0);
       $71 = HEAP8[$70>>0]|0;
       $72 = ($71<<24>>24)==(36);
       if ($72) {
        $73 = (($nl_type) + ($isdigittmp11<<2)|0);
        HEAP32[$73>>2] = 10;
        $74 = HEAP8[$67>>0]|0;
        $75 = $74 << 24 >> 24;
        $76 = (($75) + -48)|0;
        $77 = (($nl_arg) + ($76<<3)|0);
        $78 = $77;
        $79 = $78;
        $80 = HEAP32[$79>>2]|0;
        $81 = (($78) + 4)|0;
        $82 = $81;
        $83 = HEAP32[$82>>2]|0;
        $84 = (($storemerge8109) + 3|0);
        $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
       } else {
        label = 29;
       }
      } else {
       label = 29;
      }
      if ((label|0) == 29) {
       label = 0;
       $85 = ($l10n$1|0)==(0);
       if (!($85)) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       }
       if (!($1)) {
        $105 = $67;$fl$1 = $fl$0111;$l10n$3 = 0;$w$1 = 0;
        break;
       }
       $arglist_current = HEAP32[$ap>>2]|0;
       $86 = $arglist_current;
       $87 = (0 + 4|0);
       $expanded64 = $87;
       $expanded = (($expanded64) - 1)|0;
       $88 = (($86) + ($expanded))|0;
       $89 = (0 + 4|0);
       $expanded68 = $89;
       $expanded67 = (($expanded68) - 1)|0;
       $expanded66 = $expanded67 ^ -1;
       $90 = $88 & $expanded66;
       $91 = $90;
       $92 = HEAP32[$91>>2]|0;
       $arglist_next = (($91) + 4|0);
       HEAP32[$ap>>2] = $arglist_next;
       $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
      }
      $93 = ($w$0|0)<(0);
      if ($93) {
       $94 = $fl$0111 | 8192;
       $95 = (0 - ($w$0))|0;
       $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
      } else {
       $105 = $storemerge13;$fl$1 = $fl$0111;$l10n$3 = $l10n$2;$w$1 = $w$0;
      }
     } else {
      $96 = $65 << 24 >> 24;
      $isdigittmp1$i = (($96) + -48)|0;
      $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
      if ($isdigit2$i) {
       $100 = $storemerge8109;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
       while(1) {
        $97 = ($i$03$i*10)|0;
        $98 = (($97) + ($isdigittmp4$i))|0;
        $99 = (($100) + 1|0);
        $101 = HEAP8[$99>>0]|0;
        $102 = $101 << 24 >> 24;
        $isdigittmp$i = (($102) + -48)|0;
        $isdigit$i = ($isdigittmp$i>>>0)<(10);
        if ($isdigit$i) {
         $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
        } else {
         $$lcssa345 = $98;$$lcssa346 = $99;
         break;
        }
       }
       $103 = ($$lcssa345|0)<(0);
       if ($103) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       } else {
        $105 = $$lcssa346;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = $$lcssa345;
       }
      } else {
       $105 = $storemerge8109;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = 0;
      }
     }
    } while(0);
    $104 = HEAP8[$105>>0]|0;
    $106 = ($104<<24>>24)==(46);
    do {
     if ($106) {
      $107 = (($105) + 1|0);
      $108 = HEAP8[$107>>0]|0;
      $109 = ($108<<24>>24)==(42);
      if (!($109)) {
       $136 = $108 << 24 >> 24;
       $isdigittmp1$i28 = (($136) + -48)|0;
       $isdigit2$i29 = ($isdigittmp1$i28>>>0)<(10);
       if (!($isdigit2$i29)) {
        $1178 = $107;$p$0 = 0;
        break;
       }
       $1179 = $107;$140 = $105;$i$03$i31 = 0;$isdigittmp4$i30 = $isdigittmp1$i28;
       while(1) {
        $137 = ($i$03$i31*10)|0;
        $138 = (($137) + ($isdigittmp4$i30))|0;
        $139 = (($140) + 2|0);
        $141 = HEAP8[$139>>0]|0;
        $142 = $141 << 24 >> 24;
        $isdigittmp$i32 = (($142) + -48)|0;
        $isdigit$i33 = ($isdigittmp$i32>>>0)<(10);
        if ($isdigit$i33) {
         $140$phi = $1179;$1179 = $139;$i$03$i31 = $138;$isdigittmp4$i30 = $isdigittmp$i32;$140 = $140$phi;
        } else {
         $$lcssa347 = $138;$$lcssa348 = $139;
         break;
        }
       }
       $1178 = $$lcssa348;$p$0 = $$lcssa347;
       break;
      }
      $110 = (($105) + 2|0);
      $111 = HEAP8[$110>>0]|0;
      $112 = $111 << 24 >> 24;
      $isdigittmp9 = (($112) + -48)|0;
      $isdigit10 = ($isdigittmp9>>>0)<(10);
      if ($isdigit10) {
       $113 = (($105) + 3|0);
       $114 = HEAP8[$113>>0]|0;
       $115 = ($114<<24>>24)==(36);
       if ($115) {
        $116 = (($nl_type) + ($isdigittmp9<<2)|0);
        HEAP32[$116>>2] = 10;
        $117 = HEAP8[$110>>0]|0;
        $118 = $117 << 24 >> 24;
        $119 = (($118) + -48)|0;
        $120 = (($nl_arg) + ($119<<3)|0);
        $121 = $120;
        $122 = $121;
        $123 = HEAP32[$122>>2]|0;
        $124 = (($121) + 4)|0;
        $125 = $124;
        $126 = HEAP32[$125>>2]|0;
        $127 = (($105) + 4|0);
        $1178 = $127;$p$0 = $123;
        break;
       }
      }
      $128 = ($l10n$3|0)==(0);
      if (!($128)) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      }
      if ($1) {
       $arglist_current2 = HEAP32[$ap>>2]|0;
       $129 = $arglist_current2;
       $130 = (0 + 4|0);
       $expanded71 = $130;
       $expanded70 = (($expanded71) - 1)|0;
       $131 = (($129) + ($expanded70))|0;
       $132 = (0 + 4|0);
       $expanded75 = $132;
       $expanded74 = (($expanded75) - 1)|0;
       $expanded73 = $expanded74 ^ -1;
       $133 = $131 & $expanded73;
       $134 = $133;
       $135 = HEAP32[$134>>2]|0;
       $arglist_next3 = (($134) + 4|0);
       HEAP32[$ap>>2] = $arglist_next3;
       $1178 = $110;$p$0 = $135;
      } else {
       $1178 = $110;$p$0 = 0;
      }
     } else {
      $1178 = $105;$p$0 = -1;
     }
    } while(0);
    $144 = $1178;$st$0 = 0;
    while(1) {
     $143 = HEAP8[$144>>0]|0;
     $145 = $143 << 24 >> 24;
     $146 = (($145) + -65)|0;
     $147 = ($146>>>0)>(57);
     if ($147) {
      label = 452;
      break L1;
     }
     $148 = (($144) + 1|0);
     $149 = ((3952 + (($st$0*58)|0)|0) + ($146)|0);
     $150 = HEAP8[$149>>0]|0;
     $151 = $150&255;
     $152 = (($151) + -1)|0;
     $153 = ($152>>>0)<(8);
     if ($153) {
      $144 = $148;$st$0 = $151;
     } else {
      $$lcssa350 = $144;$$lcssa352 = $148;$$lcssa353 = $150;$$lcssa354 = $151;$st$0$lcssa351 = $st$0;
      break;
     }
    }
    $154 = ($$lcssa353<<24>>24)==(0);
    if ($154) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    }
    $155 = ($$lcssa353<<24>>24)==(19);
    $156 = ($argpos$0|0)>(-1);
    L74: do {
     if ($155) {
      if ($156) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1180 = $1175;$1181 = $1176;
       label = 71;
      }
     } else {
      if ($156) {
       $157 = (($nl_type) + ($argpos$0<<2)|0);
       HEAP32[$157>>2] = $$lcssa354;
       $158 = (($nl_arg) + ($argpos$0<<3)|0);
       $159 = $158;
       $160 = $159;
       $161 = HEAP32[$160>>2]|0;
       $162 = (($159) + 4)|0;
       $163 = $162;
       $164 = HEAP32[$163>>2]|0;
       $1180 = $164;$1181 = $161;
       label = 71;
       break;
      }
      if (!($1)) {
       $$0$ph340 = 0;
       label = 453;
       break L1;
      }
      $165 = ($$lcssa353&255)>(20);
      if ($165) {
       $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
      } else {
       do {
        switch ($$lcssa354|0) {
        case 13:  {
         $arglist_current17 = HEAP32[$ap>>2]|0;
         $202 = $arglist_current17;
         $203 = (0 + 4|0);
         $expanded106 = $203;
         $expanded105 = (($expanded106) - 1)|0;
         $204 = (($202) + ($expanded105))|0;
         $205 = (0 + 4|0);
         $expanded110 = $205;
         $expanded109 = (($expanded110) - 1)|0;
         $expanded108 = $expanded109 ^ -1;
         $206 = $204 & $expanded108;
         $207 = $206;
         $208 = HEAP32[$207>>2]|0;
         $arglist_next18 = (($207) + 4|0);
         HEAP32[$ap>>2] = $arglist_next18;
         $209 = $208&65535;
         $210 = $209 << 16 >> 16;
         $211 = ($210|0)<(0);
         $212 = $211 << 31 >> 31;
         $sext94 = $208 << 16;
         $213 = $sext94 >> 16;
         $1182 = $$lcssa352;$267 = $213;$294 = $212;
         break L74;
         break;
        }
        case 15:  {
         $arglist_current23 = HEAP32[$ap>>2]|0;
         $221 = $arglist_current23;
         $222 = (0 + 4|0);
         $expanded120 = $222;
         $expanded119 = (($expanded120) - 1)|0;
         $223 = (($221) + ($expanded119))|0;
         $224 = (0 + 4|0);
         $expanded124 = $224;
         $expanded123 = (($expanded124) - 1)|0;
         $expanded122 = $expanded123 ^ -1;
         $225 = $223 & $expanded122;
         $226 = $225;
         $227 = HEAP32[$226>>2]|0;
         $arglist_next24 = (($226) + 4|0);
         HEAP32[$ap>>2] = $arglist_next24;
         $228 = $227&255;
         $229 = $228 << 24 >> 24;
         $230 = ($229|0)<(0);
         $231 = $230 << 31 >> 31;
         $sext = $227 << 24;
         $232 = $sext >> 24;
         $1182 = $$lcssa352;$267 = $232;$294 = $231;
         break L74;
         break;
        }
        case 11:  {
         $arglist_current11 = HEAP32[$ap>>2]|0;
         $183 = $arglist_current11;
         $184 = (0 + 4|0);
         $expanded92 = $184;
         $expanded91 = (($expanded92) - 1)|0;
         $185 = (($183) + ($expanded91))|0;
         $186 = (0 + 4|0);
         $expanded96 = $186;
         $expanded95 = (($expanded96) - 1)|0;
         $expanded94 = $expanded95 ^ -1;
         $187 = $185 & $expanded94;
         $188 = $187;
         $189 = HEAP32[$188>>2]|0;
         $arglist_next12 = (($188) + 4|0);
         HEAP32[$ap>>2] = $arglist_next12;
         $1182 = $$lcssa352;$267 = $189;$294 = 0;
         break L74;
         break;
        }
        case 9:  {
         $arglist_current5 = HEAP32[$ap>>2]|0;
         $166 = $arglist_current5;
         $167 = (0 + 4|0);
         $expanded78 = $167;
         $expanded77 = (($expanded78) - 1)|0;
         $168 = (($166) + ($expanded77))|0;
         $169 = (0 + 4|0);
         $expanded82 = $169;
         $expanded81 = (($expanded82) - 1)|0;
         $expanded80 = $expanded81 ^ -1;
         $170 = $168 & $expanded80;
         $171 = $170;
         $172 = HEAP32[$171>>2]|0;
         $arglist_next6 = (($171) + 4|0);
         HEAP32[$ap>>2] = $arglist_next6;
         $173 = $172;
         $1182 = $$lcssa352;$267 = $173;$294 = $1175;
         break L74;
         break;
        }
        case 16:  {
         $arglist_current26 = HEAP32[$ap>>2]|0;
         $233 = $arglist_current26;
         $234 = (0 + 4|0);
         $expanded127 = $234;
         $expanded126 = (($expanded127) - 1)|0;
         $235 = (($233) + ($expanded126))|0;
         $236 = (0 + 4|0);
         $expanded131 = $236;
         $expanded130 = (($expanded131) - 1)|0;
         $expanded129 = $expanded130 ^ -1;
         $237 = $235 & $expanded129;
         $238 = $237;
         $239 = HEAP32[$238>>2]|0;
         $arglist_next27 = (($238) + 4|0);
         HEAP32[$ap>>2] = $arglist_next27;
         $$mask$i39 = $239 & 255;
         $1182 = $$lcssa352;$267 = $$mask$i39;$294 = 0;
         break L74;
         break;
        }
        case 12:  {
         $arglist_current14 = HEAP32[$ap>>2]|0;
         $190 = $arglist_current14;
         $191 = (0 + 8|0);
         $expanded99 = $191;
         $expanded98 = (($expanded99) - 1)|0;
         $192 = (($190) + ($expanded98))|0;
         $193 = (0 + 8|0);
         $expanded103 = $193;
         $expanded102 = (($expanded103) - 1)|0;
         $expanded101 = $expanded102 ^ -1;
         $194 = $192 & $expanded101;
         $195 = $194;
         $196 = $195;
         $197 = $196;
         $198 = HEAP32[$197>>2]|0;
         $199 = (($196) + 4)|0;
         $200 = $199;
         $201 = HEAP32[$200>>2]|0;
         $arglist_next15 = (($195) + 8|0);
         HEAP32[$ap>>2] = $arglist_next15;
         $1182 = $$lcssa352;$267 = $198;$294 = $201;
         break L74;
         break;
        }
        case 10:  {
         $arglist_current8 = HEAP32[$ap>>2]|0;
         $174 = $arglist_current8;
         $175 = (0 + 4|0);
         $expanded85 = $175;
         $expanded84 = (($expanded85) - 1)|0;
         $176 = (($174) + ($expanded84))|0;
         $177 = (0 + 4|0);
         $expanded89 = $177;
         $expanded88 = (($expanded89) - 1)|0;
         $expanded87 = $expanded88 ^ -1;
         $178 = $176 & $expanded87;
         $179 = $178;
         $180 = HEAP32[$179>>2]|0;
         $arglist_next9 = (($179) + 4|0);
         HEAP32[$ap>>2] = $arglist_next9;
         $181 = ($180|0)<(0);
         $182 = $181 << 31 >> 31;
         $1182 = $$lcssa352;$267 = $180;$294 = $182;
         break L74;
         break;
        }
        case 17:  {
         $arglist_current29 = HEAP32[$ap>>2]|0;
         $240 = $arglist_current29;
         $241 = (0 + 8|0);
         $expanded134 = $241;
         $expanded133 = (($expanded134) - 1)|0;
         $242 = (($240) + ($expanded133))|0;
         $243 = (0 + 8|0);
         $expanded138 = $243;
         $expanded137 = (($expanded138) - 1)|0;
         $expanded136 = $expanded137 ^ -1;
         $244 = $242 & $expanded136;
         $245 = $244;
         $246 = +HEAPF64[$245>>3];
         $arglist_next30 = (($245) + 8|0);
         HEAP32[$ap>>2] = $arglist_next30;
         HEAPF64[tempDoublePtr>>3] = $246;$247 = HEAP32[tempDoublePtr>>2]|0;
         $248 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $247;$294 = $248;
         break L74;
         break;
        }
        case 14:  {
         $arglist_current20 = HEAP32[$ap>>2]|0;
         $214 = $arglist_current20;
         $215 = (0 + 4|0);
         $expanded113 = $215;
         $expanded112 = (($expanded113) - 1)|0;
         $216 = (($214) + ($expanded112))|0;
         $217 = (0 + 4|0);
         $expanded117 = $217;
         $expanded116 = (($expanded117) - 1)|0;
         $expanded115 = $expanded116 ^ -1;
         $218 = $216 & $expanded115;
         $219 = $218;
         $220 = HEAP32[$219>>2]|0;
         $arglist_next21 = (($219) + 4|0);
         HEAP32[$ap>>2] = $arglist_next21;
         $$mask1$i38 = $220 & 65535;
         $1182 = $$lcssa352;$267 = $$mask1$i38;$294 = 0;
         break L74;
         break;
        }
        case 18:  {
         $arglist_current32 = HEAP32[$ap>>2]|0;
         $249 = $arglist_current32;
         $250 = (0 + 8|0);
         $expanded141 = $250;
         $expanded140 = (($expanded141) - 1)|0;
         $251 = (($249) + ($expanded140))|0;
         $252 = (0 + 8|0);
         $expanded145 = $252;
         $expanded144 = (($expanded145) - 1)|0;
         $expanded143 = $expanded144 ^ -1;
         $253 = $251 & $expanded143;
         $254 = $253;
         $255 = +HEAPF64[$254>>3];
         $arglist_next33 = (($254) + 8|0);
         HEAP32[$ap>>2] = $arglist_next33;
         HEAPF64[tempDoublePtr>>3] = $255;$256 = HEAP32[tempDoublePtr>>2]|0;
         $257 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $256;$294 = $257;
         break L74;
         break;
        }
        default: {
         $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
         break L74;
        }
        }
       } while(0);
      }
     }
    } while(0);
    if ((label|0) == 71) {
     label = 0;
     if ($1) {
      $1182 = $$lcssa352;$267 = $1181;$294 = $1180;
     } else {
      $$be = $$lcssa352;$$be341 = $1180;$$be342 = $1181;$l$0$be = $37;$l10n$0$be = $l10n$3;
      break;
     }
    }
    $258 = HEAP8[$$lcssa350>>0]|0;
    $259 = $258 << 24 >> 24;
    $260 = ($st$0$lcssa351|0)!=(0);
    $261 = $259 & 15;
    $262 = ($261|0)==(3);
    $or$cond15 = $260 & $262;
    $263 = $259 & -33;
    $t$0 = $or$cond15 ? $263 : $259;
    $264 = $fl$1 & 8192;
    $265 = ($264|0)==(0);
    $266 = $fl$1 & -65537;
    $fl$1$ = $265 ? $fl$1 : $266;
    L96: do {
     switch ($t$0|0) {
     case 105: case 100:  {
      $332 = ($294|0)<(0);
      if ($332) {
       $333 = (_i64Subtract(0,0,($267|0),($294|0))|0);
       $334 = tempRet0;
       $339 = $334;$341 = $333;$pl$0 = 1;$prefix$0 = 4416;
       label = 96;
       break L96;
      }
      $335 = $fl$1$ & 2048;
      $336 = ($335|0)==(0);
      if ($336) {
       $337 = $fl$1$ & 1;
       $338 = ($337|0)==(0);
       $$ = $338 ? 4416 : ((4416 + 2|0));
       $339 = $294;$341 = $267;$pl$0 = $337;$prefix$0 = $$;
       label = 96;
      } else {
       $339 = $294;$341 = $267;$pl$0 = 1;$prefix$0 = ((4416 + 1|0));
       label = 96;
      }
      break;
     }
     case 112:  {
      $289 = ($p$0>>>0)>(8);
      $290 = $289 ? $p$0 : 8;
      $291 = $fl$1$ | 8;
      $fl$3 = $291;$p$1 = $290;$t$1 = 120;
      label = 82;
      break;
     }
     case 83:  {
      $393 = $267;
      $394 = ($p$0|0)==(0);
      if ($394) {
       $1189 = $267;$1190 = $393;$i$0$lcssa272 = 0;
       label = 119;
      } else {
       $1187 = $393;$1188 = $267;$p$4271 = $p$0;
       label = 114;
      }
      break;
     }
     case 88: case 120:  {
      $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
      label = 82;
      break;
     }
     case 111:  {
      $315 = ($267|0)==(0);
      $316 = ($294|0)==(0);
      $317 = $315 & $316;
      if ($317) {
       $$0$lcssa$i52 = $2;
      } else {
       $$03$i49 = $2;$319 = $267;$323 = $294;
       while(1) {
        $318 = $319 & 7;
        $320 = $318 | 48;
        $321 = $320&255;
        $322 = (($$03$i49) + -1|0);
        HEAP8[$322>>0] = $321;
        $324 = (_bitshift64Lshr(($319|0),($323|0),3)|0);
        $325 = tempRet0;
        $326 = ($324|0)==(0);
        $327 = ($325|0)==(0);
        $328 = $326 & $327;
        if ($328) {
         $$lcssa385 = $322;
         break;
        } else {
         $$03$i49 = $322;$319 = $324;$323 = $325;
        }
       }
       $$0$lcssa$i52 = $$lcssa385;
      }
      $329 = $fl$1$ & 8;
      $330 = ($329|0)==(0);
      $or$cond19 = $330 | $317;
      $$25 = $or$cond19 ? 4416 : ((4416 + 5|0));
      $331 = $or$cond19&1;
      $$26 = $331 ^ 1;
      $369 = $267;$371 = $294;$a$0 = $$0$lcssa$i52;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$26;$prefix$1 = $$25;
      label = 104;
      break;
     }
     case 110:  {
      switch ($st$0$lcssa351|0) {
      case 6:  {
       $281 = $267;
       HEAP32[$281>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 7:  {
       $282 = ($cnt$1|0)<(0);
       $283 = $282 << 31 >> 31;
       $284 = $267;
       $285 = $284;
       $286 = $285;
       HEAP32[$286>>2] = $cnt$1;
       $287 = (($285) + 4)|0;
       $288 = $287;
       HEAP32[$288>>2] = $283;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 2:  {
       $270 = ($cnt$1|0)<(0);
       $271 = $270 << 31 >> 31;
       $272 = $267;
       $273 = $272;
       $274 = $273;
       HEAP32[$274>>2] = $cnt$1;
       $275 = (($273) + 4)|0;
       $276 = $275;
       HEAP32[$276>>2] = $271;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 3:  {
       $277 = $cnt$1&65535;
       $278 = $267;
       HEAP16[$278>>1] = $277;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 4:  {
       $279 = $cnt$1&255;
       $280 = $267;
       HEAP8[$280>>0] = $279;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 0:  {
       $268 = $267;
       HEAP32[$268>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 1:  {
       $269 = $267;
       HEAP32[$269>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      default: {
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
      }
      }
      break;
     }
     case 117:  {
      $339 = $294;$341 = $267;$pl$0 = 0;$prefix$0 = 4416;
      label = 96;
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      HEAP32[tempDoublePtr>>2] = $267;HEAP32[tempDoublePtr+4>>2] = $294;$432 = +HEAPF64[tempDoublePtr>>3];
      HEAP32[$e2$i>>2] = 0;
      $433 = ($294|0)<(0);
      if ($433) {
       $434 = -$432;
       $$013$i = $434;$pl$0$i = 1;$prefix$0$i = 4440;
      } else {
       $435 = $fl$1$ & 2048;
       $436 = ($435|0)==(0);
       if ($436) {
        $437 = $fl$1$ & 1;
        $438 = ($437|0)==(0);
        $$$i = $438 ? ((4440 + 1|0)) : ((4440 + 6|0));
        $$013$i = $432;$pl$0$i = $437;$prefix$0$i = $$$i;
       } else {
        $$013$i = $432;$pl$0$i = 1;$prefix$0$i = ((4440 + 3|0));
       }
      }
      HEAPF64[tempDoublePtr>>3] = $$013$i;$439 = HEAP32[tempDoublePtr>>2]|0;
      $440 = HEAP32[tempDoublePtr+4>>2]|0;
      $441 = $440 & 2146435072;
      $442 = ($441>>>0)<(2146435072);
      $443 = (0)<(0);
      $444 = ($441|0)==(2146435072);
      $445 = $444 & $443;
      $446 = $442 | $445;
      do {
       if ($446) {
        $472 = (+_frexpl($$013$i,$e2$i));
        $473 = $472 * 2.0;
        $474 = $473 != 0.0;
        if ($474) {
         $475 = HEAP32[$e2$i>>2]|0;
         $476 = (($475) + -1)|0;
         HEAP32[$e2$i>>2] = $476;
        }
        $477 = $t$0 | 32;
        $478 = ($477|0)==(97);
        if ($478) {
         $479 = $t$0 & 32;
         $480 = ($479|0)==(0);
         $481 = (($prefix$0$i) + 9|0);
         $prefix$0$$i = $480 ? $prefix$0$i : $481;
         $482 = $pl$0$i | 2;
         $483 = ($p$0>>>0)>(11);
         do {
          if ($483) {
           $$1$i = $473;
          } else {
           $484 = (12 - ($p$0))|0;
           $re$1187$i = $484;$round$0186$i = 8.0;
           while(1) {
            $485 = (($re$1187$i) + -1)|0;
            $486 = $round$0186$i * 16.0;
            $487 = ($485|0)==(0);
            if ($487) {
             $$lcssa378 = $486;
             break;
            } else {
             $re$1187$i = $485;$round$0186$i = $486;
            }
           }
           $488 = HEAP8[$prefix$0$$i>>0]|0;
           $489 = ($488<<24>>24)==(45);
           if ($489) {
            $490 = -$473;
            $491 = $490 - $$lcssa378;
            $492 = $$lcssa378 + $491;
            $493 = -$492;
            $$1$i = $493;
            break;
           } else {
            $494 = $473 + $$lcssa378;
            $495 = $494 - $$lcssa378;
            $$1$i = $495;
            break;
           }
          }
         } while(0);
         $496 = HEAP32[$e2$i>>2]|0;
         $497 = ($496|0)<(0);
         $498 = (0 - ($496))|0;
         $499 = $497 ? $498 : $496;
         $500 = ($499|0)<(0);
         if ($500) {
          $501 = ($499|0)<(0);
          $502 = $501 << 31 >> 31;
          $$05$i$i = $7;$503 = $499;$504 = $502;
          while(1) {
           $505 = (___uremdi3(($503|0),($504|0),10,0)|0);
           $506 = tempRet0;
           $507 = $505 | 48;
           $508 = $507&255;
           $509 = (($$05$i$i) + -1|0);
           HEAP8[$509>>0] = $508;
           $510 = (___udivdi3(($503|0),($504|0),10,0)|0);
           $511 = tempRet0;
           $512 = ($504>>>0)>(9);
           $513 = ($503>>>0)>(4294967295);
           $514 = ($504|0)==(9);
           $515 = $514 & $513;
           $516 = $512 | $515;
           if ($516) {
            $$05$i$i = $509;$503 = $510;$504 = $511;
           } else {
            $$lcssa379 = $509;$1191 = $510;$1192 = $511;
            break;
           }
          }
          $$0$lcssa$i56$i = $$lcssa379;$$01$lcssa$off0$i$i = $1191;
         } else {
          $$0$lcssa$i56$i = $7;$$01$lcssa$off0$i$i = $499;
         }
         $517 = ($$01$lcssa$off0$i$i|0)==(0);
         if ($517) {
          $$1$lcssa$i$i = $$0$lcssa$i56$i;
         } else {
          $$12$i$i = $$0$lcssa$i56$i;$y$03$i$i = $$01$lcssa$off0$i$i;
          while(1) {
           $518 = (($y$03$i$i>>>0) % 10)&-1;
           $519 = $518 | 48;
           $520 = $519&255;
           $521 = (($$12$i$i) + -1|0);
           HEAP8[$521>>0] = $520;
           $522 = (($y$03$i$i>>>0) / 10)&-1;
           $523 = ($y$03$i$i>>>0)<(10);
           if ($523) {
            $$lcssa381 = $521;
            break;
           } else {
            $$12$i$i = $521;$y$03$i$i = $522;
           }
          }
          $$1$lcssa$i$i = $$lcssa381;
         }
         $524 = ($$1$lcssa$i$i|0)==($7|0);
         if ($524) {
          HEAP8[$8>>0] = 48;
          $estr$0$i = $8;
         } else {
          $estr$0$i = $$1$lcssa$i$i;
         }
         $525 = HEAP32[$e2$i>>2]|0;
         $526 = $525 >> 31;
         $527 = $526 & 2;
         $528 = (($527) + 43)|0;
         $529 = $528&255;
         $530 = (($estr$0$i) + -1|0);
         HEAP8[$530>>0] = $529;
         $531 = (($t$0) + 15)|0;
         $532 = $531&255;
         $533 = (($estr$0$i) + -2|0);
         HEAP8[$533>>0] = $532;
         $534 = $fl$1$ & 8;
         $535 = ($534|0)==(0);
         do {
          if ($535) {
           $notrhs$i = ($p$0|0)<(1);
           if ($notrhs$i) {
            $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
            while(1) {
             $536 = (~~(($$2$us$us$i)));
             $537 = (4496 + ($536)|0);
             $538 = HEAP8[$537>>0]|0;
             $539 = $538&255;
             $540 = $539 | $479;
             $541 = $540&255;
             $542 = (($s$0$us$us$i) + 1|0);
             HEAP8[$s$0$us$us$i>>0] = $541;
             $543 = (+($536|0));
             $544 = $$2$us$us$i - $543;
             $545 = $544 * 16.0;
             $546 = $542;
             $547 = (($546) - ($0))|0;
             $548 = ($547|0)!=(1);
             $notlhs$us$us$i = $545 == 0.0;
             $or$cond$i80 = $548 | $notlhs$us$us$i;
             if ($or$cond$i80) {
              $s$1$us$us$i = $542;
             } else {
              $549 = (($s$0$us$us$i) + 2|0);
              HEAP8[$542>>0] = 46;
              $s$1$us$us$i = $549;
             }
             $550 = $545 != 0.0;
             if ($550) {
              $$2$us$us$i = $545;$s$0$us$us$i = $s$1$us$us$i;
             } else {
              $s$1$us$us$i$lcssa = $s$1$us$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$us$i$lcssa;
            break;
           } else {
            $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
            while(1) {
             $551 = (~~(($$2$us$i)));
             $552 = (4496 + ($551)|0);
             $553 = HEAP8[$552>>0]|0;
             $554 = $553&255;
             $555 = $554 | $479;
             $556 = $555&255;
             $557 = (($s$0$us$i) + 1|0);
             HEAP8[$s$0$us$i>>0] = $556;
             $558 = (+($551|0));
             $559 = $$2$us$i - $558;
             $560 = $559 * 16.0;
             $561 = $557;
             $562 = (($561) - ($0))|0;
             $563 = ($562|0)==(1);
             if ($563) {
              $564 = (($s$0$us$i) + 2|0);
              HEAP8[$557>>0] = 46;
              $s$1$us$i = $564;
             } else {
              $s$1$us$i = $557;
             }
             $565 = $560 != 0.0;
             if ($565) {
              $$2$us$i = $560;$s$0$us$i = $s$1$us$i;
             } else {
              $s$1$us$i$lcssa = $s$1$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$i$lcssa;
            break;
           }
          } else {
           $$2$i = $$1$i;$s$0$i = $buf$i;
           while(1) {
            $566 = (~~(($$2$i)));
            $567 = (4496 + ($566)|0);
            $568 = HEAP8[$567>>0]|0;
            $569 = $568&255;
            $570 = $569 | $479;
            $571 = $570&255;
            $572 = (($s$0$i) + 1|0);
            HEAP8[$s$0$i>>0] = $571;
            $573 = (+($566|0));
            $574 = $$2$i - $573;
            $575 = $574 * 16.0;
            $576 = $572;
            $577 = (($576) - ($0))|0;
            $578 = ($577|0)==(1);
            if ($578) {
             $579 = (($s$0$i) + 2|0);
             HEAP8[$572>>0] = 46;
             $s$1$i = $579;
            } else {
             $s$1$i = $572;
            }
            $580 = $575 != 0.0;
            if ($580) {
             $$2$i = $575;$s$0$i = $s$1$i;
            } else {
             $s$1$i$lcssa = $s$1$i;
             break;
            }
           }
           $s$1$lcssa$i = $s$1$i$lcssa;
          }
         } while(0);
         $581 = ($p$0|0)!=(0);
         $$pre308$i = $s$1$lcssa$i;
         $582 = (($11) + ($$pre308$i))|0;
         $583 = ($582|0)<($p$0|0);
         $or$cond274 = $581 & $583;
         $584 = $533;
         if ($or$cond274) {
          $585 = (($12) + ($p$0))|0;
          $586 = (($585) - ($584))|0;
          $l$0$i = $586;
         } else {
          $587 = (($10) - ($584))|0;
          $588 = (($587) + ($$pre308$i))|0;
          $l$0$i = $588;
         }
         $589 = (($l$0$i) + ($482))|0;
         $590 = $fl$1$ & 73728;
         $591 = ($590|0)==(0);
         $592 = ($w$1|0)>($589|0);
         $or$cond$i60$i = $591 & $592;
         if ($or$cond$i60$i) {
          $593 = (($w$1) - ($589))|0;
          $594 = ($593>>>0)>(256);
          $595 = $594 ? 256 : $593;
          _memset(($pad$i|0),32,($595|0))|0;
          $596 = ($593>>>0)>(255);
          if ($596) {
           $$01$i62$i = $593;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $597 = (($$01$i62$i) + -256)|0;
            $598 = ($597>>>0)>(255);
            if ($598) {
             $$01$i62$i = $597;
            } else {
             break;
            }
           }
           $599 = $593 & 255;
           $$0$lcssa$i64$i = $599;
          } else {
           $$0$lcssa$i64$i = $593;
          }
          (___fwritex($pad$i,$$0$lcssa$i64$i,$f)|0);
         }
         (___fwritex($prefix$0$$i,$482,$f)|0);
         $600 = ($590|0)==(65536);
         $or$cond$i67$i = $600 & $592;
         if ($or$cond$i67$i) {
          $601 = (($w$1) - ($589))|0;
          $602 = ($601>>>0)>(256);
          $603 = $602 ? 256 : $601;
          _memset(($pad$i|0),48,($603|0))|0;
          $604 = ($601>>>0)>(255);
          if ($604) {
           $$01$i69$i = $601;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $605 = (($$01$i69$i) + -256)|0;
            $606 = ($605>>>0)>(255);
            if ($606) {
             $$01$i69$i = $605;
            } else {
             break;
            }
           }
           $607 = $601 & 255;
           $$0$lcssa$i71$i = $607;
          } else {
           $$0$lcssa$i71$i = $601;
          }
          (___fwritex($pad$i,$$0$lcssa$i71$i,$f)|0);
         }
         $608 = (($$pre308$i) - ($0))|0;
         (___fwritex($buf$i,$608,$f)|0);
         $609 = $533;
         $610 = (($9) - ($609))|0;
         $611 = (($l$0$i) - ($610))|0;
         $612 = (($611) - ($608))|0;
         $613 = ($612|0)>(0);
         if ($613) {
          $614 = ($612>>>0)>(256);
          $615 = $614 ? 256 : $612;
          _memset(($pad$i|0),48,($615|0))|0;
          $616 = ($612>>>0)>(255);
          if ($616) {
           $$01$i75$i = $612;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $617 = (($$01$i75$i) + -256)|0;
            $618 = ($617>>>0)>(255);
            if ($618) {
             $$01$i75$i = $617;
            } else {
             break;
            }
           }
           $619 = $612 & 255;
           $$0$lcssa$i77$i = $619;
          } else {
           $$0$lcssa$i77$i = $612;
          }
          (___fwritex($pad$i,$$0$lcssa$i77$i,$f)|0);
         }
         (___fwritex($533,$610,$f)|0);
         $620 = ($590|0)==(8192);
         $or$cond$i80$i = $620 & $592;
         if ($or$cond$i80$i) {
          $621 = (($w$1) - ($589))|0;
          $622 = ($621>>>0)>(256);
          $623 = $622 ? 256 : $621;
          _memset(($pad$i|0),32,($623|0))|0;
          $624 = ($621>>>0)>(255);
          if ($624) {
           $$01$i82$i = $621;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $625 = (($$01$i82$i) + -256)|0;
            $626 = ($625>>>0)>(255);
            if ($626) {
             $$01$i82$i = $625;
            } else {
             break;
            }
           }
           $627 = $621 & 255;
           $$0$lcssa$i84$i = $627;
          } else {
           $$0$lcssa$i84$i = $621;
          }
          (___fwritex($pad$i,$$0$lcssa$i84$i,$f)|0);
         }
         $w$25$i = $592 ? $w$1 : $589;
         $$0$i = $w$25$i;
         break;
        }
        $628 = ($p$0|0)<(0);
        $$p$i = $628 ? 6 : $p$0;
        if ($474) {
         $629 = $473 * 268435456.0;
         $630 = HEAP32[$e2$i>>2]|0;
         $631 = (($630) + -28)|0;
         HEAP32[$e2$i>>2] = $631;
         $$3$i = $629;$632 = $631;
        } else {
         $$pre$i = HEAP32[$e2$i>>2]|0;
         $$3$i = $473;$632 = $$pre$i;
        }
        $633 = ($632|0)<(0);
        $$39$i = $633 ? $big$i : $13;
        $634 = $$39$i;
        $$4$i = $$3$i;$z$0$i = $$39$i;
        while(1) {
         $635 = (~~(($$4$i))>>>0);
         HEAP32[$z$0$i>>2] = $635;
         $636 = (($z$0$i) + 4|0);
         $637 = (+($635>>>0));
         $638 = $$4$i - $637;
         $639 = $638 * 1.0E+9;
         $640 = $639 != 0.0;
         if ($640) {
          $$4$i = $639;$z$0$i = $636;
         } else {
          $$lcssa355 = $636;
          break;
         }
        }
        $$pr$i = HEAP32[$e2$i>>2]|0;
        $641 = ($$pr$i|0)>(0);
        if ($641) {
         $642 = $$pr$i;$a$1261$i = $$39$i;$z$1260$i = $$lcssa355;
         while(1) {
          $643 = ($642|0)>(29);
          $644 = $643 ? 29 : $642;
          $d$0253$i = (($z$1260$i) + -4|0);
          $645 = ($d$0253$i>>>0)<($a$1261$i>>>0);
          do {
           if ($645) {
            $a$2$ph$i = $a$1261$i;
           } else {
            $655 = $z$1260$i;$carry$0254$i = 0;$d$0255$i = $d$0253$i;
            while(1) {
             $646 = HEAP32[$d$0255$i>>2]|0;
             $647 = (_bitshift64Shl(($646|0),0,($644|0))|0);
             $648 = tempRet0;
             $649 = (_i64Add(($647|0),($648|0),($carry$0254$i|0),0)|0);
             $650 = tempRet0;
             $651 = (___uremdi3(($649|0),($650|0),1000000000,0)|0);
             $652 = tempRet0;
             HEAP32[$d$0255$i>>2] = $651;
             $653 = (___udivdi3(($649|0),($650|0),1000000000,0)|0);
             $654 = tempRet0;
             $d$0$i = (($655) + -8|0);
             $656 = ($d$0$i>>>0)<($a$1261$i>>>0);
             if ($656) {
              $$lcssa356 = $653;
              break;
             } else {
              $655$phi = $d$0255$i;$carry$0254$i = $653;$d$0255$i = $d$0$i;$655 = $655$phi;
             }
            }
            $657 = ($$lcssa356|0)==(0);
            if ($657) {
             $a$2$ph$i = $a$1261$i;
             break;
            }
            $658 = (($a$1261$i) + -4|0);
            HEAP32[$658>>2] = $$lcssa356;
            $a$2$ph$i = $658;
           }
          } while(0);
          $z$2$i = $z$1260$i;
          while(1) {
           $659 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
           if (!($659)) {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
           $660 = (($z$2$i) + -4|0);
           $661 = HEAP32[$660>>2]|0;
           $662 = ($661|0)==(0);
           if ($662) {
            $z$2$i = $660;
           } else {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
          }
          $663 = HEAP32[$e2$i>>2]|0;
          $664 = (($663) - ($644))|0;
          HEAP32[$e2$i>>2] = $664;
          $665 = ($664|0)>(0);
          if ($665) {
           $642 = $664;$a$1261$i = $a$2$ph$i;$z$1260$i = $z$2$i$lcssa;
          } else {
           $$lcssa357 = $664;$a$2$ph$i$lcssa = $a$2$ph$i;$z$2$i$lcssa$lcssa = $z$2$i$lcssa;
           break;
          }
         }
         $$pr154$i = $$lcssa357;$a$1$lcssa$i = $a$2$ph$i$lcssa;$z$1$lcssa$i = $z$2$i$lcssa$lcssa;
        } else {
         $$pr154$i = $$pr$i;$a$1$lcssa$i = $$39$i;$z$1$lcssa$i = $$lcssa355;
        }
        $666 = ($$pr154$i|0)<(0);
        do {
         if ($666) {
          $667 = (($$p$i) + 25)|0;
          $668 = (($667|0) / 9)&-1;
          $669 = (($668) + 1)|0;
          $670 = ($477|0)==(102);
          if ($670) {
           $671 = (($$39$i) + ($669<<2)|0);
           $672 = $$pr154$i;$a$3248$us$i = $a$1$lcssa$i;$z$3247$us$i = $z$1$lcssa$i;
           while(1) {
            $673 = ($672|0)<(-9);
            $674 = (0 - ($672))|0;
            $$26$us$i = $673 ? 9 : $674;
            $675 = ($a$3248$us$i>>>0)<($z$3247$us$i>>>0);
            do {
             if ($675) {
              $700 = 1 << $$26$us$i;
              $693 = (($700) + -1)|0;
              $697 = 1000000000 >>> $$26$us$i;
              $carry3$0242$us$i = 0;$d$1241$us$i = $a$3248$us$i;
              while(1) {
               $691 = HEAP32[$d$1241$us$i>>2]|0;
               $692 = $691 & $693;
               $694 = $691 >>> $$26$us$i;
               $695 = (($694) + ($carry3$0242$us$i))|0;
               HEAP32[$d$1241$us$i>>2] = $695;
               $696 = Math_imul($692, $697)|0;
               $698 = (($d$1241$us$i) + 4|0);
               $699 = ($698>>>0)<($z$3247$us$i>>>0);
               if ($699) {
                $carry3$0242$us$i = $696;$d$1241$us$i = $698;
               } else {
                $$lcssa359 = $696;
                break;
               }
              }
              $679 = HEAP32[$a$3248$us$i>>2]|0;
              $680 = ($679|0)==(0);
              $681 = (($a$3248$us$i) + 4|0);
              $$a$3$us$i = $680 ? $681 : $a$3248$us$i;
              $682 = ($$lcssa359|0)==(0);
              if ($682) {
               $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $z$3247$us$i;
               break;
              }
              $683 = (($z$3247$us$i) + 4|0);
              HEAP32[$z$3247$us$i>>2] = $$lcssa359;
              $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $683;
             } else {
              $676 = HEAP32[$a$3248$us$i>>2]|0;
              $677 = ($676|0)==(0);
              $678 = (($a$3248$us$i) + 4|0);
              $$a$3$us309$i = $677 ? $678 : $a$3248$us$i;
              $$a$3$us310$i = $$a$3$us309$i;$z$4$us$i = $z$3247$us$i;
             }
            } while(0);
            $684 = $z$4$us$i;
            $685 = (($684) - ($634))|0;
            $686 = $685 >> 2;
            $687 = ($686|0)>($669|0);
            $$z$4$us$i = $687 ? $671 : $z$4$us$i;
            $688 = HEAP32[$e2$i>>2]|0;
            $689 = (($688) + ($$26$us$i))|0;
            HEAP32[$e2$i>>2] = $689;
            $690 = ($689|0)<(0);
            if ($690) {
             $672 = $689;$a$3248$us$i = $$a$3$us310$i;$z$3247$us$i = $$z$4$us$i;
            } else {
             $$a$3$us310$i$lcssa = $$a$3$us310$i;$$z$4$us$i$lcssa = $$z$4$us$i;
             break;
            }
           }
           $a$3$lcssa$i = $$a$3$us310$i$lcssa;$z$3$lcssa$i = $$z$4$us$i$lcssa;
           break;
          }
          $701 = $$pr154$i;$a$3248$i = $a$1$lcssa$i;$z$3247$i = $z$1$lcssa$i;
          while(1) {
           $702 = ($701|0)<(-9);
           $703 = (0 - ($701))|0;
           $$26$i = $702 ? 9 : $703;
           $704 = ($a$3248$i>>>0)<($z$3247$i>>>0);
           do {
            if ($704) {
             $708 = 1 << $$26$i;
             $709 = (($708) + -1)|0;
             $710 = 1000000000 >>> $$26$i;
             $carry3$0242$i = 0;$d$1241$i = $a$3248$i;
             while(1) {
              $711 = HEAP32[$d$1241$i>>2]|0;
              $712 = $711 & $709;
              $713 = $711 >>> $$26$i;
              $714 = (($713) + ($carry3$0242$i))|0;
              HEAP32[$d$1241$i>>2] = $714;
              $715 = Math_imul($712, $710)|0;
              $716 = (($d$1241$i) + 4|0);
              $717 = ($716>>>0)<($z$3247$i>>>0);
              if ($717) {
               $carry3$0242$i = $715;$d$1241$i = $716;
              } else {
               $$lcssa358 = $715;
               break;
              }
             }
             $718 = HEAP32[$a$3248$i>>2]|0;
             $719 = ($718|0)==(0);
             $720 = (($a$3248$i) + 4|0);
             $$a$3$i = $719 ? $720 : $a$3248$i;
             $721 = ($$lcssa358|0)==(0);
             if ($721) {
              $$a$3312$i = $$a$3$i;$z$4$i = $z$3247$i;
              break;
             }
             $722 = (($z$3247$i) + 4|0);
             HEAP32[$z$3247$i>>2] = $$lcssa358;
             $$a$3312$i = $$a$3$i;$z$4$i = $722;
            } else {
             $705 = HEAP32[$a$3248$i>>2]|0;
             $706 = ($705|0)==(0);
             $707 = (($a$3248$i) + 4|0);
             $$a$3311$i = $706 ? $707 : $a$3248$i;
             $$a$3312$i = $$a$3311$i;$z$4$i = $z$3247$i;
            }
           } while(0);
           $723 = $z$4$i;
           $724 = $$a$3312$i;
           $725 = (($723) - ($724))|0;
           $726 = $725 >> 2;
           $727 = ($726|0)>($669|0);
           if ($727) {
            $728 = (($$a$3312$i) + ($669<<2)|0);
            $z$5$i = $728;
           } else {
            $z$5$i = $z$4$i;
           }
           $729 = HEAP32[$e2$i>>2]|0;
           $730 = (($729) + ($$26$i))|0;
           HEAP32[$e2$i>>2] = $730;
           $731 = ($730|0)<(0);
           if ($731) {
            $701 = $730;$a$3248$i = $$a$3312$i;$z$3247$i = $z$5$i;
           } else {
            $$a$3312$i$lcssa = $$a$3312$i;$z$5$i$lcssa = $z$5$i;
            break;
           }
          }
          $a$3$lcssa$i = $$a$3312$i$lcssa;$z$3$lcssa$i = $z$5$i$lcssa;
         } else {
          $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
         }
        } while(0);
        $732 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
        do {
         if ($732) {
          $733 = $a$3$lcssa$i;
          $734 = (($634) - ($733))|0;
          $735 = $734 >> 2;
          $736 = ($735*9)|0;
          $737 = HEAP32[$a$3$lcssa$i>>2]|0;
          $738 = ($737>>>0)<(10);
          if ($738) {
           $e$1$i = $736;
           break;
          }
          $e$0237$i = $736;$i$0236$i = 10;
          while(1) {
           $739 = ($i$0236$i*10)|0;
           $740 = (($e$0237$i) + 1)|0;
           $741 = ($737>>>0)<($739>>>0);
           if ($741) {
            $$lcssa360 = $740;
            break;
           } else {
            $e$0237$i = $740;$i$0236$i = $739;
           }
          }
          $e$1$i = $$lcssa360;
         } else {
          $e$1$i = 0;
         }
        } while(0);
        $742 = ($477|0)!=(102);
        $743 = $742 ? $e$1$i : 0;
        $744 = (($$p$i) - ($743))|0;
        $745 = ($477|0)==(103);
        $746 = ($$p$i|0)!=(0);
        $$27$i = $746 & $745;
        $$neg159$i = $$27$i << 31 >> 31;
        $747 = (($744) + ($$neg159$i))|0;
        $748 = $z$3$lcssa$i;
        $749 = (($748) - ($634))|0;
        $750 = $749 >> 2;
        $751 = ($750*9)|0;
        $752 = (($751) + -9)|0;
        $753 = ($747|0)<($752|0);
        if ($753) {
         $754 = (($747) + 9216)|0;
         $755 = (($754|0) / 9)&-1;
         $$sum$i = (($755) + -1023)|0;
         $756 = (($$39$i) + ($$sum$i<<2)|0);
         $757 = (($754|0) % 9)&-1;
         $j$0229$i = (($757) + 1)|0;
         $758 = ($j$0229$i|0)<(9);
         if ($758) {
          $i$1230$i = 10;$j$0231$i = $j$0229$i;
          while(1) {
           $759 = ($i$1230$i*10)|0;
           $j$0$i = (($j$0231$i) + 1)|0;
           $exitcond$i = ($j$0231$i|0)==(8);
           if ($exitcond$i) {
            $$lcssa361 = $759;
            break;
           } else {
            $i$1230$i = $759;$j$0231$i = $j$0$i;
           }
          }
          $i$1$lcssa$i = $$lcssa361;
         } else {
          $i$1$lcssa$i = 10;
         }
         $760 = HEAP32[$756>>2]|0;
         $761 = (($760>>>0) % ($i$1$lcssa$i>>>0))&-1;
         $762 = ($761|0)==(0);
         if ($762) {
          $$sum21$i = (($755) + -1022)|0;
          $763 = (($$39$i) + ($$sum21$i<<2)|0);
          $764 = ($763|0)==($z$3$lcssa$i|0);
          if ($764) {
           $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
          } else {
           label = 274;
          }
         } else {
          label = 274;
         }
         do {
          if ((label|0) == 274) {
           label = 0;
           $765 = (($760>>>0) / ($i$1$lcssa$i>>>0))&-1;
           $766 = $765 & 1;
           $767 = ($766|0)==(0);
           $$28$i = $767 ? 9007199254740992.0 : 9007199254740994.0;
           $768 = (($i$1$lcssa$i|0) / 2)&-1;
           $769 = ($761>>>0)<($768>>>0);
           do {
            if ($769) {
             $small$0$i = 0.5;
            } else {
             $770 = ($761|0)==($768|0);
             if ($770) {
              $$sum22$i = (($755) + -1022)|0;
              $771 = (($$39$i) + ($$sum22$i<<2)|0);
              $772 = ($771|0)==($z$3$lcssa$i|0);
              if ($772) {
               $small$0$i = 1.0;
               break;
              }
             }
             $small$0$i = 1.5;
            }
           } while(0);
           $773 = ($pl$0$i|0)==(0);
           do {
            if ($773) {
             $round6$1$i = $$28$i;$small$1$i = $small$0$i;
            } else {
             $774 = HEAP8[$prefix$0$i>>0]|0;
             $775 = ($774<<24>>24)==(45);
             if (!($775)) {
              $round6$1$i = $$28$i;$small$1$i = $small$0$i;
              break;
             }
             $776 = -$$28$i;
             $777 = -$small$0$i;
             $round6$1$i = $776;$small$1$i = $777;
            }
           } while(0);
           $778 = (($760) - ($761))|0;
           HEAP32[$756>>2] = $778;
           $779 = $round6$1$i + $small$1$i;
           $780 = $779 != $round6$1$i;
           if (!($780)) {
            $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
            break;
           }
           $781 = (($778) + ($i$1$lcssa$i))|0;
           HEAP32[$756>>2] = $781;
           $782 = ($781>>>0)>(999999999);
           if ($782) {
            $a$5223$i = $a$3$lcssa$i;$d$2222$i = $756;
            while(1) {
             $783 = (($d$2222$i) + -4|0);
             HEAP32[$d$2222$i>>2] = 0;
             $784 = ($783>>>0)<($a$5223$i>>>0);
             if ($784) {
              $785 = (($a$5223$i) + -4|0);
              HEAP32[$785>>2] = 0;
              $a$6$i = $785;
             } else {
              $a$6$i = $a$5223$i;
             }
             $786 = HEAP32[$783>>2]|0;
             $787 = (($786) + 1)|0;
             HEAP32[$783>>2] = $787;
             $788 = ($787>>>0)>(999999999);
             if ($788) {
              $a$5223$i = $a$6$i;$d$2222$i = $783;
             } else {
              $$lcssa362 = $783;$a$6$i$lcssa = $a$6$i;
              break;
             }
            }
            $a$5$lcssa$i = $a$6$i$lcssa;$d$2$lcssa$i = $$lcssa362;
           } else {
            $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $756;
           }
           $789 = $a$5$lcssa$i;
           $790 = (($634) - ($789))|0;
           $791 = $790 >> 2;
           $792 = ($791*9)|0;
           $793 = HEAP32[$a$5$lcssa$i>>2]|0;
           $794 = ($793>>>0)<(10);
           if ($794) {
            $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $792;
            break;
           }
           $e$2218$i = $792;$i$2217$i = 10;
           while(1) {
            $795 = ($i$2217$i*10)|0;
            $796 = (($e$2218$i) + 1)|0;
            $797 = ($793>>>0)<($795>>>0);
            if ($797) {
             $$lcssa363 = $796;
             break;
            } else {
             $e$2218$i = $796;$i$2217$i = $795;
            }
           }
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $$lcssa363;
          }
         } while(0);
         $798 = (($d$3$i) + 4|0);
         $799 = ($z$3$lcssa$i>>>0)>($798>>>0);
         $$z$3$i = $799 ? $798 : $z$3$lcssa$i;
         $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
        } else {
         $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
        }
        $a$8$ph294$i = $a$8$ph$i;
        $800 = (0 - ($e$4$ph$i))|0;
        $z$6$i = $z$6$ph$i;
        while(1) {
         $801 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
         if (!($801)) {
          $$lcssa283$i = 0;$z$6$i$lcssa = $z$6$i;
          break;
         }
         $802 = (($z$6$i) + -4|0);
         $803 = HEAP32[$802>>2]|0;
         $804 = ($803|0)==(0);
         if ($804) {
          $z$6$i = $802;
         } else {
          $$lcssa283$i = 1;$z$6$i$lcssa = $z$6$i;
          break;
         }
        }
        do {
         if ($745) {
          $805 = ($$p$i|0)==(0);
          $806 = $805&1;
          $$$p$i = (($806) + ($$p$i))|0;
          $807 = ($$$p$i|0)>($e$4$ph$i|0);
          $808 = ($e$4$ph$i|0)>(-5);
          $or$cond6$i = $807 & $808;
          if ($or$cond6$i) {
           $809 = (($t$0) + -1)|0;
           $$neg160$i = (($$$p$i) + -1)|0;
           $810 = (($$neg160$i) - ($e$4$ph$i))|0;
           $$019$i = $809;$$216$i = $810;
          } else {
           $811 = (($t$0) + -2)|0;
           $812 = (($$$p$i) + -1)|0;
           $$019$i = $811;$$216$i = $812;
          }
          $813 = $fl$1$ & 8;
          $814 = ($813|0)==(0);
          if (!($814)) {
           $$120$i = $$019$i;$$317$i = $$216$i;
           break;
          }
          do {
           if ($$lcssa283$i) {
            $815 = (($z$6$i$lcssa) + -4|0);
            $816 = HEAP32[$815>>2]|0;
            $817 = ($816|0)==(0);
            if ($817) {
             $j$2$i = 9;
             break;
            }
            $818 = (($816>>>0) % 10)&-1;
            $819 = ($818|0)==(0);
            if (!($819)) {
             $j$2$i = 0;
             break;
            }
            $i$3213$i = 10;$j$1214$i = 0;
            while(1) {
             $820 = ($i$3213$i*10)|0;
             $821 = (($j$1214$i) + 1)|0;
             $822 = (($816>>>0) % ($820>>>0))&-1;
             $823 = ($822|0)==(0);
             if ($823) {
              $i$3213$i = $820;$j$1214$i = $821;
             } else {
              $$lcssa364 = $821;
              break;
             }
            }
            $j$2$i = $$lcssa364;
           } else {
            $j$2$i = 9;
           }
          } while(0);
          $824 = $$019$i | 32;
          $825 = ($824|0)==(102);
          $826 = $z$6$i$lcssa;
          $827 = (($826) - ($634))|0;
          $828 = $827 >> 2;
          $829 = ($828*9)|0;
          $830 = (($829) + -9)|0;
          if ($825) {
           $831 = (($830) - ($j$2$i))|0;
           $832 = ($831|0)<(0);
           $$29$i = $832 ? 0 : $831;
           $833 = ($$216$i|0)<($$29$i|0);
           $$216$$29$i = $833 ? $$216$i : $$29$i;
           $$120$i = $$019$i;$$317$i = $$216$$29$i;
           break;
          } else {
           $834 = (($830) + ($e$4$ph$i))|0;
           $835 = (($834) - ($j$2$i))|0;
           $836 = ($835|0)<(0);
           $$31$i = $836 ? 0 : $835;
           $837 = ($$216$i|0)<($$31$i|0);
           $$216$$31$i = $837 ? $$216$i : $$31$i;
           $$120$i = $$019$i;$$317$i = $$216$$31$i;
           break;
          }
         } else {
          $$120$i = $t$0;$$317$i = $$p$i;
         }
        } while(0);
        $838 = ($$317$i|0)!=(0);
        if ($838) {
         $842 = 1;
        } else {
         $839 = $fl$1$ & 8;
         $840 = ($839|0)!=(0);
         $842 = $840;
        }
        $841 = $842&1;
        $843 = $$120$i | 32;
        $844 = ($843|0)==(102);
        if ($844) {
         $845 = ($e$4$ph$i|0)>(0);
         $846 = $845 ? $e$4$ph$i : 0;
         $$pn$i = $846;$estr$2$i = 0;
        } else {
         $847 = ($e$4$ph$i|0)<(0);
         $848 = $847 ? $800 : $e$4$ph$i;
         $849 = ($848|0)<(0);
         if ($849) {
          $850 = ($848|0)<(0);
          $851 = $850 << 31 >> 31;
          $$05$i87$i = $7;$852 = $848;$853 = $851;
          while(1) {
           $854 = (___uremdi3(($852|0),($853|0),10,0)|0);
           $855 = tempRet0;
           $856 = $854 | 48;
           $857 = $856&255;
           $858 = (($$05$i87$i) + -1|0);
           HEAP8[$858>>0] = $857;
           $859 = (___udivdi3(($852|0),($853|0),10,0)|0);
           $860 = tempRet0;
           $861 = ($853>>>0)>(9);
           $862 = ($852>>>0)>(4294967295);
           $863 = ($853|0)==(9);
           $864 = $863 & $862;
           $865 = $861 | $864;
           if ($865) {
            $$05$i87$i = $858;$852 = $859;$853 = $860;
           } else {
            $$lcssa365 = $858;$1193 = $859;$1194 = $860;
            break;
           }
          }
          $$0$lcssa$i92$i = $$lcssa365;$$01$lcssa$off0$i93$i = $1193;
         } else {
          $$0$lcssa$i92$i = $7;$$01$lcssa$off0$i93$i = $848;
         }
         $866 = ($$01$lcssa$off0$i93$i|0)==(0);
         if ($866) {
          $estr$1$ph$i = $$0$lcssa$i92$i;
         } else {
          $$12$i95$i = $$0$lcssa$i92$i;$y$03$i94$i = $$01$lcssa$off0$i93$i;
          while(1) {
           $867 = (($y$03$i94$i>>>0) % 10)&-1;
           $868 = $867 | 48;
           $869 = $868&255;
           $870 = (($$12$i95$i) + -1|0);
           HEAP8[$870>>0] = $869;
           $871 = (($y$03$i94$i>>>0) / 10)&-1;
           $872 = ($y$03$i94$i>>>0)<(10);
           if ($872) {
            $$lcssa367 = $870;
            break;
           } else {
            $$12$i95$i = $870;$y$03$i94$i = $871;
           }
          }
          $estr$1$ph$i = $$lcssa367;
         }
         $873 = $estr$1$ph$i;
         $874 = (($9) - ($873))|0;
         $875 = ($874|0)<(2);
         if ($875) {
          $estr$1209$i = $estr$1$ph$i;
          while(1) {
           $876 = (($estr$1209$i) + -1|0);
           HEAP8[$876>>0] = 48;
           $877 = $876;
           $878 = (($9) - ($877))|0;
           $879 = ($878|0)<(2);
           if ($879) {
            $estr$1209$i = $876;
           } else {
            $$lcssa368 = $876;
            break;
           }
          }
          $estr$1$lcssa$i = $$lcssa368;
         } else {
          $estr$1$lcssa$i = $estr$1$ph$i;
         }
         $880 = $e$4$ph$i >> 31;
         $881 = $880 & 2;
         $882 = (($881) + 43)|0;
         $883 = $882&255;
         $884 = (($estr$1$lcssa$i) + -1|0);
         HEAP8[$884>>0] = $883;
         $885 = $$120$i&255;
         $886 = (($estr$1$lcssa$i) + -2|0);
         HEAP8[$886>>0] = $885;
         $887 = $886;
         $888 = (($9) - ($887))|0;
         $$pn$i = $888;$estr$2$i = $886;
        }
        $889 = (($pl$0$i) + 1)|0;
        $890 = (($889) + ($$317$i))|0;
        $l$1$i = (($890) + ($841))|0;
        $891 = (($l$1$i) + ($$pn$i))|0;
        $892 = $fl$1$ & 73728;
        $893 = ($892|0)==(0);
        $894 = ($w$1|0)>($891|0);
        $or$cond$i101$i = $893 & $894;
        if ($or$cond$i101$i) {
         $895 = (($w$1) - ($891))|0;
         $896 = ($895>>>0)>(256);
         $897 = $896 ? 256 : $895;
         _memset(($pad$i|0),32,($897|0))|0;
         $898 = ($895>>>0)>(255);
         if ($898) {
          $$01$i103$i = $895;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $899 = (($$01$i103$i) + -256)|0;
           $900 = ($899>>>0)>(255);
           if ($900) {
            $$01$i103$i = $899;
           } else {
            break;
           }
          }
          $901 = $895 & 255;
          $$0$lcssa$i105$i = $901;
         } else {
          $$0$lcssa$i105$i = $895;
         }
         (___fwritex($pad$i,$$0$lcssa$i105$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
        $902 = ($892|0)==(65536);
        $or$cond$i108$i = $902 & $894;
        if ($or$cond$i108$i) {
         $903 = (($w$1) - ($891))|0;
         $904 = ($903>>>0)>(256);
         $905 = $904 ? 256 : $903;
         _memset(($pad$i|0),48,($905|0))|0;
         $906 = ($903>>>0)>(255);
         if ($906) {
          $$01$i110$i = $903;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $907 = (($$01$i110$i) + -256)|0;
           $908 = ($907>>>0)>(255);
           if ($908) {
            $$01$i110$i = $907;
           } else {
            break;
           }
          }
          $909 = $903 & 255;
          $$0$lcssa$i112$i = $909;
         } else {
          $$0$lcssa$i112$i = $903;
         }
         (___fwritex($pad$i,$$0$lcssa$i112$i,$f)|0);
        }
        if ($844) {
         $910 = ($a$8$ph$i>>>0)>($$39$i>>>0);
         $r$0$a$8$i = $910 ? $$39$i : $a$8$ph$i;
         $911 = $634 ^ -1;
         $912 = $a$8$ph294$i ^ -1;
         $913 = ($911>>>0)>($912>>>0);
         $umax$i = $913 ? $911 : $912;
         $914 = (3 - ($umax$i))|0;
         $uglygep$i = (($$39$i) + 1|0);
         $uglygep296$i = $uglygep$i;
         $915 = ($914>>>0)>($uglygep296$i>>>0);
         $umax297$i = $915 ? $914 : $uglygep296$i;
         $umax297298299$i = $umax297$i;
         $uglygep300$i = (($umax297298299$i) + ($umax$i)|0);
         $uglygep300301$i = $uglygep300$i;
         $916 = $umax$i ^ -1;
         $d$4199$i = $r$0$a$8$i;
         while(1) {
          $917 = HEAP32[$d$4199$i>>2]|0;
          $918 = ($917|0)==(0);
          if ($918) {
           $$1$lcssa$i120$i = $14;
          } else {
           $$12$i118$i = $14;$y$03$i117$i = $917;
           while(1) {
            $919 = (($y$03$i117$i>>>0) % 10)&-1;
            $920 = $919 | 48;
            $921 = $920&255;
            $922 = (($$12$i118$i) + -1|0);
            HEAP8[$922>>0] = $921;
            $923 = (($y$03$i117$i>>>0) / 10)&-1;
            $924 = ($y$03$i117$i>>>0)<(10);
            if ($924) {
             $$lcssa372 = $922;
             break;
            } else {
             $$12$i118$i = $922;$y$03$i117$i = $923;
            }
           }
           $$1$lcssa$i120$i = $$lcssa372;
          }
          $925 = ($d$4199$i|0)==($r$0$a$8$i|0);
          do {
           if ($925) {
            $929 = ($$1$lcssa$i120$i|0)==($14|0);
            if (!($929)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            HEAP8[$16>>0] = 48;
            $s7$1$i = $16;
           } else {
            $926 = ($$1$lcssa$i120$i>>>0)>($buf$i>>>0);
            if (!($926)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            $s7$0196$i = $$1$lcssa$i120$i;
            while(1) {
             $927 = (($s7$0196$i) + -1|0);
             HEAP8[$927>>0] = 48;
             $928 = ($927>>>0)>($buf$i>>>0);
             if ($928) {
              $s7$0196$i = $927;
             } else {
              $$lcssa373 = $927;
              break;
             }
            }
            $s7$1$i = $$lcssa373;
           }
          } while(0);
          $930 = $s7$1$i;
          $931 = (($15) - ($930))|0;
          (___fwritex($s7$1$i,$931,$f)|0);
          $932 = (($d$4199$i) + 4|0);
          $933 = ($932>>>0)>($$39$i>>>0);
          if ($933) {
           $$lcssa374 = $932;
           break;
          } else {
           $d$4199$i = $932;
          }
         }
         $934 = $uglygep300301$i & -4;
         $935 = (($934) + ($916))|0;
         $936 = $935;
         $$not$i = $838 ^ 1;
         $937 = $fl$1$ & 8;
         $938 = ($937|0)==(0);
         $or$cond35$i = $938 & $$not$i;
         if (!($or$cond35$i)) {
          (___fwritex(4512,1,$f)|0);
         }
         $939 = ($$lcssa374>>>0)<($z$6$i$lcssa>>>0);
         $940 = ($$317$i|0)>(0);
         $or$cond10191$i = $940 & $939;
         if ($or$cond10191$i) {
          $$418193$i = $$317$i;$955 = $936;$d$5192$i = $$lcssa374;
          while(1) {
           $941 = HEAP32[$d$5192$i>>2]|0;
           $942 = ($941|0)==(0);
           if ($942) {
            $s8$0188$i$ph = $14;
            label = 361;
           } else {
            $$12$i127$i = $14;$y$03$i126$i = $941;
            while(1) {
             $943 = (($y$03$i126$i>>>0) % 10)&-1;
             $944 = $943 | 48;
             $945 = $944&255;
             $946 = (($$12$i127$i) + -1|0);
             HEAP8[$946>>0] = $945;
             $947 = (($y$03$i126$i>>>0) / 10)&-1;
             $948 = ($y$03$i126$i>>>0)<(10);
             if ($948) {
              $$lcssa375 = $946;
              break;
             } else {
              $$12$i127$i = $946;$y$03$i126$i = $947;
             }
            }
            $949 = ($$lcssa375>>>0)>($buf$i>>>0);
            if ($949) {
             $s8$0188$i$ph = $$lcssa375;
             label = 361;
            } else {
             $s8$0$lcssa$i = $$lcssa375;
            }
           }
           if ((label|0) == 361) {
            label = 0;
            $s8$0188$i = $s8$0188$i$ph;
            while(1) {
             $950 = (($s8$0188$i) + -1|0);
             HEAP8[$950>>0] = 48;
             $951 = ($950>>>0)>($buf$i>>>0);
             if ($951) {
              $s8$0188$i = $950;
             } else {
              $$lcssa376 = $950;
              break;
             }
            }
            $s8$0$lcssa$i = $$lcssa376;
           }
           $952 = ($$418193$i|0)>(9);
           $953 = $952 ? 9 : $$418193$i;
           (___fwritex($s8$0$lcssa$i,$953,$f)|0);
           $954 = (($955) + 8|0);
           $956 = (($$418193$i) + -9)|0;
           $957 = ($954>>>0)<($z$6$i$lcssa>>>0);
           $or$cond10$i = $952 & $957;
           if ($or$cond10$i) {
            $955$phi = $d$5192$i;$$418193$i = $956;$d$5192$i = $954;$955 = $955$phi;
           } else {
            $$lcssa377 = $956;
            break;
           }
          }
          $$418$lcssa$i = $$lcssa377;
         } else {
          $$418$lcssa$i = $$317$i;
         }
         $958 = ($$418$lcssa$i|0)>(0);
         if ($958) {
          $959 = ($$418$lcssa$i>>>0)>(256);
          $960 = $959 ? 256 : $$418$lcssa$i;
          _memset(($pad$i|0),48,($960|0))|0;
          $961 = ($$418$lcssa$i>>>0)>(255);
          if ($961) {
           $$01$i134$i = $$418$lcssa$i;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $962 = (($$01$i134$i) + -256)|0;
            $963 = ($962>>>0)>(255);
            if ($963) {
             $$01$i134$i = $962;
            } else {
             break;
            }
           }
           $964 = $$418$lcssa$i & 255;
           $$0$lcssa$i136$i = $964;
          } else {
           $$0$lcssa$i136$i = $$418$lcssa$i;
          }
          (___fwritex($pad$i,$$0$lcssa$i136$i,$f)|0);
         }
        } else {
         $965 = (($a$8$ph$i) + 4|0);
         $z$6$$i = $$lcssa283$i ? $z$6$i$lcssa : $965;
         $966 = ($$317$i|0)>(-1);
         do {
          if ($966) {
           $967 = $fl$1$ & 8;
           $968 = ($967|0)==(0);
           $$5205$i = $$317$i;$d$6204$i = $a$8$ph$i;
           while(1) {
            $969 = HEAP32[$d$6204$i>>2]|0;
            $970 = ($969|0)==(0);
            if ($970) {
             label = 380;
            } else {
             $$12$i142$i = $14;$y$03$i141$i = $969;
             while(1) {
              $971 = (($y$03$i141$i>>>0) % 10)&-1;
              $972 = $971 | 48;
              $973 = $972&255;
              $974 = (($$12$i142$i) + -1|0);
              HEAP8[$974>>0] = $973;
              $975 = (($y$03$i141$i>>>0) / 10)&-1;
              $976 = ($y$03$i141$i>>>0)<(10);
              if ($976) {
               $$12$i142$i$lcssa = $$12$i142$i;$$lcssa369 = $974;
               break;
              } else {
               $$12$i142$i = $974;$y$03$i141$i = $975;
              }
             }
             $977 = ($$lcssa369|0)==($14|0);
             if ($977) {
              label = 380;
             } else {
              $1195 = $$12$i142$i$lcssa;$s9$0$i = $$lcssa369;
             }
            }
            if ((label|0) == 380) {
             label = 0;
             HEAP8[$16>>0] = 48;
             $1195 = $14;$s9$0$i = $16;
            }
            $978 = ($d$6204$i|0)==($a$8$ph$i|0);
            do {
             if ($978) {
              (___fwritex($s9$0$i,1,$f)|0);
              $982 = ($$5205$i|0)<(1);
              $or$cond37$i = $968 & $982;
              if ($or$cond37$i) {
               $s9$2$i = $1195;
               break;
              }
              (___fwritex(4512,1,$f)|0);
              $s9$2$i = $1195;
             } else {
              $979 = ($s9$0$i>>>0)>($buf$i>>>0);
              if (!($979)) {
               $s9$2$i = $s9$0$i;
               break;
              }
              $s9$1200$i = $s9$0$i;
              while(1) {
               $980 = (($s9$1200$i) + -1|0);
               HEAP8[$980>>0] = 48;
               $981 = ($980>>>0)>($buf$i>>>0);
               if ($981) {
                $s9$1200$i = $980;
               } else {
                $$lcssa370 = $980;
                break;
               }
              }
              $s9$2$i = $$lcssa370;
             }
            } while(0);
            $983 = $s9$2$i;
            $984 = (($15) - ($983))|0;
            $985 = ($$5205$i|0)>($984|0);
            $$$5$i = $985 ? $984 : $$5205$i;
            (___fwritex($s9$2$i,$$$5$i,$f)|0);
            $986 = (($$5205$i) - ($984))|0;
            $987 = (($d$6204$i) + 4|0);
            $988 = ($987>>>0)<($z$6$$i>>>0);
            $989 = ($986|0)>(-1);
            $or$cond12$i = $988 & $989;
            if ($or$cond12$i) {
             $$5205$i = $986;$d$6204$i = $987;
            } else {
             $$lcssa371 = $986;
             break;
            }
           }
           $990 = ($$lcssa371|0)>(0);
           if (!($990)) {
            break;
           }
           $991 = ($$lcssa371>>>0)>(256);
           $992 = $991 ? 256 : $$lcssa371;
           _memset(($pad$i|0),48,($992|0))|0;
           $993 = ($$lcssa371>>>0)>(255);
           if ($993) {
            $$01$i149$i = $$lcssa371;
            while(1) {
             (___fwritex($pad$i,256,$f)|0);
             $994 = (($$01$i149$i) + -256)|0;
             $995 = ($994>>>0)>(255);
             if ($995) {
              $$01$i149$i = $994;
             } else {
              break;
             }
            }
            $996 = $$lcssa371 & 255;
            $$0$lcssa$i151$i = $996;
           } else {
            $$0$lcssa$i151$i = $$lcssa371;
           }
           (___fwritex($pad$i,$$0$lcssa$i151$i,$f)|0);
          } else {
          }
         } while(0);
         $997 = $estr$2$i;
         $998 = (($9) - ($997))|0;
         (___fwritex($estr$2$i,$998,$f)|0);
        }
        $999 = ($892|0)==(8192);
        $or$cond$i$i = $999 & $894;
        if ($or$cond$i$i) {
         $1000 = (($w$1) - ($891))|0;
         $1001 = ($1000>>>0)>(256);
         $1002 = $1001 ? 256 : $1000;
         _memset(($pad$i|0),32,($1002|0))|0;
         $1003 = ($1000>>>0)>(255);
         if ($1003) {
          $$01$i$i = $1000;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $1004 = (($$01$i$i) + -256)|0;
           $1005 = ($1004>>>0)>(255);
           if ($1005) {
            $$01$i$i = $1004;
           } else {
            break;
           }
          }
          $1006 = $1000 & 255;
          $$0$lcssa$i$i = $1006;
         } else {
          $$0$lcssa$i$i = $1000;
         }
         (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
        }
        $w$38$i = $894 ? $w$1 : $891;
        $$0$i = $w$38$i;
       } else {
        $447 = $t$0 & 32;
        $448 = ($447|0)!=(0);
        $449 = $448 ? 4464 : 4472;
        $450 = ($$013$i != $$013$i) | (0.0 != 0.0);
        if ($450) {
         $451 = $448 ? 4480 : 4488;
         $pl$1$i = 0;$s1$0$i = $451;
        } else {
         $pl$1$i = $pl$0$i;$s1$0$i = $449;
        }
        $452 = (($pl$1$i) + 3)|0;
        $453 = $fl$1$ & 8192;
        $454 = ($453|0)==(0);
        $455 = ($w$1|0)>($452|0);
        $or$cond$i43$i = $454 & $455;
        if ($or$cond$i43$i) {
         $456 = (($w$1) - ($452))|0;
         $457 = ($456>>>0)>(256);
         $458 = $457 ? 256 : $456;
         _memset(($pad$i|0),32,($458|0))|0;
         $459 = ($456>>>0)>(255);
         if ($459) {
          $$01$i45$i = $456;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $460 = (($$01$i45$i) + -256)|0;
           $461 = ($460>>>0)>(255);
           if ($461) {
            $$01$i45$i = $460;
           } else {
            break;
           }
          }
          $462 = $456 & 255;
          $$0$lcssa$i47$i = $462;
         } else {
          $$0$lcssa$i47$i = $456;
         }
         (___fwritex($pad$i,$$0$lcssa$i47$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
        (___fwritex($s1$0$i,3,$f)|0);
        $463 = $fl$1$ & 73728;
        $464 = ($463|0)==(8192);
        $or$cond$i50$i = $464 & $455;
        if ($or$cond$i50$i) {
         $465 = (($w$1) - ($452))|0;
         $466 = ($465>>>0)>(256);
         $467 = $466 ? 256 : $465;
         _memset(($pad$i|0),32,($467|0))|0;
         $468 = ($465>>>0)>(255);
         if ($468) {
          $$01$i52$i = $465;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $469 = (($$01$i52$i) + -256)|0;
           $470 = ($469>>>0)>(255);
           if ($470) {
            $$01$i52$i = $469;
           } else {
            break;
           }
          }
          $471 = $465 & 255;
          $$0$lcssa$i54$i = $471;
         } else {
          $$0$lcssa$i54$i = $465;
         }
         (___fwritex($pad$i,$$0$lcssa$i54$i,$f)|0);
        }
        $w$$i = $455 ? $w$1 : $452;
        $$0$i = $w$$i;
       }
      } while(0);
      $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $$0$i;$l10n$0$be = $l10n$3;
      break L24;
      break;
     }
     case 99:  {
      $381 = $267&255;
      HEAP8[$4>>0] = $381;
      $1183 = $294;$1184 = $267;$a$2 = $4;$fl$6 = $266;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4416;$z$2 = $2;
      break;
     }
     case 109:  {
      $382 = (___errno_location()|0);
      $383 = HEAP32[$382>>2]|0;
      $384 = (_strerror(($383|0))|0);
      $a$1 = $384;
      label = 109;
      break;
     }
     case 115:  {
      $385 = $267;
      $386 = ($267|0)==(0);
      $$21 = $386 ? 4432 : $385;
      $a$1 = $$21;
      label = 109;
      break;
     }
     case 67:  {
      HEAP32[$wc>>2] = $267;
      HEAP32[$5>>2] = 0;
      $1187 = $wc;$1188 = $6;$p$4271 = -1;
      label = 114;
      break;
     }
     default: {
      $1183 = $294;$1184 = $267;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4416;$z$2 = $2;
     }
     }
    } while(0);
    do {
     if ((label|0) == 82) {
      label = 0;
      $292 = $t$1 & 32;
      $293 = ($267|0)==(0);
      $295 = ($294|0)==(0);
      $296 = $293 & $295;
      if ($296) {
       $369 = $267;$371 = $294;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4416;
       label = 104;
      } else {
       $$012$i = $2;$298 = $267;$305 = $294;
       while(1) {
        $297 = $298 & 15;
        $299 = (4496 + ($297)|0);
        $300 = HEAP8[$299>>0]|0;
        $301 = $300&255;
        $302 = $301 | $292;
        $303 = $302&255;
        $304 = (($$012$i) + -1|0);
        HEAP8[$304>>0] = $303;
        $306 = (_bitshift64Lshr(($298|0),($305|0),4)|0);
        $307 = tempRet0;
        $308 = ($306|0)==(0);
        $309 = ($307|0)==(0);
        $310 = $308 & $309;
        if ($310) {
         $$lcssa386 = $304;
         break;
        } else {
         $$012$i = $304;$298 = $306;$305 = $307;
        }
       }
       $311 = $fl$3 & 8;
       $312 = ($311|0)==(0);
       if ($312) {
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4416;
        label = 104;
       } else {
        $313 = $t$1 >> 4;
        $314 = (4416 + ($313)|0);
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $314;
        label = 104;
       }
      }
     }
     else if ((label|0) == 96) {
      label = 0;
      $340 = ($339>>>0)>(0);
      $342 = ($341>>>0)>(4294967295);
      $343 = ($339|0)==(0);
      $344 = $343 & $342;
      $345 = $340 | $344;
      if ($345) {
       $$05$i = $2;$346 = $341;$347 = $339;
       while(1) {
        $348 = (___uremdi3(($346|0),($347|0),10,0)|0);
        $349 = tempRet0;
        $350 = $348 | 48;
        $351 = $350&255;
        $352 = (($$05$i) + -1|0);
        HEAP8[$352>>0] = $351;
        $353 = (___udivdi3(($346|0),($347|0),10,0)|0);
        $354 = tempRet0;
        $355 = ($347>>>0)>(9);
        $356 = ($346>>>0)>(4294967295);
        $357 = ($347|0)==(9);
        $358 = $357 & $356;
        $359 = $355 | $358;
        if ($359) {
         $$05$i = $352;$346 = $353;$347 = $354;
        } else {
         $$lcssa382 = $352;$1185 = $353;$1186 = $354;
         break;
        }
       }
       $$0$lcssa$i54 = $$lcssa382;$$01$lcssa$off0$i = $1185;
      } else {
       $$0$lcssa$i54 = $2;$$01$lcssa$off0$i = $341;
      }
      $360 = ($$01$lcssa$off0$i|0)==(0);
      if ($360) {
       $369 = $341;$371 = $339;$a$0 = $$0$lcssa$i54;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      } else {
       $$12$i = $$0$lcssa$i54;$y$03$i = $$01$lcssa$off0$i;
       while(1) {
        $361 = (($y$03$i>>>0) % 10)&-1;
        $362 = $361 | 48;
        $363 = $362&255;
        $364 = (($$12$i) + -1|0);
        HEAP8[$364>>0] = $363;
        $365 = (($y$03$i>>>0) / 10)&-1;
        $366 = ($y$03$i>>>0)<(10);
        if ($366) {
         $$lcssa384 = $364;
         break;
        } else {
         $$12$i = $364;$y$03$i = $365;
        }
       }
       $369 = $341;$371 = $339;$a$0 = $$lcssa384;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      }
     }
     else if ((label|0) == 109) {
      label = 0;
      $387 = (_memchr($a$1,0,$p$0)|0);
      $388 = ($387|0)==(0|0);
      if ($388) {
       $389 = (($a$1) + ($p$0)|0);
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4416;$z$2 = $389;
       break;
      } else {
       $390 = $387;
       $391 = $a$1;
       $392 = (($390) - ($391))|0;
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $392;$pl$2 = 0;$prefix$2 = 4416;$z$2 = $387;
       break;
      }
     }
     else if ((label|0) == 114) {
      label = 0;
      $i$0176 = 0;$l$1175 = 0;$ws$0177 = $1187;
      while(1) {
       $395 = HEAP32[$ws$0177>>2]|0;
       $396 = ($395|0)==(0);
       if ($396) {
        $i$0$lcssa = $i$0176;$l$2 = $l$1175;
        break;
       }
       $397 = (_wctomb($mb,$395)|0);
       $398 = ($397|0)<(0);
       $399 = (($p$4271) - ($i$0176))|0;
       $400 = ($397>>>0)>($399>>>0);
       $or$cond23 = $398 | $400;
       if ($or$cond23) {
        $i$0$lcssa = $i$0176;$l$2 = $397;
        break;
       }
       $401 = (($ws$0177) + 4|0);
       $402 = (($397) + ($i$0176))|0;
       $403 = ($p$4271>>>0)>($402>>>0);
       if ($403) {
        $i$0176 = $402;$l$1175 = $397;$ws$0177 = $401;
       } else {
        $i$0$lcssa = $402;$l$2 = $397;
        break;
       }
      }
      $404 = ($l$2|0)<(0);
      if ($404) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1189 = $1188;$1190 = $1187;$i$0$lcssa272 = $i$0$lcssa;
       label = 119;
      }
     }
    } while(0);
    if ((label|0) == 104) {
     label = 0;
     $367 = ($p$2|0)>(-1);
     $368 = $fl$4 & -65537;
     $$fl$4 = $367 ? $368 : $fl$4;
     $370 = ($369|0)!=(0);
     $372 = ($371|0)!=(0);
     $373 = $370 | $372;
     $374 = ($p$2|0)!=(0);
     $or$cond = $373 | $374;
     if ($or$cond) {
      $375 = $a$0;
      $376 = (($3) - ($375))|0;
      $377 = $373&1;
      $378 = $377 ^ 1;
      $379 = (($378) + ($376))|0;
      $380 = ($p$2|0)>($379|0);
      $p$2$ = $380 ? $p$2 : $379;
      $1183 = $371;$1184 = $369;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     } else {
      $1183 = $371;$1184 = $369;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     }
    }
    else if ((label|0) == 119) {
     label = 0;
     $405 = $fl$1$ & 73728;
     $406 = ($405|0)==(0);
     $407 = ($w$1|0)>($i$0$lcssa272|0);
     $or$cond$i65 = $406 & $407;
     if ($or$cond$i65) {
      $408 = (($w$1) - ($i$0$lcssa272))|0;
      $409 = ($408>>>0)>(256);
      $410 = $409 ? 256 : $408;
      _memset(($pad$i|0),32,($410|0))|0;
      $411 = ($408>>>0)>(255);
      if ($411) {
       $$01$i67 = $408;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $412 = (($$01$i67) + -256)|0;
        $413 = ($412>>>0)>(255);
        if ($413) {
         $$01$i67 = $412;
        } else {
         break;
        }
       }
       $414 = $408 & 255;
       $$0$lcssa$i69 = $414;
      } else {
       $$0$lcssa$i69 = $408;
      }
      (___fwritex($pad$i,$$0$lcssa$i69,$f)|0);
     }
     $415 = ($i$0$lcssa272|0)==(0);
     if (!($415)) {
      $i$1187 = 0;$ws$1188 = $1190;
      while(1) {
       $416 = HEAP32[$ws$1188>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        break;
       }
       $418 = (_wctomb($mb,$416)|0);
       $419 = (($418) + ($i$1187))|0;
       $420 = ($419|0)>($i$0$lcssa272|0);
       if ($420) {
        break;
       }
       $421 = (($ws$1188) + 4|0);
       (___fwritex($mb,$418,$f)|0);
       $422 = ($419>>>0)<($i$0$lcssa272>>>0);
       if ($422) {
        $i$1187 = $419;$ws$1188 = $421;
       } else {
        break;
       }
      }
     }
     $423 = ($405|0)==(8192);
     $or$cond$i72 = $423 & $407;
     if ($or$cond$i72) {
      $424 = (($w$1) - ($i$0$lcssa272))|0;
      $425 = ($424>>>0)>(256);
      $426 = $425 ? 256 : $424;
      _memset(($pad$i|0),32,($426|0))|0;
      $427 = ($424>>>0)>(255);
      if ($427) {
       $$01$i74 = $424;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $428 = (($$01$i74) + -256)|0;
        $429 = ($428>>>0)>(255);
        if ($429) {
         $$01$i74 = $428;
        } else {
         break;
        }
       }
       $430 = $424 & 255;
       $$0$lcssa$i76 = $430;
      } else {
       $$0$lcssa$i76 = $424;
      }
      (___fwritex($pad$i,$$0$lcssa$i76,$f)|0);
     }
     $431 = $407 ? $w$1 : $i$0$lcssa272;
     $$be = $1182;$$be341 = $294;$$be342 = $1189;$l$0$be = $431;$l10n$0$be = $l10n$3;
     break;
    }
    $1007 = $z$2;
    $1008 = $a$2;
    $1009 = (($1007) - ($1008))|0;
    $1010 = ($p$5|0)<($1009|0);
    $$p$5 = $1010 ? $1009 : $p$5;
    $1011 = (($pl$2) + ($$p$5))|0;
    $1012 = ($w$1|0)<($1011|0);
    $w$2 = $1012 ? $1011 : $w$1;
    $1013 = $fl$6 & 73728;
    $1014 = ($1013|0)==(0);
    $1015 = ($w$2|0)>($1011|0);
    $or$cond$i82 = $1014 & $1015;
    if ($or$cond$i82) {
     $1016 = (($w$2) - ($1011))|0;
     $1017 = ($1016>>>0)>(256);
     $1018 = $1017 ? 256 : $1016;
     _memset(($pad$i|0),32,($1018|0))|0;
     $1019 = ($1016>>>0)>(255);
     if ($1019) {
      $$01$i84 = $1016;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1020 = (($$01$i84) + -256)|0;
       $1021 = ($1020>>>0)>(255);
       if ($1021) {
        $$01$i84 = $1020;
       } else {
        break;
       }
      }
      $1022 = $1016 & 255;
      $$0$lcssa$i86 = $1022;
     } else {
      $$0$lcssa$i86 = $1016;
     }
     (___fwritex($pad$i,$$0$lcssa$i86,$f)|0);
    }
    (___fwritex($prefix$2,$pl$2,$f)|0);
    $1023 = ($1013|0)==(65536);
    $or$cond$i58 = $1023 & $1015;
    if ($or$cond$i58) {
     $1024 = (($w$2) - ($1011))|0;
     $1025 = ($1024>>>0)>(256);
     $1026 = $1025 ? 256 : $1024;
     _memset(($pad$i|0),48,($1026|0))|0;
     $1027 = ($1024>>>0)>(255);
     if ($1027) {
      $$01$i60 = $1024;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1028 = (($$01$i60) + -256)|0;
       $1029 = ($1028>>>0)>(255);
       if ($1029) {
        $$01$i60 = $1028;
       } else {
        break;
       }
      }
      $1030 = $1024 & 255;
      $$0$lcssa$i62 = $1030;
     } else {
      $$0$lcssa$i62 = $1024;
     }
     (___fwritex($pad$i,$$0$lcssa$i62,$f)|0);
    }
    $1031 = ($$p$5|0)>($1009|0);
    if ($1031) {
     $1032 = (($$p$5) - ($1009))|0;
     $1033 = ($1032>>>0)>(256);
     $1034 = $1033 ? 256 : $1032;
     _memset(($pad$i|0),48,($1034|0))|0;
     $1035 = ($1032>>>0)>(255);
     if ($1035) {
      $$01$i45 = $1032;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1036 = (($$01$i45) + -256)|0;
       $1037 = ($1036>>>0)>(255);
       if ($1037) {
        $$01$i45 = $1036;
       } else {
        break;
       }
      }
      $1038 = $1032 & 255;
      $$0$lcssa$i47 = $1038;
     } else {
      $$0$lcssa$i47 = $1032;
     }
     (___fwritex($pad$i,$$0$lcssa$i47,$f)|0);
    }
    (___fwritex($a$2,$1009,$f)|0);
    $1039 = ($1013|0)==(8192);
    $or$cond$i = $1039 & $1015;
    if ($or$cond$i) {
     $1040 = (($w$2) - ($1011))|0;
     $1041 = ($1040>>>0)>(256);
     $1042 = $1041 ? 256 : $1040;
     _memset(($pad$i|0),32,($1042|0))|0;
     $1043 = ($1040>>>0)>(255);
     if ($1043) {
      $$01$i = $1040;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1044 = (($$01$i) + -256)|0;
       $1045 = ($1044>>>0)>(255);
       if ($1045) {
        $$01$i = $1044;
       } else {
        break;
       }
      }
      $1046 = $1040 & 255;
      $$0$lcssa$i = $1046;
     } else {
      $$0$lcssa$i = $1040;
     }
     (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
    }
    $$be = $1182;$$be341 = $1183;$$be342 = $1184;$l$0$be = $w$2;$l10n$0$be = $l10n$3;
   } else {
    $$be = $$lcssa107;$$be341 = $1175;$$be342 = $1176;$l$0$be = $37;$l10n$0$be = $l10n$0;
   }
  } while(0);
  $1175 = $$be341;$1176 = $$be342;$23 = $$be;$cnt$0 = $cnt$1;$l$0 = $l$0$be;$l10n$0 = $l10n$0$be;
 }
 if ((label|0) == 429) {
  $1047 = ($f|0)==(0|0);
  if (!($1047)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1048 = ($l10n$0$lcssa|0)==(0);
  if ($1048) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $i$2163 = 1;
  while(1) {
   $1049 = (($nl_type) + ($i$2163<<2)|0);
   $1050 = HEAP32[$1049>>2]|0;
   $1051 = ($1050|0)==(0);
   if ($1051) {
    $i$2163$lcssa = $i$2163;
    break;
   }
   $1053 = (($nl_arg) + ($i$2163<<3)|0);
   $1054 = ($1050>>>0)>(20);
   L614: do {
    if (!($1054)) {
     do {
      switch ($1050|0) {
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1055 = $arglist_current35;
       $1056 = (0 + 4|0);
       $expanded148 = $1056;
       $expanded147 = (($expanded148) - 1)|0;
       $1057 = (($1055) + ($expanded147))|0;
       $1058 = (0 + 4|0);
       $expanded152 = $1058;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1059 = $1057 & $expanded150;
       $1060 = $1059;
       $1061 = HEAP32[$1060>>2]|0;
       $arglist_next36 = (($1060) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1053>>2] = $1061;
       break L614;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1062 = $arglist_current38;
       $1063 = (0 + 4|0);
       $expanded155 = $1063;
       $expanded154 = (($expanded155) - 1)|0;
       $1064 = (($1062) + ($expanded154))|0;
       $1065 = (0 + 4|0);
       $expanded159 = $1065;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1066 = $1064 & $expanded157;
       $1067 = $1066;
       $1068 = HEAP32[$1067>>2]|0;
       $arglist_next39 = (($1067) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1069 = ($1068|0)<(0);
       $1070 = $1069 << 31 >> 31;
       $1071 = $1053;
       $1072 = $1071;
       HEAP32[$1072>>2] = $1068;
       $1073 = (($1071) + 4)|0;
       $1074 = $1073;
       HEAP32[$1074>>2] = $1070;
       break L614;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1075 = $arglist_current41;
       $1076 = (0 + 4|0);
       $expanded162 = $1076;
       $expanded161 = (($expanded162) - 1)|0;
       $1077 = (($1075) + ($expanded161))|0;
       $1078 = (0 + 4|0);
       $expanded166 = $1078;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1079 = $1077 & $expanded164;
       $1080 = $1079;
       $1081 = HEAP32[$1080>>2]|0;
       $arglist_next42 = (($1080) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1082 = $1053;
       $1083 = $1082;
       HEAP32[$1083>>2] = $1081;
       $1084 = (($1082) + 4)|0;
       $1085 = $1084;
       HEAP32[$1085>>2] = 0;
       break L614;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1086 = $arglist_current44;
       $1087 = (0 + 8|0);
       $expanded169 = $1087;
       $expanded168 = (($expanded169) - 1)|0;
       $1088 = (($1086) + ($expanded168))|0;
       $1089 = (0 + 8|0);
       $expanded173 = $1089;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1090 = $1088 & $expanded171;
       $1091 = $1090;
       $1092 = $1091;
       $1093 = $1092;
       $1094 = HEAP32[$1093>>2]|0;
       $1095 = (($1092) + 4)|0;
       $1096 = $1095;
       $1097 = HEAP32[$1096>>2]|0;
       $arglist_next45 = (($1091) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1098 = $1053;
       $1099 = $1098;
       HEAP32[$1099>>2] = $1094;
       $1100 = (($1098) + 4)|0;
       $1101 = $1100;
       HEAP32[$1101>>2] = $1097;
       break L614;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1102 = $arglist_current47;
       $1103 = (0 + 4|0);
       $expanded176 = $1103;
       $expanded175 = (($expanded176) - 1)|0;
       $1104 = (($1102) + ($expanded175))|0;
       $1105 = (0 + 4|0);
       $expanded180 = $1105;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1106 = $1104 & $expanded178;
       $1107 = $1106;
       $1108 = HEAP32[$1107>>2]|0;
       $arglist_next48 = (($1107) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1109 = $1108&65535;
       $1110 = $1109 << 16 >> 16;
       $1111 = ($1110|0)<(0);
       $1112 = $1111 << 31 >> 31;
       $1113 = $1053;
       $1114 = $1113;
       HEAP32[$1114>>2] = $1110;
       $1115 = (($1113) + 4)|0;
       $1116 = $1115;
       HEAP32[$1116>>2] = $1112;
       break L614;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1117 = $arglist_current50;
       $1118 = (0 + 4|0);
       $expanded183 = $1118;
       $expanded182 = (($expanded183) - 1)|0;
       $1119 = (($1117) + ($expanded182))|0;
       $1120 = (0 + 4|0);
       $expanded187 = $1120;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1121 = $1119 & $expanded185;
       $1122 = $1121;
       $1123 = HEAP32[$1122>>2]|0;
       $arglist_next51 = (($1122) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1123 & 65535;
       $1124 = $1053;
       $1125 = $1124;
       HEAP32[$1125>>2] = $$mask1$i;
       $1126 = (($1124) + 4)|0;
       $1127 = $1126;
       HEAP32[$1127>>2] = 0;
       break L614;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1128 = $arglist_current53;
       $1129 = (0 + 4|0);
       $expanded190 = $1129;
       $expanded189 = (($expanded190) - 1)|0;
       $1130 = (($1128) + ($expanded189))|0;
       $1131 = (0 + 4|0);
       $expanded194 = $1131;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1132 = $1130 & $expanded192;
       $1133 = $1132;
       $1134 = HEAP32[$1133>>2]|0;
       $arglist_next54 = (($1133) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1135 = $1134&255;
       $1136 = $1135 << 24 >> 24;
       $1137 = ($1136|0)<(0);
       $1138 = $1137 << 31 >> 31;
       $1139 = $1053;
       $1140 = $1139;
       HEAP32[$1140>>2] = $1136;
       $1141 = (($1139) + 4)|0;
       $1142 = $1141;
       HEAP32[$1142>>2] = $1138;
       break L614;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1143 = $arglist_current56;
       $1144 = (0 + 4|0);
       $expanded197 = $1144;
       $expanded196 = (($expanded197) - 1)|0;
       $1145 = (($1143) + ($expanded196))|0;
       $1146 = (0 + 4|0);
       $expanded201 = $1146;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1147 = $1145 & $expanded199;
       $1148 = $1147;
       $1149 = HEAP32[$1148>>2]|0;
       $arglist_next57 = (($1148) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1149 & 255;
       $1150 = $1053;
       $1151 = $1150;
       HEAP32[$1151>>2] = $$mask$i;
       $1152 = (($1150) + 4)|0;
       $1153 = $1152;
       HEAP32[$1153>>2] = 0;
       break L614;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1154 = $arglist_current59;
       $1155 = (0 + 8|0);
       $expanded204 = $1155;
       $expanded203 = (($expanded204) - 1)|0;
       $1156 = (($1154) + ($expanded203))|0;
       $1157 = (0 + 8|0);
       $expanded208 = $1157;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1158 = $1156 & $expanded206;
       $1159 = $1158;
       $1160 = +HEAPF64[$1159>>3];
       $arglist_next60 = (($1159) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1053>>3] = $1160;
       break L614;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1161 = $arglist_current62;
       $1162 = (0 + 8|0);
       $expanded211 = $1162;
       $expanded210 = (($expanded211) - 1)|0;
       $1163 = (($1161) + ($expanded210))|0;
       $1164 = (0 + 8|0);
       $expanded215 = $1164;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1165 = $1163 & $expanded213;
       $1166 = $1165;
       $1167 = +HEAPF64[$1166>>3];
       $arglist_next63 = (($1166) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1053>>3] = $1167;
       break L614;
       break;
      }
      default: {
       break L614;
      }
      }
     } while(0);
    }
   } while(0);
   $1168 = (($i$2163) + 1)|0;
   $1169 = ($1168|0)<(10);
   if ($1169) {
    $i$2163 = $1168;
   } else {
    label = 451;
    break;
   }
  }
  if ((label|0) == 451) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $1052 = ($i$2163$lcssa|0)<(10);
  if (!($1052)) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $i$3161 = $i$2163$lcssa;
  while(1) {
   $1172 = (($nl_type) + ($i$3161<<2)|0);
   $1173 = HEAP32[$1172>>2]|0;
   $1174 = ($1173|0)==(0);
   $1170 = (($i$3161) + 1)|0;
   if (!($1174)) {
    $$0$ph = -1;
    break;
   }
   $1171 = ($1170|0)<(10);
   if ($1171) {
    $i$3161 = $1170;
   } else {
    $$0$ph = 1;
    break;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 452) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 453) {
  $$0 = $$0$ph340;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2328 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2352 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($msg) + 1|0);
  $7 = $6;
 } else {
  $4 = (($msg) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 __THREW__ = 0;
 invoke_vii(449,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2352 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = (($2) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = (($2) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($2) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(4632|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2408 + 8|0));
  ___cxa_throw(($0|0),(2456|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this+0>>2]=HEAP32[$__str+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = (($__str) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__str) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 return ($7|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = (($this) + 1|0);
  $6 = $5;
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $6 = $4;
 }
 return ($6|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $8 = (($__str) + 1|0);
   $9 = $1&255;
   $10 = $9 >>> 1;
   $11 = $8;$12 = $10;
  } else {
   $4 = (($__str) + 8|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (($__str) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $11 = $5;$12 = $7;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$11,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__s;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 1|0);
 return ($0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s << 1;
 $1 = $0&255;
 HEAP8[$this>>0] = $1;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 1|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -17;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = 10;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp = (($4) + -1)|0;
  $5 = $phitmp;
 }
 return ($5|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = ((($this) + ($__n)|0) + 1|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = (($this) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = (($this) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = (($this) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = (($this) + 1|0);
   $27 = $25;
  } else {
   $23 = (($this) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = (($this) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = (($this) + 1|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = (($20) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(451,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = (($this) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = (($this) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = (($this) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($20) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = (($this) + 4|0);
    HEAP32[$50>>2] = $14;
    $51 = (($this) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $14 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__s>>>0)<(11);
 if ($0) {
  $3 = 10;
 } else {
  $1 = (($__s) + 16)|0;
  $2 = $1 & -16;
  $phitmp = (($2) + -1)|0;
  $3 = $phitmp;
 }
 return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s | 1;
 HEAP32[$this>>2] = $0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__p;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $15 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $15 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($15))|0;
  $34 = (($33) + ($14))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$15,$34,$14,$14,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = (($this) + 1|0);
    $24 = $22;
   } else {
    $20 = (($this) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($14)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($14) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = (($this) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__n_add|0)==(0);
 if (!($20)) {
  $21 = (($17) + ($__n_copy)|0);
  _memcpy(($21|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($19) + ($$sum1)|0);
  _memcpy(($25|0),($26|0),($24|0))|0;
 }
 $27 = ($__old_cap|0)==(10);
 if (!($27)) {
  __ZdlPv($19);
 }
 $28 = (($this) + 8|0);
 HEAP32[$28>>2] = $17;
 $29 = $16 | 1;
 HEAP32[$this>>2] = $29;
 $30 = (($22) + ($__n_add))|0;
 $31 = (($this) + 4|0);
 HEAP32[$31>>2] = $30;
 $32 = (($17) + ($30)|0);
 HEAP8[$32>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = (($__old_sz) - ($__n_del))|0;
 $21 = ($20|0)==($__n_copy|0);
 if (!($21)) {
  $22 = (($20) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $23 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $24 = (($19) + ($$sum1)|0);
  _memcpy(($23|0),($24|0),($22|0))|0;
 }
 $25 = ($__old_cap|0)==(10);
 if (!($25)) {
  __ZdlPv($19);
 }
 $26 = (($this) + 8|0);
 HEAP32[$26>>2] = $17;
 $27 = $16 | 1;
 HEAP32[$this>>2] = $27;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13get_allocatorEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 4|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = (($this) + 4|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = $20 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(451,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = (($this) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = (($this) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = (($this) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($20) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = (($this) + 4|0);
    HEAP32[$51>>2] = $14;
    $52 = (($this) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $14 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy<<2)|0);
  (_wmemcpy($22,$__p_new_stuff,$__n_add)|0);
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($26,$27,$25)|0);
 }
 $28 = ($__old_cap|0)==(1);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = (($this) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = (($this) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31<<2)|0);
 HEAP32[$33>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($24,$25,$23)|0);
 }
 $26 = ($__old_cap|0)==(1);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = (($this) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = (($this) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = (($this) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = (($this) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $16 = ($$0|0)==($__last|0);
  if ($16) {
   break;
  }
  $17 = HEAP8[$$0>>0]|0;
  HEAP8[$__p$0>>0] = $17;
  $18 = (($$0) + 1|0);
  $19 = (($__p$0) + 1|0);
  $$0 = $18;$__p$0 = $19;
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = (($this) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = (($this) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = (($this) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $19 = ($$0|0)==($__last|0);
  if ($19) {
   break;
  }
  $20 = HEAP32[$$0>>2]|0;
  HEAP32[$__p$0>>2] = $20;
  $21 = (($$0) + 4|0);
  $22 = (($__p$0) + 4|0);
  $$0 = $21;$__p$0 = $22;
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = (($this) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = (($this) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = 1;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = (4784);
 __THREW__ = 0;
 invoke_viii(452,($12|0),(4840|0),($0|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $19 = ___cxa_find_matching_catch()|0;
  $20 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($19|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(4888|0),(96|0));
  // unreachable;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj($this,$__state) {
 $this = $this|0;
 $__state = $__state|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | $__state;
 __ZNSt3__18ios_base5clearEj($this,$2);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4824 + 8|0));
 __THREW__ = 0;
 invoke_vii(453,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = (($this) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = (($this) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = (($this) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = (($this) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = (($this) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 32|0);
 $3 = (($this) + 36|0);
 $i$0 = $1;
 while(1) {
  $4 = ($i$0|0)==(0);
  if ($4) {
   break;
  }
  $5 = (($i$0) + -1)|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = (($6) + ($5<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$3>>2]|0;
  $10 = (($9) + ($5<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
  $i$0 = $5;
 }
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(-1);
 do {
  if ($3) {
   $4 = (($this) + 28|0);
   __ZNSt3__16localeC2ERKS0_($0,$4);
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7016|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 28|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    $11 = (invoke_iii($10|0,($5|0),32)|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     __ZNSt3__16localeD2Ev($0);
     $16 = $11 << 24 >> 24;
     HEAP32[$1>>2] = $16;
     $18 = $16;
     break;
    }
   }
   $14 = ___cxa_find_matching_catch()|0;
   $15 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($14|0);
   // unreachable;
  } else {
   $18 = $2;
  }
 } while(0);
 $17 = $18&255;
 STACKTOP = sp;return ($17|0);
}
function __ZNKSt3__18ios_base6getlocEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 __ZNSt3__16localeC2ERKS0_($agg$result,$0);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4648 + 8|0));
 return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = (($this) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = (($this) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = (($this) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = (($this) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = (($this) + 32|0);
 $8 = (($this) + 28|0);
 dest=$7+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4664 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4664 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $__c&255;
  $9 = (FUNCTION_TABLE_iii[$7 & 1023]($this,$8)|0);
  $$0 = $9;
 } else {
  $10 = (($1) + 1|0);
  HEAP32[$0>>2] = $10;
  HEAP8[$1>>0] = $__c;
  $11 = $__c&255;
  $$0 = $11;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iiii[$2 & 1023]($this,$__s,$__n)|0);
 return ($3|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4664 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = (($this) + 8|0);
 ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($this,$__gbeg,$__gnext,$__gend) {
 $this = $this|0;
 $__gbeg = $__gbeg|0;
 $__gnext = $__gnext|0;
 $__gend = $__gend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__gbeg;
 $1 = (($this) + 12|0);
 HEAP32[$1>>2] = $__gnext;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $__gend;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($__n)|0);
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($this,$__pbeg,$__pend) {
 $this = $this|0;
 $__pbeg = $__pbeg|0;
 $__pend = $__pend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $__pbeg;
 $1 = (($this) + 20|0);
 HEAP32[$1>>2] = $__pbeg;
 $2 = (($this) + 28|0);
 HEAP32[$2>>2] = $__pend;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($agg$result) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($agg$result) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = (($this) + 16|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = (($3) + 1|0);
   HEAP32[$0>>2] = $6;
   $7 = HEAP8[$3>>0]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $13 = $11&255;
   $storemerge = $13;
  }
  HEAP8[$$0>>0] = $storemerge;
  $14 = (($__i$0) + 1)|0;
  $15 = (($$0) + 1|0);
  $$0 = $15;$__i$0 = $14;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = (($this) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = (($this) + 28|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP8[$$0>>0]|0;
   $7 = (($3) + 1|0);
   HEAP32[$0>>2] = $7;
   HEAP8[$3>>0] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP8[$$0>>0]|0;
   $12 = $11&255;
   $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
   $14 = ($13|0)==(-1);
   if ($14) {
    $__i$0$lcssa = $__i$0;
    break;
   }
  }
  $15 = (($$0) + 1|0);
  $16 = (($__i$0) + 1)|0;
  $$0 = $15;$__i$0 = $16;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(412,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = (($10) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = (($15) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = (($22) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(455,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = (($35) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(419,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = (($this) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = (($1) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = (($17) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = (($22) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = (($30) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(455,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(420);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = ($0<<24>>24)!=(0);
 return ($1|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($this|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 L1: do {
  if ($5) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
   label = 18;
  } else {
   $6 = HEAP8[$__s>>0]|0;
   $7 = ($6<<24>>24)==(0);
   do {
    if (!($7)) {
     $8 = HEAP32[$this>>2]|0;
     $9 = (($8) + -12|0);
     $10 = HEAP32[$9>>2]|0;
     $$sum = (($10) + 28)|0;
     $11 = (($this) + ($$sum)|0);
     __ZNSt3__16localeC2ERKS0_($2,$11);
     __THREW__ = 0;
     $12 = (invoke_iii(454,($2|0),(5704|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = (($15) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum3 = (($17) + 76)|0;
      $21 = (($this) + ($$sum3)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $$sum5 = (($17) + 28)|0;
        $24 = (($this) + ($$sum5)|0);
        __ZNSt3__16localeC2ERKS0_($1,$24);
        __THREW__ = 0;
        $25 = (invoke_iii(454,($1|0),(7016|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = (($28) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $38 = $36;
          label = 9;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $38 = $22;
        label = 9;
       }
      } while(0);
      if ((label|0) == 9) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = (($39) + 16|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
       invoke_viiiiii($41|0,($3|0),($12|0),($$byval_copy|0),($20|0),($37|0),($__n|0));
       $42 = __THREW__; __THREW__ = 0;
       $43 = $42&1;
       if (!($43)) {
        $44 = HEAP32[$3>>2]|0;
        $45 = ($44|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = (($46) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum4 = (($48) + 16)|0;
        $50 = (($this) + ($$sum4)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(455,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
     label = 18;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = (($61) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi7Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(419,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE($this,$vtt,$__sb) {
 $this = $this|0;
 $vtt = $vtt|0;
 $__sb = $__sb|0;
 var $$sum$i = 0, $$sum1$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($vtt) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 $2 = (($vtt) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($this) + ($5)|0);
 HEAP32[$6>>2] = $3;
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = 0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (($8) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($this) + ($10)|0);
 __ZNSt3__18ios_base4initEPv($11,$__sb);
 $$sum$i = (($10) + 72)|0;
 $12 = (($this) + ($$sum$i)|0);
 HEAP32[$12>>2] = 0;
 $$sum1$i = (($10) + 76)|0;
 $13 = (($this) + ($$sum1$i)|0);
 HEAP32[$13>>2] = -1;
 $14 = (($this) + 8|0);
 $15 = (($vtt) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$14>>2] = $16;
 $17 = (($vtt) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + -12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($14) + ($20)|0);
 HEAP32[$21>>2] = $18;
 $22 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $22;
 $23 = (($vtt) + 20|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($22) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (($this) + ($26)|0);
 HEAP32[$27>>2] = $24;
 $28 = (($vtt) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$14>>2] = $29;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 $1 = (($0) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (4728|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,4744,35);
 }
 return;
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[4792>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((4792|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[4784>>2] = ((5288 + 8|0));
   ___cxa_guard_release((4792|0));
  }
 }
 return (4784|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = ((4800 + 8|0));
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP8[$$02>>0]|0;
  $3 = HEAP8[$$01>>0]|0;
  $4 = ($2<<24>>24)<($3<<24>>24);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3<<24>>24)<($2<<24>>24);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 1|0);
  $7 = (($$01) + 1|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP8[$__p$0>>0]|0;
  $3 = $2 << 24 >> 24;
  $4 = (($3) + ($1))|0;
  $5 = $4 & -268435456;
  $6 = $5 >>> 24;
  $7 = $6 | $5;
  $8 = $7 ^ $4;
  $9 = (($__p$0) + 1|0);
  $__h$0 = $8;$__p$0 = $9;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP32[$$02>>2]|0;
  $3 = HEAP32[$$01>>2]|0;
  $4 = ($2|0)<($3|0);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3|0)<($2|0);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 4|0);
  $7 = (($$01) + 4|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP32[$__p$0>>2]|0;
  $3 = (($2) + ($1))|0;
  $4 = $3 & -268435456;
  $5 = $4 >>> 24;
  $6 = $5 | $4;
  $7 = $6 ^ $3;
  $8 = (($__p$0) + 4|0);
  $__h$0 = $7;$__p$0 = $8;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7016|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7160|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(456,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre36 = 0, $$pre38 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0;
 var $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7016|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 32|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5528|0),(((5528 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L17: do {
      if ($23) {
       label = 47;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre38 = (($__buf) + 8|0);
        $$pre$phi37Z2D = $29;$$pre$phi39Z2D = $$pre38;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre36 = (($__buf) + 1|0);
        $$pre$phi37Z2D = $$pre36;$$pre$phi39Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L23: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $45 = 0;
        } else {
         $33 = (($$pre$i$i$i10) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i10) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 46;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $45 = 0;
          } else {
           $45 = $$pre$i$i$i10;
          }
         } else {
          $45 = $$pre$i$i$i10;
         }
        }
        $46 = ($45|0)==(0|0);
        $47 = HEAP32[$__e>>2]|0;
        $48 = ($47|0)==(0|0);
        do {
         if ($48) {
          label = 28;
         } else {
          $49 = (($47) + 12|0);
          $50 = HEAP32[$49>>2]|0;
          $51 = (($47) + 16|0);
          $52 = HEAP32[$51>>2]|0;
          $53 = ($50|0)==($52|0);
          if (!($53)) {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L23;
           }
          }
          $54 = HEAP32[$47>>2]|0;
          $55 = (($54) + 36|0);
          $56 = HEAP32[$55>>2]|0;
          __THREW__ = 0;
          $57 = (invoke_ii($56|0,($47|0))|0);
          $58 = __THREW__; __THREW__ = 0;
          $59 = $58&1;
          if ($59) {
           label = 46;
           break L23;
          }
          $60 = ($57|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 28;
           break;
          } else {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 28) {
         label = 0;
         if ($46) {
          $$lcssa = $45;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $177 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 46;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i26 = (($84) + -1)|0;
          $85 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 46;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi37Z2D;
         } else {
          $91 = HEAP32[$$pre$phi39Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($45) + 12|0);
        $105 = HEAP32[$104>>2]|0;
        $106 = (($45) + 16|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ($105|0)==($107|0);
        if ($108) {
         $109 = HEAP32[$45>>2]|0;
         $110 = (($109) + 36|0);
         $111 = HEAP32[$110>>2]|0;
         __THREW__ = 0;
         $112 = (invoke_ii($111|0,($45|0))|0);
         $113 = __THREW__; __THREW__ = 0;
         $114 = $113&1;
         if ($114) {
          label = 46;
          break;
         } else {
          $$0$i$i = $112;
         }
        } else {
         $115 = HEAP8[$105>>0]|0;
         $116 = $115&255;
         $$0$i$i = $116;
        }
        $117 = $$0$i$i&255;
        $118 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($117,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $119 = ($118|0)==(0);
        if (!($119)) {
         $$lcssa = $45;$$pre$i2$i$i = $177;$__a$2 = $__a$1;
         break;
        }
        $120 = HEAP32[$104>>2]|0;
        $121 = HEAP32[$106>>2]|0;
        $122 = ($120|0)==($121|0);
        if ($122) {
         $123 = HEAP32[$45>>2]|0;
         $124 = (($123) + 40|0);
         $125 = HEAP32[$124>>2]|0;
         __THREW__ = 0;
         (invoke_ii($125|0,($45|0))|0);
         $126 = __THREW__; __THREW__ = 0;
         $127 = $126&1;
         if ($127) {
          label = 46;
          break;
         }
        } else {
         $128 = (($120) + 1|0);
         HEAP32[$104>>2] = $128;
        }
        $$pre$i$i$i10 = $45;$__a$0 = $__a$1;
       }
       if ((label|0) == 46) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $129 = HEAP32[$__a_end>>2]|0;
       $130 = $129;
       $131 = $__a$2;
       $132 = (($130) - ($131))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($132|0),0);
       $133 = __THREW__; __THREW__ = 0;
       $134 = $133&1;
       if ($134) {
        label = 47;
       } else {
        $135 = HEAP8[$__buf>>0]|0;
        $136 = $135 & 1;
        $137 = ($136<<24>>24)==(0);
        if ($137) {
         $142 = $$pre$phi37Z2D;
        } else {
         $138 = HEAP32[$$pre$phi39Z2D>>2]|0;
         $142 = $138;
        }
        __THREW__ = 0;
        $139 = (invoke_i(459)|0);
        $140 = __THREW__; __THREW__ = 0;
        $141 = $140&1;
        if ($141) {
         label = 47;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $143 = (invoke_iiiii(460,($142|0),($139|0),(5568|0),($vararg_buffer|0))|0);
         $144 = __THREW__; __THREW__ = 0;
         $145 = $144&1;
         if ($145) {
          label = 47;
         } else {
          $146 = ($143|0)==(1);
          if (!($146)) {
           HEAP32[$__err>>2] = 4;
          }
          $147 = ($$lcssa|0)==(0|0);
          if ($147) {
           $160 = 0;
          } else {
           $148 = (($$lcssa) + 12|0);
           $149 = HEAP32[$148>>2]|0;
           $150 = (($$lcssa) + 16|0);
           $151 = HEAP32[$150>>2]|0;
           $152 = ($149|0)==($151|0);
           if ($152) {
            $153 = HEAP32[$$lcssa>>2]|0;
            $154 = (($153) + 36|0);
            $155 = HEAP32[$154>>2]|0;
            __THREW__ = 0;
            $156 = (invoke_ii($155|0,($$lcssa|0))|0);
            $157 = __THREW__; __THREW__ = 0;
            $158 = $157&1;
            if ($158) {
             label = 47;
             break;
            }
            $159 = ($156|0)==(-1);
            if ($159) {
             HEAP32[$__b>>2] = 0;
             $160 = 0;
            } else {
             $160 = $$lcssa;
            }
           } else {
            $160 = $$lcssa;
           }
          }
          $161 = ($160|0)==(0|0);
          $162 = ($$pre$i2$i$i|0)==(0|0);
          L89: do {
           if ($162) {
            label = 75;
           } else {
            $163 = (($$pre$i2$i$i) + 12|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = (($$pre$i2$i$i) + 16|0);
            $166 = HEAP32[$165>>2]|0;
            $167 = ($164|0)==($166|0);
            do {
             if ($167) {
              $168 = HEAP32[$$pre$i2$i$i>>2]|0;
              $169 = (($168) + 36|0);
              $170 = HEAP32[$169>>2]|0;
              __THREW__ = 0;
              $171 = (invoke_ii($170|0,($$pre$i2$i$i|0))|0);
              $172 = __THREW__; __THREW__ = 0;
              $173 = $172&1;
              if ($173) {
               label = 47;
               break L17;
              }
              $174 = ($171|0)==(-1);
              if (!($174)) {
               break;
              }
              HEAP32[$__e>>2] = 0;
              label = 75;
              break L89;
             }
            } while(0);
            if (!($161)) {
             label = 76;
            }
           }
          } while(0);
          if ((label|0) == 75) {
           if ($161) {
            label = 76;
           }
          }
          if ((label|0) == 76) {
           $175 = HEAP32[$__err>>2]|0;
           $176 = $175 | 2;
           HEAP32[$__err>>2] = $176;
          }
          HEAP32[$agg$result>>2] = $160;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 47) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = (($__atoms) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 26|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP8[$$0$i>>0]|0;
    $30 = ($29<<24>>24)==($__ct<<24>>24);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 1|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = (($0) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5528 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5528 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6912>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6912|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(461,2147483647,(6920|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((6912|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[6904>>2] = $4;
     ___cxa_guard_release((6912|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[6904>>2]|0;
 return ($7|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7008|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7168|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(462,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($59);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($44);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $$pre$phi40Z2D = 0, $$pre$phi42Z2D = 0, $$pre39 = 0, $$pre41 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7008|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 48|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5528|0),(((5528 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L17: do {
      if ($23) {
       label = 48;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre41 = (($__buf) + 8|0);
        $$pre$phi40Z2D = $29;$$pre$phi42Z2D = $$pre41;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre39 = (($__buf) + 1|0);
        $$pre$phi40Z2D = $$pre39;$$pre$phi42Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L23: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $105 = 0;$177 = 1;
        } else {
         $33 = (($$pre$i$i$i11) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i11) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 47;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $105 = 0;$177 = 1;
         } else {
          $105 = $$pre$i$i$i11;$177 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 29;
         } else {
          $48 = (($46) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = (($46) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = (($53) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 47;
            break L23;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 29;
           break;
          } else {
           if ($177) {
            $178 = $46;
            break;
           } else {
            $$lcssa = $105;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 29) {
         label = 0;
         if ($177) {
          $$lcssa = $105;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $178 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 47;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i30 = (($84) + -1)|0;
          $85 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 47;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi40Z2D;
         } else {
          $91 = HEAP32[$$pre$phi42Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($105) + 12|0);
        $106 = HEAP32[$104>>2]|0;
        $107 = (($105) + 16|0);
        $108 = HEAP32[$107>>2]|0;
        $109 = ($106|0)==($108|0);
        if ($109) {
         $110 = HEAP32[$105>>2]|0;
         $111 = (($110) + 36|0);
         $112 = HEAP32[$111>>2]|0;
         __THREW__ = 0;
         $113 = (invoke_ii($112|0,($105|0))|0);
         $114 = __THREW__; __THREW__ = 0;
         $115 = $114&1;
         if ($115) {
          label = 47;
          break;
         } else {
          $$0$i$i = $113;
         }
        } else {
         $116 = HEAP32[$106>>2]|0;
         $$0$i$i = $116;
        }
        $117 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $118 = ($117|0)==(0);
        if (!($118)) {
         $$lcssa = $105;$$pre$i3$i$i = $178;$__a$2 = $__a$1;
         break;
        }
        $119 = HEAP32[$104>>2]|0;
        $120 = HEAP32[$107>>2]|0;
        $121 = ($119|0)==($120|0);
        if ($121) {
         $122 = HEAP32[$105>>2]|0;
         $123 = (($122) + 40|0);
         $124 = HEAP32[$123>>2]|0;
         __THREW__ = 0;
         (invoke_ii($124|0,($105|0))|0);
         $125 = __THREW__; __THREW__ = 0;
         $126 = $125&1;
         if ($126) {
          label = 47;
          break;
         }
        } else {
         $127 = (($119) + 4|0);
         HEAP32[$104>>2] = $127;
        }
        $$pre$i$i$i11 = $105;$__a$0 = $__a$1;
       }
       if ((label|0) == 47) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $128 = HEAP32[$__a_end>>2]|0;
       $129 = $128;
       $130 = $__a$2;
       $131 = (($129) - ($130))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($131|0),0);
       $132 = __THREW__; __THREW__ = 0;
       $133 = $132&1;
       if ($133) {
        label = 48;
       } else {
        $134 = HEAP8[$__buf>>0]|0;
        $135 = $134 & 1;
        $136 = ($135<<24>>24)==(0);
        if ($136) {
         $141 = $$pre$phi40Z2D;
        } else {
         $137 = HEAP32[$$pre$phi42Z2D>>2]|0;
         $141 = $137;
        }
        __THREW__ = 0;
        $138 = (invoke_i(459)|0);
        $139 = __THREW__; __THREW__ = 0;
        $140 = $139&1;
        if ($140) {
         label = 48;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $142 = (invoke_iiiii(460,($141|0),($138|0),(5568|0),($vararg_buffer|0))|0);
         $143 = __THREW__; __THREW__ = 0;
         $144 = $143&1;
         if ($144) {
          label = 48;
         } else {
          $145 = ($142|0)==(1);
          if (!($145)) {
           HEAP32[$__err>>2] = 4;
          }
          $146 = ($$lcssa|0)==(0|0);
          if ($146) {
           $176 = 0;$179 = 1;
          } else {
           $147 = (($$lcssa) + 12|0);
           $148 = HEAP32[$147>>2]|0;
           $149 = (($$lcssa) + 16|0);
           $150 = HEAP32[$149>>2]|0;
           $151 = ($148|0)==($150|0);
           if ($151) {
            $152 = HEAP32[$$lcssa>>2]|0;
            $153 = (($152) + 36|0);
            $154 = HEAP32[$153>>2]|0;
            __THREW__ = 0;
            $155 = (invoke_ii($154|0,($$lcssa|0))|0);
            $156 = __THREW__; __THREW__ = 0;
            $157 = $156&1;
            if ($157) {
             label = 48;
             break;
            } else {
             $$0$i$i$i$i = $155;
            }
           } else {
            $158 = HEAP32[$148>>2]|0;
            $$0$i$i$i$i = $158;
           }
           $159 = ($$0$i$i$i$i|0)==(-1);
           if ($159) {
            HEAP32[$__b>>2] = 0;
            $176 = 0;$179 = 1;
           } else {
            $176 = $$lcssa;$179 = 0;
           }
          }
          $160 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($160) {
            label = 77;
           } else {
            $161 = (($$pre$i3$i$i) + 12|0);
            $162 = HEAP32[$161>>2]|0;
            $163 = (($$pre$i3$i$i) + 16|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = ($162|0)==($164|0);
            if ($165) {
             $166 = HEAP32[$$pre$i3$i$i>>2]|0;
             $167 = (($166) + 36|0);
             $168 = HEAP32[$167>>2]|0;
             __THREW__ = 0;
             $169 = (invoke_ii($168|0,($$pre$i3$i$i|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              label = 48;
              break L17;
             } else {
              $$0$i$i1$i$i = $169;
             }
            } else {
             $172 = HEAP32[$162>>2]|0;
             $$0$i$i1$i$i = $172;
            }
            $173 = ($$0$i$i1$i$i|0)==(-1);
            if ($173) {
             HEAP32[$__e>>2] = 0;
             label = 77;
             break;
            } else {
             if ($179) {
              break;
             } else {
              label = 79;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 77) {
           if ($179) {
            label = 79;
           }
          }
          if ((label|0) == 79) {
           $174 = HEAP32[$__err>>2]|0;
           $175 = $174 | 2;
           HEAP32[$__err>>2] = $175;
          }
          HEAP32[$agg$result>>2] = $176;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 48) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = (($__atoms) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 104|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP32[$$0$i>>2]|0;
    $30 = ($29|0)==($__ct|0);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 4|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = (($0) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5528 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    }
    $49 = (5528 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5528|0),(((5528 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7160|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__thousands_sep>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5528|0),(((5528 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7160|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__decimal_point>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP8[$__thousands_sep>>0] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 32|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP8[$$0$i>>0]|0;
    $43 = ($42<<24>>24)==($__ct<<24>>24);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 1|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5528 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = (($51) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = (($51) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = (($62) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        $78 = $73&255;
        $79 = $78 >>> 1;
        $80 = $79;
       } else {
        $76 = (($__grouping) + 4|0);
        $77 = HEAP32[$76>>2]|0;
        $80 = $77;
       }
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = (($82) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = (($89) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7008|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5528|0),(((5528 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7168|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__thousands_sep>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7008|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5528|0),(((5528 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7168|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__decimal_point>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP32[$__thousands_sep>>2] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 128|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP32[$$0$i>>2]|0;
    $43 = ($42|0)==($__ct|0);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 4|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5528 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = (($52) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = (($52) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       if ($74) {
        $77 = $72&255;
        $78 = $77 >>> 1;
        $79 = $78;
       } else {
        $75 = (($__grouping) + 4|0);
        $76 = HEAP32[$75>>2]|0;
        $79 = $76;
       }
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = (($81) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = (($88) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre3 = 0, $$pre5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7160|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $57 = ___cxa_find_matching_catch()|0;
     $58 = tempRet0;
     $59 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($59)|0);
     $$0 = $57;$$01 = $58;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 1|0);
      $$pre5 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $25;$$pre$phi6Z2D = $$pre5;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre3 = (($__nm) + 1|0);
      $$ph = $24;$$pre$phi4Z2D = $$pre3;$$pre$phi6Z2D = $23;
     }
     $26 = (($__nm) + 4|0);
     $28 = $20;$37 = $$ph;
     L13: while(1) {
      $27 = $28 & 1;
      $29 = ($27<<24>>24)==(0);
      if ($29) {
       $32 = $28&255;
       $33 = $32 >>> 1;
       $35 = $$pre$phi4Z2D;$36 = $33;
      } else {
       $30 = HEAP32[$$pre$phi6Z2D>>2]|0;
       $31 = HEAP32[$26>>2]|0;
       $35 = $30;$36 = $31;
      }
      $34 = (($35) + ($36)|0);
      $38 = ($37|0)==($34|0);
      if ($38) {
       label = 24;
       break;
      }
      $39 = HEAP8[$37>>0]|0;
      $40 = HEAP32[$__s>>2]|0;
      $41 = ($40|0)==(0|0);
      do {
       if (!($41)) {
        $42 = (($40) + 24|0);
        $43 = HEAP32[$42>>2]|0;
        $44 = (($40) + 28|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = ($43|0)==($45|0);
        if (!($46)) {
         $47 = (($43) + 1|0);
         HEAP32[$42>>2] = $47;
         HEAP8[$43>>0] = $39;
         break;
        }
        $48 = HEAP32[$40>>2]|0;
        $49 = (($48) + 52|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = $39&255;
        __THREW__ = 0;
        $52 = (invoke_iii($50|0,($40|0),($51|0))|0);
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if ($54) {
         label = 23;
         break L13;
        }
        $55 = ($52|0)==(-1);
        if ($55) {
         HEAP32[$__s>>2] = 0;
        }
       }
      } while(0);
      $56 = (($37) + 1|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $28 = $$pre;$37 = $56;
     }
     if ((label|0) == 23) {
      $60 = ___cxa_find_matching_catch()|0;
      $61 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      $$0 = $60;$$01 = $61;
      break;
     }
     else if ((label|0) == 24) {
      $62 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $62;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5808+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5808+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5808+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5808+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5808+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5808+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5712,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $$1$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $$01 = $__len;$$1 = $$1$ph;
 while(1) {
  $6 = HEAP8[$$01>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $$1$lcssa = $$1;
   break;
  }
  $8 = (($$01) + 1|0);
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = $6;
  $$01 = $8;$$1 = $9;
 }
 $10 = $__flags & 74;
 do {
  if ((($10|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else if ((($10|0) == 8)) {
   $11 = $__flags & 16384;
   $12 = ($11|0)==(0);
   if ($12) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = (($__nb) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = (($__nb) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = (($__nb) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$9 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7016)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$9 = $81 ? $75 : $86;
      $87 = (($$9) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 1|0);
       HEAP32[$__oe>>2] = $92;
       HEAP8[$91>>0] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 28|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 1|0);
     HEAP32[$__oe>>2] = $111;
     HEAP8[$110>>0] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -1|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP8[$$01$i$i>>0]|0;
      $123 = HEAP8[$120>>0]|0;
      HEAP8[$$01$i$i>>0] = $123;
      HEAP8[$120>>0] = $122;
      $124 = (($$01$i$i) + 1|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $126 = HEAP32[$__oe>>2]|0;
   $storemerge = $126;
  } else {
   $127 = $__np;
   $128 = $__nb;
   $129 = (($127) - ($128))|0;
   $130 = (($__ob) + ($129)|0);
   $storemerge = $130;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5720,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5808+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5808+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5808+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5808+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5808+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5808+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5712,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5720,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 88|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 150|0;
 $__nb = sp + 84|0;
 $__o = sp + 92|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5728,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $40 = $$pre9;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 1;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $72 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $52 = $$pre10;$62 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $72 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $66 = ___cxa_find_matching_catch()|0;
      $67 = tempRet0;
      $68 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($68)|0);
      $$0 = $66;$$01 = $67;$69 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $72 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      _free($62);
      if (!($63)) {
      }
      $65 = ($64|0)==(0|0);
      _free($64);
      if (!($65)) {
      }
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$69 = $72;
  }
  $70 = ($69|0)==(0|0);
  _free($69);
  if (!($70)) {
  }
  $71 = ($64|0)==(0|0);
  _free($64);
  if ($71) {
   $$127 = $$01;$$18 = $$0;
  } else {
   $$127 = $$01;$$18 = $$0;
  }
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = (($$1) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;$$2 = $$2$ph;
 while(1) {
  $11 = HEAP8[$$01>>0]|0;
  $12 = ($11<<24>>24)==(0);
  if ($12) {
   $$2$lcssa = $$2;
   break;
  }
  $13 = (($$01) + 1|0);
  $14 = (($$2) + 1|0);
  HEAP8[$$2>>0] = $11;
  $$01 = $13;$$2 = $14;
 }
 do {
  if ((($6|0) == 256)) {
   $17 = $7 & 1;
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $15 = $7 & 1;
   $16 = ($15|0)==(0);
   if ($16) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $19 = $7 & 1;
   $20 = ($19|0)!=(0);
   if ($8) {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$30 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0;
 var $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa37 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7016)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7160)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 28|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 1|0);
       HEAP32[$__oe>>2] = $40;
       HEAP8[$39>>0] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 28|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 1|0);
       HEAP32[$__oe>>2] = $50;
       HEAP8[$49>>0] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 32|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$30 = $111 ? $105 : $116;
      $117 = (($$30) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 1|0);
       HEAP32[$__oe>>2] = $122;
       HEAP8[$121>>0] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 28|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 1|0);
     HEAP32[$__oe>>2] = $141;
     HEAP8[$140>>0] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -1|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP8[$$01$i$i6>>0]|0;
      $153 = HEAP8[$150>>0]|0;
      HEAP8[$$01$i$i6>>0] = $153;
      HEAP8[$150>>0] = $152;
      $154 = (($$01$i$i6) + 1|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;
    }
   }
   $__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa37 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 28|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 1|0);
    HEAP32[$__oe>>2] = $174;
    HEAP8[$173>>0] = $170;
    $175 = (($__nf$2) + 1|0);
    $__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 1|0);
    HEAP32[$__oe>>2] = $165;
    HEAP8[$164>>0] = $161;
    $166 = (($__nf$2$lcssa37) + 1|0);
    $__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$__oe>>2]|0;
   $177 = HEAP32[$0>>2]|0;
   $178 = (($177) + 32|0);
   $179 = HEAP32[$178>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($179|0,($0|0),($__nf$3|0),($__ne|0),($176|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 80|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 142|0;
 $__nb = sp + 76|0;
 $__o = sp + 84|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5736,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$61 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$61 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $38 = $$pre9;$61 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 1;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $66 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $50 = $$pre10;$60 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $66 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $62 = ___cxa_find_matching_catch()|0;
      $63 = tempRet0;
      $64 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($64)|0);
      $$0 = $62;$$01 = $63;$65 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $66 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$agg$result>>2] = $59;
      _free($60);
      _free($61);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$65 = $66;
  }
  _free($65);
  _free($61);
  $$127 = $$01;$$18 = $$0;
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7016|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 32|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7168|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $55 = ___cxa_find_matching_catch()|0;
     $56 = tempRet0;
     $57 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($57)|0);
     $$0 = $55;$$01 = $56;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 4|0);
      $$pre3 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $$pre3;$$pre$phiZ2D = $25;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre2 = (($__nm) + 4|0);
      $$ph = $24;$$pre$phi4Z2D = $23;$$pre$phiZ2D = $$pre2;
     }
     $27 = $20;$36 = $$ph;
     while(1) {
      $26 = $27 & 1;
      $28 = ($26<<24>>24)==(0);
      if ($28) {
       $31 = $27&255;
       $32 = $31 >>> 1;
       $34 = $$pre$phiZ2D;$35 = $32;
      } else {
       $29 = HEAP32[$$pre$phi4Z2D>>2]|0;
       $30 = HEAP32[$$pre$phiZ2D>>2]|0;
       $34 = $29;$35 = $30;
      }
      $33 = (($34) + ($35<<2)|0);
      $37 = ($36|0)==($33|0);
      if ($37) {
       label = 24;
       break;
      }
      $38 = HEAP32[$36>>2]|0;
      $39 = HEAP32[$__s>>2]|0;
      $40 = ($39|0)==(0|0);
      if (!($40)) {
       $41 = (($39) + 24|0);
       $42 = HEAP32[$41>>2]|0;
       $43 = (($39) + 28|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = ($42|0)==($44|0);
       if ($45) {
        $46 = HEAP32[$39>>2]|0;
        $47 = (($46) + 52|0);
        $48 = HEAP32[$47>>2]|0;
        __THREW__ = 0;
        $49 = (invoke_iii($48|0,($39|0),($38|0))|0);
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         label = 23;
         break;
        } else {
         $$0$i$i = $49;
        }
       } else {
        $52 = (($42) + 4|0);
        HEAP32[$41>>2] = $52;
        HEAP32[$42>>2] = $38;
        $$0$i$i = $38;
       }
       $53 = ($$0$i$i|0)==(-1);
       if ($53) {
        HEAP32[$__s>>2] = 0;
       }
      }
      $54 = (($36) + 4|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $27 = $$pre;$36 = $54;
     }
     if ((label|0) == 23) {
      $58 = ___cxa_find_matching_catch()|0;
      $59 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      $$0 = $58;$$01 = $59;
      break;
     }
     else if ((label|0) == 24) {
      $60 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $60;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5808+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5808+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5808+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5808+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5808+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5808+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5712,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$8 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7008)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $130 = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$8 = $81 ? $75 : $86;
      $87 = (($$8) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 4|0);
       HEAP32[$__oe>>2] = $92;
       HEAP32[$91>>2] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 44|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 4|0);
     HEAP32[$__oe>>2] = $111;
     HEAP32[$110>>2] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116<<2)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     $130 = $117;
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -4|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP32[$$01$i$i>>2]|0;
      $123 = HEAP32[$120>>2]|0;
      HEAP32[$$01$i$i>>2] = $123;
      HEAP32[$120>>2] = $122;
      $124 = (($$01$i$i) + 4|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     $130 = $118;
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $storemerge = $130;
  } else {
   $126 = $__np;
   $127 = $__nb;
   $128 = (($126) - ($127))|0;
   $129 = (($__ob) + ($128<<2)|0);
   $storemerge = $129;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5720,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5808+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5808+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5808+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5808+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5808+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5808+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5712,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5720,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 316|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 320|0;
 $__nb = sp + 312|0;
 $__o = sp + 84|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5728,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $40 = $$pre7;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 3;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $70 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $52 = $$pre8;$62 = $44;$__ob$0 = $44;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $70 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      $67 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($67)|0);
      $$0 = $65;$$01 = $66;$68 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $70 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       _free($62);
      }
      _free($64);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$68 = $70;
  }
  $69 = ($68|0)==(0|0);
  if (!($69)) {
   _free($68);
  }
  _free($64);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$29 = 0, $$__dg$0 = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa40 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0;
 var $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7008)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 44|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 4|0);
       HEAP32[$__oe>>2] = $40;
       HEAP32[$39>>2] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 44|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 4|0);
       HEAP32[$__oe>>2] = $50;
       HEAP32[$49>>2] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 48|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90<<2)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;$191 = $92;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$29 = $111 ? $105 : $116;
      $117 = (($$29) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 4|0);
       HEAP32[$__oe>>2] = $122;
       HEAP32[$121>>2] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 44|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 4|0);
     HEAP32[$__oe>>2] = $141;
     HEAP32[$140>>2] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146<<2)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;$191 = $147;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -4|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP32[$$01$i$i6>>2]|0;
      $153 = HEAP32[$150>>2]|0;
      HEAP32[$$01$i$i6>>2] = $153;
      HEAP32[$150>>2] = $152;
      $154 = (($$01$i$i6) + 4|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;$191 = $148;
    }
   }
   $192 = $191;$__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $$lcssa = $192;$__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa40 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 44|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 4|0);
    HEAP32[$__oe>>2] = $174;
    HEAP32[$173>>2] = $170;
    $175 = (($__nf$2) + 1|0);
    $192 = $174;$__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 4|0);
    HEAP32[$__oe>>2] = $165;
    HEAP32[$164>>2] = $161;
    $166 = (($__nf$2$lcssa40) + 1|0);
    $179 = $165;$__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $179 = $$lcssa;$__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$0>>2]|0;
   $177 = (($176) + 48|0);
   $178 = HEAP32[$177>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($178|0,($0|0),($__nf$3|0),($__ne|0),($179|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183<<2)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189<<2)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0;
 var $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 308|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 312|0;
 $__nb = sp + 304|0;
 $__o = sp + 76|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5736,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$62 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$62 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $38 = $$pre7;$62 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 3;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $68 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $50 = $$pre8;$60 = $42;$__ob$0 = $42;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $68 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $63 = ___cxa_find_matching_catch()|0;
      $64 = tempRet0;
      $65 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($65)|0);
      $$0 = $63;$$01 = $64;$66 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $68 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $59;
      HEAP32[$agg$result>>2] = $59;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       _free($60);
      }
      _free($62);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$66 = $68;
  }
  $67 = ($66|0)==(0|0);
  if (!($67)) {
   _free($66);
  }
  _free($62);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7008|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3<<2)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20<<2)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i25 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa65$lcssa = 0, $$lcssa65$lcssa74 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa71 = 0, $$lcssa72 = 0;
 var $$lcssa73 = 0, $$pre = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i2038 = 0, $$pre$i2$i$i2039 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i23 = 0, $isascii1$i4 = 0, $or$cond = 0, $sext = 0, $tmp$i$i22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7016|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  $40 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($40)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $8 = (($4) + 8|0);
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $9 = ($$0$ph|0)!=($__fmte|0);
  $10 = $$pre;
  while(1) {
   $11 = ($10|0)==(0);
   $or$cond = $9 & $11;
   $12 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $12;
    label = 63;
    break L4;
   }
   $13 = ($12|0)==(0|0);
   if ($13) {
    $24 = 0;
   } else {
    $14 = (($12) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($12) + 16|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($15|0)==($17|0);
    if ($18) {
     $19 = HEAP32[$12>>2]|0;
     $20 = (($19) + 36|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (FUNCTION_TABLE_ii[$21 & 1023]($12)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      HEAP32[$__b>>2] = 0;
      $24 = 0;
     } else {
      $24 = $12;
     }
    } else {
     $24 = $12;
    }
   }
   $25 = ($24|0)==(0|0);
   $26 = HEAP32[$__e>>2]|0;
   $27 = ($26|0)==(0|0);
   do {
    if ($27) {
     label = 14;
    } else {
     $28 = (($26) + 12|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (($26) + 16|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ($29|0)==($31|0);
     if ($32) {
      $33 = HEAP32[$26>>2]|0;
      $34 = (($33) + 36|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (FUNCTION_TABLE_ii[$35 & 1023]($26)|0);
      $37 = ($36|0)==(-1);
      if ($37) {
       HEAP32[$__e>>2] = 0;
       label = 14;
       break;
      }
     }
     if ($25) {
      $190 = $26;
     } else {
      $$lcssa64 = $24;
      label = 15;
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    } else {
     $190 = 0;
    }
   }
   $41 = HEAP8[$$0$ph>>0]|0;
   $42 = HEAP32[$4>>2]|0;
   $43 = (($42) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_iiii[$44 & 1023]($4,$41,0)|0);
   $46 = ($45<<24>>24)==(37);
   if ($46) {
    $$lcssa65 = $24;$$lcssa68 = $190;
    label = 18;
    break;
   }
   $68 = HEAP8[$$0$ph>>0]|0;
   $isascii1$i = ($68<<24>>24)>(-1);
   if ($isascii1$i) {
    $69 = $68 << 24 >> 24;
    $70 = HEAP32[$8>>2]|0;
    $71 = (($70) + ($69<<1)|0);
    $72 = HEAP16[$71>>1]|0;
    $73 = $72 & 8192;
    $74 = ($73<<16>>16)==(0);
    if (!($74)) {
     $$lcssa66 = $24;$$lcssa69 = $190;$$lcssa71 = $70;
     label = 29;
     break;
    }
   }
   $133 = (($24) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (($24) + 16|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = ($134|0)==($136|0);
   if ($137) {
    $138 = HEAP32[$24>>2]|0;
    $139 = (($138) + 36|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = (FUNCTION_TABLE_ii[$140 & 1023]($24)|0);
    $$0$i$i25 = $141;
   } else {
    $142 = HEAP8[$134>>0]|0;
    $143 = $142&255;
    $$0$i$i25 = $143;
   }
   $144 = $$0$i$i25&255;
   $145 = HEAP32[$4>>2]|0;
   $146 = (($145) + 12|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = (FUNCTION_TABLE_iii[$147 & 1023]($4,$144)|0);
   $149 = HEAP8[$$0$ph>>0]|0;
   $150 = HEAP32[$4>>2]|0;
   $151 = (($150) + 12|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (FUNCTION_TABLE_iii[$152 & 1023]($4,$149)|0);
   $154 = ($148<<24>>24)==($153<<24>>24);
   if ($154) {
    $$lcssa67 = $24;$$lcssa72 = $133;$$lcssa73 = $135;
    label = 58;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $10 = 4;
  }
  if ((label|0) == 18) {
   label = 0;
   $47 = (($$0$ph) + 1|0);
   $48 = ($47|0)==($__fmte|0);
   if ($48) {
    $$lcssa65$lcssa = $$lcssa65;
    label = 19;
    break;
   }
   $49 = HEAP8[$47>>0]|0;
   $50 = HEAP32[$4>>2]|0;
   $51 = (($50) + 36|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($4,$49,0)|0);
   if ((($53<<24>>24) == 48) | (($53<<24>>24) == 69)) {
    $54 = (($$0$ph) + 2|0);
    $55 = ($54|0)==($__fmte|0);
    if ($55) {
     $$lcssa65$lcssa74 = $$lcssa65;
     label = 22;
     break;
    }
    $56 = HEAP8[$54>>0]|0;
    $57 = HEAP32[$4>>2]|0;
    $58 = (($57) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($4,$56,0)|0);
    $64 = $$lcssa65;$67 = $47;$__cmd$0 = $60;$__opt$0 = $53;
   } else {
    $64 = $$lcssa65;$67 = $$0$ph;$__cmd$0 = $53;$__opt$0 = 0;
   }
   $61 = HEAP32[$this>>2]|0;
   $62 = (($61) + 36|0);
   $63 = HEAP32[$62>>2]|0;
   HEAP32[$2>>2] = $64;
   HEAP32[$3>>2] = $$lcssa68;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$63 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $65 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $65;
   $66 = (($67) + 2|0);
   $$0$ph$be = $66;
  }
  else if ((label|0) == 29) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 1|0);
    $75 = ($$2|0)==($__fmte|0);
    if ($75) {
     $$2$lcssa = $__fmte;
     break;
    }
    $76 = HEAP8[$$2>>0]|0;
    $isascii1$i4 = ($76<<24>>24)>(-1);
    if (!($isascii1$i4)) {
     $$2$lcssa = $$2;
     break;
    }
    $77 = $76 << 24 >> 24;
    $78 = (($$lcssa71) + ($77<<1)|0);
    $79 = HEAP16[$78>>1]|0;
    $80 = $79 & 8192;
    $81 = ($80<<16>>16)==(0);
    if ($81) {
     $$2$lcssa = $$2;
     break;
    } else {
     $$0$pn = $$2;
    }
   }
   $$pre$i$i$i16 = $$lcssa66;$$pre$i2$i$i20 = $$lcssa69;$95 = $$lcssa69;
   L39: while(1) {
    $82 = ($$pre$i$i$i16|0)==(0|0);
    if ($82) {
     $93 = 0;
    } else {
     $83 = (($$pre$i$i$i16) + 12|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = (($$pre$i$i$i16) + 16|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($84|0)==($86|0);
     if ($87) {
      $88 = HEAP32[$$pre$i$i$i16>>2]|0;
      $89 = (($88) + 36|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (FUNCTION_TABLE_ii[$90 & 1023]($$pre$i$i$i16)|0);
      $92 = ($91|0)==(-1);
      if ($92) {
       HEAP32[$__b>>2] = 0;
       $93 = 0;
      } else {
       $93 = $$pre$i$i$i16;
      }
     } else {
      $93 = $$pre$i$i$i16;
     }
    }
    $94 = ($93|0)==(0|0);
    $96 = ($95|0)==(0|0);
    do {
     if ($96) {
      $$pre$i2$i$i2039 = $$pre$i2$i$i20;
      label = 43;
     } else {
      $97 = (($95) + 12|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = (($95) + 16|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($98|0)==($100|0);
      if (!($101)) {
       if ($94) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $95;
        break;
       } else {
        break L39;
       }
      }
      $102 = HEAP32[$95>>2]|0;
      $103 = (($102) + 36|0);
      $104 = HEAP32[$103>>2]|0;
      $105 = (FUNCTION_TABLE_ii[$104 & 1023]($95)|0);
      $106 = ($105|0)==(-1);
      if ($106) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i2039 = 0;
       label = 43;
       break;
      } else {
       $107 = ($$pre$i2$i$i20|0)==(0|0);
       $tmp$i$i22 = $94 ^ $107;
       if ($tmp$i$i22) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $$pre$i2$i$i20;
        break;
       } else {
        break L39;
       }
      }
     }
    } while(0);
    if ((label|0) == 43) {
     label = 0;
     if ($94) {
      break;
     } else {
      $$pre$i2$i$i2038 = $$pre$i2$i$i2039;$191 = 0;
     }
    }
    $108 = (($93) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = (($93) + 16|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = ($109|0)==($111|0);
    if ($112) {
     $113 = HEAP32[$93>>2]|0;
     $114 = (($113) + 36|0);
     $115 = HEAP32[$114>>2]|0;
     $116 = (FUNCTION_TABLE_ii[$115 & 1023]($93)|0);
     $$0$i$i = $116;
    } else {
     $117 = HEAP8[$109>>0]|0;
     $118 = $117&255;
     $$0$i$i = $118;
    }
    $119 = $$0$i$i&255;
    $isascii1$i23 = ($119<<24>>24)>(-1);
    if (!($isascii1$i23)) {
     break;
    }
    $sext = $$0$i$i << 24;
    $120 = $sext >> 24;
    $121 = HEAP32[$8>>2]|0;
    $122 = (($121) + ($120<<1)|0);
    $123 = HEAP16[$122>>1]|0;
    $124 = $123 & 8192;
    $125 = ($124<<16>>16)==(0);
    if ($125) {
     break;
    }
    $126 = HEAP32[$108>>2]|0;
    $127 = HEAP32[$110>>2]|0;
    $128 = ($126|0)==($127|0);
    if ($128) {
     $129 = HEAP32[$93>>2]|0;
     $130 = (($129) + 40|0);
     $131 = HEAP32[$130>>2]|0;
     (FUNCTION_TABLE_ii[$131 & 1023]($93)|0);
    } else {
     $132 = (($126) + 1|0);
     HEAP32[$108>>2] = $132;
    }
    $$pre$i$i$i16 = $93;$$pre$i2$i$i20 = $$pre$i2$i$i2038;$95 = $191;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 58) {
   label = 0;
   $155 = HEAP32[$$lcssa72>>2]|0;
   $156 = HEAP32[$$lcssa73>>2]|0;
   $157 = ($155|0)==($156|0);
   if ($157) {
    $158 = HEAP32[$$lcssa67>>2]|0;
    $159 = (($158) + 40|0);
    $160 = HEAP32[$159>>2]|0;
    (FUNCTION_TABLE_ii[$160 & 1023]($$lcssa67)|0);
   } else {
    $161 = (($155) + 1|0);
    HEAP32[$$lcssa72>>2] = $161;
   }
   $162 = (($$0$ph) + 1|0);
   $$0$ph$be = $162;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 15) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa64;
 }
 else if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa;
 }
 else if ((label|0) == 22) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa74;
 }
 else if ((label|0) == 63) {
  $$pre$i$i$i7 = $$lcssa;
 }
 $163 = ($$pre$i$i$i7|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = (($$pre$i$i$i7) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = (($$pre$i$i$i7) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i7>>2]|0;
   $170 = (($169) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 1023]($$pre$i$i$i7)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i7;
   }
  } else {
   $174 = $$pre$i$i$i7;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 73;
  } else {
   $178 = (($176) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = (($176) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = (($183) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 1023]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 73;
     break;
    }
   }
   if (!($175)) {
    label = 74;
   }
  }
 } while(0);
 if ((label|0) == 73) {
  if ($175) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 HEAP32[$agg$result>>2] = $174;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,5920,((5920 + 8|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 1|0);
  $17 = (($6) + 1|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7016|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 1|0);
    $67 = (($56) + 1|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,5960,((5960 + 5|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,5936,((5936 + 8|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,5928,((5928 + 8|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,5944,((5944 + 11|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,5968,((5968 + 8|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 1|0);
    $128 = (($117) + 1|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__ct) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = (($1) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($1) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = (($8) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = (($15) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($15) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = (($22) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = (($27) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($27) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = (($33) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = (($46) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (($46) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = (($52) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
  } else {
   $55 = (($48) + 1|0);
   HEAP32[$47>>2] = $55;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = (($56) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($56) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = (($63) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 33;
  } else {
   $71 = (($$pre$i2$i$i6) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (($$pre$i2$i$i6) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = (($76) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 33;
     break;
    }
   }
   if (!($69)) {
    label = 34;
   }
  }
 } while(0);
 if ((label|0) == 33) {
  if ($69) {
   label = 34;
  }
 }
 if ((label|0) == 34) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = (($41) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = (($48) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (($48) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = (($55) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = (($50) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = (($60) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = (($60) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = (($65) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = (($$pre$i2$i$i611) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = (($$pre$i2$i$i611) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = (($78) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$0$i$i1$i$i25 = 0, $$0$i$i16 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa69$lcssa = 0, $$lcssa69$lcssa77 = 0;
 var $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$i$i$i21 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i12 = 0, $$pre$i3$i$i1243 = 0, $$pre$i3$i$i1244 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $or$cond = 0, $phitmp$i4$i$i13 = 0, $tmp$i$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7008|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $37 = ___cxa_find_matching_catch()|0;
  $38 = tempRet0;
  $39 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($39)|0);
  ___resumeException($37|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $8 = ($$0$ph|0)!=($__fmte|0);
  $9 = $$pre;
  while(1) {
   $10 = ($9|0)==(0);
   $or$cond = $8 & $10;
   $11 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $11;
    label = 67;
    break L4;
   }
   $12 = ($11|0)==(0|0);
   if ($12) {
    $127 = 0;$183 = 1;
   } else {
    $13 = (($11) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (($11) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14|0)==($16|0);
    if ($17) {
     $18 = HEAP32[$11>>2]|0;
     $19 = (($18) + 36|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (FUNCTION_TABLE_ii[$20 & 1023]($11)|0);
     $$0$i$i$i$i = $21;
    } else {
     $22 = HEAP32[$14>>2]|0;
     $$0$i$i$i$i = $22;
    }
    $23 = ($$0$i$i$i$i|0)==(-1);
    if ($23) {
     HEAP32[$__b>>2] = 0;
     $127 = 0;$183 = 1;
    } else {
     $127 = $11;$183 = 0;
    }
   }
   $24 = HEAP32[$__e>>2]|0;
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     label = 17;
    } else {
     $26 = (($24) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($24) + 16|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($27|0)==($29|0);
     if ($30) {
      $31 = HEAP32[$24>>2]|0;
      $32 = (($31) + 36|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (FUNCTION_TABLE_ii[$33 & 1023]($24)|0);
      $$0$i$i1$i$i = $34;
     } else {
      $35 = HEAP32[$27>>2]|0;
      $$0$i$i1$i$i = $35;
     }
     $36 = ($$0$i$i1$i$i|0)==(-1);
     if ($36) {
      HEAP32[$__e>>2] = 0;
      label = 17;
      break;
     } else {
      if ($183) {
       $184 = $24;
       break;
      } else {
       $$lcssa68 = $127;
       label = 19;
       break L4;
      }
     }
    }
   } while(0);
   if ((label|0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    } else {
     $184 = 0;
    }
   }
   $40 = HEAP32[$$0$ph>>2]|0;
   $41 = HEAP32[$4>>2]|0;
   $42 = (($41) + 52|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if ($45) {
    $$lcssa69 = $127;$$lcssa72 = $184;
    label = 22;
    break;
   }
   $67 = HEAP32[$$0$ph>>2]|0;
   $68 = HEAP32[$4>>2]|0;
   $69 = (($68) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_iiii[$70 & 1023]($4,8192,$67)|0);
   if ($71) {
    $$lcssa70 = $127;$$lcssa73 = $184;
    label = 32;
    break;
   }
   $126 = (($127) + 12|0);
   $128 = HEAP32[$126>>2]|0;
   $129 = (($127) + 16|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($128|0)==($130|0);
   if ($131) {
    $132 = HEAP32[$127>>2]|0;
    $133 = (($132) + 36|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (FUNCTION_TABLE_ii[$134 & 1023]($127)|0);
    $$0$i$i16 = $135;
   } else {
    $136 = HEAP32[$128>>2]|0;
    $$0$i$i16 = $136;
   }
   $137 = HEAP32[$4>>2]|0;
   $138 = (($137) + 28|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = (FUNCTION_TABLE_iii[$139 & 1023]($4,$$0$i$i16)|0);
   $141 = HEAP32[$$0$ph>>2]|0;
   $142 = HEAP32[$4>>2]|0;
   $143 = (($142) + 28|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = (FUNCTION_TABLE_iii[$144 & 1023]($4,$141)|0);
   $146 = ($140|0)==($145|0);
   if ($146) {
    $$lcssa71 = $127;$$lcssa75 = $126;$$lcssa76 = $129;
    label = 62;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $9 = 4;
  }
  if ((label|0) == 22) {
   label = 0;
   $46 = (($$0$ph) + 4|0);
   $47 = ($46|0)==($__fmte|0);
   if ($47) {
    $$lcssa69$lcssa = $$lcssa69;
    label = 23;
    break;
   }
   $48 = HEAP32[$46>>2]|0;
   $49 = HEAP32[$4>>2]|0;
   $50 = (($49) + 52|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
   if ((($52<<24>>24) == 48) | (($52<<24>>24) == 69)) {
    $53 = (($$0$ph) + 8|0);
    $54 = ($53|0)==($__fmte|0);
    if ($54) {
     $$lcssa69$lcssa77 = $$lcssa69;
     label = 26;
     break;
    }
    $55 = HEAP32[$53>>2]|0;
    $56 = HEAP32[$4>>2]|0;
    $57 = (($56) + 52|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
    $63 = $$lcssa69;$66 = $46;$__cmd$0 = $59;$__opt$0 = $52;
   } else {
    $63 = $$lcssa69;$66 = $$0$ph;$__cmd$0 = $52;$__opt$0 = 0;
   }
   $60 = HEAP32[$this>>2]|0;
   $61 = (($60) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP32[$2>>2] = $63;
   HEAP32[$3>>2] = $$lcssa72;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$62 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $64 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $64;
   $65 = (($66) + 8|0);
   $$0$ph$be = $65;
  }
  else if ((label|0) == 32) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 4|0);
    $72 = ($$2|0)==($__fmte|0);
    if ($72) {
     $$2$lcssa = $__fmte;
     break;
    }
    $73 = HEAP32[$$2>>2]|0;
    $74 = HEAP32[$4>>2]|0;
    $75 = (($74) + 12|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_iiii[$76 & 1023]($4,8192,$73)|0);
    if ($77) {
     $$0$pn = $$2;
    } else {
     $$2$lcssa = $$2;
     break;
    }
   }
   $$pre$i$i$i6 = $$lcssa70;$$pre$i3$i$i12 = $$lcssa73;$90 = $$lcssa73;
   L48: while(1) {
    $78 = ($$pre$i$i$i6|0)==(0|0);
    if ($78) {
     $103 = 1;$105 = 0;
    } else {
     $79 = (($$pre$i$i$i6) + 12|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = (($$pre$i$i$i6) + 16|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = ($80|0)==($82|0);
     if ($83) {
      $84 = HEAP32[$$pre$i$i$i6>>2]|0;
      $85 = (($84) + 36|0);
      $86 = HEAP32[$85>>2]|0;
      $87 = (FUNCTION_TABLE_ii[$86 & 1023]($$pre$i$i$i6)|0);
      $$0$i$i$i$i4 = $87;
     } else {
      $88 = HEAP32[$80>>2]|0;
      $$0$i$i$i$i4 = $88;
     }
     $89 = ($$0$i$i$i$i4|0)==(-1);
     if ($89) {
      HEAP32[$__b>>2] = 0;
      $103 = 1;$105 = 0;
     } else {
      $103 = 0;$105 = $$pre$i$i$i6;
     }
    }
    $91 = ($90|0)==(0|0);
    do {
     if ($91) {
      $$pre$i3$i$i1244 = $$pre$i3$i$i12;
      label = 48;
     } else {
      $92 = (($90) + 12|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = (($90) + 16|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = ($93|0)==($95|0);
      if ($96) {
       $97 = HEAP32[$90>>2]|0;
       $98 = (($97) + 36|0);
       $99 = HEAP32[$98>>2]|0;
       $100 = (FUNCTION_TABLE_ii[$99 & 1023]($90)|0);
       $$0$i$i1$i$i10 = $100;
      } else {
       $101 = HEAP32[$93>>2]|0;
       $$0$i$i1$i$i10 = $101;
      }
      $102 = ($$0$i$i1$i$i10|0)==(-1);
      if ($102) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i1244 = 0;
       label = 48;
       break;
      } else {
       $phitmp$i4$i$i13 = ($$pre$i3$i$i12|0)==(0|0);
       $tmp$i$i15 = $103 ^ $phitmp$i4$i$i13;
       if ($tmp$i$i15) {
        $$pre$i3$i$i1243 = $$pre$i3$i$i12;$185 = $$pre$i3$i$i12;
        break;
       } else {
        break L48;
       }
      }
     }
    } while(0);
    if ((label|0) == 48) {
     label = 0;
     if ($103) {
      break;
     } else {
      $$pre$i3$i$i1243 = $$pre$i3$i$i1244;$185 = 0;
     }
    }
    $104 = (($105) + 12|0);
    $106 = HEAP32[$104>>2]|0;
    $107 = (($105) + 16|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($106|0)==($108|0);
    if ($109) {
     $110 = HEAP32[$105>>2]|0;
     $111 = (($110) + 36|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = (FUNCTION_TABLE_ii[$112 & 1023]($105)|0);
     $$0$i$i = $113;
    } else {
     $114 = HEAP32[$106>>2]|0;
     $$0$i$i = $114;
    }
    $115 = HEAP32[$4>>2]|0;
    $116 = (($115) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($4,8192,$$0$i$i)|0);
    if (!($118)) {
     break;
    }
    $119 = HEAP32[$104>>2]|0;
    $120 = HEAP32[$107>>2]|0;
    $121 = ($119|0)==($120|0);
    if ($121) {
     $122 = HEAP32[$105>>2]|0;
     $123 = (($122) + 40|0);
     $124 = HEAP32[$123>>2]|0;
     (FUNCTION_TABLE_ii[$124 & 1023]($105)|0);
    } else {
     $125 = (($119) + 4|0);
     HEAP32[$104>>2] = $125;
    }
    $$pre$i$i$i6 = $105;$$pre$i3$i$i12 = $$pre$i3$i$i1243;$90 = $185;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 62) {
   label = 0;
   $147 = HEAP32[$$lcssa75>>2]|0;
   $148 = HEAP32[$$lcssa76>>2]|0;
   $149 = ($147|0)==($148|0);
   if ($149) {
    $150 = HEAP32[$$lcssa71>>2]|0;
    $151 = (($150) + 40|0);
    $152 = HEAP32[$151>>2]|0;
    (FUNCTION_TABLE_ii[$152 & 1023]($$lcssa71)|0);
   } else {
    $153 = (($147) + 4|0);
    HEAP32[$$lcssa75>>2] = $153;
   }
   $154 = (($$0$ph) + 4|0);
   $$0$ph$be = $154;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa68;
 }
 else if ((label|0) == 23) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa;
 }
 else if ((label|0) == 26) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa77;
 }
 else if ((label|0) == 67) {
  $$pre$i$i$i21 = $$lcssa;
 }
 $155 = ($$pre$i$i$i21|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = (($$pre$i$i$i21) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = (($$pre$i$i$i21) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i21>>2]|0;
   $162 = (($161) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 1023]($$pre$i$i$i21)|0);
   $$0$i$i$i$i19 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i19 = $165;
  }
  $166 = ($$0$i$i$i$i19|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i21;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 80;
  } else {
   $169 = (($167) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (($167) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = (($174) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 1023]($167)|0);
    $$0$i$i1$i$i25 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i25 = $178;
   }
   $179 = ($$0$i$i1$i$i25|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 80;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 82;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 80) {
  if ($186) {
   label = 82;
  }
 }
 if ((label|0) == 82) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 HEAP32[$agg$result>>2] = $182;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,6072,((6072 + 32|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 4|0);
  $17 = (($6) + 4|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22<<2)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7008|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7008|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7008|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7008|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 4|0);
    $67 = (($56) + 4|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72<<2)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,6240,((6240 + 32|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,6136,((6136 + 32|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,6104,((6104 + 32|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,6216,((6216 + 20|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,6168,((6168 + 44|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 4|0);
    $128 = (($117) + 4|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133<<2)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = (($0) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($0) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = (($7) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = (($13) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($13) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = (($20) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = (($26) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = (($32) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = (($37) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = (($41) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($41) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = (($47) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
  } else {
   $50 = (($43) + 4|0);
   HEAP32[$42>>2] = $50;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = (($51) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (($51) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = (($58) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 38;
  } else {
   $65 = (($$pre$i3$i$i9) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (($$pre$i3$i$i9) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = (($70) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 38;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 40;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($80) {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = (($46) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = (($53) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = (($48) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = (($58) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = (($58) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = (($63) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = (($$pre$i3$i$i915) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = (($$pre$i3$i$i915) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = (($75) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(459)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP8[$$0$i$i>>0]|0;
  $9 = ($8|0)==(0|0);
  do {
   if ($9) {
    $23 = 0;
   } else {
    $10 = (($8) + 24|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($8) + 28|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($11|0)==($13|0);
    if ($14) {
     $16 = HEAP32[$8>>2]|0;
     $17 = (($16) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $7&255;
     $20 = (FUNCTION_TABLE_iii[$18 & 1023]($8,$19)|0);
     $21 = ($20|0)==(-1);
     $$$i = $21 ? 0 : $8;
     $23 = $$$i;
     break;
    } else {
     $15 = (($11) + 1|0);
     HEAP32[$10>>2] = $15;
     HEAP8[$11>>0] = $7;
     $23 = $8;
     break;
    }
   }
  } while(0);
  $22 = (($$0$i$i) + 1|0);
  $$0$i$i = $22;$8 = $23;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = (($fmt) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = (($fmt) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = (($fmt) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = (($__nar) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP32[$$0$i$i>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $22 = 0;
  } else {
   $10 = (($8) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($8) + 28|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($11|0)==($13|0);
   if ($14) {
    $15 = HEAP32[$8>>2]|0;
    $16 = (($15) + 52|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (FUNCTION_TABLE_iii[$17 & 1023]($8,$7)|0);
    $$0$i$i$i$i = $18;
   } else {
    $19 = (($11) + 4|0);
    HEAP32[$10>>2] = $19;
    HEAP32[$11>>2] = $7;
    $$0$i$i$i$i = $7;
   }
   $20 = ($$0$i$i$i$i|0)==(-1);
   $$$i = $20 ? 0 : $8;
   $22 = $$$i;
  }
  $21 = (($$0$i$i) + 4|0);
  $$0$i$i = $21;$8 = $22;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 __THREW__ = 0;
 $12 = (invoke_iiiii(473,($__wb|0),($__nb|0),($9|0),($mb|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $22 = ($11|0)==(0|0);
  if (!($22)) {
   __THREW__ = 0;
   (invoke_ii(474,($11|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    $25 = ___cxa_find_matching_catch(0|0)|0;
    $26 = tempRet0;
    ___clang_call_terminate($25);
    // unreachable;
   }
  }
  ___resumeException($20|0);
  // unreachable;
 }
 $15 = ($11|0)==(0|0);
 if (!($15)) {
  __THREW__ = 0;
  (invoke_ii(474,($11|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   $18 = ___cxa_find_matching_catch(0|0)|0;
   $19 = tempRet0;
   ___clang_call_terminate($18);
   // unreachable;
  }
 }
 $27 = ($12|0)==(-1);
 if ($27) {
  __ZNSt3__121__throw_runtime_errorEPKc(7896);
  // unreachable;
 } else {
  $28 = (($__wb) + ($12<<2)|0);
  HEAP32[$__we>>2] = $28;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre14 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $32 = ___cxa_find_matching_catch()|0;
  $33 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$112 = $32;$$1210 = $33;$104 = 475;$105 = $__wbuf;
  label = 45;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7016|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 32|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6632|0),(((6632 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(98);
      if ($24) {
       $25 = (($23) + 2)|0;
       $26 = (_malloc($25)|0);
       $27 = ($26|0)==(0|0);
       if ($27) {
        __THREW__ = 0;
        invoke_v(465);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if ($29) {
         $30 = ___cxa_find_matching_catch()|0;
         $31 = tempRet0;
         $$0 = $30;$$01 = $31;
         break;
        } else {
         $38 = 0;$__nc$0 = 0;
        }
       } else {
        $38 = $26;$__nc$0 = $26;
       }
      } else {
       $38 = 0;$__nc$0 = $__nbuf;
      }
      $39 = HEAP8[$__neg>>0]|0;
      $40 = ($39<<24>>24)==(0);
      if ($40) {
       $__nc$1 = $__nc$0;
      } else {
       $41 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $41;
      }
      $42 = (($__atoms) + 10|0);
      $43 = $__atoms;
      $45 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $44 = ($__w$0>>>0)<($45>>>0);
       if (!($44)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $46 = HEAP8[$__w$0>>0]|0;
       $$0$i = $__atoms;
       while(1) {
        $47 = ($$0$i|0)==($42|0);
        if ($47) {
         $$0$lcssa$i = $42;
         break;
        }
        $48 = HEAP8[$$0$i>>0]|0;
        $49 = ($48<<24>>24)==($46<<24>>24);
        if ($49) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $50 = (($$0$i) + 1|0);
        $$0$i = $50;
       }
       $51 = $$0$lcssa$i;
       $52 = (($51) - ($43))|0;
       $53 = (6632 + ($52)|0);
       $54 = HEAP8[$53>>0]|0;
       HEAP8[$__nc$2>>0] = $54;
       $55 = (($__w$0) + 1|0);
       $56 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $45 = $$pre;$__nc$2 = $56;$__w$0 = $55;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $57 = (_sscanf($__nbuf,6648,$vararg_buffer)|0);
      $58 = ($57|0)==(1);
      if (!($58)) {
       __THREW__ = 0;
       invoke_vi(477,(6656|0));
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $36 = ___cxa_find_matching_catch()|0;
        $37 = tempRet0;
        _free($38);
        $$0 = $36;$$01 = $37;
        break;
       }
      }
      _free($38);
     }
     $61 = HEAP32[$__b>>2]|0;
     $62 = ($61|0)==(0|0);
     do {
      if ($62) {
       $75 = 0;
      } else {
       $63 = (($61) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($61) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$61>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($61|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         label = 11;
         break L3;
        }
        $74 = ($71|0)==(-1);
        if ($74) {
         HEAP32[$__b>>2] = 0;
         $75 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $75 = $$pre$i$i$i;
         break;
        }
       } else {
        $75 = $61;
       }
      }
     } while(0);
     $76 = ($75|0)==(0|0);
     $77 = HEAP32[$__e>>2]|0;
     $78 = ($77|0)==(0|0);
     do {
      if ($78) {
       label = 37;
      } else {
       $79 = (($77) + 12|0);
       $80 = HEAP32[$79>>2]|0;
       $81 = (($77) + 16|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ($80|0)==($82|0);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = (($84) + 36|0);
        $86 = HEAP32[$85>>2]|0;
        __THREW__ = 0;
        $87 = (invoke_ii($86|0,($77|0))|0);
        $88 = __THREW__; __THREW__ = 0;
        $89 = $88&1;
        if ($89) {
         label = 11;
         break L3;
        }
        $90 = ($87|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         label = 37;
         break;
        }
       }
       if (!($76)) {
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 37) {
      if ($76) {
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $91 = HEAP32[$__err>>2]|0;
      $92 = $91 | 2;
      HEAP32[$__err>>2] = $92;
     }
     $93 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $93;
     $94 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($94)|0);
     $95 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $96 = ($95|0)==(0|0);
     if (!($96)) {
      $97 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($97|0,($95|0));
      $98 = __THREW__; __THREW__ = 0;
      $99 = $98&1;
      if ($99) {
       $100 = ___cxa_find_matching_catch(0|0)|0;
       $101 = tempRet0;
       ___clang_call_terminate($100);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $$0 = $34;$$01 = $35;
  }
  $102 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($102)|0);
  $$pre7 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $103 = ($$pre7|0)==(0|0);
  if ($103) {
   $$113 = $$0;$$1211 = $$01;
  } else {
   $$pre14 = HEAP32[$1>>2]|0;
   $$112 = $$0;$$1210 = $$01;$104 = $$pre14;$105 = $$pre7;
   label = 45;
  }
 }
 if ((label|0) == 45) {
  __THREW__ = 0;
  invoke_vi($104|0,($105|0));
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  } else {
   $$113 = $$112;$$1211 = $$1210;
  }
 }
 ___resumeException($$113|0);
 // unreachable;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i113 = 0, $$0$i$i120 = 0, $$0$i$i129 = 0, $$0$i$i139 = 0, $$0$i$i156 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i67 = 0, $$0$i$i74 = 0, $$0$i$i93 = 0, $$0$i$i96 = 0, $$290 = 0, $$291 = 0, $$292 = 0, $$293 = 0;
 var $$294 = 0, $$lcssa = 0, $$lcssa322 = 0, $$lcssa324 = 0, $$lcssa326 = 0, $$mask = 0, $$mask280 = 0, $$mask281 = 0, $$mask282 = 0, $$mask283 = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i103 = 0, $$pre$i$i$i143 = 0, $$pre$i$i$i160 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i48 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i107 = 0;
 var $$pre$i2$i$i147 = 0, $$pre$i2$i$i164 = 0, $$pre$i2$i$i164269 = 0, $$pre$i2$i$i164270 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52256 = 0, $$pre$i2$i$i52258 = 0, $$pre$i2$i$i83 = 0, $$pre$i2$i$i83274$ph = 0, $$pre$i2$i$i83274287 = 0, $$pre260 = 0, $$pre262 = 0, $$pre263 = 0, $$pre265 = 0, $$pre266 = 0, $$pre267 = 0, $$pre268 = 0, $$pre273 = 0, $$pre277 = 0, $$pre279 = 0;
 var $$sum = 0, $$sum284 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0;
 var $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i17 = 0, $__i$0$i$i21 = 0, $__i$0$i$i26 = 0, $__ng$0 = 0, $__ng$0$lcssa323 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0;
 var $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i18 = 0, $exitcond$i$i22 = 0, $exitcond$i$i27 = 0, $isascii1$i = 0, $isascii1$i137 = 0, $isascii1$i170 = 0, $isascii1$i61 = 0, $isascii1$i72 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0;
 var $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext209 = 0, $sext210 = 0, $sext211 = 0, $switch = 0, $tmp$i$i149 = 0, $tmp$i$i166 = 0, $tmp$i$i54 = 0, $tmp$i$i85 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i17 = 0;
 while(1) {
  $exitcond$i$i18 = ($__i$0$i$i17|0)==(3);
  if ($exitcond$i$i18) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i17<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i17) + 1)|0;
  $__i$0$i$i17 = $8;
 }
 $__i$0$i$i21 = 0;
 while(1) {
  $exitcond$i$i22 = ($__i$0$i$i21|0)==(3);
  if ($exitcond$i$i22) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i21<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i21) + 1)|0;
  $__i$0$i$i21 = $10;
 }
 $__i$0$i$i26 = 0;
 while(1) {
  $exitcond$i$i27 = ($__i$0$i$i26|0)==(3);
  if ($exitcond$i$i27) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i26<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i26) + 1)|0;
  $__i$0$i$i26 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(478,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $78 = ___cxa_find_matching_catch()|0;
   $79 = tempRet0;
   $lpad$phi$index = $78;$lpad$phi$index7 = $79;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__ct) + 8|0);
   $17 = (($__nsn) + 4|0);
   $18 = (($__nsn) + 8|0);
   $19 = (($__psn) + 4|0);
   $20 = (($__psn) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = (($__sym) + 1|0);
   $24 = (($__sym) + 8|0);
   $25 = (($__sym) + 4|0);
   $26 = (($__spaces) + 1|0);
   $27 = (($__spaces) + 8|0);
   $28 = (($__spaces) + 4|0);
   $29 = (($__pat) + 3|0);
   $30 = (($__grp) + 4|0);
   $896 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L23: while(1) {
    $31 = ($__p$0>>>0)<(4);
    if (!($31)) {
     $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break;
    }
    $32 = HEAP32[$__b>>2]|0;
    $33 = ($32|0)==(0|0);
    do {
     if ($33) {
      $46 = 0;
     } else {
      $34 = (($32) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35|0)==($37|0);
      if ($38) {
       $39 = HEAP32[$32>>2]|0;
       $40 = (($39) + 36|0);
       $41 = HEAP32[$40>>2]|0;
       __THREW__ = 0;
       $42 = (invoke_ii($41|0,($32|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if ($44) {
        label = 40;
        break L23;
       }
       $45 = ($42|0)==(-1);
       if ($45) {
        HEAP32[$__b>>2] = 0;
        $46 = 0;
        break;
       } else {
        $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
        $46 = $$pre$i$i$i32;
        break;
       }
      } else {
       $46 = $32;
      }
     }
    } while(0);
    $47 = ($46|0)==(0|0);
    $48 = HEAP32[$__e>>2]|0;
    $49 = ($48|0)==(0|0);
    do {
     if ($49) {
      label = 31;
     } else {
      $50 = (($48) + 12|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (($48) + 16|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ($51|0)==($53|0);
      if (!($54)) {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
      $55 = HEAP32[$48>>2]|0;
      $56 = (($55) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      __THREW__ = 0;
      $58 = (invoke_ii($57|0,($48|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       label = 40;
       break L23;
      }
      $61 = ($58|0)==(-1);
      if ($61) {
       HEAP32[$__e>>2] = 0;
       label = 31;
       break;
      } else {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
     }
    } while(0);
    if ((label|0) == 31) {
     label = 0;
     if ($47) {
      $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 315;
      break;
     } else {
      $897 = 0;
     }
    }
    $62 = (($__pat) + ($__p$0)|0);
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    L46: do {
     switch ($64|0) {
     case 0:  {
      $128 = ($__p$0|0)==(3);
      if ($128) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 58;
      }
      break;
     }
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $87 = HEAP32[$__b>>2]|0;
       $88 = (($87) + 12|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = (($87) + 16|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ($89|0)==($91|0);
       if ($92) {
        $93 = HEAP32[$87>>2]|0;
        $94 = (($93) + 36|0);
        $95 = HEAP32[$94>>2]|0;
        __THREW__ = 0;
        $96 = (invoke_ii($95|0,($87|0))|0);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         label = 40;
         break L23;
        } else {
         $$0$i$i42 = $96;
        }
       } else {
        $99 = HEAP8[$89>>0]|0;
        $100 = $99&255;
        $$0$i$i42 = $100;
       }
       $101 = $$0$i$i42&255;
       $isascii1$i = ($101<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 56;
        break L23;
       }
       $sext211 = $$0$i$i42 << 24;
       $102 = $sext211 >> 24;
       $103 = HEAP32[$16>>2]|0;
       $104 = (($103) + ($102<<1)|0);
       $105 = HEAP16[$104>>1]|0;
       $106 = $105 & 8192;
       $107 = ($106<<16>>16)==(0);
       if ($107) {
        label = 56;
        break L23;
       }
       $108 = HEAP32[$__b>>2]|0;
       $109 = (($108) + 12|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($108) + 16|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ($110|0)==($112|0);
       if ($113) {
        $114 = HEAP32[$108>>2]|0;
        $115 = (($114) + 40|0);
        $116 = HEAP32[$115>>2]|0;
        __THREW__ = 0;
        $117 = (invoke_ii($116|0,($108|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         label = 40;
         break L23;
        } else {
         $$0$i$i45 = $117;
        }
       } else {
        $120 = (($110) + 1|0);
        HEAP32[$109>>2] = $120;
        $121 = HEAP8[$110>>0]|0;
        $122 = $121&255;
        $$0$i$i45 = $122;
       }
       $123 = $$0$i$i45&255;
       __THREW__ = 0;
       invoke_vii(372,($__spaces|0),($123|0));
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 40;
        break L23;
       } else {
        label = 58;
       }
      }
      break;
     }
     case 2:  {
      $401 = ($__trailing_sign$0|0)!=(0|0);
      $402 = ($__p$0>>>0)<(2);
      $or$cond = $402 | $401;
      if (!($or$cond)) {
       $403 = ($__p$0|0)==(2);
       if ($403) {
        $404 = HEAP8[$29>>0]|0;
        $405 = ($404<<24>>24)!=(0);
        $406 = $405;
       } else {
        $406 = 0;
       }
       $brmerge = $22 | $406;
       if (!($brmerge)) {
        $898 = $896;$__trailing_sign$1 = 0;
        break L46;
       }
      }
      $407 = HEAP8[$__sym>>0]|0;
      $408 = $407 & 1;
      $409 = ($408<<24>>24)==(0);
      $410 = HEAP32[$24>>2]|0;
      $$ = $409 ? $23 : $410;
      $411 = ($__p$0|0)==(0);
      L67: do {
       if ($411) {
        $$ph = $$;
       } else {
        $412 = (($__p$0) + -1)|0;
        $413 = (($__pat) + ($412)|0);
        $414 = HEAP8[$413>>0]|0;
        $switch = ($414&255)<(2);
        if ($switch) {
         $415 = $407&255;
         $416 = $415 >>> 1;
         $417 = HEAP32[$16>>2]|0;
         $418 = HEAP32[$24>>2]|0;
         $419 = HEAP32[$25>>2]|0;
         $421 = $$;
         while(1) {
          $$290 = $409 ? $23 : $418;
          $$291 = $409 ? $416 : $419;
          $420 = (($$290) + ($$291)|0);
          $422 = ($421|0)==($420|0);
          if ($422) {
           $$lcssa = $421;
           break;
          }
          $423 = HEAP8[$421>>0]|0;
          $isascii1$i170 = ($423<<24>>24)>(-1);
          if (!($isascii1$i170)) {
           $$lcssa = $421;
           break;
          }
          $424 = $423 << 24 >> 24;
          $425 = (($417) + ($424<<1)|0);
          $426 = HEAP16[$425>>1]|0;
          $427 = $426 & 8192;
          $428 = ($427<<16>>16)==(0);
          if ($428) {
           $$lcssa = $421;
           break;
          }
          $429 = (($421) + 1|0);
          $421 = $429;
         }
         $$292 = $409 ? $23 : $418;
         $430 = $$lcssa;
         $431 = $$292;
         $432 = (($430) - ($431))|0;
         $433 = HEAP8[$__spaces>>0]|0;
         $434 = $433 & 1;
         $435 = ($434<<24>>24)==(0);
         if ($435) {
          $437 = $433&255;
          $438 = $437 >>> 1;
          $440 = $438;
         } else {
          $436 = HEAP32[$28>>2]|0;
          $440 = $436;
         }
         $439 = ($432>>>0)>($440>>>0);
         do {
          if (!($439)) {
           if ($435) {
            $444 = $433&255;
            $445 = $444 >>> 1;
            $$sum284 = (($445) - ($432))|0;
            $446 = ((($__spaces) + ($$sum284)|0) + 1|0);
            $447 = $433&255;
            $448 = $447 >>> 1;
            $450 = $26;$451 = $448;$903 = $446;
           } else {
            $441 = HEAP32[$27>>2]|0;
            $442 = HEAP32[$28>>2]|0;
            $$sum = (($442) - ($432))|0;
            $443 = (($441) + ($$sum)|0);
            $450 = $441;$451 = $442;$903 = $443;
           }
           $449 = (($450) + ($451)|0);
           $$293 = $409 ? $23 : $418;
           $452 = $903;$456 = $$293;
           while(1) {
            $453 = ($452|0)==($449|0);
            if ($453) {
             label = 183;
             break;
            }
            $454 = HEAP8[$452>>0]|0;
            $455 = HEAP8[$456>>0]|0;
            $457 = ($454<<24>>24)==($455<<24>>24);
            if (!($457)) {
             label = 181;
             break;
            }
            $458 = (($452) + 1|0);
            $459 = (($456) + 1|0);
            $452 = $458;$456 = $459;
           }
           if ((label|0) == 181) {
            label = 0;
            break;
           }
           else if ((label|0) == 183) {
            label = 0;
            $$ph = $$lcssa;
            break L67;
           }
          }
         } while(0);
         $$294 = $409 ? $23 : $418;
         $$ph = $$294;
        } else {
         $$ph = $$;
        }
       }
      } while(0);
      $$pre$i2$i$i164 = $897;$461 = $407;$470 = $$ph;$488 = $897;
      L95: while(1) {
       $460 = $461 & 1;
       $462 = ($460<<24>>24)==(0);
       if ($462) {
        $465 = $461&255;
        $466 = $465 >>> 1;
        $468 = $23;$469 = $466;
       } else {
        $463 = HEAP32[$24>>2]|0;
        $464 = HEAP32[$25>>2]|0;
        $468 = $463;$469 = $464;
       }
       $467 = (($468) + ($469)|0);
       $471 = ($470|0)==($467|0);
       if ($471) {
        $$lcssa324 = $470;
        break;
       }
       $472 = HEAP32[$__b>>2]|0;
       $473 = ($472|0)==(0|0);
       do {
        if ($473) {
         $486 = 0;
        } else {
         $474 = (($472) + 12|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = (($472) + 16|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = ($475|0)==($477|0);
         if ($478) {
          $479 = HEAP32[$472>>2]|0;
          $480 = (($479) + 36|0);
          $481 = HEAP32[$480>>2]|0;
          __THREW__ = 0;
          $482 = (invoke_ii($481|0,($472|0))|0);
          $483 = __THREW__; __THREW__ = 0;
          $484 = $483&1;
          if ($484) {
           label = 37;
           break L23;
          }
          $485 = ($482|0)==(-1);
          if ($485) {
           HEAP32[$__b>>2] = 0;
           $486 = 0;
           break;
          } else {
           $$pre$i$i$i160 = HEAP32[$__b>>2]|0;
           $486 = $$pre$i$i$i160;
           break;
          }
         } else {
          $486 = $472;
         }
        }
       } while(0);
       $487 = ($486|0)==(0|0);
       $489 = ($488|0)==(0|0);
       do {
        if ($489) {
         $$pre$i2$i$i164270 = $$pre$i2$i$i164;
         label = 201;
        } else {
         $490 = (($488) + 12|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = (($488) + 16|0);
         $493 = HEAP32[$492>>2]|0;
         $494 = ($491|0)==($493|0);
         if (!($494)) {
          if ($487) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $488;
           break;
          } else {
           $$lcssa324 = $470;
           break L95;
          }
         }
         $495 = HEAP32[$488>>2]|0;
         $496 = (($495) + 36|0);
         $497 = HEAP32[$496>>2]|0;
         __THREW__ = 0;
         $498 = (invoke_ii($497|0,($488|0))|0);
         $499 = __THREW__; __THREW__ = 0;
         $500 = $499&1;
         if ($500) {
          label = 37;
          break L23;
         }
         $501 = ($498|0)==(-1);
         if ($501) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i164270 = 0;
          label = 201;
          break;
         } else {
          $502 = ($$pre$i2$i$i164|0)==(0|0);
          $tmp$i$i166 = $487 ^ $502;
          if ($tmp$i$i166) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $$pre$i2$i$i164;
           break;
          } else {
           $$lcssa324 = $470;
           break L95;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($487) {
         $$lcssa324 = $470;
         break;
        } else {
         $$pre$i2$i$i164269 = $$pre$i2$i$i164270;$904 = 0;
        }
       }
       $503 = HEAP32[$__b>>2]|0;
       $504 = (($503) + 12|0);
       $505 = HEAP32[$504>>2]|0;
       $506 = (($503) + 16|0);
       $507 = HEAP32[$506>>2]|0;
       $508 = ($505|0)==($507|0);
       if ($508) {
        $509 = HEAP32[$503>>2]|0;
        $510 = (($509) + 36|0);
        $511 = HEAP32[$510>>2]|0;
        __THREW__ = 0;
        $512 = (invoke_ii($511|0,($503|0))|0);
        $513 = __THREW__; __THREW__ = 0;
        $514 = $513&1;
        if ($514) {
         label = 37;
         break L23;
        } else {
         $$0$i$i156 = $512;
        }
       } else {
        $515 = HEAP8[$505>>0]|0;
        $516 = $515&255;
        $$0$i$i156 = $516;
       }
       $517 = $$0$i$i156&255;
       $518 = HEAP8[$470>>0]|0;
       $519 = ($517<<24>>24)==($518<<24>>24);
       if (!($519)) {
        $$lcssa324 = $470;
        break;
       }
       $520 = HEAP32[$__b>>2]|0;
       $521 = (($520) + 12|0);
       $522 = HEAP32[$521>>2]|0;
       $523 = (($520) + 16|0);
       $524 = HEAP32[$523>>2]|0;
       $525 = ($522|0)==($524|0);
       if ($525) {
        $526 = HEAP32[$520>>2]|0;
        $527 = (($526) + 40|0);
        $528 = HEAP32[$527>>2]|0;
        __THREW__ = 0;
        (invoke_ii($528|0,($520|0))|0);
        $529 = __THREW__; __THREW__ = 0;
        $530 = $529&1;
        if ($530) {
         label = 37;
         break L23;
        }
       } else {
        $531 = (($522) + 1|0);
        HEAP32[$521>>2] = $531;
       }
       $532 = (($470) + 1|0);
       $$pre268 = HEAP8[$__sym>>0]|0;
       $$pre$i2$i$i164 = $$pre$i2$i$i164269;$461 = $$pre268;$470 = $532;$488 = $904;
      }
      if ($22) {
       $533 = HEAP8[$__sym>>0]|0;
       $534 = $533 & 1;
       $535 = ($534<<24>>24)==(0);
       if ($535) {
        $538 = $533&255;
        $539 = $538 >>> 1;
        $541 = $23;$542 = $539;
       } else {
        $536 = HEAP32[$24>>2]|0;
        $537 = HEAP32[$25>>2]|0;
        $541 = $536;$542 = $537;
       }
       $540 = (($541) + ($542)|0);
       $543 = ($$lcssa324|0)==($540|0);
       if ($543) {
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L23;
       }
      } else {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 4:  {
      $65 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i147 = $897;$562 = $897;$617 = $896;$__ng$0 = 0;
      L138: while(1) {
       $546 = HEAP32[$__b>>2]|0;
       $547 = ($546|0)==(0|0);
       do {
        if ($547) {
         $560 = 0;
        } else {
         $548 = (($546) + 12|0);
         $549 = HEAP32[$548>>2]|0;
         $550 = (($546) + 16|0);
         $551 = HEAP32[$550>>2]|0;
         $552 = ($549|0)==($551|0);
         if ($552) {
          $553 = HEAP32[$546>>2]|0;
          $554 = (($553) + 36|0);
          $555 = HEAP32[$554>>2]|0;
          __THREW__ = 0;
          $556 = (invoke_ii($555|0,($546|0))|0);
          $557 = __THREW__; __THREW__ = 0;
          $558 = $557&1;
          if ($558) {
           label = 39;
           break L23;
          }
          $559 = ($556|0)==(-1);
          if ($559) {
           HEAP32[$__b>>2] = 0;
           $560 = 0;
           break;
          } else {
           $$pre$i$i$i143 = HEAP32[$__b>>2]|0;
           $560 = $$pre$i$i$i143;
           break;
          }
         } else {
          $560 = $546;
         }
        }
       } while(0);
       $561 = ($560|0)==(0|0);
       $563 = ($562|0)==(0|0);
       do {
        if ($563) {
         $905 = $$pre$i2$i$i147;
         label = 229;
        } else {
         $564 = (($562) + 12|0);
         $565 = HEAP32[$564>>2]|0;
         $566 = (($562) + 16|0);
         $567 = HEAP32[$566>>2]|0;
         $568 = ($565|0)==($567|0);
         if (!($568)) {
          if ($561) {
           $906 = $$pre$i2$i$i147;$907 = $562;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L138;
          }
         }
         $569 = HEAP32[$562>>2]|0;
         $570 = (($569) + 36|0);
         $571 = HEAP32[$570>>2]|0;
         __THREW__ = 0;
         $572 = (invoke_ii($571|0,($562|0))|0);
         $573 = __THREW__; __THREW__ = 0;
         $574 = $573&1;
         if ($574) {
          label = 39;
          break L23;
         }
         $575 = ($572|0)==(-1);
         if ($575) {
          HEAP32[$__e>>2] = 0;
          $905 = 0;
          label = 229;
          break;
         } else {
          $576 = ($$pre$i2$i$i147|0)==(0|0);
          $tmp$i$i149 = $561 ^ $576;
          if ($tmp$i$i149) {
           $906 = $$pre$i2$i$i147;$907 = $$pre$i2$i$i147;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L138;
          }
         }
        }
       } while(0);
       if ((label|0) == 229) {
        label = 0;
        if ($561) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $905;$__ng$0$lcssa323 = $__ng$0;
         break;
        } else {
         $906 = $905;$907 = 0;
        }
       }
       $577 = HEAP32[$__b>>2]|0;
       $578 = (($577) + 12|0);
       $579 = HEAP32[$578>>2]|0;
       $580 = (($577) + 16|0);
       $581 = HEAP32[$580>>2]|0;
       $582 = ($579|0)==($581|0);
       if ($582) {
        $583 = HEAP32[$577>>2]|0;
        $584 = (($583) + 36|0);
        $585 = HEAP32[$584>>2]|0;
        __THREW__ = 0;
        $586 = (invoke_ii($585|0,($577|0))|0);
        $587 = __THREW__; __THREW__ = 0;
        $588 = $587&1;
        if ($588) {
         label = 39;
         break L23;
        } else {
         $$0$i$i139 = $586;
        }
       } else {
        $589 = HEAP8[$579>>0]|0;
        $590 = $589&255;
        $$0$i$i139 = $590;
       }
       $591 = $$0$i$i139&255;
       $isascii1$i137 = ($591<<24>>24)>(-1);
       if ($isascii1$i137) {
        $sext209 = $$0$i$i139 << 24;
        $592 = $sext209 >> 24;
        $593 = HEAP32[$16>>2]|0;
        $594 = (($593) + ($592<<1)|0);
        $595 = HEAP16[$594>>1]|0;
        $596 = $595 & 2048;
        $597 = ($596<<16>>16)==(0);
        if ($597) {
         label = 240;
        } else {
         $598 = HEAP32[$__wn>>2]|0;
         $599 = HEAP32[$0>>2]|0;
         $600 = ($598|0)==($599|0);
         if ($600) {
          __THREW__ = 0;
          invoke_viii(479,($__wb|0),($__wn|0),($0|0));
          $601 = __THREW__; __THREW__ = 0;
          $602 = $601&1;
          if ($602) {
           label = 39;
           break L23;
          }
          $$pre277 = HEAP32[$__wn>>2]|0;
          $604 = $$pre277;
         } else {
          $604 = $598;
         }
         $603 = (($604) + 1|0);
         HEAP32[$__wn>>2] = $603;
         HEAP8[$604>>0] = $591;
         $605 = (($__ng$0) + 1)|0;
         $908 = $617;$__ng$1 = $605;
        }
       } else {
        label = 240;
       }
       if ((label|0) == 240) {
        label = 0;
        $606 = HEAP8[$__grp>>0]|0;
        $607 = $606 & 1;
        $608 = ($607<<24>>24)==(0);
        if ($608) {
         $610 = $606&255;
         $611 = $610 >>> 1;
         $612 = $611;
        } else {
         $609 = HEAP32[$30>>2]|0;
         $612 = $609;
        }
        $613 = ($612|0)!=(0);
        $614 = ($__ng$0|0)!=(0);
        $or$cond7 = $614 & $613;
        $615 = ($591<<24>>24)==($65<<24>>24);
        $or$cond13 = $or$cond7 & $615;
        if (!($or$cond13)) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $906;$__ng$0$lcssa323 = $__ng$0;
         break;
        }
        $616 = HEAP32[$__ge>>2]|0;
        $618 = ($617|0)==($616|0);
        if ($618) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $619 = __THREW__; __THREW__ = 0;
         $620 = $619&1;
         if ($620) {
          label = 39;
          break L23;
         }
         $$pre279 = HEAP32[$__gn>>2]|0;
         $622 = $$pre279;
        } else {
         $622 = $617;
        }
        $621 = (($622) + 4|0);
        HEAP32[$__gn>>2] = $621;
        HEAP32[$622>>2] = $__ng$0;
        $908 = $621;$__ng$1 = 0;
       }
       $623 = HEAP32[$__b>>2]|0;
       $624 = (($623) + 12|0);
       $625 = HEAP32[$624>>2]|0;
       $626 = (($623) + 16|0);
       $627 = HEAP32[$626>>2]|0;
       $628 = ($625|0)==($627|0);
       if ($628) {
        $629 = HEAP32[$623>>2]|0;
        $630 = (($629) + 40|0);
        $631 = HEAP32[$630>>2]|0;
        __THREW__ = 0;
        (invoke_ii($631|0,($623|0))|0);
        $632 = __THREW__; __THREW__ = 0;
        $633 = $632&1;
        if ($633) {
         label = 39;
         break L23;
        }
       } else {
        $634 = (($625) + 1|0);
        HEAP32[$624>>2] = $634;
       }
       $$pre$i2$i$i147 = $906;$562 = $907;$617 = $908;$__ng$0 = $__ng$1;
      }
      $635 = HEAP32[$__gb>>2]|0;
      $636 = ($635|0)!=($$lcssa322|0);
      $637 = ($__ng$0$lcssa323|0)!=(0);
      $or$cond9 = $637 & $636;
      if ($or$cond9) {
       $638 = HEAP32[$__ge>>2]|0;
       $639 = ($$lcssa322|0)==($638|0);
       if ($639) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $640 = __THREW__; __THREW__ = 0;
        $641 = $640&1;
        if ($641) {
         label = 40;
         break L23;
        }
        $$pre273 = HEAP32[$__gn>>2]|0;
        $643 = $$pre273;
       } else {
        $643 = $$lcssa322;
       }
       $642 = (($643) + 4|0);
       HEAP32[$__gn>>2] = $642;
       HEAP32[$643>>2] = $__ng$0$lcssa323;
       $909 = $642;
      } else {
       $909 = $$lcssa322;
      }
      $644 = HEAP32[$__fd>>2]|0;
      $645 = ($644|0)>(0);
      if ($645) {
       $646 = HEAP32[$__b>>2]|0;
       $647 = ($646|0)==(0|0);
       do {
        if ($647) {
         $660 = 0;
        } else {
         $648 = (($646) + 12|0);
         $649 = HEAP32[$648>>2]|0;
         $650 = (($646) + 16|0);
         $651 = HEAP32[$650>>2]|0;
         $652 = ($649|0)==($651|0);
         if ($652) {
          $653 = HEAP32[$646>>2]|0;
          $654 = (($653) + 36|0);
          $655 = HEAP32[$654>>2]|0;
          __THREW__ = 0;
          $656 = (invoke_ii($655|0,($646|0))|0);
          $657 = __THREW__; __THREW__ = 0;
          $658 = $657&1;
          if ($658) {
           label = 40;
           break L23;
          }
          $659 = ($656|0)==(-1);
          if ($659) {
           HEAP32[$__b>>2] = 0;
           $660 = 0;
           break;
          } else {
           $$pre$i$i$i103 = HEAP32[$__b>>2]|0;
           $660 = $$pre$i$i$i103;
           break;
          }
         } else {
          $660 = $646;
         }
        }
       } while(0);
       $661 = ($660|0)==(0|0);
       $662 = ($$pre$i2$i$i107|0)==(0|0);
       do {
        if ($662) {
         label = 270;
        } else {
         $663 = (($$pre$i2$i$i107) + 12|0);
         $664 = HEAP32[$663>>2]|0;
         $665 = (($$pre$i2$i$i107) + 16|0);
         $666 = HEAP32[$665>>2]|0;
         $667 = ($664|0)==($666|0);
         if ($667) {
          $668 = HEAP32[$$pre$i2$i$i107>>2]|0;
          $669 = (($668) + 36|0);
          $670 = HEAP32[$669>>2]|0;
          __THREW__ = 0;
          $671 = (invoke_ii($670|0,($$pre$i2$i$i107|0))|0);
          $672 = __THREW__; __THREW__ = 0;
          $673 = $672&1;
          if ($673) {
           label = 40;
           break L23;
          }
          $674 = ($671|0)==(-1);
          if ($674) {
           HEAP32[$__e>>2] = 0;
           label = 270;
           break;
          }
         }
         if ($661) {
          $910 = $$pre$i2$i$i107;
         } else {
          label = 275;
          break L23;
         }
        }
       } while(0);
       if ((label|0) == 270) {
        label = 0;
        if ($661) {
         label = 275;
         break L23;
        } else {
         $910 = 0;
        }
       }
       $675 = HEAP32[$__b>>2]|0;
       $676 = (($675) + 12|0);
       $677 = HEAP32[$676>>2]|0;
       $678 = (($675) + 16|0);
       $679 = HEAP32[$678>>2]|0;
       $680 = ($677|0)==($679|0);
       if ($680) {
        $681 = HEAP32[$675>>2]|0;
        $682 = (($681) + 36|0);
        $683 = HEAP32[$682>>2]|0;
        __THREW__ = 0;
        $684 = (invoke_ii($683|0,($675|0))|0);
        $685 = __THREW__; __THREW__ = 0;
        $686 = $685&1;
        if ($686) {
         label = 40;
         break L23;
        } else {
         $$0$i$i96 = $684;
        }
       } else {
        $687 = HEAP8[$677>>0]|0;
        $688 = $687&255;
        $$0$i$i96 = $688;
       }
       $689 = $$0$i$i96&255;
       $690 = HEAP8[$__dp>>0]|0;
       $691 = ($689<<24>>24)==($690<<24>>24);
       if (!($691)) {
        label = 275;
        break L23;
       }
       $694 = HEAP32[$__b>>2]|0;
       $695 = (($694) + 12|0);
       $696 = HEAP32[$695>>2]|0;
       $697 = (($694) + 16|0);
       $698 = HEAP32[$697>>2]|0;
       $699 = ($696|0)==($698|0);
       if ($699) {
        $700 = HEAP32[$694>>2]|0;
        $701 = (($700) + 40|0);
        $702 = HEAP32[$701>>2]|0;
        __THREW__ = 0;
        (invoke_ii($702|0,($694|0))|0);
        $703 = __THREW__; __THREW__ = 0;
        $704 = $703&1;
        if ($704) {
         label = 40;
         break L23;
        }
       } else {
        $705 = (($696) + 1|0);
        HEAP32[$695>>2] = $705;
       }
       $$pre$i2$i$i83 = $910;$706 = $644;$724 = $910;
       while(1) {
        $707 = ($706|0)>(0);
        if (!($707)) {
         break;
        }
        $708 = HEAP32[$__b>>2]|0;
        $709 = ($708|0)==(0|0);
        do {
         if ($709) {
          $722 = 0;
         } else {
          $710 = (($708) + 12|0);
          $711 = HEAP32[$710>>2]|0;
          $712 = (($708) + 16|0);
          $713 = HEAP32[$712>>2]|0;
          $714 = ($711|0)==($713|0);
          if ($714) {
           $715 = HEAP32[$708>>2]|0;
           $716 = (($715) + 36|0);
           $717 = HEAP32[$716>>2]|0;
           __THREW__ = 0;
           $718 = (invoke_ii($717|0,($708|0))|0);
           $719 = __THREW__; __THREW__ = 0;
           $720 = $719&1;
           if ($720) {
            label = 38;
            break L23;
           }
           $721 = ($718|0)==(-1);
           if ($721) {
            HEAP32[$__b>>2] = 0;
            $722 = 0;
            break;
           } else {
            $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
            $722 = $$pre$i$i$i79;
            break;
           }
          } else {
           $722 = $708;
          }
         }
        } while(0);
        $723 = ($722|0)==(0|0);
        $725 = ($724|0)==(0|0);
        do {
         if ($725) {
          $$pre$i2$i$i83274$ph = $$pre$i2$i$i83;
          label = 293;
         } else {
          $726 = (($724) + 12|0);
          $727 = HEAP32[$726>>2]|0;
          $728 = (($724) + 16|0);
          $729 = HEAP32[$728>>2]|0;
          $730 = ($727|0)==($729|0);
          if (!($730)) {
           if ($723) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $724;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
          $731 = HEAP32[$724>>2]|0;
          $732 = (($731) + 36|0);
          $733 = HEAP32[$732>>2]|0;
          __THREW__ = 0;
          $734 = (invoke_ii($733|0,($724|0))|0);
          $735 = __THREW__; __THREW__ = 0;
          $736 = $735&1;
          if ($736) {
           label = 38;
           break L23;
          }
          $737 = ($734|0)==(-1);
          if ($737) {
           HEAP32[$__e>>2] = 0;
           $$pre$i2$i$i83274$ph = 0;
           label = 293;
           break;
          } else {
           $738 = ($$pre$i2$i$i83|0)==(0|0);
           $tmp$i$i85 = $723 ^ $738;
           if ($tmp$i$i85) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $$pre$i2$i$i83;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 293) {
         label = 0;
         if ($723) {
          label = 300;
          break L23;
         } else {
          $$pre$i2$i$i83274287 = $$pre$i2$i$i83274$ph;$911 = 0;
         }
        }
        $739 = HEAP32[$__b>>2]|0;
        $740 = (($739) + 12|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = (($739) + 16|0);
        $743 = HEAP32[$742>>2]|0;
        $744 = ($741|0)==($743|0);
        if ($744) {
         $745 = HEAP32[$739>>2]|0;
         $746 = (($745) + 36|0);
         $747 = HEAP32[$746>>2]|0;
         __THREW__ = 0;
         $748 = (invoke_ii($747|0,($739|0))|0);
         $749 = __THREW__; __THREW__ = 0;
         $750 = $749&1;
         if ($750) {
          label = 38;
          break L23;
         } else {
          $$0$i$i74 = $748;
         }
        } else {
         $751 = HEAP8[$741>>0]|0;
         $752 = $751&255;
         $$0$i$i74 = $752;
        }
        $753 = $$0$i$i74&255;
        $isascii1$i72 = ($753<<24>>24)>(-1);
        if (!($isascii1$i72)) {
         label = 300;
         break L23;
        }
        $sext = $$0$i$i74 << 24;
        $754 = $sext >> 24;
        $755 = HEAP32[$16>>2]|0;
        $756 = (($755) + ($754<<1)|0);
        $757 = HEAP16[$756>>1]|0;
        $758 = $757 & 2048;
        $759 = ($758<<16>>16)==(0);
        if ($759) {
         label = 300;
         break L23;
        }
        $762 = HEAP32[$__wn>>2]|0;
        $763 = HEAP32[$0>>2]|0;
        $764 = ($762|0)==($763|0);
        if ($764) {
         __THREW__ = 0;
         invoke_viii(479,($__wb|0),($__wn|0),($0|0));
         $765 = __THREW__; __THREW__ = 0;
         $766 = $765&1;
         if ($766) {
          label = 38;
          break L23;
         }
        }
        $767 = HEAP32[$__b>>2]|0;
        $768 = (($767) + 12|0);
        $769 = HEAP32[$768>>2]|0;
        $770 = (($767) + 16|0);
        $771 = HEAP32[$770>>2]|0;
        $772 = ($769|0)==($771|0);
        if ($772) {
         $773 = HEAP32[$767>>2]|0;
         $774 = (($773) + 36|0);
         $775 = HEAP32[$774>>2]|0;
         __THREW__ = 0;
         $776 = (invoke_ii($775|0,($767|0))|0);
         $777 = __THREW__; __THREW__ = 0;
         $778 = $777&1;
         if ($778) {
          label = 38;
          break L23;
         } else {
          $$0$i$i67 = $776;
         }
        } else {
         $779 = HEAP8[$769>>0]|0;
         $780 = $779&255;
         $$0$i$i67 = $780;
        }
        $781 = $$0$i$i67&255;
        $782 = HEAP32[$__wn>>2]|0;
        $783 = (($782) + 1|0);
        HEAP32[$__wn>>2] = $783;
        HEAP8[$782>>0] = $781;
        $784 = (($706) + -1)|0;
        HEAP32[$__fd>>2] = $784;
        $785 = HEAP32[$__b>>2]|0;
        $786 = (($785) + 12|0);
        $787 = HEAP32[$786>>2]|0;
        $788 = (($785) + 16|0);
        $789 = HEAP32[$788>>2]|0;
        $790 = ($787|0)==($789|0);
        if ($790) {
         $791 = HEAP32[$785>>2]|0;
         $792 = (($791) + 40|0);
         $793 = HEAP32[$792>>2]|0;
         __THREW__ = 0;
         (invoke_ii($793|0,($785|0))|0);
         $794 = __THREW__; __THREW__ = 0;
         $795 = $794&1;
         if ($795) {
          label = 38;
          break L23;
         }
        } else {
         $796 = (($787) + 1|0);
         HEAP32[$786>>2] = $796;
        }
        $$pre$i2$i$i83 = $$pre$i2$i$i83274287;$706 = $784;$724 = $911;
       }
      }
      $797 = HEAP32[$__wn>>2]|0;
      $798 = HEAP32[$__wb>>2]|0;
      $799 = ($797|0)==($798|0);
      if ($799) {
       label = 312;
       break L23;
      } else {
       $898 = $909;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 3:  {
      $199 = HEAP16[$__psn>>1]|0;
      $200 = $199&255;
      $201 = $200 & 1;
      $202 = ($201<<24>>24)==(0);
      $203 = ($199&65535) >>> 8;
      $204 = $203&255;
      if ($202) {
       $$mask283 = $199 & 254;
       $206 = $$mask283&65535;
       $207 = $206 >>> 1;
       $219 = $207;
      } else {
       $205 = HEAP32[$19>>2]|0;
       $219 = $205;
      }
      $208 = HEAP16[$__nsn>>1]|0;
      $209 = $208&255;
      $210 = $209 & 1;
      $211 = ($210<<24>>24)==(0);
      $212 = ($208&65535) >>> 8;
      $213 = $212&255;
      if ($211) {
       $$mask282 = $208 & 254;
       $215 = $$mask282&65535;
       $216 = $215 >>> 1;
       $218 = $216;
      } else {
       $214 = HEAP32[$17>>2]|0;
       $218 = $214;
      }
      $217 = (0 - ($218))|0;
      $220 = ($219|0)==($217|0);
      if ($220) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($202) {
        $$mask281 = $199 & 254;
        $222 = $$mask281&65535;
        $223 = $222 >>> 1;
        $224 = $223;
       } else {
        $221 = HEAP32[$19>>2]|0;
        $224 = $221;
       }
       $225 = ($224|0)==(0);
       if (!($225)) {
        if ($211) {
         $$mask280 = $208 & 254;
         $227 = $$mask280&65535;
         $228 = $227 >>> 1;
         $229 = $228;
        } else {
         $226 = HEAP32[$17>>2]|0;
         $229 = $226;
        }
        $230 = ($229|0)==(0);
        if (!($230)) {
         $318 = HEAP32[$__b>>2]|0;
         $319 = (($318) + 12|0);
         $320 = HEAP32[$319>>2]|0;
         $321 = (($318) + 16|0);
         $322 = HEAP32[$321>>2]|0;
         $323 = ($320|0)==($322|0);
         if ($323) {
          $324 = HEAP32[$318>>2]|0;
          $325 = (($324) + 36|0);
          $326 = HEAP32[$325>>2]|0;
          __THREW__ = 0;
          $327 = (invoke_ii($326|0,($318|0))|0);
          $328 = __THREW__; __THREW__ = 0;
          $329 = $328&1;
          if ($329) {
           label = 40;
           break L23;
          }
          $$pre265 = HEAP16[$__psn>>1]|0;
          $330 = $$pre265&255;
          $331 = ($$pre265&65535) >>> 8;
          $332 = $331&255;
          $$0$i$i120 = $327;$337 = $330;$902 = $332;
         } else {
          $333 = HEAP8[$320>>0]|0;
          $334 = $333&255;
          $$0$i$i120 = $334;$337 = $200;$902 = $204;
         }
         $335 = $$0$i$i120&255;
         $336 = $337 & 1;
         $338 = ($336<<24>>24)==(0);
         if ($338) {
          $341 = $902;
         } else {
          $339 = HEAP32[$20>>2]|0;
          $$pre266 = HEAP8[$339>>0]|0;
          $341 = $$pre266;
         }
         $340 = ($335<<24>>24)==($341<<24>>24);
         $342 = HEAP32[$__b>>2]|0;
         $343 = (($342) + 12|0);
         $344 = HEAP32[$343>>2]|0;
         $345 = (($342) + 16|0);
         $346 = HEAP32[$345>>2]|0;
         $347 = ($344|0)==($346|0);
         if ($340) {
          if ($347) {
           $348 = HEAP32[$342>>2]|0;
           $349 = (($348) + 40|0);
           $350 = HEAP32[$349>>2]|0;
           __THREW__ = 0;
           (invoke_ii($350|0,($342|0))|0);
           $351 = __THREW__; __THREW__ = 0;
           $352 = $351&1;
           if ($352) {
            label = 40;
            break L23;
           }
          } else {
           $353 = (($344) + 1|0);
           HEAP32[$343>>2] = $353;
          }
          $354 = HEAP8[$__psn>>0]|0;
          $355 = $354 & 1;
          $356 = ($355<<24>>24)==(0);
          if ($356) {
           $358 = $354&255;
           $359 = $358 >>> 1;
           $360 = $359;
          } else {
           $357 = HEAP32[$19>>2]|0;
           $360 = $357;
          }
          $361 = ($360>>>0)>(1);
          $__psn$__trailing_sign$010 = $361 ? $__psn : $__trailing_sign$0;
          $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L46;
         }
         if ($347) {
          $362 = HEAP32[$342>>2]|0;
          $363 = (($362) + 36|0);
          $364 = HEAP32[$363>>2]|0;
          __THREW__ = 0;
          $365 = (invoke_ii($364|0,($342|0))|0);
          $366 = __THREW__; __THREW__ = 0;
          $367 = $366&1;
          if ($367) {
           label = 40;
           break L23;
          } else {
           $$0$i$i129 = $365;
          }
         } else {
          $368 = HEAP8[$344>>0]|0;
          $369 = $368&255;
          $$0$i$i129 = $369;
         }
         $370 = $$0$i$i129&255;
         $371 = HEAP16[$__nsn>>1]|0;
         $372 = $371 & 1;
         $373 = ($372<<16>>16)==(0);
         if ($373) {
          $375 = ($371&65535) >>> 8;
          $376 = $375&255;
          $378 = $376;
         } else {
          $374 = HEAP32[$18>>2]|0;
          $$pre267 = HEAP8[$374>>0]|0;
          $378 = $$pre267;
         }
         $377 = ($370<<24>>24)==($378<<24>>24);
         if (!($377)) {
          label = 158;
          break L23;
         }
         $379 = HEAP32[$__b>>2]|0;
         $380 = (($379) + 12|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (($379) + 16|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = ($381|0)==($383|0);
         if ($384) {
          $385 = HEAP32[$379>>2]|0;
          $386 = (($385) + 40|0);
          $387 = HEAP32[$386>>2]|0;
          __THREW__ = 0;
          (invoke_ii($387|0,($379|0))|0);
          $388 = __THREW__; __THREW__ = 0;
          $389 = $388&1;
          if ($389) {
           label = 40;
           break L23;
          }
         } else {
          $390 = (($381) + 1|0);
          HEAP32[$380>>2] = $390;
         }
         HEAP8[$__neg>>0] = 1;
         $391 = HEAP8[$__nsn>>0]|0;
         $392 = $391 & 1;
         $393 = ($392<<24>>24)==(0);
         if ($393) {
          $395 = $391&255;
          $396 = $395 >>> 1;
          $397 = $396;
         } else {
          $394 = HEAP32[$17>>2]|0;
          $397 = $394;
         }
         $398 = ($397>>>0)>(1);
         $__nsn$__trailing_sign$011 = $398 ? $__nsn : $__trailing_sign$0;
         $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L46;
        }
       }
       if ($202) {
        $$mask = $199 & 254;
        $232 = $$mask&65535;
        $233 = $232 >>> 1;
        $234 = $233;
       } else {
        $231 = HEAP32[$19>>2]|0;
        $234 = $231;
       }
       $235 = ($234|0)==(0);
       $236 = HEAP32[$__b>>2]|0;
       $237 = (($236) + 12|0);
       $238 = HEAP32[$237>>2]|0;
       $239 = (($236) + 16|0);
       $240 = HEAP32[$239>>2]|0;
       $241 = ($238|0)==($240|0);
       if ($235) {
        if ($241) {
         $280 = HEAP32[$236>>2]|0;
         $281 = (($280) + 36|0);
         $282 = HEAP32[$281>>2]|0;
         __THREW__ = 0;
         $283 = (invoke_ii($282|0,($236|0))|0);
         $284 = __THREW__; __THREW__ = 0;
         $285 = $284&1;
         if ($285) {
          label = 40;
          break L23;
         }
         $$pre = HEAP16[$__nsn>>1]|0;
         $286 = $$pre&255;
         $287 = ($$pre&65535) >>> 8;
         $288 = $287&255;
         $$0$i$i113 = $283;$293 = $286;$901 = $288;
        } else {
         $289 = HEAP8[$238>>0]|0;
         $290 = $289&255;
         $$0$i$i113 = $290;$293 = $209;$901 = $213;
        }
        $291 = $$0$i$i113&255;
        $292 = $293 & 1;
        $294 = ($292<<24>>24)==(0);
        if ($294) {
         $297 = $901;
        } else {
         $295 = HEAP32[$18>>2]|0;
         $$pre260 = HEAP8[$295>>0]|0;
         $297 = $$pre260;
        }
        $296 = ($291<<24>>24)==($297<<24>>24);
        if (!($296)) {
         $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
         break L46;
        }
        $298 = HEAP32[$__b>>2]|0;
        $299 = (($298) + 12|0);
        $300 = HEAP32[$299>>2]|0;
        $301 = (($298) + 16|0);
        $302 = HEAP32[$301>>2]|0;
        $303 = ($300|0)==($302|0);
        if ($303) {
         $304 = HEAP32[$298>>2]|0;
         $305 = (($304) + 40|0);
         $306 = HEAP32[$305>>2]|0;
         __THREW__ = 0;
         (invoke_ii($306|0,($298|0))|0);
         $307 = __THREW__; __THREW__ = 0;
         $308 = $307&1;
         if ($308) {
          label = 40;
          break L23;
         }
        } else {
         $309 = (($300) + 1|0);
         HEAP32[$299>>2] = $309;
        }
        HEAP8[$__neg>>0] = 1;
        $310 = HEAP8[$__nsn>>0]|0;
        $311 = $310 & 1;
        $312 = ($311<<24>>24)==(0);
        if ($312) {
         $314 = $310&255;
         $315 = $314 >>> 1;
         $316 = $315;
        } else {
         $313 = HEAP32[$17>>2]|0;
         $316 = $313;
        }
        $317 = ($316>>>0)>(1);
        $__nsn$__trailing_sign$0 = $317 ? $__nsn : $__trailing_sign$0;
        $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L46;
       }
       if ($241) {
        $242 = HEAP32[$236>>2]|0;
        $243 = (($242) + 36|0);
        $244 = HEAP32[$243>>2]|0;
        __THREW__ = 0;
        $245 = (invoke_ii($244|0,($236|0))|0);
        $246 = __THREW__; __THREW__ = 0;
        $247 = $246&1;
        if ($247) {
         label = 40;
         break L23;
        }
        $$pre262 = HEAP16[$__psn>>1]|0;
        $248 = $$pre262&255;
        $249 = ($$pre262&65535) >>> 8;
        $250 = $249&255;
        $$0$i$i93 = $245;$255 = $248;$900 = $250;
       } else {
        $251 = HEAP8[$238>>0]|0;
        $252 = $251&255;
        $$0$i$i93 = $252;$255 = $200;$900 = $204;
       }
       $253 = $$0$i$i93&255;
       $254 = $255 & 1;
       $256 = ($254<<24>>24)==(0);
       if ($256) {
        $259 = $900;
       } else {
        $257 = HEAP32[$20>>2]|0;
        $$pre263 = HEAP8[$257>>0]|0;
        $259 = $$pre263;
       }
       $258 = ($253<<24>>24)==($259<<24>>24);
       if (!($258)) {
        HEAP8[$__neg>>0] = 1;
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
        break L46;
       }
       $260 = HEAP32[$__b>>2]|0;
       $261 = (($260) + 12|0);
       $262 = HEAP32[$261>>2]|0;
       $263 = (($260) + 16|0);
       $264 = HEAP32[$263>>2]|0;
       $265 = ($262|0)==($264|0);
       if ($265) {
        $266 = HEAP32[$260>>2]|0;
        $267 = (($266) + 40|0);
        $268 = HEAP32[$267>>2]|0;
        __THREW__ = 0;
        (invoke_ii($268|0,($260|0))|0);
        $269 = __THREW__; __THREW__ = 0;
        $270 = $269&1;
        if ($270) {
         label = 40;
         break L23;
        }
       } else {
        $271 = (($262) + 1|0);
        HEAP32[$261>>2] = $271;
       }
       $272 = HEAP8[$__psn>>0]|0;
       $273 = $272 & 1;
       $274 = ($273<<24>>24)==(0);
       if ($274) {
        $276 = $272&255;
        $277 = $276 >>> 1;
        $278 = $277;
       } else {
        $275 = HEAP32[$19>>2]|0;
        $278 = $275;
       }
       $279 = ($278>>>0)>(1);
       $__psn$__trailing_sign$0 = $279 ? $__psn : $__trailing_sign$0;
       $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     default: {
      $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 58) {
     label = 0;
     $$pre$i2$i$i52 = $897;$145 = $897;
     L369: while(1) {
      $129 = HEAP32[$__b>>2]|0;
      $130 = ($129|0)==(0|0);
      do {
       if ($130) {
        $143 = 0;
       } else {
        $131 = (($129) + 12|0);
        $132 = HEAP32[$131>>2]|0;
        $133 = (($129) + 16|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = ($132|0)==($134|0);
        if ($135) {
         $136 = HEAP32[$129>>2]|0;
         $137 = (($136) + 36|0);
         $138 = HEAP32[$137>>2]|0;
         __THREW__ = 0;
         $139 = (invoke_ii($138|0,($129|0))|0);
         $140 = __THREW__; __THREW__ = 0;
         $141 = $140&1;
         if ($141) {
          label = 36;
          break L23;
         }
         $142 = ($139|0)==(-1);
         if ($142) {
          HEAP32[$__b>>2] = 0;
          $143 = 0;
          break;
         } else {
          $$pre$i$i$i48 = HEAP32[$__b>>2]|0;
          $143 = $$pre$i$i$i48;
          break;
         }
        } else {
         $143 = $129;
        }
       }
      } while(0);
      $144 = ($143|0)==(0|0);
      $146 = ($145|0)==(0|0);
      do {
       if ($146) {
        $$pre$i2$i$i52256 = $$pre$i2$i$i52;
        label = 71;
       } else {
        $147 = (($145) + 12|0);
        $148 = HEAP32[$147>>2]|0;
        $149 = (($145) + 16|0);
        $150 = HEAP32[$149>>2]|0;
        $151 = ($148|0)==($150|0);
        if (!($151)) {
         if ($144) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $145;
          break;
         } else {
          break L369;
         }
        }
        $152 = HEAP32[$145>>2]|0;
        $153 = (($152) + 36|0);
        $154 = HEAP32[$153>>2]|0;
        __THREW__ = 0;
        $155 = (invoke_ii($154|0,($145|0))|0);
        $156 = __THREW__; __THREW__ = 0;
        $157 = $156&1;
        if ($157) {
         label = 36;
         break L23;
        }
        $158 = ($155|0)==(-1);
        if ($158) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i52256 = 0;
         label = 71;
         break;
        } else {
         $159 = ($$pre$i2$i$i52|0)==(0|0);
         $tmp$i$i54 = $144 ^ $159;
         if ($tmp$i$i54) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $$pre$i2$i$i52;
          break;
         } else {
          break L369;
         }
        }
       }
      } while(0);
      if ((label|0) == 71) {
       label = 0;
       if ($144) {
        break;
       } else {
        $$pre$i2$i$i52258 = $$pre$i2$i$i52256;$899 = 0;
       }
      }
      $160 = HEAP32[$__b>>2]|0;
      $161 = (($160) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = (($160) + 16|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($162|0)==($164|0);
      if ($165) {
       $166 = HEAP32[$160>>2]|0;
       $167 = (($166) + 36|0);
       $168 = HEAP32[$167>>2]|0;
       __THREW__ = 0;
       $169 = (invoke_ii($168|0,($160|0))|0);
       $170 = __THREW__; __THREW__ = 0;
       $171 = $170&1;
       if ($171) {
        label = 36;
        break L23;
       } else {
        $$0$i$i58 = $169;
       }
      } else {
       $172 = HEAP8[$162>>0]|0;
       $173 = $172&255;
       $$0$i$i58 = $173;
      }
      $174 = $$0$i$i58&255;
      $isascii1$i61 = ($174<<24>>24)>(-1);
      if (!($isascii1$i61)) {
       break;
      }
      $sext210 = $$0$i$i58 << 24;
      $175 = $sext210 >> 24;
      $176 = HEAP32[$16>>2]|0;
      $177 = (($176) + ($175<<1)|0);
      $178 = HEAP16[$177>>1]|0;
      $179 = $178 & 8192;
      $180 = ($179<<16>>16)==(0);
      if ($180) {
       break;
      }
      $181 = HEAP32[$__b>>2]|0;
      $182 = (($181) + 12|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = (($181) + 16|0);
      $185 = HEAP32[$184>>2]|0;
      $186 = ($183|0)==($185|0);
      if ($186) {
       $187 = HEAP32[$181>>2]|0;
       $188 = (($187) + 40|0);
       $189 = HEAP32[$188>>2]|0;
       __THREW__ = 0;
       $190 = (invoke_ii($189|0,($181|0))|0);
       $191 = __THREW__; __THREW__ = 0;
       $192 = $191&1;
       if ($192) {
        label = 36;
        break L23;
       } else {
        $$0$i$i64 = $190;
       }
      } else {
       $193 = (($183) + 1|0);
       HEAP32[$182>>2] = $193;
       $194 = HEAP8[$183>>0]|0;
       $195 = $194&255;
       $$0$i$i64 = $195;
      }
      $196 = $$0$i$i64&255;
      __THREW__ = 0;
      invoke_vii(372,($__spaces|0),($196|0));
      $197 = __THREW__; __THREW__ = 0;
      $198 = $197&1;
      if ($198) {
       label = 36;
       break L23;
      } else {
       $$pre$i2$i$i52 = $$pre$i2$i$i52258;$145 = $899;
      }
     }
     $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $802 = (($__p$0) + 1)|0;
    $896 = $898;$__p$0 = $802;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L403:    switch (label|0) {
    case 36: {
     $68 = ___cxa_find_matching_catch()|0;
     $69 = tempRet0;
     $lpad$phi$index = $68;$lpad$phi$index7 = $69;
     break L21;
     break;
    }
    case 37: {
     $70 = ___cxa_find_matching_catch()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index7 = $71;
     break L21;
     break;
    }
    case 38: {
     $72 = ___cxa_find_matching_catch()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index7 = $73;
     break L21;
     break;
    }
    case 39: {
     $74 = ___cxa_find_matching_catch()|0;
     $75 = tempRet0;
     $lpad$phi$index = $74;$lpad$phi$index7 = $75;
     break L21;
     break;
    }
    case 40: {
     $76 = ___cxa_find_matching_catch()|0;
     $77 = tempRet0;
     $lpad$phi$index = $76;$lpad$phi$index7 = $77;
     break L21;
     break;
    }
    case 56: {
     $126 = HEAP32[$__err>>2]|0;
     $127 = $126 | 4;
     HEAP32[$__err>>2] = $127;
     $$0 = 0;
     break;
    }
    case 158: {
     $399 = HEAP32[$__err>>2]|0;
     $400 = $399 | 4;
     HEAP32[$__err>>2] = $400;
     $$0 = 0;
     break;
    }
    case 216: {
     $544 = HEAP32[$__err>>2]|0;
     $545 = $544 | 4;
     HEAP32[$__err>>2] = $545;
     $$0 = 0;
     break;
    }
    case 275: {
     $692 = HEAP32[$__err>>2]|0;
     $693 = $692 | 4;
     HEAP32[$__err>>2] = $693;
     $$0 = 0;
     break;
    }
    case 300: {
     $760 = HEAP32[$__err>>2]|0;
     $761 = $760 | 4;
     HEAP32[$__err>>2] = $761;
     $$0 = 0;
     break;
    }
    case 312: {
     $800 = HEAP32[$__err>>2]|0;
     $801 = $800 | 4;
     HEAP32[$__err>>2] = $801;
     $$0 = 0;
     break;
    }
    case 315: {
     $803 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($803)) {
       $804 = (($__trailing_sign$0$lcssa) + 1|0);
       $805 = (($__trailing_sign$0$lcssa) + 8|0);
       $806 = (($__trailing_sign$0$lcssa) + 4|0);
       $__i$0 = 1;
       L410: while(1) {
        $807 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $808 = $807 & 1;
        $809 = ($808<<24>>24)==(0);
        if ($809) {
         $811 = $807&255;
         $812 = $811 >>> 1;
         $814 = $812;
        } else {
         $810 = HEAP32[$806>>2]|0;
         $814 = $810;
        }
        $813 = ($__i$0>>>0)<($814>>>0);
        if (!($813)) {
         label = 345;
         break;
        }
        $815 = HEAP32[$__b>>2]|0;
        $816 = ($815|0)==(0|0);
        do {
         if ($816) {
          $829 = 0;
         } else {
          $817 = (($815) + 12|0);
          $818 = HEAP32[$817>>2]|0;
          $819 = (($815) + 16|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($818|0)==($820|0);
          if ($821) {
           $822 = HEAP32[$815>>2]|0;
           $823 = (($822) + 36|0);
           $824 = HEAP32[$823>>2]|0;
           __THREW__ = 0;
           $825 = (invoke_ii($824|0,($815|0))|0);
           $826 = __THREW__; __THREW__ = 0;
           $827 = $826&1;
           if ($827) {
            label = 35;
            break L410;
           }
           $828 = ($825|0)==(-1);
           if ($828) {
            HEAP32[$__b>>2] = 0;
            $829 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $829 = $$pre$i$i$i;
            break;
           }
          } else {
           $829 = $815;
          }
         }
        } while(0);
        $830 = ($829|0)==(0|0);
        $831 = HEAP32[$__e>>2]|0;
        $832 = ($831|0)==(0|0);
        do {
         if ($832) {
          label = 333;
         } else {
          $833 = (($831) + 12|0);
          $834 = HEAP32[$833>>2]|0;
          $835 = (($831) + 16|0);
          $836 = HEAP32[$835>>2]|0;
          $837 = ($834|0)==($836|0);
          if ($837) {
           $838 = HEAP32[$831>>2]|0;
           $839 = (($838) + 36|0);
           $840 = HEAP32[$839>>2]|0;
           __THREW__ = 0;
           $841 = (invoke_ii($840|0,($831|0))|0);
           $842 = __THREW__; __THREW__ = 0;
           $843 = $842&1;
           if ($843) {
            label = 35;
            break L410;
           }
           $844 = ($841|0)==(-1);
           if ($844) {
            HEAP32[$__e>>2] = 0;
            label = 333;
            break;
           }
          }
          if (!($830)) {
           label = 340;
           break L410;
          }
         }
        } while(0);
        if ((label|0) == 333) {
         label = 0;
         if ($830) {
          label = 340;
          break;
         }
        }
        $845 = HEAP32[$__b>>2]|0;
        $846 = (($845) + 12|0);
        $847 = HEAP32[$846>>2]|0;
        $848 = (($845) + 16|0);
        $849 = HEAP32[$848>>2]|0;
        $850 = ($847|0)==($849|0);
        if ($850) {
         $851 = HEAP32[$845>>2]|0;
         $852 = (($851) + 36|0);
         $853 = HEAP32[$852>>2]|0;
         __THREW__ = 0;
         $854 = (invoke_ii($853|0,($845|0))|0);
         $855 = __THREW__; __THREW__ = 0;
         $856 = $855&1;
         if ($856) {
          label = 35;
          break;
         } else {
          $$0$i$i = $854;
         }
        } else {
         $857 = HEAP8[$847>>0]|0;
         $858 = $857&255;
         $$0$i$i = $858;
        }
        $859 = $$0$i$i&255;
        $860 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $861 = $860 & 1;
        $862 = ($861<<24>>24)==(0);
        if ($862) {
         $865 = $804;
        } else {
         $863 = HEAP32[$805>>2]|0;
         $865 = $863;
        }
        $864 = (($865) + ($__i$0)|0);
        $866 = HEAP8[$864>>0]|0;
        $867 = ($859<<24>>24)==($866<<24>>24);
        if (!($867)) {
         label = 340;
         break;
        }
        $870 = (($__i$0) + 1)|0;
        $871 = HEAP32[$__b>>2]|0;
        $872 = (($871) + 12|0);
        $873 = HEAP32[$872>>2]|0;
        $874 = (($871) + 16|0);
        $875 = HEAP32[$874>>2]|0;
        $876 = ($873|0)==($875|0);
        if ($876) {
         $877 = HEAP32[$871>>2]|0;
         $878 = (($877) + 40|0);
         $879 = HEAP32[$878>>2]|0;
         __THREW__ = 0;
         (invoke_ii($879|0,($871|0))|0);
         $880 = __THREW__; __THREW__ = 0;
         $881 = $880&1;
         if ($881) {
          label = 35;
          break;
         }
        } else {
         $882 = (($873) + 1|0);
         HEAP32[$872>>2] = $882;
        }
        $__i$0 = $870;
       }
       if ((label|0) == 35) {
        $66 = ___cxa_find_matching_catch()|0;
        $67 = tempRet0;
        $lpad$phi$index = $66;$lpad$phi$index7 = $67;
        break L21;
       }
       else if ((label|0) == 340) {
        $868 = HEAP32[$__err>>2]|0;
        $869 = $868 | 4;
        HEAP32[$__err>>2] = $869;
        $$0 = 0;
        break L403;
       }
       else if ((label|0) == 345) {
        break;
       }
      }
     } while(0);
     $883 = HEAP32[$__gb>>2]|0;
     $884 = ($883|0)==($$lcssa326|0);
     if ($884) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$883,$$lcssa326,$__et);
      $885 = HEAP32[$__et>>2]|0;
      $886 = ($885|0)==(0);
      if ($886) {
       $$0 = 1;
      } else {
       $887 = HEAP32[$__err>>2]|0;
       $888 = $887 | 4;
       HEAP32[$__err>>2] = $888;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $889 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $890 = ($889|0)==(0|0);
   if (!($890)) {
    $891 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($891|0,($889|0));
    $892 = __THREW__; __THREW__ = 0;
    $893 = $892&1;
    if ($893) {
     $894 = ___cxa_find_matching_catch(0|0)|0;
     $895 = tempRet0;
     ___clang_call_terminate($894);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $80 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $81 = ($80|0)==(0|0);
 if (!($81)) {
  $82 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($82|0,($80|0));
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(2560|0),(62|0));
  // unreachable;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $31 = ___cxa_find_matching_catch()|0;
  $32 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $32;$$09 = $31;$93 = $__wbuf;
  label = 37;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7016|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       $20 = (($__v) + 1|0);
       HEAP8[$20>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP8[$18>>0] = 0;
       $19 = (($__v) + 4|0);
       HEAP32[$19>>2] = 0;
      }
      $21 = HEAP8[$__neg>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if (!($22)) {
       $23 = HEAP32[$5>>2]|0;
       $24 = (($23) + 28|0);
       $25 = HEAP32[$24>>2]|0;
       __THREW__ = 0;
       $26 = (invoke_iii($25|0,($5|0),45)|0);
       $27 = __THREW__; __THREW__ = 0;
       $28 = $27&1;
       if ($28) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(372,($__v|0),($26|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
      }
      $33 = HEAP32[$5>>2]|0;
      $34 = (($33) + 28|0);
      $35 = HEAP32[$34>>2]|0;
      __THREW__ = 0;
      $36 = (invoke_iii($35|0,($5|0),48)|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       break;
      }
      $39 = HEAP32[$__wb>>2]|0;
      $40 = HEAP32[$__wn>>2]|0;
      $41 = (($40) + -1|0);
      $__w$0 = $39;
      while(1) {
       $42 = ($__w$0>>>0)<($41>>>0);
       if (!($42)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $43 = HEAP8[$__w$0>>0]|0;
       $44 = ($43<<24>>24)==($36<<24>>24);
       if (!($44)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $45 = (($__w$0) + 1|0);
       $__w$0 = $45;
      }
      __THREW__ = 0;
      (invoke_iiii(481,($__v|0),($__w$0$lcssa|0),($40|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
     }
     $48 = HEAP32[$__b>>2]|0;
     $49 = ($48|0)==(0|0);
     do {
      if ($49) {
       $62 = 0;
      } else {
       $50 = (($48) + 12|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = (($48) + 16|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ($51|0)==($53|0);
       if ($54) {
        $55 = HEAP32[$48>>2]|0;
        $56 = (($55) + 36|0);
        $57 = HEAP32[$56>>2]|0;
        __THREW__ = 0;
        $58 = (invoke_ii($57|0,($48|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         break L3;
        }
        $61 = ($58|0)==(-1);
        if ($61) {
         HEAP32[$__b>>2] = 0;
         $62 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $62 = $$pre$i$i$i;
         break;
        }
       } else {
        $62 = $48;
       }
      }
     } while(0);
     $63 = ($62|0)==(0|0);
     $64 = ($8|0)==(0|0);
     do {
      if ($64) {
       label = 30;
      } else {
       $65 = (($8) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($8) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$8>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($8|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         break L3;
        }
        $76 = ($73|0)==(-1);
        if ($76) {
         HEAP32[$__e>>2] = 0;
         label = 30;
         break;
        }
       }
       if (!($63)) {
        label = 31;
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($63) {
       label = 31;
      }
     }
     if ((label|0) == 31) {
      $77 = HEAP32[$__err>>2]|0;
      $78 = $77 | 2;
      HEAP32[$__err>>2] = $78;
     }
     $79 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $79;
     $80 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($80)|0);
     $81 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $82 = ($81|0)==(0|0);
     if (!($82)) {
      $83 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($83|0,($81|0));
      $84 = __THREW__; __THREW__ = 0;
      $85 = $84&1;
      if ($85) {
       $86 = ___cxa_find_matching_catch(0|0)|0;
       $87 = tempRet0;
       ___clang_call_terminate($86);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $88 = ___cxa_find_matching_catch()|0;
  $89 = tempRet0;
  $90 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($90)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $91 = ($$pre|0)==(0|0);
  if ($91) {
   $$010 = $88;$$018 = $89;
  } else {
   $$017 = $89;$$09 = $88;$93 = $$pre;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $92 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($92|0,($93|0));
  $94 = __THREW__; __THREW__ = 0;
  $95 = $94&1;
  if ($95) {
   $96 = ___cxa_find_matching_catch(0|0)|0;
   $97 = tempRet0;
   ___clang_call_terminate($96);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i15 = 0, $exitcond$i$i$i20 = 0, $exitcond$i$i$i25 = 0, $exitcond$i$i$i30 = 0, $exitcond$i$i$i35 = 0, $exitcond$i$i$i5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6456)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = (($__nsn) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = (($__nsn) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if ($26) {
   $27 = ___cxa_find_matching_catch(0|0)|0;
   $28 = tempRet0;
   ___clang_call_terminate($27);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $29 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$29>>2] = 0;
   $30 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $30;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $31 = HEAP32[$10>>2]|0;
  $32 = (($31) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
  $34 = HEAP8[$__psn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $40 = (($__psn) + 1|0);
   HEAP8[$40>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $37 = (($__psn) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   HEAP8[$38>>0] = 0;
   $39 = (($__psn) + 4|0);
   HEAP32[$39>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if ($42) {
   $43 = ___cxa_find_matching_catch(0|0)|0;
   $44 = tempRet0;
   ___clang_call_terminate($43);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $45 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$45>>2] = 0;
   $46 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $46;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $47 = HEAP32[$10>>2]|0;
  $48 = (($47) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
  HEAP8[$__dp>>0] = $50;
  $51 = HEAP32[$10>>2]|0;
  $52 = (($51) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
  HEAP8[$__ts>>0] = $54;
  $55 = HEAP32[$10>>2]|0;
  $56 = (($55) + 20|0);
  $57 = HEAP32[$56>>2]|0;
  FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
  $58 = HEAP8[$__grp>>0]|0;
  $59 = $58 & 1;
  $60 = ($59<<24>>24)==(0);
  if ($60) {
   $64 = (($__grp) + 1|0);
   HEAP8[$64>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $61 = (($__grp) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP8[$62>>0] = 0;
   $63 = (($__grp) + 4|0);
   HEAP32[$63>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $65 = __THREW__; __THREW__ = 0;
  $66 = $65&1;
  if ($66) {
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   ___clang_call_terminate($67);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $69 = (($3) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $70;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $71 = HEAP32[$10>>2]|0;
  $72 = (($71) + 24|0);
  $73 = HEAP32[$72>>2]|0;
  FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
  $74 = HEAP8[$__sym>>0]|0;
  $75 = $74 & 1;
  $76 = ($75<<24>>24)==(0);
  if ($76) {
   $80 = (($__sym) + 1|0);
   HEAP8[$80>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $77 = (($__sym) + 8|0);
   $78 = HEAP32[$77>>2]|0;
   HEAP8[$78>>0] = 0;
   $79 = (($__sym) + 4|0);
   HEAP32[$79>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $81 = __THREW__; __THREW__ = 0;
  $82 = $81&1;
  if ($82) {
   $83 = ___cxa_find_matching_catch(0|0)|0;
   $84 = tempRet0;
   ___clang_call_terminate($83);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i14 = 0;
  while(1) {
   $exitcond$i$i$i15 = ($__i$0$i$i$i14|0)==(3);
   if ($exitcond$i$i$i15) {
    break;
   }
   $85 = (($4) + ($__i$0$i$i$i14<<2)|0);
   HEAP32[$85>>2] = 0;
   $86 = (($__i$0$i$i$i14) + 1)|0;
   $__i$0$i$i$i14 = $86;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $87 = HEAP32[$10>>2]|0;
  $88 = (($87) + 36|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
  $storemerge = $90;
 } else {
  $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6392)|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($92) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
  $95 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
  $96 = HEAP32[$91>>2]|0;
  $97 = (($96) + 32|0);
  $98 = HEAP32[$97>>2]|0;
  FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
  $99 = HEAP8[$__nsn>>0]|0;
  $100 = $99 & 1;
  $101 = ($100<<24>>24)==(0);
  if ($101) {
   $105 = (($__nsn) + 1|0);
   HEAP8[$105>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $102 = (($__nsn) + 8|0);
   $103 = HEAP32[$102>>2]|0;
   HEAP8[$103>>0] = 0;
   $104 = (($__nsn) + 4|0);
   HEAP32[$104>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i19 = 0;
  while(1) {
   $exitcond$i$i$i20 = ($__i$0$i$i$i19|0)==(3);
   if ($exitcond$i$i$i20) {
    break;
   }
   $110 = (($6) + ($__i$0$i$i$i19<<2)|0);
   HEAP32[$110>>2] = 0;
   $111 = (($__i$0$i$i$i19) + 1)|0;
   $__i$0$i$i$i19 = $111;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $112 = HEAP32[$91>>2]|0;
  $113 = (($112) + 28|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
  $115 = HEAP8[$__psn>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = (($__psn) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $118 = (($__psn) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = (($__psn) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $122 = __THREW__; __THREW__ = 0;
  $123 = $122&1;
  if ($123) {
   $124 = ___cxa_find_matching_catch(0|0)|0;
   $125 = tempRet0;
   ___clang_call_terminate($124);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i24 = 0;
  while(1) {
   $exitcond$i$i$i25 = ($__i$0$i$i$i24|0)==(3);
   if ($exitcond$i$i$i25) {
    break;
   }
   $126 = (($7) + ($__i$0$i$i$i24<<2)|0);
   HEAP32[$126>>2] = 0;
   $127 = (($__i$0$i$i$i24) + 1)|0;
   $__i$0$i$i$i24 = $127;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $128 = HEAP32[$91>>2]|0;
  $129 = (($128) + 12|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
  HEAP8[$__dp>>0] = $131;
  $132 = HEAP32[$91>>2]|0;
  $133 = (($132) + 16|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
  HEAP8[$__ts>>0] = $135;
  $136 = HEAP32[$91>>2]|0;
  $137 = (($136) + 20|0);
  $138 = HEAP32[$137>>2]|0;
  FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
  $139 = HEAP8[$__grp>>0]|0;
  $140 = $139 & 1;
  $141 = ($140<<24>>24)==(0);
  if ($141) {
   $145 = (($__grp) + 1|0);
   HEAP8[$145>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $142 = (($__grp) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   HEAP8[$143>>0] = 0;
   $144 = (($__grp) + 4|0);
   HEAP32[$144>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $146 = __THREW__; __THREW__ = 0;
  $147 = $146&1;
  if ($147) {
   $148 = ___cxa_find_matching_catch(0|0)|0;
   $149 = tempRet0;
   ___clang_call_terminate($148);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i29 = 0;
  while(1) {
   $exitcond$i$i$i30 = ($__i$0$i$i$i29|0)==(3);
   if ($exitcond$i$i$i30) {
    break;
   }
   $150 = (($8) + ($__i$0$i$i$i29<<2)|0);
   HEAP32[$150>>2] = 0;
   $151 = (($__i$0$i$i$i29) + 1)|0;
   $__i$0$i$i$i29 = $151;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $152 = HEAP32[$91>>2]|0;
  $153 = (($152) + 24|0);
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
  $155 = HEAP8[$__sym>>0]|0;
  $156 = $155 & 1;
  $157 = ($156<<24>>24)==(0);
  if ($157) {
   $161 = (($__sym) + 1|0);
   HEAP8[$161>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $158 = (($__sym) + 8|0);
   $159 = HEAP32[$158>>2]|0;
   HEAP8[$159>>0] = 0;
   $160 = (($__sym) + 4|0);
   HEAP32[$160>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $162 = __THREW__; __THREW__ = 0;
  $163 = $162&1;
  if ($163) {
   $164 = ___cxa_find_matching_catch(0|0)|0;
   $165 = tempRet0;
   ___clang_call_terminate($164);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i34 = 0;
  while(1) {
   $exitcond$i$i$i35 = ($__i$0$i$i$i34|0)==(3);
   if ($exitcond$i$i$i35) {
    break;
   }
   $166 = (($9) + ($__i$0$i$i$i34<<2)|0);
   HEAP32[$166>>2] = 0;
   $167 = (($__i$0$i$i$i34) + 1)|0;
   $__i$0$i$i$i34 = $167;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $168 = HEAP32[$91>>2]|0;
  $169 = (($168) + 36|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
  $storemerge = $171;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$0$i$i = 0, $$01$i$i = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($__grouping) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7|0)==(0);
 do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $16 = $0;
   } else {
    $$0$i$i = $__g_end;$$01$i$i = $__g;
    while(1) {
     $10 = (($$0$i$i) + -4|0);
     $11 = ($$01$i$i>>>0)<($10>>>0);
     if (!($11)) {
      break;
     }
     $12 = HEAP32[$$01$i$i>>2]|0;
     $13 = HEAP32[$10>>2]|0;
     HEAP32[$$01$i$i>>2] = $13;
     HEAP32[$10>>2] = $12;
     $14 = (($$01$i$i) + 4|0);
     $$0$i$i = $10;$$01$i$i = $14;
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $16 = $$pre;
   }
   $15 = $16 & 1;
   $17 = ($15<<24>>24)==(0);
   if ($17) {
    $22 = (($__grouping) + 1|0);
    $23 = $16&255;
    $24 = $23 >>> 1;
    $26 = $22;$27 = $24;
   } else {
    $18 = (($__grouping) + 8|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($__grouping) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $26 = $19;$27 = $21;
   }
   $25 = (($26) + ($27)|0);
   $28 = (($__g_end) + -4|0);
   $29 = $25;
   $__ig$0 = $26;$__r$0 = $__g;
   while(1) {
    $30 = ($__r$0>>>0)<($28>>>0);
    $31 = HEAP8[$__ig$0>>0]|0;
    $$not = ($31<<24>>24)<(1);
    $32 = ($31<<24>>24)==(127);
    $or$cond2 = $$not | $32;
    if (!($30)) {
     $$lcssa = $31;$or$cond2$lcssa = $or$cond2;
     break;
    }
    if (!($or$cond2)) {
     $33 = $31 << 24 >> 24;
     $34 = HEAP32[$__r$0>>2]|0;
     $35 = ($33|0)==($34|0);
     if (!($35)) {
      label = 17;
      break;
     }
    }
    $36 = $__ig$0;
    $37 = (($29) - ($36))|0;
    $38 = ($37|0)>(1);
    $39 = (($__ig$0) + 1|0);
    $$__ig$0 = $38 ? $39 : $__ig$0;
    $40 = (($__r$0) + 4|0);
    $__ig$0 = $$__ig$0;$__r$0 = $40;
   }
   if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    break;
   }
   if (!($or$cond2$lcssa)) {
    $41 = $$lcssa << 24 >> 24;
    $42 = HEAP32[$28>>2]|0;
    $43 = (($42) + -1)|0;
    $44 = ($43>>>0)<($41>>>0);
    if (!($44)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$111 = 0, $$112 = 0, $$1210 = 0, $$129 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre13 = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0;
 var $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$111 = $33;$$129 = $34;$106 = 475;$107 = $__wbuf;
  label = 47;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7008|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L4: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 48|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6712|0),(((6712 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(392);
      if ($24) {
       $25 = $23 >> 2;
       $26 = (($25) + 2)|0;
       $27 = (_malloc($26)|0);
       $28 = ($27|0)==(0|0);
       if ($28) {
        __THREW__ = 0;
        invoke_v(465);
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if ($30) {
         $31 = ___cxa_find_matching_catch()|0;
         $32 = tempRet0;
         $$0 = $31;$$01 = $32;
         break;
        } else {
         $39 = 0;$__nc$0 = 0;
        }
       } else {
        $39 = $27;$__nc$0 = $27;
       }
      } else {
       $39 = 0;$__nc$0 = $__nbuf;
      }
      $40 = HEAP8[$__neg>>0]|0;
      $41 = ($40<<24>>24)==(0);
      if ($41) {
       $__nc$1 = $__nc$0;
      } else {
       $42 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $42;
      }
      $43 = (($__atoms) + 40|0);
      $44 = $__atoms;
      $46 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $45 = ($__w$0>>>0)<($46>>>0);
       if (!($45)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $47 = HEAP32[$__w$0>>2]|0;
       $$0$i = $__atoms;
       while(1) {
        $48 = ($$0$i|0)==($43|0);
        if ($48) {
         $$0$lcssa$i = $43;
         break;
        }
        $49 = HEAP32[$$0$i>>2]|0;
        $50 = ($49|0)==($47|0);
        if ($50) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $51 = (($$0$i) + 4|0);
        $$0$i = $51;
       }
       $52 = $$0$lcssa$i;
       $53 = (($52) - ($44))|0;
       $54 = $53 >> 2;
       $55 = (6712 + ($54)|0);
       $56 = HEAP8[$55>>0]|0;
       HEAP8[$__nc$2>>0] = $56;
       $57 = (($__w$0) + 4|0);
       $58 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $46 = $$pre;$__nc$2 = $58;$__w$0 = $57;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $59 = (_sscanf($__nbuf,6648,$vararg_buffer)|0);
      $60 = ($59|0)==(1);
      if (!($60)) {
       __THREW__ = 0;
       invoke_vi(477,(6656|0));
       $61 = __THREW__; __THREW__ = 0;
       $62 = $61&1;
       if ($62) {
        $37 = ___cxa_find_matching_catch()|0;
        $38 = tempRet0;
        _free($39);
        $$0 = $37;$$01 = $38;
        break;
       }
      }
      _free($39);
     }
     $63 = HEAP32[$__b>>2]|0;
     $64 = ($63|0)==(0|0);
     do {
      if ($64) {
       $112 = 1;
      } else {
       $65 = (($63) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($63) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$63>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($63|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         label = 11;
         break L4;
        } else {
         $$0$i$i$i$i = $73;
        }
       } else {
        $76 = HEAP32[$66>>2]|0;
        $$0$i$i$i$i = $76;
       }
       $77 = ($$0$i$i$i$i|0)==(-1);
       if ($77) {
        HEAP32[$__b>>2] = 0;
        $112 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $112 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $78 = HEAP32[$__e>>2]|0;
     $79 = ($78|0)==(0|0);
     do {
      if ($79) {
       label = 38;
      } else {
       $80 = (($78) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = (($78) + 16|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ($81|0)==($83|0);
       if ($84) {
        $85 = HEAP32[$78>>2]|0;
        $86 = (($85) + 36|0);
        $87 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        $88 = (invoke_ii($87|0,($78|0))|0);
        $89 = __THREW__; __THREW__ = 0;
        $90 = $89&1;
        if ($90) {
         label = 11;
         break L4;
        } else {
         $$0$i$i1$i$i = $88;
        }
       } else {
        $91 = HEAP32[$81>>2]|0;
        $$0$i$i1$i$i = $91;
       }
       $92 = ($$0$i$i1$i$i|0)==(-1);
       if ($92) {
        HEAP32[$__e>>2] = 0;
        label = 38;
        break;
       } else {
        if ($112) {
         break;
        } else {
         label = 40;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      if ($112) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $93 = HEAP32[$__err>>2]|0;
      $94 = $93 | 2;
      HEAP32[$__err>>2] = $94;
     }
     $95 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $95;
     $96 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($96)|0);
     $97 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $98 = ($97|0)==(0|0);
     if (!($98)) {
      $99 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($99|0,($97|0));
      $100 = __THREW__; __THREW__ = 0;
      $101 = $100&1;
      if ($101) {
       $102 = ___cxa_find_matching_catch(0|0)|0;
       $103 = tempRet0;
       ___clang_call_terminate($102);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;
  }
  $104 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
  $$pre6 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $105 = ($$pre6|0)==(0|0);
  if ($105) {
   $$112 = $$0;$$1210 = $$01;
  } else {
   $$pre13 = HEAP32[$1>>2]|0;
   $$111 = $$0;$$129 = $$01;$106 = $$pre13;$107 = $$pre6;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($106|0,($107|0));
  $108 = __THREW__; __THREW__ = 0;
  $109 = $108&1;
  if ($109) {
   $110 = ___cxa_find_matching_catch(0|0)|0;
   $111 = tempRet0;
   ___clang_call_terminate($110);
   // unreachable;
  } else {
   $$112 = $$111;$$1210 = $$129;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i125 = 0, $$0$i$i$i$i157 = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i91 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i131 = 0, $$0$i$i1$i$i163 = 0, $$0$i$i1$i$i188 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i97 = 0, $$0$i$i109 = 0, $$0$i$i118 = 0, $$0$i$i121 = 0;
 var $$0$i$i143 = 0, $$0$i$i154 = 0, $$0$i$i178 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i72 = 0, $$0$i$i77 = 0, $$0$i$i85 = 0, $$0$i$i88 = 0, $$299 = 0, $$300 = 0, $$301 = 0, $$302 = 0, $$303 = 0, $$304 = 0, $$305 = 0, $$lcssa = 0, $$lcssa342 = 0, $$lcssa346 = 0;
 var $$lcssa348 = 0, $$lcssa349 = 0, $$lcssa351 = 0, $$ph = 0, $$ph341 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i127 = 0, $$pre$i$i$i159 = 0, $$pre$i$i$i184 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i53 = 0, $$pre$i$i$i93 = 0, $$pre$i3$i$i133 = 0, $$pre$i3$i$i165 = 0, $$pre$i3$i$i190 = 0, $$pre$i3$i$i190281 = 0, $$pre$i3$i$i190282 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59275 = 0;
 var $$pre$i3$i$i59277 = 0, $$pre$i3$i$i99 = 0, $$pre$i3$i$i99287$ph = 0, $$pre$i3$i$i99287297 = 0, $$pre278 = 0, $$pre279 = 0, $$pre280 = 0, $$pre284 = 0, $$pre285 = 0, $$pre286 = 0, $$pre290 = 0, $$pre292 = 0, $$sum = 0, $$sum293 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0;
 var $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i16 = 0, $__i$0$i$i20 = 0, $__i$0$i$i25 = 0, $__ng$0 = 0, $__ng$0$lcssa343 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0;
 var $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i17 = 0, $exitcond$i$i21 = 0, $exitcond$i$i26 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i128 = 0, $phitmp$i$i$i160 = 0, $phitmp$i$i$i185 = 0;
 var $phitmp$i$i$i33 = 0, $phitmp$i$i$i54 = 0, $phitmp$i$i$i94 = 0, $phitmp$i4$i$i100 = 0, $phitmp$i4$i$i166 = 0, $phitmp$i4$i$i191 = 0, $phitmp$i4$i$i60 = 0, $switch = 0, $tmp$i$i102 = 0, $tmp$i$i168 = 0, $tmp$i$i193 = 0, $tmp$i$i62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i16 = 0;
 while(1) {
  $exitcond$i$i17 = ($__i$0$i$i16|0)==(3);
  if ($exitcond$i$i17) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i16<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i16) + 1)|0;
  $__i$0$i$i16 = $8;
 }
 $__i$0$i$i20 = 0;
 while(1) {
  $exitcond$i$i21 = ($__i$0$i$i20|0)==(3);
  if ($exitcond$i$i21) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i20<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i20) + 1)|0;
  $__i$0$i$i20 = $10;
 }
 $__i$0$i$i25 = 0;
 while(1) {
  $exitcond$i$i26 = ($__i$0$i$i25|0)==(3);
  if ($exitcond$i$i26) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i25<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i25) + 1)|0;
  $__i$0$i$i25 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(484,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $77 = ___cxa_find_matching_catch()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index8 = $78;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__nsn) + 4|0);
   $17 = (($__nsn) + 8|0);
   $18 = (($__psn) + 4|0);
   $19 = (($__psn) + 8|0);
   $20 = $__flags & 512;
   $21 = ($20|0)!=(0);
   $22 = (($__sym) + 4|0);
   $23 = (($__sym) + 8|0);
   $24 = (($__spaces) + 4|0);
   $25 = (($__spaces) + 8|0);
   $26 = (($__pat) + 3|0);
   $27 = (($__grp) + 4|0);
   $862 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L24: while(1) {
    $28 = ($__p$0>>>0)<(4);
    if (!($28)) {
     $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break;
    }
    $29 = HEAP32[$__b>>2]|0;
    $30 = ($29|0)==(0|0);
    do {
     if ($30) {
      $863 = 1;
     } else {
      $31 = (($29) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($29) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$29>>2]|0;
       $37 = (($36) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       __THREW__ = 0;
       $39 = (invoke_ii($38|0,($29|0))|0);
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 42;
        break L24;
       } else {
        $$0$i$i$i$i30 = $39;
       }
      } else {
       $42 = HEAP32[$32>>2]|0;
       $$0$i$i$i$i30 = $42;
      }
      $43 = ($$0$i$i$i$i30|0)==(-1);
      if ($43) {
       HEAP32[$__b>>2] = 0;
       $863 = 1;
       break;
      } else {
       $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i33 = ($$pre$i$i$i32|0)==(0|0);
       $863 = $phitmp$i$i$i33;
       break;
      }
     }
    } while(0);
    $44 = HEAP32[$__e>>2]|0;
    $45 = ($44|0)==(0|0);
    do {
     if ($45) {
      label = 32;
     } else {
      $46 = (($44) + 12|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (($44) + 16|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($47|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$44>>2]|0;
       $52 = (($51) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       __THREW__ = 0;
       $54 = (invoke_ii($53|0,($44|0))|0);
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        label = 42;
        break L24;
       } else {
        $$0$i$i1$i$i36 = $54;
       }
      } else {
       $57 = HEAP32[$47>>2]|0;
       $$0$i$i1$i$i36 = $57;
      }
      $58 = ($$0$i$i1$i$i36|0)==(-1);
      if ($58) {
       HEAP32[$__e>>2] = 0;
       label = 32;
       break;
      } else {
       if ($863) {
        $864 = $44;
        break;
       } else {
        $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 319;
        break L24;
       }
      }
     }
    } while(0);
    if ((label|0) == 32) {
     label = 0;
     if ($863) {
      $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 319;
      break;
     } else {
      $864 = 0;
     }
    }
    $59 = (($__pat) + ($__p$0)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60 << 24 >> 24;
    L49: do {
     switch ($61|0) {
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $86 = HEAP32[$__b>>2]|0;
       $87 = (($86) + 12|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = (($86) + 16|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ($88|0)==($90|0);
       if ($91) {
        $92 = HEAP32[$86>>2]|0;
        $93 = (($92) + 36|0);
        $94 = HEAP32[$93>>2]|0;
        __THREW__ = 0;
        $95 = (invoke_ii($94|0,($86|0))|0);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 42;
         break L24;
        } else {
         $$0$i$i45 = $95;
        }
       } else {
        $98 = HEAP32[$88>>2]|0;
        $$0$i$i45 = $98;
       }
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iiii($101|0,($__ct|0),8192,($$0$i$i45|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 42;
        break L24;
       }
       if (!($102)) {
        label = 58;
        break L24;
       }
       $105 = HEAP32[$__b>>2]|0;
       $106 = (($105) + 12|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = (($105) + 16|0);
       $109 = HEAP32[$108>>2]|0;
       $110 = ($107|0)==($109|0);
       if ($110) {
        $111 = HEAP32[$105>>2]|0;
        $112 = (($111) + 40|0);
        $113 = HEAP32[$112>>2]|0;
        __THREW__ = 0;
        $114 = (invoke_ii($113|0,($105|0))|0);
        $115 = __THREW__; __THREW__ = 0;
        $116 = $115&1;
        if ($116) {
         label = 42;
         break L24;
        } else {
         $$0$i$i49 = $114;
        }
       } else {
        $117 = (($107) + 4|0);
        HEAP32[$106>>2] = $117;
        $118 = HEAP32[$107>>2]|0;
        $$0$i$i49 = $118;
       }
       __THREW__ = 0;
       invoke_vii(485,($__spaces|0),($$0$i$i49|0));
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if ($120) {
        label = 42;
        break L24;
       } else {
        label = 60;
       }
      }
      break;
     }
     case 4:  {
      $62 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i165 = $864;$538 = $864;$592 = $862;$__ng$0 = 0;
      L63: while(1) {
       $523 = HEAP32[$__b>>2]|0;
       $524 = ($523|0)==(0|0);
       do {
        if ($524) {
         $553 = 1;
        } else {
         $525 = (($523) + 12|0);
         $526 = HEAP32[$525>>2]|0;
         $527 = (($523) + 16|0);
         $528 = HEAP32[$527>>2]|0;
         $529 = ($526|0)==($528|0);
         if ($529) {
          $530 = HEAP32[$523>>2]|0;
          $531 = (($530) + 36|0);
          $532 = HEAP32[$531>>2]|0;
          __THREW__ = 0;
          $533 = (invoke_ii($532|0,($523|0))|0);
          $534 = __THREW__; __THREW__ = 0;
          $535 = $534&1;
          if ($535) {
           label = 41;
           break L24;
          } else {
           $$0$i$i$i$i157 = $533;
          }
         } else {
          $536 = HEAP32[$526>>2]|0;
          $$0$i$i$i$i157 = $536;
         }
         $537 = ($$0$i$i$i$i157|0)==(-1);
         if ($537) {
          HEAP32[$__b>>2] = 0;
          $553 = 1;
          break;
         } else {
          $$pre$i$i$i159 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i160 = ($$pre$i$i$i159|0)==(0|0);
          $553 = $phitmp$i$i$i160;
          break;
         }
        }
       } while(0);
       $539 = ($538|0)==(0|0);
       do {
        if ($539) {
         $869 = $$pre$i3$i$i165;
         label = 230;
        } else {
         $540 = (($538) + 12|0);
         $541 = HEAP32[$540>>2]|0;
         $542 = (($538) + 16|0);
         $543 = HEAP32[$542>>2]|0;
         $544 = ($541|0)==($543|0);
         if ($544) {
          $545 = HEAP32[$538>>2]|0;
          $546 = (($545) + 36|0);
          $547 = HEAP32[$546>>2]|0;
          __THREW__ = 0;
          $548 = (invoke_ii($547|0,($538|0))|0);
          $549 = __THREW__; __THREW__ = 0;
          $550 = $549&1;
          if ($550) {
           label = 41;
           break L24;
          } else {
           $$0$i$i1$i$i163 = $548;
          }
         } else {
          $551 = HEAP32[$541>>2]|0;
          $$0$i$i1$i$i163 = $551;
         }
         $552 = ($$0$i$i1$i$i163|0)==(-1);
         if ($552) {
          HEAP32[$__e>>2] = 0;
          $869 = 0;
          label = 230;
          break;
         } else {
          $phitmp$i4$i$i166 = ($$pre$i3$i$i165|0)==(0|0);
          $tmp$i$i168 = $553 ^ $phitmp$i4$i$i166;
          if ($tmp$i$i168) {
           $870 = $$pre$i3$i$i165;$871 = $$pre$i3$i$i165;
           break;
          } else {
           $$lcssa342 = $592;$$pre$i3$i$i133 = $$pre$i3$i$i165;$__ng$0$lcssa343 = $__ng$0;
           break L63;
          }
         }
        }
       } while(0);
       if ((label|0) == 230) {
        label = 0;
        if ($553) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $869;$__ng$0$lcssa343 = $__ng$0;
         break;
        } else {
         $870 = $869;$871 = 0;
        }
       }
       $554 = HEAP32[$__b>>2]|0;
       $555 = (($554) + 12|0);
       $556 = HEAP32[$555>>2]|0;
       $557 = (($554) + 16|0);
       $558 = HEAP32[$557>>2]|0;
       $559 = ($556|0)==($558|0);
       if ($559) {
        $560 = HEAP32[$554>>2]|0;
        $561 = (($560) + 36|0);
        $562 = HEAP32[$561>>2]|0;
        __THREW__ = 0;
        $563 = (invoke_ii($562|0,($554|0))|0);
        $564 = __THREW__; __THREW__ = 0;
        $565 = $564&1;
        if ($565) {
         label = 41;
         break L24;
        } else {
         $$0$i$i154 = $563;
        }
       } else {
        $566 = HEAP32[$556>>2]|0;
        $$0$i$i154 = $566;
       }
       $567 = HEAP32[$__ct>>2]|0;
       $568 = (($567) + 12|0);
       $569 = HEAP32[$568>>2]|0;
       __THREW__ = 0;
       $570 = (invoke_iiii($569|0,($__ct|0),2048,($$0$i$i154|0))|0);
       $571 = __THREW__; __THREW__ = 0;
       $572 = $571&1;
       if ($572) {
        label = 41;
        break L24;
       }
       if ($570) {
        $573 = HEAP32[$__wn>>2]|0;
        $574 = HEAP32[$0>>2]|0;
        $575 = ($573|0)==($574|0);
        if ($575) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $576 = __THREW__; __THREW__ = 0;
         $577 = $576&1;
         if ($577) {
          label = 41;
          break L24;
         }
         $$pre290 = HEAP32[$__wn>>2]|0;
         $579 = $$pre290;
        } else {
         $579 = $573;
        }
        $578 = (($579) + 4|0);
        HEAP32[$__wn>>2] = $578;
        HEAP32[$579>>2] = $$0$i$i154;
        $580 = (($__ng$0) + 1)|0;
        $872 = $592;$__ng$1 = $580;
       } else {
        $581 = HEAP8[$__grp>>0]|0;
        $582 = $581 & 1;
        $583 = ($582<<24>>24)==(0);
        if ($583) {
         $585 = $581&255;
         $586 = $585 >>> 1;
         $587 = $586;
        } else {
         $584 = HEAP32[$27>>2]|0;
         $587 = $584;
        }
        $588 = ($587|0)!=(0);
        $589 = ($__ng$0|0)!=(0);
        $or$cond7 = $589 & $588;
        $590 = ($$0$i$i154|0)==($62|0);
        $or$cond13 = $or$cond7 & $590;
        if (!($or$cond13)) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $870;$__ng$0$lcssa343 = $__ng$0;
         break;
        }
        $591 = HEAP32[$__ge>>2]|0;
        $593 = ($592|0)==($591|0);
        if ($593) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $594 = __THREW__; __THREW__ = 0;
         $595 = $594&1;
         if ($595) {
          label = 41;
          break L24;
         }
         $$pre292 = HEAP32[$__gn>>2]|0;
         $597 = $$pre292;
        } else {
         $597 = $592;
        }
        $596 = (($597) + 4|0);
        HEAP32[$__gn>>2] = $596;
        HEAP32[$597>>2] = $__ng$0;
        $872 = $596;$__ng$1 = 0;
       }
       $598 = HEAP32[$__b>>2]|0;
       $599 = (($598) + 12|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = (($598) + 16|0);
       $602 = HEAP32[$601>>2]|0;
       $603 = ($600|0)==($602|0);
       if ($603) {
        $604 = HEAP32[$598>>2]|0;
        $605 = (($604) + 40|0);
        $606 = HEAP32[$605>>2]|0;
        __THREW__ = 0;
        (invoke_ii($606|0,($598|0))|0);
        $607 = __THREW__; __THREW__ = 0;
        $608 = $607&1;
        if ($608) {
         label = 41;
         break L24;
        }
       } else {
        $609 = (($600) + 4|0);
        HEAP32[$599>>2] = $609;
       }
       $$pre$i3$i$i165 = $870;$538 = $871;$592 = $872;$__ng$0 = $__ng$1;
      }
      $610 = HEAP32[$__gb>>2]|0;
      $611 = ($610|0)!=($$lcssa342|0);
      $612 = ($__ng$0$lcssa343|0)!=(0);
      $or$cond9 = $612 & $611;
      if ($or$cond9) {
       $613 = HEAP32[$__ge>>2]|0;
       $614 = ($$lcssa342|0)==($613|0);
       if ($614) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $615 = __THREW__; __THREW__ = 0;
        $616 = $615&1;
        if ($616) {
         label = 42;
         break L24;
        }
        $$pre286 = HEAP32[$__gn>>2]|0;
        $618 = $$pre286;
       } else {
        $618 = $$lcssa342;
       }
       $617 = (($618) + 4|0);
       HEAP32[$__gn>>2] = $617;
       HEAP32[$618>>2] = $__ng$0$lcssa343;
       $873 = $617;
      } else {
       $873 = $$lcssa342;
      }
      $619 = HEAP32[$__fd>>2]|0;
      $620 = ($619|0)>(0);
      if ($620) {
       $621 = HEAP32[$__b>>2]|0;
       $622 = ($621|0)==(0|0);
       do {
        if ($622) {
         $874 = 1;
        } else {
         $623 = (($621) + 12|0);
         $624 = HEAP32[$623>>2]|0;
         $625 = (($621) + 16|0);
         $626 = HEAP32[$625>>2]|0;
         $627 = ($624|0)==($626|0);
         if ($627) {
          $628 = HEAP32[$621>>2]|0;
          $629 = (($628) + 36|0);
          $630 = HEAP32[$629>>2]|0;
          __THREW__ = 0;
          $631 = (invoke_ii($630|0,($621|0))|0);
          $632 = __THREW__; __THREW__ = 0;
          $633 = $632&1;
          if ($633) {
           label = 42;
           break L24;
          } else {
           $$0$i$i$i$i125 = $631;
          }
         } else {
          $634 = HEAP32[$624>>2]|0;
          $$0$i$i$i$i125 = $634;
         }
         $635 = ($$0$i$i$i$i125|0)==(-1);
         if ($635) {
          HEAP32[$__b>>2] = 0;
          $874 = 1;
          break;
         } else {
          $$pre$i$i$i127 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i128 = ($$pre$i$i$i127|0)==(0|0);
          $874 = $phitmp$i$i$i128;
          break;
         }
        }
       } while(0);
       $636 = ($$pre$i3$i$i133|0)==(0|0);
       do {
        if ($636) {
         label = 272;
        } else {
         $637 = (($$pre$i3$i$i133) + 12|0);
         $638 = HEAP32[$637>>2]|0;
         $639 = (($$pre$i3$i$i133) + 16|0);
         $640 = HEAP32[$639>>2]|0;
         $641 = ($638|0)==($640|0);
         if ($641) {
          $642 = HEAP32[$$pre$i3$i$i133>>2]|0;
          $643 = (($642) + 36|0);
          $644 = HEAP32[$643>>2]|0;
          __THREW__ = 0;
          $645 = (invoke_ii($644|0,($$pre$i3$i$i133|0))|0);
          $646 = __THREW__; __THREW__ = 0;
          $647 = $646&1;
          if ($647) {
           label = 42;
           break L24;
          } else {
           $$0$i$i1$i$i131 = $645;
          }
         } else {
          $648 = HEAP32[$638>>2]|0;
          $$0$i$i1$i$i131 = $648;
         }
         $649 = ($$0$i$i1$i$i131|0)==(-1);
         if ($649) {
          HEAP32[$__e>>2] = 0;
          label = 272;
          break;
         } else {
          if ($874) {
           $875 = $$pre$i3$i$i133;
           break;
          } else {
           label = 278;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 272) {
        label = 0;
        if ($874) {
         label = 278;
         break L24;
        } else {
         $875 = 0;
        }
       }
       $650 = HEAP32[$__b>>2]|0;
       $651 = (($650) + 12|0);
       $652 = HEAP32[$651>>2]|0;
       $653 = (($650) + 16|0);
       $654 = HEAP32[$653>>2]|0;
       $655 = ($652|0)==($654|0);
       if ($655) {
        $656 = HEAP32[$650>>2]|0;
        $657 = (($656) + 36|0);
        $658 = HEAP32[$657>>2]|0;
        __THREW__ = 0;
        $659 = (invoke_ii($658|0,($650|0))|0);
        $660 = __THREW__; __THREW__ = 0;
        $661 = $660&1;
        if ($661) {
         label = 42;
         break L24;
        } else {
         $$0$i$i118 = $659;
        }
       } else {
        $662 = HEAP32[$652>>2]|0;
        $$0$i$i118 = $662;
       }
       $663 = HEAP32[$__dp>>2]|0;
       $664 = ($$0$i$i118|0)==($663|0);
       if (!($664)) {
        label = 278;
        break L24;
       }
       $667 = HEAP32[$__b>>2]|0;
       $668 = (($667) + 12|0);
       $669 = HEAP32[$668>>2]|0;
       $670 = (($667) + 16|0);
       $671 = HEAP32[$670>>2]|0;
       $672 = ($669|0)==($671|0);
       if ($672) {
        $673 = HEAP32[$667>>2]|0;
        $674 = (($673) + 40|0);
        $675 = HEAP32[$674>>2]|0;
        __THREW__ = 0;
        (invoke_ii($675|0,($667|0))|0);
        $676 = __THREW__; __THREW__ = 0;
        $677 = $676&1;
        if ($677) {
         label = 42;
         break L24;
        }
       } else {
        $678 = (($669) + 4|0);
        HEAP32[$668>>2] = $678;
       }
       $$pre$i3$i$i99 = $875;$679 = $619;$696 = $875;
       while(1) {
        $680 = ($679|0)>(0);
        if (!($680)) {
         break;
        }
        $681 = HEAP32[$__b>>2]|0;
        $682 = ($681|0)==(0|0);
        do {
         if ($682) {
          $711 = 1;
         } else {
          $683 = (($681) + 12|0);
          $684 = HEAP32[$683>>2]|0;
          $685 = (($681) + 16|0);
          $686 = HEAP32[$685>>2]|0;
          $687 = ($684|0)==($686|0);
          if ($687) {
           $688 = HEAP32[$681>>2]|0;
           $689 = (($688) + 36|0);
           $690 = HEAP32[$689>>2]|0;
           __THREW__ = 0;
           $691 = (invoke_ii($690|0,($681|0))|0);
           $692 = __THREW__; __THREW__ = 0;
           $693 = $692&1;
           if ($693) {
            label = 40;
            break L24;
           } else {
            $$0$i$i$i$i91 = $691;
           }
          } else {
           $694 = HEAP32[$684>>2]|0;
           $$0$i$i$i$i91 = $694;
          }
          $695 = ($$0$i$i$i$i91|0)==(-1);
          if ($695) {
           HEAP32[$__b>>2] = 0;
           $711 = 1;
           break;
          } else {
           $$pre$i$i$i93 = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i94 = ($$pre$i$i$i93|0)==(0|0);
           $711 = $phitmp$i$i$i94;
           break;
          }
         }
        } while(0);
        $697 = ($696|0)==(0|0);
        do {
         if ($697) {
          $$pre$i3$i$i99287$ph = $$pre$i3$i$i99;
          label = 297;
         } else {
          $698 = (($696) + 12|0);
          $699 = HEAP32[$698>>2]|0;
          $700 = (($696) + 16|0);
          $701 = HEAP32[$700>>2]|0;
          $702 = ($699|0)==($701|0);
          if ($702) {
           $703 = HEAP32[$696>>2]|0;
           $704 = (($703) + 36|0);
           $705 = HEAP32[$704>>2]|0;
           __THREW__ = 0;
           $706 = (invoke_ii($705|0,($696|0))|0);
           $707 = __THREW__; __THREW__ = 0;
           $708 = $707&1;
           if ($708) {
            label = 40;
            break L24;
           } else {
            $$0$i$i1$i$i97 = $706;
           }
          } else {
           $709 = HEAP32[$699>>2]|0;
           $$0$i$i1$i$i97 = $709;
          }
          $710 = ($$0$i$i1$i$i97|0)==(-1);
          if ($710) {
           HEAP32[$__e>>2] = 0;
           $$pre$i3$i$i99287$ph = 0;
           label = 297;
           break;
          } else {
           $phitmp$i4$i$i100 = ($$pre$i3$i$i99|0)==(0|0);
           $tmp$i$i102 = $711 ^ $phitmp$i4$i$i100;
           if ($tmp$i$i102) {
            $$pre$i3$i$i99287297 = $$pre$i3$i$i99;$876 = $$pre$i3$i$i99;
            break;
           } else {
            label = 304;
            break L24;
           }
          }
         }
        } while(0);
        if ((label|0) == 297) {
         label = 0;
         if ($711) {
          label = 304;
          break L24;
         } else {
          $$pre$i3$i$i99287297 = $$pre$i3$i$i99287$ph;$876 = 0;
         }
        }
        $712 = HEAP32[$__b>>2]|0;
        $713 = (($712) + 12|0);
        $714 = HEAP32[$713>>2]|0;
        $715 = (($712) + 16|0);
        $716 = HEAP32[$715>>2]|0;
        $717 = ($714|0)==($716|0);
        if ($717) {
         $718 = HEAP32[$712>>2]|0;
         $719 = (($718) + 36|0);
         $720 = HEAP32[$719>>2]|0;
         __THREW__ = 0;
         $721 = (invoke_ii($720|0,($712|0))|0);
         $722 = __THREW__; __THREW__ = 0;
         $723 = $722&1;
         if ($723) {
          label = 40;
          break L24;
         } else {
          $$0$i$i85 = $721;
         }
        } else {
         $724 = HEAP32[$714>>2]|0;
         $$0$i$i85 = $724;
        }
        $725 = HEAP32[$__ct>>2]|0;
        $726 = (($725) + 12|0);
        $727 = HEAP32[$726>>2]|0;
        __THREW__ = 0;
        $728 = (invoke_iiii($727|0,($__ct|0),2048,($$0$i$i85|0))|0);
        $729 = __THREW__; __THREW__ = 0;
        $730 = $729&1;
        if ($730) {
         label = 40;
         break L24;
        }
        if (!($728)) {
         label = 304;
         break L24;
        }
        $733 = HEAP32[$__wn>>2]|0;
        $734 = HEAP32[$0>>2]|0;
        $735 = ($733|0)==($734|0);
        if ($735) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $736 = __THREW__; __THREW__ = 0;
         $737 = $736&1;
         if ($737) {
          label = 40;
          break L24;
         }
        }
        $738 = HEAP32[$__b>>2]|0;
        $739 = (($738) + 12|0);
        $740 = HEAP32[$739>>2]|0;
        $741 = (($738) + 16|0);
        $742 = HEAP32[$741>>2]|0;
        $743 = ($740|0)==($742|0);
        if ($743) {
         $744 = HEAP32[$738>>2]|0;
         $745 = (($744) + 36|0);
         $746 = HEAP32[$745>>2]|0;
         __THREW__ = 0;
         $747 = (invoke_ii($746|0,($738|0))|0);
         $748 = __THREW__; __THREW__ = 0;
         $749 = $748&1;
         if ($749) {
          label = 40;
          break L24;
         } else {
          $$0$i$i77 = $747;
         }
        } else {
         $750 = HEAP32[$740>>2]|0;
         $$0$i$i77 = $750;
        }
        $751 = HEAP32[$__wn>>2]|0;
        $752 = (($751) + 4|0);
        HEAP32[$__wn>>2] = $752;
        HEAP32[$751>>2] = $$0$i$i77;
        $753 = (($679) + -1)|0;
        HEAP32[$__fd>>2] = $753;
        $754 = HEAP32[$__b>>2]|0;
        $755 = (($754) + 12|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = (($754) + 16|0);
        $758 = HEAP32[$757>>2]|0;
        $759 = ($756|0)==($758|0);
        if ($759) {
         $760 = HEAP32[$754>>2]|0;
         $761 = (($760) + 40|0);
         $762 = HEAP32[$761>>2]|0;
         __THREW__ = 0;
         (invoke_ii($762|0,($754|0))|0);
         $763 = __THREW__; __THREW__ = 0;
         $764 = $763&1;
         if ($764) {
          label = 40;
          break L24;
         }
        } else {
         $765 = (($756) + 4|0);
         HEAP32[$755>>2] = $765;
        }
        $$pre$i3$i$i99 = $$pre$i3$i$i99287297;$679 = $753;$696 = $876;
       }
      }
      $766 = HEAP32[$__wn>>2]|0;
      $767 = HEAP32[$__wb>>2]|0;
      $768 = ($766|0)==($767|0);
      if ($768) {
       label = 316;
       break L24;
      } else {
       $865 = $873;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 3:  {
      $190 = HEAP8[$__psn>>0]|0;
      $191 = $190 & 1;
      $192 = ($191<<24>>24)==(0);
      if ($192) {
       $194 = $190&255;
       $195 = $194 >>> 1;
       $204 = $195;
      } else {
       $193 = HEAP32[$18>>2]|0;
       $204 = $193;
      }
      $196 = HEAP8[$__nsn>>0]|0;
      $197 = $196 & 1;
      $198 = ($197<<24>>24)==(0);
      if ($198) {
       $200 = $196&255;
       $201 = $200 >>> 1;
       $203 = $201;
      } else {
       $199 = HEAP32[$16>>2]|0;
       $203 = $199;
      }
      $202 = (0 - ($203))|0;
      $205 = ($204|0)==($202|0);
      if ($205) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($192) {
        $207 = $190&255;
        $208 = $207 >>> 1;
        $209 = $208;
       } else {
        $206 = HEAP32[$18>>2]|0;
        $209 = $206;
       }
       $210 = ($209|0)==(0);
       if (!($210)) {
        if ($198) {
         $212 = $196&255;
         $213 = $212 >>> 1;
         $214 = $213;
        } else {
         $211 = HEAP32[$16>>2]|0;
         $214 = $211;
        }
        $215 = ($214|0)==(0);
        if (!($215)) {
         $293 = HEAP32[$__b>>2]|0;
         $294 = (($293) + 12|0);
         $295 = HEAP32[$294>>2]|0;
         $296 = (($293) + 16|0);
         $297 = HEAP32[$296>>2]|0;
         $298 = ($295|0)==($297|0);
         if ($298) {
          $299 = HEAP32[$293>>2]|0;
          $300 = (($299) + 36|0);
          $301 = HEAP32[$300>>2]|0;
          __THREW__ = 0;
          $302 = (invoke_ii($301|0,($293|0))|0);
          $303 = __THREW__; __THREW__ = 0;
          $304 = $303&1;
          if ($304) {
           label = 42;
           break L24;
          }
          $$pre279 = HEAP8[$__psn>>0]|0;
          $$0$i$i121 = $302;$307 = $$pre279;
         } else {
          $305 = HEAP32[$295>>2]|0;
          $$0$i$i121 = $305;$307 = $190;
         }
         $306 = $307 & 1;
         $308 = ($306<<24>>24)==(0);
         $309 = HEAP32[$19>>2]|0;
         $$300 = $308 ? $18 : $309;
         $310 = HEAP32[$$300>>2]|0;
         $311 = ($$0$i$i121|0)==($310|0);
         $312 = HEAP32[$__b>>2]|0;
         $313 = (($312) + 12|0);
         $314 = HEAP32[$313>>2]|0;
         $315 = (($312) + 16|0);
         $316 = HEAP32[$315>>2]|0;
         $317 = ($314|0)==($316|0);
         if ($311) {
          if ($317) {
           $318 = HEAP32[$312>>2]|0;
           $319 = (($318) + 40|0);
           $320 = HEAP32[$319>>2]|0;
           __THREW__ = 0;
           (invoke_ii($320|0,($312|0))|0);
           $321 = __THREW__; __THREW__ = 0;
           $322 = $321&1;
           if ($322) {
            label = 42;
            break L24;
           }
          } else {
           $323 = (($314) + 4|0);
           HEAP32[$313>>2] = $323;
          }
          $324 = HEAP8[$__psn>>0]|0;
          $325 = $324 & 1;
          $326 = ($325<<24>>24)==(0);
          if ($326) {
           $328 = $324&255;
           $329 = $328 >>> 1;
           $330 = $329;
          } else {
           $327 = HEAP32[$18>>2]|0;
           $330 = $327;
          }
          $331 = ($330>>>0)>(1);
          $__psn$__trailing_sign$010 = $331 ? $__psn : $__trailing_sign$0;
          $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L49;
         }
         if ($317) {
          $332 = HEAP32[$312>>2]|0;
          $333 = (($332) + 36|0);
          $334 = HEAP32[$333>>2]|0;
          __THREW__ = 0;
          $335 = (invoke_ii($334|0,($312|0))|0);
          $336 = __THREW__; __THREW__ = 0;
          $337 = $336&1;
          if ($337) {
           label = 42;
           break L24;
          } else {
           $$0$i$i143 = $335;
          }
         } else {
          $338 = HEAP32[$314>>2]|0;
          $$0$i$i143 = $338;
         }
         $339 = HEAP8[$__nsn>>0]|0;
         $340 = $339 & 1;
         $341 = ($340<<24>>24)==(0);
         $342 = HEAP32[$17>>2]|0;
         $$301 = $341 ? $16 : $342;
         $343 = HEAP32[$$301>>2]|0;
         $344 = ($$0$i$i143|0)==($343|0);
         if (!($344)) {
          label = 152;
          break L24;
         }
         $345 = HEAP32[$__b>>2]|0;
         $346 = (($345) + 12|0);
         $347 = HEAP32[$346>>2]|0;
         $348 = (($345) + 16|0);
         $349 = HEAP32[$348>>2]|0;
         $350 = ($347|0)==($349|0);
         if ($350) {
          $351 = HEAP32[$345>>2]|0;
          $352 = (($351) + 40|0);
          $353 = HEAP32[$352>>2]|0;
          __THREW__ = 0;
          (invoke_ii($353|0,($345|0))|0);
          $354 = __THREW__; __THREW__ = 0;
          $355 = $354&1;
          if ($355) {
           label = 42;
           break L24;
          }
         } else {
          $356 = (($347) + 4|0);
          HEAP32[$346>>2] = $356;
         }
         HEAP8[$__neg>>0] = 1;
         $357 = HEAP8[$__nsn>>0]|0;
         $358 = $357 & 1;
         $359 = ($358<<24>>24)==(0);
         if ($359) {
          $361 = $357&255;
          $362 = $361 >>> 1;
          $363 = $362;
         } else {
          $360 = HEAP32[$16>>2]|0;
          $363 = $360;
         }
         $364 = ($363>>>0)>(1);
         $__nsn$__trailing_sign$011 = $364 ? $__nsn : $__trailing_sign$0;
         $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L49;
        }
       }
       if ($192) {
        $217 = $190&255;
        $218 = $217 >>> 1;
        $219 = $218;
       } else {
        $216 = HEAP32[$18>>2]|0;
        $219 = $216;
       }
       $220 = ($219|0)==(0);
       $221 = HEAP32[$__b>>2]|0;
       $222 = (($221) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = (($221) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($220) {
        if ($226) {
         $260 = HEAP32[$221>>2]|0;
         $261 = (($260) + 36|0);
         $262 = HEAP32[$261>>2]|0;
         __THREW__ = 0;
         $263 = (invoke_ii($262|0,($221|0))|0);
         $264 = __THREW__; __THREW__ = 0;
         $265 = $264&1;
         if ($265) {
          label = 42;
          break L24;
         }
         $$pre = HEAP8[$__nsn>>0]|0;
         $$0$i$i109 = $263;$268 = $$pre;
        } else {
         $266 = HEAP32[$223>>2]|0;
         $$0$i$i109 = $266;$268 = $196;
        }
        $267 = $268 & 1;
        $269 = ($267<<24>>24)==(0);
        $270 = HEAP32[$17>>2]|0;
        $$299 = $269 ? $16 : $270;
        $271 = HEAP32[$$299>>2]|0;
        $272 = ($$0$i$i109|0)==($271|0);
        if (!($272)) {
         $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
         break L49;
        }
        $273 = HEAP32[$__b>>2]|0;
        $274 = (($273) + 12|0);
        $275 = HEAP32[$274>>2]|0;
        $276 = (($273) + 16|0);
        $277 = HEAP32[$276>>2]|0;
        $278 = ($275|0)==($277|0);
        if ($278) {
         $279 = HEAP32[$273>>2]|0;
         $280 = (($279) + 40|0);
         $281 = HEAP32[$280>>2]|0;
         __THREW__ = 0;
         (invoke_ii($281|0,($273|0))|0);
         $282 = __THREW__; __THREW__ = 0;
         $283 = $282&1;
         if ($283) {
          label = 42;
          break L24;
         }
        } else {
         $284 = (($275) + 4|0);
         HEAP32[$274>>2] = $284;
        }
        HEAP8[$__neg>>0] = 1;
        $285 = HEAP8[$__nsn>>0]|0;
        $286 = $285 & 1;
        $287 = ($286<<24>>24)==(0);
        if ($287) {
         $289 = $285&255;
         $290 = $289 >>> 1;
         $291 = $290;
        } else {
         $288 = HEAP32[$16>>2]|0;
         $291 = $288;
        }
        $292 = ($291>>>0)>(1);
        $__nsn$__trailing_sign$0 = $292 ? $__nsn : $__trailing_sign$0;
        $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L49;
       }
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = (($227) + 36|0);
        $229 = HEAP32[$228>>2]|0;
        __THREW__ = 0;
        $230 = (invoke_ii($229|0,($221|0))|0);
        $231 = __THREW__; __THREW__ = 0;
        $232 = $231&1;
        if ($232) {
         label = 42;
         break L24;
        }
        $$pre278 = HEAP8[$__psn>>0]|0;
        $$0$i$i88 = $230;$235 = $$pre278;
       } else {
        $233 = HEAP32[$223>>2]|0;
        $$0$i$i88 = $233;$235 = $190;
       }
       $234 = $235 & 1;
       $236 = ($234<<24>>24)==(0);
       $237 = HEAP32[$19>>2]|0;
       $$ = $236 ? $18 : $237;
       $238 = HEAP32[$$>>2]|0;
       $239 = ($$0$i$i88|0)==($238|0);
       if (!($239)) {
        HEAP8[$__neg>>0] = 1;
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
        break L49;
       }
       $240 = HEAP32[$__b>>2]|0;
       $241 = (($240) + 12|0);
       $242 = HEAP32[$241>>2]|0;
       $243 = (($240) + 16|0);
       $244 = HEAP32[$243>>2]|0;
       $245 = ($242|0)==($244|0);
       if ($245) {
        $246 = HEAP32[$240>>2]|0;
        $247 = (($246) + 40|0);
        $248 = HEAP32[$247>>2]|0;
        __THREW__ = 0;
        (invoke_ii($248|0,($240|0))|0);
        $249 = __THREW__; __THREW__ = 0;
        $250 = $249&1;
        if ($250) {
         label = 42;
         break L24;
        }
       } else {
        $251 = (($242) + 4|0);
        HEAP32[$241>>2] = $251;
       }
       $252 = HEAP8[$__psn>>0]|0;
       $253 = $252 & 1;
       $254 = ($253<<24>>24)==(0);
       if ($254) {
        $256 = $252&255;
        $257 = $256 >>> 1;
        $258 = $257;
       } else {
        $255 = HEAP32[$18>>2]|0;
        $258 = $255;
       }
       $259 = ($258>>>0)>(1);
       $__psn$__trailing_sign$0 = $259 ? $__psn : $__trailing_sign$0;
       $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     case 0:  {
      $123 = ($__p$0|0)==(3);
      if ($123) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 60;
      }
      break;
     }
     case 2:  {
      $367 = ($__trailing_sign$0|0)!=(0|0);
      $368 = ($__p$0>>>0)<(2);
      $or$cond = $368 | $367;
      if (!($or$cond)) {
       $369 = ($__p$0|0)==(2);
       if ($369) {
        $370 = HEAP8[$26>>0]|0;
        $371 = ($370<<24>>24)!=(0);
        $372 = $371;
       } else {
        $372 = 0;
       }
       $brmerge = $21 | $372;
       if (!($brmerge)) {
        $865 = $862;$__trailing_sign$1 = 0;
        break L49;
       }
      }
      $373 = HEAP8[$__sym>>0]|0;
      $374 = $373 & 1;
      $375 = ($374<<24>>24)==(0);
      $376 = HEAP32[$23>>2]|0;
      $$302 = $375 ? $22 : $376;
      $377 = ($__p$0|0)==(0);
      L294: do {
       if ($377) {
        $$ph = $373;$$ph341 = $$302;
       } else {
        $378 = (($__p$0) + -1)|0;
        $379 = (($__pat) + ($378)|0);
        $380 = HEAP8[$379>>0]|0;
        $switch = ($380&255)<(2);
        if ($switch) {
         $382 = $373;$391 = $$302;
         while(1) {
          $381 = $382 & 1;
          $383 = ($381<<24>>24)==(0);
          if ($383) {
           $386 = $382&255;
           $387 = $386 >>> 1;
           $389 = $22;$390 = $387;
          } else {
           $384 = HEAP32[$23>>2]|0;
           $385 = HEAP32[$22>>2]|0;
           $389 = $384;$390 = $385;
          }
          $388 = (($389) + ($390<<2)|0);
          $392 = ($391|0)==($388|0);
          if ($392) {
           $$lcssa = $382;$$lcssa346 = $391;
           label = 168;
           break;
          }
          $393 = HEAP32[$391>>2]|0;
          $394 = HEAP32[$__ct>>2]|0;
          $395 = (($394) + 12|0);
          $396 = HEAP32[$395>>2]|0;
          __THREW__ = 0;
          $397 = (invoke_iiii($396|0,($__ct|0),8192,($393|0))|0);
          $398 = __THREW__; __THREW__ = 0;
          $399 = $398&1;
          if ($399) {
           label = 39;
           break L24;
          }
          if (!($397)) {
           $$lcssa348 = $391;
           label = 166;
           break;
          }
          $400 = (($391) + 4|0);
          $$pre284 = HEAP8[$__sym>>0]|0;
          $382 = $$pre284;$391 = $400;
         }
         if ((label|0) == 166) {
          label = 0;
          $$pre285 = HEAP8[$__sym>>0]|0;
          $402 = $$pre285;$405 = $$lcssa348;
         }
         else if ((label|0) == 168) {
          label = 0;
          $402 = $$lcssa;$405 = $$lcssa346;
         }
         $401 = $402 & 1;
         $403 = ($401<<24>>24)==(0);
         $404 = HEAP32[$23>>2]|0;
         $$303 = $403 ? $22 : $404;
         $406 = $405;
         $407 = $$303;
         $408 = (($406) - ($407))|0;
         $409 = $408 >> 2;
         $410 = HEAP8[$__spaces>>0]|0;
         $411 = $410 & 1;
         $412 = ($411<<24>>24)==(0);
         if ($412) {
          $414 = $410&255;
          $415 = $414 >>> 1;
          $417 = $415;
         } else {
          $413 = HEAP32[$24>>2]|0;
          $417 = $413;
         }
         $416 = ($409>>>0)>($417>>>0);
         do {
          if (!($416)) {
           if ($412) {
            $421 = $410&255;
            $422 = $421 >>> 1;
            $$sum293 = (($422) - ($409))|0;
            $423 = (($24) + ($$sum293<<2)|0);
            $424 = $410&255;
            $425 = $424 >>> 1;
            $427 = $24;$428 = $425;$867 = $423;
           } else {
            $418 = HEAP32[$25>>2]|0;
            $419 = HEAP32[$24>>2]|0;
            $$sum = (($419) - ($409))|0;
            $420 = (($418) + ($$sum<<2)|0);
            $427 = $418;$428 = $419;$867 = $420;
           }
           $426 = (($427) + ($428<<2)|0);
           $429 = HEAP32[$23>>2]|0;
           $$304 = $403 ? $22 : $429;
           $430 = $867;$434 = $$304;
           while(1) {
            $431 = ($430|0)==($426|0);
            if ($431) {
             label = 182;
             break;
            }
            $432 = HEAP32[$430>>2]|0;
            $433 = HEAP32[$434>>2]|0;
            $435 = ($432|0)==($433|0);
            if (!($435)) {
             label = 180;
             break;
            }
            $436 = (($430) + 4|0);
            $437 = (($434) + 4|0);
            $430 = $436;$434 = $437;
           }
           if ((label|0) == 180) {
            label = 0;
            break;
           }
           else if ((label|0) == 182) {
            label = 0;
            $$ph = $402;$$ph341 = $405;
            break L294;
           }
          }
         } while(0);
         $438 = HEAP32[$23>>2]|0;
         $$305 = $403 ? $22 : $438;
         $$ph = $402;$$ph341 = $$305;
        } else {
         $$ph = $373;$$ph341 = $$302;
        }
       }
      } while(0);
      $$pre$i3$i$i190 = $864;$440 = $$ph;$449 = $$ph341;$466 = $864;
      L329: while(1) {
       $439 = $440 & 1;
       $441 = ($439<<24>>24)==(0);
       if ($441) {
        $444 = $440&255;
        $445 = $444 >>> 1;
        $447 = $22;$448 = $445;
       } else {
        $442 = HEAP32[$23>>2]|0;
        $443 = HEAP32[$22>>2]|0;
        $447 = $442;$448 = $443;
       }
       $446 = (($447) + ($448<<2)|0);
       $450 = ($449|0)==($446|0);
       if ($450) {
        $$lcssa349 = $449;
        break;
       }
       $451 = HEAP32[$__b>>2]|0;
       $452 = ($451|0)==(0|0);
       do {
        if ($452) {
         $481 = 1;
        } else {
         $453 = (($451) + 12|0);
         $454 = HEAP32[$453>>2]|0;
         $455 = (($451) + 16|0);
         $456 = HEAP32[$455>>2]|0;
         $457 = ($454|0)==($456|0);
         if ($457) {
          $458 = HEAP32[$451>>2]|0;
          $459 = (($458) + 36|0);
          $460 = HEAP32[$459>>2]|0;
          __THREW__ = 0;
          $461 = (invoke_ii($460|0,($451|0))|0);
          $462 = __THREW__; __THREW__ = 0;
          $463 = $462&1;
          if ($463) {
           label = 38;
           break L24;
          } else {
           $$0$i$i$i$i182 = $461;
          }
         } else {
          $464 = HEAP32[$454>>2]|0;
          $$0$i$i$i$i182 = $464;
         }
         $465 = ($$0$i$i$i$i182|0)==(-1);
         if ($465) {
          HEAP32[$__b>>2] = 0;
          $481 = 1;
          break;
         } else {
          $$pre$i$i$i184 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i185 = ($$pre$i$i$i184|0)==(0|0);
          $481 = $phitmp$i$i$i185;
          break;
         }
        }
       } while(0);
       $467 = ($466|0)==(0|0);
       do {
        if ($467) {
         $$pre$i3$i$i190282 = $$pre$i3$i$i190;
         label = 201;
        } else {
         $468 = (($466) + 12|0);
         $469 = HEAP32[$468>>2]|0;
         $470 = (($466) + 16|0);
         $471 = HEAP32[$470>>2]|0;
         $472 = ($469|0)==($471|0);
         if ($472) {
          $473 = HEAP32[$466>>2]|0;
          $474 = (($473) + 36|0);
          $475 = HEAP32[$474>>2]|0;
          __THREW__ = 0;
          $476 = (invoke_ii($475|0,($466|0))|0);
          $477 = __THREW__; __THREW__ = 0;
          $478 = $477&1;
          if ($478) {
           label = 38;
           break L24;
          } else {
           $$0$i$i1$i$i188 = $476;
          }
         } else {
          $479 = HEAP32[$469>>2]|0;
          $$0$i$i1$i$i188 = $479;
         }
         $480 = ($$0$i$i1$i$i188|0)==(-1);
         if ($480) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i190282 = 0;
          label = 201;
          break;
         } else {
          $phitmp$i4$i$i191 = ($$pre$i3$i$i190|0)==(0|0);
          $tmp$i$i193 = $481 ^ $phitmp$i4$i$i191;
          if ($tmp$i$i193) {
           $$pre$i3$i$i190281 = $$pre$i3$i$i190;$868 = $$pre$i3$i$i190;
           break;
          } else {
           $$lcssa349 = $449;
           break L329;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($481) {
         $$lcssa349 = $449;
         break;
        } else {
         $$pre$i3$i$i190281 = $$pre$i3$i$i190282;$868 = 0;
        }
       }
       $482 = HEAP32[$__b>>2]|0;
       $483 = (($482) + 12|0);
       $484 = HEAP32[$483>>2]|0;
       $485 = (($482) + 16|0);
       $486 = HEAP32[$485>>2]|0;
       $487 = ($484|0)==($486|0);
       if ($487) {
        $488 = HEAP32[$482>>2]|0;
        $489 = (($488) + 36|0);
        $490 = HEAP32[$489>>2]|0;
        __THREW__ = 0;
        $491 = (invoke_ii($490|0,($482|0))|0);
        $492 = __THREW__; __THREW__ = 0;
        $493 = $492&1;
        if ($493) {
         label = 38;
         break L24;
        } else {
         $$0$i$i178 = $491;
        }
       } else {
        $494 = HEAP32[$484>>2]|0;
        $$0$i$i178 = $494;
       }
       $495 = HEAP32[$449>>2]|0;
       $496 = ($$0$i$i178|0)==($495|0);
       if (!($496)) {
        $$lcssa349 = $449;
        break;
       }
       $497 = HEAP32[$__b>>2]|0;
       $498 = (($497) + 12|0);
       $499 = HEAP32[$498>>2]|0;
       $500 = (($497) + 16|0);
       $501 = HEAP32[$500>>2]|0;
       $502 = ($499|0)==($501|0);
       if ($502) {
        $503 = HEAP32[$497>>2]|0;
        $504 = (($503) + 40|0);
        $505 = HEAP32[$504>>2]|0;
        __THREW__ = 0;
        (invoke_ii($505|0,($497|0))|0);
        $506 = __THREW__; __THREW__ = 0;
        $507 = $506&1;
        if ($507) {
         label = 38;
         break L24;
        }
       } else {
        $508 = (($499) + 4|0);
        HEAP32[$498>>2] = $508;
       }
       $509 = (($449) + 4|0);
       $$pre280 = HEAP8[$__sym>>0]|0;
       $$pre$i3$i$i190 = $$pre$i3$i$i190281;$440 = $$pre280;$449 = $509;$466 = $868;
      }
      if ($21) {
       $510 = HEAP8[$__sym>>0]|0;
       $511 = $510 & 1;
       $512 = ($511<<24>>24)==(0);
       if ($512) {
        $515 = $510&255;
        $516 = $515 >>> 1;
        $518 = $22;$519 = $516;
       } else {
        $513 = HEAP32[$23>>2]|0;
        $514 = HEAP32[$22>>2]|0;
        $518 = $513;$519 = $514;
       }
       $517 = (($518) + ($519<<2)|0);
       $520 = ($$lcssa349|0)==($517|0);
       if ($520) {
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L24;
       }
      } else {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     default: {
      $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 60) {
     label = 0;
     $$pre$i3$i$i59 = $864;$139 = $864;
     L375: while(1) {
      $124 = HEAP32[$__b>>2]|0;
      $125 = ($124|0)==(0|0);
      do {
       if ($125) {
        $154 = 1;
       } else {
        $126 = (($124) + 12|0);
        $127 = HEAP32[$126>>2]|0;
        $128 = (($124) + 16|0);
        $129 = HEAP32[$128>>2]|0;
        $130 = ($127|0)==($129|0);
        if ($130) {
         $131 = HEAP32[$124>>2]|0;
         $132 = (($131) + 36|0);
         $133 = HEAP32[$132>>2]|0;
         __THREW__ = 0;
         $134 = (invoke_ii($133|0,($124|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 37;
          break L24;
         } else {
          $$0$i$i$i$i51 = $134;
         }
        } else {
         $137 = HEAP32[$127>>2]|0;
         $$0$i$i$i$i51 = $137;
        }
        $138 = ($$0$i$i$i$i51|0)==(-1);
        if ($138) {
         HEAP32[$__b>>2] = 0;
         $154 = 1;
         break;
        } else {
         $$pre$i$i$i53 = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i54 = ($$pre$i$i$i53|0)==(0|0);
         $154 = $phitmp$i$i$i54;
         break;
        }
       }
      } while(0);
      $140 = ($139|0)==(0|0);
      do {
       if ($140) {
        $$pre$i3$i$i59275 = $$pre$i3$i$i59;
        label = 74;
       } else {
        $141 = (($139) + 12|0);
        $142 = HEAP32[$141>>2]|0;
        $143 = (($139) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($142|0)==($144|0);
        if ($145) {
         $146 = HEAP32[$139>>2]|0;
         $147 = (($146) + 36|0);
         $148 = HEAP32[$147>>2]|0;
         __THREW__ = 0;
         $149 = (invoke_ii($148|0,($139|0))|0);
         $150 = __THREW__; __THREW__ = 0;
         $151 = $150&1;
         if ($151) {
          label = 37;
          break L24;
         } else {
          $$0$i$i1$i$i57 = $149;
         }
        } else {
         $152 = HEAP32[$142>>2]|0;
         $$0$i$i1$i$i57 = $152;
        }
        $153 = ($$0$i$i1$i$i57|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         $$pre$i3$i$i59275 = 0;
         label = 74;
         break;
        } else {
         $phitmp$i4$i$i60 = ($$pre$i3$i$i59|0)==(0|0);
         $tmp$i$i62 = $154 ^ $phitmp$i4$i$i60;
         if ($tmp$i$i62) {
          $$pre$i3$i$i59277 = $$pre$i3$i$i59;$866 = $$pre$i3$i$i59;
          break;
         } else {
          break L375;
         }
        }
       }
      } while(0);
      if ((label|0) == 74) {
       label = 0;
       if ($154) {
        break;
       } else {
        $$pre$i3$i$i59277 = $$pre$i3$i$i59275;$866 = 0;
       }
      }
      $155 = HEAP32[$__b>>2]|0;
      $156 = (($155) + 12|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = (($155) + 16|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($157|0)==($159|0);
      if ($160) {
       $161 = HEAP32[$155>>2]|0;
       $162 = (($161) + 36|0);
       $163 = HEAP32[$162>>2]|0;
       __THREW__ = 0;
       $164 = (invoke_ii($163|0,($155|0))|0);
       $165 = __THREW__; __THREW__ = 0;
       $166 = $165&1;
       if ($166) {
        label = 37;
        break L24;
       } else {
        $$0$i$i66 = $164;
       }
      } else {
       $167 = HEAP32[$157>>2]|0;
       $$0$i$i66 = $167;
      }
      $168 = HEAP32[$__ct>>2]|0;
      $169 = (($168) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      __THREW__ = 0;
      $171 = (invoke_iiii($170|0,($__ct|0),8192,($$0$i$i66|0))|0);
      $172 = __THREW__; __THREW__ = 0;
      $173 = $172&1;
      if ($173) {
       label = 37;
       break L24;
      }
      if (!($171)) {
       break;
      }
      $174 = HEAP32[$__b>>2]|0;
      $175 = (($174) + 12|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = (($174) + 16|0);
      $178 = HEAP32[$177>>2]|0;
      $179 = ($176|0)==($178|0);
      if ($179) {
       $180 = HEAP32[$174>>2]|0;
       $181 = (($180) + 40|0);
       $182 = HEAP32[$181>>2]|0;
       __THREW__ = 0;
       $183 = (invoke_ii($182|0,($174|0))|0);
       $184 = __THREW__; __THREW__ = 0;
       $185 = $184&1;
       if ($185) {
        label = 37;
        break L24;
       } else {
        $$0$i$i72 = $183;
       }
      } else {
       $186 = (($176) + 4|0);
       HEAP32[$175>>2] = $186;
       $187 = HEAP32[$176>>2]|0;
       $$0$i$i72 = $187;
      }
      __THREW__ = 0;
      invoke_vii(485,($__spaces|0),($$0$i$i72|0));
      $188 = __THREW__; __THREW__ = 0;
      $189 = $188&1;
      if ($189) {
       label = 37;
       break L24;
      } else {
       $$pre$i3$i$i59 = $$pre$i3$i$i59277;$139 = $866;
      }
     }
     $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $771 = (($__p$0) + 1)|0;
    $862 = $865;$__p$0 = $771;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L411:    switch (label|0) {
    case 37: {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     $lpad$phi$index = $65;$lpad$phi$index8 = $66;
     break L21;
     break;
    }
    case 38: {
     $67 = ___cxa_find_matching_catch()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index8 = $68;
     break L21;
     break;
    }
    case 39: {
     $69 = ___cxa_find_matching_catch()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index8 = $70;
     break L21;
     break;
    }
    case 40: {
     $71 = ___cxa_find_matching_catch()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index8 = $72;
     break L21;
     break;
    }
    case 41: {
     $73 = ___cxa_find_matching_catch()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index8 = $74;
     break L21;
     break;
    }
    case 42: {
     $75 = ___cxa_find_matching_catch()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index8 = $76;
     break L21;
     break;
    }
    case 58: {
     $121 = HEAP32[$__err>>2]|0;
     $122 = $121 | 4;
     HEAP32[$__err>>2] = $122;
     $$0 = 0;
     break;
    }
    case 152: {
     $365 = HEAP32[$__err>>2]|0;
     $366 = $365 | 4;
     HEAP32[$__err>>2] = $366;
     $$0 = 0;
     break;
    }
    case 216: {
     $521 = HEAP32[$__err>>2]|0;
     $522 = $521 | 4;
     HEAP32[$__err>>2] = $522;
     $$0 = 0;
     break;
    }
    case 278: {
     $665 = HEAP32[$__err>>2]|0;
     $666 = $665 | 4;
     HEAP32[$__err>>2] = $666;
     $$0 = 0;
     break;
    }
    case 304: {
     $731 = HEAP32[$__err>>2]|0;
     $732 = $731 | 4;
     HEAP32[$__err>>2] = $732;
     $$0 = 0;
     break;
    }
    case 316: {
     $769 = HEAP32[$__err>>2]|0;
     $770 = $769 | 4;
     HEAP32[$__err>>2] = $770;
     $$0 = 0;
     break;
    }
    case 319: {
     $772 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($772)) {
       $773 = (($__trailing_sign$0$lcssa) + 4|0);
       $774 = (($__trailing_sign$0$lcssa) + 8|0);
       $__i$0 = 1;
       L418: while(1) {
        $775 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $776 = $775 & 1;
        $777 = ($776<<24>>24)==(0);
        if ($777) {
         $779 = $775&255;
         $780 = $779 >>> 1;
         $782 = $780;
        } else {
         $778 = HEAP32[$773>>2]|0;
         $782 = $778;
        }
        $781 = ($__i$0>>>0)<($782>>>0);
        if (!($781)) {
         label = 351;
         break;
        }
        $783 = HEAP32[$__b>>2]|0;
        $784 = ($783|0)==(0|0);
        do {
         if ($784) {
          $877 = 1;
         } else {
          $785 = (($783) + 12|0);
          $786 = HEAP32[$785>>2]|0;
          $787 = (($783) + 16|0);
          $788 = HEAP32[$787>>2]|0;
          $789 = ($786|0)==($788|0);
          if ($789) {
           $790 = HEAP32[$783>>2]|0;
           $791 = (($790) + 36|0);
           $792 = HEAP32[$791>>2]|0;
           __THREW__ = 0;
           $793 = (invoke_ii($792|0,($783|0))|0);
           $794 = __THREW__; __THREW__ = 0;
           $795 = $794&1;
           if ($795) {
            label = 36;
            break L418;
           } else {
            $$0$i$i$i$i = $793;
           }
          } else {
           $796 = HEAP32[$786>>2]|0;
           $$0$i$i$i$i = $796;
          }
          $797 = ($$0$i$i$i$i|0)==(-1);
          if ($797) {
           HEAP32[$__b>>2] = 0;
           $877 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $877 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $798 = HEAP32[$__e>>2]|0;
        $799 = ($798|0)==(0|0);
        do {
         if ($799) {
          label = 338;
         } else {
          $800 = (($798) + 12|0);
          $801 = HEAP32[$800>>2]|0;
          $802 = (($798) + 16|0);
          $803 = HEAP32[$802>>2]|0;
          $804 = ($801|0)==($803|0);
          if ($804) {
           $805 = HEAP32[$798>>2]|0;
           $806 = (($805) + 36|0);
           $807 = HEAP32[$806>>2]|0;
           __THREW__ = 0;
           $808 = (invoke_ii($807|0,($798|0))|0);
           $809 = __THREW__; __THREW__ = 0;
           $810 = $809&1;
           if ($810) {
            label = 36;
            break L418;
           } else {
            $$0$i$i1$i$i = $808;
           }
          } else {
           $811 = HEAP32[$801>>2]|0;
           $$0$i$i1$i$i = $811;
          }
          $812 = ($$0$i$i1$i$i|0)==(-1);
          if ($812) {
           HEAP32[$__e>>2] = 0;
           label = 338;
           break;
          } else {
           if ($877) {
            break;
           } else {
            label = 346;
            break L418;
           }
          }
         }
        } while(0);
        if ((label|0) == 338) {
         label = 0;
         if ($877) {
          label = 346;
          break;
         }
        }
        $813 = HEAP32[$__b>>2]|0;
        $814 = (($813) + 12|0);
        $815 = HEAP32[$814>>2]|0;
        $816 = (($813) + 16|0);
        $817 = HEAP32[$816>>2]|0;
        $818 = ($815|0)==($817|0);
        if ($818) {
         $819 = HEAP32[$813>>2]|0;
         $820 = (($819) + 36|0);
         $821 = HEAP32[$820>>2]|0;
         __THREW__ = 0;
         $822 = (invoke_ii($821|0,($813|0))|0);
         $823 = __THREW__; __THREW__ = 0;
         $824 = $823&1;
         if ($824) {
          label = 36;
          break;
         } else {
          $$0$i$i = $822;
         }
        } else {
         $825 = HEAP32[$815>>2]|0;
         $$0$i$i = $825;
        }
        $826 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $827 = $826 & 1;
        $828 = ($827<<24>>24)==(0);
        if ($828) {
         $831 = $773;
        } else {
         $829 = HEAP32[$774>>2]|0;
         $831 = $829;
        }
        $830 = (($831) + ($__i$0<<2)|0);
        $832 = HEAP32[$830>>2]|0;
        $833 = ($$0$i$i|0)==($832|0);
        if (!($833)) {
         label = 346;
         break;
        }
        $836 = (($__i$0) + 1)|0;
        $837 = HEAP32[$__b>>2]|0;
        $838 = (($837) + 12|0);
        $839 = HEAP32[$838>>2]|0;
        $840 = (($837) + 16|0);
        $841 = HEAP32[$840>>2]|0;
        $842 = ($839|0)==($841|0);
        if ($842) {
         $843 = HEAP32[$837>>2]|0;
         $844 = (($843) + 40|0);
         $845 = HEAP32[$844>>2]|0;
         __THREW__ = 0;
         (invoke_ii($845|0,($837|0))|0);
         $846 = __THREW__; __THREW__ = 0;
         $847 = $846&1;
         if ($847) {
          label = 36;
          break;
         }
        } else {
         $848 = (($839) + 4|0);
         HEAP32[$838>>2] = $848;
        }
        $__i$0 = $836;
       }
       if ((label|0) == 36) {
        $63 = ___cxa_find_matching_catch()|0;
        $64 = tempRet0;
        $lpad$phi$index = $63;$lpad$phi$index8 = $64;
        break L21;
       }
       else if ((label|0) == 346) {
        $834 = HEAP32[$__err>>2]|0;
        $835 = $834 | 4;
        HEAP32[$__err>>2] = $835;
        $$0 = 0;
        break L411;
       }
       else if ((label|0) == 351) {
        break;
       }
      }
     } while(0);
     $849 = HEAP32[$__gb>>2]|0;
     $850 = ($849|0)==($$lcssa351|0);
     if ($850) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$849,$$lcssa351,$__et);
      $851 = HEAP32[$__et>>2]|0;
      $852 = ($851|0)==(0);
      if ($852) {
       $$0 = 1;
      } else {
       $853 = HEAP32[$__err>>2]|0;
       $854 = $853 | 4;
       HEAP32[$__err>>2] = $854;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $855 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $856 = ($855|0)==(0|0);
   if (!($856)) {
    $857 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($857|0,($855|0));
    $858 = __THREW__; __THREW__ = 0;
    $859 = $858&1;
    if ($859) {
     $860 = ___cxa_find_matching_catch(0|0)|0;
     $861 = tempRet0;
     ___clang_call_terminate($860);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $30 = ___cxa_find_matching_catch()|0;
  $31 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $31;$$09 = $30;$92 = $__wbuf;
  label = 39;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7008|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP32[$18>>2] = 0;
      }
      $19 = (($__v) + 4|0);
      HEAP32[$19>>2] = 0;
      $20 = HEAP8[$__neg>>0]|0;
      $21 = ($20<<24>>24)==(0);
      if (!($21)) {
       $22 = HEAP32[$5>>2]|0;
       $23 = (($22) + 44|0);
       $24 = HEAP32[$23>>2]|0;
       __THREW__ = 0;
       $25 = (invoke_iii($24|0,($5|0),45)|0);
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(485,($__v|0),($25|0));
       $28 = __THREW__; __THREW__ = 0;
       $29 = $28&1;
       if ($29) {
        break;
       }
      }
      $32 = HEAP32[$5>>2]|0;
      $33 = (($32) + 44|0);
      $34 = HEAP32[$33>>2]|0;
      __THREW__ = 0;
      $35 = (invoke_iii($34|0,($5|0),48)|0);
      $36 = __THREW__; __THREW__ = 0;
      $37 = $36&1;
      if ($37) {
       break;
      }
      $38 = HEAP32[$__wb>>2]|0;
      $39 = HEAP32[$__wn>>2]|0;
      $40 = (($39) + -4|0);
      $__w$0 = $38;
      while(1) {
       $41 = ($__w$0>>>0)<($40>>>0);
       if (!($41)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $42 = HEAP32[$__w$0>>2]|0;
       $43 = ($42|0)==($35|0);
       if (!($43)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $44 = (($__w$0) + 4|0);
       $__w$0 = $44;
      }
      __THREW__ = 0;
      (invoke_iiii(487,($__v|0),($__w$0$lcssa|0),($39|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
     }
     $47 = HEAP32[$__b>>2]|0;
     $48 = ($47|0)==(0|0);
     do {
      if ($48) {
       $97 = 1;
      } else {
       $49 = (($47) + 12|0);
       $50 = HEAP32[$49>>2]|0;
       $51 = (($47) + 16|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ($50|0)==($52|0);
       if ($53) {
        $54 = HEAP32[$47>>2]|0;
        $55 = (($54) + 36|0);
        $56 = HEAP32[$55>>2]|0;
        __THREW__ = 0;
        $57 = (invoke_ii($56|0,($47|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         break L3;
        } else {
         $$0$i$i$i$i = $57;
        }
       } else {
        $60 = HEAP32[$50>>2]|0;
        $$0$i$i$i$i = $60;
       }
       $61 = ($$0$i$i$i$i|0)==(-1);
       if ($61) {
        HEAP32[$__b>>2] = 0;
        $97 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $97 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $62 = ($8|0)==(0|0);
     do {
      if ($62) {
       label = 31;
      } else {
       $63 = (($8) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($8) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$8>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($8|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         break L3;
        } else {
         $$0$i$i1$i$i = $71;
        }
       } else {
        $74 = HEAP32[$64>>2]|0;
        $$0$i$i1$i$i = $74;
       }
       $75 = ($$0$i$i1$i$i|0)==(-1);
       if ($75) {
        HEAP32[$__e>>2] = 0;
        label = 31;
        break;
       } else {
        if ($97) {
         break;
        } else {
         label = 33;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      if ($97) {
       label = 33;
      }
     }
     if ((label|0) == 33) {
      $76 = HEAP32[$__err>>2]|0;
      $77 = $76 | 2;
      HEAP32[$__err>>2] = $77;
     }
     $78 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $78;
     $79 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($79)|0);
     $80 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $81 = ($80|0)==(0|0);
     if (!($81)) {
      $82 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($82|0,($80|0));
      $83 = __THREW__; __THREW__ = 0;
      $84 = $83&1;
      if ($84) {
       $85 = ___cxa_find_matching_catch(0|0)|0;
       $86 = tempRet0;
       ___clang_call_terminate($85);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $87 = ___cxa_find_matching_catch()|0;
  $88 = tempRet0;
  $89 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $90 = ($$pre|0)==(0|0);
  if ($90) {
   $$010 = $87;$$018 = $88;
  } else {
   $$017 = $88;$$09 = $87;$92 = $$pre;
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $91 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($91|0,($92|0));
  $93 = __THREW__; __THREW__ = 0;
  $94 = $93&1;
  if ($94) {
   $95 = ___cxa_find_matching_catch(0|0)|0;
   $96 = tempRet0;
   ___clang_call_terminate($95);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0;
 var $exitcond$i$i$i5 = 0, $exitcond$i$i$i8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6584)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = (($__nsn) + 4|0);
  HEAP32[$23>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $26 = ___cxa_find_matching_catch(0|0)|0;
   $27 = tempRet0;
   ___clang_call_terminate($26);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $28 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$28>>2] = 0;
   $29 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $29;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $30 = HEAP32[$10>>2]|0;
  $31 = (($30) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
  $33 = HEAP8[$__psn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $36 = (($__psn) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   HEAP32[$37>>2] = 0;
  }
  $38 = (($__psn) + 4|0);
  HEAP32[$38>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $39 = __THREW__; __THREW__ = 0;
  $40 = $39&1;
  if ($40) {
   $41 = ___cxa_find_matching_catch(0|0)|0;
   $42 = tempRet0;
   ___clang_call_terminate($41);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $43 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$43>>2] = 0;
   $44 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $44;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $45 = HEAP32[$10>>2]|0;
  $46 = (($45) + 12|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
  HEAP32[$__dp>>2] = $48;
  $49 = HEAP32[$10>>2]|0;
  $50 = (($49) + 16|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
  HEAP32[$__ts>>2] = $52;
  $53 = HEAP32[$10>>2]|0;
  $54 = (($53) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
  $56 = HEAP8[$__grp>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)==(0);
  if ($58) {
   $62 = (($__grp) + 1|0);
   HEAP8[$62>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $59 = (($__grp) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   HEAP8[$60>>0] = 0;
   $61 = (($__grp) + 4|0);
   HEAP32[$61>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   $65 = ___cxa_find_matching_catch(0|0)|0;
   $66 = tempRet0;
   ___clang_call_terminate($65);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i7 = 0;
  while(1) {
   $exitcond$i$i$i8 = ($__i$0$i$i$i7|0)==(3);
   if ($exitcond$i$i$i8) {
    break;
   }
   $67 = (($3) + ($__i$0$i$i$i7<<2)|0);
   HEAP32[$67>>2] = 0;
   $68 = (($__i$0$i$i$i7) + 1)|0;
   $__i$0$i$i$i7 = $68;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $69 = HEAP32[$10>>2]|0;
  $70 = (($69) + 24|0);
  $71 = HEAP32[$70>>2]|0;
  FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
  $72 = HEAP8[$__sym>>0]|0;
  $73 = $72 & 1;
  $74 = ($73<<24>>24)==(0);
  if ($74) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $75 = (($__sym) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   HEAP32[$76>>2] = 0;
  }
  $77 = (($__sym) + 4|0);
  HEAP32[$77>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $78 = __THREW__; __THREW__ = 0;
  $79 = $78&1;
  if ($79) {
   $80 = ___cxa_find_matching_catch(0|0)|0;
   $81 = tempRet0;
   ___clang_call_terminate($80);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $82 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$82>>2] = 0;
   $83 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $83;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $84 = HEAP32[$10>>2]|0;
  $85 = (($84) + 36|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
  $storemerge = $87;
 } else {
  $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6520)|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (($89) + 44|0);
  $91 = HEAP32[$90>>2]|0;
  FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
  $92 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
  $93 = HEAP32[$88>>2]|0;
  $94 = (($93) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
  $96 = HEAP8[$__nsn>>0]|0;
  $97 = $96 & 1;
  $98 = ($97<<24>>24)==(0);
  if ($98) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $99 = (($__nsn) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   HEAP32[$100>>2] = 0;
  }
  $101 = (($__nsn) + 4|0);
  HEAP32[$101>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   $104 = ___cxa_find_matching_catch(0|0)|0;
   $105 = tempRet0;
   ___clang_call_terminate($104);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $106 = (($6) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$106>>2] = 0;
   $107 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $107;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $108 = HEAP32[$88>>2]|0;
  $109 = (($108) + 28|0);
  $110 = HEAP32[$109>>2]|0;
  FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
  $111 = HEAP8[$__psn>>0]|0;
  $112 = $111 & 1;
  $113 = ($112<<24>>24)==(0);
  if ($113) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $114 = (($__psn) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   HEAP32[$115>>2] = 0;
  }
  $116 = (($__psn) + 4|0);
  HEAP32[$116>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $119 = ___cxa_find_matching_catch(0|0)|0;
   $120 = tempRet0;
   ___clang_call_terminate($119);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i21 = 0;
  while(1) {
   $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
   if ($exitcond$i$i$i22) {
    break;
   }
   $121 = (($7) + ($__i$0$i$i$i21<<2)|0);
   HEAP32[$121>>2] = 0;
   $122 = (($__i$0$i$i$i21) + 1)|0;
   $__i$0$i$i$i21 = $122;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $123 = HEAP32[$88>>2]|0;
  $124 = (($123) + 12|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
  HEAP32[$__dp>>2] = $126;
  $127 = HEAP32[$88>>2]|0;
  $128 = (($127) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
  HEAP32[$__ts>>2] = $130;
  $131 = HEAP32[$88>>2]|0;
  $132 = (($131) + 20|0);
  $133 = HEAP32[$132>>2]|0;
  FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
  $134 = HEAP8[$__grp>>0]|0;
  $135 = $134 & 1;
  $136 = ($135<<24>>24)==(0);
  if ($136) {
   $140 = (($__grp) + 1|0);
   HEAP8[$140>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $137 = (($__grp) + 8|0);
   $138 = HEAP32[$137>>2]|0;
   HEAP8[$138>>0] = 0;
   $139 = (($__grp) + 4|0);
   HEAP32[$139>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $141 = __THREW__; __THREW__ = 0;
  $142 = $141&1;
  if ($142) {
   $143 = ___cxa_find_matching_catch(0|0)|0;
   $144 = tempRet0;
   ___clang_call_terminate($143);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i26 = 0;
  while(1) {
   $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
   if ($exitcond$i$i$i27) {
    break;
   }
   $145 = (($8) + ($__i$0$i$i$i26<<2)|0);
   HEAP32[$145>>2] = 0;
   $146 = (($__i$0$i$i$i26) + 1)|0;
   $__i$0$i$i$i26 = $146;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $147 = HEAP32[$88>>2]|0;
  $148 = (($147) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
  $150 = HEAP8[$__sym>>0]|0;
  $151 = $150 & 1;
  $152 = ($151<<24>>24)==(0);
  if ($152) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $153 = (($__sym) + 8|0);
   $154 = HEAP32[$153>>2]|0;
   HEAP32[$154>>2] = 0;
  }
  $155 = (($__sym) + 4|0);
  HEAP32[$155>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $156 = __THREW__; __THREW__ = 0;
  $157 = $156&1;
  if ($157) {
   $158 = ___cxa_find_matching_catch(0|0)|0;
   $159 = tempRet0;
   ___clang_call_terminate($158);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $160 = (($9) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$160>>2] = 0;
   $161 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $161;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $162 = HEAP32[$88>>2]|0;
  $163 = (($162) + 36|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
  $storemerge = $165;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0;
 var $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i10 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6768,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $118 = 0;$119 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6768|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $118 = 0;$119 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $118 = 0;$119 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $120 = $$pre;
     } else {
      $120 = $9;
     }
     $15 = (_malloc($6)|0);
     $16 = ($15|0)==(0|0);
     if ($16) {
      __THREW__ = 0;
      invoke_v(465);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       $118 = $120;$119 = 0;
       label = 7;
      } else {
       $113 = 0;$114 = $120;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $113 = $15;$114 = $120;$__db$0 = $15;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $113 = 0;$114 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if ($20) {
   $118 = $114;$119 = $113;
   label = 7;
  } else {
   __THREW__ = 0;
   $21 = (invoke_iii(454,($__loc|0),(7016|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    label = 44;
   } else {
    $24 = HEAP32[$__bb>>2]|0;
    $25 = (($24) + ($__n$0)|0);
    $26 = HEAP32[$21>>2]|0;
    $27 = (($26) + 32|0);
    $28 = HEAP32[$27>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($28|0,($21|0),($24|0),($25|0),($__db$0|0))|0);
    $29 = __THREW__; __THREW__ = 0;
    $30 = $29&1;
    if ($30) {
     label = 44;
    } else {
     $31 = ($__n$0|0)==(0);
     if ($31) {
      $41 = 0;
     } else {
      $32 = HEAP32[$__bb>>2]|0;
      $33 = HEAP8[$32>>0]|0;
      $34 = ($33<<24>>24)==(45);
      $41 = $34;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $35 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$35>>2] = 0;
      $36 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $36;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $37 = (($__sym) + ($__i$0$i$i6<<2)|0);
      HEAP32[$37>>2] = 0;
      $38 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $38;
     }
     $__i$0$i$i9 = 0;
     while(1) {
      $exitcond$i$i10 = ($__i$0$i$i9|0)==(3);
      if ($exitcond$i$i10) {
       break;
      }
      $39 = (($__sn) + ($__i$0$i$i9<<2)|0);
      HEAP32[$39>>2] = 0;
      $40 = (($__i$0$i$i9) + 1)|0;
      $__i$0$i$i9 = $40;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(489,($__intl|0),($41|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     do {
      if ($43) {
       $95 = ___cxa_find_matching_catch()|0;
       $96 = tempRet0;
       $$0 = $95;$$01 = $96;
      } else {
       $44 = HEAP32[$__fd>>2]|0;
       $45 = ($__n$0|0)>($44|0);
       if ($45) {
        $46 = (($__n$0) - ($44))|0;
        $47 = $46 << 1;
        $48 = HEAP8[$__sn>>0]|0;
        $49 = $48 & 1;
        $50 = ($49<<24>>24)==(0);
        if ($50) {
         $53 = $48&255;
         $54 = $53 >>> 1;
         $64 = $54;
        } else {
         $51 = (($__sn) + 4|0);
         $52 = HEAP32[$51>>2]|0;
         $64 = $52;
        }
        $55 = HEAP8[$__sym>>0]|0;
        $56 = $55 & 1;
        $57 = ($56<<24>>24)==(0);
        if ($57) {
         $60 = $55&255;
         $61 = $60 >>> 1;
         $66 = $61;
        } else {
         $58 = (($__sym) + 4|0);
         $59 = HEAP32[$58>>2]|0;
         $66 = $59;
        }
        $62 = $47 | 1;
        $63 = (($64) + ($62))|0;
        $65 = (($63) + ($66))|0;
        $$pn = $65;
       } else {
        $67 = HEAP8[$__sn>>0]|0;
        $68 = $67 & 1;
        $69 = ($68<<24>>24)==(0);
        if ($69) {
         $72 = $67&255;
         $73 = $72 >>> 1;
         $82 = $73;
        } else {
         $70 = (($__sn) + 4|0);
         $71 = HEAP32[$70>>2]|0;
         $82 = $71;
        }
        $74 = HEAP8[$__sym>>0]|0;
        $75 = $74 & 1;
        $76 = ($75<<24>>24)==(0);
        if ($76) {
         $79 = $74&255;
         $80 = $79 >>> 1;
         $84 = $80;
        } else {
         $77 = (($__sym) + 4|0);
         $78 = HEAP32[$77>>2]|0;
         $84 = $78;
        }
        $81 = (($82) + 2)|0;
        $83 = (($81) + ($84))|0;
        $$pn = $83;
       }
       $85 = (($$pn) + ($44))|0;
       $86 = ($85>>>0)>(100);
       if ($86) {
        $87 = (_malloc($85)|0);
        $88 = ($87|0)==(0|0);
        if ($88) {
         __THREW__ = 0;
         invoke_v(465);
         $89 = __THREW__; __THREW__ = 0;
         $90 = $89&1;
         if ($90) {
          $91 = ___cxa_find_matching_catch()|0;
          $92 = tempRet0;
          $$0 = $91;$$01 = $92;
          break;
         } else {
          $99 = 0;$__mb$0 = 0;
         }
        } else {
         $99 = $87;$__mb$0 = $87;
        }
       } else {
        $99 = 0;$__mb$0 = $__mbuf;
       }
       $100 = (($__iob) + 4|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = (($__db$0) + ($__n$0)|0);
       $103 = HEAP8[$__dp>>0]|0;
       $104 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($101|0),($__db$0|0),($102|0),($21|0),($41|0),($__pat|0),($103|0),($104|0),($__grp|0),($__sym|0),($__sn|0),($44|0));
       $105 = __THREW__; __THREW__ = 0;
       $106 = $105&1;
       if (!($106)) {
        $107 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $107;
        $108 = HEAP32[$__mi>>2]|0;
        $109 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($108|0),($109|0),($__iob|0),($__fl|0));
        $110 = __THREW__; __THREW__ = 0;
        $111 = $110&1;
        if (!($111)) {
         _free($99);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $112 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($112)|0);
         _free($113);
         _free($114);
         STACKTOP = sp;return;
        }
       }
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       _free($99);
       $$0 = $97;$$01 = $98;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $93 = ___cxa_find_matching_catch()|0;
    $94 = tempRet0;
    $$1 = $93;$$12 = $94;
   }
   $115 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($115)|0);
   $$2 = $$1;$$23 = $$12;$116 = $113;$117 = $114;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$116 = $119;$117 = $118;
 }
 _free($116);
 _free($117);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0, $exitcond$i$i$i37 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6456)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = (($__sn) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = (($__sn) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $31 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$31>>2] = 0;
    $32 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $32;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  } else {
   $33 = (($13) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
   $35 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
   $36 = HEAP32[$12>>2]|0;
   $37 = (($36) + 28|0);
   $38 = HEAP32[$37>>2]|0;
   FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
   $39 = HEAP8[$__sn>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $45 = (($__sn) + 1|0);
    HEAP8[$45>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $42 = (($__sn) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    HEAP8[$43>>0] = 0;
    $44 = (($__sn) + 4|0);
    HEAP32[$44>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $46 = __THREW__; __THREW__ = 0;
   $47 = $46&1;
   if ($47) {
    $48 = ___cxa_find_matching_catch(0|0)|0;
    $49 = tempRet0;
    ___clang_call_terminate($48);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $50 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$50>>2] = 0;
    $51 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $51;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  $52 = HEAP32[$12>>2]|0;
  $53 = (($52) + 12|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
  HEAP8[$__dp>>0] = $55;
  $56 = HEAP32[$12>>2]|0;
  $57 = (($56) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
  HEAP8[$__ts>>0] = $59;
  $60 = HEAP32[$12>>2]|0;
  $61 = (($60) + 20|0);
  $62 = HEAP32[$61>>2]|0;
  FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
  $63 = HEAP8[$__grp>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)==(0);
  if ($65) {
   $69 = (($__grp) + 1|0);
   HEAP8[$69>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $66 = (($__grp) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   HEAP8[$67>>0] = 0;
   $68 = (($__grp) + 4|0);
   HEAP32[$68>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $70 = __THREW__; __THREW__ = 0;
  $71 = $70&1;
  if ($71) {
   $72 = ___cxa_find_matching_catch(0|0)|0;
   $73 = tempRet0;
   ___clang_call_terminate($72);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $74 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$74>>2] = 0;
   $75 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $75;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $76 = HEAP32[$12>>2]|0;
  $77 = (($76) + 24|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
  $79 = HEAP8[$__sym>>0]|0;
  $80 = $79 & 1;
  $81 = ($80<<24>>24)==(0);
  if ($81) {
   $85 = (($__sym) + 1|0);
   HEAP8[$85>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $82 = (($__sym) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   HEAP8[$83>>0] = 0;
   $84 = (($__sym) + 4|0);
   HEAP32[$84>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $86 = __THREW__; __THREW__ = 0;
  $87 = $86&1;
  if ($87) {
   $88 = ___cxa_find_matching_catch(0|0)|0;
   $89 = tempRet0;
   ___clang_call_terminate($88);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $90 = (($5) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$90>>2] = 0;
   $91 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $91;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $92 = HEAP32[$12>>2]|0;
  $93 = (($92) + 36|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
  $storemerge = $95;
 } else {
  $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6392)|0);
  $97 = HEAP32[$96>>2]|0;
  if ($__neg) {
   $98 = (($97) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
   $100 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
   $101 = HEAP32[$96>>2]|0;
   $102 = (($101) + 32|0);
   $103 = HEAP32[$102>>2]|0;
   FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
   $104 = HEAP8[$__sn>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   if ($106) {
    $110 = (($__sn) + 1|0);
    HEAP8[$110>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $107 = (($__sn) + 8|0);
    $108 = HEAP32[$107>>2]|0;
    HEAP8[$108>>0] = 0;
    $109 = (($__sn) + 4|0);
    HEAP32[$109>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $111 = __THREW__; __THREW__ = 0;
   $112 = $111&1;
   if ($112) {
    $113 = ___cxa_find_matching_catch(0|0)|0;
    $114 = tempRet0;
    ___clang_call_terminate($113);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i21 = 0;
   while(1) {
    $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
    if ($exitcond$i$i$i22) {
     break;
    }
    $115 = (($7) + ($__i$0$i$i$i21<<2)|0);
    HEAP32[$115>>2] = 0;
    $116 = (($__i$0$i$i$i21) + 1)|0;
    $__i$0$i$i$i21 = $116;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  } else {
   $117 = (($97) + 40|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
   $119 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
   $120 = HEAP32[$96>>2]|0;
   $121 = (($120) + 28|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
   $123 = HEAP8[$__sn>>0]|0;
   $124 = $123 & 1;
   $125 = ($124<<24>>24)==(0);
   if ($125) {
    $129 = (($__sn) + 1|0);
    HEAP8[$129>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $126 = (($__sn) + 8|0);
    $127 = HEAP32[$126>>2]|0;
    HEAP8[$127>>0] = 0;
    $128 = (($__sn) + 4|0);
    HEAP32[$128>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    $132 = ___cxa_find_matching_catch(0|0)|0;
    $133 = tempRet0;
    ___clang_call_terminate($132);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i26 = 0;
   while(1) {
    $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
    if ($exitcond$i$i$i27) {
     break;
    }
    $134 = (($9) + ($__i$0$i$i$i26<<2)|0);
    HEAP32[$134>>2] = 0;
    $135 = (($__i$0$i$i$i26) + 1)|0;
    $__i$0$i$i$i26 = $135;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  }
  $136 = HEAP32[$96>>2]|0;
  $137 = (($136) + 12|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
  HEAP8[$__dp>>0] = $139;
  $140 = HEAP32[$96>>2]|0;
  $141 = (($140) + 16|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
  HEAP8[$__ts>>0] = $143;
  $144 = HEAP32[$96>>2]|0;
  $145 = (($144) + 20|0);
  $146 = HEAP32[$145>>2]|0;
  FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
  $147 = HEAP8[$__grp>>0]|0;
  $148 = $147 & 1;
  $149 = ($148<<24>>24)==(0);
  if ($149) {
   $153 = (($__grp) + 1|0);
   HEAP8[$153>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $150 = (($__grp) + 8|0);
   $151 = HEAP32[$150>>2]|0;
   HEAP8[$151>>0] = 0;
   $152 = (($__grp) + 4|0);
   HEAP32[$152>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $154 = __THREW__; __THREW__ = 0;
  $155 = $154&1;
  if ($155) {
   $156 = ___cxa_find_matching_catch(0|0)|0;
   $157 = tempRet0;
   ___clang_call_terminate($156);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $158 = (($10) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$158>>2] = 0;
   $159 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $159;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $160 = HEAP32[$96>>2]|0;
  $161 = (($160) + 24|0);
  $162 = HEAP32[$161>>2]|0;
  FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
  $163 = HEAP8[$__sym>>0]|0;
  $164 = $163 & 1;
  $165 = ($164<<24>>24)==(0);
  if ($165) {
   $169 = (($__sym) + 1|0);
   HEAP8[$169>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $166 = (($__sym) + 8|0);
   $167 = HEAP32[$166>>2]|0;
   HEAP8[$167>>0] = 0;
   $168 = (($__sym) + 4|0);
   HEAP32[$168>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $170 = __THREW__; __THREW__ = 0;
  $171 = $170&1;
  if ($171) {
   $172 = ___cxa_find_matching_catch(0|0)|0;
   $173 = tempRet0;
   ___clang_call_terminate($172);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i36 = 0;
  while(1) {
   $exitcond$i$i$i37 = ($__i$0$i$i$i36|0)==(3);
   if ($exitcond$i$i$i37) {
    break;
   }
   $174 = (($11) + ($__i$0$i$i$i36<<2)|0);
   HEAP32[$174>>2] = 0;
   $175 = (($__i$0$i$i$i36) + 1)|0;
   $__i$0$i$i$i36 = $175;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $176 = HEAP32[$96>>2]|0;
  $177 = (($176) + 36|0);
  $178 = HEAP32[$177>>2]|0;
  $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
  $storemerge = $179;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$029 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i11 = 0, $$0$i$i11$lcssa = 0, $$0$i$i4 = 0, $$01$i$i = 0, $$2 = 0, $$35 = 0, $$36 = 0, $$37 = 0, $$lcssa = 0, $$lcssa39 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$0$lcssa28 = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0;
 var $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$sum = 0, $scevgep31 = 0, $smax = 0, $umax = 0, $umax30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 1|0);
 $1 = (($__sn) + 8|0);
 $2 = (($__sn) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = (($__sym) + 1|0);
 $6 = (($__sym) + 8|0);
 $7 = (($__sym) + 4|0);
 $8 = (($__ct) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = (($__grp) + 1|0);
 $11 = (($__grp) + 8|0);
 $12 = (($__grp) + 4|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = $__fd ^ -1;
 $16 = ($15|0)>(-1);
 $smax = $16 ? $15 : -1;
 $17 = (($14) - ($smax))|0;
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $18 = (($__pat) + ($__p$0)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  switch ($20|0) {
  case 1:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $23 = HEAP32[$__ct>>2]|0;
   $24 = (($23) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 1023]($__ct,32)|0);
   $27 = HEAP32[$__me>>2]|0;
   $28 = (($27) + 1|0);
   HEAP32[$__me>>2] = $28;
   HEAP8[$27>>0] = $26;
   $$2 = $$0;
   break;
  }
  case 3:  {
   $29 = HEAP8[$__sn>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $33 = $29&255;
    $34 = $33 >>> 1;
    $35 = $34;
   } else {
    $32 = HEAP32[$2>>2]|0;
    $35 = $32;
   }
   $36 = ($35|0)==(0);
   if ($36) {
    $$2 = $$0;
   } else {
    $37 = HEAP32[$1>>2]|0;
    $$ = $31 ? $0 : $37;
    $38 = HEAP8[$$>>0]|0;
    $39 = HEAP32[$__me>>2]|0;
    $40 = (($39) + 1|0);
    HEAP32[$__me>>2] = $40;
    HEAP8[$39>>0] = $38;
    $$2 = $$0;
   }
   break;
  }
  case 2:  {
   $41 = HEAP8[$__sym>>0]|0;
   $42 = $41 & 1;
   $43 = ($42<<24>>24)==(0);
   if ($43) {
    $45 = $41&255;
    $46 = $45 >>> 1;
    $47 = $46;
   } else {
    $44 = HEAP32[$7>>2]|0;
    $47 = $44;
   }
   $48 = ($47|0)==(0);
   $or$cond3 = $4 | $48;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($43) {
     $51 = $41&255;
     $52 = $51 >>> 1;
     $54 = $5;$55 = $52;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = HEAP32[$7>>2]|0;
     $54 = $49;$55 = $50;
    }
    $53 = (($54) + ($55)|0);
    $56 = HEAP32[$__me>>2]|0;
    $$0$i$i11 = $56;$57 = $54;
    while(1) {
     $58 = ($57|0)==($53|0);
     if ($58) {
      $$0$i$i11$lcssa = $$0$i$i11;
      break;
     }
     $59 = HEAP8[$57>>0]|0;
     HEAP8[$$0$i$i11>>0] = $59;
     $60 = (($57) + 1|0);
     $61 = (($$0$i$i11) + 1|0);
     $$0$i$i11 = $61;$57 = $60;
    }
    HEAP32[$__me>>2] = $$0$i$i11$lcssa;
    $$2 = $$0;
   }
   break;
  }
  case 0:  {
   $21 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $21;
   $$2 = $$0;
   break;
  }
  case 4:  {
   $62 = HEAP32[$__me>>2]|0;
   $63 = (($$0) + 1|0);
   $$$0 = $__neg ? $63 : $$0;
   $$$029 = $$$0;
   $64 = HEAP32[$8>>2]|0;
   $__d$0 = $$$0;
   while(1) {
    $65 = ($__d$0>>>0)<($__de>>>0);
    if (!($65)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $66 = HEAP8[$__d$0>>0]|0;
    $isascii1$i = ($66<<24>>24)>(-1);
    if (!($isascii1$i)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $67 = $66 << 24 >> 24;
    $68 = (($64) + ($67<<1)|0);
    $69 = HEAP16[$68>>1]|0;
    $70 = $69 & 2048;
    $71 = ($70<<16>>16)==(0);
    if ($71) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $72 = (($__d$0) + 1|0);
    $__d$0 = $72;
   }
   $__d$0$lcssa28 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa28))|0;
    $74 = $$$029 ^ -1;
    $75 = $__d$0$lcssa28 ^ -1;
    $76 = ($74>>>0)>($75>>>0);
    $umax = $76 ? $74 : $75;
    $77 = (($73) - ($umax))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax30 = $78 ? $17 : $77;
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $79 = ($__d$1>>>0)>($$$0>>>0);
     $80 = ($__f$0|0)>(0);
     $or$cond = $79 & $80;
     if (!($or$cond)) {
      $$lcssa = $80;
      break;
     }
     $81 = (($__d$1) + -1|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = HEAP32[$__me>>2]|0;
     $84 = (($83) + 1|0);
     HEAP32[$__me>>2] = $84;
     HEAP8[$83>>0] = $82;
     $85 = (($__f$0) + -1)|0;
     $__d$1 = $81;$__f$0 = $85;
    }
    $86 = (($13) + ($umax30))|0;
    $scevgep$sum = (($umax30) + 1)|0;
    $scevgep31 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $87 = HEAP32[$__ct>>2]|0;
     $88 = (($87) + 28|0);
     $89 = HEAP32[$88>>2]|0;
     $90 = (FUNCTION_TABLE_iii[$89 & 1023]($__ct,48)|0);
     $94 = $90;
    } else {
     $94 = 0;
    }
    $__f$1 = $86;
    while(1) {
     $91 = ($__f$1|0)>(0);
     $92 = HEAP32[$__me>>2]|0;
     $93 = (($92) + 1|0);
     HEAP32[$__me>>2] = $93;
     if (!($91)) {
      $$lcssa39 = $92;
      break;
     }
     HEAP8[$92>>0] = $94;
     $95 = (($__f$1) + -1)|0;
     $__f$1 = $95;
    }
    HEAP8[$$lcssa39>>0] = $__dp;
    $__d$2 = $scevgep31;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $96 = ($__d$2|0)==($$$0|0);
   if ($96) {
    $97 = HEAP32[$__ct>>2]|0;
    $98 = (($97) + 28|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = (FUNCTION_TABLE_iii[$99 & 1023]($__ct,48)|0);
    $101 = HEAP32[$__me>>2]|0;
    $102 = (($101) + 1|0);
    HEAP32[$__me>>2] = $102;
    HEAP8[$101>>0] = $100;
   } else {
    $103 = HEAP8[$__grp>>0]|0;
    $104 = $103 & 1;
    $105 = ($104<<24>>24)==(0);
    if ($105) {
     $107 = $103&255;
     $108 = $107 >>> 1;
     $109 = $108;
    } else {
     $106 = HEAP32[$12>>2]|0;
     $109 = $106;
    }
    $110 = ($109|0)==(0);
    if ($110) {
     $__gl$0$ph = -1;
    } else {
     $111 = HEAP32[$11>>2]|0;
     $$35 = $105 ? $10 : $111;
     $112 = HEAP8[$$35>>0]|0;
     $113 = $112 << 24 >> 24;
     $__gl$0$ph = $113;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $114 = ($__d$3|0)==($$$0|0);
     if ($114) {
      break;
     }
     $115 = ($__ng$0|0)==($__gl$0|0);
     if ($115) {
      $116 = HEAP32[$__me>>2]|0;
      $117 = (($116) + 1|0);
      HEAP32[$__me>>2] = $117;
      HEAP8[$116>>0] = $__ts;
      $118 = (($__ig$0) + 1)|0;
      $119 = HEAP8[$__grp>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      if ($121) {
       $123 = $119&255;
       $124 = $123 >>> 1;
       $126 = $124;
      } else {
       $122 = HEAP32[$12>>2]|0;
       $126 = $122;
      }
      $125 = ($118>>>0)<($126>>>0);
      if ($125) {
       $127 = HEAP32[$11>>2]|0;
       $$36 = $121 ? $10 : $127;
       $128 = (($$36) + ($118)|0);
       $129 = HEAP8[$128>>0]|0;
       $130 = ($129<<24>>24)==(127);
       if ($130) {
        $__gl$1 = -1;$__ig$1 = $118;$__ng$1 = 0;
       } else {
        $131 = HEAP32[$11>>2]|0;
        $$37 = $121 ? $10 : $131;
        $132 = (($$37) + ($118)|0);
        $133 = HEAP8[$132>>0]|0;
        $134 = $133 << 24 >> 24;
        $__gl$1 = $134;$__ig$1 = $118;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__ng$0;$__ig$1 = $118;$__ng$1 = 0;
      }
     } else {
      $__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $135 = (($__d$3) + -1|0);
     $136 = HEAP8[$135>>0]|0;
     $137 = HEAP32[$__me>>2]|0;
     $138 = (($137) + 1|0);
     HEAP32[$__me>>2] = $138;
     HEAP8[$137>>0] = $136;
     $139 = (($__ng$1) + 1)|0;
     $__d$3 = $135;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $139;
    }
   }
   $140 = HEAP32[$__me>>2]|0;
   $141 = ($62|0)==($140|0);
   if ($141) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $140;$$01$i$i = $62;
    while(1) {
     $142 = (($$0$i$i4) + -1|0);
     $143 = ($$01$i$i>>>0)<($142>>>0);
     if (!($143)) {
      break;
     }
     $144 = HEAP8[$$01$i$i>>0]|0;
     $145 = HEAP8[$142>>0]|0;
     HEAP8[$$01$i$i>>0] = $145;
     HEAP8[$142>>0] = $144;
     $146 = (($$01$i$i) + 1|0);
     $$0$i$i4 = $142;$$01$i$i = $146;
    }
    $$2 = $$$0;
   }
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $147 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $147;
 }
 $148 = HEAP8[$__sn>>0]|0;
 $149 = $148 & 1;
 $150 = ($149<<24>>24)==(0);
 if ($150) {
  $152 = $148&255;
  $153 = $152 >>> 1;
  $154 = $153;
 } else {
  $151 = HEAP32[$2>>2]|0;
  $154 = $151;
 }
 $155 = ($154>>>0)>(1);
 if ($155) {
  if ($150) {
   $158 = $148&255;
   $159 = $158 >>> 1;
   $161 = $0;$162 = $159;
  } else {
   $156 = HEAP32[$1>>2]|0;
   $157 = HEAP32[$2>>2]|0;
   $161 = $156;$162 = $157;
  }
  $160 = (($161) + ($162)|0);
  $163 = HEAP32[$__me>>2]|0;
  $$0$i$i = $163;$$pn = $161;
  while(1) {
   $164 = (($$pn) + 1|0);
   $165 = ($164|0)==($160|0);
   if ($165) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   $166 = HEAP8[$164>>0]|0;
   HEAP8[$$0$i$i>>0] = $166;
   $167 = (($$0$i$i) + 1|0);
   $$0$i$i = $167;$$pn = $164;
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $168 = $__flags & 176;
 if ((($168|0) == 32)) {
  $169 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $169;
 } else if (!((($168|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0;
 var $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 1|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP8[$17>>0]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 28|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16<<24>>24)==($21<<24>>24);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i6 = 0;
   while(1) {
    $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
    if ($exitcond$i$i7) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i6<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i6) + 1)|0;
    $__i$0$i$i6 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(489,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $98 = ___cxa_find_matching_catch()|0;
     $99 = tempRet0;
     $$0 = $98;$$01 = $99;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = (_malloc($88)|0);
       $91 = ($90|0)==(0|0);
       if ($91) {
        __THREW__ = 0;
        invoke_v(465);
        $92 = __THREW__; __THREW__ = 0;
        $93 = $92&1;
        if ($93) {
         $94 = ___cxa_find_matching_catch()|0;
         $95 = tempRet0;
         $$0 = $94;$$01 = $95;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $102 = 0;$106 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $102 = $90;$106 = $34;$__mb$0 = $90;
       }
      } else {
       $102 = 0;$106 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $103 = (($__iob) + 4|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = $106 & 1;
     $107 = ($105<<24>>24)==(0);
     if ($107) {
      $112 = (($__digits) + 1|0);
      $113 = $106&255;
      $114 = $113 >>> 1;
      $116 = $112;$117 = $114;
     } else {
      $108 = (($__digits) + 8|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (($__digits) + 4|0);
      $111 = HEAP32[$110>>2]|0;
      $116 = $109;$117 = $111;
     }
     $115 = (($116) + ($117)|0);
     $118 = HEAP8[$__dp>>0]|0;
     $119 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($104|0),($116|0),($115|0),($1|0),($31|0),($__pat|0),($118|0),($119|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $120 = __THREW__; __THREW__ = 0;
     $121 = $120&1;
     if (!($121)) {
      $122 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $122;
      $123 = HEAP32[$__mi>>2]|0;
      $124 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($123|0),($124|0),($__iob|0),($__fl|0));
      $125 = __THREW__; __THREW__ = 0;
      $126 = $125&1;
      if (!($126)) {
       _free($102);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $127 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
       STACKTOP = sp;return;
      }
     }
     $100 = ___cxa_find_matching_catch()|0;
     $101 = tempRet0;
     _free($102);
     $$0 = $100;$$01 = $101;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $96 = ___cxa_find_matching_catch()|0;
  $97 = tempRet0;
  $$1 = $96;$$12 = $97;
 }
 $128 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0;
 var $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i5 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6768,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $124 = 0;$125 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6768|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $124 = 0;$125 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $124 = 0;$125 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $126 = $$pre;
     } else {
      $126 = $9;
     }
     $15 = $6 << 2;
     $16 = (_malloc($15)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      __THREW__ = 0;
      invoke_v(465);
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       $124 = $126;$125 = 0;
       label = 7;
      } else {
       $117 = 0;$119 = $126;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $117 = $16;$119 = $126;$__db$0 = $16;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $117 = 0;$119 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if ($21) {
   $124 = $119;$125 = $117;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = (invoke_iii(454,($__loc|0),(7008|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    label = 44;
   } else {
    $25 = HEAP32[$__bb>>2]|0;
    $26 = (($25) + ($__n$0)|0);
    $27 = HEAP32[$22>>2]|0;
    $28 = (($27) + 48|0);
    $29 = HEAP32[$28>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($29|0,($22|0),($25|0),($26|0),($__db$0|0))|0);
    $30 = __THREW__; __THREW__ = 0;
    $31 = $30&1;
    if ($31) {
     label = 44;
    } else {
     $32 = ($__n$0|0)==(0);
     if ($32) {
      $42 = 0;
     } else {
      $33 = HEAP32[$__bb>>2]|0;
      $34 = HEAP8[$33>>0]|0;
      $35 = ($34<<24>>24)==(45);
      $42 = $35;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $36 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$36>>2] = 0;
      $37 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $37;
     }
     $__i$0$i$i4 = 0;
     while(1) {
      $exitcond$i$i5 = ($__i$0$i$i4|0)==(3);
      if ($exitcond$i$i5) {
       break;
      }
      $38 = (($__sym) + ($__i$0$i$i4<<2)|0);
      HEAP32[$38>>2] = 0;
      $39 = (($__i$0$i$i4) + 1)|0;
      $__i$0$i$i4 = $39;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $40 = (($__sn) + ($__i$0$i$i6<<2)|0);
      HEAP32[$40>>2] = 0;
      $41 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $41;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(491,($__intl|0),($42|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $43 = __THREW__; __THREW__ = 0;
     $44 = $43&1;
     do {
      if ($44) {
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       $$0 = $97;$$01 = $98;
      } else {
       $45 = HEAP32[$__fd>>2]|0;
       $46 = ($__n$0|0)>($45|0);
       if ($46) {
        $47 = (($__n$0) - ($45))|0;
        $48 = $47 << 1;
        $49 = HEAP8[$__sn>>0]|0;
        $50 = $49 & 1;
        $51 = ($50<<24>>24)==(0);
        if ($51) {
         $54 = $49&255;
         $55 = $54 >>> 1;
         $65 = $55;
        } else {
         $52 = (($__sn) + 4|0);
         $53 = HEAP32[$52>>2]|0;
         $65 = $53;
        }
        $56 = HEAP8[$__sym>>0]|0;
        $57 = $56 & 1;
        $58 = ($57<<24>>24)==(0);
        if ($58) {
         $61 = $56&255;
         $62 = $61 >>> 1;
         $67 = $62;
        } else {
         $59 = (($__sym) + 4|0);
         $60 = HEAP32[$59>>2]|0;
         $67 = $60;
        }
        $63 = $48 | 1;
        $64 = (($65) + ($63))|0;
        $66 = (($64) + ($67))|0;
        $$pn = $66;
       } else {
        $68 = HEAP8[$__sn>>0]|0;
        $69 = $68 & 1;
        $70 = ($69<<24>>24)==(0);
        if ($70) {
         $73 = $68&255;
         $74 = $73 >>> 1;
         $83 = $74;
        } else {
         $71 = (($__sn) + 4|0);
         $72 = HEAP32[$71>>2]|0;
         $83 = $72;
        }
        $75 = HEAP8[$__sym>>0]|0;
        $76 = $75 & 1;
        $77 = ($76<<24>>24)==(0);
        if ($77) {
         $80 = $75&255;
         $81 = $80 >>> 1;
         $85 = $81;
        } else {
         $78 = (($__sym) + 4|0);
         $79 = HEAP32[$78>>2]|0;
         $85 = $79;
        }
        $82 = (($83) + 2)|0;
        $84 = (($82) + ($85))|0;
        $$pn = $84;
       }
       $86 = (($$pn) + ($45))|0;
       $87 = ($86>>>0)>(100);
       if ($87) {
        $88 = $86 << 2;
        $89 = (_malloc($88)|0);
        $90 = ($89|0)==(0|0);
        if ($90) {
         __THREW__ = 0;
         invoke_v(465);
         $91 = __THREW__; __THREW__ = 0;
         $92 = $91&1;
         if ($92) {
          $93 = ___cxa_find_matching_catch()|0;
          $94 = tempRet0;
          $$0 = $93;$$01 = $94;
          break;
         } else {
          $101 = 0;$__mb$0 = 0;
         }
        } else {
         $101 = $89;$__mb$0 = $89;
        }
       } else {
        $101 = 0;$__mb$0 = $__mbuf;
       }
       $103 = (($__iob) + 4|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = (($__db$0) + ($__n$0<<2)|0);
       $106 = HEAP32[$__dp>>2]|0;
       $107 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($104|0),($__db$0|0),($105|0),($22|0),($42|0),($__pat|0),($106|0),($107|0),($__grp|0),($__sym|0),($__sn|0),($45|0));
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if (!($109)) {
        $110 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $110;
        $111 = HEAP32[$__mi>>2]|0;
        $112 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($111|0),($112|0),($__iob|0),($__fl|0));
        $113 = __THREW__; __THREW__ = 0;
        $114 = $113&1;
        if (!($114)) {
         $115 = ($101|0)==(0|0);
         if (!($115)) {
          _free($101);
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $116 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($116)|0);
         $118 = ($117|0)==(0|0);
         if (!($118)) {
          _free($117);
         }
         _free($119);
         STACKTOP = sp;return;
        }
       }
       $99 = ___cxa_find_matching_catch()|0;
       $100 = tempRet0;
       $102 = ($101|0)==(0|0);
       if ($102) {
        $$0 = $99;$$01 = $100;
       } else {
        _free($101);
        $$0 = $99;$$01 = $100;
       }
      }
     } while(0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $95 = ___cxa_find_matching_catch()|0;
    $96 = tempRet0;
    $$1 = $95;$$12 = $96;
   }
   $120 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($120)|0);
   $$2 = $$1;$$23 = $$12;$121 = $117;$123 = $119;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$121 = $125;$123 = $124;
 }
 $122 = ($121|0)==(0|0);
 if (!($122)) {
  _free($121);
 }
 _free($123);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0;
 var $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i14 = 0, $exitcond$i$i$i19 = 0, $exitcond$i$i$i24 = 0, $exitcond$i$i$i29 = 0, $exitcond$i$i$i34 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6584)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = (($__sn) + 4|0);
   HEAP32[$25>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $30 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$30>>2] = 0;
    $31 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $31;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $32 = (($13) + 40|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
   $34 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
   $35 = HEAP32[$12>>2]|0;
   $36 = (($35) + 28|0);
   $37 = HEAP32[$36>>2]|0;
   FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
   $38 = HEAP8[$__sn>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $41 = (($__sn) + 8|0);
    $42 = HEAP32[$41>>2]|0;
    HEAP32[$42>>2] = 0;
   }
   $43 = (($__sn) + 4|0);
   HEAP32[$43>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $44 = __THREW__; __THREW__ = 0;
   $45 = $44&1;
   if ($45) {
    $46 = ___cxa_find_matching_catch(0|0)|0;
    $47 = tempRet0;
    ___clang_call_terminate($46);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $48 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$48>>2] = 0;
    $49 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $49;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $50 = HEAP32[$12>>2]|0;
  $51 = (($50) + 12|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
  HEAP32[$__dp>>2] = $53;
  $54 = HEAP32[$12>>2]|0;
  $55 = (($54) + 16|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
  HEAP32[$__ts>>2] = $57;
  $58 = HEAP32[$12>>2]|0;
  $59 = (($58) + 20|0);
  $60 = HEAP32[$59>>2]|0;
  FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
  $61 = HEAP8[$__grp>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  if ($63) {
   $67 = (($__grp) + 1|0);
   HEAP8[$67>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $64 = (($__grp) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   HEAP8[$65>>0] = 0;
   $66 = (($__grp) + 4|0);
   HEAP32[$66>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if ($69) {
   $70 = ___cxa_find_matching_catch(0|0)|0;
   $71 = tempRet0;
   ___clang_call_terminate($70);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $72 = (($4) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$72>>2] = 0;
   $73 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $73;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $74 = HEAP32[$12>>2]|0;
  $75 = (($74) + 24|0);
  $76 = HEAP32[$75>>2]|0;
  FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
  $77 = HEAP8[$__sym>>0]|0;
  $78 = $77 & 1;
  $79 = ($78<<24>>24)==(0);
  if ($79) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $80 = (($__sym) + 8|0);
   $81 = HEAP32[$80>>2]|0;
   HEAP32[$81>>2] = 0;
  }
  $82 = (($__sym) + 4|0);
  HEAP32[$82>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i13 = 0;
  while(1) {
   $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
   if ($exitcond$i$i$i14) {
    break;
   }
   $87 = (($5) + ($__i$0$i$i$i13<<2)|0);
   HEAP32[$87>>2] = 0;
   $88 = (($__i$0$i$i$i13) + 1)|0;
   $__i$0$i$i$i13 = $88;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $89 = HEAP32[$12>>2]|0;
  $90 = (($89) + 36|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
  $storemerge = $92;
 } else {
  $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6520)|0);
  $94 = HEAP32[$93>>2]|0;
  if ($__neg) {
   $95 = (($94) + 44|0);
   $96 = HEAP32[$95>>2]|0;
   FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
   $97 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
   $98 = HEAP32[$93>>2]|0;
   $99 = (($98) + 32|0);
   $100 = HEAP32[$99>>2]|0;
   FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
   $101 = HEAP8[$__sn>>0]|0;
   $102 = $101 & 1;
   $103 = ($102<<24>>24)==(0);
   if ($103) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $104 = (($__sn) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    HEAP32[$105>>2] = 0;
   }
   $106 = (($__sn) + 4|0);
   HEAP32[$106>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $107 = __THREW__; __THREW__ = 0;
   $108 = $107&1;
   if ($108) {
    $109 = ___cxa_find_matching_catch(0|0)|0;
    $110 = tempRet0;
    ___clang_call_terminate($109);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i18 = 0;
   while(1) {
    $exitcond$i$i$i19 = ($__i$0$i$i$i18|0)==(3);
    if ($exitcond$i$i$i19) {
     break;
    }
    $111 = (($7) + ($__i$0$i$i$i18<<2)|0);
    HEAP32[$111>>2] = 0;
    $112 = (($__i$0$i$i$i18) + 1)|0;
    $__i$0$i$i$i18 = $112;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $113 = (($94) + 40|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
   $115 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
   $116 = HEAP32[$93>>2]|0;
   $117 = (($116) + 28|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
   $119 = HEAP8[$__sn>>0]|0;
   $120 = $119 & 1;
   $121 = ($120<<24>>24)==(0);
   if ($121) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $122 = (($__sn) + 8|0);
    $123 = HEAP32[$122>>2]|0;
    HEAP32[$123>>2] = 0;
   }
   $124 = (($__sn) + 4|0);
   HEAP32[$124>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    $127 = ___cxa_find_matching_catch(0|0)|0;
    $128 = tempRet0;
    ___clang_call_terminate($127);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i23 = 0;
   while(1) {
    $exitcond$i$i$i24 = ($__i$0$i$i$i23|0)==(3);
    if ($exitcond$i$i$i24) {
     break;
    }
    $129 = (($9) + ($__i$0$i$i$i23<<2)|0);
    HEAP32[$129>>2] = 0;
    $130 = (($__i$0$i$i$i23) + 1)|0;
    $__i$0$i$i$i23 = $130;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $131 = HEAP32[$93>>2]|0;
  $132 = (($131) + 12|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
  HEAP32[$__dp>>2] = $134;
  $135 = HEAP32[$93>>2]|0;
  $136 = (($135) + 16|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
  HEAP32[$__ts>>2] = $138;
  $139 = HEAP32[$93>>2]|0;
  $140 = (($139) + 20|0);
  $141 = HEAP32[$140>>2]|0;
  FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
  $142 = HEAP8[$__grp>>0]|0;
  $143 = $142 & 1;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $148 = (($__grp) + 1|0);
   HEAP8[$148>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $145 = (($__grp) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   HEAP8[$146>>0] = 0;
   $147 = (($__grp) + 4|0);
   HEAP32[$147>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $149 = __THREW__; __THREW__ = 0;
  $150 = $149&1;
  if ($150) {
   $151 = ___cxa_find_matching_catch(0|0)|0;
   $152 = tempRet0;
   ___clang_call_terminate($151);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i28 = 0;
  while(1) {
   $exitcond$i$i$i29 = ($__i$0$i$i$i28|0)==(3);
   if ($exitcond$i$i$i29) {
    break;
   }
   $153 = (($10) + ($__i$0$i$i$i28<<2)|0);
   HEAP32[$153>>2] = 0;
   $154 = (($__i$0$i$i$i28) + 1)|0;
   $__i$0$i$i$i28 = $154;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $155 = HEAP32[$93>>2]|0;
  $156 = (($155) + 24|0);
  $157 = HEAP32[$156>>2]|0;
  FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
  $158 = HEAP8[$__sym>>0]|0;
  $159 = $158 & 1;
  $160 = ($159<<24>>24)==(0);
  if ($160) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $161 = (($__sym) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   HEAP32[$162>>2] = 0;
  }
  $163 = (($__sym) + 4|0);
  HEAP32[$163>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $164 = __THREW__; __THREW__ = 0;
  $165 = $164&1;
  if ($165) {
   $166 = ___cxa_find_matching_catch(0|0)|0;
   $167 = tempRet0;
   ___clang_call_terminate($166);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i33 = 0;
  while(1) {
   $exitcond$i$i$i34 = ($__i$0$i$i$i33|0)==(3);
   if ($exitcond$i$i$i34) {
    break;
   }
   $168 = (($11) + ($__i$0$i$i$i33<<2)|0);
   HEAP32[$168>>2] = 0;
   $169 = (($__i$0$i$i$i33) + 1)|0;
   $__i$0$i$i$i33 = $169;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $170 = HEAP32[$93>>2]|0;
  $171 = (($170) + 36|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
  $storemerge = $173;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i4 = 0, $$0$i$i9 = 0, $$01$i$i = 0, $$2 = 0, $$30 = 0, $$31 = 0, $$32 = 0, $$lcssa = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $157$phi = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0;
 var $__d$1$lcssa = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$0$lcssa = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$i = 0, $scevgep$i10 = 0;
 var $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 4|0);
 $1 = (($__sn) + 8|0);
 $2 = $__flags & 512;
 $3 = ($2|0)==(0);
 $4 = (($__sym) + 4|0);
 $5 = (($__sym) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = (($__grp) + 1|0);
 $8 = (($__grp) + 8|0);
 $9 = (($__grp) + 4|0);
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $10 = (($__pat) + ($__p$0)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 << 24 >> 24;
  switch ($12|0) {
  case 1:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $15 = HEAP32[$__ct>>2]|0;
   $16 = (($15) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iii[$17 & 1023]($__ct,32)|0);
   $19 = HEAP32[$__me>>2]|0;
   $20 = (($19) + 4|0);
   HEAP32[$__me>>2] = $20;
   HEAP32[$19>>2] = $18;
   $$2 = $$0;
   break;
  }
  case 3:  {
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $25 = $21&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $24 = HEAP32[$0>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    $$2 = $$0;
   } else {
    $29 = HEAP32[$1>>2]|0;
    $$ = $23 ? $0 : $29;
    $30 = HEAP32[$$>>2]|0;
    $31 = HEAP32[$__me>>2]|0;
    $32 = (($31) + 4|0);
    HEAP32[$__me>>2] = $32;
    HEAP32[$31>>2] = $30;
    $$2 = $$0;
   }
   break;
  }
  case 2:  {
   $33 = HEAP8[$__sym>>0]|0;
   $34 = $33 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $37 = $33&255;
    $38 = $37 >>> 1;
    $39 = $38;
   } else {
    $36 = HEAP32[$4>>2]|0;
    $39 = $36;
   }
   $40 = ($39|0)==(0);
   $or$cond3 = $3 | $40;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($35) {
     $43 = $33&255;
     $44 = $43 >>> 1;
     $46 = $4;$47 = $44;
    } else {
     $41 = HEAP32[$5>>2]|0;
     $42 = HEAP32[$4>>2]|0;
     $46 = $41;$47 = $42;
    }
    $45 = (($46) + ($47<<2)|0);
    $48 = HEAP32[$__me>>2]|0;
    $$0$i$i9 = $48;$49 = $46;
    while(1) {
     $50 = ($49|0)==($45|0);
     if ($50) {
      break;
     }
     $51 = HEAP32[$49>>2]|0;
     HEAP32[$$0$i$i9>>2] = $51;
     $52 = (($49) + 4|0);
     $53 = (($$0$i$i9) + 4|0);
     $$0$i$i9 = $53;$49 = $52;
    }
    $scevgep$i10 = (($48) + ($47<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$0;
   }
   break;
  }
  case 0:  {
   $13 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $13;
   $$2 = $$0;
   break;
  }
  case 4:  {
   $54 = HEAP32[$__me>>2]|0;
   $55 = (($$0) + 4|0);
   $$$0 = $__neg ? $55 : $$0;
   $__d$0 = $$$0;
   while(1) {
    $56 = ($__d$0>>>0)<($__de>>>0);
    if (!($56)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $57 = HEAP32[$__d$0>>2]|0;
    $58 = HEAP32[$__ct>>2]|0;
    $59 = (($58) + 12|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_iiii[$60 & 1023]($__ct,2048,$57)|0);
    if (!($61)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $62 = (($__d$0) + 4|0);
    $__d$0 = $62;
   }
   if ($6) {
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $63 = ($__d$1>>>0)>($$$0>>>0);
     $64 = ($__f$0|0)>(0);
     $or$cond = $63 & $64;
     if (!($or$cond)) {
      $$lcssa = $64;$__d$1$lcssa = $__d$1;$__f$0$lcssa = $__f$0;
      break;
     }
     $65 = (($__d$1) + -4|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = HEAP32[$__me>>2]|0;
     $68 = (($67) + 4|0);
     HEAP32[$__me>>2] = $68;
     HEAP32[$67>>2] = $66;
     $69 = (($__f$0) + -1)|0;
     $__d$1 = $65;$__f$0 = $69;
    }
    if ($$lcssa) {
     $70 = HEAP32[$__ct>>2]|0;
     $71 = (($70) + 44|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (FUNCTION_TABLE_iii[$72 & 1023]($__ct,48)|0);
     $80 = $73;
    } else {
     $80 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $74 = $__f$0$lcssa ^ -1;
    $75 = ($74|0)>(-1);
    $smax = $75 ? $74 : -1;
    $76 = (($__f$0$lcssa) + ($smax))|0;
    $79 = $__me$promoted;$__f$1 = $__f$0$lcssa;
    while(1) {
     $77 = ($__f$1|0)>(0);
     if (!($77)) {
      break;
     }
     $78 = (($79) + 4|0);
     HEAP32[$79>>2] = $80;
     $81 = (($__f$1) + -1)|0;
     $79 = $78;$__f$1 = $81;
    }
    $scevgep$sum = (($76) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($76) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $82 = ($__d$2|0)==($$$0|0);
   if ($82) {
    $83 = HEAP32[$__ct>>2]|0;
    $84 = (($83) + 44|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = (FUNCTION_TABLE_iii[$85 & 1023]($__ct,48)|0);
    $87 = HEAP32[$__me>>2]|0;
    $88 = (($87) + 4|0);
    HEAP32[$__me>>2] = $88;
    HEAP32[$87>>2] = $86;
    $127 = $88;
   } else {
    $89 = HEAP8[$__grp>>0]|0;
    $90 = $89 & 1;
    $91 = ($90<<24>>24)==(0);
    if ($91) {
     $93 = $89&255;
     $94 = $93 >>> 1;
     $95 = $94;
    } else {
     $92 = HEAP32[$9>>2]|0;
     $95 = $92;
    }
    $96 = ($95|0)==(0);
    if ($96) {
     $__gl$0$ph = -1;
    } else {
     $97 = HEAP32[$8>>2]|0;
     $$30 = $91 ? $7 : $97;
     $98 = HEAP8[$$30>>0]|0;
     $99 = $98 << 24 >> 24;
     $__gl$0$ph = $99;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $100 = ($__d$3|0)==($$$0|0);
     if ($100) {
      break;
     }
     $101 = ($__ng$0|0)==($__gl$0|0);
     $102 = HEAP32[$__me>>2]|0;
     if ($101) {
      $103 = (($102) + 4|0);
      HEAP32[$__me>>2] = $103;
      HEAP32[$102>>2] = $__ts;
      $104 = (($__ig$0) + 1)|0;
      $105 = HEAP8[$__grp>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $109 = $105&255;
       $110 = $109 >>> 1;
       $112 = $110;
      } else {
       $108 = HEAP32[$9>>2]|0;
       $112 = $108;
      }
      $111 = ($104>>>0)<($112>>>0);
      if ($111) {
       $113 = HEAP32[$8>>2]|0;
       $$31 = $107 ? $7 : $113;
       $114 = (($$31) + ($104)|0);
       $115 = HEAP8[$114>>0]|0;
       $116 = ($115<<24>>24)==(127);
       if ($116) {
        $124 = $103;$__gl$1 = -1;$__ig$1 = $104;$__ng$1 = 0;
       } else {
        $117 = HEAP32[$8>>2]|0;
        $$32 = $107 ? $7 : $117;
        $118 = (($$32) + ($104)|0);
        $119 = HEAP8[$118>>0]|0;
        $120 = $119 << 24 >> 24;
        $124 = $103;$__gl$1 = $120;$__ig$1 = $104;$__ng$1 = 0;
       }
      } else {
       $124 = $103;$__gl$1 = $__ng$0;$__ig$1 = $104;$__ng$1 = 0;
      }
     } else {
      $124 = $102;$__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $121 = (($__d$3) + -4|0);
     $122 = HEAP32[$121>>2]|0;
     $123 = (($124) + 4|0);
     HEAP32[$__me>>2] = $123;
     HEAP32[$124>>2] = $122;
     $125 = (($__ng$1) + 1)|0;
     $__d$3 = $121;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $125;
    }
    $$pre = HEAP32[$__me>>2]|0;
    $127 = $$pre;
   }
   $126 = ($54|0)==($127|0);
   if ($126) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $127;$$01$i$i = $54;
    while(1) {
     $128 = (($$0$i$i4) + -4|0);
     $129 = ($$01$i$i>>>0)<($128>>>0);
     if (!($129)) {
      break;
     }
     $130 = HEAP32[$$01$i$i>>2]|0;
     $131 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i>>2] = $131;
     HEAP32[$128>>2] = $130;
     $132 = (($$01$i$i) + 4|0);
     $$0$i$i4 = $128;$$01$i$i = $132;
    }
    $$2 = $$$0;
   }
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $133 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $133;
 }
 $134 = HEAP8[$__sn>>0]|0;
 $135 = $134 & 1;
 $136 = ($135<<24>>24)==(0);
 if ($136) {
  $138 = $134&255;
  $139 = $138 >>> 1;
  $140 = $139;
 } else {
  $137 = HEAP32[$0>>2]|0;
  $140 = $137;
 }
 $141 = ($140>>>0)>(1);
 if ($141) {
  if ($136) {
   $144 = $134&255;
   $145 = $144 >>> 1;
   $$pn = $0;$148 = $145;
  } else {
   $142 = HEAP32[$1>>2]|0;
   $143 = HEAP32[$0>>2]|0;
   $$pn = $142;$148 = $143;
  }
  $146 = (($$pn) + 4|0);
  $147 = (($$pn) + ($148<<2)|0);
  $149 = HEAP32[$__me>>2]|0;
  $150 = $146;
  $151 = $147;
  $152 = (($151) - ($150))|0;
  $$0$i$i = $149;$153 = $146;$157 = $$pn;
  while(1) {
   $154 = ($153|0)==($147|0);
   if ($154) {
    break;
   }
   $155 = HEAP32[$153>>2]|0;
   HEAP32[$$0$i$i>>2] = $155;
   $156 = (($157) + 8|0);
   $158 = (($$0$i$i) + 4|0);
   $157$phi = $153;$$0$i$i = $158;$153 = $156;$157 = $157$phi;
  }
  $159 = $152 >>> 2;
  $scevgep$i = (($149) + ($159<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $160 = $__flags & 176;
 if ((($160|0) == 32)) {
  $161 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $161;
 } else if (!((($160|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0;
 var $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7008|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 4|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP32[$17>>2]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16|0)==($21|0);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i5 = 0;
   while(1) {
    $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
    if ($exitcond$i$i6) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i5<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i5) + 1)|0;
    $__i$0$i$i5 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(491,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $99 = ___cxa_find_matching_catch()|0;
     $100 = tempRet0;
     $$0 = $99;$$01 = $100;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = $88 << 2;
       $91 = (_malloc($90)|0);
       $92 = ($91|0)==(0|0);
       if ($92) {
        __THREW__ = 0;
        invoke_v(465);
        $93 = __THREW__; __THREW__ = 0;
        $94 = $93&1;
        if ($94) {
         $95 = ___cxa_find_matching_catch()|0;
         $96 = tempRet0;
         $$0 = $95;$$01 = $96;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $103 = 0;$108 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $103 = $91;$108 = $34;$__mb$0 = $91;
       }
      } else {
       $103 = 0;$108 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $105 = (($__iob) + 4|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = $108 & 1;
     $109 = ($107<<24>>24)==(0);
     if ($109) {
      $114 = (($__digits) + 4|0);
      $115 = $108&255;
      $116 = $115 >>> 1;
      $118 = $114;$119 = $116;
     } else {
      $110 = (($__digits) + 8|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = (($__digits) + 4|0);
      $113 = HEAP32[$112>>2]|0;
      $118 = $111;$119 = $113;
     }
     $117 = (($118) + ($119<<2)|0);
     $120 = HEAP32[$__dp>>2]|0;
     $121 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($106|0),($118|0),($117|0),($1|0),($31|0),($__pat|0),($120|0),($121|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $122 = __THREW__; __THREW__ = 0;
     $123 = $122&1;
     if (!($123)) {
      $124 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $124;
      $125 = HEAP32[$__mi>>2]|0;
      $126 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($125|0),($126|0),($__iob|0),($__fl|0));
      $127 = __THREW__; __THREW__ = 0;
      $128 = $127&1;
      if (!($128)) {
       $129 = ($103|0)==(0|0);
       if (!($129)) {
        _free($103);
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $130 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($130)|0);
       STACKTOP = sp;return;
      }
     }
     $101 = ___cxa_find_matching_catch()|0;
     $102 = tempRet0;
     $104 = ($103|0)==(0|0);
     if ($104) {
      $$0 = $101;$$01 = $102;
     } else {
      _free($103);
      $$0 = $101;$$01 = $102;
     }
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $97 = ___cxa_find_matching_catch()|0;
  $98 = tempRet0;
  $$1 = $97;$$12 = $98;
 }
 $131 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($131)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i6 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__ndflt = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0;
 var $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $9 = (($__dflt) + 1|0);
  $10 = (($__dflt) + 1|0);
  $11 = $2&255;
  $12 = $11 >>> 1;
  $14 = $10;$15 = $12;$50 = $9;
 } else {
  $5 = (($__dflt) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($__dflt) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $14 = $6;$15 = $8;$50 = $6;
 }
 $13 = (($14) + ($15)|0);
 $$0$i6 = $50;
 while(1) {
  $16 = ($$0$i6>>>0)<($13>>>0);
  if (!($16)) {
   label = 11;
   break;
  }
  $17 = HEAP8[$$0$i6>>0]|0;
  __THREW__ = 0;
  invoke_vii(372,($__ndflt|0),($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   label = 15;
   break;
  }
  $20 = (($$0$i6) + 1|0);
  $$0$i6 = $20;
 }
 do {
  if ((label|0) == 11) {
   $21 = ($__c|0)==(-1);
   $22 = $__c << 1;
   $23 = $22;
   $24 = $21 ? (-1) : $23;
   $25 = HEAP8[$__ndflt>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $30 = (($__ndflt) + 1|0);
    $31 = $30;
   } else {
    $28 = (($__ndflt) + 8|0);
    $29 = HEAP32[$28>>2]|0;
    $31 = $29;
   }
   __THREW__ = 0;
   $32 = (invoke_iiiii(493,($24|0),($__set|0),($__msgid|0),($31|0))|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $37 = ___cxa_find_matching_catch()|0;
    $38 = tempRet0;
    $lpad$phi$index = $37;$lpad$phi$index2 = $38;
    label = 17;
    break;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $39 = (($agg$result) + ($__i$0$i$i3<<2)|0);
    HEAP32[$39>>2] = 0;
    $40 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $40;
   }
   $41 = (_strlen(($32|0))|0);
   $42 = (($32) + ($41)|0);
   $$0$i = $32;
   while(1) {
    $43 = ($$0$i>>>0)<($42>>>0);
    if (!($43)) {
     label = 26;
     break;
    }
    $44 = HEAP8[$$0$i>>0]|0;
    __THREW__ = 0;
    invoke_vii(372,($agg$result|0),($44|0));
    $45 = __THREW__; __THREW__ = 0;
    $46 = $45&1;
    if ($46) {
     label = 25;
     break;
    }
    $47 = (($$0$i) + 1|0);
    $$0$i = $47;
   }
   if ((label|0) == 25) {
    $48 = ___cxa_find_matching_catch()|0;
    $49 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    $$01 = $48;$$02 = $49;
    break;
   }
   else if ((label|0) == 26) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
    STACKTOP = sp;return;
   }
  }
  else if ((label|0) == 15) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $lpad$phi$index = $35;$lpad$phi$index2 = $36;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $$01 = $lpad$phi$index;$$02 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i13 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bn$i = 0, $__bn$i11 = 0, $__buf$i = 0, $__buf$i10 = 0, $__i$0$i$i = 0, $__i$0$i$i7 = 0, $__mb$i = 0, $__mb$i9 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i12 = 0, $__wn$i = 0;
 var $exitcond$i$i = 0, $exitcond$i$i8 = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi32$index = 0, $lpad$phi32$index3 = 0, $or$cond$i = 0, $or$cond$i14 = 0, $or$cond3$i = 0, $or$cond3$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i9 = sp + 184|0;
 $__buf$i10 = sp + 192|0;
 $__bn$i11 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $3;
 }
 $4 = (($0) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = ((8664 + 8|0));
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $12 = (($__dflt) + 4|0);
  $13 = (($__dflt) + 4|0);
  $14 = $5&255;
  $15 = $14 >>> 1;
  $100 = $12;$17 = $13;$18 = $15;
 } else {
  $8 = (($__dflt) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($__dflt) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $100 = $9;$17 = $9;$18 = $11;
 }
 $16 = (($17) + ($18<<2)|0);
 $19 = (($__buf$i10) + 32|0);
 $$0$i13 = $100;$__r$0$i12 = 0;
 L9: while(1) {
  $20 = ($$0$i13>>>0)<($16>>>0);
  $21 = ($__r$0$i12|0)!=(2);
  $or$cond$i14 = $21 & $20;
  if (!($or$cond$i14)) {
   label = 18;
   break;
  }
  HEAP32[$__wn$i>>2] = $$0$i13;
  $22 = HEAP32[$0>>2]|0;
  $23 = (($22) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  __THREW__ = 0;
  $25 = (invoke_iiiiiiiii($24|0,($0|0),($__mb$i9|0),($$0$i13|0),($16|0),($__wn$i|0),($__buf$i10|0),($19|0),($__bn$i11|0))|0);
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if ($27) {
   label = 24;
   break;
  }
  $28 = ($25|0)==(2);
  $29 = HEAP32[$__wn$i>>2]|0;
  $30 = ($29|0)==($$0$i13|0);
  $or$cond3$i15 = $28 | $30;
  if ($or$cond3$i15) {
   label = 12;
   break;
  }
  $__p$0$i16 = $__buf$i10;
  while(1) {
   $33 = HEAP32[$__bn$i11>>2]|0;
   $34 = ($__p$0$i16>>>0)<($33>>>0);
   if (!($34)) {
    break;
   }
   $35 = HEAP8[$__p$0$i16>>0]|0;
   __THREW__ = 0;
   invoke_vii(372,($__ndflt|0),($35|0));
   $36 = __THREW__; __THREW__ = 0;
   $37 = $36&1;
   if ($37) {
    label = 23;
    break L9;
   }
   $38 = (($__p$0$i16) + 1|0);
   $__p$0$i16 = $38;
  }
  $39 = HEAP32[$__wn$i>>2]|0;
  $$0$i13 = $39;$__r$0$i12 = $25;
 }
 do {
  if ((label|0) == 12) {
   __THREW__ = 0;
   invoke_vi(477,(7896|0));
   $31 = __THREW__; __THREW__ = 0;
   $32 = $31&1;
   if ($32) {
    $60 = ___cxa_find_matching_catch()|0;
    $61 = tempRet0;
    $lpad$phi32$index = $60;$lpad$phi32$index3 = $61;
    label = 26;
    break;
   } else {
    // unreachable;
   }
  }
  else if ((label|0) == 18) {
   $40 = ($__c|0)==(-1);
   $41 = $__c << 1;
   $42 = $41;
   $43 = $40 ? (-1) : $42;
   $44 = HEAP8[$__ndflt>>0]|0;
   $45 = $44 & 1;
   $46 = ($45<<24>>24)==(0);
   if ($46) {
    $49 = (($__ndflt) + 1|0);
    $50 = $49;
   } else {
    $47 = (($__ndflt) + 8|0);
    $48 = HEAP32[$47>>2]|0;
    $50 = $48;
   }
   __THREW__ = 0;
   $51 = (invoke_iiiii(493,($43|0),($__set|0),($__msgid|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   if ($53) {
    $54 = ___cxa_find_matching_catch()|0;
    $55 = tempRet0;
    $$1 = $54;$$13 = $55;
    break;
   }
   $__i$0$i$i7 = 0;
   while(1) {
    $exitcond$i$i8 = ($__i$0$i$i7|0)==(3);
    if ($exitcond$i$i8) {
     break;
    }
    $62 = (($agg$result) + ($__i$0$i$i7<<2)|0);
    HEAP32[$62>>2] = 0;
    $63 = (($__i$0$i$i7) + 1)|0;
    $__i$0$i$i7 = $63;
   }
   $64 = (($1) + 4|0);
   HEAP32[$64>>2] = 0;
   HEAP32[$1>>2] = ((8768 + 8|0));
   $65 = (_strlen(($51|0))|0);
   $66 = (($51) + ($65)|0);
   $67 = $66;
   $68 = (($__buf$i) + 128|0);
   $$0$i = $51;$__r$0$i = 0;
   L32: while(1) {
    $69 = ($$0$i>>>0)<($66>>>0);
    $70 = ($__r$0$i|0)!=(2);
    $or$cond$i = $70 & $69;
    if (!($or$cond$i)) {
     label = 41;
     break;
    }
    HEAP32[$__nn$i>>2] = $$0$i;
    $71 = HEAP32[$1>>2]|0;
    $72 = (($71) + 16|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = $$0$i;
    $75 = (($67) - ($74))|0;
    $76 = ($75|0)>(32);
    $77 = (($$0$i) + 32|0);
    $78 = $76 ? $77 : $66;
    __THREW__ = 0;
    $79 = (invoke_iiiiiiiii($73|0,($1|0),($__mb$i|0),($$0$i|0),($78|0),($__nn$i|0),($__buf$i|0),($68|0),($__bn$i|0))|0);
    $80 = __THREW__; __THREW__ = 0;
    $81 = $80&1;
    if ($81) {
     label = 43;
     break;
    }
    $82 = ($79|0)==(2);
    $83 = HEAP32[$__nn$i>>2]|0;
    $84 = ($83|0)==($$0$i|0);
    $or$cond3$i = $82 | $84;
    if ($or$cond3$i) {
     label = 35;
     break;
    }
    $__p$0$i = $__buf$i;
    while(1) {
     $87 = HEAP32[$__bn$i>>2]|0;
     $88 = ($__p$0$i>>>0)<($87>>>0);
     if (!($88)) {
      break;
     }
     $89 = HEAP32[$__p$0$i>>2]|0;
     __THREW__ = 0;
     invoke_vii(485,($agg$result|0),($89|0));
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 42;
      break L32;
     }
     $92 = (($__p$0$i) + 4|0);
     $__p$0$i = $92;
    }
    $93 = HEAP32[$__nn$i>>2]|0;
    $$0$i = $93;$__r$0$i = $79;
   }
   do {
    if ((label|0) == 35) {
     __THREW__ = 0;
     invoke_vi(477,(7896|0));
     $85 = __THREW__; __THREW__ = 0;
     $86 = $85&1;
     if ($86) {
      $98 = ___cxa_find_matching_catch()|0;
      $99 = tempRet0;
      $lpad$phi$index = $98;$lpad$phi$index10 = $99;
      break;
     } else {
      // unreachable;
     }
    }
    else if ((label|0) == 41) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
     STACKTOP = sp;return;
    }
    else if ((label|0) == 42) {
     $94 = ___cxa_find_matching_catch()|0;
     $95 = tempRet0;
     $lpad$phi$index = $94;$lpad$phi$index10 = $95;
    }
    else if ((label|0) == 43) {
     $96 = ___cxa_find_matching_catch()|0;
     $97 = tempRet0;
     $lpad$phi$index = $96;$lpad$phi$index10 = $97;
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
   $$1 = $lpad$phi$index;$$13 = $lpad$phi$index10;
  }
  else if ((label|0) == 23) {
   $56 = ___cxa_find_matching_catch()|0;
   $57 = tempRet0;
   $lpad$phi32$index = $56;$lpad$phi32$index3 = $57;
   label = 26;
  }
  else if ((label|0) == 24) {
   $58 = ___cxa_find_matching_catch()|0;
   $59 = tempRet0;
   $lpad$phi32$index = $58;$lpad$phi32$index3 = $59;
   label = 26;
  }
 } while(0);
 if ((label|0) == 26) {
  $$1 = $lpad$phi32$index;$$13 = $lpad$phi32$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__120__vector_base_commonILb1EEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6896|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2408 + 8|0));
  ___cxa_throw(($0|0),(2456|0),(59|0));
  // unreachable;
 }
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6896|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2472 + 8|0));
  ___cxa_throw(($0|0),(2520|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((6928 + 8|0));
 $2 = (($this) + 8|0);
 __THREW__ = 0;
 invoke_vii(494,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $82 = ___cxa_find_matching_catch()|0;
  $83 = tempRet0;
  $$1 = $83;$$12 = $82;
 } else {
  $5 = (($this) + 144|0);
  __THREW__ = 0;
  invoke_viii(495,($5|0),(6920|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $84 = ___cxa_find_matching_catch()|0;
   $85 = tempRet0;
   $$0 = $85;$$01 = $84;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = (($this) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = $$pre$i$i$i;
   while(1) {
    $11 = ($10|0)==($8|0);
    if ($11) {
     break;
    }
    $12 = (($10) + -4|0);
    HEAP32[$9>>2] = $12;
    $10 = $12;
   }
   HEAP32[((11824 + 4|0))>>2] = 0;
   HEAP32[11824>>2] = ((5376 + 8|0));
   __THREW__ = 0;
   invoke_vii(496,($this|0),(11824|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 42;
    } else {
     HEAP32[((11816 + 4|0))>>2] = 0;
     HEAP32[11816>>2] = ((5416 + 8|0));
     __THREW__ = 0;
     invoke_vii(497,($this|0),(11816|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if ($16) {
      label = 42;
     } else {
      HEAP32[((11800 + 4|0))>>2] = 0;
      HEAP32[11800>>2] = ((7024 + 8|0));
      HEAP32[((11800 + 8|0))>>2] = 0;
      HEAP8[((11800 + 12|0))>>0] = 0;
      $17 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[((11800 + 8|0))>>2] = $17;
      __THREW__ = 0;
      invoke_vii(498,($this|0),(11800|0));
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       label = 42;
      } else {
       HEAP32[((11792 + 4|0))>>2] = 0;
       HEAP32[11792>>2] = ((7984 + 8|0));
       __THREW__ = 0;
       invoke_vii(499,($this|0),(11792|0));
       $20 = __THREW__; __THREW__ = 0;
       $21 = $20&1;
       if ($21) {
        label = 42;
       } else {
        HEAP32[((11784 + 4|0))>>2] = 0;
        HEAP32[11784>>2] = ((8200 + 8|0));
        __THREW__ = 0;
        invoke_vii(500,($this|0),(11784|0));
        $22 = __THREW__; __THREW__ = 0;
        $23 = $22&1;
        if ($23) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(501,(11768|0),1);
         $24 = __THREW__; __THREW__ = 0;
         $25 = $24&1;
         if ($25) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(502,($this|0),(11768|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           label = 42;
          } else {
           HEAP32[((11760 + 4|0))>>2] = 0;
           HEAP32[11760>>2] = ((8424 + 8|0));
           __THREW__ = 0;
           invoke_vii(503,($this|0),(11760|0));
           $28 = __THREW__; __THREW__ = 0;
           $29 = $28&1;
           if ($29) {
            label = 42;
           } else {
            HEAP32[((11752 + 4|0))>>2] = 0;
            HEAP32[11752>>2] = ((8544 + 8|0));
            __THREW__ = 0;
            invoke_vii(504,($this|0),(11752|0));
            $30 = __THREW__; __THREW__ = 0;
            $31 = $30&1;
            if ($31) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(11728,1);
             __THREW__ = 0;
             invoke_vii(505,($this|0),(11728|0));
             $32 = __THREW__; __THREW__ = 0;
             $33 = $32&1;
             if ($33) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(11696,1);
              __THREW__ = 0;
              invoke_vii(506,($this|0),(11696|0));
              $34 = __THREW__; __THREW__ = 0;
              $35 = $34&1;
              if ($35) {
               label = 42;
              } else {
               HEAP32[((11688 + 4|0))>>2] = 0;
               HEAP32[11688>>2] = ((5456 + 8|0));
               __THREW__ = 0;
               invoke_vii(507,($this|0),(11688|0));
               $36 = __THREW__; __THREW__ = 0;
               $37 = $36&1;
               if ($37) {
                label = 42;
               } else {
                HEAP32[((11680 + 4|0))>>2] = 0;
                HEAP32[11680>>2] = ((5576 + 8|0));
                __THREW__ = 0;
                invoke_vii(508,($this|0),(11680|0));
                $38 = __THREW__; __THREW__ = 0;
                $39 = $38&1;
                if ($39) {
                 label = 42;
                } else {
                 HEAP32[((11672 + 4|0))>>2] = 0;
                 HEAP32[11672>>2] = ((5648 + 8|0));
                 __THREW__ = 0;
                 invoke_vii(509,($this|0),(11672|0));
                 $40 = __THREW__; __THREW__ = 0;
                 $41 = $40&1;
                 if ($41) {
                  label = 42;
                 } else {
                  HEAP32[((11664 + 4|0))>>2] = 0;
                  HEAP32[11664>>2] = ((5744 + 8|0));
                  __THREW__ = 0;
                  invoke_vii(510,($this|0),(11664|0));
                  $42 = __THREW__; __THREW__ = 0;
                  $43 = $42&1;
                  if ($43) {
                   label = 42;
                  } else {
                   HEAP32[((11656 + 4|0))>>2] = 0;
                   HEAP32[11656>>2] = ((6336 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(511,($this|0),(11656|0));
                   $44 = __THREW__; __THREW__ = 0;
                   $45 = $44&1;
                   if ($45) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11648 + 4|0))>>2] = 0;
                   HEAP32[11648>>2] = ((6400 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(512,($this|0),(11648|0));
                   $46 = __THREW__; __THREW__ = 0;
                   $47 = $46&1;
                   if ($47) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11640 + 4|0))>>2] = 0;
                   HEAP32[11640>>2] = ((6464 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(513,($this|0),(11640|0));
                   $48 = __THREW__; __THREW__ = 0;
                   $49 = $48&1;
                   if ($49) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11632 + 4|0))>>2] = 0;
                   HEAP32[11632>>2] = ((6528 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(514,($this|0),(11632|0));
                   $50 = __THREW__; __THREW__ = 0;
                   $51 = $50&1;
                   if ($51) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11624 + 4|0))>>2] = 0;
                   HEAP32[11624>>2] = ((6592 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(515,($this|0),(11624|0));
                   $52 = __THREW__; __THREW__ = 0;
                   $53 = $52&1;
                   if ($53) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11616 + 4|0))>>2] = 0;
                   HEAP32[11616>>2] = ((6672 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(516,($this|0),(11616|0));
                   $54 = __THREW__; __THREW__ = 0;
                   $55 = $54&1;
                   if ($55) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11608 + 4|0))>>2] = 0;
                   HEAP32[11608>>2] = ((6728 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(517,($this|0),(11608|0));
                   $56 = __THREW__; __THREW__ = 0;
                   $57 = $56&1;
                   if ($57) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11600 + 4|0))>>2] = 0;
                   HEAP32[11600>>2] = ((6776 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(518,($this|0),(11600|0));
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11584 + 4|0))>>2] = 0;
                   HEAP32[11584>>2] = ((5824 + 8|0));
                   HEAP32[((11584 + 8|0))>>2] = ((5824 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(519,($this|0),(11584|0));
                   $60 = __THREW__; __THREW__ = 0;
                   $61 = $60&1;
                   if ($61) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11568 + 4|0))>>2] = 0;
                   HEAP32[11568>>2] = ((5976 + 8|0));
                   HEAP32[((11568 + 8|0))>>2] = ((5976 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(520,($this|0),(11568|0));
                   $62 = __THREW__; __THREW__ = 0;
                   $63 = $62&1;
                   if ($63) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11552 + 4|0))>>2] = 0;
                   HEAP32[11552>>2] = ((7920 + 8|0));
                   __THREW__ = 0;
                   $64 = (invoke_i(459)|0);
                   $65 = __THREW__; __THREW__ = 0;
                   $66 = $65&1;
                   if ($66) {
                    $67 = ___cxa_find_matching_catch()|0;
                    $68 = tempRet0;
                    $eh$lpad$body$index3Z2D = $68;$eh$lpad$body$indexZ2D = $67;
                    break;
                   }
                   HEAP32[((11552 + 8|0))>>2] = $64;
                   HEAP32[11552>>2] = ((6272 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(521,($this|0),(11552|0));
                   $69 = __THREW__; __THREW__ = 0;
                   $70 = $69&1;
                   if ($70) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11536 + 4|0))>>2] = 0;
                   HEAP32[11536>>2] = ((7920 + 8|0));
                   __THREW__ = 0;
                   $71 = (invoke_i(459)|0);
                   $72 = __THREW__; __THREW__ = 0;
                   $73 = $72&1;
                   if ($73) {
                    $74 = ___cxa_find_matching_catch()|0;
                    $75 = tempRet0;
                    $eh$lpad$body$index3Z2D = $75;$eh$lpad$body$indexZ2D = $74;
                    break;
                   }
                   HEAP32[((11536 + 8|0))>>2] = $71;
                   HEAP32[11536>>2] = ((6304 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(522,($this|0),(11536|0));
                   $76 = __THREW__; __THREW__ = 0;
                   $77 = $76&1;
                   if ($77) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11528 + 4|0))>>2] = 0;
                   HEAP32[11528>>2] = ((6816 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(523,($this|0),(11528|0));
                   $78 = __THREW__; __THREW__ = 0;
                   $79 = $78&1;
                   if ($79) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11520 + 4|0))>>2] = 0;
                   HEAP32[11520>>2] = ((6856 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(524,($this|0),(11520|0));
                   $80 = __THREW__; __THREW__ = 0;
                   $81 = $80&1;
                   if ($81) {
                    label = 42;
                    break;
                   }
                   return;
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $86 = ___cxa_find_matching_catch()|0;
    $87 = tempRet0;
    $eh$lpad$body$index3Z2D = $87;$eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6968>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6968|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(525)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((6968|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6960>>2] = 6952;
     ___cxa_guard_release((6968|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6960>>2]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 do {
  if ($8) {
   $16 = $3;
  } else {
   $9 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(526,($0|0),($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $$pre = HEAP32[$0>>2]|0;
    $16 = $$pre;
    break;
   }
   $12 = ___cxa_find_matching_catch()|0;
   $13 = tempRet0;
   $14 = ($f|0)==(0|0);
   if (!($14)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($12|0);
   // unreachable;
  }
 } while(0);
 $15 = (($16) + ($id<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $20 = $16;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  $$pre2 = HEAP32[$0>>2]|0;
  $20 = $$pre2;
 }
 $19 = (($20) + ($id<<2)|0);
 HEAP32[$19>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((6928 + 8|0));
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $i$0 = 0;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  $3 = HEAP32[$0>>2]|0;
  $4 = $2;
  $5 = $3;
  $6 = (($4) - ($5))|0;
  $7 = $6 >> 2;
  $8 = ($i$0>>>0)<($7>>>0);
  if (!($8)) {
   break;
  }
  $9 = (($3) + ($i$0<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   (__ZNSt3__114__shared_count16__release_sharedEv($10)|0);
  }
  $12 = (($i$0) + 1)|0;
  $i$0 = $12;
 }
 $13 = (($this) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = (($this) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(2656|0),(67|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(11360,1);
 HEAP32[6952>>2] = 11360;
 return (6952|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[6976>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (6976|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6992>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6992|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(527)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((6992|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6984>>2] = 6976;
     ___cxa_guard_release((6992|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6984>>2]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(528)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = (($__p$i) + 4|0);
  HEAP32[$2>>2] = (529);
  $3 = (($__p$i) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,530);
 }
 $4 = (($this) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = (($1) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[7000>>2]|0;HEAP32[7000>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = (($this) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(531)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $vec;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $6 = (($5) + ($4<<1)|0);
   $7 = HEAP16[$6>>1]|0;
   $8 = $7&65535;
   $10 = $8;
  } else {
   $10 = 0;
  }
  $9 = $10&65535;
  HEAP16[$$0>>1] = $9;
  $11 = (($$01) + 4|0);
  $12 = (($$0) + 2|0);
  $$0 = $12;$$01 = $11;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if ($isascii) {
   $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $3 = (($2) + ($1<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 & $m;
   $6 = ($5<<16>>16)==(0);
   if (!($6)) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if (!($isascii)) {
   $$0$lcssa = $$0;
   break;
  }
  $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $3 = (($2) + ($1<<1)|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4 & $m;
  $6 = ($5<<16>>16)==(0);
  if ($6) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(532)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(533)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $2 = $1 << 24 >> 24;
  HEAP32[$$0>>2] = $2;
  $3 = (($$01) + 1|0);
  $4 = (($$0) + 4|0);
  $$0 = $4;$$01 = $3;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  $5 = $4&255;
  $$dfault = $isascii ? $5 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $6 = (($$01) + 4|0);
  $7 = (($$0) + 1|0);
  $$0 = $7;$$01 = $6;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7024 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  HEAP8[$$0>>0] = $1;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $isascii2 = ($1<<24>>24)>(-1);
  $$dfault = $isascii2 ? $1 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7096 + 8|0));
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = (($this) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa99 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa92 = 0, $$1 = 0, $$1$lcssa = 0, $$lcssa = 0, $$lcssa104 = 0, $$lcssa111 = 0, $$pre = 0, $$pre59 = 0, $$pre60 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $104$phi = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $n$0 = 0, $not$ = 0, $or$cond = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP32[$fend$0>>2]|0;
  $2 = ($1|0)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 4|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 51;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $20 >> 2;
  $22 = $$02;
  $23 = (($4) - ($22))|0;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(534,($$02|0),($frm_nxt|0),($21|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa104 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == -1)) {
   $$01$lcssa99 = $$01;$$02$lcssa92 = $$02;
   label = 16;
   break;
  } else if ((($26|0) == 0)) {
   $$0$ph = 1;
   label = 53;
   break;
  }
  $66 = HEAP32[$to_nxt>>2]|0;
  $67 = (($66) + ($26)|0);
  HEAP32[$to_nxt>>2] = $67;
  $68 = ($67|0)==($to_end|0);
  if ($68) {
   label = 30;
   break;
  }
  $69 = ($fend$1|0)==($frm_end|0);
  if ($69) {
   $$pre59 = HEAP32[$frm_nxt>>2]|0;
   $$01$be = $$pre59;$$02$be = $67;$fend$1$be = $frm_end;
  } else {
   $70 = HEAP32[$5>>2]|0;
   $71 = (_uselocale(($70|0))|0);
   __THREW__ = 0;
   $72 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    $$lcssa111 = $71;
    label = 38;
    break;
   }
   $75 = ($71|0)==(0|0);
   if (!($75)) {
    __THREW__ = 0;
    (invoke_ii(474,($71|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 37;
     break;
    }
   }
   $87 = ($72|0)==(-1);
   if ($87) {
    $$0$ph = 2;
    label = 53;
    break;
   }
   $88 = HEAP32[$to_nxt>>2]|0;
   $89 = $88;
   $90 = (($4) - ($89))|0;
   $91 = ($72>>>0)>($90>>>0);
   if ($91) {
    $$0$ph = 1;
    label = 53;
    break;
   }
   $n$0 = $72;$p$0 = $tmp;
   while(1) {
    $92 = ($n$0|0)==(0);
    if ($92) {
     break;
    }
    $93 = (($p$0) + 1|0);
    $94 = HEAP8[$p$0>>0]|0;
    $95 = HEAP32[$to_nxt>>2]|0;
    $96 = (($95) + 1|0);
    HEAP32[$to_nxt>>2] = $96;
    HEAP8[$95>>0] = $94;
    $97 = (($n$0) + -1)|0;
    $n$0 = $97;$p$0 = $93;
   }
   $98 = HEAP32[$frm_nxt>>2]|0;
   $99 = (($98) + 4|0);
   HEAP32[$frm_nxt>>2] = $99;
   $104 = $98;$fend$2 = $99;
   while(1) {
    $100 = ($fend$2|0)==($frm_end|0);
    if ($100) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $101 = HEAP32[$fend$2>>2]|0;
    $102 = ($101|0)==(0);
    $103 = (($104) + 8|0);
    if ($102) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $104$phi = $fend$2;$fend$2 = $103;$104 = $104$phi;
    }
   }
   $$pre60 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $99;$$02$be = $$pre60;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa104|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa104|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   HEAP32[$to_nxt>>2] = $$02$lcssa92;
   $$1 = $$01$lcssa99;$46 = $$02$lcssa92;
   while(1) {
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $43 = HEAP32[$$1>>2]|0;
    $44 = HEAP32[$5>>2]|0;
    $45 = (_uselocale(($44|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiii(535,($46|0),($43|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $45;
     label = 22;
     break;
    }
    $50 = ($45|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($45|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    $62 = ($47|0)==(-1);
    if ($62) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $63 = HEAP32[$to_nxt>>2]|0;
    $64 = (($63) + ($47)|0);
    HEAP32[$to_nxt>>2] = $64;
    $65 = (($$1) + 4|0);
    $$1 = $65;$46 = $64;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $$0 = 2;
    break;
   }
  }
  else if ((label|0) == 30) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $105 = $$pre;
   label = 52;
  }
  else if ((label|0) == 37) {
   $78 = ___cxa_find_matching_catch(0|0)|0;
   $79 = tempRet0;
   ___clang_call_terminate($78);
   // unreachable;
  }
  else if ((label|0) == 38) {
   $80 = ___cxa_find_matching_catch()|0;
   $81 = tempRet0;
   $82 = ($$lcssa111|0)==(0|0);
   if (!($82)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa111|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     $85 = ___cxa_find_matching_catch(0|0)|0;
     $86 = tempRet0;
     ___clang_call_terminate($85);
     // unreachable;
    }
   }
   ___resumeException($80|0);
   // unreachable;
  }
  else if ((label|0) == 51) {
   $105 = $$01$lcssa;
   label = 52;
  }
  else if ((label|0) == 53) {
   $$0 = $$0$ph;
  }
 } while(0);
 if ((label|0) == 52) {
  $not$ = ($105|0)!=($frm_end|0);
  $106 = $not$&1;
  $$0 = $106;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa135 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa128 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa121 = 0, $$1$lcssa122 = 0, $$2 = 0, $$lcssa = 0, $$lcssa142 = 0, $$lcssa147 = 0, $$lcssa154 = 0, $$pre = 0, $$pre80 = 0, $$pre81 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $97$phi = 0, $98 = 0;
 var $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP8[$fend$0>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 1|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 50;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $$02;
  $22 = (($4) - ($21))|0;
  $23 = $22 >> 2;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(536,($$02|0),($frm_nxt|0),($20|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa147 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == -1)) {
   $$01$lcssa135 = $$01;$$02$lcssa128 = $$02;$$lcssa142 = $18;
   label = 16;
   break;
  } else if ((($26|0) == 0)) {
   label = 52;
   break;
  }
  $67 = HEAP32[$to_nxt>>2]|0;
  $68 = (($67) + ($26<<2)|0);
  HEAP32[$to_nxt>>2] = $68;
  $69 = ($68|0)==($to_end|0);
  if ($69) {
   label = 34;
   break;
  }
  $70 = ($fend$1|0)==($frm_end|0);
  $$pre80 = HEAP32[$frm_nxt>>2]|0;
  if ($70) {
   $$01$be = $$pre80;$$02$be = $68;$fend$1$be = $frm_end;
  } else {
   $71 = HEAP32[$5>>2]|0;
   $72 = (_uselocale(($71|0))|0);
   __THREW__ = 0;
   $73 = (invoke_iiiii(537,($68|0),($$pre80|0),1,($st|0))|0);
   $74 = __THREW__; __THREW__ = 0;
   $75 = $74&1;
   if ($75) {
    $$lcssa154 = $72;
    label = 40;
    break;
   }
   $76 = ($72|0)==(0|0);
   if (!($76)) {
    __THREW__ = 0;
    (invoke_ii(474,($72|0))|0);
    $77 = __THREW__; __THREW__ = 0;
    $78 = $77&1;
    if ($78) {
     label = 39;
     break;
    }
   }
   $88 = ($73|0)==(0);
   if (!($88)) {
    label = 52;
    break;
   }
   $89 = HEAP32[$to_nxt>>2]|0;
   $90 = (($89) + 4|0);
   HEAP32[$to_nxt>>2] = $90;
   $91 = HEAP32[$frm_nxt>>2]|0;
   $92 = (($91) + 1|0);
   HEAP32[$frm_nxt>>2] = $92;
   $97 = $91;$fend$2 = $92;
   while(1) {
    $93 = ($fend$2|0)==($frm_end|0);
    if ($93) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $94 = HEAP8[$fend$2>>0]|0;
    $95 = ($94<<24>>24)==(0);
    $96 = (($97) + 2|0);
    if ($95) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $97$phi = $fend$2;$fend$2 = $96;$97 = $97$phi;
    }
   }
   $$pre81 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $92;$$02$be = $$pre81;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa147|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa147|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   $$1 = $$01$lcssa135;$storemerge = $$02$lcssa128;
   while(1) {
    HEAP32[$to_nxt>>2] = $storemerge;
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 32;
     break;
    }
    $43 = $$1;
    $44 = (($$lcssa142) - ($43))|0;
    $45 = HEAP32[$5>>2]|0;
    $46 = (_uselocale(($45|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiiii(537,($storemerge|0),($$1|0),($44|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $46;
     label = 22;
     break;
    }
    $50 = ($46|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($46|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    if ((($47|0) == -2)) {
     $$1$lcssa122 = $$1;
     label = 29;
     break;
    } else if ((($47|0) == 0)) {
     $62 = (($$1) + 1|0);
     $$2 = $62;
    } else if ((($47|0) == -1)) {
     $$1$lcssa121 = $$1;
     label = 28;
     break;
    } else {
     $63 = (($$1) + ($47)|0);
     $$2 = $63;
    }
    $64 = HEAP32[$to_nxt>>2]|0;
    $65 = (($64) + 4|0);
    $$1 = $$2;$storemerge = $65;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa121;
    $$0 = 2;
    break;
   }
   else if ((label|0) == 29) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa122;
    $$0 = 1;
    break;
   }
   else if ((label|0) == 32) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $not$3 = ($$1$lcssa|0)!=($frm_end|0);
    $66 = $not$3&1;
    $$0 = $66;
    break;
   }
  }
  else if ((label|0) == 34) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $98 = $$pre;
   label = 51;
  }
  else if ((label|0) == 39) {
   $79 = ___cxa_find_matching_catch(0|0)|0;
   $80 = tempRet0;
   ___clang_call_terminate($79);
   // unreachable;
  }
  else if ((label|0) == 40) {
   $81 = ___cxa_find_matching_catch()|0;
   $82 = tempRet0;
   $83 = ($$lcssa154|0)==(0|0);
   if (!($83)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa154|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     $86 = ___cxa_find_matching_catch(0|0)|0;
     $87 = tempRet0;
     ___clang_call_terminate($86);
     // unreachable;
    }
   }
   ___resumeException($81|0);
   // unreachable;
  }
  else if ((label|0) == 50) {
   $98 = $$01$lcssa;
   label = 51;
  }
  else if ((label|0) == 52) {
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 51) {
  $not$ = ($98|0)!=($frm_end|0);
  $99 = $not$&1;
  $$0 = $99;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(474,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(474,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $18 = (($3) + -1)|0;
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = $to_end;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ($18>>>0)>($22>>>0);
  if ($23) {
   $$0 = 1;
  } else {
   $n$0 = $18;$p$0 = $tmp;
   while(1) {
    $24 = ($n$0|0)==(0);
    if ($24) {
     break;
    }
    $25 = (($p$0) + 1|0);
    $26 = HEAP8[$p$0>>0]|0;
    $27 = HEAP32[$to_nxt>>2]|0;
    $28 = (($27) + 1|0);
    HEAP32[$to_nxt>>2] = $28;
    HEAP8[$27>>0] = $26;
    $29 = (($n$0) + -1)|0;
    $n$0 = $29;$p$0 = $25;
   }
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(474,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(538,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(474,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(474,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$01 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nbytes$1 = 0, $nwchar_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = (($this) + 8|0);
 $$01 = $frm;$nbytes$0 = 0;$nwchar_t$0 = 0;
 while(1) {
  $2 = ($nwchar_t$0>>>0)>=($mx>>>0);
  $3 = ($$01|0)==($frm_end|0);
  $or$cond = $3 | $2;
  if ($or$cond) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $4 = $$01;
  $5 = (($0) - ($4))|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = (_uselocale(($6|0))|0);
  __THREW__ = 0;
  $8 = (invoke_iiii(539,($$01|0),($5|0),($st|0))|0);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if ($10) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  $11 = ($7|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($7|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    label = 6;
    break;
   }
  }
  if ((($8|0) == -2) | (($8|0) == -1)) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  } else if ((($8|0) == 0)) {
   $23 = (($$01) + 1|0);
   $$1 = $23;$$pn = 1;
  } else {
   $24 = (($$01) + ($8)|0);
   $$1 = $24;$$pn = $8;
  }
  $nbytes$1 = (($$pn) + ($nbytes$0))|0;
  $25 = (($nwchar_t$0) + 1)|0;
  $$01 = $$1;$nbytes$0 = $nbytes$1;$nwchar_t$0 = $25;
 }
 if ((label|0) == 6) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 else if ((label|0) == 7) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $18 = ($$lcssa|0)==(0|0);
  if (!($18)) {
   __THREW__ = 0;
   (invoke_ii(474,($$lcssa|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    $21 = ___cxa_find_matching_catch(0|0)|0;
    $22 = tempRet0;
    ___clang_call_terminate($21);
    // unreachable;
   }
  }
  ___resumeException($16|0);
  // unreachable;
 }
 else if ((label|0) == 15) {
  return ($nbytes$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(474,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(474,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7176 + 8|0));
 $2 = (($this) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = (($this) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = (($this) + 12|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7216 + 8|0));
 $2 = (($this) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = (($this) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = (($this) + 16|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7176 + 8|0));
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7216 + 8|0));
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7256,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7264)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7264,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7288,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7296)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7296,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 8)) {
  $$0 = 16;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7328>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7328|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[14528>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((14528|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 14360;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((14360 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((14528|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(14360|0),(14536|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((14360 + 12|0))|0),(14544|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(540,(((14360 + 24|0))|0),(14552|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(540,(((14360 + 36|0))|0),(14560|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(540,(((14360 + 48|0))|0),(14576|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(540,(((14360 + 60|0))|0),(14592|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(540,(((14360 + 72|0))|0),(14600|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(540,(((14360 + 84|0))|0),(14616|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(540,(((14360 + 96|0))|0),(14624|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(540,(((14360 + 108|0))|0),(14632|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(540,(((14360 + 120|0))|0),(14640|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(540,(((14360 + 132|0))|0),(14648|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(540,(((14360 + 144|0))|0),(14656|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((14360 + 156|0))|0),(14664|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7320>>2] = 14360;
                  ___cxa_guard_release((7328|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7328|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7320>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7344>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7344|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13992>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13992|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13824;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13824 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((13992|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(13824|0),(14000|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((13824 + 12|0))|0),(14032|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(541,(((13824 + 24|0))|0),(14064|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(541,(((13824 + 36|0))|0),(14096|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(541,(((13824 + 48|0))|0),(14136|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(541,(((13824 + 60|0))|0),(14176|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(541,(((13824 + 72|0))|0),(14208|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(541,(((13824 + 84|0))|0),(14248|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(541,(((13824 + 96|0))|0),(14264|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(541,(((13824 + 108|0))|0),(14280|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(541,(((13824 + 120|0))|0),(14296|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(541,(((13824 + 132|0))|0),(14312|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(541,(((13824 + 144|0))|0),(14328|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((13824 + 156|0))|0),(14344|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7336>>2] = 13824;
                  ___cxa_guard_release((7344|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7344|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7336>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7360>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7360|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13600>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13600|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13312;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13312 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((13600|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(13312|0),(13608|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(540,(((13312 + 12|0))|0),(13616|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(540,(((13312 + 24|0))|0),(13632|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(540,(((13312 + 36|0))|0),(13640|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(540,(((13312 + 48|0))|0),(13648|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(540,(((13312 + 60|0))|0),(13656|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(540,(((13312 + 72|0))|0),(13664|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(540,(((13312 + 84|0))|0),(13672|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(540,(((13312 + 96|0))|0),(13680|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(540,(((13312 + 108|0))|0),(13696|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(540,(((13312 + 120|0))|0),(13704|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(540,(((13312 + 132|0))|0),(13720|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((13312 + 144|0))|0),(13736|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(540,(((13312 + 156|0))|0),(13744|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(540,(((13312 + 168|0))|0),(13752|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 180|0))|0),(13760|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 192|0))|0),(13648|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 204|0))|0),(13768|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 216|0))|0),(13776|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 228|0))|0),(13784|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 240|0))|0),(13792|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 252|0))|0),(13800|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 264|0))|0),(13808|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13312 + 276|0))|0),(13816|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7352>>2] = 13312;
                    ___cxa_guard_release((7360|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7360|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7352>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7376|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12760>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12760|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12472;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12472 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12760|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(12472|0),(12768|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(541,(((12472 + 12|0))|0),(12800|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(541,(((12472 + 24|0))|0),(12840|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(541,(((12472 + 36|0))|0),(12864|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(541,(((12472 + 48|0))|0),(12888|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(541,(((12472 + 60|0))|0),(12904|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(541,(((12472 + 72|0))|0),(12928|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(541,(((12472 + 84|0))|0),(12952|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(541,(((12472 + 96|0))|0),(12984|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(541,(((12472 + 108|0))|0),(13024|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(541,(((12472 + 120|0))|0),(13056|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(541,(((12472 + 132|0))|0),(13096|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((12472 + 144|0))|0),(13136|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(541,(((12472 + 156|0))|0),(13152|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(541,(((12472 + 168|0))|0),(13168|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 180|0))|0),(13184|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 192|0))|0),(12888|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 204|0))|0),(13200|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 216|0))|0),(13216|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 228|0))|0),(13232|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 240|0))|0),(13248|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 252|0))|0),(13264|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 264|0))|0),(13280|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12472 + 276|0))|0),(13296|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7368>>2] = 12472;
                    ___cxa_guard_release((7376|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7376|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7368>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7392>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7392|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12448>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12448|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12160;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12160 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12448|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(12160|0),(12456|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((12160 + 12|0))|0),(12464|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7384>>2] = 12160;
      ___cxa_guard_release((7392|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7392|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7384>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7408>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7408|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12120>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12120|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 11832;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((11832 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12120|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(11832|0),(12128|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((11832 + 12|0))|0),(12144|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7400>>2] = 11832;
      ___cxa_guard_release((7408|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7408|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7400>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7432>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7432|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7416|0),(7440|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7432|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7432|0));
     break;
    }
   }
  }
 } while(0);
 return (7416|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7472>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7472|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7480|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7456|0),(7480|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7472|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7472|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7456|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7536>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7536|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7520|0),(7544|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7536|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7536|0));
     break;
    }
   }
  }
 } while(0);
 return (7520|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7576>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7576|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7584|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7560|0),(7584|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7576|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7576|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7560|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7640>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7640|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7624|0),(7648|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7640|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7640|0));
     break;
    }
   }
  }
 } while(0);
 return (7624|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7688>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7688|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7696|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7672|0),(7696|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7688|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7688|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7672|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7800>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7800|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7784|0),(7808|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7800|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7800|0));
     break;
    }
   }
  }
 } while(0);
 return (7784|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7840>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7840|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7848|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7824|0),(7848|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7840|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7840|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7824|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7096 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$lcssa71 = 0, $$041 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$lcssa77 = 0, $$pre$i$i$i = 0, $$pre$i$i$i12 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0;
 var $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0;
 var $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $47 = 0;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      }
      $46 = ($43|0)==(-1);
      if ($46) {
       HEAP32[$__b>>2] = 0;
       $47 = 0;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $47 = $$pre$i$i$i;
       break;
      }
     } else {
      $47 = $33;
     }
    }
   } while(0);
   $48 = ($47|0)==(0|0);
   $49 = HEAP32[$__e>>2]|0;
   $50 = ($49|0)==(0|0);
   if ($50) {
    $$pre$i2$i$i16 = 0;
   } else {
    $51 = (($49) + 12|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (($49) + 16|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = ($52|0)==($54|0);
    if ($55) {
     $56 = HEAP32[$49>>2]|0;
     $57 = (($56) + 36|0);
     $58 = HEAP32[$57>>2]|0;
     __THREW__ = 0;
     $59 = (invoke_ii($58|0,($49|0))|0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 6;
      break;
     }
     $62 = ($59|0)==(-1);
     if ($62) {
      HEAP32[$__e>>2] = 0;
      $$pre$i2$i$i16 = 0;
     } else {
      $$pre$i2$i$i16 = $49;
     }
    } else {
     $$pre$i2$i$i16 = $49;
    }
   }
   $63 = ($$pre$i2$i$i16|0)==(0|0);
   $tmp$i$i = $48 ^ $63;
   $64 = ($__n_might_match$2|0)!=(0);
   $$ = $64 & $tmp$i$i;
   $65 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $63;$$lcssa77 = $65;$$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 70;
    break;
   }
   $66 = (($65) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (($65) + 16|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ($67|0)==($69|0);
   if ($70) {
    $71 = HEAP32[$65>>2]|0;
    $72 = (($71) + 36|0);
    $73 = HEAP32[$72>>2]|0;
    __THREW__ = 0;
    $74 = (invoke_ii($73|0,($65|0))|0);
    $75 = __THREW__; __THREW__ = 0;
    $76 = $75&1;
    if ($76) {
     label = 6;
     break;
    } else {
     $$0$i$i = $74;
    }
   } else {
    $77 = HEAP8[$67>>0]|0;
    $78 = $77&255;
    $$0$i$i = $78;
   }
   $79 = $$0$i$i&255;
   if ($__case_sensitive) {
    $__c$0 = $79;
   } else {
    $80 = HEAP32[$__ct>>2]|0;
    $81 = (($80) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    __THREW__ = 0;
    $83 = (invoke_iii($82|0,($__ct|0),($79|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     label = 6;
     break;
    } else {
     $__c$0 = $83;
    }
   }
   $86 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $87 = ($__ky1$0|0)==($__ke|0);
    if ($87) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $88 = HEAP8[$__st$1>>0]|0;
    $89 = ($88<<24>>24)==(1);
    do {
     if ($89) {
      $90 = HEAP8[$__ky1$0>>0]|0;
      $91 = $90 & 1;
      $92 = ($91<<24>>24)==(0);
      if ($92) {
       $95 = (($__ky1$0) + 1|0);
       $97 = $95;
      } else {
       $93 = (($__ky1$0) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $97 = $94;
      }
      $96 = (($97) + ($__indx$0)|0);
      $98 = HEAP8[$96>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $98;
      } else {
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iii($101|0,($__ct|0),($98|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $102;
       }
      }
      $105 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($105)) {
       HEAP8[$__st$1>>0] = 0;
       $117 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $117;
       break;
      }
      $106 = HEAP8[$__ky1$0>>0]|0;
      $107 = $106 & 1;
      $108 = ($107<<24>>24)==(0);
      if ($108) {
       $111 = $106&255;
       $112 = $111 >>> 1;
       $113 = $112;
      } else {
       $109 = (($__ky1$0) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $113 = $110;
      }
      $114 = ($113|0)==($86|0);
      if ($114) {
       HEAP8[$__st$1>>0] = 2;
       $115 = (($__n_might_match$3) + -1)|0;
       $116 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $116;$__n_might_match$4 = $115;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $118 = (($__ky1$0) + 12|0);
    $119 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $118;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $119;
   }
   if ($__consume$0$off0$lcssa) {
    $120 = HEAP32[$__b>>2]|0;
    $121 = (($120) + 12|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = (($120) + 16|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ($122|0)==($124|0);
    if ($125) {
     $126 = HEAP32[$120>>2]|0;
     $127 = (($126) + 40|0);
     $128 = HEAP32[$127>>2]|0;
     __THREW__ = 0;
     (invoke_ii($128|0,($120|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 6;
      break;
     }
    } else {
     $131 = (($122) + 1|0);
     HEAP32[$121>>2] = $131;
    }
    $132 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $133 = ($132>>>0)>(1);
    if ($133) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $134 = ($__ky2$0|0)==($__ke|0);
      if ($134) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $135 = HEAP8[$__st$2>>0]|0;
      $136 = ($135<<24>>24)==(2);
      if ($136) {
       $137 = HEAP8[$__ky2$0>>0]|0;
       $138 = $137 & 1;
       $139 = ($138<<24>>24)==(0);
       if ($139) {
        $142 = $137&255;
        $143 = $142 >>> 1;
        $144 = $143;
       } else {
        $140 = (($__ky2$0) + 4|0);
        $141 = HEAP32[$140>>2]|0;
        $144 = $141;
       }
       $145 = ($144|0)==($86|0);
       if ($145) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $146 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $146;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $147 = (($__ky2$0) + 12|0);
      $148 = (($__st$2) + 1|0);
      $__ky2$0 = $147;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $148;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $86;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 70) {
   $149 = ($$lcssa77|0)==(0|0);
   do {
    if ($149) {
     $162 = 0;
     label = 76;
    } else {
     $150 = (($$lcssa77) + 12|0);
     $151 = HEAP32[$150>>2]|0;
     $152 = (($$lcssa77) + 16|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = ($151|0)==($153|0);
     if ($154) {
      $155 = HEAP32[$$lcssa77>>2]|0;
      $156 = (($155) + 36|0);
      $157 = HEAP32[$156>>2]|0;
      __THREW__ = 0;
      $158 = (invoke_ii($157|0,($$lcssa77|0))|0);
      $159 = __THREW__; __THREW__ = 0;
      $160 = $159&1;
      if (!($160)) {
       $161 = ($158|0)==(-1);
       if ($161) {
        HEAP32[$__b>>2] = 0;
        $162 = 0;
        label = 76;
        break;
       } else {
        $$pre$i$i$i12 = HEAP32[$__b>>2]|0;
        $162 = $$pre$i$i$i12;
        label = 76;
        break;
       }
      }
     } else {
      $162 = $$lcssa77;
      label = 76;
     }
    }
   } while(0);
   L96: do {
    if ((label|0) == 76) {
     $163 = ($162|0)==(0|0);
     do {
      if ($$lcssa) {
       label = 82;
      } else {
       $164 = (($$pre$i2$i$i16$lcssa) + 12|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = (($$pre$i2$i$i16$lcssa) + 16|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($165|0)==($167|0);
       if ($168) {
        $169 = HEAP32[$$pre$i2$i$i16$lcssa>>2]|0;
        $170 = (($169) + 36|0);
        $171 = HEAP32[$170>>2]|0;
        __THREW__ = 0;
        $172 = (invoke_ii($171|0,($$pre$i2$i$i16$lcssa|0))|0);
        $173 = __THREW__; __THREW__ = 0;
        $174 = $173&1;
        if ($174) {
         break L96;
        }
        $175 = ($172|0)==(-1);
        if ($175) {
         HEAP32[$__e>>2] = 0;
         label = 82;
         break;
        }
       }
       if (!($163)) {
        label = 83;
       }
      }
     } while(0);
     if ((label|0) == 82) {
      if ($163) {
       label = 83;
      }
     }
     if ((label|0) == 83) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 88;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa71 = $$0;
       label = 89;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 88) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$041 = $__ke;
     }
     else if ((label|0) == 89) {
      $$041 = $$0$lcssa71;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$041|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(544,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(545,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(546,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP16[$__v>>1] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(547,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(548,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(549,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(550,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF32[$__v>>2] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(551,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(552,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$0$lcssa69 = 0, $$045 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0;
 var $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i14 = 0;
 var $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $64 = 1;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      } else {
       $$0$i$i$i$i = $43;
      }
     } else {
      $46 = HEAP32[$36>>2]|0;
      $$0$i$i$i$i = $46;
     }
     $47 = ($$0$i$i$i$i|0)==(-1);
     if ($47) {
      HEAP32[$__b>>2] = 0;
      $64 = 1;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
      $64 = $phitmp$i$i$i;
      break;
     }
    }
   } while(0);
   $48 = HEAP32[$__e>>2]|0;
   $49 = ($48|0)==(0|0);
   if ($49) {
    $$pre$i3$i$i19 = 0;$63 = 1;
   } else {
    $50 = (($48) + 12|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (($48) + 16|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($51|0)==($53|0);
    if ($54) {
     $55 = HEAP32[$48>>2]|0;
     $56 = (($55) + 36|0);
     $57 = HEAP32[$56>>2]|0;
     __THREW__ = 0;
     $58 = (invoke_ii($57|0,($48|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 6;
      break;
     } else {
      $$0$i$i1$i$i = $58;
     }
    } else {
     $61 = HEAP32[$51>>2]|0;
     $$0$i$i1$i$i = $61;
    }
    $62 = ($$0$i$i1$i$i|0)==(-1);
    if ($62) {
     HEAP32[$__e>>2] = 0;
     $$pre$i3$i$i19 = 0;$63 = 1;
    } else {
     $$pre$i3$i$i19 = $48;$63 = 0;
    }
   }
   $tmp$i$i = $64 ^ $63;
   $65 = ($__n_might_match$2|0)!=(0);
   $$ = $65 & $tmp$i$i;
   $66 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $66;$$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 72;
    break;
   }
   $67 = (($66) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (($66) + 16|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($68|0)==($70|0);
   if ($71) {
    $72 = HEAP32[$66>>2]|0;
    $73 = (($72) + 36|0);
    $74 = HEAP32[$73>>2]|0;
    __THREW__ = 0;
    $75 = (invoke_ii($74|0,($66|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 6;
     break;
    } else {
     $$0$i$i = $75;
    }
   } else {
    $78 = HEAP32[$68>>2]|0;
    $$0$i$i = $78;
   }
   if ($__case_sensitive) {
    $__c$0 = $$0$i$i;
   } else {
    $79 = HEAP32[$__ct>>2]|0;
    $80 = (($79) + 28|0);
    $81 = HEAP32[$80>>2]|0;
    __THREW__ = 0;
    $82 = (invoke_iii($81|0,($__ct|0),($$0$i$i|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     label = 6;
     break;
    } else {
     $__c$0 = $82;
    }
   }
   $85 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $86 = ($__ky1$0|0)==($__ke|0);
    if ($86) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $87 = HEAP8[$__st$1>>0]|0;
    $88 = ($87<<24>>24)==(1);
    do {
     if ($88) {
      $89 = HEAP8[$__ky1$0>>0]|0;
      $90 = $89 & 1;
      $91 = ($90<<24>>24)==(0);
      if ($91) {
       $94 = (($__ky1$0) + 4|0);
       $96 = $94;
      } else {
       $92 = (($__ky1$0) + 8|0);
       $93 = HEAP32[$92>>2]|0;
       $96 = $93;
      }
      $95 = (($96) + ($__indx$0<<2)|0);
      $97 = HEAP32[$95>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $97;
      } else {
       $98 = HEAP32[$__ct>>2]|0;
       $99 = (($98) + 28|0);
       $100 = HEAP32[$99>>2]|0;
       __THREW__ = 0;
       $101 = (invoke_iii($100|0,($__ct|0),($97|0))|0);
       $102 = __THREW__; __THREW__ = 0;
       $103 = $102&1;
       if ($103) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $101;
       }
      }
      $104 = ($__c$0|0)==($__kc$0|0);
      if (!($104)) {
       HEAP8[$__st$1>>0] = 0;
       $116 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $116;
       break;
      }
      $105 = HEAP8[$__ky1$0>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $110 = $105&255;
       $111 = $110 >>> 1;
       $112 = $111;
      } else {
       $108 = (($__ky1$0) + 4|0);
       $109 = HEAP32[$108>>2]|0;
       $112 = $109;
      }
      $113 = ($112|0)==($85|0);
      if ($113) {
       HEAP8[$__st$1>>0] = 2;
       $114 = (($__n_might_match$3) + -1)|0;
       $115 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $115;$__n_might_match$4 = $114;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $117 = (($__ky1$0) + 12|0);
    $118 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $117;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $118;
   }
   if ($__consume$0$off0$lcssa) {
    $119 = HEAP32[$__b>>2]|0;
    $120 = (($119) + 12|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($119) + 16|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($121|0)==($123|0);
    if ($124) {
     $125 = HEAP32[$119>>2]|0;
     $126 = (($125) + 40|0);
     $127 = HEAP32[$126>>2]|0;
     __THREW__ = 0;
     (invoke_ii($127|0,($119|0))|0);
     $128 = __THREW__; __THREW__ = 0;
     $129 = $128&1;
     if ($129) {
      label = 6;
      break;
     }
    } else {
     $130 = (($121) + 4|0);
     HEAP32[$120>>2] = $130;
    }
    $131 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $132 = ($131>>>0)>(1);
    if ($132) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $133 = ($__ky2$0|0)==($__ke|0);
      if ($133) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $134 = HEAP8[$__st$2>>0]|0;
      $135 = ($134<<24>>24)==(2);
      if ($135) {
       $136 = HEAP8[$__ky2$0>>0]|0;
       $137 = $136 & 1;
       $138 = ($137<<24>>24)==(0);
       if ($138) {
        $141 = $136&255;
        $142 = $141 >>> 1;
        $143 = $142;
       } else {
        $139 = (($__ky2$0) + 4|0);
        $140 = HEAP32[$139>>2]|0;
        $143 = $140;
       }
       $144 = ($143|0)==($85|0);
       if ($144) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $145 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $145;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $146 = (($__ky2$0) + 12|0);
      $147 = (($__st$2) + 1|0);
      $__ky2$0 = $146;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $147;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $85;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 72) {
   $148 = ($$lcssa|0)==(0|0);
   do {
    if ($148) {
     $186 = 1;
     label = 79;
    } else {
     $149 = (($$lcssa) + 12|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = (($$lcssa) + 16|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($150|0)==($152|0);
     if ($153) {
      $154 = HEAP32[$$lcssa>>2]|0;
      $155 = (($154) + 36|0);
      $156 = HEAP32[$155>>2]|0;
      __THREW__ = 0;
      $157 = (invoke_ii($156|0,($$lcssa|0))|0);
      $158 = __THREW__; __THREW__ = 0;
      $159 = $158&1;
      if ($159) {
       break;
      } else {
       $$0$i$i$i$i11 = $157;
      }
     } else {
      $160 = HEAP32[$150>>2]|0;
      $$0$i$i$i$i11 = $160;
     }
     $161 = ($$0$i$i$i$i11|0)==(-1);
     if ($161) {
      HEAP32[$__b>>2] = 0;
      $186 = 1;
      label = 79;
      break;
     } else {
      $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i14 = ($$pre$i$i$i13|0)==(0|0);
      $186 = $phitmp$i$i$i14;
      label = 79;
      break;
     }
    }
   } while(0);
   L101: do {
    if ((label|0) == 79) {
     $162 = ($$pre$i3$i$i19$lcssa|0)==(0|0);
     do {
      if ($162) {
       label = 85;
      } else {
       $163 = (($$pre$i3$i$i19$lcssa) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = (($$pre$i3$i$i19$lcssa) + 16|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($164|0)==($166|0);
       if ($167) {
        $168 = HEAP32[$$pre$i3$i$i19$lcssa>>2]|0;
        $169 = (($168) + 36|0);
        $170 = HEAP32[$169>>2]|0;
        __THREW__ = 0;
        $171 = (invoke_ii($170|0,($$pre$i3$i$i19$lcssa|0))|0);
        $172 = __THREW__; __THREW__ = 0;
        $173 = $172&1;
        if ($173) {
         break L101;
        } else {
         $$0$i$i1$i$i17 = $171;
        }
       } else {
        $174 = HEAP32[$164>>2]|0;
        $$0$i$i1$i$i17 = $174;
       }
       $175 = ($$0$i$i1$i$i17|0)==(-1);
       if ($175) {
        HEAP32[$__e>>2] = 0;
        label = 85;
        break;
       } else {
        if ($186) {
         break;
        } else {
         label = 87;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 85) {
      if ($186) {
       label = 87;
      }
     }
     if ((label|0) == 87) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 92;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa69 = $$0;
       label = 93;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 92) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$045 = $__ke;
     }
     else if ((label|0) == 93) {
      $$045 = $$0$lcssa69;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$045|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(544,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(545,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(546,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP16[$__v>>1] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(547,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(548,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(549,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(550,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF32[$__v>>2] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(551,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(552,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(553,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   HEAP32[$agg$result>>2] = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = (($__iob) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = (($14) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__sp) + 4|0);
      $29 = $25;
     } else {
      $23 = (($__sp) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $29 = $24;
     }
     $26 = HEAP32[$0>>2]|0;
     $27 = (($26) + 48|0);
     $28 = HEAP32[$27>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($28|0,($0|0),($29|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      HEAP32[$agg$result>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = (($39) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   HEAP32[$agg$result>>2] = $0;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa35 = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $156 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $156 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = (($__ct) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = (($50) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = (($55) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = (($55) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = (($61) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
     } else {
      $64 = (($57) + 1|0);
      HEAP32[$56>>2] = $64;
     }
     $$0$in = $__n;$$pre$i2$i$i7 = $156;$79 = $156;$__r$0$in = $54;
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = (($65) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = (($65) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = (($72) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = (($79) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (($79) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = (($86) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $$ = $93 & $tmp$i$i9;
      $94 = HEAP32[$__b>>2]|0;
      if (!($$)) {
       $$lcssa = $94;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $95 = (($94) + 12|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = (($94) + 16|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = ($96|0)==($98|0);
      if ($99) {
       $100 = HEAP32[$94>>2]|0;
       $101 = (($100) + 36|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = (FUNCTION_TABLE_ii[$102 & 1023]($94)|0);
       $$0$i$i10 = $103;
      } else {
       $104 = HEAP8[$96>>0]|0;
       $105 = $104&255;
       $$0$i$i10 = $105;
      }
      $106 = $$0$i$i10&255;
      $isascii1$i12 = ($106<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $sext24 = $$0$i$i10 << 24;
      $107 = $sext24 >> 24;
      $108 = HEAP32[$42>>2]|0;
      $109 = (($108) + ($107<<1)|0);
      $110 = HEAP16[$109>>1]|0;
      $111 = $110 & 2048;
      $112 = ($111<<16>>16)==(0);
      if ($112) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $113 = ($__r$0*10)|0;
      $114 = HEAP32[$__ct>>2]|0;
      $115 = (($114) + 36|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = (FUNCTION_TABLE_iiii[$116 & 1023]($__ct,$106,0)|0);
      $118 = $117 << 24 >> 24;
      $119 = (($118) + ($113))|0;
      $120 = HEAP32[$__b>>2]|0;
      $121 = (($120) + 12|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (($120) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($122|0)==($124|0);
      if ($125) {
       $126 = HEAP32[$120>>2]|0;
       $127 = (($126) + 40|0);
       $128 = HEAP32[$127>>2]|0;
       (FUNCTION_TABLE_ii[$128 & 1023]($120)|0);
      } else {
       $129 = (($122) + 1|0);
       HEAP32[$121>>2] = $129;
      }
      $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $119;
     }
     if ((label|0) == 54) {
      $$01 = $__r$0$lcssa35;
      break;
     }
     $130 = ($$lcssa|0)==(0|0);
     do {
      if ($130) {
       $141 = 0;
      } else {
       $131 = (($$lcssa) + 12|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = (($$lcssa) + 16|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ($132|0)==($134|0);
       if ($135) {
        $136 = HEAP32[$$lcssa>>2]|0;
        $137 = (($136) + 36|0);
        $138 = HEAP32[$137>>2]|0;
        $139 = (FUNCTION_TABLE_ii[$138 & 1023]($$lcssa)|0);
        $140 = ($139|0)==(-1);
        if ($140) {
         HEAP32[$__b>>2] = 0;
         $141 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $141 = $$pre$i$i$i16;
         break;
        }
       } else {
        $141 = $$lcssa;
       }
      }
     } while(0);
     $142 = ($141|0)==(0|0);
     $143 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($143) {
       label = 52;
      } else {
       $144 = (($$pre$i2$i$i20$lcssa) + 12|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = (($$pre$i2$i$i20$lcssa) + 16|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = ($145|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $150 = (($149) + 36|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = (FUNCTION_TABLE_ii[$151 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $153 = ($152|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         label = 52;
         break;
        }
       }
       if ($142) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 52) {
      if (!($142)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa40 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $147 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $147 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $147 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($147) {
     $148 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($147) {
   label = 16;
  } else {
   $148 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = (($45) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = (($50) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (($50) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = (($56) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
   } else {
    $59 = (($52) + 4|0);
    HEAP32[$51>>2] = $59;
   }
   $$0$in = $__n;$$pre$i3$i$i10 = $148;$73 = $148;$__r$0$in = $49;
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = (($60) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = (($60) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = (($67) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = 0;$86 = 1;
     } else {
      $75 = (($73) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = (($73) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = (($80) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$149 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $$ = $88 & $tmp$i$i13;
    $89 = HEAP32[$__b>>2]|0;
    if (!($$)) {
     $$lcssa = $89;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $90 = (($89) + 12|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($91|0)==($93|0);
    if ($94) {
     $95 = HEAP32[$89>>2]|0;
     $96 = (($95) + 36|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = (FUNCTION_TABLE_ii[$97 & 1023]($89)|0);
     $$0$i$i14 = $98;
    } else {
     $99 = HEAP32[$91>>2]|0;
     $$0$i$i14 = $99;
    }
    $100 = HEAP32[$__ct>>2]|0;
    $101 = (($100) + 12|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = (FUNCTION_TABLE_iiii[$102 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($103)) {
     $__r$0$lcssa40 = $__r$0;
     label = 65;
     break;
    }
    $104 = ($__r$0*10)|0;
    $105 = HEAP32[$__ct>>2]|0;
    $106 = (($105) + 52|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (FUNCTION_TABLE_iiii[$107 & 1023]($__ct,$$0$i$i14,0)|0);
    $109 = $108 << 24 >> 24;
    $110 = (($109) + ($104))|0;
    $111 = HEAP32[$__b>>2]|0;
    $112 = (($111) + 12|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = (($111) + 16|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ($113|0)==($115|0);
    if ($116) {
     $117 = HEAP32[$111>>2]|0;
     $118 = (($117) + 40|0);
     $119 = HEAP32[$118>>2]|0;
     (FUNCTION_TABLE_ii[$119 & 1023]($111)|0);
    } else {
     $120 = (($113) + 4|0);
     HEAP32[$112>>2] = $120;
    }
    $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $149;$__r$0$in = $110;
   }
   if ((label|0) == 65) {
    $$01 = $__r$0$lcssa40;
    break;
   }
   $121 = ($$lcssa|0)==(0|0);
   do {
    if ($121) {
     $150 = 1;
    } else {
     $122 = (($$lcssa) + 12|0);
     $123 = HEAP32[$122>>2]|0;
     $124 = (($$lcssa) + 16|0);
     $125 = HEAP32[$124>>2]|0;
     $126 = ($123|0)==($125|0);
     if ($126) {
      $127 = HEAP32[$$lcssa>>2]|0;
      $128 = (($127) + 36|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = (FUNCTION_TABLE_ii[$129 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $130;
     } else {
      $131 = HEAP32[$123>>2]|0;
      $$0$i$i$i$i17 = $131;
     }
     $132 = ($$0$i$i$i$i17|0)==(-1);
     if ($132) {
      HEAP32[$__b>>2] = 0;
      $150 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $150 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $133 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($133) {
     label = 62;
    } else {
     $134 = (($$pre$i3$i$i25$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$pre$i3$i$i25$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = (FUNCTION_TABLE_ii[$141 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $142;
     } else {
      $143 = HEAP32[$135>>2]|0;
      $$0$i$i1$i$i23 = $143;
     }
     $144 = ($$0$i$i1$i$i23|0)==(-1);
     if ($144) {
      HEAP32[$__e>>2] = 0;
      label = 62;
      break;
     } else {
      if ($150) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 62) {
    if (!($150)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $145 = HEAP32[$__err>>2]|0;
   $146 = $145 | 2;
   HEAP32[$__err>>2] = $146;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $14;
   $23 = $14;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $14;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $23 = $14;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $23 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $22 = (($23) + ($12)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($$)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$40 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$40 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $40;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = (($this) + 1|0);
    $27 = $25;
   } else {
    $23 = (($this) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $26 = (($27) + ($15)|0);
   $28 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($28)|0);
   $scevgep1 = $scevgep;
   $$0 = $__first;$__p$0 = $26;
   while(1) {
    $29 = ($$0|0)==($__last|0);
    if ($29) {
     break;
    }
    $30 = HEAP8[$$0>>0]|0;
    HEAP8[$__p$0>>0] = $30;
    $31 = (($__p$0) + 1|0);
    $32 = (($$0) + 1|0);
    $$0 = $32;$__p$0 = $31;
   }
   $scevgep2 = (($27) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $33 = (($15) + ($12))|0;
   $34 = HEAP8[$this>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $38 = $33 << 1;
    $39 = $38&255;
    HEAP8[$this>>0] = $39;
    break;
   } else {
    $37 = (($this) + 4|0);
    HEAP32[$37>>2] = $33;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$44 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$44 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $44;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = (($this) + 4|0);
    $28 = $26;
   } else {
    $24 = (($this) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $28 = $25;
   }
   $27 = (($28) + ($16<<2)|0);
   $29 = $__last;
   $30 = (($29) - ($0))|0;
   $31 = $30 >>> 2;
   $32 = (($16) + ($31))|0;
   $$0 = $__first;$__p$0 = $27;
   while(1) {
    $33 = ($$0|0)==($__last|0);
    if ($33) {
     break;
    }
    $34 = HEAP32[$$0>>2]|0;
    HEAP32[$__p$0>>2] = $34;
    $35 = (($__p$0) + 4|0);
    $36 = (($$0) + 4|0);
    $$0 = $36;$__p$0 = $35;
   }
   $scevgep = (($28) + ($32<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $37 = (($16) + ($13))|0;
   $38 = HEAP8[$this>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $42 = $37 << 1;
    $43 = $42&255;
    HEAP8[$this>>0] = $43;
    break;
   } else {
    $41 = (($this) + 4|0);
    HEAP32[$41>>2] = $37;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = (($this) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 do {
  if (!($3)) {
   __THREW__ = 0;
   invoke_vii(555,($this|0),($__n|0));
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $6 = ___cxa_find_matching_catch()|0;
    $7 = tempRet0;
    __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
    ___resumeException($6|0);
    // unreachable;
   } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5448)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7016)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7008)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7080)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7088)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7144)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5520)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5640)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5704)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5800)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6392)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6456)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6520)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6584)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6624)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6704)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6760)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6808)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5912)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6064)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6296)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6328)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6848)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6888)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = (($this) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = $$pre$i$i;
   while(1) {
    $4 = ($3|0)==($0|0);
    if ($4) {
     break;
    }
    $5 = (($3) + -4|0);
    HEAP32[$2>>2] = $5;
    $3 = $5;
   }
   $6 = (($this) + 16|0);
   $7 = ($6|0)==($0|0);
   if ($7) {
    $8 = (($this) + 128|0);
    HEAP8[$8>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = $1;
   while(1) {
    $12 = ($11|0)==($10|0);
    if ($12) {
     break;
    }
    $13 = (($11) + -4|0);
    HEAP32[$0>>2] = $13;
    $11 = $13;
   }
  }
 }
 return;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $9 = (($3) + ($id<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)!=(0|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 return ($12|0);
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__vp) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = (($0) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $10 = $frm_end;
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $11 = $$pre;
  L6: while(1) {
   $12 = ($11>>>0)<($frm_end>>>0);
   if (!($12)) {
    $$0$ph = 0;
    break;
   }
   $13 = HEAP16[$11>>1]|0;
   $14 = $13&65535;
   $15 = ($14>>>0)>($Maxcode>>>0);
   if ($15) {
    $$0$ph = 2;
    break;
   }
   $16 = ($13&65535)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $13&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($13&65535)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $14 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $14 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($13&65535)<(55296);
     if ($37) {
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = $38;
      $40 = (($$pre1) - ($39))|0;
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $14 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $14 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $14 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     }
     $57 = ($13&65535)<(56320);
     if (!($57)) {
      $109 = ($13&65535)<(57344);
      if ($109) {
       $$0$ph = 2;
       break L6;
      }
      $110 = HEAP32[$to_nxt>>2]|0;
      $111 = $110;
      $112 = (($$pre1) - ($111))|0;
      $113 = ($112|0)<(3);
      if ($113) {
       $$0$ph = 1;
       break L6;
      }
      $114 = $14 >>> 12;
      $115 = $114 | 224;
      $116 = $115&255;
      $117 = (($110) + 1|0);
      HEAP32[$to_nxt>>2] = $117;
      HEAP8[$110>>0] = $116;
      $118 = $14 >>> 6;
      $119 = $118 & 63;
      $120 = $119 | 128;
      $121 = $120&255;
      $122 = HEAP32[$to_nxt>>2]|0;
      $123 = (($122) + 1|0);
      HEAP32[$to_nxt>>2] = $123;
      HEAP8[$122>>0] = $121;
      $124 = $14 & 63;
      $125 = $124 | 128;
      $126 = $125&255;
      $127 = HEAP32[$to_nxt>>2]|0;
      $128 = (($127) + 1|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP8[$127>>0] = $126;
      break;
     }
     $58 = $11;
     $59 = (($10) - ($58))|0;
     $60 = ($59|0)<(4);
     if ($60) {
      $$0$ph = 1;
      break L6;
     }
     $61 = (($11) + 2|0);
     $62 = HEAP16[$61>>1]|0;
     $63 = $62&65535;
     $64 = $63 & 64512;
     $65 = ($64|0)==(56320);
     if (!($65)) {
      $$0$ph = 2;
      break L6;
     }
     $66 = HEAP32[$to_nxt>>2]|0;
     $67 = $66;
     $68 = (($$pre1) - ($67))|0;
     $69 = ($68|0)<(4);
     if ($69) {
      $$0$ph = 1;
      break L6;
     }
     $70 = $14 & 960;
     $71 = $70 << 10;
     $72 = (($71) + 65536)|0;
     $73 = $14 << 10;
     $74 = $73 & 64512;
     $75 = $72 | $74;
     $76 = $63 & 1023;
     $77 = $75 | $76;
     $78 = ($77>>>0)>($Maxcode>>>0);
     if ($78) {
      $$0$ph = 2;
      break L6;
     }
     HEAP32[$frm_nxt>>2] = $61;
     $79 = $70 >>> 6;
     $80 = (($79) + 1)|0;
     $81 = $80 >>> 2;
     $82 = $81 | 240;
     $83 = $82&255;
     $84 = HEAP32[$to_nxt>>2]|0;
     $85 = (($84) + 1|0);
     HEAP32[$to_nxt>>2] = $85;
     HEAP8[$84>>0] = $83;
     $86 = $80 << 4;
     $87 = $86 & 48;
     $88 = $14 >>> 2;
     $89 = $88 & 15;
     $90 = $89 | $87;
     $91 = $90 | 128;
     $92 = $91&255;
     $93 = HEAP32[$to_nxt>>2]|0;
     $94 = (($93) + 1|0);
     HEAP32[$to_nxt>>2] = $94;
     HEAP8[$93>>0] = $92;
     $95 = $14 << 4;
     $96 = $95 & 48;
     $97 = $63 >>> 6;
     $98 = $97 & 15;
     $99 = $96 | $98;
     $100 = $99 | 128;
     $101 = $100&255;
     $102 = HEAP32[$to_nxt>>2]|0;
     $103 = (($102) + 1|0);
     HEAP32[$to_nxt>>2] = $103;
     HEAP8[$102>>0] = $101;
     $104 = $63 & 63;
     $105 = $104 | 128;
     $106 = $105&255;
     $107 = HEAP32[$to_nxt>>2]|0;
     $108 = (($107) + 1|0);
     HEAP32[$to_nxt>>2] = $108;
     HEAP8[$107>>0] = $106;
    }
   } while(0);
   $129 = HEAP32[$frm_nxt>>2]|0;
   $130 = (($129) + 2|0);
   HEAP32[$frm_nxt>>2] = $130;
   $11 = $130;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 L9: while(1) {
  $17 = HEAP32[$frm_nxt>>2]|0;
  $18 = ($17>>>0)<($frm_end>>>0);
  if (!($18)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = ($19>>>0)<($to_end>>>0);
  if (!($20)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17>>0]|0;
  $22 = $21&255;
  $23 = ($22>>>0)>($Maxcode>>>0);
  if ($23) {
   $$0$ph = 2;
   label = 42;
   break;
  }
  $24 = ($21<<24>>24)>(-1);
  do {
   if ($24) {
    $25 = $21&255;
    HEAP16[$19>>1] = $25;
    $26 = (($17) + 1|0);
    HEAP32[$frm_nxt>>2] = $26;
   } else {
    $27 = ($21&255)<(194);
    if ($27) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $28 = ($21&255)<(224);
    if ($28) {
     $29 = $17;
     $30 = (($$pre$phiZ2D) - ($29))|0;
     $31 = ($30|0)<(2);
     if ($31) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $32 = (($17) + 1|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = $33&255;
     $35 = $34 & 192;
     $36 = ($35|0)==(128);
     if (!($36)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $37 = $22 << 6;
     $38 = $37 & 1984;
     $39 = $34 & 63;
     $40 = $39 | $38;
     $41 = ($40>>>0)>($Maxcode>>>0);
     if ($41) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $42 = $40&65535;
     HEAP16[$19>>1] = $42;
     $43 = (($17) + 2|0);
     HEAP32[$frm_nxt>>2] = $43;
     break;
    }
    $44 = ($21&255)<(240);
    if ($44) {
     $45 = $17;
     $46 = (($$pre$phiZ2D) - ($45))|0;
     $47 = ($46|0)<(3);
     if ($47) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $48 = (($17) + 1|0);
     $49 = HEAP8[$48>>0]|0;
     $50 = (($17) + 2|0);
     $51 = HEAP8[$50>>0]|0;
     if ((($22|0) == 224)) {
      $52 = $49 & -32;
      $53 = ($52<<24>>24)==(-96);
      if (!($53)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else if ((($22|0) == 237)) {
      $54 = $49 & -32;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else {
      $56 = $49 & -64;
      $57 = ($56<<24>>24)==(-128);
      if (!($57)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     }
     $58 = $51&255;
     $59 = $58 & 192;
     $60 = ($59|0)==(128);
     if (!($60)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $61 = $22 << 12;
     $62 = $49&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $58 & 63;
     $67 = $65 | $66;
     $68 = $67 & 65535;
     $69 = ($68>>>0)>($Maxcode>>>0);
     if ($69) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $70 = $67&65535;
     HEAP16[$19>>1] = $70;
     $71 = (($17) + 3|0);
     HEAP32[$frm_nxt>>2] = $71;
     break;
    }
    $72 = ($21&255)<(245);
    if (!($72)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $73 = $17;
    $74 = (($$pre$phiZ2D) - ($73))|0;
    $75 = ($74|0)<(4);
    if ($75) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $76 = (($17) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($17) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($17) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($22|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if ((($22|0) == 244)) {
     $83 = $77 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else {
     $85 = $77 & -64;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    }
    $87 = $79&255;
    $88 = $87 & 192;
    $89 = ($88|0)==(128);
    if (!($89)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $90 = $81&255;
    $91 = $90 & 192;
    $92 = ($91|0)==(128);
    if (!($92)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $93 = $19;
    $94 = (($16) - ($93))|0;
    $95 = ($94|0)<(4);
    if ($95) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $96 = $22 & 7;
    $97 = $96 << 18;
    $98 = $77&255;
    $99 = $98 << 12;
    $100 = $99 & 258048;
    $101 = $100 | $97;
    $102 = $87 << 6;
    $103 = $102 & 4032;
    $104 = $101 | $103;
    $105 = $90 & 63;
    $106 = $104 | $105;
    $107 = ($106>>>0)>($Maxcode>>>0);
    if ($107) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $108 = $96 << 2;
    $109 = $98 >>> 4;
    $110 = $109 & 3;
    $111 = $110 | $108;
    $112 = $111 << 6;
    $113 = (($112) + 16320)|0;
    $114 = $98 << 2;
    $115 = $114 & 60;
    $116 = $87 >>> 4;
    $117 = $116 & 3;
    $118 = $115 | $117;
    $119 = $118 | $113;
    $120 = $119 | 55296;
    $121 = $120&65535;
    HEAP16[$19>>1] = $121;
    $122 = $102 & 960;
    $123 = $105 | $122;
    $124 = $123 | 56320;
    $125 = $124&65535;
    $126 = (($19) + 2|0);
    HEAP32[$to_nxt>>2] = $126;
    HEAP16[$126>>1] = $125;
    $127 = HEAP32[$frm_nxt>>2]|0;
    $128 = (($127) + 4|0);
    HEAP32[$frm_nxt>>2] = $128;
   }
  } while(0);
  $129 = HEAP32[$to_nxt>>2]|0;
  $130 = (($129) + 2|0);
  HEAP32[$to_nxt>>2] = $130;
 }
 if ((label|0) == 41) {
  $131 = $$lcssa&1;
  $$0 = $131;
 }
 else if ((label|0) == 42) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar16_t$0 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar16_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar16_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($17>>>0)>($Maxcode>>>0);
  if ($18) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $19 = ($16<<24>>24)>(-1);
  do {
   if ($19) {
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$0;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa45 = $38;
       label = 23;
       break L7;
      }
     } else if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa46 = $38;
       label = 21;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa47 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    $74 = (($mx) - ($nchar16_t$0))|0;
    $75 = ($74>>>0)<(2);
    $or$cond2 = $75 | $73;
    if ($or$cond2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $76 = (($frm_nxt$1) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($frm_nxt$1) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($17|0) == 244)) {
     $85 = $77 & -16;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else if ((($17|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$lcssa43 = $71;
      label = 33;
      break L7;
     }
    } else {
     $89 = $77 & -64;
     $90 = ($89<<24>>24)==(-128);
     if (!($90)) {
      $$lcssa44 = $71;
      label = 37;
      break L7;
     }
    }
    $93 = $79&255;
    $94 = $93 & 192;
    $95 = ($94|0)==(128);
    if (!($95)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $96 = $81&255;
    $97 = $96 & 192;
    $98 = ($97|0)==(128);
    if (!($98)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $99 = $17 << 18;
    $100 = $99 & 1835008;
    $101 = $77&255;
    $102 = $101 << 12;
    $103 = $102 & 258048;
    $104 = $103 | $100;
    $105 = $93 << 6;
    $106 = $105 & 4032;
    $107 = $104 | $106;
    $108 = $96 & 63;
    $109 = $107 | $108;
    $110 = ($109>>>0)>($Maxcode>>>0);
    if ($110) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $111 = (($nchar16_t$0) + 1)|0;
    $112 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $112;$nchar16_t$1 = $111;
   }
  } while(0);
  $113 = (($nchar16_t$1) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar16_t$0 = $113;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa46) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa45) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa47) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $83 = $frm;
  $84 = (($$lcssa43) - ($83))|0;
  $$0 = $84;
 }
 else if ((label|0) == 35) {
  $87 = $frm;
  $88 = (($$lcssa) - ($87))|0;
  $$0 = $88;
 }
 else if ((label|0) == 37) {
  $91 = $frm;
  $92 = (($$lcssa44) - ($91))|0;
  $$0 = $92;
 }
 else if ((label|0) == 43) {
  $114 = $frm_nxt$1$lcssa;
  $115 = $frm;
  $116 = (($114) - ($115))|0;
  $$0 = $116;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $10 = $$pre;
  L6: while(1) {
   $11 = ($10>>>0)<($frm_end>>>0);
   if (!($11)) {
    $$0$ph = 0;
    break;
   }
   $12 = HEAP32[$10>>2]|0;
   $13 = $12 & -2048;
   $14 = ($13|0)==(55296);
   $15 = ($12>>>0)>($Maxcode>>>0);
   $or$cond = $15 | $14;
   if ($or$cond) {
    $$0$ph = 2;
    break;
   }
   $16 = ($12>>>0)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $12&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($12>>>0)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $12 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $12 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($12>>>0)<(65536);
     $38 = HEAP32[$to_nxt>>2]|0;
     $39 = $38;
     $40 = (($$pre1) - ($39))|0;
     if ($37) {
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $12 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $12 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $12 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     } else {
      $57 = ($40|0)<(4);
      if ($57) {
       $$0$ph = 1;
       break L6;
      }
      $58 = $12 >>> 18;
      $59 = $58 | 240;
      $60 = $59&255;
      $61 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $61;
      HEAP8[$38>>0] = $60;
      $62 = $12 >>> 12;
      $63 = $62 & 63;
      $64 = $63 | 128;
      $65 = $64&255;
      $66 = HEAP32[$to_nxt>>2]|0;
      $67 = (($66) + 1|0);
      HEAP32[$to_nxt>>2] = $67;
      HEAP8[$66>>0] = $65;
      $68 = $12 >>> 6;
      $69 = $68 & 63;
      $70 = $69 | 128;
      $71 = $70&255;
      $72 = HEAP32[$to_nxt>>2]|0;
      $73 = (($72) + 1|0);
      HEAP32[$to_nxt>>2] = $73;
      HEAP8[$72>>0] = $71;
      $74 = $12 & 63;
      $75 = $74 | 128;
      $76 = $75&255;
      $77 = HEAP32[$to_nxt>>2]|0;
      $78 = (($77) + 1|0);
      HEAP32[$to_nxt>>2] = $78;
      HEAP8[$77>>0] = $76;
      break;
     }
    }
   } while(0);
   $79 = HEAP32[$frm_nxt>>2]|0;
   $80 = (($79) + 4|0);
   HEAP32[$frm_nxt>>2] = $80;
   $10 = $80;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 L9: while(1) {
  $16 = HEAP32[$frm_nxt>>2]|0;
  $17 = ($16>>>0)<($frm_end>>>0);
  if (!($17)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt>>2]|0;
  $19 = ($18>>>0)<($to_end>>>0);
  if (!($19)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16>>0]|0;
  $21 = $20&255;
  $22 = ($20<<24>>24)>(-1);
  do {
   if ($22) {
    $23 = ($21>>>0)>($Maxcode>>>0);
    if ($23) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $21;
    $24 = (($16) + 1|0);
    HEAP32[$frm_nxt>>2] = $24;
   } else {
    $25 = ($20&255)<(194);
    if ($25) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $26 = ($20&255)<(224);
    if ($26) {
     $27 = $16;
     $28 = (($$pre$phiZ2D) - ($27))|0;
     $29 = ($28|0)<(2);
     if ($29) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $30 = (($16) + 1|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = $32 & 192;
     $34 = ($33|0)==(128);
     if (!($34)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $35 = $21 << 6;
     $36 = $35 & 1984;
     $37 = $32 & 63;
     $38 = $37 | $36;
     $39 = ($38>>>0)>($Maxcode>>>0);
     if ($39) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $38;
     $40 = (($16) + 2|0);
     HEAP32[$frm_nxt>>2] = $40;
     break;
    }
    $41 = ($20&255)<(240);
    if ($41) {
     $42 = $16;
     $43 = (($$pre$phiZ2D) - ($42))|0;
     $44 = ($43|0)<(3);
     if ($44) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $45 = (($16) + 1|0);
     $46 = HEAP8[$45>>0]|0;
     $47 = (($16) + 2|0);
     $48 = HEAP8[$47>>0]|0;
     if ((($21|0) == 237)) {
      $51 = $46 & -32;
      $52 = ($51<<24>>24)==(-128);
      if (!($52)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else if ((($21|0) == 224)) {
      $49 = $46 & -32;
      $50 = ($49<<24>>24)==(-96);
      if (!($50)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else {
      $53 = $46 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     }
     $55 = $48&255;
     $56 = $55 & 192;
     $57 = ($56|0)==(128);
     if (!($57)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $58 = $21 << 12;
     $59 = $58 & 61440;
     $60 = $46&255;
     $61 = $60 << 6;
     $62 = $61 & 4032;
     $63 = $62 | $59;
     $64 = $55 & 63;
     $65 = $63 | $64;
     $66 = ($65>>>0)>($Maxcode>>>0);
     if ($66) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $65;
     $67 = (($16) + 3|0);
     HEAP32[$frm_nxt>>2] = $67;
     break;
    }
    $68 = ($20&255)<(245);
    if (!($68)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $69 = $16;
    $70 = (($$pre$phiZ2D) - ($69))|0;
    $71 = ($70|0)<(4);
    if ($71) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $72 = (($16) + 1|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = (($16) + 2|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($16) + 3|0);
    $77 = HEAP8[$76>>0]|0;
    if ((($21|0) == 240)) {
     $$off = (($73) + 112)<<24>>24;
     $78 = ($$off&255)<(48);
     if (!($78)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if ((($21|0) == 244)) {
     $79 = $73 & -16;
     $80 = ($79<<24>>24)==(-128);
     if (!($80)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else {
     $81 = $73 & -64;
     $82 = ($81<<24>>24)==(-128);
     if (!($82)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    }
    $83 = $75&255;
    $84 = $83 & 192;
    $85 = ($84|0)==(128);
    if (!($85)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $86 = $77&255;
    $87 = $86 & 192;
    $88 = ($87|0)==(128);
    if (!($88)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $89 = $21 << 18;
    $90 = $89 & 1835008;
    $91 = $73&255;
    $92 = $91 << 12;
    $93 = $92 & 258048;
    $94 = $93 | $90;
    $95 = $83 << 6;
    $96 = $95 & 4032;
    $97 = $94 | $96;
    $98 = $86 & 63;
    $99 = $97 | $98;
    $100 = ($99>>>0)>($Maxcode>>>0);
    if ($100) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $99;
    $101 = (($16) + 4|0);
    HEAP32[$frm_nxt>>2] = $101;
   }
  } while(0);
  $102 = HEAP32[$to_nxt>>2]|0;
  $103 = (($102) + 4|0);
  HEAP32[$to_nxt>>2] = $103;
 }
 if ((label|0) == 40) {
  $104 = $$lcssa&1;
  $$0 = $104;
 }
 else if ((label|0) == 41) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar32_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar32_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar32_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($16<<24>>24)>(-1);
  do {
   if ($18) {
    $19 = ($17>>>0)>($Maxcode>>>0);
    if ($19) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa44 = $38;
       label = 21;
       break L7;
      }
     } else if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa43 = $38;
       label = 23;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa45 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    if ($73) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $74 = (($frm_nxt$1) + 1|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($frm_nxt$1) + 2|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 3|0);
    $79 = HEAP8[$78>>0]|0;
    if ((($17|0) == 244)) {
     $83 = $75 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else if ((($17|0) == 240)) {
     $$off = (($75) + 112)<<24>>24;
     $80 = ($$off&255)<(48);
     if (!($80)) {
      $$lcssa41 = $71;
      label = 33;
      break L7;
     }
    } else {
     $87 = $75 & -64;
     $88 = ($87<<24>>24)==(-128);
     if (!($88)) {
      $$lcssa42 = $71;
      label = 37;
      break L7;
     }
    }
    $91 = $77&255;
    $92 = $91 & 192;
    $93 = ($92|0)==(128);
    if (!($93)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $94 = $79&255;
    $95 = $94 & 192;
    $96 = ($95|0)==(128);
    if (!($96)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $97 = $17 << 18;
    $98 = $97 & 1835008;
    $99 = $75&255;
    $100 = $99 << 12;
    $101 = $100 & 258048;
    $102 = $101 | $98;
    $103 = $91 << 6;
    $104 = $103 & 4032;
    $105 = $102 | $104;
    $106 = $94 & 63;
    $107 = $105 | $106;
    $108 = ($107>>>0)>($Maxcode>>>0);
    if ($108) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $109 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $109;
   }
  } while(0);
  $110 = (($nchar32_t$0) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar32_t$0 = $110;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa44) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa43) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa45) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $81 = $frm;
  $82 = (($$lcssa41) - ($81))|0;
  $$0 = $82;
 }
 else if ((label|0) == 35) {
  $85 = $frm;
  $86 = (($$lcssa) - ($85))|0;
  $$0 = $86;
 }
 else if ((label|0) == 37) {
  $89 = $frm;
  $90 = (($$lcssa42) - ($89))|0;
  $$0 = $90;
 }
 else if ((label|0) == 43) {
  $111 = $frm_nxt$1$lcssa;
  $112 = $frm;
  $113 = (($111) - ($112))|0;
  $$0 = $113;
 }
 return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = $17;
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = $18;
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = $13;
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = (($this) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = (($this) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = (($this) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = (($this) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i = $21;
  } else {
   $$0$i = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i,$13,$9);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = (($__a) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = (($this) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = (($this) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 HEAP32[$0>>2] = $12;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = (($__v) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = (($this) + 8|0);
 $17 = (($__v) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = $$pre$i$i$i;
 while(1) {
  $4 = ($3|0)==($1|0);
  if ($4) {
   break;
  }
  $5 = (($3) + -4|0);
  HEAP32[$2>>2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $8 = (($this) + 16|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($6|0);
   if ($10) {
    $11 = (($9) + 112|0);
    HEAP8[$11>>0] = 0;
    break;
   } else {
    __ZdlPv($6);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = (($3) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = (($agg$result) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = (($0) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($condition) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($code) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if ($2) {
  $3 = HEAP32[$code>>2]|0;
  $4 = ($3|0)==($condition|0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror(($ev|0))|0);
 $1 = (_strlen(($0|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $10 = $9;
   } else {
    $6 = (($what_arg) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $10 = $7;
   }
   $11 = ($10|0)==(0);
   if ($11) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,14712)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = (($ec) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = (($14) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $25 = (($0) + 1|0);
    $26 = $18&255;
    $27 = $26 >>> 1;
    $28 = $25;$29 = $27;
   } else {
    $21 = (($0) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $28 = $22;$29 = $24;
   }
   __THREW__ = 0;
   (invoke_iiii(556,($what_arg|0),($28|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$what_arg+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $34 = (($what_arg) + ($__i$0$i$i<<2)|0);
  HEAP32[$34>>2] = 0;
  $35 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $35;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen(($what_arg|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(557,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(379,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = ((14720 + 8|0));
    $7 = (($this) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14864|0))|0);
 while(1) {
  $0 = HEAP32[$flag>>2]|0;
  $1 = ($0|0)==(1);
  if (!($1)) {
   break;
  }
  (_pthread_cond_wait((14888|0),(14864|0))|0);
 }
 $2 = HEAP32[$flag>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(558,(14864|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     __THREW__ = 0;
     (invoke_ii(559,(14864|0))|0);
     $8 = __THREW__; __THREW__ = 0;
     $9 = $8&1;
     if (!($9)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(558,(14864|0))|0);
      $10 = __THREW__; __THREW__ = 0;
      $11 = $10&1;
      if (!($11)) {
       __THREW__ = 0;
       (invoke_ii(560,(14888|0))|0);
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if (!($13)) {
        break;
       }
      }
     }
    }
   }
   $14 = ___cxa_find_matching_catch(0|0)|0;
   $15 = tempRet0;
   (___cxa_begin_catch(($14|0))|0);
   __THREW__ = 0;
   (invoke_ii(559,(14864|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(558,(14864|0))|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     __THREW__ = 0;
     (invoke_ii(560,(14888|0))|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      __THREW__ = 0;
      invoke_v(561);
      $22 = __THREW__; __THREW__ = 0;
      $23 = $22&1;
      if (!($23)) {
       // unreachable;
      }
     }
    }
   }
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    ___resumeException($24|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((14864|0))|0);
  }
 } while(0);
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_id(index,a1) {
  index = index|0;
  a1=+a1;
  return FUNCTION_TABLE_id[index&511](+a1)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  FUNCTION_TABLE_viiiiid[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,+a6);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&511](a1|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=+a7;
  FUNCTION_TABLE_viiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,+a7);
}


function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  FUNCTION_TABLE_viiiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0; }
function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1); }
function b2(p0) { p0 = p0|0; nullFunc_vi(2); }
function _freelocale__wrapper(p0) { p0 = p0|0; _freelocale(p0|0); }
function b3(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(3); }
function b4(p0) { p0 = p0|0; nullFunc_ii(4);return 0; }
function _uselocale__wrapper(p0) { p0 = p0|0; return _uselocale(p0|0)|0; }
function _pthread_mutex_unlock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0; }
function _pthread_mutex_lock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_lock(p0|0)|0; }
function _pthread_cond_broadcast__wrapper(p0) { p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0; }
function b5(p0) { p0 = +p0; nullFunc_id(5);return 0; }
function b6(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(6);return 0; }
function b7(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(7);return 0; }
function _fprintf__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _fprintf(p0|0,p1|0,p2|0)|0; }
function _newlocale__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _newlocale(p0|0,p1|0,p2|0)|0; }
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(8); }
function b9(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_viiiiid(9); }
function b10(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_viiiiiiii(10); }
function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(11); }
function b12(p0) { p0 = p0|0; nullFunc_di(12);return +0; }
function b13(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(13); }
function b14(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = +p6; nullFunc_viiiiiid(14); }
function b15(p0,p1,p2,p3,p4,p5,p6,p7,p8) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_viiiiiiiii(15); }
function b16(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(16); }
function b17(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_iii(17);return 0; }
function _printf__wrapper(p0,p1) { p0 = p0|0;p1 = p1|0; return _printf(p0|0,p1|0)|0; }
function b18(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(18);return 0; }
function b19(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(19);return +0; }
function b20() { ; nullFunc_i(20);return 0; }
function ___ctype_b_loc__wrapper() { ; return ___ctype_b_loc()|0; }
function ___ctype_toupper_loc__wrapper() { ; return ___ctype_toupper_loc()|0; }
function ___ctype_tolower_loc__wrapper() { ; return ___ctype_tolower_loc()|0; }
function b21(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(21);return 0; }
function _catgets__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; return _catgets(p0|0,p1|0,p2|0,p3|0)|0; }
function b22(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(22); }
function ___cxa_throw__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0); }
function b23() { ; nullFunc_v(23); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function ___cxa_end_catch__wrapper() { ; ___cxa_end_catch(); }
function ___cxa_rethrow__wrapper() { ; ___cxa_rethrow(); }
function b24(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(24);return 0; }
function b25(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(25); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vi = [b2,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,b2,b2,b2,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,b2,b2,b2,b2,__ZNK6ikfast10IkSolutionIdE8ValidateEv,b2,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,b2,b2,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b2
,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b2,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,b2,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,b2,b2,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,b2,b2,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b2,b2,b2,b2,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b2,b2,b2,b2,b2,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b2,b2,b2,b2,b2,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b2,b2,b2,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,b2,b2,b2,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2
,b2,b2,b2,b2,b2,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b2,b2,b2,b2,b2
,b2,b2,b2,b2,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b2,b2
,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b2,b2,b2,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev
,b2,b2,b2,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,b2,b2,b2,b2
,b2,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b2,b2,b2,b2,b2,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev
,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev,b2,b2,__ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev,b2,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev,b2,b2,b2,b2
,__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev,b2,b2,b2,b2,b2,__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,b2,__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev,b2,b2,b2,b2,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev,b2,b2,b2,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev,b2,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev
,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b2,b2,b2,__ZNSt3__112__deallocateEPv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv,__ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv,b2,b2,b2,b2,b2,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_freelocale__wrapper,b2,b2,__ZNSt3__112__do_nothingEPv,b2,__ZNSt3__121__throw_runtime_errorEPKc,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_free,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv
,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b3,b3,b3,b3
,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18messagesIcE8do_closeEi,b3,b3
,b3,b3,__ZNKSt3__18messagesIwE8do_closeEi,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv
,__ZNKSt3__18numpunctIcE12do_falsenameEv,b3,b3,b3,b3,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej,b3,b3,b3,b3,b3,b3,b3
,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj,b3,__ZNSt13runtime_errorC2EPKc,b3,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_,b3,b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi,b3,b3,__ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b3,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej,b3,b3,b3,b3,b3,b3
,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE,b3,__ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj,__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE,b3,__ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b3,b3,b3,b3,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj,b3
,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_,b3,b3,b3,b3,__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj,b3,__ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_,b3,b3,b3,b3,b3,b3,b3,_abort_message,b3,b3
,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt11logic_errorC2EPKc,b3,b3,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,b3,__ZNSt3__18ios_base5clearEj,b3,__ZNKSt3__18ios_base6getlocEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,b3,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_ii = [b4,b4,b4,b4,b4,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,b4,b4,b4,b4,b4,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b4,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b4,b4,b4,b4,b4,b4,__ZNKSt9bad_alloc4whatEv
,b4,b4,__ZNKSt11logic_error4whatEv,b4,b4,__ZNKSt13runtime_error4whatEv,b4,b4,b4,b4,__ZNKSt8bad_cast4whatEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__119__iostream_category4nameEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv
,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b4,b4,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b4,b4,b4
,b4,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv
,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b4,b4,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b4,b4
,b4,b4,b4,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b4
,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv,__ZNKSt3__18ios_base5flagsEv,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv,b4,b4,__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IiEEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__Znwj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_uselocale__wrapper,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,_wcslen,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_id = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,__Z13__DOUBLE_BITSd,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b6,b6
,b6,b6,b6,b6,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_iiii = [b7,b7,b7,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_sn_write,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b7,b7,b7,b7,b7,b7,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b7,b7,b7,b7,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7
,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b7,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b7,b7,__ZNKSt3__15ctypeIcE9do_narrowEcc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE5do_isEtw,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b7,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b7,b7,__ZNKSt3__15ctypeIwE9do_narrowEwc,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_fprintf__wrapper,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_do_read,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_newlocale__wrapper,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_wcrtomb,b7,b7,_mbtowc
,_mbrlen,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_vasprintf,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b8,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_viiiiid = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b10,b10,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b10,b10,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10,b10];
var FUNCTION_TABLE_viiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,b11,b11
,b11,b11,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b11
,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b11,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b11,b11,b11
,b11,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_di = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_atof,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,b13,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx
,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b13,b13,b13,b13,b13,b13,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b13,b13,b13,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiiiiid = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b14,b14,b14,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_viiiiiiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiiiiiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b16,b16,b16,b16,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b16,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_iii = [b17,b17,b17,b17,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIcE10do_toupperEc,b17,__ZNKSt3__15ctypeIcE10do_tolowerEc,b17,__ZNKSt3__15ctypeIcE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIwE10do_toupperEw,b17,__ZNKSt3__15ctypeIwE10do_tolowerEw,b17,__ZNKSt3__15ctypeIwE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__16vectorIdNS_9allocatorIdEEEixEj,b17,b17,_printf__wrapper,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__13minIjEERKT_S3_S3_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNKSt3__16locale9use_facetERNS0_2idE,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,_isxdigit_l,_isdigit_l,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_iiiiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b18,b18,b18,b18,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b18,b18,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b18,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j
,b18,b18,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,_wcsnrtombs,b18,_mbsnrtowcs,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_diii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_i = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__Z20GetNumFreeParametersv,b20,b20,b20,b20,b20,b20,__Z12GetNumJointsv,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__115__get_nullptr_tEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,___cxa_get_globals_fast,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16__clocEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16locale5__imp12make_classicEv,b20,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b20,b20,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_iiiii = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b21,b21,b21,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b21,b21,b21,b21,b21,b21,b21,b21,_mbsrtowcs,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_catgets__wrapper,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_mbrtowc,b21
,b21,b21,b21,b21,b21,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_viii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__114error_category23default_error_conditionEi,b22,b22,__ZNKSt3__119__iostream_category7messageEi,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_,b22,b22,b22,b22,b22,___cxa_throw__wrapper,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_
,b22,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22];
var FUNCTION_TABLE_v = [b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_pure_virtual__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZL25default_terminate_handlerv,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,___cxa_end_catch__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZSt17__throw_bad_allocv,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_rethrow__wrapper,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23];
var FUNCTION_TABLE_iiiiiiiii = [b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b24,b24,b24,b24
,b24,b24,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24];
var FUNCTION_TABLE_viiii = [b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25
,b25,b25,b25,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b25,b25,b25,b25,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_id: dynCall_id, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_di: dynCall_di, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__strlen = asm["_strlen"]; asm["_strlen"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__strlen.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_id = Module["dynCall_id"] = asm["dynCall_id"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[STATIC_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



