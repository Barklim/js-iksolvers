// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB;
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 14944;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([10,85,115,97,103,101,58,32,46,47,105,107,32,114,48,48,32,114,48,49,32,114,48,50,32,116,48,32,114,49,48,32,114,49,49,32,114,49,50,32,116,49,32,114,50,48,32,114,50,49,32,114,50,50,32,116,50,32,102,114,101,101,48,32,46,46,46,10,10,82,101,116,117,114,110,115,32,116,104,101,32,105,107,32,115,111,108,117,116,105,111,110,115,32,103,105,118,101,110,32,116,104,101,32,116,114,97,110,115,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,32,101,110,100,32,101,102,102,101,99,116,111,114,32,115,112,101,99,105,102,105,101,100,32,98,121,10,97,32,51,120,51,32,114,111,116,97,116,105,111,110,32,82,32,40,114,88,88,41,44,32,97,110,100,32,97,32,51,120,49,32,116,114,97,110,115,108,97,116,105,111,110,32,40,116,88,41,46,10,84,104,101,114,101,32,97,114,101,32,37,100,32,102,114,101,101,32,112,97,114,97,109,101,116,101,114,115,32,116,104,97,116,32,104,97,118,101,32,116,111,32,98,101,32,115,112,101,99,105,102,105,101,100,46,10,10,0,0,0,70,97,105,108,101,100,32,116,111,32,103,101,116,32,105,107,32,115,111,108,117,116,105,111,110,10,0,0,0,0,0,0,70,111,117,110,100,32,37,100,32,105,107,32,115,111,108,117,116,105,111,110,115,58,10,0,115,111,108,37,100,32,40,102,114,101,101,61,37,100,41,58,32,0,0,0,0,0,0,0,37,46,49,53,102,44,32,0,10,0,0,0,0,0,0,0,71,101,116,83,111,108,117,116,105,111,110,32,105,110,100,101,120,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,76,105,115,116,73,100,69,69,0,0,0,0,78,54,105,107,102,97,115,116,49,56,73,107,83,111,108,117,116,105,111,110,76,105,115,116,66,97,115,101,73,100,69,69,0,0,0,0,0,0,0,0,96,11,0,0,208,1,0,0,136,11,0,0,176,1,0,0,248,1,0,0,0,0,0,0,0,0,0,0,128,2,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,78,54,105,107,102,97,115,116,49,48,73,107,83,111,108,117,116,105,111,110,73,100,69,69,0,0,0,0,0,0,0,0,78,54,105,107,102,97,115,116,49,52,73,107,83,111,108,117,116,105,111,110,66,97,115,101,73,100,69,69,0,0,0,0,96,11,0,0,88,2,0,0,136,11,0,0,56,2,0,0,120,2,0,0,0,0,0,0,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,0,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,0,0,0,0,50,110,100,32,105,110,100,101,120,32,62,61,32,109,97,120,32,115,111,108,117,116,105,111,110,115,32,102,111,114,32,106,111,105,110,116,0,0,0,0,102,111,102,102,115,101,116,32,119,97,115,32,110,111,116,32,102,105,110,105,116,101,0,0,0,0,0,0,120,2,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,17,0,0,0,17,0,0,0,0,0,0,0,248,1,0,0,19,0,0,0,20,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,105,107,102,97,115,116,32,101,120,99,101,112,116,105,111,110,58,32,0,0,0,0,0,0,46,47,115,111,108,118,101,114,115,47,107,117,107,97,45,107,114,53,45,114,54,53,48,45,97,114,109,46,99,112,112,0,58,0,0,0,0,0,0,0,73,75,97,116,97,110,50,0,58,32,65,115,115,101,114,116,105,111,110,32,39,0,0,0,33,105,115,110,97,110,40,102,120,41,0,0,0,0,0,0,39,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,24,5,0,0,21,0,0,0,22,0,0,0,56,0,0,0,248,255,255,255,24,5,0,0,23,0,0,0,24,0,0,0,192,255,255,255,192,255,255,255,24,5,0,0,25,0,0,0,26,0,0,0,0,0,0,0,228,3,0,0,76,4,0,0,140,4,0,0,160,4,0,0,180,4,0,0,200,4,0,0,116,4,0,0,96,4,0,0,12,4,0,0,248,3,0,0,64,0,0,0,0,0,0,0,144,20,0,0,27,0,0,0,28,0,0,0,56,0,0,0,248,255,255,255,144,20,0,0,29,0,0,0,30,0,0,0,192,255,255,255,192,255,255,255,144,20,0,0,31,0,0,0,32,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,20,0,0,33,0,0,0,34,0,0,0,192,255,255,255,192,255,255,255,0,20,0,0,35,0,0,0,36,0,0,0,56,0,0,0,0,0,0,0,72,20,0,0,37,0,0,0,38,0,0,0,200,255,255,255,200,255,255,255,72,20,0,0,39,0,0,0,40,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,136,11,0,0,208,4,0,0,144,20,0,0,0,0,0,0,0,0,0,0,176,5,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,136,11,0,0,104,5,0,0,200,19,0,0,0,0,0,0,73,75,97,99,111,115,0,0,102,32,62,32,45,49,45,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,32,38,38,32,102,32,60,32,49,43,73,75,70,65,83,84,95,83,73,78,67,79,83,95,84,72,82,69,83,72,0,0,0,0,0,0,0,73,75,97,115,105,110,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,144,8,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,136,11,0,0,128,8,0,0,24,9,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,96,11,0,0,8,9,0,0,0,0,0,0,96,9,0,0,59,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,8,10,0,0,62,0,0,0,63,0,0,0,64,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,136,11,0,0,80,9,0,0,24,9,0,0,0,0,0,0,0,0,0,0,160,9,0,0,59,0,0,0,65,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,136,11,0,0,136,9,0,0,96,9,0,0,0,0,0,0,0,0,0,0,224,9,0,0,59,0,0,0,66,0,0,0,61,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,136,11,0,0,200,9,0,0,96,9,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,136,11,0,0,240,9,0,0,24,9,0,0,0,0,0,0,0,0,0,0,104,10,0,0,67,0,0,0,68,0,0,0,69,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,96,11,0,0,64,10,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,136,11,0,0,88,10,0,0,24,9,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,136,11,0,0,120,10,0,0,80,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,136,11,0,0,176,10,0,0,160,10,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,136,11,0,0,16,11,0,0,160,10,0,0,0,0,0,0,136,11,0,0,232,10,0,0,56,11,0,0,0,0,0,0,0,0,0,0,216,10,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,0,0,0,0,208,11,0,0,70,0,0,0,78,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,136,11,0,0,168,11,0,0,216,10,0,0,0,0,0,0,0,0,0,0,48,12,0,0,70,0,0,0,82,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,136,11,0,0,8,12,0,0,216,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,128,19,0,0,87,0,0,0,88,0,0,0,0,0,0,0,200,19,0,0,89,0,0,0,90,0,0,0,43,0,0,0,44,0,0,0,91,0,0,0,92,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,93,0,0,0,51,0,0,0,94,0,0,0,53,0,0,0,95,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,19,0,0,96,0,0,0,97,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,72,19,0,0,98,0,0,0,99,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,136,11,0,0,0,19,0,0,184,57,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,96,11,0,0,48,19,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,136,11,0,0,80,19,0,0,72,19,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,96,11,0,0,144,19,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,232,11,0,0,208,19,0,0,0,0,0,0,1,0,0,0,128,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,232,11,0,0,24,20,0,0,0,0,0,0,1,0,0,0,128,19,0,0,3,244,255,255,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,232,11,0,0,96,20,0,0,3,0,0,0,2,0,0,0,0,20,0,0,2,0,0,0,72,20,0,0,2,8,0,0,0,0,0,0,248,20,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,136,11,0,0,216,20,0,0,8,58,0,0,0,0,0,0,0,0,0,0,64,35,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,35,0,0,113,0,0,0,114,0,0,0,109,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,37,0,0,118,0,0,0,119,0,0,0,109,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,208,37,0,0,131,0,0,0,132,0,0,0,109,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,38,0,0,144,0,0,0,145,0,0,0,109,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,40,39,0,0,154,0,0,0,155,0,0,0,109,0,0,0,156,0,0,0,157,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,161,0,0,0,162,0,0,0,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,224,39,0,0,164,0,0,0,165,0,0,0,109,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,248,255,255,255,224,39,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,177,0,0,0,178,0,0,0,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,128,40,0,0,180,0,0,0,181,0,0,0,109,0,0,0,182,0,0,0,183,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,248,255,255,255,128,40,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,16,41,0,0,196,0,0,0,197,0,0,0,109,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,41,0,0,199,0,0,0,200,0,0,0,109,0,0,0,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,35,0,0,202,0,0,0,203,0,0,0,109,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,35,0,0,213,0,0,0,214,0,0,0,109,0,0,0,215,0,0,0,216,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,36,0,0,224,0,0,0,225,0,0,0,109,0,0,0,226,0,0,0,227,0,0,0,228,0,0,0,229,0,0,0,230,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,36,0,0,235,0,0,0,236,0,0,0,109,0,0,0,237,0,0,0,238,0,0,0,239,0,0,0,240,0,0,0,241,0,0,0,242,0,0,0,243,0,0,0,244,0,0,0,245,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,42,0,0,246,0,0,0,247,0,0,0,109,0,0,0,248,0,0,0,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,152,42,0,0,250,0,0,0,251,0,0,0,109,0,0,0,252,0,0,0,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,40,43,0,0,254,0,0,0,255,0,0,0,109,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,184,43,0,0,2,1,0,0,3,1,0,0,109,0,0,0,4,1,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,44,0,0,6,1,0,0,7,1,0,0,109,0,0,0,8,1,0,0,9,1,0,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,44,0,0,11,1,0,0,12,1,0,0,109,0,0,0,13,1,0,0,14,1,0,0,15,1,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,24,35,0,0,16,1,0,0,17,1,0,0,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,31,0,0,18,1,0,0,19,1,0,0,109,0,0,0,20,1,0,0,21,1,0,0,22,1,0,0,23,1,0,0,24,1,0,0,25,1,0,0,26,1,0,0,27,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,32,0,0,28,1,0,0,29,1,0,0,109,0,0,0,30,1,0,0,31,1,0,0,32,1,0,0,33,1,0,0,34,1,0,0,35,1,0,0,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,34,0,0,37,1,0,0,38,1,0,0,109,0,0,0,39,1,0,0,40,1,0,0,41,1,0,0,42,1,0,0,43,1,0,0,0,0,0,0,240,34,0,0,44,1,0,0,45,1,0,0,109,0,0,0,46,1,0,0,47,1,0,0,48,1,0,0,49,1,0,0,50,1,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,40,31,0,0,51,1,0,0,52,1,0,0,109,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,136,11,0,0,16,31,0,0,120,57,0,0,0,0,0,0,0,0,0,0,184,31,0,0,51,1,0,0,53,1,0,0,109,0,0,0,54,1,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,59,1,0,0,60,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,65,1,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,96,11,0,0,152,31,0,0,232,11,0,0,128,31,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,31,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,232,11,0,0,216,31,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,31,0,0,2,0,0,0,0,0,0,0,136,32,0,0,51,1,0,0,66,1,0,0,109,0,0,0,67,1,0,0,68,1,0,0,69,1,0,0,70,1,0,0,71,1,0,0,72,1,0,0,73,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,96,11,0,0,104,32,0,0,232,11,0,0,64,32,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,128,32,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,232,11,0,0,168,32,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,128,32,0,0,2,0,0,0,0,0,0,0,72,33,0,0,51,1,0,0,74,1,0,0,109,0,0,0,75,1,0,0,76,1,0,0,77,1,0,0,78,1,0,0,79,1,0,0,80,1,0,0,81,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,232,11,0,0,32,33,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,128,32,0,0,2,0,0,0,0,0,0,0,192,33,0,0,51,1,0,0,82,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,232,11,0,0,152,33,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,128,32,0,0,2,0,0,0,0,0,0,0,56,34,0,0,51,1,0,0,90,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,136,11,0,0,16,34,0,0,192,33,0,0,0,0,0,0,0,0,0,0,160,34,0,0,51,1,0,0,91,1,0,0,109,0,0,0,83,1,0,0,84,1,0,0,85,1,0,0,86,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,136,11,0,0,120,34,0,0,192,33,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,136,11,0,0,176,34,0,0,40,31,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,136,11,0,0,216,34,0,0,40,31,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,136,11,0,0,0,35,0,0,40,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,136,11,0,0,40,35,0,0,40,31,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,136,11,0,0,80,35,0,0,40,31,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,96,11,0,0,152,35,0,0,232,11,0,0,120,35,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,232,11,0,0,216,35,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,232,11,0,0,24,36,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,35,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,232,11,0,0,88,36,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,35,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,96,11,0,0,248,36,0,0,232,11,0,0,224,36,0,0,0,0,0,0,1,0,0,0,24,37,0,0,0,0,0,0,232,11,0,0,152,36,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,32,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,232,11,0,0,160,37,0,0,0,0,0,0,1,0,0,0,24,37,0,0,0,0,0,0,232,11,0,0,88,37,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,184,37,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,96,11,0,0,80,38,0,0,232,11,0,0,56,38,0,0,0,0,0,0,1,0,0,0,112,38,0,0,0,0,0,0,232,11,0,0,240,37,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,120,38,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,232,11,0,0,248,38,0,0,0,0,0,0,1,0,0,0,112,38,0,0,0,0,0,0,232,11,0,0,176,38,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,16,39,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,96,11,0,0,144,39,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,96,11,0,0,176,39,0,0,232,11,0,0,72,39,0,0,0,0,0,0,3,0,0,0,40,31,0,0,2,0,0,0,168,39,0,0,2,0,0,0,216,39,0,0,0,8], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,96,11,0,0,80,40,0,0,232,11,0,0,8,40,0,0,0,0,0,0,3,0,0,0,40,31,0,0,2,0,0,0,168,39,0,0,2,0,0,0,120,40,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,96,11,0,0,240,40,0,0,232,11,0,0,168,40,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,8,41,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,232,11,0,0,48,41,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,8,41,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,96,11,0,0,224,41,0,0,232,11,0,0,152,41,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,0,42,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,96,11,0,0,112,42,0,0,232,11,0,0,40,42,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,144,42,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,96,11,0,0,0,43,0,0,232,11,0,0,184,42,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,32,43,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,96,11,0,0,144,43,0,0,232,11,0,0,72,43,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,176,43,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,96,11,0,0,240,43,0,0,232,11,0,0,216,43,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,8,44,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,232,11,0,0,48,44,0,0,0,0,0,0,2,0,0,0,40,31,0,0,2,0,0,0,8,44,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,96,11,0,0,88,57,0,0,58,32,0,0,0,0,0,0,0,0,0,0,184,57,0,0,92,1,0,0,93,1,0,0,64,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,136,11,0,0,160,57,0,0,8,10,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,96,11,0,0,200,57,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,136,11,0,0,240,57,0,0,232,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);




/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


   
  Module["_i64Subtract"] = _i64Subtract;

   
  Module["_i64Add"] = _i64Add;

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  
  
  
  var FS=undefined;
  
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  
  var SOCKFS=undefined;function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      // extra effort to support printf, even without a filesystem. very partial, very hackish
      var result = __formatString(format, varargs);
      var string = intArrayToString(result);
      if (string[string.length-1] === '\n') string = string.substr(0, string.length-1); // remove a final \n, as Module.print will do that
      Module.print(string);
      return result.length;
    }

  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function ___gxx_personality_v0() {
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};
  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function ___errno_location() {
      return ___errno_state;
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  var _BItoD=true;

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }



  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }


  var _asin=Math_asin;

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function _freelocale(locale) {
      _free(locale);
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  var _cos=Math_cos;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  var _atan2=Math_atan2;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _acos=Math_acos;

  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_id(x) { Module["printErr"]("Invalid function pointer called with signature 'id'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_id(index,a1) {
  try {
    return Module["dynCall_id"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_id": nullFunc_id, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiid": nullFunc_viiiiid, "nullFunc_viiiiiiii": nullFunc_viiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_di": nullFunc_di, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiid": nullFunc_viiiiiid, "nullFunc_viiiiiiiii": nullFunc_viiiiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_id": invoke_id, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "___ctype_tolower_loc": ___ctype_tolower_loc, "_uselocale": _uselocale, "_vfprintf": _vfprintf, "___ctype_b_loc": ___ctype_b_loc, "___cxa_guard_acquire": ___cxa_guard_acquire, "_atan2": _atan2, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_free_exception": ___cxa_free_exception, "_calloc": _calloc, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___ctype_toupper_loc": ___ctype_toupper_loc, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_strftime_l": _strftime_l, "_fprintf": _fprintf, "__reallyNegative": __reallyNegative, "_sbrk": _sbrk, "_acos": _acos, "_catgets": _catgets, "_newlocale": _newlocale, "___cxa_allocate_exception": ___cxa_allocate_exception, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_fileno": _fileno, "___resumeException": ___resumeException, "_asin": _asin, "_freelocale": _freelocale, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_cos": _cos, "___cxa_end_catch": ___cxa_end_catch, "___cxa_call_unexpected": ___cxa_call_unexpected, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_printf": _printf, "_pthread_key_create": _pthread_key_create, "_write": _write, "__isLeapYear": __isLeapYear, "___errno_location": ___errno_location, "_pthread_setspecific": _pthread_setspecific, "_fputc": _fputc, "___cxa_throw": ___cxa_throw, "_sysconf": _sysconf, "_send": _send, "___cxa_rethrow": ___cxa_rethrow, "_abort": _abort, "_catclose": _catclose, "_fwrite": _fwrite, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "_strerror": _strerror, "__formatString": __formatString, "_catopen": _catopen, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___cxa_guard_abort": ___cxa_guard_abort, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_id=env.nullFunc_id;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiid=env.nullFunc_viiiiid;
  var nullFunc_viiiiiiii=env.nullFunc_viiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiid=env.nullFunc_viiiiiid;
  var nullFunc_viiiiiiiii=env.nullFunc_viiiiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_id=env.invoke_id;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_di=env.invoke_di;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _uselocale=env._uselocale;
  var _vfprintf=env._vfprintf;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atan2=env._atan2;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _calloc=env._calloc;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _strftime_l=env._strftime_l;
  var _fprintf=env._fprintf;
  var __reallyNegative=env.__reallyNegative;
  var _sbrk=env._sbrk;
  var _acos=env._acos;
  var _catgets=env._catgets;
  var _newlocale=env._newlocale;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _fileno=env._fileno;
  var ___resumeException=env.___resumeException;
  var _asin=env._asin;
  var _freelocale=env._freelocale;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _cos=env._cos;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _printf=env._printf;
  var _pthread_key_create=env._pthread_key_create;
  var _write=env._write;
  var __isLeapYear=env.__isLeapYear;
  var ___errno_location=env.___errno_location;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fputc=env._fputc;
  var ___cxa_throw=env.___cxa_throw;
  var _sysconf=env._sysconf;
  var _send=env._send;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _abort=env._abort;
  var _catclose=env._catclose;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _catopen=env._catopen;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}
function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z20GetNumFreeParametersv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __Z12GetNumJointsv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE($eetrans,$eerot,$pfree,$solutions) {
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $solver = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $solver = sp;
 $0 = $eetrans;
 $1 = $eerot;
 $2 = $pfree;
 $3 = $solutions;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($solver,$4,$5,$6,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bSuccess = 0, $eerot = 0, $eetrans = 0, $i = 0, $i1 = 0, $j = 0, $sol = 0, $solutions = 0, $solvalues = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr9 = 0, $vfree = 0, $vsolfree = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer13 = sp + 136|0;
 $vararg_buffer10 = sp + 128|0;
 $vararg_buffer6 = sp + 120|0;
 $vararg_buffer3 = sp + 112|0;
 $vararg_buffer1 = sp + 104|0;
 $vararg_buffer = sp + 96|0;
 $solutions = sp + 208|0;
 $vfree = sp + 192|0;
 $eerot = sp + 24|0;
 $eetrans = sp;
 $solvalues = sp + 164|0;
 $vsolfree = sp + 144|0;
 $0 = 0;
 $1 = $argc;
 $2 = $argv;
 $6 = $1;
 $7 = (__Z20GetNumFreeParametersv()|0);
 $8 = (12 + ($7))|0;
 $9 = (($8) + 1)|0;
 $10 = ($6|0)!=($9|0);
 if ($10) {
  $11 = (__Z20GetNumFreeParametersv()|0);
  HEAP32[$vararg_buffer>>2] = $11;
  (_printf((8|0),($vararg_buffer|0))|0);
  $0 = 1;
  $224 = $0;
  STACKTOP = sp;return ($224|0);
 }
 __ZN6ikfast14IkSolutionListIdEC2Ev($solutions);
 __THREW__ = 0;
 $12 = (invoke_i(350)|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L5: do {
  if ($14) {
   label = 23;
  } else {
   __THREW__ = 0;
   invoke_vii(351,($vfree|0),($12|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    label = 23;
   } else {
    $17 = $2;
    $18 = (($17) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    __THREW__ = 0;
    $20 = (+invoke_di(352,($19|0)));
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    L8: do {
     if ($22) {
      label = 24;
     } else {
      HEAPF64[$eerot>>3] = $20;
      $23 = $2;
      $24 = (($23) + 8|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      $26 = (+invoke_di(352,($25|0)));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 24;
      } else {
       $29 = (($eerot) + 8|0);
       HEAPF64[$29>>3] = $26;
       $30 = $2;
       $31 = (($30) + 12|0);
       $32 = HEAP32[$31>>2]|0;
       __THREW__ = 0;
       $33 = (+invoke_di(352,($32|0)));
       $34 = __THREW__; __THREW__ = 0;
       $35 = $34&1;
       if ($35) {
        label = 24;
       } else {
        $36 = (($eerot) + 16|0);
        HEAPF64[$36>>3] = $33;
        $37 = $2;
        $38 = (($37) + 16|0);
        $39 = HEAP32[$38>>2]|0;
        __THREW__ = 0;
        $40 = (+invoke_di(352,($39|0)));
        $41 = __THREW__; __THREW__ = 0;
        $42 = $41&1;
        if ($42) {
         label = 24;
        } else {
         HEAPF64[$eetrans>>3] = $40;
         $43 = $2;
         $44 = (($43) + 20|0);
         $45 = HEAP32[$44>>2]|0;
         __THREW__ = 0;
         $46 = (+invoke_di(352,($45|0)));
         $47 = __THREW__; __THREW__ = 0;
         $48 = $47&1;
         if ($48) {
          label = 24;
         } else {
          $49 = (($eerot) + 24|0);
          HEAPF64[$49>>3] = $46;
          $50 = $2;
          $51 = (($50) + 24|0);
          $52 = HEAP32[$51>>2]|0;
          __THREW__ = 0;
          $53 = (+invoke_di(352,($52|0)));
          $54 = __THREW__; __THREW__ = 0;
          $55 = $54&1;
          if ($55) {
           label = 24;
          } else {
           $56 = (($eerot) + 32|0);
           HEAPF64[$56>>3] = $53;
           $57 = $2;
           $58 = (($57) + 28|0);
           $59 = HEAP32[$58>>2]|0;
           __THREW__ = 0;
           $60 = (+invoke_di(352,($59|0)));
           $61 = __THREW__; __THREW__ = 0;
           $62 = $61&1;
           if ($62) {
            label = 24;
           } else {
            $63 = (($eerot) + 40|0);
            HEAPF64[$63>>3] = $60;
            $64 = $2;
            $65 = (($64) + 32|0);
            $66 = HEAP32[$65>>2]|0;
            __THREW__ = 0;
            $67 = (+invoke_di(352,($66|0)));
            $68 = __THREW__; __THREW__ = 0;
            $69 = $68&1;
            if ($69) {
             label = 24;
            } else {
             $70 = (($eetrans) + 8|0);
             HEAPF64[$70>>3] = $67;
             $71 = $2;
             $72 = (($71) + 36|0);
             $73 = HEAP32[$72>>2]|0;
             __THREW__ = 0;
             $74 = (+invoke_di(352,($73|0)));
             $75 = __THREW__; __THREW__ = 0;
             $76 = $75&1;
             if ($76) {
              label = 24;
             } else {
              $77 = (($eerot) + 48|0);
              HEAPF64[$77>>3] = $74;
              $78 = $2;
              $79 = (($78) + 40|0);
              $80 = HEAP32[$79>>2]|0;
              __THREW__ = 0;
              $81 = (+invoke_di(352,($80|0)));
              $82 = __THREW__; __THREW__ = 0;
              $83 = $82&1;
              if ($83) {
               label = 24;
              } else {
               $84 = (($eerot) + 56|0);
               HEAPF64[$84>>3] = $81;
               $85 = $2;
               $86 = (($85) + 44|0);
               $87 = HEAP32[$86>>2]|0;
               __THREW__ = 0;
               $88 = (+invoke_di(352,($87|0)));
               $89 = __THREW__; __THREW__ = 0;
               $90 = $89&1;
               if ($90) {
                label = 24;
               } else {
                $91 = (($eerot) + 64|0);
                HEAPF64[$91>>3] = $88;
                $92 = $2;
                $93 = (($92) + 48|0);
                $94 = HEAP32[$93>>2]|0;
                __THREW__ = 0;
                $95 = (+invoke_di(352,($94|0)));
                $96 = __THREW__; __THREW__ = 0;
                $97 = $96&1;
                if ($97) {
                 label = 24;
                } else {
                 $98 = (($eetrans) + 16|0);
                 HEAPF64[$98>>3] = $95;
                 $i = 0;
                 while(1) {
                  $99 = $i;
                  $100 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                  $101 = ($99>>>0)<($100>>>0);
                  if (!($101)) {
                   break;
                  }
                  $102 = $i;
                  $103 = (13 + ($102))|0;
                  $104 = $2;
                  $105 = (($104) + ($103<<2)|0);
                  $106 = HEAP32[$105>>2]|0;
                  __THREW__ = 0;
                  $107 = (+invoke_di(352,($106|0)));
                  $108 = __THREW__; __THREW__ = 0;
                  $109 = $108&1;
                  if ($109) {
                   label = 24;
                   break L8;
                  }
                  $110 = $i;
                  __THREW__ = 0;
                  $111 = (invoke_iii(353,($vfree|0),($110|0))|0);
                  $112 = __THREW__; __THREW__ = 0;
                  $113 = $112&1;
                  if ($113) {
                   label = 24;
                   break L8;
                  }
                  HEAPF64[$111>>3] = $107;
                  $114 = $i;
                  $115 = (($114) + 1)|0;
                  $i = $115;
                 }
                 $120 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vfree)|0);
                 $121 = ($120>>>0)>(0);
                 if ($121) {
                  __THREW__ = 0;
                  $122 = (invoke_iii(353,($vfree|0),0)|0);
                  $123 = __THREW__; __THREW__ = 0;
                  $124 = $123&1;
                  if ($124) {
                   label = 24;
                   break;
                  }
                  $125 = $122;
                 } else {
                  $125 = 0;
                 }
                 __THREW__ = 0;
                 $126 = (invoke_iiiii(354,($eetrans|0),($eerot|0),($125|0),($solutions|0))|0);
                 $127 = __THREW__; __THREW__ = 0;
                 $128 = $127&1;
                 if ($128) {
                  label = 24;
                 } else {
                  $129 = $126&1;
                  $bSuccess = $129;
                  $130 = $bSuccess;
                  $131 = $130&1;
                  L34: do {
                   if ($131) {
                    __THREW__ = 0;
                    $135 = (invoke_ii(5,($solutions|0))|0);
                    $136 = __THREW__; __THREW__ = 0;
                    $137 = $136&1;
                    if ($137) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    HEAP32[$vararg_buffer3>>2] = $135;
                    (invoke_iii(356,(304|0),($vararg_buffer3|0))|0);
                    $138 = __THREW__; __THREW__ = 0;
                    $139 = $138&1;
                    if ($139) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    $140 = (invoke_i(357)|0);
                    $141 = __THREW__; __THREW__ = 0;
                    $142 = $141&1;
                    if ($142) {
                     label = 24;
                     break L8;
                    }
                    __THREW__ = 0;
                    invoke_vii(351,($solvalues|0),($140|0));
                    $143 = __THREW__; __THREW__ = 0;
                    $144 = $143&1;
                    if ($144) {
                     label = 24;
                     break L8;
                    }
                    $i1 = 0;
                    L42: while(1) {
                     $145 = $i1;
                     __THREW__ = 0;
                     $146 = (invoke_ii(5,($solutions|0))|0);
                     $147 = __THREW__; __THREW__ = 0;
                     $148 = $147&1;
                     if ($148) {
                      label = 57;
                      break;
                     }
                     $149 = ($145>>>0)<($146>>>0);
                     if (!($149)) {
                      label = 64;
                      break;
                     }
                     $150 = $i1;
                     __THREW__ = 0;
                     $151 = (invoke_iii(4,($solutions|0),($150|0))|0);
                     $152 = __THREW__; __THREW__ = 0;
                     $153 = $152&1;
                     if ($153) {
                      label = 57;
                      break;
                     }
                     $sol = $151;
                     $154 = $i1;
                     $155 = $sol;
                     $156 = HEAP32[$155>>2]|0;
                     $157 = (($156) + 16|0);
                     $158 = HEAP32[$157>>2]|0;
                     __THREW__ = 0;
                     $159 = (invoke_ii($158|0,($155|0))|0);
                     $160 = __THREW__; __THREW__ = 0;
                     $161 = $160&1;
                     if ($161) {
                      label = 57;
                      break;
                     }
                     $162 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($159)|0);
                     __THREW__ = 0;
                     HEAP32[$vararg_buffer6>>2] = $154;
                     $vararg_ptr9 = (($vararg_buffer6) + 4|0);
                     HEAP32[$vararg_ptr9>>2] = $162;
                     (invoke_iii(356,(328|0),($vararg_buffer6|0))|0);
                     $163 = __THREW__; __THREW__ = 0;
                     $164 = $163&1;
                     if ($164) {
                      label = 57;
                      break;
                     }
                     $165 = $sol;
                     $166 = HEAP32[$165>>2]|0;
                     $167 = (($166) + 16|0);
                     $168 = HEAP32[$167>>2]|0;
                     __THREW__ = 0;
                     $169 = (invoke_ii($168|0,($165|0))|0);
                     $170 = __THREW__; __THREW__ = 0;
                     $171 = $170&1;
                     if ($171) {
                      label = 57;
                      break;
                     }
                     $172 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($169)|0);
                     __THREW__ = 0;
                     invoke_vii(351,($vsolfree|0),($172|0));
                     $173 = __THREW__; __THREW__ = 0;
                     $174 = $173&1;
                     if ($174) {
                      label = 57;
                      break;
                     }
                     $175 = $sol;
                     $176 = HEAP32[$175>>2]|0;
                     $177 = (($176) + 8|0);
                     $178 = HEAP32[$177>>2]|0;
                     __THREW__ = 0;
                     $179 = (invoke_iii(353,($solvalues|0),0)|0);
                     $180 = __THREW__; __THREW__ = 0;
                     $181 = $180&1;
                     if ($181) {
                      label = 58;
                      break;
                     }
                     $182 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($vsolfree)|0);
                     $183 = ($182>>>0)>(0);
                     if ($183) {
                      __THREW__ = 0;
                      $184 = (invoke_iii(353,($vsolfree|0),0)|0);
                      $185 = __THREW__; __THREW__ = 0;
                      $186 = $185&1;
                      if ($186) {
                       label = 58;
                       break;
                      }
                      $187 = $184;
                     } else {
                      $187 = 0;
                     }
                     __THREW__ = 0;
                     invoke_viii($178|0,($175|0),($179|0),($187|0));
                     $188 = __THREW__; __THREW__ = 0;
                     $189 = $188&1;
                     if ($189) {
                      label = 58;
                      break;
                     }
                     $j = 0;
                     while(1) {
                      $190 = $j;
                      $191 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($solvalues)|0);
                      $192 = ($190>>>0)<($191>>>0);
                      if (!($192)) {
                       break;
                      }
                      $193 = $j;
                      __THREW__ = 0;
                      $194 = (invoke_iii(353,($solvalues|0),($193|0))|0);
                      $195 = __THREW__; __THREW__ = 0;
                      $196 = $195&1;
                      if ($196) {
                       label = 58;
                       break L42;
                      }
                      $197 = +HEAPF64[$194>>3];
                      __THREW__ = 0;
                      HEAPF64[$vararg_buffer10>>3] = $197;
                      (invoke_iii(356,(352|0),($vararg_buffer10|0))|0);
                      $198 = __THREW__; __THREW__ = 0;
                      $199 = $198&1;
                      if ($199) {
                       label = 58;
                       break L42;
                      }
                      $200 = $j;
                      $201 = (($200) + 1)|0;
                      $j = $201;
                     }
                     __THREW__ = 0;
                     (invoke_iii(356,(360|0),($vararg_buffer13|0))|0);
                     $208 = __THREW__; __THREW__ = 0;
                     $209 = $208&1;
                     if ($209) {
                      label = 58;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(358,($vsolfree|0));
                     $210 = __THREW__; __THREW__ = 0;
                     $211 = $210&1;
                     if ($211) {
                      label = 57;
                      break;
                     }
                     $212 = $i1;
                     $213 = (($212) + 1)|0;
                     $i1 = $213;
                    }
                    do {
                     if ((label|0) == 57) {
                      $202 = ___cxa_find_matching_catch()|0;
                      $203 = tempRet0;
                      $3 = $202;
                      $4 = $203;
                     }
                     else if ((label|0) == 58) {
                      $204 = ___cxa_find_matching_catch()|0;
                      $205 = tempRet0;
                      $3 = $204;
                      $4 = $205;
                      __THREW__ = 0;
                      invoke_vi(358,($vsolfree|0));
                      $206 = __THREW__; __THREW__ = 0;
                      $207 = $206&1;
                      if ($207) {
                       $227 = ___cxa_find_matching_catch(0|0)|0;
                       $228 = tempRet0;
                       ___clang_call_terminate($227);
                       // unreachable;
                      } else {
                       break;
                      }
                     }
                     else if ((label|0) == 64) {
                      $0 = 0;
                      $5 = 1;
                      __THREW__ = 0;
                      invoke_vi(358,($solvalues|0));
                      $214 = __THREW__; __THREW__ = 0;
                      $215 = $214&1;
                      if ($215) {
                       label = 24;
                       break L8;
                      }
                      break L34;
                     }
                    } while(0);
                    __THREW__ = 0;
                    invoke_vi(358,($solvalues|0));
                    $216 = __THREW__; __THREW__ = 0;
                    $217 = $216&1;
                    if ($217) {
                     $227 = ___cxa_find_matching_catch(0|0)|0;
                     $228 = tempRet0;
                     ___clang_call_terminate($227);
                     // unreachable;
                    } else {
                     break L8;
                    }
                   } else {
                    $132 = HEAP32[_stderr>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii(355,($132|0),(272|0),($vararg_buffer1|0))|0);
                    $133 = __THREW__; __THREW__ = 0;
                    $134 = $133&1;
                    if ($134) {
                     label = 24;
                     break L8;
                    }
                    $0 = -1;
                    $5 = 1;
                   }
                  } while(0);
                  __THREW__ = 0;
                  invoke_vi(358,($vfree|0));
                  $218 = __THREW__; __THREW__ = 0;
                  $219 = $218&1;
                  if ($219) {
                   label = 23;
                   break L5;
                  }
                  __ZN6ikfast14IkSolutionListIdED2Ev($solutions);
                  $224 = $0;
                  STACKTOP = sp;return ($224|0);
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     $118 = ___cxa_find_matching_catch()|0;
     $119 = tempRet0;
     $3 = $118;
     $4 = $119;
    }
    __THREW__ = 0;
    invoke_vi(358,($vfree|0));
    $220 = __THREW__; __THREW__ = 0;
    $221 = $220&1;
    if ($221) {
     $227 = ___cxa_find_matching_catch(0|0)|0;
     $228 = tempRet0;
     ___clang_call_terminate($227);
     // unreachable;
    } else {
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $116 = ___cxa_find_matching_catch()|0;
  $117 = tempRet0;
  $3 = $116;
  $4 = $117;
 }
 __THREW__ = 0;
 invoke_vi(1,($solutions|0));
 $222 = __THREW__; __THREW__ = 0;
 $223 = $222&1;
 if ($223) {
  $227 = ___cxa_find_matching_catch(0|0)|0;
  $228 = tempRet0;
  ___clang_call_terminate($227);
  // unreachable;
 }
 $225 = $3;
 $226 = $4;
 ___resumeException($225|0);
 // unreachable;
 return (0)|0;
}
function __Z5IKcosd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_cos((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z5IKsind($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_sin((+$1)));
 STACKTOP = sp;return (+$2);
}
function __ZN8IKSolver9ComputeIkEPKdS1_S1_RN6ikfast18IkSolutionListBaseIdEE($this,$eetrans,$eerot,$pfree,$solutions) {
 $this = $this|0;
 $eetrans = $eetrans|0;
 $eerot = $eerot|0;
 $pfree = $pfree|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $1000 = 0.0, $1001 = 0.0, $1002 = 0.0, $1003 = 0.0, $1004 = 0.0, $1005 = 0.0, $1006 = 0.0, $1007 = 0.0, $1008 = 0.0, $1009 = 0.0, $101 = 0.0, $1010 = 0.0, $1011 = 0.0, $1012 = 0.0, $1013 = 0.0, $1014 = 0.0;
 var $1015 = 0.0, $1016 = 0.0, $1017 = 0.0, $1018 = 0.0, $1019 = 0.0, $102 = 0, $1020 = 0, $1021 = 0.0, $1022 = 0.0, $1023 = 0, $1024 = 0, $1025 = 0.0, $1026 = 0.0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0.0, $1031 = 0, $1032 = 0.0;
 var $1033 = 0.0, $1034 = 0, $1035 = 0.0, $1036 = 0, $1037 = 0.0, $1038 = 0.0, $1039 = 0, $104 = 0.0, $1040 = 0.0, $1041 = 0, $1042 = 0.0, $1043 = 0.0, $1044 = 0, $1045 = 0.0, $1046 = 0.0, $1047 = 0, $1048 = 0.0, $1049 = 0.0, $105 = 0.0, $1050 = 0;
 var $1051 = 0.0, $1052 = 0, $1053 = 0.0, $1054 = 0.0, $1055 = 0, $1056 = 0.0, $1057 = 0.0, $1058 = 0, $1059 = 0.0, $106 = 0, $1060 = 0.0, $1061 = 0.0, $1062 = 0.0, $1063 = 0.0, $1064 = 0.0, $1065 = 0.0, $1066 = 0.0, $1067 = 0.0, $1068 = 0.0, $1069 = 0.0;
 var $107 = 0.0, $1070 = 0.0, $1071 = 0.0, $1072 = 0.0, $1073 = 0.0, $1074 = 0.0, $1075 = 0, $1076 = 0.0, $1077 = 0, $1078 = 0.0, $1079 = 0.0, $108 = 0.0, $1080 = 0.0, $1081 = 0.0, $1082 = 0.0, $1083 = 0.0, $1084 = 0, $1085 = 0.0, $1086 = 0, $1087 = 0.0;
 var $1088 = 0.0, $1089 = 0.0, $109 = 0, $1090 = 0.0, $1091 = 0.0, $1092 = 0.0, $1093 = 0.0, $1094 = 0.0, $1095 = 0.0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0.0, $110 = 0, $1100 = 0.0, $1101 = 0.0, $1102 = 0.0, $1103 = 0, $1104 = 0.0;
 var $1105 = 0.0, $1106 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0, $111 = 0.0, $1110 = 0.0, $1111 = 0.0, $1112 = 0.0, $1113 = 0.0, $1114 = 0.0, $1115 = 0.0, $1116 = 0.0, $1117 = 0.0, $1118 = 0.0, $1119 = 0.0, $112 = 0.0, $1120 = 0.0, $1121 = 0.0, $1122 = 0.0;
 var $1123 = 0, $1124 = 0.0, $1125 = 0.0, $1126 = 0.0, $1127 = 0.0, $1128 = 0.0, $1129 = 0.0, $113 = 0, $1130 = 0.0, $1131 = 0.0, $1132 = 0.0, $1133 = 0.0, $1134 = 0.0, $1135 = 0.0, $1136 = 0.0, $1137 = 0.0, $1138 = 0.0, $1139 = 0.0, $114 = 0, $1140 = 0.0;
 var $1141 = 0.0, $1142 = 0.0, $1143 = 0, $1144 = 0.0, $1145 = 0.0, $1146 = 0.0, $1147 = 0.0, $1148 = 0, $1149 = 0.0, $115 = 0.0, $1150 = 0.0, $1151 = 0.0, $1152 = 0, $1153 = 0.0, $1154 = 0.0, $1155 = 0.0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0;
 var $116 = 0.0, $1160 = 0.0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0.0, $1165 = 0.0, $1166 = 0, $1167 = 0.0, $1168 = 0.0, $1169 = 0.0, $117 = 0, $1170 = 0.0, $1171 = 0, $1172 = 0.0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0.0, $1177 = 0.0;
 var $1178 = 0.0, $1179 = 0.0, $118 = 0, $1180 = 0.0, $1181 = 0.0, $1182 = 0.0, $1183 = 0.0, $1184 = 0.0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0.0, $1189 = 0.0, $119 = 0.0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0.0, $1195 = 0.0;
 var $1196 = 0.0, $1197 = 0.0, $1198 = 0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0.0, $1202 = 0, $1203 = 0.0, $1204 = 0.0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0.0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0.0, $1227 = 0, $1228 = 0, $1229 = 0.0, $123 = 0.0, $1230 = 0.0;
 var $1231 = 0.0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0.0, $1236 = 0, $1237 = 0, $1238 = 0.0, $1239 = 0.0, $124 = 0, $1240 = 0.0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0;
 var $125 = 0.0, $1250 = 0, $1251 = 0, $1252 = 0.0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0.0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0.0, $1260 = 0.0, $1261 = 0, $1262 = 0, $1263 = 0.0, $1264 = 0.0, $1265 = 0, $1266 = 0.0, $1267 = 0.0;
 var $1268 = 0, $1269 = 0.0, $127 = 0.0, $1270 = 0, $1271 = 0.0, $1272 = 0.0, $1273 = 0, $1274 = 0.0, $1275 = 0.0, $1276 = 0, $1277 = 0.0, $1278 = 0, $1279 = 0.0, $128 = 0, $1280 = 0.0, $1281 = 0, $1282 = 0.0, $1283 = 0.0, $1284 = 0, $1285 = 0.0;
 var $1286 = 0.0, $1287 = 0, $1288 = 0.0, $1289 = 0.0, $129 = 0, $1290 = 0, $1291 = 0.0, $1292 = 0.0, $1293 = 0.0, $1294 = 0.0, $1295 = 0.0, $1296 = 0.0, $1297 = 0.0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $130 = 0.0, $1300 = 0.0, $1301 = 0.0, $1302 = 0.0;
 var $1303 = 0.0, $1304 = 0.0, $1305 = 0.0, $1306 = 0.0, $1307 = 0.0, $1308 = 0.0, $1309 = 0.0, $131 = 0.0, $1310 = 0.0, $1311 = 0.0, $1312 = 0.0, $1313 = 0.0, $1314 = 0.0, $1315 = 0.0, $1316 = 0.0, $1317 = 0.0, $1318 = 0.0, $1319 = 0.0, $132 = 0, $1320 = 0.0;
 var $1321 = 0.0, $1322 = 0.0, $1323 = 0.0, $1324 = 0.0, $1325 = 0.0, $1326 = 0.0, $1327 = 0.0, $1328 = 0.0, $1329 = 0.0, $133 = 0, $1330 = 0.0, $1331 = 0.0, $1332 = 0.0, $1333 = 0.0, $1334 = 0.0, $1335 = 0.0, $1336 = 0.0, $1337 = 0.0, $1338 = 0.0, $1339 = 0.0;
 var $134 = 0.0, $1340 = 0.0, $1341 = 0, $1342 = 0.0, $1343 = 0.0, $1344 = 0.0, $1345 = 0.0, $1346 = 0.0, $1347 = 0.0, $1348 = 0.0, $1349 = 0.0, $135 = 0.0, $1350 = 0.0, $1351 = 0.0, $1352 = 0.0, $1353 = 0.0, $1354 = 0.0, $1355 = 0.0, $1356 = 0.0, $1357 = 0.0;
 var $1358 = 0.0, $1359 = 0.0, $136 = 0, $1360 = 0.0, $1361 = 0.0, $1362 = 0.0, $1363 = 0.0, $1364 = 0, $1365 = 0.0, $1366 = 0.0, $1367 = 0.0, $1368 = 0, $1369 = 0.0, $137 = 0, $1370 = 0.0, $1371 = 0.0, $1372 = 0.0, $1373 = 0.0, $1374 = 0, $1375 = 0.0;
 var $1376 = 0.0, $1377 = 0.0, $1378 = 0.0, $1379 = 0.0, $138 = 0.0, $1380 = 0.0, $1381 = 0.0, $1382 = 0.0, $1383 = 0.0, $1384 = 0.0, $1385 = 0.0, $1386 = 0.0, $1387 = 0.0, $1388 = 0.0, $1389 = 0.0, $139 = 0, $1390 = 0.0, $1391 = 0.0, $1392 = 0, $1393 = 0.0;
 var $1394 = 0.0, $1395 = 0.0, $1396 = 0.0, $1397 = 0.0, $1398 = 0.0, $1399 = 0.0, $14 = 0, $140 = 0, $1400 = 0.0, $1401 = 0.0, $1402 = 0.0, $1403 = 0.0, $1404 = 0.0, $1405 = 0.0, $1406 = 0.0, $1407 = 0.0, $1408 = 0.0, $1409 = 0.0, $141 = 0.0, $1410 = 0.0;
 var $1411 = 0.0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0.0, $1416 = 0.0, $1417 = 0.0, $1418 = 0.0, $1419 = 0, $142 = 0.0, $1420 = 0.0, $1421 = 0.0, $1422 = 0, $1423 = 0, $1424 = 0.0, $1425 = 0.0, $1426 = 0, $1427 = 0, $1428 = 0.0, $1429 = 0.0;
 var $143 = 0.0, $1430 = 0, $1431 = 0, $1432 = 0.0, $1433 = 0.0, $1434 = 0, $1435 = 0, $1436 = 0.0, $1437 = 0.0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0.0, $1445 = 0, $1446 = 0.0, $1447 = 0.0;
 var $1448 = 0, $1449 = 0.0, $145 = 0.0, $1450 = 0, $1451 = 0.0, $1452 = 0.0, $1453 = 0, $1454 = 0.0, $1455 = 0.0, $1456 = 0, $1457 = 0.0, $1458 = 0, $1459 = 0.0, $146 = 0.0, $1460 = 0.0, $1461 = 0, $1462 = 0.0, $1463 = 0.0, $1464 = 0, $1465 = 0.0;
 var $1466 = 0, $1467 = 0.0, $1468 = 0.0, $1469 = 0, $147 = 0.0, $1470 = 0.0, $1471 = 0.0, $1472 = 0.0, $1473 = 0.0, $1474 = 0.0, $1475 = 0.0, $1476 = 0.0, $1477 = 0, $1478 = 0.0, $1479 = 0.0, $148 = 0, $1480 = 0, $1481 = 0.0, $1482 = 0.0, $1483 = 0.0;
 var $1484 = 0, $1485 = 0.0, $1486 = 0.0, $1487 = 0, $1488 = 0.0, $1489 = 0.0, $149 = 0, $1490 = 0.0, $1491 = 0.0, $1492 = 0.0, $1493 = 0.0, $1494 = 0.0, $1495 = 0, $1496 = 0.0, $1497 = 0.0, $1498 = 0.0, $1499 = 0.0, $15 = 0, $150 = 0.0, $1500 = 0.0;
 var $1501 = 0.0, $1502 = 0.0, $1503 = 0.0, $1504 = 0.0, $1505 = 0.0, $1506 = 0.0, $1507 = 0.0, $1508 = 0.0, $1509 = 0.0, $151 = 0, $1510 = 0.0, $1511 = 0.0, $1512 = 0.0, $1513 = 0.0, $1514 = 0.0, $1515 = 0.0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0;
 var $152 = 0, $1520 = 0.0, $1521 = 0.0, $1522 = 0.0, $1523 = 0, $1524 = 0.0, $1525 = 0, $1526 = 0.0, $1527 = 0.0, $1528 = 0.0, $1529 = 0.0, $153 = 0.0, $1530 = 0.0, $1531 = 0.0, $1532 = 0.0, $1533 = 0.0, $1534 = 0.0, $1535 = 0, $1536 = 0.0, $1537 = 0.0;
 var $1538 = 0.0, $1539 = 0.0, $154 = 0, $1540 = 0.0, $1541 = 0.0, $1542 = 0, $1543 = 0.0, $1544 = 0.0, $1545 = 0.0, $1546 = 0, $1547 = 0.0, $1548 = 0.0, $1549 = 0.0, $155 = 0, $1550 = 0.0, $1551 = 0.0, $1552 = 0.0, $1553 = 0, $1554 = 0.0, $1555 = 0.0;
 var $1556 = 0.0, $1557 = 0.0, $1558 = 0, $1559 = 0.0, $156 = 0.0, $1560 = 0.0, $1561 = 0.0, $1562 = 0.0, $1563 = 0, $1564 = 0.0, $1565 = 0.0, $1566 = 0.0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0.0, $1571 = 0.0, $1572 = 0.0, $1573 = 0.0;
 var $1574 = 0.0, $1575 = 0.0, $1576 = 0.0, $1577 = 0.0, $1578 = 0.0, $1579 = 0.0, $158 = 0, $1580 = 0, $1581 = 0.0, $1582 = 0.0, $1583 = 0.0, $1584 = 0, $1585 = 0.0, $1586 = 0.0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0.0, $1590 = 0, $1591 = 0;
 var $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0.0, $1609 = 0;
 var $161 = 0, $1610 = 0, $1611 = 0.0, $1612 = 0.0, $1613 = 0.0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0.0, $1618 = 0, $1619 = 0, $162 = 0.0, $1620 = 0.0, $1621 = 0.0, $1622 = 0.0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0;
 var $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0.0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0.0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0.0, $1643 = 0, $1644 = 0, $1645 = 0.0;
 var $1646 = 0.0, $1647 = 0, $1648 = 0.0, $1649 = 0.0, $165 = 0.0, $1650 = 0, $1651 = 0.0, $1652 = 0, $1653 = 0.0, $1654 = 0.0, $1655 = 0, $1656 = 0.0, $1657 = 0.0, $1658 = 0, $1659 = 0.0, $166 = 0, $1660 = 0, $1661 = 0.0, $1662 = 0.0, $1663 = 0;
 var $1664 = 0.0, $1665 = 0.0, $1666 = 0, $1667 = 0.0, $1668 = 0.0, $1669 = 0, $167 = 0, $1670 = 0.0, $1671 = 0.0, $1672 = 0, $1673 = 0.0, $1674 = 0.0, $1675 = 0.0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0.0, $1680 = 0.0, $1681 = 0.0;
 var $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0.0, $169 = 0, $1690 = 0.0, $1691 = 0.0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0.0, $1696 = 0.0, $1697 = 0.0, $1698 = 0.0, $1699 = 0.0, $17 = 0.0;
 var $170 = 0, $1700 = 0.0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0, $1708 = 0.0, $1709 = 0.0, $171 = 0.0, $1710 = 0.0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0.0, $1716 = 0.0, $1717 = 0.0;
 var $1718 = 0.0, $1719 = 0.0, $172 = 0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0, $1724 = 0.0, $1725 = 0.0, $1726 = 0.0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0, $1730 = 0.0, $1731 = 0.0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0;
 var $1736 = 0.0, $1737 = 0.0, $1738 = 0.0, $1739 = 0.0, $174 = 0.0, $1740 = 0.0, $1741 = 0.0, $1742 = 0.0, $1743 = 0.0, $1744 = 0.0, $1745 = 0.0, $1746 = 0, $1747 = 0, $1748 = 0.0, $1749 = 0.0, $175 = 0, $1750 = 0.0, $1751 = 0.0, $1752 = 0.0, $1753 = 0.0;
 var $1754 = 0.0, $1755 = 0.0, $1756 = 0.0, $1757 = 0.0, $1758 = 0.0, $1759 = 0.0, $176 = 0, $1760 = 0.0, $1761 = 0.0, $1762 = 0.0, $1763 = 0.0, $1764 = 0.0, $1765 = 0.0, $1766 = 0.0, $1767 = 0.0, $1768 = 0, $1769 = 0.0, $177 = 0.0, $1770 = 0.0, $1771 = 0.0;
 var $1772 = 0.0, $1773 = 0.0, $1774 = 0, $1775 = 0.0, $1776 = 0.0, $1777 = 0.0, $1778 = 0.0, $1779 = 0.0, $178 = 0, $1780 = 0.0, $1781 = 0.0, $1782 = 0.0, $1783 = 0.0, $1784 = 0.0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0.0, $1789 = 0.0, $179 = 0;
 var $1790 = 0.0, $1791 = 0.0, $1792 = 0.0, $1793 = 0.0, $1794 = 0.0, $1795 = 0.0, $1796 = 0.0, $1797 = 0.0, $1798 = 0.0, $1799 = 0.0, $18 = 0, $180 = 0.0, $1800 = 0.0, $1801 = 0, $1802 = 0.0, $1803 = 0.0, $1804 = 0, $1805 = 0, $1806 = 0.0, $1807 = 0.0;
 var $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0.0, $1811 = 0.0, $1812 = 0, $1813 = 0, $1814 = 0.0, $1815 = 0.0, $1816 = 0, $1817 = 0, $1818 = 0.0, $1819 = 0.0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0;
 var $1826 = 0.0, $1827 = 0, $1828 = 0.0, $1829 = 0.0, $183 = 0.0, $1830 = 0, $1831 = 0.0, $1832 = 0.0, $1833 = 0, $1834 = 0.0, $1835 = 0, $1836 = 0.0, $1837 = 0.0, $1838 = 0, $1839 = 0.0, $184 = 0, $1840 = 0, $1841 = 0.0, $1842 = 0.0, $1843 = 0;
 var $1844 = 0.0, $1845 = 0, $1846 = 0.0, $1847 = 0.0, $1848 = 0, $1849 = 0.0, $185 = 0, $1850 = 0.0, $1851 = 0, $1852 = 0.0, $1853 = 0.0, $1854 = 0.0, $1855 = 0.0, $1856 = 0.0, $1857 = 0.0, $1858 = 0, $1859 = 0.0, $186 = 0.0, $1860 = 0.0, $1861 = 0.0;
 var $1862 = 0.0, $1863 = 0.0, $1864 = 0.0, $1865 = 0.0, $1866 = 0.0, $1867 = 0.0, $1868 = 0.0, $1869 = 0.0, $187 = 0.0, $1870 = 0.0, $1871 = 0.0, $1872 = 0, $1873 = 0.0, $1874 = 0.0, $1875 = 0, $1876 = 0.0, $1877 = 0.0, $1878 = 0.0, $1879 = 0, $188 = 0;
 var $1880 = 0.0, $1881 = 0.0, $1882 = 0, $1883 = 0.0, $1884 = 0.0, $1885 = 0.0, $1886 = 0, $1887 = 0.0, $1888 = 0.0, $1889 = 0.0, $189 = 0.0, $1890 = 0, $1891 = 0.0, $1892 = 0.0, $1893 = 0.0, $1894 = 0.0, $1895 = 0.0, $1896 = 0.0, $1897 = 0.0, $1898 = 0.0;
 var $1899 = 0.0, $19 = 0, $190 = 0.0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0.0, $1904 = 0.0, $1905 = 0.0, $1906 = 0.0, $1907 = 0.0, $1908 = 0, $1909 = 0.0, $191 = 0, $1910 = 0.0, $1911 = 0.0, $1912 = 0, $1913 = 0.0, $1914 = 0.0, $1915 = 0.0;
 var $1916 = 0, $1917 = 0.0, $1918 = 0.0, $1919 = 0.0, $192 = 0.0, $1920 = 0.0, $1921 = 0.0, $1922 = 0.0, $1923 = 0.0, $1924 = 0.0, $1925 = 0.0, $1926 = 0.0, $1927 = 0.0, $1928 = 0.0, $1929 = 0.0, $193 = 0.0, $1930 = 0.0, $1931 = 0, $1932 = 0.0, $1933 = 0;
 var $1934 = 0.0, $1935 = 0.0, $1936 = 0.0, $1937 = 0.0, $1938 = 0.0, $1939 = 0.0, $194 = 0, $1940 = 0.0, $1941 = 0.0, $1942 = 0.0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0.0, $1947 = 0.0, $1948 = 0.0, $1949 = 0.0, $195 = 0.0, $1950 = 0.0, $1951 = 0.0;
 var $1952 = 0.0, $1953 = 0.0, $1954 = 0.0, $1955 = 0.0, $1956 = 0, $1957 = 0.0, $1958 = 0.0, $1959 = 0.0, $196 = 0, $1960 = 0, $1961 = 0.0, $1962 = 0.0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0.0;
 var $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0.0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0.0, $1985 = 0, $1986 = 0, $1987 = 0.0, $1988 = 0.0;
 var $1989 = 0.0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0.0, $1994 = 0, $1995 = 0, $1996 = 0.0, $1997 = 0.0, $1998 = 0.0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0.0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0;
 var $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0.0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0.0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0.0, $2019 = 0, $202 = 0.0, $2020 = 0, $2021 = 0.0, $2022 = 0.0;
 var $2023 = 0, $2024 = 0.0, $2025 = 0.0, $2026 = 0, $2027 = 0.0, $2028 = 0, $2029 = 0.0, $203 = 0.0, $2030 = 0.0, $2031 = 0, $2032 = 0.0, $2033 = 0.0, $2034 = 0, $2035 = 0.0, $2036 = 0, $2037 = 0.0, $2038 = 0.0, $2039 = 0, $204 = 0.0, $2040 = 0.0;
 var $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0.0, $2045 = 0, $2046 = 0.0, $2047 = 0.0, $2048 = 0, $2049 = 0.0, $205 = 0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0.0, $2054 = 0.0, $2055 = 0.0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0;
 var $206 = 0.0, $2060 = 0.0, $2061 = 0.0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0, $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0.0, $2072 = 0.0, $2073 = 0.0, $2074 = 0.0, $2075 = 0.0, $2076 = 0.0, $2077 = 0.0;
 var $2078 = 0.0, $2079 = 0.0, $208 = 0.0, $2080 = 0.0, $2081 = 0.0, $2082 = 0.0, $2083 = 0.0, $2084 = 0.0, $2085 = 0.0, $2086 = 0.0, $2087 = 0.0, $2088 = 0.0, $2089 = 0.0, $209 = 0.0, $2090 = 0.0, $2091 = 0.0, $2092 = 0.0, $2093 = 0.0, $2094 = 0.0, $2095 = 0.0;
 var $2096 = 0.0, $2097 = 0.0, $2098 = 0.0, $2099 = 0, $21 = 0, $210 = 0.0, $2100 = 0.0, $2101 = 0.0, $2102 = 0.0, $2103 = 0.0, $2104 = 0.0, $2105 = 0.0, $2106 = 0.0, $2107 = 0.0, $2108 = 0.0, $2109 = 0.0, $211 = 0, $2110 = 0.0, $2111 = 0.0, $2112 = 0.0;
 var $2113 = 0.0, $2114 = 0.0, $2115 = 0.0, $2116 = 0.0, $2117 = 0.0, $2118 = 0.0, $2119 = 0.0, $212 = 0, $2120 = 0.0, $2121 = 0.0, $2122 = 0, $2123 = 0.0, $2124 = 0.0, $2125 = 0.0, $2126 = 0.0, $2127 = 0.0, $2128 = 0.0, $2129 = 0.0, $213 = 0.0, $2130 = 0.0;
 var $2131 = 0, $2132 = 0.0, $2133 = 0.0, $2134 = 0.0, $2135 = 0.0, $2136 = 0.0, $2137 = 0.0, $2138 = 0.0, $2139 = 0.0, $214 = 0, $2140 = 0.0, $2141 = 0.0, $2142 = 0.0, $2143 = 0, $2144 = 0.0, $2145 = 0.0, $2146 = 0.0, $2147 = 0.0, $2148 = 0.0, $2149 = 0.0;
 var $215 = 0.0, $2150 = 0, $2151 = 0.0, $2152 = 0.0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0.0, $2158 = 0.0, $2159 = 0.0, $216 = 0.0, $2160 = 0.0, $2161 = 0.0, $2162 = 0.0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0.0;
 var $2168 = 0.0, $2169 = 0.0, $217 = 0, $2170 = 0.0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0.0, $2175 = 0.0, $2176 = 0.0, $2177 = 0, $2178 = 0.0, $2179 = 0.0, $218 = 0.0, $2180 = 0, $2181 = 0, $2182 = 0.0, $2183 = 0.0, $2184 = 0, $2185 = 0;
 var $2186 = 0.0, $2187 = 0.0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0.0, $2191 = 0.0, $2192 = 0, $2193 = 0, $2194 = 0.0, $2195 = 0.0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0.0, $2200 = 0, $2201 = 0, $2202 = 0;
 var $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0.0, $2210 = 0, $2211 = 0, $222 = 0.0, $223 = 0, $224 = 0.0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0;
 var $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0.0;
 var $25 = 0, $250 = 0, $251 = 0.0, $252 = 0.0, $253 = 0, $254 = 0.0, $255 = 0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0.0;
 var $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0, $272 = 0.0, $273 = 0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0, $278 = 0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0.0, $285 = 0.0;
 var $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0, $29 = 0.0, $290 = 0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0, $296 = 0.0, $297 = 0, $298 = 0.0, $299 = 0.0, $3 = 0, $30 = 0, $300 = 0.0, $301 = 0, $302 = 0;
 var $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0.0, $307 = 0, $308 = 0.0, $309 = 0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0.0, $313 = 0, $314 = 0, $315 = 0.0, $316 = 0, $317 = 0.0, $318 = 0.0, $319 = 0, $32 = 0, $320 = 0.0;
 var $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0, $332 = 0.0, $333 = 0, $334 = 0.0, $335 = 0.0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0.0;
 var $34 = 0, $340 = 0, $341 = 0.0, $342 = 0.0, $343 = 0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0.0, $352 = 0, $353 = 0.0, $354 = 0.0, $355 = 0, $356 = 0.0, $357 = 0.0;
 var $358 = 0.0, $359 = 0.0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0.0, $371 = 0.0, $372 = 0.0, $373 = 0, $374 = 0, $375 = 0.0;
 var $376 = 0.0, $377 = 0, $378 = 0.0, $379 = 0.0, $38 = 0, $380 = 0.0, $381 = 0.0, $382 = 0.0, $383 = 0, $384 = 0, $385 = 0, $386 = 0.0, $387 = 0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0.0;
 var $394 = 0.0, $395 = 0.0, $396 = 0.0, $397 = 0.0, $398 = 0.0, $399 = 0.0, $4 = 0, $40 = 0, $400 = 0.0, $401 = 0.0, $402 = 0.0, $403 = 0, $404 = 0, $405 = 0.0, $406 = 0.0, $407 = 0, $408 = 0, $409 = 0.0, $41 = 0, $410 = 0.0;
 var $411 = 0, $412 = 0.0, $413 = 0, $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0, $421 = 0.0, $422 = 0, $423 = 0, $424 = 0.0, $425 = 0.0, $426 = 0, $427 = 0.0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0.0, $431 = 0.0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0, $456 = 0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0.0, $464 = 0, $465 = 0;
 var $466 = 0.0, $467 = 0.0, $468 = 0.0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0.0, $480 = 0.0, $481 = 0, $482 = 0, $483 = 0.0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0.0, $495 = 0.0, $496 = 0.0, $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0, $500 = 0.0;
 var $501 = 0, $502 = 0.0, $503 = 0.0, $504 = 0, $505 = 0.0, $506 = 0.0, $507 = 0.0, $508 = 0, $509 = 0, $51 = 0, $510 = 0.0, $511 = 0.0, $512 = 0, $513 = 0.0, $514 = 0.0, $515 = 0.0, $516 = 0, $517 = 0.0, $518 = 0.0, $519 = 0.0;
 var $52 = 0.0, $520 = 0, $521 = 0.0, $522 = 0.0, $523 = 0, $524 = 0.0, $525 = 0.0, $526 = 0.0, $527 = 0, $528 = 0, $529 = 0.0, $53 = 0, $530 = 0.0, $531 = 0, $532 = 0.0, $533 = 0.0, $534 = 0.0, $535 = 0, $536 = 0.0, $537 = 0.0;
 var $538 = 0.0, $539 = 0, $54 = 0, $540 = 0.0, $541 = 0.0, $542 = 0, $543 = 0.0, $544 = 0.0, $545 = 0.0, $546 = 0.0, $547 = 0.0, $548 = 0.0, $549 = 0.0, $55 = 0, $550 = 0.0, $551 = 0.0, $552 = 0.0, $553 = 0.0, $554 = 0.0, $555 = 0.0;
 var $556 = 0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0.0, $563 = 0.0, $564 = 0, $565 = 0.0, $566 = 0, $567 = 0.0, $568 = 0.0, $569 = 0.0, $57 = 0, $570 = 0, $571 = 0.0, $572 = 0.0, $573 = 0;
 var $574 = 0.0, $575 = 0, $576 = 0, $577 = 0.0, $578 = 0.0, $579 = 0, $58 = 0, $580 = 0.0, $581 = 0, $582 = 0, $583 = 0.0, $584 = 0.0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0.0, $60 = 0.0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0.0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0.0, $611 = 0.0, $612 = 0.0, $613 = 0, $614 = 0, $615 = 0, $616 = 0.0, $617 = 0, $618 = 0, $619 = 0.0, $62 = 0, $620 = 0.0, $621 = 0.0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0.0, $634 = 0, $635 = 0, $636 = 0, $637 = 0.0, $638 = 0, $639 = 0, $64 = 0.0, $640 = 0, $641 = 0.0, $642 = 0, $643 = 0, $644 = 0.0, $645 = 0;
 var $646 = 0.0, $647 = 0.0, $648 = 0, $649 = 0.0, $65 = 0, $650 = 0.0, $651 = 0, $652 = 0.0, $653 = 0, $654 = 0.0, $655 = 0.0, $656 = 0, $657 = 0.0, $658 = 0.0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0.0;
 var $664 = 0, $665 = 0.0, $666 = 0.0, $667 = 0, $668 = 0.0, $669 = 0.0, $67 = 0, $670 = 0, $671 = 0.0, $672 = 0, $673 = 0.0, $674 = 0.0, $675 = 0, $676 = 0.0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0.0, $680 = 0, $681 = 0.0;
 var $682 = 0.0, $683 = 0.0, $684 = 0.0, $685 = 0.0, $686 = 0.0, $687 = 0.0, $688 = 0.0, $689 = 0.0, $69 = 0, $690 = 0.0, $691 = 0.0, $692 = 0.0, $693 = 0.0, $694 = 0.0, $695 = 0.0, $696 = 0.0, $697 = 0, $698 = 0.0, $699 = 0.0, $7 = 0;
 var $70 = 0, $700 = 0.0, $701 = 0.0, $702 = 0.0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0.0, $707 = 0.0, $708 = 0.0, $709 = 0.0, $71 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0.0, $714 = 0.0, $715 = 0, $716 = 0.0, $717 = 0.0;
 var $718 = 0.0, $719 = 0.0, $72 = 0.0, $720 = 0.0, $721 = 0.0, $722 = 0, $723 = 0.0, $724 = 0.0, $725 = 0.0, $726 = 0, $727 = 0.0, $728 = 0.0, $729 = 0.0, $73 = 0, $730 = 0.0, $731 = 0.0, $732 = 0.0, $733 = 0.0, $734 = 0.0, $735 = 0.0;
 var $736 = 0.0, $737 = 0.0, $738 = 0.0, $739 = 0.0, $74 = 0, $740 = 0.0, $741 = 0.0, $742 = 0.0, $743 = 0.0, $744 = 0.0, $745 = 0.0, $746 = 0.0, $747 = 0.0, $748 = 0.0, $749 = 0, $75 = 0, $750 = 0.0, $751 = 0.0, $752 = 0, $753 = 0;
 var $754 = 0.0, $755 = 0.0, $756 = 0, $757 = 0, $758 = 0.0, $759 = 0, $76 = 0.0, $760 = 0.0, $761 = 0.0, $762 = 0, $763 = 0.0, $764 = 0, $765 = 0.0, $766 = 0.0, $767 = 0, $768 = 0.0, $769 = 0, $77 = 0, $770 = 0.0, $771 = 0.0;
 var $772 = 0, $773 = 0.0, $774 = 0.0, $775 = 0, $776 = 0.0, $777 = 0, $778 = 0.0, $779 = 0.0, $78 = 0, $780 = 0, $781 = 0.0, $782 = 0.0, $783 = 0, $784 = 0.0, $785 = 0.0, $786 = 0, $787 = 0.0, $788 = 0, $789 = 0.0, $79 = 0;
 var $790 = 0.0, $791 = 0, $792 = 0.0, $793 = 0.0, $794 = 0, $795 = 0.0, $796 = 0, $797 = 0.0, $798 = 0.0, $799 = 0.0, $8 = 0, $80 = 0.0, $800 = 0.0, $801 = 0.0, $802 = 0, $803 = 0.0, $804 = 0.0, $805 = 0.0, $806 = 0.0, $807 = 0.0;
 var $808 = 0.0, $809 = 0.0, $81 = 0, $810 = 0.0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0.0, $816 = 0.0, $817 = 0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0, $821 = 0.0, $822 = 0.0, $823 = 0.0, $824 = 0.0, $825 = 0.0;
 var $826 = 0.0, $827 = 0.0, $828 = 0.0, $829 = 0.0, $83 = 0.0, $830 = 0.0, $831 = 0.0, $832 = 0.0, $833 = 0.0, $834 = 0.0, $835 = 0.0, $836 = 0, $837 = 0.0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0.0, $842 = 0.0, $843 = 0;
 var $844 = 0.0, $845 = 0, $846 = 0.0, $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0, $850 = 0.0, $851 = 0.0, $852 = 0, $853 = 0.0, $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $858 = 0.0, $859 = 0.0, $86 = 0, $860 = 0, $861 = 0.0;
 var $862 = 0.0, $863 = 0.0, $864 = 0.0, $865 = 0, $866 = 0.0, $867 = 0.0, $868 = 0.0, $869 = 0, $87 = 0.0, $870 = 0.0, $871 = 0.0, $872 = 0.0, $873 = 0.0, $874 = 0.0, $875 = 0.0, $876 = 0, $877 = 0.0, $878 = 0.0, $879 = 0.0, $88 = 0;
 var $880 = 0, $881 = 0.0, $882 = 0.0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $886 = 0.0, $887 = 0, $888 = 0, $889 = 0.0, $89 = 0, $890 = 0.0, $891 = 0.0, $892 = 0, $893 = 0.0, $894 = 0.0, $895 = 0.0, $896 = 0.0, $897 = 0.0, $898 = 0.0;
 var $899 = 0.0, $9 = 0, $90 = 0, $900 = 0.0, $901 = 0.0, $902 = 0.0, $903 = 0.0, $904 = 0.0, $905 = 0.0, $906 = 0.0, $907 = 0.0, $908 = 0.0, $909 = 0.0, $91 = 0.0, $910 = 0.0, $911 = 0.0, $912 = 0.0, $913 = 0.0, $914 = 0.0, $915 = 0.0;
 var $916 = 0.0, $917 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0, $920 = 0.0, $921 = 0.0, $922 = 0.0, $923 = 0.0, $924 = 0.0, $925 = 0.0, $926 = 0.0, $927 = 0, $928 = 0.0, $929 = 0.0, $93 = 0, $930 = 0, $931 = 0, $932 = 0.0, $933 = 0.0;
 var $934 = 0, $935 = 0, $936 = 0.0, $937 = 0.0, $938 = 0, $939 = 0, $94 = 0.0, $940 = 0.0, $941 = 0, $942 = 0.0, $943 = 0.0, $944 = 0, $945 = 0.0, $946 = 0, $947 = 0.0, $948 = 0.0, $949 = 0, $95 = 0, $950 = 0.0, $951 = 0;
 var $952 = 0.0, $953 = 0.0, $954 = 0, $955 = 0.0, $956 = 0, $957 = 0.0, $958 = 0.0, $959 = 0, $96 = 0, $960 = 0.0, $961 = 0, $962 = 0.0, $963 = 0.0, $964 = 0, $965 = 0.0, $966 = 0, $967 = 0.0, $968 = 0.0, $969 = 0.0, $97 = 0.0;
 var $970 = 0.0, $971 = 0.0, $972 = 0.0, $973 = 0.0, $974 = 0.0, $975 = 0.0, $976 = 0.0, $977 = 0.0, $978 = 0.0, $979 = 0.0, $98 = 0, $980 = 0.0, $981 = 0.0, $982 = 0.0, $983 = 0.0, $984 = 0.0, $985 = 0.0, $986 = 0.0, $987 = 0.0, $988 = 0.0;
 var $989 = 0.0, $99 = 0, $990 = 0.0, $991 = 0.0, $992 = 0.0, $993 = 0.0, $994 = 0.0, $995 = 0.0, $996 = 0.0, $997 = 0.0, $998 = 0.0, $999 = 0.0, $cj0array = 0, $cj1array = 0, $cj1array11 = 0, $cj1array4 = 0, $cj2array = 0, $dummyiter = 0, $evalcond = 0, $evalcond16 = 0;
 var $evalcond9 = 0, $iij0 = 0, $iij1 = 0, $iij115 = 0, $iij18 = 0, $iij2 = 0, $ij0 = 0, $ij1 = 0, $ij114 = 0, $ij17 = 0, $ij2 = 0, $j0array = 0, $j0eval = 0, $j0valid = 0, $j1array = 0, $j1array10 = 0, $j1array3 = 0, $j1eval = 0, $j1eval1 = 0, $j1eval2 = 0;
 var $j1valid = 0, $j1valid13 = 0, $j1valid6 = 0, $j2array = 0, $j2valid = 0, $sj0array = 0, $sj1array = 0, $sj1array12 = 0, $sj1array5 = 0, $sj2array = 0, $x100 = 0.0, $x101 = 0.0, $x102 = 0.0, $x103 = 0.0, $x104 = 0.0, $x105 = 0.0, $x106 = 0.0, $x107 = 0.0, $x108 = 0.0, $x470 = 0.0;
 var $x471 = 0.0, $x472 = 0.0, $x473 = 0.0, $x474 = 0.0, $x475 = 0.0, $x476 = 0, $x477 = 0, $x478 = 0.0, $x479 = 0.0, $x480 = 0.0, $x481 = 0.0, $x482 = 0.0, $x483 = 0.0, $x484 = 0.0, $x485 = 0.0, $x486 = 0.0, $x487 = 0.0, $x488 = 0.0, $x489 = 0.0, $x490 = 0.0;
 var $x491 = 0.0, $x492 = 0.0, $x493 = 0.0, $x494 = 0.0, $x495 = 0.0, $x496 = 0.0, $x497 = 0, $x498 = 0, $x499 = 0.0, $x500 = 0.0, $x501 = 0.0, $x502 = 0.0, $x503 = 0.0, $x504 = 0.0, $x505 = 0.0, $x506 = 0.0, $x507 = 0.0, $x508 = 0.0, $x509 = 0.0, $x510 = 0.0;
 var $x54 = 0.0, $x55 = 0.0, $x56 = 0.0, $x57 = 0.0, $x58 = 0, $x59 = 0.0, $x60 = 0.0, $x61 = 0.0, $x62 = 0.0, $x63 = 0.0, $x64 = 0.0, $x65 = 0.0, $x66 = 0.0, $x67 = 0.0, $x68 = 0.0, $x69 = 0.0, $x70 = 0.0, $x71 = 0.0, $x72 = 0.0, $x73 = 0.0;
 var $x74 = 0.0, $x75 = 0.0, $x76 = 0.0, $x77 = 0.0, $x78 = 0.0, $x79 = 0.0, $x80 = 0.0, $x81 = 0.0, $x82 = 0.0, $x83 = 0.0, $x84 = 0.0, $x85 = 0.0, $x86 = 0.0, $x87 = 0.0, $x88 = 0.0, $x89 = 0.0, $x90 = 0.0, $x91 = 0.0, $x92 = 0.0, $x93 = 0.0;
 var $x94 = 0.0, $x95 = 0, $x96 = 0, $x97 = 0.0, $x98 = 0.0, $x99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1248|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j0eval = sp + 1144|0;
 $j0array = sp + 1128|0;
 $cj0array = sp + 1112|0;
 $sj0array = sp + 1096|0;
 $j0valid = sp + 1246|0;
 $x58 = sp + 1080|0;
 $j2array = sp + 1056|0;
 $cj2array = sp + 1040|0;
 $sj2array = sp + 1024|0;
 $j2valid = sp + 1244|0;
 $j1eval = sp + 1000|0;
 $j1eval1 = sp + 912|0;
 $j1eval2 = sp + 816|0;
 $j1array = sp + 736|0;
 $cj1array = sp + 728|0;
 $sj1array = sp + 720|0;
 $j1valid = sp + 1242|0;
 $x95 = sp + 640|0;
 $x96 = sp + 624|0;
 $evalcond = sp + 584|0;
 $j1array3 = sp + 480|0;
 $cj1array4 = sp + 472|0;
 $sj1array5 = sp + 464|0;
 $j1valid6 = sp + 1241|0;
 $x476 = sp + 400|0;
 $x477 = sp + 384|0;
 $evalcond9 = sp + 344|0;
 $j1array10 = sp + 240|0;
 $cj1array11 = sp + 232|0;
 $sj1array12 = sp + 224|0;
 $j1valid13 = sp + 1240|0;
 $x497 = sp + 152|0;
 $x498 = sp + 136|0;
 $evalcond16 = sp + 96|0;
 $0 = $this;
 $1 = $eetrans;
 $2 = $eerot;
 $3 = $pfree;
 $4 = $solutions;
 $5 = $0;
 $6 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 HEAPF64[$5>>3] = $6;
 $7 = (($5) + 536|0);
 HEAP8[$7>>0] = -1;
 $8 = (($5) + 536|0);
 $9 = (($8) + 1|0);
 HEAP8[$9>>0] = -1;
 $10 = (($5) + 538|0);
 HEAP8[$10>>0] = -1;
 $11 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $12 = (($5) + 40|0);
 HEAPF64[$12>>3] = $11;
 $13 = (($5) + 539|0);
 HEAP8[$13>>0] = -1;
 $14 = (($5) + 539|0);
 $15 = (($14) + 1|0);
 HEAP8[$15>>0] = -1;
 $16 = (($5) + 541|0);
 HEAP8[$16>>0] = -1;
 $17 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $18 = (($5) + 80|0);
 HEAPF64[$18>>3] = $17;
 $19 = (($5) + 542|0);
 HEAP8[$19>>0] = -1;
 $20 = (($5) + 542|0);
 $21 = (($20) + 1|0);
 HEAP8[$21>>0] = -1;
 $22 = (($5) + 544|0);
 HEAP8[$22>>0] = -1;
 $23 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $24 = (($5) + 120|0);
 HEAPF64[$24>>3] = $23;
 $25 = (($5) + 545|0);
 HEAP8[$25>>0] = -1;
 $26 = (($5) + 545|0);
 $27 = (($26) + 1|0);
 HEAP8[$27>>0] = -1;
 $28 = (($5) + 547|0);
 HEAP8[$28>>0] = -1;
 $29 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $30 = (($5) + 160|0);
 HEAPF64[$30>>3] = $29;
 $31 = (($5) + 548|0);
 HEAP8[$31>>0] = -1;
 $32 = (($5) + 548|0);
 $33 = (($32) + 1|0);
 HEAP8[$33>>0] = -1;
 $34 = (($5) + 550|0);
 HEAP8[$34>>0] = -1;
 $35 = (+__ZNSt3__114numeric_limitsIdE9quiet_NaNEv());
 $36 = (($5) + 200|0);
 HEAPF64[$36>>3] = $35;
 $37 = (($5) + 551|0);
 HEAP8[$37>>0] = -1;
 $38 = (($5) + 551|0);
 $39 = (($38) + 1|0);
 HEAP8[$39>>0] = -1;
 $40 = (($5) + 553|0);
 HEAP8[$40>>0] = -1;
 $dummyiter = 0;
 while(1) {
  $41 = $dummyiter;
  $42 = ($41|0)<(1);
  if (!($42)) {
   break;
  }
  $43 = $4;
  $44 = HEAP32[$43>>2]|0;
  $45 = (($44) + 20|0);
  $46 = HEAP32[$45>>2]|0;
  FUNCTION_TABLE_vi[$46 & 1023]($43);
  $47 = $2;
  $48 = +HEAPF64[$47>>3];
  $49 = (($5) + 248|0);
  HEAPF64[$49>>3] = $48;
  $50 = $2;
  $51 = (($50) + 8|0);
  $52 = +HEAPF64[$51>>3];
  $53 = (($5) + 272|0);
  HEAPF64[$53>>3] = $52;
  $54 = $2;
  $55 = (($54) + 16|0);
  $56 = +HEAPF64[$55>>3];
  $57 = (($5) + 296|0);
  HEAPF64[$57>>3] = $56;
  $58 = $2;
  $59 = (($58) + 24|0);
  $60 = +HEAPF64[$59>>3];
  $61 = (($5) + 320|0);
  HEAPF64[$61>>3] = $60;
  $62 = $2;
  $63 = (($62) + 32|0);
  $64 = +HEAPF64[$63>>3];
  $65 = (($5) + 344|0);
  HEAPF64[$65>>3] = $64;
  $66 = $2;
  $67 = (($66) + 40|0);
  $68 = +HEAPF64[$67>>3];
  $69 = (($5) + 368|0);
  HEAPF64[$69>>3] = $68;
  $70 = $2;
  $71 = (($70) + 48|0);
  $72 = +HEAPF64[$71>>3];
  $73 = (($5) + 392|0);
  HEAPF64[$73>>3] = $72;
  $74 = $2;
  $75 = (($74) + 56|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (($5) + 416|0);
  HEAPF64[$77>>3] = $76;
  $78 = $2;
  $79 = (($78) + 64|0);
  $80 = +HEAPF64[$79>>3];
  $81 = (($5) + 440|0);
  HEAPF64[$81>>3] = $80;
  $82 = $1;
  $83 = +HEAPF64[$82>>3];
  $84 = (($5) + 464|0);
  HEAPF64[$84>>3] = $83;
  $85 = $1;
  $86 = (($85) + 8|0);
  $87 = +HEAPF64[$86>>3];
  $88 = (($5) + 488|0);
  HEAPF64[$88>>3] = $87;
  $89 = $1;
  $90 = (($89) + 16|0);
  $91 = +HEAPF64[$90>>3];
  $92 = (($5) + 512|0);
  HEAPF64[$92>>3] = $91;
  $93 = (($5) + 296|0);
  $94 = +HEAPF64[$93>>3];
  $95 = (($5) + 240|0);
  HEAPF64[$95>>3] = $94;
  $96 = (($5) + 272|0);
  $97 = +HEAPF64[$96>>3];
  $98 = (($5) + 264|0);
  HEAPF64[$98>>3] = $97;
  $99 = (($5) + 248|0);
  $100 = +HEAPF64[$99>>3];
  $101 = -1.0 * $100;
  $102 = (($5) + 288|0);
  HEAPF64[$102>>3] = $101;
  $103 = (($5) + 248|0);
  $104 = +HEAPF64[$103>>3];
  $105 = -0.051999999999999998 * $104;
  $106 = (($5) + 464|0);
  $107 = +HEAPF64[$106>>3];
  $108 = $105 + $107;
  $109 = (($5) + 456|0);
  HEAPF64[$109>>3] = $108;
  $110 = (($5) + 368|0);
  $111 = +HEAPF64[$110>>3];
  $112 = -1.0 * $111;
  $113 = (($5) + 312|0);
  HEAPF64[$113>>3] = $112;
  $114 = (($5) + 344|0);
  $115 = +HEAPF64[$114>>3];
  $116 = -1.0 * $115;
  $117 = (($5) + 336|0);
  HEAPF64[$117>>3] = $116;
  $118 = (($5) + 320|0);
  $119 = +HEAPF64[$118>>3];
  $120 = (($5) + 360|0);
  HEAPF64[$120>>3] = $119;
  $121 = (($5) + 488|0);
  $122 = +HEAPF64[$121>>3];
  $123 = -1.0 * $122;
  $124 = (($5) + 320|0);
  $125 = +HEAPF64[$124>>3];
  $126 = 0.051999999999999998 * $125;
  $127 = $123 + $126;
  $128 = (($5) + 480|0);
  HEAPF64[$128>>3] = $127;
  $129 = (($5) + 440|0);
  $130 = +HEAPF64[$129>>3];
  $131 = -1.0 * $130;
  $132 = (($5) + 384|0);
  HEAPF64[$132>>3] = $131;
  $133 = (($5) + 416|0);
  $134 = +HEAPF64[$133>>3];
  $135 = -1.0 * $134;
  $136 = (($5) + 408|0);
  HEAPF64[$136>>3] = $135;
  $137 = (($5) + 392|0);
  $138 = +HEAPF64[$137>>3];
  $139 = (($5) + 432|0);
  HEAPF64[$139>>3] = $138;
  $140 = (($5) + 512|0);
  $141 = +HEAPF64[$140>>3];
  $142 = -1.0 * $141;
  $143 = 0.33500000000000002 + $142;
  $144 = (($5) + 392|0);
  $145 = +HEAPF64[$144>>3];
  $146 = 0.051999999999999998 * $145;
  $147 = $143 + $146;
  $148 = (($5) + 504|0);
  HEAPF64[$148>>3] = $147;
  $149 = (($5) + 240|0);
  $150 = +HEAPF64[$149>>3];
  $151 = (($5) + 248|0);
  HEAPF64[$151>>3] = $150;
  $152 = (($5) + 264|0);
  $153 = +HEAPF64[$152>>3];
  $154 = (($5) + 272|0);
  HEAPF64[$154>>3] = $153;
  $155 = (($5) + 288|0);
  $156 = +HEAPF64[$155>>3];
  $157 = (($5) + 296|0);
  HEAPF64[$157>>3] = $156;
  $158 = (($5) + 312|0);
  $159 = +HEAPF64[$158>>3];
  $160 = (($5) + 320|0);
  HEAPF64[$160>>3] = $159;
  $161 = (($5) + 336|0);
  $162 = +HEAPF64[$161>>3];
  $163 = (($5) + 344|0);
  HEAPF64[$163>>3] = $162;
  $164 = (($5) + 360|0);
  $165 = +HEAPF64[$164>>3];
  $166 = (($5) + 368|0);
  HEAPF64[$166>>3] = $165;
  $167 = (($5) + 384|0);
  $168 = +HEAPF64[$167>>3];
  $169 = (($5) + 392|0);
  HEAPF64[$169>>3] = $168;
  $170 = (($5) + 408|0);
  $171 = +HEAPF64[$170>>3];
  $172 = (($5) + 416|0);
  HEAPF64[$172>>3] = $171;
  $173 = (($5) + 432|0);
  $174 = +HEAPF64[$173>>3];
  $175 = (($5) + 440|0);
  HEAPF64[$175>>3] = $174;
  $176 = (($5) + 456|0);
  $177 = +HEAPF64[$176>>3];
  $178 = (($5) + 464|0);
  HEAPF64[$178>>3] = $177;
  $179 = (($5) + 480|0);
  $180 = +HEAPF64[$179>>3];
  $181 = (($5) + 488|0);
  HEAPF64[$181>>3] = $180;
  $182 = (($5) + 504|0);
  $183 = +HEAPF64[$182>>3];
  $184 = (($5) + 512|0);
  HEAPF64[$184>>3] = $183;
  $185 = (($5) + 464|0);
  $186 = +HEAPF64[$185>>3];
  $187 = 1.0 * $186;
  $x54 = $187;
  $188 = (($5) + 512|0);
  $189 = +HEAPF64[$188>>3];
  $190 = 1.0 * $189;
  $x55 = $190;
  $191 = (($5) + 488|0);
  $192 = +HEAPF64[$191>>3];
  $193 = 1.0 * $192;
  $x56 = $193;
  $194 = (($5) + 464|0);
  $195 = +HEAPF64[$194>>3];
  $196 = (($5) + 464|0);
  $197 = +HEAPF64[$196>>3];
  $198 = $195 * $197;
  $199 = (($5) + 488|0);
  $200 = +HEAPF64[$199>>3];
  $201 = (($5) + 488|0);
  $202 = +HEAPF64[$201>>3];
  $203 = $200 * $202;
  $204 = $198 + $203;
  $205 = (($5) + 512|0);
  $206 = +HEAPF64[$205>>3];
  $207 = (($5) + 512|0);
  $208 = +HEAPF64[$207>>3];
  $209 = $206 * $208;
  $210 = $204 + $209;
  $211 = (($5) + 528|0);
  HEAPF64[$211>>3] = $210;
  $212 = (($5) + 464|0);
  $213 = +HEAPF64[$212>>3];
  $214 = (($5) + 248|0);
  $215 = +HEAPF64[$214>>3];
  $216 = $213 * $215;
  $217 = (($5) + 488|0);
  $218 = +HEAPF64[$217>>3];
  $219 = (($5) + 320|0);
  $220 = +HEAPF64[$219>>3];
  $221 = $218 * $220;
  $222 = $216 + $221;
  $223 = (($5) + 512|0);
  $224 = +HEAPF64[$223>>3];
  $225 = (($5) + 392|0);
  $226 = +HEAPF64[$225>>3];
  $227 = $224 * $226;
  $228 = $222 + $227;
  $229 = (($5) + 472|0);
  HEAPF64[$229>>3] = $228;
  $230 = (($5) + 464|0);
  $231 = +HEAPF64[$230>>3];
  $232 = (($5) + 272|0);
  $233 = +HEAPF64[$232>>3];
  $234 = $231 * $233;
  $235 = (($5) + 488|0);
  $236 = +HEAPF64[$235>>3];
  $237 = (($5) + 344|0);
  $238 = +HEAPF64[$237>>3];
  $239 = $236 * $238;
  $240 = $234 + $239;
  $241 = (($5) + 512|0);
  $242 = +HEAPF64[$241>>3];
  $243 = (($5) + 416|0);
  $244 = +HEAPF64[$243>>3];
  $245 = $242 * $244;
  $246 = $240 + $245;
  $247 = (($5) + 496|0);
  HEAPF64[$247>>3] = $246;
  $248 = (($5) + 464|0);
  $249 = +HEAPF64[$248>>3];
  $250 = (($5) + 296|0);
  $251 = +HEAPF64[$250>>3];
  $252 = $249 * $251;
  $253 = (($5) + 488|0);
  $254 = +HEAPF64[$253>>3];
  $255 = (($5) + 368|0);
  $256 = +HEAPF64[$255>>3];
  $257 = $254 * $256;
  $258 = $252 + $257;
  $259 = (($5) + 512|0);
  $260 = +HEAPF64[$259>>3];
  $261 = (($5) + 440|0);
  $262 = +HEAPF64[$261>>3];
  $263 = $260 * $262;
  $264 = $258 + $263;
  $265 = (($5) + 520|0);
  HEAPF64[$265>>3] = $264;
  $266 = (($5) + 392|0);
  $267 = +HEAPF64[$266>>3];
  $268 = -1.0 * $267;
  $269 = $x56;
  $270 = $268 * $269;
  $271 = (($5) + 512|0);
  $272 = +HEAPF64[$271>>3];
  $273 = (($5) + 320|0);
  $274 = +HEAPF64[$273>>3];
  $275 = $272 * $274;
  $276 = $270 + $275;
  $277 = (($5) + 256|0);
  HEAPF64[$277>>3] = $276;
  $278 = (($5) + 464|0);
  $279 = +HEAPF64[$278>>3];
  $280 = (($5) + 392|0);
  $281 = +HEAPF64[$280>>3];
  $282 = $279 * $281;
  $283 = (($5) + 248|0);
  $284 = +HEAPF64[$283>>3];
  $285 = -1.0 * $284;
  $286 = $x55;
  $287 = $285 * $286;
  $288 = $282 + $287;
  $289 = (($5) + 280|0);
  HEAPF64[$289>>3] = $288;
  $290 = (($5) + 320|0);
  $291 = +HEAPF64[$290>>3];
  $292 = -1.0 * $291;
  $293 = $x54;
  $294 = $292 * $293;
  $295 = (($5) + 488|0);
  $296 = +HEAPF64[$295>>3];
  $297 = (($5) + 248|0);
  $298 = +HEAPF64[$297>>3];
  $299 = $296 * $298;
  $300 = $294 + $299;
  $301 = (($5) + 304|0);
  HEAPF64[$301>>3] = $300;
  $302 = (($5) + 416|0);
  $303 = +HEAPF64[$302>>3];
  $304 = -1.0 * $303;
  $305 = $x56;
  $306 = $304 * $305;
  $307 = (($5) + 512|0);
  $308 = +HEAPF64[$307>>3];
  $309 = (($5) + 344|0);
  $310 = +HEAPF64[$309>>3];
  $311 = $308 * $310;
  $312 = $306 + $311;
  $313 = (($5) + 328|0);
  HEAPF64[$313>>3] = $312;
  $314 = (($5) + 464|0);
  $315 = +HEAPF64[$314>>3];
  $316 = (($5) + 416|0);
  $317 = +HEAPF64[$316>>3];
  $318 = $315 * $317;
  $319 = (($5) + 272|0);
  $320 = +HEAPF64[$319>>3];
  $321 = -1.0 * $320;
  $322 = $x55;
  $323 = $321 * $322;
  $324 = $318 + $323;
  $325 = (($5) + 352|0);
  HEAPF64[$325>>3] = $324;
  $326 = (($5) + 344|0);
  $327 = +HEAPF64[$326>>3];
  $328 = -1.0 * $327;
  $329 = $x54;
  $330 = $328 * $329;
  $331 = (($5) + 488|0);
  $332 = +HEAPF64[$331>>3];
  $333 = (($5) + 272|0);
  $334 = +HEAPF64[$333>>3];
  $335 = $332 * $334;
  $336 = $330 + $335;
  $337 = (($5) + 376|0);
  HEAPF64[$337>>3] = $336;
  $338 = (($5) + 512|0);
  $339 = +HEAPF64[$338>>3];
  $340 = (($5) + 368|0);
  $341 = +HEAPF64[$340>>3];
  $342 = $339 * $341;
  $343 = (($5) + 440|0);
  $344 = +HEAPF64[$343>>3];
  $345 = -1.0 * $344;
  $346 = $x56;
  $347 = $345 * $346;
  $348 = $342 + $347;
  $349 = (($5) + 400|0);
  HEAPF64[$349>>3] = $348;
  $350 = (($5) + 464|0);
  $351 = +HEAPF64[$350>>3];
  $352 = (($5) + 440|0);
  $353 = +HEAPF64[$352>>3];
  $354 = $351 * $353;
  $355 = (($5) + 296|0);
  $356 = +HEAPF64[$355>>3];
  $357 = -1.0 * $356;
  $358 = $x55;
  $359 = $357 * $358;
  $360 = $354 + $359;
  $361 = (($5) + 424|0);
  HEAPF64[$361>>3] = $360;
  $362 = (($5) + 368|0);
  $363 = +HEAPF64[$362>>3];
  $364 = -1.0 * $363;
  $365 = $x54;
  $366 = $364 * $365;
  $367 = (($5) + 488|0);
  $368 = +HEAPF64[$367>>3];
  $369 = (($5) + 296|0);
  $370 = +HEAPF64[$369>>3];
  $371 = $368 * $370;
  $372 = $366 + $371;
  $373 = (($5) + 448|0);
  HEAPF64[$373>>3] = $372;
  $374 = (($5) + 464|0);
  $375 = +HEAPF64[$374>>3];
  $376 = (+__Z5IKabsd($375));
  $377 = (($5) + 488|0);
  $378 = +HEAPF64[$377>>3];
  $379 = (+__Z5IKabsd($378));
  $380 = $376 + $379;
  HEAPF64[$j0eval>>3] = $380;
  $381 = +HEAPF64[$j0eval>>3];
  $382 = (+__Z5IKabsd($381));
  $383 = $382 < 9.9999999999999995E-7;
  do {
   if ($383) {
   } else {
    ;HEAP8[$j0valid+0>>0]=0|0;HEAP8[$j0valid+1>>0]=0|0;
    $384 = (($5) + 538|0);
    HEAP8[$384>>0] = 2;
    $385 = (($5) + 488|0);
    $386 = +HEAPF64[$385>>3];
    $387 = (($5) + 464|0);
    $388 = +HEAPF64[$387>>3];
    $389 = -1.0 * $388;
    __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x58,$386,$389,1.9999999999999999E-6);
    $390 = (($x58) + 8|0);
    $391 = HEAP8[$390>>0]|0;
    $392 = $391&1;
    if (!($392)) {
     break;
    }
    $393 = +HEAPF64[$x58>>3];
    $x57 = $393;
    $394 = $x57;
    $395 = -1.0 * $394;
    HEAPF64[$j0array>>3] = $395;
    $396 = +HEAPF64[$j0array>>3];
    $397 = (+__Z5IKsind($396));
    HEAPF64[$sj0array>>3] = $397;
    $398 = +HEAPF64[$j0array>>3];
    $399 = (+__Z5IKcosd($398));
    HEAPF64[$cj0array>>3] = $399;
    $400 = $x57;
    $401 = -1.0 * $400;
    $402 = 3.14159265358979 + $401;
    $403 = (($j0array) + 8|0);
    HEAPF64[$403>>3] = $402;
    $404 = (($j0array) + 8|0);
    $405 = +HEAPF64[$404>>3];
    $406 = (+__Z5IKsind($405));
    $407 = (($sj0array) + 8|0);
    HEAPF64[$407>>3] = $406;
    $408 = (($j0array) + 8|0);
    $409 = +HEAPF64[$408>>3];
    $410 = (+__Z5IKcosd($409));
    $411 = (($cj0array) + 8|0);
    HEAPF64[$411>>3] = $410;
    $412 = +HEAPF64[$j0array>>3];
    $413 = $412 > 3.14159265358979;
    if ($413) {
     $414 = +HEAPF64[$j0array>>3];
     $415 = $414 - 6.2831853071795898;
     HEAPF64[$j0array>>3] = $415;
    } else {
     $416 = +HEAPF64[$j0array>>3];
     $417 = $416 < -3.14159265358979;
     if ($417) {
      $418 = +HEAPF64[$j0array>>3];
      $419 = $418 + 6.2831853071795898;
      HEAPF64[$j0array>>3] = $419;
     }
    }
    HEAP8[$j0valid>>0] = 1;
    $420 = (($j0array) + 8|0);
    $421 = +HEAPF64[$420>>3];
    $422 = $421 > 3.14159265358979;
    if ($422) {
     $423 = (($j0array) + 8|0);
     $424 = +HEAPF64[$423>>3];
     $425 = $424 - 6.2831853071795898;
     HEAPF64[$423>>3] = $425;
    } else {
     $426 = (($j0array) + 8|0);
     $427 = +HEAPF64[$426>>3];
     $428 = $427 < -3.14159265358979;
     if ($428) {
      $429 = (($j0array) + 8|0);
      $430 = +HEAPF64[$429>>3];
      $431 = $430 + 6.2831853071795898;
      HEAPF64[$429>>3] = $431;
     }
    }
    $432 = (($j0valid) + 1|0);
    HEAP8[$432>>0] = 1;
    $ij0 = 0;
    while(1) {
     $433 = $ij0;
     $434 = ($433|0)<(2);
     if (!($434)) {
      break;
     }
     $435 = $ij0;
     $436 = (($j0valid) + ($435)|0);
     $437 = HEAP8[$436>>0]|0;
     $438 = $437&1;
     do {
      if ($438) {
       $439 = $ij0;
       $440 = $439&255;
       $441 = (($5) + 536|0);
       HEAP8[$441>>0] = $440;
       $442 = (($5) + 536|0);
       $443 = (($442) + 1|0);
       HEAP8[$443>>0] = -1;
       $444 = $ij0;
       $445 = (($444) + 1)|0;
       $iij0 = $445;
       while(1) {
        $446 = $iij0;
        $447 = ($446|0)<(2);
        if (!($447)) {
         break;
        }
        $448 = $iij0;
        $449 = (($j0valid) + ($448)|0);
        $450 = HEAP8[$449>>0]|0;
        $451 = $450&1;
        if ($451) {
         $452 = $ij0;
         $453 = (($cj0array) + ($452<<3)|0);
         $454 = +HEAPF64[$453>>3];
         $455 = $iij0;
         $456 = (($cj0array) + ($455<<3)|0);
         $457 = +HEAPF64[$456>>3];
         $458 = $454 - $457;
         $459 = (+__Z5IKabsd($458));
         $460 = $459 < 9.9999999999999995E-7;
         if ($460) {
          $461 = $ij0;
          $462 = (($sj0array) + ($461<<3)|0);
          $463 = +HEAPF64[$462>>3];
          $464 = $iij0;
          $465 = (($sj0array) + ($464<<3)|0);
          $466 = +HEAPF64[$465>>3];
          $467 = $463 - $466;
          $468 = (+__Z5IKabsd($467));
          $469 = $468 < 9.9999999999999995E-7;
          if ($469) {
           label = 26;
           break;
          }
         }
        }
        $476 = $iij0;
        $477 = (($476) + 1)|0;
        $iij0 = $477;
       }
       if ((label|0) == 26) {
        label = 0;
        $470 = $iij0;
        $471 = (($j0valid) + ($470)|0);
        HEAP8[$471>>0] = 0;
        $472 = $iij0;
        $473 = $472&255;
        $474 = (($5) + 536|0);
        $475 = (($474) + 1|0);
        HEAP8[$475>>0] = $473;
       }
       $478 = $ij0;
       $479 = (($j0array) + ($478<<3)|0);
       $480 = +HEAPF64[$479>>3];
       HEAPF64[$5>>3] = $480;
       $481 = $ij0;
       $482 = (($cj0array) + ($481<<3)|0);
       $483 = +HEAPF64[$482>>3];
       $484 = (($5) + 8|0);
       HEAPF64[$484>>3] = $483;
       $485 = $ij0;
       $486 = (($sj0array) + ($485<<3)|0);
       $487 = +HEAPF64[$486>>3];
       $488 = (($5) + 16|0);
       HEAPF64[$488>>3] = $487;
       ;HEAP8[$j2valid+0>>0]=0|0;HEAP8[$j2valid+1>>0]=0|0;
       $489 = (($5) + 544|0);
       HEAP8[$489>>0] = 2;
       $490 = (($5) + 488|0);
       $491 = +HEAPF64[$490>>3];
       $492 = 0.90063778731441901 * $491;
       $493 = (($5) + 16|0);
       $494 = +HEAPF64[$493>>3];
       $495 = $492 * $494;
       $496 = 0.97509051106574396 + $495;
       $497 = (($5) + 528|0);
       $498 = +HEAPF64[$497>>3];
       $499 = -6.0042519154294602 * $498;
       $500 = $496 + $499;
       $501 = (($5) + 8|0);
       $502 = +HEAPF64[$501>>3];
       $503 = 0.90063778731441901 * $502;
       $504 = (($5) + 464|0);
       $505 = +HEAPF64[$504>>3];
       $506 = $503 * $505;
       $507 = $500 + $506;
       $508 = $507 < -1.0000020000000001;
       if (!($508)) {
        $509 = (($5) + 488|0);
        $510 = +HEAPF64[$509>>3];
        $511 = 0.90063778731441901 * $510;
        $512 = (($5) + 16|0);
        $513 = +HEAPF64[$512>>3];
        $514 = $511 * $513;
        $515 = 0.97509051106574396 + $514;
        $516 = (($5) + 528|0);
        $517 = +HEAPF64[$516>>3];
        $518 = -6.0042519154294602 * $517;
        $519 = $515 + $518;
        $520 = (($5) + 8|0);
        $521 = +HEAPF64[$520>>3];
        $522 = 0.90063778731441901 * $521;
        $523 = (($5) + 464|0);
        $524 = +HEAPF64[$523>>3];
        $525 = $522 * $524;
        $526 = $519 + $525;
        $527 = $526 > 1.0000020000000001;
        if (!($527)) {
         $528 = (($5) + 488|0);
         $529 = +HEAPF64[$528>>3];
         $530 = 0.90063778731441901 * $529;
         $531 = (($5) + 16|0);
         $532 = +HEAPF64[$531>>3];
         $533 = $530 * $532;
         $534 = 0.97509051106574396 + $533;
         $535 = (($5) + 528|0);
         $536 = +HEAPF64[$535>>3];
         $537 = -6.0042519154294602 * $536;
         $538 = $534 + $537;
         $539 = (($5) + 8|0);
         $540 = +HEAPF64[$539>>3];
         $541 = 0.90063778731441901 * $540;
         $542 = (($5) + 464|0);
         $543 = +HEAPF64[$542>>3];
         $544 = $541 * $543;
         $545 = $538 + $544;
         $546 = (+__Z6IKasind($545));
         $x59 = $546;
         $547 = $x59;
         $548 = -1.0 * $547;
         $549 = -2.84547750771483 + $548;
         HEAPF64[$j2array>>3] = $549;
         $550 = +HEAPF64[$j2array>>3];
         $551 = (+__Z5IKsind($550));
         HEAPF64[$sj2array>>3] = $551;
         $552 = +HEAPF64[$j2array>>3];
         $553 = (+__Z5IKcosd($552));
         HEAPF64[$cj2array>>3] = $553;
         $554 = $x59;
         $555 = 0.29611514587496501 + $554;
         $556 = (($j2array) + 8|0);
         HEAPF64[$556>>3] = $555;
         $557 = (($j2array) + 8|0);
         $558 = +HEAPF64[$557>>3];
         $559 = (+__Z5IKsind($558));
         $560 = (($sj2array) + 8|0);
         HEAPF64[$560>>3] = $559;
         $561 = (($j2array) + 8|0);
         $562 = +HEAPF64[$561>>3];
         $563 = (+__Z5IKcosd($562));
         $564 = (($cj2array) + 8|0);
         HEAPF64[$564>>3] = $563;
         $565 = +HEAPF64[$j2array>>3];
         $566 = $565 > 3.14159265358979;
         if ($566) {
          $567 = +HEAPF64[$j2array>>3];
          $568 = $567 - 6.2831853071795898;
          HEAPF64[$j2array>>3] = $568;
         } else {
          $569 = +HEAPF64[$j2array>>3];
          $570 = $569 < -3.14159265358979;
          if ($570) {
           $571 = +HEAPF64[$j2array>>3];
           $572 = $571 + 6.2831853071795898;
           HEAPF64[$j2array>>3] = $572;
          }
         }
         HEAP8[$j2valid>>0] = 1;
         $573 = (($j2array) + 8|0);
         $574 = +HEAPF64[$573>>3];
         $575 = $574 > 3.14159265358979;
         if ($575) {
          $576 = (($j2array) + 8|0);
          $577 = +HEAPF64[$576>>3];
          $578 = $577 - 6.2831853071795898;
          HEAPF64[$576>>3] = $578;
         } else {
          $579 = (($j2array) + 8|0);
          $580 = +HEAPF64[$579>>3];
          $581 = $580 < -3.14159265358979;
          if ($581) {
           $582 = (($j2array) + 8|0);
           $583 = +HEAPF64[$582>>3];
           $584 = $583 + 6.2831853071795898;
           HEAPF64[$582>>3] = $584;
          }
         }
         $585 = (($j2valid) + 1|0);
         HEAP8[$585>>0] = 1;
         $ij2 = 0;
         while(1) {
          $586 = $ij2;
          $587 = ($586|0)<(2);
          if (!($587)) {
           break;
          }
          $588 = $ij2;
          $589 = (($j2valid) + ($588)|0);
          $590 = HEAP8[$589>>0]|0;
          $591 = $590&1;
          L60: do {
           if ($591) {
            $592 = $ij2;
            $593 = $592&255;
            $594 = (($5) + 542|0);
            HEAP8[$594>>0] = $593;
            $595 = (($5) + 542|0);
            $596 = (($595) + 1|0);
            HEAP8[$596>>0] = -1;
            $597 = $ij2;
            $598 = (($597) + 1)|0;
            $iij2 = $598;
            L63: while(1) {
             $599 = $iij2;
             $600 = ($599|0)<(2);
             if (!($600)) {
              break;
             }
             $601 = $iij2;
             $602 = (($j2valid) + ($601)|0);
             $603 = HEAP8[$602>>0]|0;
             $604 = $603&1;
             do {
              if ($604) {
               $605 = $ij2;
               $606 = (($cj2array) + ($605<<3)|0);
               $607 = +HEAPF64[$606>>3];
               $608 = $iij2;
               $609 = (($cj2array) + ($608<<3)|0);
               $610 = +HEAPF64[$609>>3];
               $611 = $607 - $610;
               $612 = (+__Z5IKabsd($611));
               $613 = $612 < 9.9999999999999995E-7;
               if (!($613)) {
                break;
               }
               $614 = $ij2;
               $615 = (($sj2array) + ($614<<3)|0);
               $616 = +HEAPF64[$615>>3];
               $617 = $iij2;
               $618 = (($sj2array) + ($617<<3)|0);
               $619 = +HEAPF64[$618>>3];
               $620 = $616 - $619;
               $621 = (+__Z5IKabsd($620));
               $622 = $621 < 9.9999999999999995E-7;
               if ($622) {
                label = 51;
                break L63;
               }
              }
             } while(0);
             $629 = $iij2;
             $630 = (($629) + 1)|0;
             $iij2 = $630;
            }
            if ((label|0) == 51) {
             label = 0;
             $623 = $iij2;
             $624 = (($j2valid) + ($623)|0);
             HEAP8[$624>>0] = 0;
             $625 = $iij2;
             $626 = $625&255;
             $627 = (($5) + 542|0);
             $628 = (($627) + 1|0);
             HEAP8[$628>>0] = $626;
            }
            $631 = $ij2;
            $632 = (($j2array) + ($631<<3)|0);
            $633 = +HEAPF64[$632>>3];
            $634 = (($5) + 80|0);
            HEAPF64[$634>>3] = $633;
            $635 = $ij2;
            $636 = (($cj2array) + ($635<<3)|0);
            $637 = +HEAPF64[$636>>3];
            $638 = (($5) + 88|0);
            HEAPF64[$638>>3] = $637;
            $639 = $ij2;
            $640 = (($sj2array) + ($639<<3)|0);
            $641 = +HEAPF64[$640>>3];
            $642 = (($5) + 96|0);
            HEAPF64[$642>>3] = $641;
            $643 = (($5) + 8|0);
            $644 = +HEAPF64[$643>>3];
            $645 = (($5) + 464|0);
            $646 = +HEAPF64[$645>>3];
            $647 = $644 * $646;
            $x60 = $647;
            $648 = (($5) + 88|0);
            $649 = +HEAPF64[$648>>3];
            $650 = 0.29499999999999998 * $649;
            $x61 = $650;
            $651 = (($5) + 488|0);
            $652 = +HEAPF64[$651>>3];
            $653 = (($5) + 16|0);
            $654 = +HEAPF64[$653>>3];
            $655 = $652 * $654;
            $x62 = $655;
            $656 = (($5) + 88|0);
            $657 = +HEAPF64[$656>>3];
            $658 = 43.703703703703702 * $657;
            $x63 = $658;
            $659 = (($5) + 96|0);
            $660 = +HEAPF64[$659>>3];
            $661 = 13.3333333333333 * $660;
            $x64 = $661;
            $662 = (($5) + 88|0);
            $663 = +HEAPF64[$662>>3];
            $664 = (($5) + 512|0);
            $665 = +HEAPF64[$664>>3];
            $666 = $663 * $665;
            $x65 = $666;
            $667 = (($5) + 96|0);
            $668 = +HEAPF64[$667>>3];
            $669 = 0.089999999999999996 * $668;
            $x66 = $669;
            $670 = (($5) + 512|0);
            $671 = +HEAPF64[$670>>3];
            $672 = (($5) + 96|0);
            $673 = +HEAPF64[$672>>3];
            $674 = $671 * $673;
            $x67 = $674;
            $675 = (($5) + 96|0);
            $676 = +HEAPF64[$675>>3];
            $677 = $x67;
            $678 = 43.703703703703702 * $677;
            $679 = $676 + $678;
            $680 = (($5) + 88|0);
            $681 = +HEAPF64[$680>>3];
            $682 = 3.2777777777777799 * $681;
            $683 = $679 + $682;
            $684 = $x65;
            $685 = -13.3333333333333 * $684;
            $686 = $683 + $685;
            $687 = $x60;
            $688 = -1.0 * $687;
            $689 = $x63;
            $690 = $688 * $689;
            $691 = $686 + $690;
            $692 = $x60;
            $693 = -1.0 * $692;
            $694 = $x64;
            $695 = $693 * $694;
            $696 = $691 + $695;
            $697 = (($5) + 512|0);
            $698 = +HEAPF64[$697>>3];
            $699 = -40.0 * $698;
            $700 = $696 + $699;
            $701 = $x62;
            $702 = -1.0 * $701;
            $703 = $x64;
            $704 = $702 * $703;
            $705 = $700 + $704;
            $706 = $x62;
            $707 = -1.0 * $706;
            $708 = $x63;
            $709 = $707 * $708;
            $710 = $705 + $709;
            HEAPF64[$j1eval>>3] = $710;
            $711 = $x61;
            $712 = -1.0 * $711;
            $713 = $x62;
            $714 = $712 * $713;
            $715 = (($5) + 96|0);
            $716 = +HEAPF64[$715>>3];
            $717 = 0.0067499999999999999 * $716;
            $718 = $714 + $717;
            $719 = $x67;
            $720 = 0.29499999999999998 * $719;
            $721 = $718 + $720;
            $722 = (($5) + 512|0);
            $723 = +HEAPF64[$722>>3];
            $724 = -0.27000000000000002 * $723;
            $725 = $721 + $724;
            $726 = (($5) + 88|0);
            $727 = +HEAPF64[$726>>3];
            $728 = 0.022124999999999999 * $727;
            $729 = $725 + $728;
            $730 = $x65;
            $731 = -0.089999999999999996 * $730;
            $732 = $729 + $731;
            $733 = $x60;
            $734 = -1.0 * $733;
            $735 = $x61;
            $736 = $734 * $735;
            $737 = $732 + $736;
            $738 = $x60;
            $739 = -1.0 * $738;
            $740 = $x66;
            $741 = $739 * $740;
            $742 = $737 + $741;
            $743 = $x62;
            $744 = -1.0 * $743;
            $745 = $x66;
            $746 = $744 * $745;
            $747 = $742 + $746;
            $748 = (+__Z6IKsignd($747));
            $749 = (($j1eval) + 8|0);
            HEAPF64[$749>>3] = $748;
            $750 = +HEAPF64[$j1eval>>3];
            $751 = (+__Z5IKabsd($750));
            $752 = $751 < 9.9999999999999995E-7;
            do {
             if ($752) {
              label = 56;
             } else {
              $753 = (($j1eval) + 8|0);
              $754 = +HEAPF64[$753>>3];
              $755 = (+__Z5IKabsd($754));
              $756 = $755 < 9.9999999999999995E-7;
              if ($756) {
               label = 56;
               break;
              }
              ;HEAP8[$j1valid13+0>>0]=0|0;
              $1824 = (($5) + 541|0);
              HEAP8[$1824>>0] = 1;
              $1825 = (($5) + 88|0);
              $1826 = +HEAPF64[$1825>>3];
              $1827 = (($5) + 88|0);
              $1828 = +HEAPF64[$1827>>3];
              $1829 = $1826 * $1828;
              $x490 = $1829;
              $1830 = (($5) + 88|0);
              $1831 = +HEAPF64[$1830>>3];
              $1832 = 0.29499999999999998 * $1831;
              $x491 = $1832;
              $1833 = (($5) + 8|0);
              $1834 = +HEAPF64[$1833>>3];
              $1835 = (($5) + 464|0);
              $1836 = +HEAPF64[$1835>>3];
              $1837 = $1834 * $1836;
              $x492 = $1837;
              $1838 = (($5) + 88|0);
              $1839 = +HEAPF64[$1838>>3];
              $1840 = (($5) + 96|0);
              $1841 = +HEAPF64[$1840>>3];
              $1842 = $1839 * $1841;
              $x493 = $1842;
              $1843 = (($5) + 488|0);
              $1844 = +HEAPF64[$1843>>3];
              $1845 = (($5) + 16|0);
              $1846 = +HEAPF64[$1845>>3];
              $1847 = $1844 * $1846;
              $x494 = $1847;
              $1848 = (($5) + 512|0);
              $1849 = +HEAPF64[$1848>>3];
              $1850 = 1.0 * $1849;
              $x495 = $1850;
              $1851 = (($5) + 96|0);
              $1852 = +HEAPF64[$1851>>3];
              $1853 = 0.089999999999999996 * $1852;
              $x496 = $1853;
              $1854 = $x494;
              $1855 = -1.0 * $1854;
              $1856 = $x496;
              $1857 = $1855 * $1856;
              $1858 = (($5) + 96|0);
              $1859 = +HEAPF64[$1858>>3];
              $1860 = 0.0067499999999999999 * $1859;
              $1861 = $1857 + $1860;
              $1862 = $x491;
              $1863 = -1.0 * $1862;
              $1864 = $x494;
              $1865 = $1863 * $1864;
              $1866 = $1861 + $1865;
              $1867 = $x491;
              $1868 = -1.0 * $1867;
              $1869 = $x492;
              $1870 = $1868 * $1869;
              $1871 = $1866 + $1870;
              $1872 = (($5) + 88|0);
              $1873 = +HEAPF64[$1872>>3];
              $1874 = -0.089999999999999996 * $1873;
              $1875 = (($5) + 512|0);
              $1876 = +HEAPF64[$1875>>3];
              $1877 = $1874 * $1876;
              $1878 = $1871 + $1877;
              $1879 = (($5) + 512|0);
              $1880 = +HEAPF64[$1879>>3];
              $1881 = 0.29499999999999998 * $1880;
              $1882 = (($5) + 96|0);
              $1883 = +HEAPF64[$1882>>3];
              $1884 = $1881 * $1883;
              $1885 = $1878 + $1884;
              $1886 = (($5) + 512|0);
              $1887 = +HEAPF64[$1886>>3];
              $1888 = -0.27000000000000002 * $1887;
              $1889 = $1885 + $1888;
              $1890 = (($5) + 88|0);
              $1891 = +HEAPF64[$1890>>3];
              $1892 = 0.022124999999999999 * $1891;
              $1893 = $1889 + $1892;
              $1894 = $x492;
              $1895 = -1.0 * $1894;
              $1896 = $x496;
              $1897 = $1895 * $1896;
              $1898 = $1893 + $1897;
              $1899 = (+__Z6IKsignd($1898));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x497,$1899,-1);
              $1900 = (($x497) + 8|0);
              $1901 = HEAP8[$1900>>0]|0;
              $1902 = $1901&1;
              if (!($1902)) {
               break L60;
              }
              $1903 = $x494;
              $1904 = -1.0 * $1903;
              $1905 = $x495;
              $1906 = $1904 * $1905;
              $1907 = 0.026550000000000001 + $1906;
              $1908 = (($5) + 96|0);
              $1909 = +HEAPF64[$1908>>3];
              $1910 = -0.024299999999999999 * $1909;
              $1911 = $1907 + $1910;
              $1912 = (($5) + 88|0);
              $1913 = +HEAPF64[$1912>>3];
              $1914 = -0.079649999999999999 * $1913;
              $1915 = $1911 + $1914;
              $1916 = (($5) + 512|0);
              $1917 = +HEAPF64[$1916>>3];
              $1918 = 0.074999999999999997 * $1917;
              $1919 = $1915 + $1918;
              $1920 = $x493;
              $1921 = 0.078924999999999995 * $1920;
              $1922 = $1919 + $1921;
              $1923 = $x490;
              $1924 = -0.053100000000000001 * $1923;
              $1925 = $1922 + $1924;
              $1926 = $x492;
              $1927 = -1.0 * $1926;
              $1928 = $x495;
              $1929 = $1927 * $1928;
              $1930 = $1925 + $1929;
              $1931 = (($5) + 512|0);
              $1932 = +HEAPF64[$1931>>3];
              $1933 = (($5) + 512|0);
              $1934 = +HEAPF64[$1933>>3];
              $1935 = $1932 * $1934;
              $1936 = -0.0080999999999999996 + $1935;
              $1937 = $x490;
              $1938 = -0.078924999999999995 * $1937;
              $1939 = $1936 + $1938;
              $1940 = $x493;
              $1941 = -0.053100000000000001 * $1940;
              $1942 = $1939 + $1941;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x498,$1930,$1942,1.9999999999999999E-6);
              $1943 = (($x498) + 8|0);
              $1944 = HEAP8[$1943>>0]|0;
              $1945 = $1944&1;
              if (!($1945)) {
               break L60;
              }
              $1946 = +HEAPF64[$x497>>3];
              $1947 = 1.5707963267949001 * $1946;
              $1948 = -1.5707963267949001 + $1947;
              $1949 = +HEAPF64[$x498>>3];
              $1950 = $1948 + $1949;
              HEAPF64[$j1array10>>3] = $1950;
              $1951 = +HEAPF64[$j1array10>>3];
              $1952 = (+__Z5IKsind($1951));
              HEAPF64[$sj1array12>>3] = $1952;
              $1953 = +HEAPF64[$j1array10>>3];
              $1954 = (+__Z5IKcosd($1953));
              HEAPF64[$cj1array11>>3] = $1954;
              $1955 = +HEAPF64[$j1array10>>3];
              $1956 = $1955 > 3.14159265358979;
              if ($1956) {
               $1957 = +HEAPF64[$j1array10>>3];
               $1958 = $1957 - 6.2831853071795898;
               HEAPF64[$j1array10>>3] = $1958;
              } else {
               $1959 = +HEAPF64[$j1array10>>3];
               $1960 = $1959 < -3.14159265358979;
               if ($1960) {
                $1961 = +HEAPF64[$j1array10>>3];
                $1962 = $1961 + 6.2831853071795898;
                HEAPF64[$j1array10>>3] = $1962;
               }
              }
              HEAP8[$j1valid13>>0] = 1;
              $ij114 = 0;
              while(1) {
               $1963 = $ij114;
               $1964 = ($1963|0)<(1);
               if (!($1964)) {
                break;
               }
               $1965 = $ij114;
               $1966 = (($j1valid13) + ($1965)|0);
               $1967 = HEAP8[$1966>>0]|0;
               $1968 = $1967&1;
               L93: do {
                if ($1968) {
                 $1969 = $ij114;
                 $1970 = $1969&255;
                 $1971 = (($5) + 539|0);
                 HEAP8[$1971>>0] = $1970;
                 $1972 = (($5) + 539|0);
                 $1973 = (($1972) + 1|0);
                 HEAP8[$1973>>0] = -1;
                 $1974 = $ij114;
                 $1975 = (($1974) + 1)|0;
                 $iij115 = $1975;
                 L96: while(1) {
                  $1976 = $iij115;
                  $1977 = ($1976|0)<(1);
                  if (!($1977)) {
                   break;
                  }
                  $1978 = $iij115;
                  $1979 = (($j1valid13) + ($1978)|0);
                  $1980 = HEAP8[$1979>>0]|0;
                  $1981 = $1980&1;
                  do {
                   if ($1981) {
                    $1982 = $ij114;
                    $1983 = (($cj1array11) + ($1982<<3)|0);
                    $1984 = +HEAPF64[$1983>>3];
                    $1985 = $iij115;
                    $1986 = (($cj1array11) + ($1985<<3)|0);
                    $1987 = +HEAPF64[$1986>>3];
                    $1988 = $1984 - $1987;
                    $1989 = (+__Z5IKabsd($1988));
                    $1990 = $1989 < 9.9999999999999995E-7;
                    if (!($1990)) {
                     break;
                    }
                    $1991 = $ij114;
                    $1992 = (($sj1array12) + ($1991<<3)|0);
                    $1993 = +HEAPF64[$1992>>3];
                    $1994 = $iij115;
                    $1995 = (($sj1array12) + ($1994<<3)|0);
                    $1996 = +HEAPF64[$1995>>3];
                    $1997 = $1993 - $1996;
                    $1998 = (+__Z5IKabsd($1997));
                    $1999 = $1998 < 9.9999999999999995E-7;
                    if ($1999) {
                     label = 142;
                     break L96;
                    }
                   }
                  } while(0);
                  $2006 = $iij115;
                  $2007 = (($2006) + 1)|0;
                  $iij115 = $2007;
                 }
                 if ((label|0) == 142) {
                  label = 0;
                  $2000 = $iij115;
                  $2001 = (($j1valid13) + ($2000)|0);
                  HEAP8[$2001>>0] = 0;
                  $2002 = $iij115;
                  $2003 = $2002&255;
                  $2004 = (($5) + 539|0);
                  $2005 = (($2004) + 1|0);
                  HEAP8[$2005>>0] = $2003;
                 }
                 $2008 = $ij114;
                 $2009 = (($j1array10) + ($2008<<3)|0);
                 $2010 = +HEAPF64[$2009>>3];
                 $2011 = (($5) + 40|0);
                 HEAPF64[$2011>>3] = $2010;
                 $2012 = $ij114;
                 $2013 = (($cj1array11) + ($2012<<3)|0);
                 $2014 = +HEAPF64[$2013>>3];
                 $2015 = (($5) + 48|0);
                 HEAPF64[$2015>>3] = $2014;
                 $2016 = $ij114;
                 $2017 = (($sj1array12) + ($2016<<3)|0);
                 $2018 = +HEAPF64[$2017>>3];
                 $2019 = (($5) + 56|0);
                 HEAPF64[$2019>>3] = $2018;
                 $2020 = (($5) + 40|0);
                 $2021 = +HEAPF64[$2020>>3];
                 $2022 = (+__Z5IKsind($2021));
                 $x499 = $2022;
                 $2023 = (($5) + 40|0);
                 $2024 = +HEAPF64[$2023>>3];
                 $2025 = (+__Z5IKcosd($2024));
                 $x500 = $2025;
                 $2026 = (($5) + 8|0);
                 $2027 = +HEAPF64[$2026>>3];
                 $2028 = (($5) + 464|0);
                 $2029 = +HEAPF64[$2028>>3];
                 $2030 = $2027 * $2029;
                 $x501 = $2030;
                 $2031 = (($5) + 88|0);
                 $2032 = +HEAPF64[$2031>>3];
                 $2033 = 0.089999999999999996 * $2032;
                 $x502 = $2033;
                 $2034 = (($5) + 488|0);
                 $2035 = +HEAPF64[$2034>>3];
                 $2036 = (($5) + 16|0);
                 $2037 = +HEAPF64[$2036>>3];
                 $2038 = $2035 * $2037;
                 $x503 = $2038;
                 $2039 = (($5) + 96|0);
                 $2040 = +HEAPF64[$2039>>3];
                 $2041 = 0.29499999999999998 * $2040;
                 $x504 = $2041;
                 $2042 = (($5) + 512|0);
                 $2043 = +HEAPF64[$2042>>3];
                 $2044 = 1.0 * $2043;
                 $x505 = $2044;
                 $2045 = (($5) + 96|0);
                 $2046 = +HEAPF64[$2045>>3];
                 $2047 = 0.089999999999999996 * $2046;
                 $x506 = $2047;
                 $2048 = (($5) + 88|0);
                 $2049 = +HEAPF64[$2048>>3];
                 $2050 = 0.29499999999999998 * $2049;
                 $x507 = $2050;
                 $2051 = $x499;
                 $2052 = 0.29499999999999998 * $2051;
                 $x508 = $2052;
                 $2053 = $x500;
                 $2054 = 1.0 * $2053;
                 $x509 = $2054;
                 $2055 = $x499;
                 $2056 = 0.54000000000000004 * $2055;
                 $x510 = $2056;
                 $2057 = $x502;
                 $2058 = -1.0 * $2057;
                 $2059 = -0.27000000000000002 + $2058;
                 $2060 = $x499;
                 $2061 = -0.074999999999999997 * $2060;
                 $2062 = $2059 + $2061;
                 $2063 = $x504;
                 $2064 = $2062 + $2063;
                 $2065 = $x499;
                 $2066 = $x503;
                 $2067 = $2065 * $2066;
                 $2068 = $2064 + $2067;
                 $2069 = $x499;
                 $2070 = $x501;
                 $2071 = $2069 * $2070;
                 $2072 = $2068 + $2071;
                 $2073 = $x500;
                 $2074 = -1.0 * $2073;
                 $2075 = $x505;
                 $2076 = $2074 * $2075;
                 $2077 = $2072 + $2076;
                 HEAPF64[$evalcond16>>3] = $2077;
                 $2078 = $x499;
                 $2079 = -1.0 * $2078;
                 $2080 = $x505;
                 $2081 = $2079 * $2080;
                 $2082 = $x501;
                 $2083 = -1.0 * $2082;
                 $2084 = $x509;
                 $2085 = $2083 * $2084;
                 $2086 = $2081 + $2085;
                 $2087 = $x503;
                 $2088 = -1.0 * $2087;
                 $2089 = $x509;
                 $2090 = $2088 * $2089;
                 $2091 = $2086 + $2090;
                 $2092 = $x506;
                 $2093 = $2091 + $2092;
                 $2094 = $x507;
                 $2095 = $2093 + $2094;
                 $2096 = $x500;
                 $2097 = 0.074999999999999997 * $2096;
                 $2098 = $2095 + $2097;
                 $2099 = (($evalcond16) + 8|0);
                 HEAPF64[$2099>>3] = $2098;
                 $2100 = $x500;
                 $2101 = $x504;
                 $2102 = $2100 * $2101;
                 $2103 = $x505;
                 $2104 = -1.0 * $2103;
                 $2105 = $2102 + $2104;
                 $2106 = $x499;
                 $2107 = $x507;
                 $2108 = $2106 * $2107;
                 $2109 = $2105 + $2108;
                 $2110 = $x499;
                 $2111 = $x506;
                 $2112 = $2110 * $2111;
                 $2113 = $2109 + $2112;
                 $2114 = $x500;
                 $2115 = -0.27000000000000002 * $2114;
                 $2116 = $2113 + $2115;
                 $2117 = $x500;
                 $2118 = -1.0 * $2117;
                 $2119 = $x502;
                 $2120 = $2118 * $2119;
                 $2121 = $2116 + $2120;
                 $2122 = (($evalcond16) + 16|0);
                 HEAPF64[$2122>>3] = $2121;
                 $2123 = $x501;
                 $2124 = $x510;
                 $2125 = $2123 * $2124;
                 $2126 = 0.0166 + $2125;
                 $2127 = $x503;
                 $2128 = $x510;
                 $2129 = $2127 * $2128;
                 $2130 = $2126 + $2129;
                 $2131 = (($5) + 512|0);
                 $2132 = +HEAPF64[$2131>>3];
                 $2133 = -0.54000000000000004 * $2132;
                 $2134 = $x500;
                 $2135 = $2133 * $2134;
                 $2136 = $2130 + $2135;
                 $2137 = $x501;
                 $2138 = 0.14999999999999999 * $2137;
                 $2139 = $2136 + $2138;
                 $2140 = $x503;
                 $2141 = 0.14999999999999999 * $2140;
                 $2142 = $2139 + $2141;
                 $2143 = (($5) + 528|0);
                 $2144 = +HEAPF64[$2143>>3];
                 $2145 = -1.0 * $2144;
                 $2146 = $2142 + $2145;
                 $2147 = $x499;
                 $2148 = -0.040500000000000001 * $2147;
                 $2149 = $2146 + $2148;
                 $2150 = (($evalcond16) + 24|0);
                 HEAPF64[$2150>>3] = $2149;
                 $2151 = $x499;
                 $2152 = 0.27000000000000002 * $2151;
                 $2153 = 0.074999999999999997 + $2152;
                 $2154 = $x500;
                 $2155 = $x506;
                 $2156 = $2154 * $2155;
                 $2157 = $2153 + $2156;
                 $2158 = $x500;
                 $2159 = $x507;
                 $2160 = $2158 * $2159;
                 $2161 = $2157 + $2160;
                 $2162 = $x499;
                 $2163 = -1.0 * $2162;
                 $2164 = $x504;
                 $2165 = $2163 * $2164;
                 $2166 = $2161 + $2165;
                 $2167 = $x501;
                 $2168 = -1.0 * $2167;
                 $2169 = $2166 + $2168;
                 $2170 = $x503;
                 $2171 = -1.0 * $2170;
                 $2172 = $2169 + $2171;
                 $2173 = $x499;
                 $2174 = $x502;
                 $2175 = $2173 * $2174;
                 $2176 = $2172 + $2175;
                 $2177 = (($evalcond16) + 32|0);
                 HEAPF64[$2177>>3] = $2176;
                 $2178 = +HEAPF64[$evalcond16>>3];
                 $2179 = (+__Z5IKabsd($2178));
                 $2180 = $2179 > 5.0000000000000004E-6;
                 do {
                  if (!($2180)) {
                   $2181 = (($evalcond16) + 8|0);
                   $2182 = +HEAPF64[$2181>>3];
                   $2183 = (+__Z5IKabsd($2182));
                   $2184 = $2183 > 5.0000000000000004E-6;
                   if ($2184) {
                    break;
                   }
                   $2185 = (($evalcond16) + 16|0);
                   $2186 = +HEAPF64[$2185>>3];
                   $2187 = (+__Z5IKabsd($2186));
                   $2188 = $2187 > 5.0000000000000004E-6;
                   if ($2188) {
                    break;
                   }
                   $2189 = (($evalcond16) + 24|0);
                   $2190 = +HEAPF64[$2189>>3];
                   $2191 = (+__Z5IKabsd($2190));
                   $2192 = $2191 > 5.0000000000000004E-6;
                   if ($2192) {
                    break;
                   }
                   $2193 = (($evalcond16) + 32|0);
                   $2194 = +HEAPF64[$2193>>3];
                   $2195 = (+__Z5IKabsd($2194));
                   $2196 = $2195 > 5.0000000000000004E-6;
                   if ($2196) {
                    break;
                   }
                   $2197 = $4;
                   __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$2197);
                   break L93;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $2198 = $ij114;
               $2199 = (($2198) + 1)|0;
               $ij114 = $2199;
              }
             }
            } while(0);
            if ((label|0) == 56) {
             label = 0;
             $757 = (($5) + 88|0);
             $758 = +HEAPF64[$757>>3];
             $759 = (($5) + 88|0);
             $760 = +HEAPF64[$759>>3];
             $761 = $758 * $760;
             $x68 = $761;
             $762 = (($5) + 8|0);
             $763 = +HEAPF64[$762>>3];
             $764 = (($5) + 464|0);
             $765 = +HEAPF64[$764>>3];
             $766 = $763 * $765;
             $x69 = $766;
             $767 = (($5) + 512|0);
             $768 = +HEAPF64[$767>>3];
             $769 = (($5) + 96|0);
             $770 = +HEAPF64[$769>>3];
             $771 = $768 * $770;
             $x70 = $771;
             $772 = (($5) + 88|0);
             $773 = +HEAPF64[$772>>3];
             $774 = 13.3333333333333 * $773;
             $x71 = $774;
             $775 = (($5) + 488|0);
             $776 = +HEAPF64[$775>>3];
             $777 = (($5) + 16|0);
             $778 = +HEAPF64[$777>>3];
             $779 = $776 * $778;
             $x72 = $779;
             $780 = (($5) + 96|0);
             $781 = +HEAPF64[$780>>3];
             $782 = 43.703703703703702 * $781;
             $x73 = $782;
             $783 = (($5) + 96|0);
             $784 = +HEAPF64[$783>>3];
             $785 = 0.29499999999999998 * $784;
             $x74 = $785;
             $786 = (($5) + 88|0);
             $787 = +HEAPF64[$786>>3];
             $788 = (($5) + 96|0);
             $789 = +HEAPF64[$788>>3];
             $790 = $787 * $789;
             $x75 = $790;
             $791 = (($5) + 88|0);
             $792 = +HEAPF64[$791>>3];
             $793 = 0.089999999999999996 * $792;
             $x76 = $793;
             $794 = (($5) + 88|0);
             $795 = +HEAPF64[$794>>3];
             $796 = (($5) + 512|0);
             $797 = +HEAPF64[$796>>3];
             $798 = $795 * $797;
             $x77 = $798;
             $799 = $x77;
             $800 = 43.703703703703702 * $799;
             $801 = 3.0 + $800;
             $802 = (($5) + 88|0);
             $803 = +HEAPF64[$802>>3];
             $804 = $801 + $803;
             $805 = $x69;
             $806 = $x73;
             $807 = $805 * $806;
             $808 = $804 + $807;
             $809 = $x72;
             $810 = -40.0 * $809;
             $811 = $808 + $810;
             $812 = $x71;
             $813 = -1.0 * $812;
             $814 = $x72;
             $815 = $813 * $814;
             $816 = $811 + $815;
             $817 = (($5) + 96|0);
             $818 = +HEAPF64[$817>>3];
             $819 = -3.2777777777777799 * $818;
             $820 = $816 + $819;
             $821 = $x69;
             $822 = -1.0 * $821;
             $823 = $x71;
             $824 = $822 * $823;
             $825 = $820 + $824;
             $826 = $x72;
             $827 = $x73;
             $828 = $826 * $827;
             $829 = $825 + $828;
             $830 = $x69;
             $831 = -40.0 * $830;
             $832 = $829 + $831;
             $833 = $x70;
             $834 = 13.3333333333333 * $833;
             $835 = $832 + $834;
             HEAPF64[$j1eval1>>3] = $835;
             $836 = (($5) + 96|0);
             $837 = +HEAPF64[$836>>3];
             $838 = 0.1593 * $837;
             $839 = -0.15992500000000001 + $838;
             $840 = $x68;
             $841 = 0.078924999999999995 * $840;
             $842 = $839 + $841;
             $843 = (($5) + 512|0);
             $844 = +HEAPF64[$843>>3];
             $845 = (($5) + 512|0);
             $846 = +HEAPF64[$845>>3];
             $847 = $844 * $846;
             $848 = $842 + $847;
             $849 = $x75;
             $850 = 0.053100000000000001 * $849;
             $851 = $848 + $850;
             $852 = (($5) + 88|0);
             $853 = +HEAPF64[$852>>3];
             $854 = -0.048599999999999997 * $853;
             $855 = $851 + $854;
             $856 = (+__Z5IKabsd($855));
             $857 = $x75;
             $858 = 0.078924999999999995 * $857;
             $859 = 0.026550000000000001 + $858;
             $860 = (($5) + 512|0);
             $861 = +HEAPF64[$860>>3];
             $862 = $x72;
             $863 = $861 * $862;
             $864 = $859 + $863;
             $865 = (($5) + 512|0);
             $866 = +HEAPF64[$865>>3];
             $867 = -0.074999999999999997 * $866;
             $868 = $864 + $867;
             $869 = (($5) + 96|0);
             $870 = +HEAPF64[$869>>3];
             $871 = -0.024299999999999999 * $870;
             $872 = $868 + $871;
             $873 = $x68;
             $874 = -0.053100000000000001 * $873;
             $875 = $872 + $874;
             $876 = (($5) + 88|0);
             $877 = +HEAPF64[$876>>3];
             $878 = -0.079649999999999999 * $877;
             $879 = $875 + $878;
             $880 = (($5) + 512|0);
             $881 = +HEAPF64[$880>>3];
             $882 = $x69;
             $883 = $881 * $882;
             $884 = $879 + $883;
             $885 = (+__Z5IKabsd($884));
             $886 = $856 + $885;
             $887 = (($j1eval1) + 8|0);
             HEAPF64[$887>>3] = $886;
             $888 = (($5) + 96|0);
             $889 = +HEAPF64[$888>>3];
             $890 = -0.022124999999999999 * $889;
             $891 = 0.020250000000000001 + $890;
             $892 = (($5) + 88|0);
             $893 = +HEAPF64[$892>>3];
             $894 = 0.0067499999999999999 * $893;
             $895 = $891 + $894;
             $896 = $x69;
             $897 = $x74;
             $898 = $896 * $897;
             $899 = $895 + $898;
             $900 = $x77;
             $901 = 0.29499999999999998 * $900;
             $902 = $899 + $901;
             $903 = $x72;
             $904 = -1.0 * $903;
             $905 = $x76;
             $906 = $904 * $905;
             $907 = $902 + $906;
             $908 = $x69;
             $909 = -1.0 * $908;
             $910 = $x76;
             $911 = $909 * $910;
             $912 = $907 + $911;
             $913 = $x72;
             $914 = $x74;
             $915 = $913 * $914;
             $916 = $912 + $915;
             $917 = $x70;
             $918 = 0.089999999999999996 * $917;
             $919 = $916 + $918;
             $920 = $x72;
             $921 = -0.27000000000000002 * $920;
             $922 = $919 + $921;
             $923 = $x69;
             $924 = -0.27000000000000002 * $923;
             $925 = $922 + $924;
             $926 = (+__Z6IKsignd($925));
             $927 = (($j1eval1) + 16|0);
             HEAPF64[$927>>3] = $926;
             $928 = +HEAPF64[$j1eval1>>3];
             $929 = (+__Z5IKabsd($928));
             $930 = $929 < 9.9999999999999995E-7;
             do {
              if ($930) {
               label = 59;
              } else {
               $931 = (($j1eval1) + 8|0);
               $932 = +HEAPF64[$931>>3];
               $933 = (+__Z5IKabsd($932));
               $934 = $933 < 9.9999999999999995E-7;
               if ($934) {
                label = 59;
                break;
               }
               $935 = (($j1eval1) + 16|0);
               $936 = +HEAPF64[$935>>3];
               $937 = (+__Z5IKabsd($936));
               $938 = $937 < 9.9999999999999995E-7;
               if ($938) {
                label = 59;
                break;
               }
               ;HEAP8[$j1valid6+0>>0]=0|0;
               $1442 = (($5) + 541|0);
               HEAP8[$1442>>0] = 1;
               $1443 = (($5) + 88|0);
               $1444 = +HEAPF64[$1443>>3];
               $1445 = (($5) + 88|0);
               $1446 = +HEAPF64[$1445>>3];
               $1447 = $1444 * $1446;
               $x470 = $1447;
               $1448 = (($5) + 8|0);
               $1449 = +HEAPF64[$1448>>3];
               $1450 = (($5) + 464|0);
               $1451 = +HEAPF64[$1450>>3];
               $1452 = $1449 * $1451;
               $x471 = $1452;
               $1453 = (($5) + 96|0);
               $1454 = +HEAPF64[$1453>>3];
               $1455 = 0.29499999999999998 * $1454;
               $x472 = $1455;
               $1456 = (($5) + 88|0);
               $1457 = +HEAPF64[$1456>>3];
               $1458 = (($5) + 96|0);
               $1459 = +HEAPF64[$1458>>3];
               $1460 = $1457 * $1459;
               $x473 = $1460;
               $1461 = (($5) + 88|0);
               $1462 = +HEAPF64[$1461>>3];
               $1463 = 0.089999999999999996 * $1462;
               $x474 = $1463;
               $1464 = (($5) + 488|0);
               $1465 = +HEAPF64[$1464>>3];
               $1466 = (($5) + 16|0);
               $1467 = +HEAPF64[$1466>>3];
               $1468 = $1465 * $1467;
               $x475 = $1468;
               $1469 = (($5) + 96|0);
               $1470 = +HEAPF64[$1469>>3];
               $1471 = -0.022124999999999999 * $1470;
               $1472 = 0.020250000000000001 + $1471;
               $1473 = $x471;
               $1474 = $x472;
               $1475 = $1473 * $1474;
               $1476 = $1472 + $1475;
               $1477 = (($5) + 512|0);
               $1478 = +HEAPF64[$1477>>3];
               $1479 = 0.089999999999999996 * $1478;
               $1480 = (($5) + 96|0);
               $1481 = +HEAPF64[$1480>>3];
               $1482 = $1479 * $1481;
               $1483 = $1476 + $1482;
               $1484 = (($5) + 88|0);
               $1485 = +HEAPF64[$1484>>3];
               $1486 = 0.29499999999999998 * $1485;
               $1487 = (($5) + 512|0);
               $1488 = +HEAPF64[$1487>>3];
               $1489 = $1486 * $1488;
               $1490 = $1483 + $1489;
               $1491 = $x472;
               $1492 = $x475;
               $1493 = $1491 * $1492;
               $1494 = $1490 + $1493;
               $1495 = (($5) + 88|0);
               $1496 = +HEAPF64[$1495>>3];
               $1497 = 0.0067499999999999999 * $1496;
               $1498 = $1494 + $1497;
               $1499 = $x471;
               $1500 = -1.0 * $1499;
               $1501 = $x474;
               $1502 = $1500 * $1501;
               $1503 = $1498 + $1502;
               $1504 = $x475;
               $1505 = -0.27000000000000002 * $1504;
               $1506 = $1503 + $1505;
               $1507 = $x471;
               $1508 = -0.27000000000000002 * $1507;
               $1509 = $1506 + $1508;
               $1510 = $x474;
               $1511 = -1.0 * $1510;
               $1512 = $x475;
               $1513 = $1511 * $1512;
               $1514 = $1509 + $1513;
               $1515 = (+__Z6IKsignd($1514));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x476,$1515,-1);
               $1516 = (($x476) + 8|0);
               $1517 = HEAP8[$1516>>0]|0;
               $1518 = $1517&1;
               if (!($1518)) {
                break L60;
               }
               $1519 = (($5) + 96|0);
               $1520 = +HEAPF64[$1519>>3];
               $1521 = 0.1593 * $1520;
               $1522 = -0.15992500000000001 + $1521;
               $1523 = (($5) + 512|0);
               $1524 = +HEAPF64[$1523>>3];
               $1525 = (($5) + 512|0);
               $1526 = +HEAPF64[$1525>>3];
               $1527 = $1524 * $1526;
               $1528 = $1522 + $1527;
               $1529 = $x470;
               $1530 = 0.078924999999999995 * $1529;
               $1531 = $1528 + $1530;
               $1532 = $x473;
               $1533 = 0.053100000000000001 * $1532;
               $1534 = $1531 + $1533;
               $1535 = (($5) + 88|0);
               $1536 = +HEAPF64[$1535>>3];
               $1537 = -0.048599999999999997 * $1536;
               $1538 = $1534 + $1537;
               $1539 = $x470;
               $1540 = -0.053100000000000001 * $1539;
               $1541 = 0.026550000000000001 + $1540;
               $1542 = (($5) + 512|0);
               $1543 = +HEAPF64[$1542>>3];
               $1544 = -0.074999999999999997 * $1543;
               $1545 = $1541 + $1544;
               $1546 = (($5) + 96|0);
               $1547 = +HEAPF64[$1546>>3];
               $1548 = -0.024299999999999999 * $1547;
               $1549 = $1545 + $1548;
               $1550 = $x473;
               $1551 = 0.078924999999999995 * $1550;
               $1552 = $1549 + $1551;
               $1553 = (($5) + 512|0);
               $1554 = +HEAPF64[$1553>>3];
               $1555 = $x471;
               $1556 = $1554 * $1555;
               $1557 = $1552 + $1556;
               $1558 = (($5) + 512|0);
               $1559 = +HEAPF64[$1558>>3];
               $1560 = $x475;
               $1561 = $1559 * $1560;
               $1562 = $1557 + $1561;
               $1563 = (($5) + 88|0);
               $1564 = +HEAPF64[$1563>>3];
               $1565 = -0.079649999999999999 * $1564;
               $1566 = $1562 + $1565;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x477,$1538,$1566,1.9999999999999999E-6);
               $1567 = (($x477) + 8|0);
               $1568 = HEAP8[$1567>>0]|0;
               $1569 = $1568&1;
               if (!($1569)) {
                break L60;
               }
               $1570 = +HEAPF64[$x476>>3];
               $1571 = 1.5707963267949001 * $1570;
               $1572 = -1.5707963267949001 + $1571;
               $1573 = +HEAPF64[$x477>>3];
               $1574 = $1572 + $1573;
               HEAPF64[$j1array3>>3] = $1574;
               $1575 = +HEAPF64[$j1array3>>3];
               $1576 = (+__Z5IKsind($1575));
               HEAPF64[$sj1array5>>3] = $1576;
               $1577 = +HEAPF64[$j1array3>>3];
               $1578 = (+__Z5IKcosd($1577));
               HEAPF64[$cj1array4>>3] = $1578;
               $1579 = +HEAPF64[$j1array3>>3];
               $1580 = $1579 > 3.14159265358979;
               if ($1580) {
                $1581 = +HEAPF64[$j1array3>>3];
                $1582 = $1581 - 6.2831853071795898;
                HEAPF64[$j1array3>>3] = $1582;
               } else {
                $1583 = +HEAPF64[$j1array3>>3];
                $1584 = $1583 < -3.14159265358979;
                if ($1584) {
                 $1585 = +HEAPF64[$j1array3>>3];
                 $1586 = $1585 + 6.2831853071795898;
                 HEAPF64[$j1array3>>3] = $1586;
                }
               }
               HEAP8[$j1valid6>>0] = 1;
               $ij17 = 0;
               while(1) {
                $1587 = $ij17;
                $1588 = ($1587|0)<(1);
                if (!($1588)) {
                 break;
                }
                $1589 = $ij17;
                $1590 = (($j1valid6) + ($1589)|0);
                $1591 = HEAP8[$1590>>0]|0;
                $1592 = $1591&1;
                L138: do {
                 if ($1592) {
                  $1593 = $ij17;
                  $1594 = $1593&255;
                  $1595 = (($5) + 539|0);
                  HEAP8[$1595>>0] = $1594;
                  $1596 = (($5) + 539|0);
                  $1597 = (($1596) + 1|0);
                  HEAP8[$1597>>0] = -1;
                  $1598 = $ij17;
                  $1599 = (($1598) + 1)|0;
                  $iij18 = $1599;
                  L141: while(1) {
                   $1600 = $iij18;
                   $1601 = ($1600|0)<(1);
                   if (!($1601)) {
                    break;
                   }
                   $1602 = $iij18;
                   $1603 = (($j1valid6) + ($1602)|0);
                   $1604 = HEAP8[$1603>>0]|0;
                   $1605 = $1604&1;
                   do {
                    if ($1605) {
                     $1606 = $ij17;
                     $1607 = (($cj1array4) + ($1606<<3)|0);
                     $1608 = +HEAPF64[$1607>>3];
                     $1609 = $iij18;
                     $1610 = (($cj1array4) + ($1609<<3)|0);
                     $1611 = +HEAPF64[$1610>>3];
                     $1612 = $1608 - $1611;
                     $1613 = (+__Z5IKabsd($1612));
                     $1614 = $1613 < 9.9999999999999995E-7;
                     if (!($1614)) {
                      break;
                     }
                     $1615 = $ij17;
                     $1616 = (($sj1array5) + ($1615<<3)|0);
                     $1617 = +HEAPF64[$1616>>3];
                     $1618 = $iij18;
                     $1619 = (($sj1array5) + ($1618<<3)|0);
                     $1620 = +HEAPF64[$1619>>3];
                     $1621 = $1617 - $1620;
                     $1622 = (+__Z5IKabsd($1621));
                     $1623 = $1622 < 9.9999999999999995E-7;
                     if ($1623) {
                      label = 111;
                      break L141;
                     }
                    }
                   } while(0);
                   $1630 = $iij18;
                   $1631 = (($1630) + 1)|0;
                   $iij18 = $1631;
                  }
                  if ((label|0) == 111) {
                   label = 0;
                   $1624 = $iij18;
                   $1625 = (($j1valid6) + ($1624)|0);
                   HEAP8[$1625>>0] = 0;
                   $1626 = $iij18;
                   $1627 = $1626&255;
                   $1628 = (($5) + 539|0);
                   $1629 = (($1628) + 1|0);
                   HEAP8[$1629>>0] = $1627;
                  }
                  $1632 = $ij17;
                  $1633 = (($j1array3) + ($1632<<3)|0);
                  $1634 = +HEAPF64[$1633>>3];
                  $1635 = (($5) + 40|0);
                  HEAPF64[$1635>>3] = $1634;
                  $1636 = $ij17;
                  $1637 = (($cj1array4) + ($1636<<3)|0);
                  $1638 = +HEAPF64[$1637>>3];
                  $1639 = (($5) + 48|0);
                  HEAPF64[$1639>>3] = $1638;
                  $1640 = $ij17;
                  $1641 = (($sj1array5) + ($1640<<3)|0);
                  $1642 = +HEAPF64[$1641>>3];
                  $1643 = (($5) + 56|0);
                  HEAPF64[$1643>>3] = $1642;
                  $1644 = (($5) + 40|0);
                  $1645 = +HEAPF64[$1644>>3];
                  $1646 = (+__Z5IKsind($1645));
                  $x478 = $1646;
                  $1647 = (($5) + 40|0);
                  $1648 = +HEAPF64[$1647>>3];
                  $1649 = (+__Z5IKcosd($1648));
                  $x479 = $1649;
                  $1650 = (($5) + 8|0);
                  $1651 = +HEAPF64[$1650>>3];
                  $1652 = (($5) + 464|0);
                  $1653 = +HEAPF64[$1652>>3];
                  $1654 = $1651 * $1653;
                  $x480 = $1654;
                  $1655 = (($5) + 88|0);
                  $1656 = +HEAPF64[$1655>>3];
                  $1657 = 0.089999999999999996 * $1656;
                  $x481 = $1657;
                  $1658 = (($5) + 488|0);
                  $1659 = +HEAPF64[$1658>>3];
                  $1660 = (($5) + 16|0);
                  $1661 = +HEAPF64[$1660>>3];
                  $1662 = $1659 * $1661;
                  $x482 = $1662;
                  $1663 = (($5) + 96|0);
                  $1664 = +HEAPF64[$1663>>3];
                  $1665 = 0.29499999999999998 * $1664;
                  $x483 = $1665;
                  $1666 = (($5) + 512|0);
                  $1667 = +HEAPF64[$1666>>3];
                  $1668 = 1.0 * $1667;
                  $x484 = $1668;
                  $1669 = (($5) + 96|0);
                  $1670 = +HEAPF64[$1669>>3];
                  $1671 = 0.089999999999999996 * $1670;
                  $x485 = $1671;
                  $1672 = (($5) + 88|0);
                  $1673 = +HEAPF64[$1672>>3];
                  $1674 = 0.29499999999999998 * $1673;
                  $x486 = $1674;
                  $1675 = $x478;
                  $1676 = 0.29499999999999998 * $1675;
                  $x487 = $1676;
                  $1677 = $x479;
                  $1678 = 1.0 * $1677;
                  $x488 = $1678;
                  $1679 = $x478;
                  $1680 = 0.54000000000000004 * $1679;
                  $x489 = $1680;
                  $1681 = $x481;
                  $1682 = -1.0 * $1681;
                  $1683 = -0.27000000000000002 + $1682;
                  $1684 = $x478;
                  $1685 = $x480;
                  $1686 = $1684 * $1685;
                  $1687 = $1683 + $1686;
                  $1688 = $x478;
                  $1689 = $x482;
                  $1690 = $1688 * $1689;
                  $1691 = $1687 + $1690;
                  $1692 = $x483;
                  $1693 = $1691 + $1692;
                  $1694 = $x479;
                  $1695 = -1.0 * $1694;
                  $1696 = $x484;
                  $1697 = $1695 * $1696;
                  $1698 = $1693 + $1697;
                  $1699 = $x478;
                  $1700 = -0.074999999999999997 * $1699;
                  $1701 = $1698 + $1700;
                  HEAPF64[$evalcond9>>3] = $1701;
                  $1702 = $x479;
                  $1703 = 0.074999999999999997 * $1702;
                  $1704 = $x485;
                  $1705 = $1703 + $1704;
                  $1706 = $x486;
                  $1707 = $1705 + $1706;
                  $1708 = $x480;
                  $1709 = -1.0 * $1708;
                  $1710 = $x488;
                  $1711 = $1709 * $1710;
                  $1712 = $1707 + $1711;
                  $1713 = $x482;
                  $1714 = -1.0 * $1713;
                  $1715 = $x488;
                  $1716 = $1714 * $1715;
                  $1717 = $1712 + $1716;
                  $1718 = $x478;
                  $1719 = -1.0 * $1718;
                  $1720 = $x484;
                  $1721 = $1719 * $1720;
                  $1722 = $1717 + $1721;
                  $1723 = (($evalcond9) + 8|0);
                  HEAPF64[$1723>>3] = $1722;
                  $1724 = $x484;
                  $1725 = -1.0 * $1724;
                  $1726 = $x478;
                  $1727 = $x485;
                  $1728 = $1726 * $1727;
                  $1729 = $1725 + $1728;
                  $1730 = $x478;
                  $1731 = $x486;
                  $1732 = $1730 * $1731;
                  $1733 = $1729 + $1732;
                  $1734 = $x479;
                  $1735 = -1.0 * $1734;
                  $1736 = $x481;
                  $1737 = $1735 * $1736;
                  $1738 = $1733 + $1737;
                  $1739 = $x479;
                  $1740 = -0.27000000000000002 * $1739;
                  $1741 = $1738 + $1740;
                  $1742 = $x479;
                  $1743 = $x483;
                  $1744 = $1742 * $1743;
                  $1745 = $1741 + $1744;
                  $1746 = (($evalcond9) + 16|0);
                  HEAPF64[$1746>>3] = $1745;
                  $1747 = (($5) + 528|0);
                  $1748 = +HEAPF64[$1747>>3];
                  $1749 = -1.0 * $1748;
                  $1750 = 0.0166 + $1749;
                  $1751 = $x480;
                  $1752 = 0.14999999999999999 * $1751;
                  $1753 = $1750 + $1752;
                  $1754 = $x482;
                  $1755 = 0.14999999999999999 * $1754;
                  $1756 = $1753 + $1755;
                  $1757 = $x480;
                  $1758 = $x489;
                  $1759 = $1757 * $1758;
                  $1760 = $1756 + $1759;
                  $1761 = $x478;
                  $1762 = -0.040500000000000001 * $1761;
                  $1763 = $1760 + $1762;
                  $1764 = $x482;
                  $1765 = $x489;
                  $1766 = $1764 * $1765;
                  $1767 = $1763 + $1766;
                  $1768 = (($5) + 512|0);
                  $1769 = +HEAPF64[$1768>>3];
                  $1770 = -0.54000000000000004 * $1769;
                  $1771 = $x479;
                  $1772 = $1770 * $1771;
                  $1773 = $1767 + $1772;
                  $1774 = (($evalcond9) + 24|0);
                  HEAPF64[$1774>>3] = $1773;
                  $1775 = $x478;
                  $1776 = 0.27000000000000002 * $1775;
                  $1777 = 0.074999999999999997 + $1776;
                  $1778 = $x482;
                  $1779 = -1.0 * $1778;
                  $1780 = $1777 + $1779;
                  $1781 = $x480;
                  $1782 = -1.0 * $1781;
                  $1783 = $1780 + $1782;
                  $1784 = $x478;
                  $1785 = $x481;
                  $1786 = $1784 * $1785;
                  $1787 = $1783 + $1786;
                  $1788 = $x479;
                  $1789 = $x486;
                  $1790 = $1788 * $1789;
                  $1791 = $1787 + $1790;
                  $1792 = $x479;
                  $1793 = $x485;
                  $1794 = $1792 * $1793;
                  $1795 = $1791 + $1794;
                  $1796 = $x478;
                  $1797 = -1.0 * $1796;
                  $1798 = $x483;
                  $1799 = $1797 * $1798;
                  $1800 = $1795 + $1799;
                  $1801 = (($evalcond9) + 32|0);
                  HEAPF64[$1801>>3] = $1800;
                  $1802 = +HEAPF64[$evalcond9>>3];
                  $1803 = (+__Z5IKabsd($1802));
                  $1804 = $1803 > 5.0000000000000004E-6;
                  do {
                   if (!($1804)) {
                    $1805 = (($evalcond9) + 8|0);
                    $1806 = +HEAPF64[$1805>>3];
                    $1807 = (+__Z5IKabsd($1806));
                    $1808 = $1807 > 5.0000000000000004E-6;
                    if ($1808) {
                     break;
                    }
                    $1809 = (($evalcond9) + 16|0);
                    $1810 = +HEAPF64[$1809>>3];
                    $1811 = (+__Z5IKabsd($1810));
                    $1812 = $1811 > 5.0000000000000004E-6;
                    if ($1812) {
                     break;
                    }
                    $1813 = (($evalcond9) + 24|0);
                    $1814 = +HEAPF64[$1813>>3];
                    $1815 = (+__Z5IKabsd($1814));
                    $1816 = $1815 > 5.0000000000000004E-6;
                    if ($1816) {
                     break;
                    }
                    $1817 = (($evalcond9) + 32|0);
                    $1818 = +HEAPF64[$1817>>3];
                    $1819 = (+__Z5IKabsd($1818));
                    $1820 = $1819 > 5.0000000000000004E-6;
                    if ($1820) {
                     break;
                    }
                    $1821 = $4;
                    __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1821);
                    break L138;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $1822 = $ij17;
                $1823 = (($1822) + 1)|0;
                $ij17 = $1823;
               }
              }
             } while(0);
             L161: do {
              if ((label|0) == 59) {
               label = 0;
               $939 = (($5) + 8|0);
               $940 = +HEAPF64[$939>>3];
               $941 = (($5) + 8|0);
               $942 = +HEAPF64[$941>>3];
               $943 = $940 * $942;
               $x78 = $943;
               $944 = (($5) + 488|0);
               $945 = +HEAPF64[$944>>3];
               $946 = (($5) + 488|0);
               $947 = +HEAPF64[$946>>3];
               $948 = $945 * $947;
               $x79 = $948;
               $949 = (($5) + 464|0);
               $950 = +HEAPF64[$949>>3];
               $951 = (($5) + 464|0);
               $952 = +HEAPF64[$951>>3];
               $953 = $950 * $952;
               $x80 = $953;
               $954 = (($5) + 512|0);
               $955 = +HEAPF64[$954>>3];
               $956 = (($5) + 512|0);
               $957 = +HEAPF64[$956>>3];
               $958 = $955 * $957;
               $x81 = $958;
               $959 = (($5) + 488|0);
               $960 = +HEAPF64[$959>>3];
               $961 = (($5) + 16|0);
               $962 = +HEAPF64[$961>>3];
               $963 = $960 * $962;
               $x82 = $963;
               $964 = (($5) + 8|0);
               $965 = +HEAPF64[$964>>3];
               $966 = (($5) + 464|0);
               $967 = +HEAPF64[$966>>3];
               $968 = $965 * $967;
               $x83 = $968;
               $969 = $x78;
               $970 = $x79;
               $971 = $969 * $970;
               $x84 = $971;
               $972 = $x78;
               $973 = $x80;
               $974 = $972 * $973;
               $x85 = $974;
               $975 = $x82;
               $976 = $x83;
               $977 = $975 * $976;
               $x86 = $977;
               $978 = $x84;
               $979 = 177.777777777778 * $978;
               $980 = -1.0 + $979;
               $981 = $x82;
               $982 = 26.6666666666667 * $981;
               $983 = $980 + $982;
               $984 = $x83;
               $985 = 26.6666666666667 * $984;
               $986 = $983 + $985;
               $987 = $x79;
               $988 = -177.777777777778 * $987;
               $989 = $986 + $988;
               $990 = $x85;
               $991 = -177.777777777778 * $990;
               $992 = $989 + $991;
               $993 = $x81;
               $994 = -177.777777777778 * $993;
               $995 = $992 + $994;
               $996 = $x86;
               $997 = -355.555555555556 * $996;
               $998 = $995 + $997;
               HEAPF64[$j1eval2>>3] = $998;
               $999 = $x82;
               $1000 = 0.14999999999999999 * $999;
               $1001 = -0.0056249999999999998 + $1000;
               $1002 = $x83;
               $1003 = 0.14999999999999999 * $1002;
               $1004 = $1001 + $1003;
               $1005 = $x86;
               $1006 = -2.0 * $1005;
               $1007 = $1004 + $1006;
               $1008 = $x84;
               $1009 = $1007 + $1008;
               $1010 = $x81;
               $1011 = -1.0 * $1010;
               $1012 = $1009 + $1011;
               $1013 = $x85;
               $1014 = -1.0 * $1013;
               $1015 = $1012 + $1014;
               $1016 = $x79;
               $1017 = -1.0 * $1016;
               $1018 = $1015 + $1017;
               $1019 = (+__Z6IKsignd($1018));
               $1020 = (($j1eval2) + 8|0);
               HEAPF64[$1020>>3] = $1019;
               $1021 = +HEAPF64[$j1eval2>>3];
               $1022 = (+__Z5IKabsd($1021));
               $1023 = $1022 < 9.9999999999999995E-7;
               do {
                if (!($1023)) {
                 $1024 = (($j1eval2) + 8|0);
                 $1025 = +HEAPF64[$1024>>3];
                 $1026 = (+__Z5IKabsd($1025));
                 $1027 = $1026 < 9.9999999999999995E-7;
                 if ($1027) {
                  break;
                 }
                 ;HEAP8[$j1valid+0>>0]=0|0;
                 $1028 = (($5) + 541|0);
                 HEAP8[$1028>>0] = 1;
                 $1029 = (($5) + 488|0);
                 $1030 = +HEAPF64[$1029>>3];
                 $1031 = (($5) + 488|0);
                 $1032 = +HEAPF64[$1031>>3];
                 $1033 = $1030 * $1032;
                 $x87 = $1033;
                 $1034 = (($5) + 8|0);
                 $1035 = +HEAPF64[$1034>>3];
                 $1036 = (($5) + 8|0);
                 $1037 = +HEAPF64[$1036>>3];
                 $1038 = $1035 * $1037;
                 $x88 = $1038;
                 $1039 = (($5) + 8|0);
                 $1040 = +HEAPF64[$1039>>3];
                 $1041 = (($5) + 464|0);
                 $1042 = +HEAPF64[$1041>>3];
                 $1043 = $1040 * $1042;
                 $x89 = $1043;
                 $1044 = (($5) + 88|0);
                 $1045 = +HEAPF64[$1044>>3];
                 $1046 = 0.29499999999999998 * $1045;
                 $x90 = $1046;
                 $1047 = (($5) + 96|0);
                 $1048 = +HEAPF64[$1047>>3];
                 $1049 = 0.089999999999999996 * $1048;
                 $x91 = $1049;
                 $1050 = (($5) + 488|0);
                 $1051 = +HEAPF64[$1050>>3];
                 $1052 = (($5) + 16|0);
                 $1053 = +HEAPF64[$1052>>3];
                 $1054 = $1051 * $1053;
                 $x92 = $1054;
                 $1055 = (($5) + 96|0);
                 $1056 = +HEAPF64[$1055>>3];
                 $1057 = 0.29499999999999998 * $1056;
                 $x93 = $1057;
                 $1058 = (($5) + 88|0);
                 $1059 = +HEAPF64[$1058>>3];
                 $1060 = 0.089999999999999996 * $1059;
                 $x94 = $1060;
                 $1061 = $x89;
                 $1062 = 0.14999999999999999 * $1061;
                 $1063 = -0.0056249999999999998 + $1062;
                 $1064 = $x92;
                 $1065 = 0.14999999999999999 * $1064;
                 $1066 = $1063 + $1065;
                 $1067 = $x89;
                 $1068 = -2.0 * $1067;
                 $1069 = $x92;
                 $1070 = $1068 * $1069;
                 $1071 = $1066 + $1070;
                 $1072 = $x87;
                 $1073 = -1.0 * $1072;
                 $1074 = $1071 + $1073;
                 $1075 = (($5) + 512|0);
                 $1076 = +HEAPF64[$1075>>3];
                 $1077 = (($5) + 512|0);
                 $1078 = +HEAPF64[$1077>>3];
                 $1079 = $1076 * $1078;
                 $1080 = -1.0 * $1079;
                 $1081 = $1074 + $1080;
                 $1082 = $x88;
                 $1083 = -1.0 * $1082;
                 $1084 = (($5) + 464|0);
                 $1085 = +HEAPF64[$1084>>3];
                 $1086 = (($5) + 464|0);
                 $1087 = +HEAPF64[$1086>>3];
                 $1088 = $1085 * $1087;
                 $1089 = $1083 * $1088;
                 $1090 = $1081 + $1089;
                 $1091 = $x87;
                 $1092 = $x88;
                 $1093 = $1091 * $1092;
                 $1094 = $1090 + $1093;
                 $1095 = (+__Z6IKsignd($1094));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x95,$1095,-1);
                 $1096 = (($x95) + 8|0);
                 $1097 = HEAP8[$1096>>0]|0;
                 $1098 = $1097&1;
                 if (!($1098)) {
                  break L60;
                 }
                 $1099 = (($5) + 96|0);
                 $1100 = +HEAPF64[$1099>>3];
                 $1101 = -0.022124999999999999 * $1100;
                 $1102 = 0.020250000000000001 + $1101;
                 $1103 = (($5) + 512|0);
                 $1104 = +HEAPF64[$1103>>3];
                 $1105 = -1.0 * $1104;
                 $1106 = $x90;
                 $1107 = $1105 * $1106;
                 $1108 = $1102 + $1107;
                 $1109 = (($5) + 512|0);
                 $1110 = +HEAPF64[$1109>>3];
                 $1111 = -1.0 * $1110;
                 $1112 = $x91;
                 $1113 = $1111 * $1112;
                 $1114 = $1108 + $1113;
                 $1115 = $x89;
                 $1116 = $x93;
                 $1117 = $1115 * $1116;
                 $1118 = $1114 + $1117;
                 $1119 = $x92;
                 $1120 = $x93;
                 $1121 = $1119 * $1120;
                 $1122 = $1118 + $1121;
                 $1123 = (($5) + 88|0);
                 $1124 = +HEAPF64[$1123>>3];
                 $1125 = 0.0067499999999999999 * $1124;
                 $1126 = $1122 + $1125;
                 $1127 = $x92;
                 $1128 = -1.0 * $1127;
                 $1129 = $x94;
                 $1130 = $1128 * $1129;
                 $1131 = $1126 + $1130;
                 $1132 = $x92;
                 $1133 = -0.27000000000000002 * $1132;
                 $1134 = $1131 + $1133;
                 $1135 = $x89;
                 $1136 = -1.0 * $1135;
                 $1137 = $x94;
                 $1138 = $1136 * $1137;
                 $1139 = $1134 + $1138;
                 $1140 = $x89;
                 $1141 = -0.27000000000000002 * $1140;
                 $1142 = $1139 + $1141;
                 $1143 = (($5) + 512|0);
                 $1144 = +HEAPF64[$1143>>3];
                 $1145 = -1.0 * $1144;
                 $1146 = $x93;
                 $1147 = $1145 * $1146;
                 $1148 = (($5) + 96|0);
                 $1149 = +HEAPF64[$1148>>3];
                 $1150 = 0.0067499999999999999 * $1149;
                 $1151 = $1147 + $1150;
                 $1152 = (($5) + 512|0);
                 $1153 = +HEAPF64[$1152>>3];
                 $1154 = 0.27000000000000002 * $1153;
                 $1155 = $1151 + $1154;
                 $1156 = $x90;
                 $1157 = -1.0 * $1156;
                 $1158 = $x92;
                 $1159 = $1157 * $1158;
                 $1160 = $1155 + $1159;
                 $1161 = $x91;
                 $1162 = -1.0 * $1161;
                 $1163 = $x92;
                 $1164 = $1162 * $1163;
                 $1165 = $1160 + $1164;
                 $1166 = (($5) + 512|0);
                 $1167 = +HEAPF64[$1166>>3];
                 $1168 = $x94;
                 $1169 = $1167 * $1168;
                 $1170 = $1165 + $1169;
                 $1171 = (($5) + 88|0);
                 $1172 = +HEAPF64[$1171>>3];
                 $1173 = 0.022124999999999999 * $1172;
                 $1174 = $1170 + $1173;
                 $1175 = $x89;
                 $1176 = -1.0 * $1175;
                 $1177 = $x90;
                 $1178 = $1176 * $1177;
                 $1179 = $1174 + $1178;
                 $1180 = $x89;
                 $1181 = -1.0 * $1180;
                 $1182 = $x91;
                 $1183 = $1181 * $1182;
                 $1184 = $1179 + $1183;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x96,$1142,$1184,1.9999999999999999E-6);
                 $1185 = (($x96) + 8|0);
                 $1186 = HEAP8[$1185>>0]|0;
                 $1187 = $1186&1;
                 if (!($1187)) {
                  break L60;
                 }
                 $1188 = +HEAPF64[$x95>>3];
                 $1189 = 1.5707963267949001 * $1188;
                 $1190 = -1.5707963267949001 + $1189;
                 $1191 = +HEAPF64[$x96>>3];
                 $1192 = $1190 + $1191;
                 HEAPF64[$j1array>>3] = $1192;
                 $1193 = +HEAPF64[$j1array>>3];
                 $1194 = (+__Z5IKsind($1193));
                 HEAPF64[$sj1array>>3] = $1194;
                 $1195 = +HEAPF64[$j1array>>3];
                 $1196 = (+__Z5IKcosd($1195));
                 HEAPF64[$cj1array>>3] = $1196;
                 $1197 = +HEAPF64[$j1array>>3];
                 $1198 = $1197 > 3.14159265358979;
                 if ($1198) {
                  $1199 = +HEAPF64[$j1array>>3];
                  $1200 = $1199 - 6.2831853071795898;
                  HEAPF64[$j1array>>3] = $1200;
                 } else {
                  $1201 = +HEAPF64[$j1array>>3];
                  $1202 = $1201 < -3.14159265358979;
                  if ($1202) {
                   $1203 = +HEAPF64[$j1array>>3];
                   $1204 = $1203 + 6.2831853071795898;
                   HEAPF64[$j1array>>3] = $1204;
                  }
                 }
                 HEAP8[$j1valid>>0] = 1;
                 $ij1 = 0;
                 while(1) {
                  $1205 = $ij1;
                  $1206 = ($1205|0)<(1);
                  if (!($1206)) {
                   break;
                  }
                  $1207 = $ij1;
                  $1208 = (($j1valid) + ($1207)|0);
                  $1209 = HEAP8[$1208>>0]|0;
                  $1210 = $1209&1;
                  L182: do {
                   if ($1210) {
                    $1211 = $ij1;
                    $1212 = $1211&255;
                    $1213 = (($5) + 539|0);
                    HEAP8[$1213>>0] = $1212;
                    $1214 = (($5) + 539|0);
                    $1215 = (($1214) + 1|0);
                    HEAP8[$1215>>0] = -1;
                    $1216 = $ij1;
                    $1217 = (($1216) + 1)|0;
                    $iij1 = $1217;
                    L185: while(1) {
                     $1218 = $iij1;
                     $1219 = ($1218|0)<(1);
                     if (!($1219)) {
                      break;
                     }
                     $1220 = $iij1;
                     $1221 = (($j1valid) + ($1220)|0);
                     $1222 = HEAP8[$1221>>0]|0;
                     $1223 = $1222&1;
                     do {
                      if ($1223) {
                       $1224 = $ij1;
                       $1225 = (($cj1array) + ($1224<<3)|0);
                       $1226 = +HEAPF64[$1225>>3];
                       $1227 = $iij1;
                       $1228 = (($cj1array) + ($1227<<3)|0);
                       $1229 = +HEAPF64[$1228>>3];
                       $1230 = $1226 - $1229;
                       $1231 = (+__Z5IKabsd($1230));
                       $1232 = $1231 < 9.9999999999999995E-7;
                       if (!($1232)) {
                        break;
                       }
                       $1233 = $ij1;
                       $1234 = (($sj1array) + ($1233<<3)|0);
                       $1235 = +HEAPF64[$1234>>3];
                       $1236 = $iij1;
                       $1237 = (($sj1array) + ($1236<<3)|0);
                       $1238 = +HEAPF64[$1237>>3];
                       $1239 = $1235 - $1238;
                       $1240 = (+__Z5IKabsd($1239));
                       $1241 = $1240 < 9.9999999999999995E-7;
                       if ($1241) {
                        label = 80;
                        break L185;
                       }
                      }
                     } while(0);
                     $1248 = $iij1;
                     $1249 = (($1248) + 1)|0;
                     $iij1 = $1249;
                    }
                    if ((label|0) == 80) {
                     label = 0;
                     $1242 = $iij1;
                     $1243 = (($j1valid) + ($1242)|0);
                     HEAP8[$1243>>0] = 0;
                     $1244 = $iij1;
                     $1245 = $1244&255;
                     $1246 = (($5) + 539|0);
                     $1247 = (($1246) + 1|0);
                     HEAP8[$1247>>0] = $1245;
                    }
                    $1250 = $ij1;
                    $1251 = (($j1array) + ($1250<<3)|0);
                    $1252 = +HEAPF64[$1251>>3];
                    $1253 = (($5) + 40|0);
                    HEAPF64[$1253>>3] = $1252;
                    $1254 = $ij1;
                    $1255 = (($cj1array) + ($1254<<3)|0);
                    $1256 = +HEAPF64[$1255>>3];
                    $1257 = (($5) + 48|0);
                    HEAPF64[$1257>>3] = $1256;
                    $1258 = $ij1;
                    $1259 = (($sj1array) + ($1258<<3)|0);
                    $1260 = +HEAPF64[$1259>>3];
                    $1261 = (($5) + 56|0);
                    HEAPF64[$1261>>3] = $1260;
                    $1262 = (($5) + 40|0);
                    $1263 = +HEAPF64[$1262>>3];
                    $1264 = (+__Z5IKsind($1263));
                    $x97 = $1264;
                    $1265 = (($5) + 40|0);
                    $1266 = +HEAPF64[$1265>>3];
                    $1267 = (+__Z5IKcosd($1266));
                    $x98 = $1267;
                    $1268 = (($5) + 8|0);
                    $1269 = +HEAPF64[$1268>>3];
                    $1270 = (($5) + 464|0);
                    $1271 = +HEAPF64[$1270>>3];
                    $1272 = $1269 * $1271;
                    $x99 = $1272;
                    $1273 = (($5) + 88|0);
                    $1274 = +HEAPF64[$1273>>3];
                    $1275 = 0.089999999999999996 * $1274;
                    $x100 = $1275;
                    $1276 = (($5) + 488|0);
                    $1277 = +HEAPF64[$1276>>3];
                    $1278 = (($5) + 16|0);
                    $1279 = +HEAPF64[$1278>>3];
                    $1280 = $1277 * $1279;
                    $x101 = $1280;
                    $1281 = (($5) + 96|0);
                    $1282 = +HEAPF64[$1281>>3];
                    $1283 = 0.29499999999999998 * $1282;
                    $x102 = $1283;
                    $1284 = (($5) + 512|0);
                    $1285 = +HEAPF64[$1284>>3];
                    $1286 = 1.0 * $1285;
                    $x103 = $1286;
                    $1287 = (($5) + 96|0);
                    $1288 = +HEAPF64[$1287>>3];
                    $1289 = 0.089999999999999996 * $1288;
                    $x104 = $1289;
                    $1290 = (($5) + 88|0);
                    $1291 = +HEAPF64[$1290>>3];
                    $1292 = 0.29499999999999998 * $1291;
                    $x105 = $1292;
                    $1293 = $x97;
                    $1294 = 0.29499999999999998 * $1293;
                    $x106 = $1294;
                    $1295 = $x98;
                    $1296 = 1.0 * $1295;
                    $x107 = $1296;
                    $1297 = $x97;
                    $1298 = 0.54000000000000004 * $1297;
                    $x108 = $1298;
                    $1299 = $x103;
                    $1300 = -1.0 * $1299;
                    $1301 = $x98;
                    $1302 = $1300 * $1301;
                    $1303 = -0.27000000000000002 + $1302;
                    $1304 = $x101;
                    $1305 = $x97;
                    $1306 = $1304 * $1305;
                    $1307 = $1303 + $1306;
                    $1308 = $x100;
                    $1309 = -1.0 * $1308;
                    $1310 = $1307 + $1309;
                    $1311 = $x97;
                    $1312 = $x99;
                    $1313 = $1311 * $1312;
                    $1314 = $1310 + $1313;
                    $1315 = $x102;
                    $1316 = $1314 + $1315;
                    $1317 = $x97;
                    $1318 = -0.074999999999999997 * $1317;
                    $1319 = $1316 + $1318;
                    HEAPF64[$evalcond>>3] = $1319;
                    $1320 = $x107;
                    $1321 = -1.0 * $1320;
                    $1322 = $x99;
                    $1323 = $1321 * $1322;
                    $1324 = $x103;
                    $1325 = -1.0 * $1324;
                    $1326 = $x97;
                    $1327 = $1325 * $1326;
                    $1328 = $1323 + $1327;
                    $1329 = $x101;
                    $1330 = -1.0 * $1329;
                    $1331 = $x107;
                    $1332 = $1330 * $1331;
                    $1333 = $1328 + $1332;
                    $1334 = $x98;
                    $1335 = 0.074999999999999997 * $1334;
                    $1336 = $1333 + $1335;
                    $1337 = $x104;
                    $1338 = $1336 + $1337;
                    $1339 = $x105;
                    $1340 = $1338 + $1339;
                    $1341 = (($evalcond) + 8|0);
                    HEAPF64[$1341>>3] = $1340;
                    $1342 = $x102;
                    $1343 = $x98;
                    $1344 = $1342 * $1343;
                    $1345 = $x103;
                    $1346 = -1.0 * $1345;
                    $1347 = $1344 + $1346;
                    $1348 = $x100;
                    $1349 = -1.0 * $1348;
                    $1350 = $x98;
                    $1351 = $1349 * $1350;
                    $1352 = $1347 + $1351;
                    $1353 = $x105;
                    $1354 = $x97;
                    $1355 = $1353 * $1354;
                    $1356 = $1352 + $1355;
                    $1357 = $x98;
                    $1358 = -0.27000000000000002 * $1357;
                    $1359 = $1356 + $1358;
                    $1360 = $x104;
                    $1361 = $x97;
                    $1362 = $1360 * $1361;
                    $1363 = $1359 + $1362;
                    $1364 = (($evalcond) + 16|0);
                    HEAPF64[$1364>>3] = $1363;
                    $1365 = $x99;
                    $1366 = 0.14999999999999999 * $1365;
                    $1367 = 0.0166 + $1366;
                    $1368 = (($5) + 512|0);
                    $1369 = +HEAPF64[$1368>>3];
                    $1370 = -0.54000000000000004 * $1369;
                    $1371 = $x98;
                    $1372 = $1370 * $1371;
                    $1373 = $1367 + $1372;
                    $1374 = (($5) + 528|0);
                    $1375 = +HEAPF64[$1374>>3];
                    $1376 = -1.0 * $1375;
                    $1377 = $1373 + $1376;
                    $1378 = $x108;
                    $1379 = $x99;
                    $1380 = $1378 * $1379;
                    $1381 = $1377 + $1380;
                    $1382 = $x101;
                    $1383 = 0.14999999999999999 * $1382;
                    $1384 = $1381 + $1383;
                    $1385 = $x101;
                    $1386 = $x108;
                    $1387 = $1385 * $1386;
                    $1388 = $1384 + $1387;
                    $1389 = $x97;
                    $1390 = -0.040500000000000001 * $1389;
                    $1391 = $1388 + $1390;
                    $1392 = (($evalcond) + 24|0);
                    HEAPF64[$1392>>3] = $1391;
                    $1393 = $x102;
                    $1394 = -1.0 * $1393;
                    $1395 = $x97;
                    $1396 = $1394 * $1395;
                    $1397 = 0.074999999999999997 + $1396;
                    $1398 = $x100;
                    $1399 = $x97;
                    $1400 = $1398 * $1399;
                    $1401 = $1397 + $1400;
                    $1402 = $x99;
                    $1403 = -1.0 * $1402;
                    $1404 = $1401 + $1403;
                    $1405 = $x97;
                    $1406 = 0.27000000000000002 * $1405;
                    $1407 = $1404 + $1406;
                    $1408 = $x105;
                    $1409 = $x98;
                    $1410 = $1408 * $1409;
                    $1411 = $1407 + $1410;
                    $1412 = $x101;
                    $1413 = -1.0 * $1412;
                    $1414 = $1411 + $1413;
                    $1415 = $x104;
                    $1416 = $x98;
                    $1417 = $1415 * $1416;
                    $1418 = $1414 + $1417;
                    $1419 = (($evalcond) + 32|0);
                    HEAPF64[$1419>>3] = $1418;
                    $1420 = +HEAPF64[$evalcond>>3];
                    $1421 = (+__Z5IKabsd($1420));
                    $1422 = $1421 > 5.0000000000000004E-6;
                    do {
                     if (!($1422)) {
                      $1423 = (($evalcond) + 8|0);
                      $1424 = +HEAPF64[$1423>>3];
                      $1425 = (+__Z5IKabsd($1424));
                      $1426 = $1425 > 5.0000000000000004E-6;
                      if ($1426) {
                       break;
                      }
                      $1427 = (($evalcond) + 16|0);
                      $1428 = +HEAPF64[$1427>>3];
                      $1429 = (+__Z5IKabsd($1428));
                      $1430 = $1429 > 5.0000000000000004E-6;
                      if ($1430) {
                       break;
                      }
                      $1431 = (($evalcond) + 24|0);
                      $1432 = +HEAPF64[$1431>>3];
                      $1433 = (+__Z5IKabsd($1432));
                      $1434 = $1433 > 5.0000000000000004E-6;
                      if ($1434) {
                       break;
                      }
                      $1435 = (($evalcond) + 32|0);
                      $1436 = +HEAPF64[$1435>>3];
                      $1437 = (+__Z5IKabsd($1436));
                      $1438 = $1437 > 5.0000000000000004E-6;
                      if ($1438) {
                       break;
                      }
                      $1439 = $4;
                      __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($5,$1439);
                      break L182;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1440 = $ij1;
                  $1441 = (($1440) + 1)|0;
                  $ij1 = $1441;
                 }
                 break L161;
                }
               } while(0);
               break L60;
              }
             } while(0);
            }
           } else {
           }
          } while(0);
          $2200 = $ij2;
          $2201 = (($2200) + 1)|0;
          $ij2 = $2201;
         }
         break;
        }
       }
      } else {
      }
     } while(0);
     $2202 = $ij0;
     $2203 = (($2202) + 1)|0;
     $ij0 = $2203;
    }
   }
  } while(0);
  $2204 = $dummyiter;
  $2205 = (($2204) + 1)|0;
  $dummyiter = $2205;
 }
 $2206 = $4;
 $2207 = HEAP32[$2206>>2]|0;
 $2208 = (($2207) + 16|0);
 $2209 = HEAP32[$2208>>2]|0;
 $2210 = (FUNCTION_TABLE_ii[$2209 & 1023]($2206)|0);
 $2211 = ($2210>>>0)>(0);
 STACKTOP = sp;return ($2211|0);
}
function __ZN6ikfast14IkSolutionListIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __ZN6ikfast18IkSolutionListBaseIdEC2Ev($3);
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(359,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(360,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(361,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(362,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<3)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast14IkSolutionListIdE11GetSolutionEj($this,$index) {
 $this = $this|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $it = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $it = sp;
 $0 = $this;
 $1 = $index;
 $4 = $0;
 $5 = $1;
 $6 = (($4) + 4|0);
 $7 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($6)|0);
 $8 = ($5>>>0)>=($7>>>0);
 if (!($8)) {
  $14 = (($4) + 4|0);
  __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($it,$14);
  $15 = $1;
  __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($it,$15);
  $16 = (__ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($it)|0);
  STACKTOP = sp;return ($16|0);
 }
 $9 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($9|0),(368|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  ___cxa_throw(($9|0),(2568|0),(62|0));
  // unreachable;
 }
 $12 = ___cxa_find_matching_catch()|0;
 $13 = tempRet0;
 $2 = $12;
 $3 = $13;
 ___cxa_free_exception(($9|0));
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionListIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (400 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 __THREW__ = 0;
 invoke_vi(364,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN6ikfast18IkSolutionListBaseIdED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(1,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $6 = $0;
 $7 = (($6) + 4|0);
 $8 = (__ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $index = $8;
 $9 = (($6) + 4|0);
 $10 = $1;
 $11 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($3,$10,$11);
 __THREW__ = 0;
 invoke_vii(365,($9|0),($3|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  __ZN6ikfast10IkSolutionIdED2Ev($3);
  $14 = $index;
  STACKTOP = sp;return ($14|0);
 }
 $15 = ___cxa_find_matching_catch()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $19 = $4;
 $20 = $5;
 ___resumeException($19|0);
 // unreachable;
 return (0)|0;
}
function __ZN6ikfast14IkSolutionListIdE5ClearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($2);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (528 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 16|0);
 __THREW__ = 0;
 invoke_vi(366,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $1 = $11;
   $2 = $12;
   $13 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   } else {
    break;
   }
  } else {
   $8 = (($3) + 4|0);
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch()|0;
    $17 = tempRet0;
    $1 = $16;
    $2 = $17;
    break;
   } else {
    __ZN6ikfast14IkSolutionBaseIdED2Ev($3);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 }
 $20 = $1;
 $21 = $2;
 ___resumeException($20|0);
 // unreachable;
}
function __ZN6ikfast10IkSolutionIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(7,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 16|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12 << 24 >> 24;
  $14 = ($13|0)<(0);
  if ($14) {
   $15 = (($3) + 4|0);
   $16 = $i;
   $17 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($15,$16)|0);
   $18 = (($17) + 8|0);
   $19 = +HEAPF64[$18>>3];
   $20 = $i;
   $21 = $1;
   $22 = (($21) + ($20<<3)|0);
   HEAPF64[$22>>3] = $19;
  } else {
   $23 = (($3) + 4|0);
   $24 = $i;
   $25 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($23,$24)|0);
   $26 = (($25) + 16|0);
   $27 = HEAP8[$26>>0]|0;
   $28 = $27 << 24 >> 24;
   $29 = $2;
   $30 = (($29) + ($28<<3)|0);
   $31 = +HEAPF64[$30>>3];
   $32 = (($3) + 4|0);
   $33 = $i;
   $34 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($32,$33)|0);
   $35 = +HEAPF64[$34>>3];
   $36 = $31 * $35;
   $37 = (($3) + 4|0);
   $38 = $i;
   $39 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($37,$38)|0);
   $40 = (($39) + 8|0);
   $41 = +HEAPF64[$40>>3];
   $42 = $36 + $41;
   $43 = $i;
   $44 = $1;
   $45 = (($44) + ($43<<3)|0);
   HEAPF64[$45>>3] = $42;
   $46 = $i;
   $47 = $1;
   $48 = (($47) + ($46<<3)|0);
   $49 = +HEAPF64[$48>>3];
   $50 = $49 > 3.14159265358979;
   if ($50) {
    $51 = $i;
    $52 = $1;
    $53 = (($52) + ($51<<3)|0);
    $54 = +HEAPF64[$53>>3];
    $55 = $54 - 6.2831853071795898;
    HEAPF64[$53>>3] = $55;
   } else {
    $56 = $i;
    $57 = $1;
    $58 = (($57) + ($56<<3)|0);
    $59 = +HEAPF64[$58>>3];
    $60 = $59 < -3.14159265358979;
    if ($60) {
     $61 = $i;
     $62 = $1;
     $63 = (($62) + ($61<<3)|0);
     $64 = +HEAPF64[$63>>3];
     $65 = $64 + 6.2831853071795898;
     HEAPF64[$63>>3] = $65;
    }
   }
  }
  $66 = $i;
  $67 = (($66) + 1)|0;
  $i = $67;
 }
 STACKTOP = sp;return;
}
function __ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE7GetFreeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 16|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK6ikfast10IkSolutionIdE6GetDOFEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK6ikfast10IkSolutionIdE8ValidateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = (($3) + 4|0);
  $6 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($5)|0);
  $7 = ($4>>>0)<($6>>>0);
  if (!($7)) {
   label = 24;
   break;
  }
  $8 = (($3) + 4|0);
  $9 = $i;
  $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($8,$9)|0);
  $11 = (($10) + 18|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = $12&255;
  $14 = ($13|0)==(255);
  if ($14) {
   label = 4;
   break;
  }
  $20 = (($3) + 4|0);
  $21 = $i;
  $22 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($20,$21)|0);
  $23 = (($22) + 18|0);
  $24 = HEAP8[$23>>0]|0;
  $25 = $24&255;
  $26 = ($25|0)>(0);
  if ($26) {
   $27 = (($3) + 4|0);
   $28 = $i;
   $29 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($27,$28)|0);
   $30 = (($29) + 19|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&255;
   $33 = (($3) + 4|0);
   $34 = $i;
   $35 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($33,$34)|0);
   $36 = (($35) + 18|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($32|0)>=($38|0);
   if ($39) {
    label = 9;
    break;
   }
   $45 = (($3) + 4|0);
   $46 = $i;
   $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
   $48 = (($47) + 19|0);
   $49 = (($48) + 1|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50&255;
   $52 = ($51|0)!=(255);
   if ($52) {
    $53 = (($3) + 4|0);
    $54 = $i;
    $55 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($53,$54)|0);
    $56 = (($55) + 19|0);
    $57 = (($56) + 1|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = (($3) + 4|0);
    $61 = $i;
    $62 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($60,$61)|0);
    $63 = (($62) + 18|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = $64&255;
    $66 = ($59|0)>=($65|0);
    if ($66) {
     label = 14;
     break;
    }
   }
  }
  $72 = (($3) + 4|0);
  $73 = $i;
  $74 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($72,$73)|0);
  $75 = (($74) + 8|0);
  $76 = +HEAPF64[$75>>3];
  $77 = (__Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($76)|0);
  if (!($77)) {
   label = 19;
   break;
  }
  $83 = $i;
  $84 = (($83) + 1)|0;
  $i = $84;
 }
 if ((label|0) == 4) {
  $15 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($15|0),(656|0));
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   ___cxa_throw(($15|0),(2568|0),(62|0));
   // unreachable;
  }
  $18 = ___cxa_find_matching_catch()|0;
  $19 = tempRet0;
  $1 = $18;
  $2 = $19;
  ___cxa_free_exception(($15|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 9) {
  $40 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($40|0),(696|0));
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if (!($42)) {
   ___cxa_throw(($40|0),(2568|0),(62|0));
   // unreachable;
  }
  $43 = ___cxa_find_matching_catch()|0;
  $44 = tempRet0;
  $1 = $43;
  $2 = $44;
  ___cxa_free_exception(($40|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 14) {
  $67 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($67|0),(736|0));
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if (!($69)) {
   ___cxa_throw(($67|0),(2568|0),(62|0));
   // unreachable;
  }
  $70 = ___cxa_find_matching_catch()|0;
  $71 = tempRet0;
  $1 = $70;
  $2 = $71;
  ___cxa_free_exception(($67|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 19) {
  $78 = (___cxa_allocate_exception(8)|0);
  __THREW__ = 0;
  invoke_vii(363,($78|0),(776|0));
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if (!($80)) {
   ___cxa_throw(($78|0),(2568|0),(62|0));
   // unreachable;
  }
  $81 = ___cxa_find_matching_catch()|0;
  $82 = tempRet0;
  $1 = $81;
  $2 = $82;
  ___cxa_free_exception(($78|0));
  $85 = $1;
  $86 = $2;
  ___resumeException($85|0);
  // unreachable;
 }
 else if ((label|0) == 24) {
  STACKTOP = sp;return;
 }
}
function __ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE($this,$v) {
 $this = $this|0;
 $v = $v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0, $j = 0, $j1 = 0, $j2 = 0;
 var $orgsize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 24|0;
 $3 = sp + 4|0;
 $0 = $this;
 $1 = $v;
 $4 = $0;
 $5 = $1;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($5,0);
 $6 = $1;
 HEAP32[$2>>2] = 0;
 __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($6,$2);
 $7 = (($4) + 4|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($7)|0);
 $9 = (($8) - 1)|0;
 $i = $9;
 while(1) {
  $10 = $i;
  $11 = ($10|0)>=(0);
  if (!($11)) {
   break;
  }
  $12 = (($4) + 4|0);
  $13 = $i;
  $14 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($12,$13)|0);
  $15 = (($14) + 18|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16&255;
  $18 = ($17|0)!=(255);
  if ($18) {
   $19 = (($4) + 4|0);
   $20 = $i;
   $21 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($19,$20)|0);
   $22 = (($21) + 18|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23&255;
   $25 = ($24|0)>(1);
   if ($25) {
    $j = 0;
    while(1) {
     $26 = $j;
     $27 = $1;
     $28 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($27)|0);
     $29 = ($26>>>0)<($28>>>0);
     if (!($29)) {
      break;
     }
     $30 = (($4) + 4|0);
     $31 = $i;
     $32 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($30,$31)|0);
     $33 = (($32) + 18|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $1;
     $37 = $j;
     $38 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($36,$37)|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = Math_imul($39, $35)|0;
     HEAP32[$38>>2] = $40;
     $41 = $j;
     $42 = (($41) + 1)|0;
     $j = $42;
    }
    $43 = $1;
    $44 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($43)|0);
    $orgsize = $44;
    $45 = (($4) + 4|0);
    $46 = $i;
    $47 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($45,$46)|0);
    $48 = (($47) + 19|0);
    $49 = (($48) + 1|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = $50&255;
    $52 = ($51|0)!=(255);
    if ($52) {
     $j1 = 0;
     while(1) {
      $53 = $j1;
      $54 = $orgsize;
      $55 = ($53>>>0)<($54>>>0);
      if (!($55)) {
       break;
      }
      $56 = $1;
      $57 = $1;
      $58 = $j1;
      $59 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($57,$58)|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = (($4) + 4|0);
      $62 = $i;
      $63 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($61,$62)|0);
      $64 = (($63) + 19|0);
      $65 = (($64) + 1|0);
      $66 = HEAP8[$65>>0]|0;
      $67 = $66&255;
      $68 = (($60) + ($67))|0;
      HEAP32[$3>>2] = $68;
      __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($56,$3);
      $69 = $j1;
      $70 = (($69) + 1)|0;
      $j1 = $70;
     }
    }
    $71 = (($4) + 4|0);
    $72 = $i;
    $73 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($71,$72)|0);
    $74 = (($73) + 19|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = $75&255;
    $77 = ($76|0)!=(255);
    if ($77) {
     $j2 = 0;
     while(1) {
      $78 = $j2;
      $79 = $orgsize;
      $80 = ($78>>>0)<($79>>>0);
      if (!($80)) {
       break;
      }
      $81 = (($4) + 4|0);
      $82 = $i;
      $83 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($81,$82)|0);
      $84 = (($83) + 19|0);
      $85 = HEAP8[$84>>0]|0;
      $86 = $85&255;
      $87 = $1;
      $88 = $j2;
      $89 = (__ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($87,$88)|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (($90) + ($86))|0;
      HEAP32[$89>>2] = $91;
      $92 = $j2;
      $93 = (($92) + 1)|0;
      $j2 = $93;
     }
    }
   }
  }
  $94 = $i;
  $95 = (($94) + -1)|0;
  $i = $95;
 }
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(15,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_($this,$solution,$freevalues) {
 $this = $this|0;
 $solution = $solution|0;
 $freevalues = $freevalues|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $solution;
 $2 = $freevalues;
 $3 = $0;
 $4 = $1;
 $5 = HEAP32[$3>>2]|0;
 $6 = (($5) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($4,$8);
 $9 = HEAP32[$3>>2]|0;
 $10 = (($9) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $1;
 $13 = (__ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($12,0)|0);
 $14 = $2;
 $15 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($14)|0);
 $16 = ($15>>>0)>(0);
 if ($16) {
  $17 = $2;
  $18 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($17,0)|0);
  $19 = $18;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 } else {
  $19 = 0;
  FUNCTION_TABLE_viii[$11 & 1023]($3,$13,$19);
  STACKTOP = sp;return;
 }
}
function __ZN6ikfast18IkSolutionListBaseIdED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN6ikfast18IkSolutionListBaseIdED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(19,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vii(368,($3|0),(1048|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  $6 = (($3) + 64|0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch()|0;
 $8 = tempRet0;
 $1 = $7;
 $2 = $8;
 $9 = (($3) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(21,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($2);
 STACKTOP = sp;return;
}
function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + -8|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($2);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($5);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($5);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (1320 + 8|0);
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 32|0);
 __THREW__ = 0;
 invoke_vi(369,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $1 = $8;
 $2 = $9;
 __THREW__ = 0;
 invoke_vi(89,($3|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 $12 = $1;
 $13 = $2;
 ___resumeException($12|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 __THREW__ = 0;
 invoke_vi(41,($3|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if (!($5)) {
  __ZdlPv($3);
  STACKTOP = sp;return;
 }
 $6 = ___cxa_find_matching_catch()|0;
 $7 = tempRet0;
 $1 = $6;
 $2 = $7;
 __ZdlPv($3);
 $8 = $1;
 $9 = $2;
 ___resumeException($8|0);
 // unreachable;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$__way,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $__way = $__way|0;
 $__wch = $__wch|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__noff = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 8|0;
 $__noff = sp;
 $2 = $this;
 $6 = $3;
 $7 = $6;
 HEAP32[$7>>2] = $0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $4 = $__way;
 $5 = $__wch;
 $10 = $2;
 $11 = (($10) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
 $14 = ($12>>>0)<($13>>>0);
 if ($14) {
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
  $16 = (($10) + 44|0);
  HEAP32[$16>>2] = $15;
 }
 $17 = $5;
 $18 = $17 & 24;
 $19 = ($18|0)==(0);
 if ($19) {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $20 = $5;
 $21 = $20 & 24;
 $22 = ($21|0)==(24);
 if ($22) {
  $23 = $4;
  $24 = ($23|0)==(1);
  if ($24) {
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
   STACKTOP = sp;return;
  }
 }
 $25 = $4;
 if ((($25|0) == 1)) {
  $30 = $5;
  $31 = $30 & 8;
  $32 = ($31|0)!=(0);
  if ($32) {
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
   $35 = $33;
   $36 = $34;
   $37 = (($35) - ($36))|0;
   $38 = ($37|0)<(0);
   $39 = $38 << 31 >> 31;
   $40 = $__noff;
   $41 = $40;
   HEAP32[$41>>2] = $37;
   $42 = (($40) + 4)|0;
   $43 = $42;
   HEAP32[$43>>2] = $39;
  } else {
   $44 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
   $45 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
   $46 = $44;
   $47 = $45;
   $48 = (($46) - ($47))|0;
   $49 = ($48|0)<(0);
   $50 = $49 << 31 >> 31;
   $51 = $__noff;
   $52 = $51;
   HEAP32[$52>>2] = $48;
   $53 = (($51) + 4)|0;
   $54 = $53;
   HEAP32[$54>>2] = $50;
  }
 } else if ((($25|0) == 2)) {
  $55 = (($10) + 44|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($10) + 32|0);
  $58 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($57)|0);
  $59 = $56;
  $60 = $58;
  $61 = (($59) - ($60))|0;
  $62 = ($61|0)<(0);
  $63 = $62 << 31 >> 31;
  $64 = $__noff;
  $65 = $64;
  HEAP32[$65>>2] = $61;
  $66 = (($64) + 4)|0;
  $67 = $66;
  HEAP32[$67>>2] = $63;
 } else if ((($25|0) == 0)) {
  $26 = $__noff;
  $27 = $26;
  HEAP32[$27>>2] = 0;
  $28 = (($26) + 4)|0;
  $29 = $28;
  HEAP32[$29>>2] = 0;
 } else {
  __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
  STACKTOP = sp;return;
 }
 $68 = $3;
 $69 = $68;
 $70 = HEAP32[$69>>2]|0;
 $71 = (($68) + 4)|0;
 $72 = $71;
 $73 = HEAP32[$72>>2]|0;
 $74 = $__noff;
 $75 = $74;
 $76 = HEAP32[$75>>2]|0;
 $77 = (($74) + 4)|0;
 $78 = $77;
 $79 = HEAP32[$78>>2]|0;
 $80 = (_i64Add(($76|0),($79|0),($70|0),($73|0))|0);
 $81 = tempRet0;
 $82 = $__noff;
 $83 = $82;
 HEAP32[$83>>2] = $80;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = $81;
 $86 = $__noff;
 $87 = $86;
 $88 = HEAP32[$87>>2]|0;
 $89 = (($86) + 4)|0;
 $90 = $89;
 $91 = HEAP32[$90>>2]|0;
 $92 = ($91|0)<(0);
 if (!($92)) {
  $93 = (($10) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (($10) + 32|0);
  $96 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($95)|0);
  $97 = $94;
  $98 = $96;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)<(0);
  $101 = $100 << 31 >> 31;
  $102 = $__noff;
  $103 = $102;
  $104 = HEAP32[$103>>2]|0;
  $105 = (($102) + 4)|0;
  $106 = $105;
  $107 = HEAP32[$106>>2]|0;
  $108 = ($101|0)<($107|0);
  $109 = ($99>>>0)<($104>>>0);
  $110 = ($101|0)==($107|0);
  $111 = $110 & $109;
  $112 = $108 | $111;
  if (!($112)) {
   $113 = $__noff;
   $114 = $113;
   $115 = HEAP32[$114>>2]|0;
   $116 = (($113) + 4)|0;
   $117 = $116;
   $118 = HEAP32[$117>>2]|0;
   $119 = ($115|0)!=(0);
   $120 = ($118|0)!=(0);
   $121 = $119 | $120;
   if ($121) {
    $122 = $5;
    $123 = $122 & 8;
    $124 = ($123|0)!=(0);
    if ($124) {
     $125 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($10)|0);
     $126 = ($125|0)==(0|0);
     if ($126) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
    $127 = $5;
    $128 = $127 & 16;
    $129 = ($128|0)!=(0);
    if ($129) {
     $130 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($10)|0);
     $131 = ($130|0)==(0|0);
     if ($131) {
      __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
      STACKTOP = sp;return;
     }
    }
   }
   $132 = $5;
   $133 = $132 & 8;
   $134 = ($133|0)!=(0);
   if ($134) {
    $135 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $136 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($10)|0);
    $137 = $__noff;
    $138 = $137;
    $139 = HEAP32[$138>>2]|0;
    $140 = (($137) + 4)|0;
    $141 = $140;
    $142 = HEAP32[$141>>2]|0;
    $143 = (($136) + ($139)|0);
    $144 = (($10) + 44|0);
    $145 = HEAP32[$144>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($10,$135,$143,$145);
   }
   $146 = $5;
   $147 = $146 & 16;
   $148 = ($147|0)!=(0);
   if ($148) {
    $149 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($10)|0);
    $150 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($10)|0);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($10,$149,$150);
    $151 = $__noff;
    $152 = $151;
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 4)|0;
    $155 = $154;
    $156 = HEAP32[$155>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($10,$153);
   }
   $157 = $__noff;
   $158 = $157;
   $159 = HEAP32[$158>>2]|0;
   $160 = (($157) + 4)|0;
   $161 = $160;
   $162 = HEAP32[$161>>2]|0;
   __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,$159,$162);
   STACKTOP = sp;return;
  }
 }
 __ZNSt3__14fposI11__mbstate_tEC2Ex($agg$result,-1,-1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$__sp,$__wch) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__sp = $__sp|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__14fposI11__mbstate_tEcvxEv($__sp)|0);
 $7 = tempRet0;
 $8 = $1;
 FUNCTION_TABLE_viiiiii[$5 & 511]($agg$result,$2,$6,$7,0,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $1;
 $3 = (($2) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($2)|0);
  $8 = (($2) + 44|0);
  HEAP32[$8>>2] = $7;
 }
 $9 = (($2) + 48|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 8;
 $12 = ($11|0)!=(0);
 do {
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $14 = (($2) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($13>>>0)<($15>>>0);
   if ($16) {
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($2)|0);
    $18 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$18,$20);
   }
   $21 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($2)|0);
   $23 = ($21>>>0)<($22>>>0);
   if (!($23)) {
    break;
   }
   $24 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($2)|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = (__ZNSt3__111char_traitsIcE11to_int_typeEc($25)|0);
   $0 = $26;
   $28 = $0;
   STACKTOP = sp;return ($28|0);
  }
 } while(0);
 $27 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $27;
 $28 = $0;
 STACKTOP = sp;return ($28|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__c;
 $3 = $1;
 $4 = (($3) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
 $7 = ($5>>>0)<($6>>>0);
 if ($7) {
  $8 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($3)|0);
  $9 = (($3) + 44|0);
  HEAP32[$9>>2] = $8;
 }
 $10 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
 $12 = ($10>>>0)<($11>>>0);
 do {
  if ($12) {
   $13 = $2;
   $14 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $15 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($13,$14)|0);
   if ($15) {
    $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
    $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $18 = (($17) + -1|0);
    $19 = (($3) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$16,$18,$20);
    $21 = $2;
    $22 = (__ZNSt3__111char_traitsIcE7not_eofEi($21)|0);
    $0 = $22;
    $43 = $0;
    STACKTOP = sp;return ($43|0);
   }
   $23 = (($3) + 48|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $24 & 16;
   $26 = ($25|0)!=(0);
   if (!($26)) {
    $27 = $2;
    $28 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($27)|0);
    $29 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
    $30 = (($29) + -1|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = (__ZNSt3__111char_traitsIcE2eqEcc($28,$31)|0);
    if (!($32)) {
     break;
    }
   }
   $33 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($3)|0);
   $34 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   $35 = (($34) + -1|0);
   $36 = (($3) + 44|0);
   $37 = HEAP32[$36>>2]|0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($3,$33,$35,$37);
   $38 = $2;
   $39 = (__ZNSt3__111char_traitsIcE12to_char_typeEi($38)|0);
   $40 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($3)|0);
   HEAP8[$40>>0] = $39;
   $41 = $2;
   $0 = $41;
   $43 = $0;
   STACKTOP = sp;return ($43|0);
  }
 } while(0);
 $42 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $0 = $42;
 $43 = $0;
 STACKTOP = sp;return ($43|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $__hm = 0, $__ninp = 0, $__nout = 0, $__p = 0, $__p1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 4|0;
 $1 = $this;
 $2 = $__c;
 $7 = $1;
 $8 = $2;
 $9 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $10 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($8,$9)|0);
 if ($10) {
  $92 = $2;
  $93 = (__ZNSt3__111char_traitsIcE7not_eofEi($92)|0);
  $0 = $93;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($7)|0);
 $12 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($7)|0);
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $__ninp = $15;
 $16 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $17 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($7)|0);
 $18 = ($16|0)==($17|0);
 do {
  if ($18) {
   $19 = (($7) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = $20 & 16;
   $22 = ($21|0)!=(0);
   if (!($22)) {
    $23 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
    $0 = $23;
    $94 = $0;
    STACKTOP = sp;return ($94|0);
   }
   __THREW__ = 0;
   $24 = (invoke_ii(370,($7|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if (!($26)) {
    __THREW__ = 0;
    $27 = (invoke_ii(371,($7|0))|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = $24;
     $31 = $27;
     $32 = (($30) - ($31))|0;
     $__nout = $32;
     $33 = (($7) + 44|0);
     $34 = HEAP32[$33>>2]|0;
     __THREW__ = 0;
     $35 = (invoke_ii(371,($7|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if (!($37)) {
      $38 = $34;
      $39 = $35;
      $40 = (($38) - ($39))|0;
      $__hm = $40;
      $41 = (($7) + 32|0);
      __THREW__ = 0;
      invoke_vii(372,($41|0),0);
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if (!($43)) {
       $44 = (($7) + 32|0);
       $45 = (($7) + 32|0);
       $46 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($45)|0);
       __THREW__ = 0;
       invoke_vii(373,($44|0),($46|0));
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if (!($48)) {
        $49 = (($7) + 32|0);
        $50 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($49)|0);
        $__p = $50;
        $51 = $__p;
        $52 = $__p;
        $53 = (($7) + 32|0);
        $54 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($53)|0);
        $55 = (($52) + ($54)|0);
        __THREW__ = 0;
        invoke_viii(374,($7|0),($51|0),($55|0));
        $56 = __THREW__; __THREW__ = 0;
        $57 = $56&1;
        if (!($57)) {
         $58 = $__nout;
         __THREW__ = 0;
         invoke_vii(375,($7|0),($58|0));
         $59 = __THREW__; __THREW__ = 0;
         $60 = $59&1;
         if (!($60)) {
          __THREW__ = 0;
          $61 = (invoke_ii(371,($7|0))|0);
          $62 = __THREW__; __THREW__ = 0;
          $63 = $62&1;
          if (!($63)) {
           $64 = $__hm;
           $65 = (($61) + ($64)|0);
           $66 = (($7) + 44|0);
           HEAP32[$66>>2] = $65;
           break;
          }
         }
        }
       }
      }
     }
    }
   }
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   $3 = $67;
   $4 = $68;
   $69 = $3;
   (___cxa_begin_catch(($69|0))|0);
   $70 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
   $0 = $70;
   $5 = 1;
   ___cxa_end_catch();
   $94 = $0;
   STACKTOP = sp;return ($94|0);
  }
 } while(0);
 $71 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($7)|0);
 $72 = (($71) + 1|0);
 HEAP32[$6>>2] = $72;
 $73 = (($7) + 44|0);
 $74 = (__ZNSt3__13maxIPcEERKT_S4_S4_($6,$73)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (($7) + 44|0);
 HEAP32[$76>>2] = $75;
 $77 = (($7) + 48|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = $78 & 8;
 $80 = ($79|0)!=(0);
 if ($80) {
  $81 = (($7) + 32|0);
  $82 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($81)|0);
  $__p1 = $82;
  $83 = $__p1;
  $84 = $__p1;
  $85 = $__ninp;
  $86 = (($84) + ($85)|0);
  $87 = (($7) + 44|0);
  $88 = HEAP32[$87>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($7,$83,$86,$88);
 }
 $89 = $2;
 $90 = $89&255;
 $91 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($7,$90)|0);
 $0 = $91;
 $94 = $0;
 STACKTOP = sp;return ($94|0);
}
function __ZNSt3__114numeric_limitsIdE9quiet_NaNEv() {
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+__ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv());
 return (+$0);
}
function __Z5IKabsd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = (+Math_abs((+$1)));
 STACKTOP = sp;return (+$2);
}
function __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($agg$result,$fy,$fx,$epsilon) {
 $agg$result = $agg$result|0;
 $fy = +$fy;
 $fx = +$fx;
 $epsilon = +$epsilon;
 var $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $epsilon;
 $3 = (($agg$result) + 8|0);
 HEAP8[$3>>0] = 0;
 HEAPF64[$agg$result>>3] = 0.0;
 $4 = $0;
 $5 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($4)|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = $1;
 $7 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($6)|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = (+__Z5IKabsd($8));
 $10 = $9 >= 1.9999999999999999E-6;
 if ($10) {
  label = 5;
 } else {
  $11 = $1;
  $12 = (+__Z5IKabsd($11));
  $13 = $12 > 1.9999999999999999E-6;
  if ($13) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $14 = $0;
  $15 = $1;
  $16 = (+__Z13IKatan2Simpledd($14,$15));
  HEAPF64[$agg$result>>3] = $16;
  $17 = (($agg$result) + 8|0);
  HEAP8[$17>>0] = 1;
 }
 STACKTOP = sp;return;
}
function __Z6IKasind($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = -1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 1.5707963267949001;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_asin((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(920|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),130)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14720|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1544|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(936|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1480|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(968|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2568|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z6IKsignd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $f;
 $2 = $1;
 $3 = $2 > 0.0;
 do {
  if ($3) {
   $0 = 1.0;
  } else {
   $4 = $1;
   $5 = $4 < 0.0;
   if ($5) {
    $0 = -1.0;
    break;
   }
   $0 = 0.0;
  }
 } while(0);
 $6 = $0;
 STACKTOP = sp;return (+$6);
}
function __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($agg$result,$f,$n) {
 $agg$result = $agg$result|0;
 $f = +$f;
 $n = $n|0;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, $num = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $n;
 $2 = (($agg$result) + 8|0);
 HEAP8[$2>>0] = 1;
 $3 = $1;
 $4 = ($3|0)==(0);
 if ($4) {
  HEAPF64[$agg$result>>3] = 1.0;
  STACKTOP = sp;return;
 }
 $5 = $1;
 $6 = ($5|0)==(1);
 if ($6) {
  $7 = $0;
  HEAPF64[$agg$result>>3] = $7;
  STACKTOP = sp;return;
 }
 $8 = $1;
 $9 = ($8|0)<(0);
 do {
  if ($9) {
   $10 = $0;
   $11 = $10 == 0.0;
   if ($11) {
    $12 = (($agg$result) + 8|0);
    HEAP8[$12>>0] = 0;
    HEAPF64[$agg$result>>3] = 1.0E+30;
    STACKTOP = sp;return;
   }
   $13 = $1;
   $14 = ($13|0)==(-1);
   if (!($14)) {
    break;
   }
   $15 = $0;
   $16 = 1.0 / $15;
   HEAPF64[$agg$result>>3] = $16;
   STACKTOP = sp;return;
  }
 } while(0);
 $17 = $1;
 $18 = ($17|0)>(0);
 if ($18) {
  $19 = $1;
  $22 = $19;
 } else {
  $20 = $1;
  $21 = (0 - ($20))|0;
  $22 = $21;
 }
 $num = $22;
 $23 = $num;
 $24 = ($23|0)==(2);
 if ($24) {
  $25 = $0;
  $26 = $0;
  $27 = $25 * $26;
  HEAPF64[$agg$result>>3] = $27;
 } else {
  $28 = $num;
  $29 = ($28|0)==(3);
  if ($29) {
   $30 = $0;
   $31 = $0;
   $32 = $30 * $31;
   $33 = $0;
   $34 = $32 * $33;
   HEAPF64[$agg$result>>3] = $34;
  } else {
   HEAPF64[$agg$result>>3] = 1.0;
   while(1) {
    $35 = $num;
    $36 = ($35|0)>(0);
    if (!($36)) {
     break;
    }
    $37 = $num;
    $38 = $37 & 1;
    $39 = ($38|0)!=(0);
    if ($39) {
     $40 = $0;
     $41 = +HEAPF64[$agg$result>>3];
     $42 = $41 * $40;
     HEAPF64[$agg$result>>3] = $42;
    }
    $43 = $num;
    $44 = $43 >> 1;
    $num = $44;
    $45 = $0;
    $46 = $0;
    $47 = $46 * $45;
    $0 = $47;
   }
  }
 }
 $48 = $1;
 $49 = ($48|0)<(0);
 if ($49) {
  $50 = +HEAPF64[$agg$result>>3];
  $51 = 1.0 / $50;
  HEAPF64[$agg$result>>3] = $51;
 }
 STACKTOP = sp;return;
}
function __ZN8IKSolver17rotationfunction0ERN6ikfast18IkSolutionListBaseIdEE($this,$solutions) {
 $this = $this|0;
 $solutions = $solutions|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $1000 = 0.0, $10000 = 0.0, $10001 = 0.0, $10002 = 0, $10003 = 0, $10004 = 0, $10005 = 0.0, $10006 = 0, $10007 = 0.0, $10008 = 0.0, $10009 = 0, $1001 = 0.0, $10010 = 0, $10011 = 0, $10012 = 0, $10013 = 0.0;
 var $10014 = 0.0, $10015 = 0, $10016 = 0, $10017 = 0, $10018 = 0.0, $10019 = 0.0, $1002 = 0.0, $10020 = 0.0, $10021 = 0.0, $10022 = 0.0, $10023 = 0.0, $10024 = 0.0, $10025 = 0.0, $10026 = 0.0, $10027 = 0.0, $10028 = 0, $10029 = 0.0, $1003 = 0, $10030 = 0.0, $10031 = 0.0;
 var $10032 = 0, $10033 = 0.0, $10034 = 0.0, $10035 = 0, $10036 = 0, $10037 = 0, $10038 = 0, $10039 = 0, $1004 = 0.0, $10040 = 0, $10041 = 0, $10042 = 0, $10043 = 0, $10044 = 0, $10045 = 0, $10046 = 0, $10047 = 0, $10048 = 0, $10049 = 0, $1005 = 0.0;
 var $10050 = 0, $10051 = 0, $10052 = 0, $10053 = 0, $10054 = 0, $10055 = 0, $10056 = 0.0, $10057 = 0, $10058 = 0, $10059 = 0.0, $1006 = 0, $10060 = 0.0, $10061 = 0.0, $10062 = 0, $10063 = 0, $10064 = 0, $10065 = 0.0, $10066 = 0, $10067 = 0, $10068 = 0.0;
 var $10069 = 0.0, $1007 = 0.0, $10070 = 0.0, $10071 = 0, $10072 = 0, $10073 = 0, $10074 = 0, $10075 = 0, $10076 = 0, $10077 = 0, $10078 = 0, $10079 = 0, $1008 = 0, $10080 = 0, $10081 = 0, $10082 = 0.0, $10083 = 0, $10084 = 0, $10085 = 0, $10086 = 0.0;
 var $10087 = 0, $10088 = 0, $10089 = 0, $1009 = 0.0, $10090 = 0.0, $10091 = 0, $10092 = 0, $10093 = 0.0, $10094 = 0.0, $10095 = 0, $10096 = 0.0, $10097 = 0.0, $10098 = 0, $10099 = 0.0, $101 = 0.0, $1010 = 0.0, $10100 = 0.0, $10101 = 0.0, $10102 = 0.0, $10103 = 0.0;
 var $10104 = 0.0, $10105 = 0, $10106 = 0.0, $10107 = 0, $10108 = 0.0, $10109 = 0.0, $1011 = 0.0, $10110 = 0.0, $10111 = 0.0, $10112 = 0, $10113 = 0.0, $10114 = 0.0, $10115 = 0.0, $10116 = 0, $10117 = 0.0, $10118 = 0.0, $10119 = 0, $1012 = 0, $10120 = 0, $10121 = 0.0;
 var $10122 = 0.0, $10123 = 0.0, $10124 = 0.0, $10125 = 0, $10126 = 0.0, $10127 = 0.0, $10128 = 0, $10129 = 0.0, $1013 = 0.0, $10130 = 0.0, $10131 = 0.0, $10132 = 0.0, $10133 = 0, $10134 = 0.0, $10135 = 0.0, $10136 = 0, $10137 = 0.0, $10138 = 0.0, $10139 = 0, $1014 = 0.0;
 var $10140 = 0.0, $10141 = 0.0, $10142 = 0.0, $10143 = 0, $10144 = 0.0, $10145 = 0.0, $10146 = 0, $10147 = 0.0, $10148 = 0.0, $10149 = 0.0, $1015 = 0.0, $10150 = 0, $10151 = 0.0, $10152 = 0, $10153 = 0.0, $10154 = 0, $10155 = 0.0, $10156 = 0.0, $10157 = 0.0, $10158 = 0;
 var $10159 = 0.0, $1016 = 0.0, $10160 = 0.0, $10161 = 0.0, $10162 = 0.0, $10163 = 0.0, $10164 = 0, $10165 = 0.0, $10166 = 0.0, $10167 = 0, $10168 = 0.0, $10169 = 0, $1017 = 0.0, $10170 = 0.0, $10171 = 0.0, $10172 = 0.0, $10173 = 0, $10174 = 0.0, $10175 = 0.0, $10176 = 0.0;
 var $10177 = 0.0, $10178 = 0.0, $10179 = 0, $1018 = 0, $10180 = 0.0, $10181 = 0.0, $10182 = 0, $10183 = 0, $10184 = 0.0, $10185 = 0.0, $10186 = 0, $10187 = 0, $10188 = 0.0, $10189 = 0.0, $1019 = 0.0, $10190 = 0, $10191 = 0, $10192 = 0.0, $10193 = 0.0, $10194 = 0;
 var $10195 = 0, $10196 = 0.0, $10197 = 0.0, $10198 = 0, $10199 = 0, $102 = 0.0, $1020 = 0.0, $10200 = 0.0, $10201 = 0.0, $10202 = 0, $10203 = 0, $10204 = 0.0, $10205 = 0.0, $10206 = 0, $10207 = 0, $10208 = 0.0, $10209 = 0.0, $1021 = 0, $10210 = 0, $10211 = 0;
 var $10212 = 0, $10213 = 0, $10214 = 0, $10215 = 0.0, $10216 = 0, $10217 = 0, $10218 = 0, $10219 = 0, $1022 = 0.0, $10220 = 0, $10221 = 0, $10222 = 0, $10223 = 0, $10224 = 0, $10225 = 0, $10226 = 0, $10227 = 0, $10228 = 0, $10229 = 0, $1023 = 0;
 var $10230 = 0, $10231 = 0, $10232 = 0, $10233 = 0, $10234 = 0, $10235 = 0, $10236 = 0, $10237 = 0, $10238 = 0, $10239 = 0, $1024 = 0.0, $10240 = 0, $10241 = 0, $10242 = 0, $10243 = 0, $10244 = 0, $10245 = 0.0, $10246 = 0, $10247 = 0, $10248 = 0;
 var $10249 = 0, $1025 = 0.0, $10250 = 0, $10251 = 0, $10252 = 0, $10253 = 0, $10254 = 0, $10255 = 0, $10256 = 0, $10257 = 0, $10258 = 0, $10259 = 0, $1026 = 0.0, $10260 = 0, $10261 = 0, $10262 = 0, $10263 = 0, $10264 = 0, $10265 = 0, $10266 = 0;
 var $10267 = 0, $10268 = 0, $10269 = 0, $1027 = 0, $10270 = 0, $10271 = 0, $10272 = 0, $10273 = 0, $10274 = 0, $10275 = 0.0, $10276 = 0, $10277 = 0, $10278 = 0, $10279 = 0, $1028 = 0.0, $10280 = 0, $10281 = 0, $10282 = 0, $10283 = 0, $10284 = 0;
 var $10285 = 0, $10286 = 0, $10287 = 0, $10288 = 0, $10289 = 0, $1029 = 0.0, $10290 = 0, $10291 = 0, $10292 = 0, $10293 = 0, $10294 = 0, $10295 = 0, $10296 = 0, $10297 = 0, $10298 = 0, $10299 = 0, $103 = 0, $1030 = 0.0, $10300 = 0, $10301 = 0;
 var $10302 = 0, $10303 = 0, $10304 = 0, $10305 = 0.0, $10306 = 0, $10307 = 0, $10308 = 0, $10309 = 0, $1031 = 0.0, $10310 = 0, $10311 = 0, $10312 = 0, $10313 = 0, $10314 = 0, $10315 = 0, $10316 = 0, $10317 = 0, $10318 = 0, $10319 = 0, $1032 = 0.0;
 var $10320 = 0, $10321 = 0, $10322 = 0, $10323 = 0, $10324 = 0, $10325 = 0, $10326 = 0, $10327 = 0, $10328 = 0, $10329 = 0, $1033 = 0, $10330 = 0, $10331 = 0, $10332 = 0, $10333 = 0, $10334 = 0, $10335 = 0.0, $10336 = 0, $10337 = 0, $10338 = 0;
 var $10339 = 0, $1034 = 0.0, $10340 = 0, $10341 = 0, $10342 = 0, $10343 = 0, $10344 = 0, $10345 = 0, $10346 = 0, $10347 = 0, $10348 = 0, $10349 = 0, $1035 = 0.0, $10350 = 0, $10351 = 0, $10352 = 0, $10353 = 0, $10354 = 0, $10355 = 0, $10356 = 0;
 var $10357 = 0, $10358 = 0, $10359 = 0, $1036 = 0.0, $10360 = 0, $10361 = 0, $10362 = 0, $10363 = 0, $10364 = 0, $10365 = 0.0, $10366 = 0, $10367 = 0, $10368 = 0, $10369 = 0, $1037 = 0.0, $10370 = 0, $10371 = 0, $10372 = 0, $10373 = 0, $10374 = 0;
 var $10375 = 0, $10376 = 0, $10377 = 0, $10378 = 0, $10379 = 0, $1038 = 0, $10380 = 0, $10381 = 0, $10382 = 0, $10383 = 0, $10384 = 0, $10385 = 0, $10386 = 0, $10387 = 0, $10388 = 0, $10389 = 0, $1039 = 0.0, $10390 = 0, $10391 = 0, $10392 = 0;
 var $10393 = 0, $10394 = 0, $10395 = 0, $10396 = 0, $10397 = 0, $10398 = 0, $10399 = 0, $104 = 0.0, $1040 = 0.0, $10400 = 0, $10401 = 0, $10402 = 0, $10403 = 0, $10404 = 0, $10405 = 0, $10406 = 0, $10407 = 0, $10408 = 0, $10409 = 0, $1041 = 0;
 var $10410 = 0, $10411 = 0, $10412 = 0, $10413 = 0.0, $10414 = 0, $10415 = 0.0, $10416 = 0.0, $10417 = 0.0, $10418 = 0, $10419 = 0.0, $1042 = 0.0, $10420 = 0.0, $10421 = 0, $10422 = 0.0, $10423 = 0.0, $10424 = 0.0, $10425 = 0.0, $10426 = 0.0, $10427 = 0.0, $10428 = 0.0;
 var $10429 = 0, $1043 = 0.0, $10430 = 0.0, $10431 = 0, $10432 = 0, $10433 = 0.0, $10434 = 0, $10435 = 0, $10436 = 0.0, $10437 = 0, $10438 = 0.0, $10439 = 0.0, $1044 = 0.0, $10440 = 0, $10441 = 0, $10442 = 0.0, $10443 = 0.0, $10444 = 0, $10445 = 0.0, $10446 = 0.0;
 var $10447 = 0.0, $10448 = 0, $10449 = 0, $1045 = 0.0, $10450 = 0.0, $10451 = 0, $10452 = 0.0, $10453 = 0.0, $10454 = 0, $10455 = 0.0, $10456 = 0, $10457 = 0.0, $10458 = 0.0, $10459 = 0.0, $1046 = 0, $10460 = 0, $10461 = 0, $10462 = 0.0, $10463 = 0.0, $10464 = 0.0;
 var $10465 = 0.0, $10466 = 0, $10467 = 0.0, $10468 = 0, $10469 = 0.0, $1047 = 0.0, $10470 = 0.0, $10471 = 0.0, $10472 = 0, $10473 = 0, $10474 = 0.0, $10475 = 0.0, $10476 = 0.0, $10477 = 0.0, $10478 = 0, $10479 = 0.0, $1048 = 0.0, $10480 = 0, $10481 = 0.0, $10482 = 0.0;
 var $10483 = 0.0, $10484 = 0, $10485 = 0, $10486 = 0.0, $10487 = 0, $10488 = 0.0, $10489 = 0.0, $1049 = 0, $10490 = 0.0, $10491 = 0, $10492 = 0.0, $10493 = 0.0, $10494 = 0.0, $10495 = 0.0, $10496 = 0.0, $10497 = 0, $10498 = 0.0, $10499 = 0.0, $105 = 0.0, $1050 = 0;
 var $10500 = 0, $10501 = 0, $10502 = 0.0, $10503 = 0.0, $10504 = 0, $10505 = 0, $10506 = 0.0, $10507 = 0.0, $10508 = 0, $10509 = 0, $1051 = 0.0, $10510 = 0.0, $10511 = 0.0, $10512 = 0, $10513 = 0, $10514 = 0.0, $10515 = 0.0, $10516 = 0, $10517 = 0, $10518 = 0.0;
 var $10519 = 0.0, $1052 = 0.0, $10520 = 0, $10521 = 0, $10522 = 0.0, $10523 = 0.0, $10524 = 0, $10525 = 0, $10526 = 0.0, $10527 = 0.0, $10528 = 0, $10529 = 0, $1053 = 0.0, $10530 = 0.0, $10531 = 0.0, $10532 = 0, $10533 = 0, $10534 = 0.0, $10535 = 0.0, $10536 = 0;
 var $10537 = 0, $10538 = 0, $10539 = 0.0, $1054 = 0.0, $10540 = 0.0, $10541 = 0, $10542 = 0, $10543 = 0.0, $10544 = 0.0, $10545 = 0, $10546 = 0, $10547 = 0.0, $10548 = 0.0, $10549 = 0, $1055 = 0, $10550 = 0.0, $10551 = 0.0, $10552 = 0.0, $10553 = 0.0, $10554 = 0.0;
 var $10555 = 0, $10556 = 0, $10557 = 0.0, $10558 = 0, $10559 = 0.0, $1056 = 0.0, $10560 = 0.0, $10561 = 0.0, $10562 = 0.0, $10563 = 0.0, $10564 = 0.0, $10565 = 0.0, $10566 = 0, $10567 = 0.0, $10568 = 0.0, $10569 = 0.0, $1057 = 0.0, $10570 = 0, $10571 = 0.0, $10572 = 0.0;
 var $10573 = 0, $10574 = 0, $10575 = 0, $10576 = 0, $10577 = 0, $10578 = 0, $10579 = 0, $1058 = 0.0, $10580 = 0, $10581 = 0, $10582 = 0, $10583 = 0, $10584 = 0, $10585 = 0, $10586 = 0, $10587 = 0, $10588 = 0, $10589 = 0, $1059 = 0.0, $10590 = 0;
 var $10591 = 0, $10592 = 0, $10593 = 0, $10594 = 0.0, $10595 = 0, $10596 = 0, $10597 = 0.0, $10598 = 0.0, $10599 = 0.0, $106 = 0.0, $1060 = 0.0, $10600 = 0, $10601 = 0, $10602 = 0, $10603 = 0.0, $10604 = 0, $10605 = 0, $10606 = 0.0, $10607 = 0.0, $10608 = 0.0;
 var $10609 = 0, $1061 = 0.0, $10610 = 0, $10611 = 0, $10612 = 0, $10613 = 0, $10614 = 0, $10615 = 0, $10616 = 0, $10617 = 0, $10618 = 0, $10619 = 0, $1062 = 0.0, $10620 = 0.0, $10621 = 0, $10622 = 0, $10623 = 0, $10624 = 0.0, $10625 = 0, $10626 = 0;
 var $10627 = 0, $10628 = 0.0, $10629 = 0, $1063 = 0, $10630 = 0, $10631 = 0.0, $10632 = 0.0, $10633 = 0, $10634 = 0.0, $10635 = 0.0, $10636 = 0, $10637 = 0.0, $10638 = 0.0, $10639 = 0.0, $1064 = 0.0, $10640 = 0.0, $10641 = 0.0, $10642 = 0.0, $10643 = 0, $10644 = 0.0;
 var $10645 = 0.0, $10646 = 0.0, $10647 = 0, $10648 = 0.0, $10649 = 0.0, $1065 = 0.0, $10650 = 0.0, $10651 = 0.0, $10652 = 0, $10653 = 0.0, $10654 = 0.0, $10655 = 0, $10656 = 0.0, $10657 = 0.0, $10658 = 0, $10659 = 0.0, $1066 = 0, $10660 = 0.0, $10661 = 0, $10662 = 0.0;
 var $10663 = 0.0, $10664 = 0.0, $10665 = 0.0, $10666 = 0, $10667 = 0.0, $10668 = 0.0, $10669 = 0, $1067 = 0, $10670 = 0, $10671 = 0.0, $10672 = 0.0, $10673 = 0, $10674 = 0.0, $10675 = 0.0, $10676 = 0.0, $10677 = 0.0, $10678 = 0, $10679 = 0, $1068 = 0.0, $10680 = 0.0;
 var $10681 = 0.0, $10682 = 0.0, $10683 = 0.0, $10684 = 0, $10685 = 0.0, $10686 = 0.0, $10687 = 0.0, $10688 = 0, $10689 = 0, $1069 = 0.0, $10690 = 0.0, $10691 = 0.0, $10692 = 0.0, $10693 = 0.0, $10694 = 0.0, $10695 = 0.0, $10696 = 0, $10697 = 0.0, $10698 = 0, $10699 = 0.0;
 var $107 = 0.0, $1070 = 0, $10700 = 0.0, $10701 = 0.0, $10702 = 0, $10703 = 0, $10704 = 0.0, $10705 = 0.0, $10706 = 0.0, $10707 = 0.0, $10708 = 0.0, $10709 = 0.0, $1071 = 0, $10710 = 0.0, $10711 = 0, $10712 = 0.0, $10713 = 0, $10714 = 0.0, $10715 = 0.0, $10716 = 0.0;
 var $10717 = 0, $10718 = 0.0, $10719 = 0.0, $1072 = 0.0, $10720 = 0, $10721 = 0, $10722 = 0.0, $10723 = 0.0, $10724 = 0, $10725 = 0, $10726 = 0.0, $10727 = 0.0, $10728 = 0, $10729 = 0, $1073 = 0.0, $10730 = 0.0, $10731 = 0.0, $10732 = 0, $10733 = 0, $10734 = 0.0;
 var $10735 = 0.0, $10736 = 0, $10737 = 0, $10738 = 0.0, $10739 = 0.0, $1074 = 0, $10740 = 0, $10741 = 0, $10742 = 0.0, $10743 = 0.0, $10744 = 0, $10745 = 0, $10746 = 0.0, $10747 = 0.0, $10748 = 0, $10749 = 0, $1075 = 0, $10750 = 0, $10751 = 0, $10752 = 0;
 var $10753 = 0.0, $10754 = 0, $10755 = 0, $10756 = 0, $10757 = 0, $10758 = 0, $10759 = 0, $1076 = 0.0, $10760 = 0, $10761 = 0, $10762 = 0, $10763 = 0, $10764 = 0, $10765 = 0, $10766 = 0, $10767 = 0, $10768 = 0, $10769 = 0, $1077 = 0.0, $10770 = 0;
 var $10771 = 0, $10772 = 0, $10773 = 0, $10774 = 0, $10775 = 0, $10776 = 0, $10777 = 0, $10778 = 0, $10779 = 0, $1078 = 0, $10780 = 0, $10781 = 0, $10782 = 0, $10783 = 0.0, $10784 = 0, $10785 = 0, $10786 = 0, $10787 = 0, $10788 = 0, $10789 = 0;
 var $1079 = 0, $10790 = 0, $10791 = 0, $10792 = 0, $10793 = 0, $10794 = 0, $10795 = 0, $10796 = 0, $10797 = 0, $10798 = 0, $10799 = 0, $108 = 0.0, $1080 = 0.0, $10800 = 0, $10801 = 0, $10802 = 0, $10803 = 0, $10804 = 0, $10805 = 0, $10806 = 0;
 var $10807 = 0, $10808 = 0, $10809 = 0, $1081 = 0.0, $10810 = 0, $10811 = 0, $10812 = 0, $10813 = 0.0, $10814 = 0, $10815 = 0, $10816 = 0, $10817 = 0, $10818 = 0, $10819 = 0, $1082 = 0, $10820 = 0, $10821 = 0, $10822 = 0, $10823 = 0, $10824 = 0;
 var $10825 = 0, $10826 = 0, $10827 = 0, $10828 = 0, $10829 = 0, $1083 = 0, $10830 = 0, $10831 = 0, $10832 = 0, $10833 = 0, $10834 = 0, $10835 = 0, $10836 = 0, $10837 = 0, $10838 = 0, $10839 = 0, $1084 = 0.0, $10840 = 0, $10841 = 0, $10842 = 0;
 var $10843 = 0.0, $10844 = 0, $10845 = 0, $10846 = 0, $10847 = 0, $10848 = 0, $10849 = 0, $1085 = 0.0, $10850 = 0, $10851 = 0, $10852 = 0, $10853 = 0, $10854 = 0, $10855 = 0, $10856 = 0, $10857 = 0, $10858 = 0, $10859 = 0, $1086 = 0, $10860 = 0;
 var $10861 = 0, $10862 = 0, $10863 = 0, $10864 = 0, $10865 = 0, $10866 = 0, $10867 = 0, $10868 = 0, $10869 = 0, $1087 = 0, $10870 = 0, $10871 = 0, $10872 = 0, $10873 = 0.0, $10874 = 0, $10875 = 0, $10876 = 0, $10877 = 0, $10878 = 0, $10879 = 0;
 var $1088 = 0.0, $10880 = 0, $10881 = 0, $10882 = 0, $10883 = 0, $10884 = 0, $10885 = 0, $10886 = 0, $10887 = 0, $10888 = 0, $10889 = 0, $1089 = 0.0, $10890 = 0, $10891 = 0, $10892 = 0, $10893 = 0, $10894 = 0, $10895 = 0, $10896 = 0, $10897 = 0;
 var $10898 = 0, $10899 = 0, $109 = 0.0, $1090 = 0, $10900 = 0, $10901 = 0, $10902 = 0, $10903 = 0.0, $10904 = 0, $10905 = 0, $10906 = 0, $10907 = 0, $10908 = 0, $10909 = 0, $1091 = 0, $10910 = 0, $10911 = 0, $10912 = 0, $10913 = 0, $10914 = 0;
 var $10915 = 0, $10916 = 0, $10917 = 0, $10918 = 0, $10919 = 0, $1092 = 0.0, $10920 = 0, $10921 = 0, $10922 = 0, $10923 = 0, $10924 = 0, $10925 = 0, $10926 = 0, $10927 = 0, $10928 = 0, $10929 = 0, $1093 = 0.0, $10930 = 0, $10931 = 0, $10932 = 0;
 var $10933 = 0, $10934 = 0, $10935 = 0, $10936 = 0, $10937 = 0, $10938 = 0, $10939 = 0, $1094 = 0, $10940 = 0, $10941 = 0, $10942 = 0, $10943 = 0, $10944 = 0, $10945 = 0, $10946 = 0, $10947 = 0, $10948 = 0, $10949 = 0, $1095 = 0, $10950 = 0;
 var $10951 = 0.0, $10952 = 0, $10953 = 0.0, $10954 = 0.0, $10955 = 0, $10956 = 0.0, $10957 = 0, $10958 = 0.0, $10959 = 0.0, $1096 = 0, $10960 = 0, $10961 = 0.0, $10962 = 0.0, $10963 = 0, $10964 = 0.0, $10965 = 0.0, $10966 = 0, $10967 = 0.0, $10968 = 0.0, $10969 = 0.0;
 var $1097 = 0, $10970 = 0.0, $10971 = 0, $10972 = 0.0, $10973 = 0, $10974 = 0.0, $10975 = 0.0, $10976 = 0.0, $10977 = 0, $10978 = 0.0, $10979 = 0.0, $1098 = 0, $10980 = 0.0, $10981 = 0.0, $10982 = 0.0, $10983 = 0.0, $10984 = 0, $10985 = 0.0, $10986 = 0, $10987 = 0.0;
 var $10988 = 0.0, $10989 = 0, $1099 = 0.0, $10990 = 0.0, $10991 = 0.0, $10992 = 0, $10993 = 0.0, $10994 = 0.0, $10995 = 0, $10996 = 0.0, $10997 = 0.0, $10998 = 0, $10999 = 0.0, $11 = 0.0, $110 = 0.0, $1100 = 0, $11000 = 0, $11001 = 0.0, $11002 = 0, $11003 = 0.0;
 var $11004 = 0.0, $11005 = 0, $11006 = 0.0, $11007 = 0, $11008 = 0.0, $11009 = 0.0, $1101 = 0, $11010 = 0.0, $11011 = 0, $11012 = 0.0, $11013 = 0, $11014 = 0.0, $11015 = 0, $11016 = 0.0, $11017 = 0.0, $11018 = 0.0, $11019 = 0, $1102 = 0, $11020 = 0, $11021 = 0.0;
 var $11022 = 0, $11023 = 0.0, $11024 = 0.0, $11025 = 0, $11026 = 0.0, $11027 = 0, $11028 = 0.0, $11029 = 0.0, $1103 = 0, $11030 = 0.0, $11031 = 0, $11032 = 0, $11033 = 0.0, $11034 = 0.0, $11035 = 0.0, $11036 = 0.0, $11037 = 0, $11038 = 0.0, $11039 = 0.0, $1104 = 0;
 var $11040 = 0.0, $11041 = 0.0, $11042 = 0.0, $11043 = 0, $11044 = 0, $11045 = 0.0, $11046 = 0.0, $11047 = 0.0, $11048 = 0.0, $11049 = 0.0, $1105 = 0, $11050 = 0.0, $11051 = 0.0, $11052 = 0, $11053 = 0, $11054 = 0.0, $11055 = 0.0, $11056 = 0.0, $11057 = 0.0, $11058 = 0.0;
 var $11059 = 0.0, $1106 = 0, $11060 = 0.0, $11061 = 0.0, $11062 = 0, $11063 = 0.0, $11064 = 0.0, $11065 = 0, $11066 = 0, $11067 = 0.0, $11068 = 0.0, $11069 = 0, $1107 = 0, $11070 = 0, $11071 = 0.0, $11072 = 0.0, $11073 = 0, $11074 = 0, $11075 = 0.0, $11076 = 0.0;
 var $11077 = 0, $11078 = 0, $11079 = 0.0, $1108 = 0, $11080 = 0.0, $11081 = 0, $11082 = 0, $11083 = 0.0, $11084 = 0.0, $11085 = 0, $11086 = 0, $11087 = 0.0, $11088 = 0.0, $11089 = 0, $1109 = 0, $11090 = 0, $11091 = 0.0, $11092 = 0.0, $11093 = 0, $11094 = 0;
 var $11095 = 0.0, $11096 = 0.0, $11097 = 0, $11098 = 0, $11099 = 0.0, $111 = 0.0, $1110 = 0, $11100 = 0.0, $11101 = 0, $11102 = 0, $11103 = 0.0, $11104 = 0.0, $11105 = 0, $11106 = 0, $11107 = 0.0, $11108 = 0.0, $11109 = 0, $1111 = 0, $11110 = 0, $11111 = 0;
 var $11112 = 0.0, $11113 = 0.0, $11114 = 0, $11115 = 0, $11116 = 0.0, $11117 = 0.0, $11118 = 0.0, $11119 = 0, $1112 = 0, $11120 = 0, $11121 = 0.0, $11122 = 0.0, $11123 = 0, $11124 = 0.0, $11125 = 0.0, $11126 = 0.0, $11127 = 0.0, $11128 = 0.0, $11129 = 0.0, $1113 = 0;
 var $11130 = 0, $11131 = 0, $11132 = 0.0, $11133 = 0, $11134 = 0.0, $11135 = 0.0, $11136 = 0.0, $11137 = 0.0, $11138 = 0.0, $11139 = 0.0, $1114 = 0, $11140 = 0.0, $11141 = 0.0, $11142 = 0, $11143 = 0.0, $11144 = 0.0, $11145 = 0.0, $11146 = 0, $11147 = 0.0, $11148 = 0.0;
 var $11149 = 0, $1115 = 0, $11150 = 0, $11151 = 0, $11152 = 0, $11153 = 0, $11154 = 0, $11155 = 0, $11156 = 0, $11157 = 0, $11158 = 0, $11159 = 0, $1116 = 0, $11160 = 0, $11161 = 0, $11162 = 0, $11163 = 0, $11164 = 0, $11165 = 0, $11166 = 0;
 var $11167 = 0, $11168 = 0, $11169 = 0, $1117 = 0, $11170 = 0.0, $11171 = 0, $11172 = 0, $11173 = 0.0, $11174 = 0.0, $11175 = 0.0, $11176 = 0, $11177 = 0, $11178 = 0, $11179 = 0.0, $1118 = 0, $11180 = 0, $11181 = 0, $11182 = 0.0, $11183 = 0.0, $11184 = 0.0;
 var $11185 = 0, $11186 = 0, $11187 = 0, $11188 = 0, $11189 = 0, $1119 = 0, $11190 = 0, $11191 = 0, $11192 = 0, $11193 = 0, $11194 = 0, $11195 = 0, $11196 = 0.0, $11197 = 0, $11198 = 0, $11199 = 0, $112 = 0, $1120 = 0, $11200 = 0.0, $11201 = 0;
 var $11202 = 0, $11203 = 0, $11204 = 0.0, $11205 = 0, $11206 = 0, $11207 = 0.0, $11208 = 0.0, $11209 = 0, $1121 = 0, $11210 = 0.0, $11211 = 0.0, $11212 = 0, $11213 = 0.0, $11214 = 0.0, $11215 = 0.0, $11216 = 0.0, $11217 = 0.0, $11218 = 0.0, $11219 = 0.0, $1122 = 0;
 var $11220 = 0, $11221 = 0.0, $11222 = 0.0, $11223 = 0.0, $11224 = 0.0, $11225 = 0, $11226 = 0.0, $11227 = 0.0, $11228 = 0, $11229 = 0, $1123 = 0, $11230 = 0.0, $11231 = 0.0, $11232 = 0.0, $11233 = 0, $11234 = 0.0, $11235 = 0.0, $11236 = 0, $11237 = 0, $11238 = 0.0;
 var $11239 = 0.0, $1124 = 0, $11240 = 0.0, $11241 = 0, $11242 = 0.0, $11243 = 0.0, $11244 = 0, $11245 = 0, $11246 = 0.0, $11247 = 0.0, $11248 = 0.0, $11249 = 0.0, $1125 = 0, $11250 = 0, $11251 = 0.0, $11252 = 0.0, $11253 = 0, $11254 = 0, $11255 = 0.0, $11256 = 0.0;
 var $11257 = 0.0, $11258 = 0.0, $11259 = 0, $1126 = 0, $11260 = 0.0, $11261 = 0.0, $11262 = 0, $11263 = 0, $11264 = 0.0, $11265 = 0.0, $11266 = 0.0, $11267 = 0.0, $11268 = 0.0, $11269 = 0.0, $1127 = 0, $11270 = 0.0, $11271 = 0, $11272 = 0.0, $11273 = 0, $11274 = 0.0;
 var $11275 = 0.0, $11276 = 0.0, $11277 = 0, $11278 = 0, $11279 = 0.0, $1128 = 0, $11280 = 0.0, $11281 = 0.0, $11282 = 0.0, $11283 = 0.0, $11284 = 0.0, $11285 = 0.0, $11286 = 0, $11287 = 0.0, $11288 = 0, $11289 = 0.0, $1129 = 0.0, $11290 = 0.0, $11291 = 0.0, $11292 = 0;
 var $11293 = 0.0, $11294 = 0.0, $11295 = 0, $11296 = 0, $11297 = 0.0, $11298 = 0.0, $11299 = 0, $113 = 0, $1130 = 0, $11300 = 0, $11301 = 0.0, $11302 = 0.0, $11303 = 0, $11304 = 0, $11305 = 0.0, $11306 = 0.0, $11307 = 0, $11308 = 0, $11309 = 0.0, $1131 = 0;
 var $11310 = 0.0, $11311 = 0, $11312 = 0, $11313 = 0.0, $11314 = 0.0, $11315 = 0, $11316 = 0, $11317 = 0.0, $11318 = 0.0, $11319 = 0, $1132 = 0, $11320 = 0, $11321 = 0.0, $11322 = 0.0, $11323 = 0, $11324 = 0, $11325 = 0, $11326 = 0, $11327 = 0, $11328 = 0.0;
 var $11329 = 0, $1133 = 0, $11330 = 0, $11331 = 0, $11332 = 0, $11333 = 0, $11334 = 0, $11335 = 0, $11336 = 0, $11337 = 0, $11338 = 0, $11339 = 0, $1134 = 0, $11340 = 0, $11341 = 0, $11342 = 0, $11343 = 0, $11344 = 0, $11345 = 0, $11346 = 0;
 var $11347 = 0, $11348 = 0, $11349 = 0, $1135 = 0, $11350 = 0, $11351 = 0, $11352 = 0, $11353 = 0, $11354 = 0, $11355 = 0, $11356 = 0, $11357 = 0, $11358 = 0.0, $11359 = 0, $1136 = 0, $11360 = 0, $11361 = 0, $11362 = 0, $11363 = 0, $11364 = 0;
 var $11365 = 0, $11366 = 0, $11367 = 0, $11368 = 0, $11369 = 0, $1137 = 0, $11370 = 0, $11371 = 0, $11372 = 0, $11373 = 0, $11374 = 0, $11375 = 0, $11376 = 0, $11377 = 0, $11378 = 0, $11379 = 0, $1138 = 0, $11380 = 0, $11381 = 0, $11382 = 0;
 var $11383 = 0, $11384 = 0, $11385 = 0, $11386 = 0, $11387 = 0, $11388 = 0.0, $11389 = 0, $1139 = 0, $11390 = 0, $11391 = 0, $11392 = 0, $11393 = 0, $11394 = 0, $11395 = 0, $11396 = 0, $11397 = 0, $11398 = 0, $11399 = 0, $114 = 0.0, $1140 = 0;
 var $11400 = 0, $11401 = 0, $11402 = 0, $11403 = 0, $11404 = 0, $11405 = 0, $11406 = 0, $11407 = 0, $11408 = 0, $11409 = 0, $1141 = 0, $11410 = 0, $11411 = 0, $11412 = 0, $11413 = 0, $11414 = 0, $11415 = 0, $11416 = 0, $11417 = 0, $11418 = 0.0;
 var $11419 = 0, $1142 = 0, $11420 = 0, $11421 = 0, $11422 = 0, $11423 = 0, $11424 = 0, $11425 = 0, $11426 = 0, $11427 = 0, $11428 = 0, $11429 = 0, $1143 = 0, $11430 = 0, $11431 = 0, $11432 = 0, $11433 = 0, $11434 = 0, $11435 = 0, $11436 = 0;
 var $11437 = 0, $11438 = 0, $11439 = 0, $1144 = 0, $11440 = 0, $11441 = 0, $11442 = 0, $11443 = 0, $11444 = 0, $11445 = 0, $11446 = 0, $11447 = 0, $11448 = 0.0, $11449 = 0, $1145 = 0, $11450 = 0, $11451 = 0, $11452 = 0, $11453 = 0, $11454 = 0;
 var $11455 = 0, $11456 = 0, $11457 = 0, $11458 = 0, $11459 = 0, $1146 = 0, $11460 = 0, $11461 = 0, $11462 = 0, $11463 = 0, $11464 = 0, $11465 = 0, $11466 = 0, $11467 = 0, $11468 = 0, $11469 = 0, $1147 = 0, $11470 = 0, $11471 = 0, $11472 = 0;
 var $11473 = 0, $11474 = 0, $11475 = 0, $11476 = 0, $11477 = 0, $11478 = 0.0, $11479 = 0, $1148 = 0, $11480 = 0, $11481 = 0, $11482 = 0, $11483 = 0, $11484 = 0, $11485 = 0, $11486 = 0, $11487 = 0, $11488 = 0, $11489 = 0, $1149 = 0, $11490 = 0;
 var $11491 = 0, $11492 = 0, $11493 = 0, $11494 = 0, $11495 = 0, $11496 = 0, $11497 = 0, $11498 = 0, $11499 = 0, $115 = 0, $1150 = 0, $11500 = 0, $11501 = 0, $11502 = 0, $11503 = 0, $11504 = 0, $11505 = 0, $11506 = 0, $11507 = 0, $11508 = 0;
 var $11509 = 0, $1151 = 0, $11510 = 0, $11511 = 0, $11512 = 0, $11513 = 0, $11514 = 0, $11515 = 0, $11516 = 0, $11517 = 0, $11518 = 0, $11519 = 0, $1152 = 0, $11520 = 0, $11521 = 0, $11522 = 0, $11523 = 0, $11524 = 0, $11525 = 0, $11526 = 0.0;
 var $11527 = 0.0, $11528 = 0, $11529 = 0.0, $1153 = 0, $11530 = 0.0, $11531 = 0, $11532 = 0.0, $11533 = 0, $11534 = 0.0, $11535 = 0.0, $11536 = 0.0, $11537 = 0, $11538 = 0.0, $11539 = 0, $1154 = 0, $11540 = 0.0, $11541 = 0.0, $11542 = 0, $11543 = 0.0, $11544 = 0;
 var $11545 = 0.0, $11546 = 0.0, $11547 = 0.0, $11548 = 0, $11549 = 0.0, $1155 = 0, $11550 = 0, $11551 = 0.0, $11552 = 0.0, $11553 = 0, $11554 = 0.0, $11555 = 0, $11556 = 0.0, $11557 = 0.0, $11558 = 0.0, $11559 = 0, $1156 = 0, $11560 = 0.0, $11561 = 0, $11562 = 0.0;
 var $11563 = 0.0, $11564 = 0.0, $11565 = 0, $11566 = 0.0, $11567 = 0, $11568 = 0.0, $11569 = 0.0, $1157 = 0, $11570 = 0.0, $11571 = 0, $11572 = 0.0, $11573 = 0.0, $11574 = 0.0, $11575 = 0.0, $11576 = 0.0, $11577 = 0.0, $11578 = 0, $11579 = 0.0, $1158 = 0, $11580 = 0;
 var $11581 = 0, $11582 = 0.0, $11583 = 0, $11584 = 0.0, $11585 = 0.0, $11586 = 0, $11587 = 0, $11588 = 0.0, $11589 = 0, $1159 = 0.0, $11590 = 0.0, $11591 = 0.0, $11592 = 0, $11593 = 0.0, $11594 = 0, $11595 = 0.0, $11596 = 0, $11597 = 0.0, $11598 = 0, $11599 = 0.0;
 var $116 = 0.0, $1160 = 0, $11600 = 0, $11601 = 0.0, $11602 = 0, $11603 = 0.0, $11604 = 0, $11605 = 0.0, $11606 = 0, $11607 = 0.0, $11608 = 0, $11609 = 0.0, $1161 = 0, $11610 = 0.0, $11611 = 0, $11612 = 0, $11613 = 0.0, $11614 = 0.0, $11615 = 0, $11616 = 0;
 var $11617 = 0.0, $11618 = 0.0, $11619 = 0, $1162 = 0, $11620 = 0, $11621 = 0.0, $11622 = 0.0, $11623 = 0, $11624 = 0, $11625 = 0.0, $11626 = 0.0, $11627 = 0, $11628 = 0, $11629 = 0.0, $1163 = 0, $11630 = 0.0, $11631 = 0, $11632 = 0, $11633 = 0.0, $11634 = 0.0;
 var $11635 = 0, $11636 = 0, $11637 = 0.0, $11638 = 0.0, $11639 = 0, $1164 = 0, $11640 = 0, $11641 = 0.0, $11642 = 0.0, $11643 = 0, $11644 = 0, $11645 = 0.0, $11646 = 0.0, $11647 = 0, $11648 = 0, $11649 = 0.0, $1165 = 0, $11650 = 0.0, $11651 = 0, $11652 = 0;
 var $11653 = 0.0, $11654 = 0.0, $11655 = 0, $11656 = 0, $11657 = 0, $11658 = 0.0, $11659 = 0.0, $1166 = 0, $11660 = 0.0, $11661 = 0, $11662 = 0, $11663 = 0.0, $11664 = 0.0, $11665 = 0, $11666 = 0, $11667 = 0.0, $11668 = 0.0, $11669 = 0.0, $1167 = 0, $11670 = 0;
 var $11671 = 0.0, $11672 = 0.0, $11673 = 0.0, $11674 = 0.0, $11675 = 0.0, $11676 = 0, $11677 = 0, $11678 = 0.0, $11679 = 0.0, $1168 = 0, $11680 = 0, $11681 = 0.0, $11682 = 0.0, $11683 = 0.0, $11684 = 0.0, $11685 = 0.0, $11686 = 0.0, $11687 = 0.0, $11688 = 0, $11689 = 0.0;
 var $1169 = 0, $11690 = 0.0, $11691 = 0.0, $11692 = 0, $11693 = 0.0, $11694 = 0.0, $11695 = 0, $11696 = 0, $11697 = 0, $11698 = 0, $11699 = 0, $117 = 0.0, $1170 = 0, $11700 = 0, $11701 = 0, $11702 = 0, $11703 = 0, $11704 = 0, $11705 = 0, $11706 = 0;
 var $11707 = 0, $11708 = 0, $11709 = 0, $1171 = 0, $11710 = 0, $11711 = 0, $11712 = 0, $11713 = 0, $11714 = 0, $11715 = 0, $11716 = 0.0, $11717 = 0, $11718 = 0, $11719 = 0.0, $1172 = 0, $11720 = 0.0, $11721 = 0.0, $11722 = 0, $11723 = 0, $11724 = 0;
 var $11725 = 0.0, $11726 = 0, $11727 = 0, $11728 = 0.0, $11729 = 0.0, $1173 = 0, $11730 = 0.0, $11731 = 0, $11732 = 0, $11733 = 0, $11734 = 0, $11735 = 0, $11736 = 0, $11737 = 0, $11738 = 0, $11739 = 0, $1174 = 0, $11740 = 0, $11741 = 0, $11742 = 0.0;
 var $11743 = 0, $11744 = 0, $11745 = 0, $11746 = 0.0, $11747 = 0, $11748 = 0, $11749 = 0, $1175 = 0, $11750 = 0.0, $11751 = 0, $11752 = 0, $11753 = 0.0, $11754 = 0.0, $11755 = 0, $11756 = 0.0, $11757 = 0.0, $11758 = 0, $11759 = 0.0, $1176 = 0, $11760 = 0.0;
 var $11761 = 0.0, $11762 = 0.0, $11763 = 0.0, $11764 = 0.0, $11765 = 0.0, $11766 = 0, $11767 = 0.0, $11768 = 0.0, $11769 = 0.0, $1177 = 0, $11770 = 0.0, $11771 = 0, $11772 = 0.0, $11773 = 0.0, $11774 = 0, $11775 = 0, $11776 = 0.0, $11777 = 0, $11778 = 0.0, $11779 = 0.0;
 var $1178 = 0, $11780 = 0.0, $11781 = 0.0, $11782 = 0, $11783 = 0, $11784 = 0.0, $11785 = 0, $11786 = 0.0, $11787 = 0.0, $11788 = 0.0, $11789 = 0.0, $1179 = 0, $11790 = 0, $11791 = 0, $11792 = 0.0, $11793 = 0.0, $11794 = 0.0, $11795 = 0.0, $11796 = 0, $11797 = 0.0;
 var $11798 = 0.0, $11799 = 0, $118 = 0, $1180 = 0, $11800 = 0, $11801 = 0.0, $11802 = 0.0, $11803 = 0.0, $11804 = 0.0, $11805 = 0, $11806 = 0.0, $11807 = 0.0, $11808 = 0, $11809 = 0.0, $1181 = 0, $11810 = 0.0, $11811 = 0, $11812 = 0.0, $11813 = 0, $11814 = 0.0;
 var $11815 = 0.0, $11816 = 0.0, $11817 = 0, $11818 = 0.0, $11819 = 0.0, $1182 = 0, $11820 = 0.0, $11821 = 0.0, $11822 = 0.0, $11823 = 0, $11824 = 0.0, $11825 = 0.0, $11826 = 0, $11827 = 0.0, $11828 = 0, $11829 = 0.0, $1183 = 0, $11830 = 0.0, $11831 = 0.0, $11832 = 0;
 var $11833 = 0.0, $11834 = 0.0, $11835 = 0.0, $11836 = 0.0, $11837 = 0.0, $11838 = 0, $11839 = 0.0, $1184 = 0, $11840 = 0.0, $11841 = 0, $11842 = 0, $11843 = 0.0, $11844 = 0.0, $11845 = 0, $11846 = 0, $11847 = 0.0, $11848 = 0.0, $11849 = 0, $1185 = 0, $11850 = 0;
 var $11851 = 0.0, $11852 = 0.0, $11853 = 0, $11854 = 0, $11855 = 0.0, $11856 = 0.0, $11857 = 0, $11858 = 0, $11859 = 0.0, $1186 = 0, $11860 = 0.0, $11861 = 0, $11862 = 0, $11863 = 0.0, $11864 = 0.0, $11865 = 0, $11866 = 0, $11867 = 0.0, $11868 = 0.0, $11869 = 0;
 var $1187 = 0, $11870 = 0, $11871 = 0, $11872 = 0, $11873 = 0, $11874 = 0.0, $11875 = 0, $11876 = 0, $11877 = 0, $11878 = 0, $11879 = 0, $1188 = 0, $11880 = 0, $11881 = 0, $11882 = 0, $11883 = 0, $11884 = 0, $11885 = 0, $11886 = 0, $11887 = 0;
 var $11888 = 0, $11889 = 0, $1189 = 0.0, $11890 = 0, $11891 = 0, $11892 = 0, $11893 = 0, $11894 = 0, $11895 = 0, $11896 = 0, $11897 = 0, $11898 = 0, $11899 = 0, $119 = 0.0, $1190 = 0, $11900 = 0, $11901 = 0, $11902 = 0, $11903 = 0, $11904 = 0.0;
 var $11905 = 0, $11906 = 0, $11907 = 0, $11908 = 0, $11909 = 0, $1191 = 0, $11910 = 0, $11911 = 0, $11912 = 0, $11913 = 0, $11914 = 0, $11915 = 0, $11916 = 0, $11917 = 0, $11918 = 0, $11919 = 0, $1192 = 0, $11920 = 0, $11921 = 0, $11922 = 0;
 var $11923 = 0, $11924 = 0, $11925 = 0, $11926 = 0, $11927 = 0, $11928 = 0, $11929 = 0, $1193 = 0, $11930 = 0, $11931 = 0, $11932 = 0, $11933 = 0, $11934 = 0.0, $11935 = 0, $11936 = 0, $11937 = 0, $11938 = 0, $11939 = 0, $1194 = 0, $11940 = 0;
 var $11941 = 0, $11942 = 0, $11943 = 0, $11944 = 0, $11945 = 0, $11946 = 0, $11947 = 0, $11948 = 0, $11949 = 0, $1195 = 0, $11950 = 0, $11951 = 0, $11952 = 0, $11953 = 0, $11954 = 0, $11955 = 0, $11956 = 0, $11957 = 0, $11958 = 0, $11959 = 0;
 var $1196 = 0, $11960 = 0, $11961 = 0, $11962 = 0, $11963 = 0, $11964 = 0.0, $11965 = 0, $11966 = 0, $11967 = 0, $11968 = 0, $11969 = 0, $1197 = 0, $11970 = 0, $11971 = 0, $11972 = 0, $11973 = 0, $11974 = 0, $11975 = 0, $11976 = 0, $11977 = 0;
 var $11978 = 0, $11979 = 0, $1198 = 0, $11980 = 0, $11981 = 0, $11982 = 0, $11983 = 0, $11984 = 0, $11985 = 0, $11986 = 0, $11987 = 0, $11988 = 0, $11989 = 0, $1199 = 0, $11990 = 0, $11991 = 0, $11992 = 0, $11993 = 0, $11994 = 0.0, $11995 = 0;
 var $11996 = 0, $11997 = 0, $11998 = 0, $11999 = 0, $12 = 0, $120 = 0.0, $1200 = 0, $12000 = 0, $12001 = 0, $12002 = 0, $12003 = 0, $12004 = 0, $12005 = 0, $12006 = 0, $12007 = 0, $12008 = 0, $12009 = 0, $1201 = 0, $12010 = 0, $12011 = 0;
 var $12012 = 0, $12013 = 0, $12014 = 0, $12015 = 0, $12016 = 0, $12017 = 0, $12018 = 0, $12019 = 0, $1202 = 0, $12020 = 0, $12021 = 0, $12022 = 0, $12023 = 0, $12024 = 0.0, $12025 = 0, $12026 = 0, $12027 = 0, $12028 = 0, $12029 = 0, $1203 = 0;
 var $12030 = 0, $12031 = 0, $12032 = 0, $12033 = 0, $12034 = 0, $12035 = 0, $12036 = 0, $12037 = 0, $12038 = 0, $12039 = 0, $1204 = 0, $12040 = 0, $12041 = 0, $12042 = 0, $12043 = 0, $12044 = 0, $12045 = 0, $12046 = 0, $12047 = 0, $12048 = 0;
 var $12049 = 0, $1205 = 0, $12050 = 0, $12051 = 0, $12052 = 0, $12053 = 0, $12054 = 0, $12055 = 0, $12056 = 0, $12057 = 0, $12058 = 0, $12059 = 0, $1206 = 0, $12060 = 0, $12061 = 0, $12062 = 0, $12063 = 0, $12064 = 0, $12065 = 0, $12066 = 0;
 var $12067 = 0, $12068 = 0, $12069 = 0, $1207 = 0, $12070 = 0, $12071 = 0, $12072 = 0.0, $12073 = 0, $12074 = 0.0, $12075 = 0.0, $12076 = 0, $12077 = 0.0, $12078 = 0.0, $12079 = 0, $1208 = 0, $12080 = 0.0, $12081 = 0, $12082 = 0.0, $12083 = 0.0, $12084 = 0;
 var $12085 = 0.0, $12086 = 0.0, $12087 = 0.0, $12088 = 0.0, $12089 = 0.0, $1209 = 0, $12090 = 0, $12091 = 0.0, $12092 = 0.0, $12093 = 0.0, $12094 = 0.0, $12095 = 0.0, $12096 = 0, $12097 = 0.0, $12098 = 0.0, $12099 = 0, $121 = 0.0, $1210 = 0, $12100 = 0, $12101 = 0.0;
 var $12102 = 0, $12103 = 0, $12104 = 0.0, $12105 = 0, $12106 = 0, $12107 = 0.0, $12108 = 0, $12109 = 0, $1211 = 0, $12110 = 0.0, $12111 = 0, $12112 = 0.0, $12113 = 0, $12114 = 0.0, $12115 = 0, $12116 = 0.0, $12117 = 0, $12118 = 0.0, $12119 = 0, $1212 = 0;
 var $12120 = 0.0, $12121 = 0.0, $12122 = 0.0, $12123 = 0, $12124 = 0.0, $12125 = 0.0, $12126 = 0, $12127 = 0.0, $12128 = 0.0, $12129 = 0.0, $1213 = 0, $12130 = 0.0, $12131 = 0.0, $12132 = 0, $12133 = 0.0, $12134 = 0.0, $12135 = 0, $12136 = 0, $12137 = 0.0, $12138 = 0.0;
 var $12139 = 0, $1214 = 0, $12140 = 0, $12141 = 0.0, $12142 = 0.0, $12143 = 0, $12144 = 0, $12145 = 0.0, $12146 = 0.0, $12147 = 0, $12148 = 0, $12149 = 0.0, $1215 = 0, $12150 = 0.0, $12151 = 0, $12152 = 0, $12153 = 0.0, $12154 = 0.0, $12155 = 0, $12156 = 0;
 var $12157 = 0.0, $12158 = 0.0, $12159 = 0, $1216 = 0, $12160 = 0, $12161 = 0.0, $12162 = 0.0, $12163 = 0, $12164 = 0, $12165 = 0.0, $12166 = 0.0, $12167 = 0, $12168 = 0, $12169 = 0.0, $1217 = 0, $12170 = 0.0, $12171 = 0, $12172 = 0, $12173 = 0, $12174 = 0.0;
 var $12175 = 0.0, $12176 = 0, $12177 = 0.0, $12178 = 0.0, $12179 = 0.0, $1218 = 0, $12180 = 0.0, $12181 = 0, $12182 = 0.0, $12183 = 0.0, $12184 = 0, $12185 = 0.0, $12186 = 0.0, $12187 = 0.0, $12188 = 0.0, $12189 = 0, $1219 = 0.0, $12190 = 0, $12191 = 0.0, $12192 = 0;
 var $12193 = 0.0, $12194 = 0.0, $12195 = 0, $12196 = 0.0, $12197 = 0.0, $12198 = 0.0, $12199 = 0.0, $122 = 0.0, $1220 = 0, $12200 = 0.0, $12201 = 0.0, $12202 = 0, $12203 = 0, $12204 = 0.0, $12205 = 0.0, $12206 = 0.0, $12207 = 0.0, $12208 = 0, $12209 = 0.0, $1221 = 0;
 var $12210 = 0.0, $12211 = 0, $12212 = 0.0, $12213 = 0.0, $12214 = 0.0, $12215 = 0.0, $12216 = 0, $12217 = 0.0, $12218 = 0, $12219 = 0.0, $1222 = 0, $12220 = 0.0, $12221 = 0, $12222 = 0.0, $12223 = 0.0, $12224 = 0.0, $12225 = 0.0, $12226 = 0.0, $12227 = 0.0, $12228 = 0.0;
 var $12229 = 0.0, $1223 = 0, $12230 = 0.0, $12231 = 0, $12232 = 0, $12233 = 0.0, $12234 = 0.0, $12235 = 0.0, $12236 = 0.0, $12237 = 0, $12238 = 0.0, $12239 = 0.0, $1224 = 0, $12240 = 0, $12241 = 0.0, $12242 = 0.0, $12243 = 0.0, $12244 = 0, $12245 = 0.0, $12246 = 0;
 var $12247 = 0.0, $12248 = 0.0, $12249 = 0, $1225 = 0, $12250 = 0.0, $12251 = 0.0, $12252 = 0.0, $12253 = 0.0, $12254 = 0.0, $12255 = 0.0, $12256 = 0.0, $12257 = 0.0, $12258 = 0.0, $12259 = 0.0, $1226 = 0, $12260 = 0.0, $12261 = 0, $12262 = 0.0, $12263 = 0.0, $12264 = 0.0;
 var $12265 = 0, $12266 = 0.0, $12267 = 0.0, $12268 = 0, $12269 = 0, $1227 = 0, $12270 = 0, $12271 = 0, $12272 = 0, $12273 = 0, $12274 = 0, $12275 = 0, $12276 = 0, $12277 = 0, $12278 = 0, $12279 = 0, $1228 = 0, $12280 = 0, $12281 = 0, $12282 = 0;
 var $12283 = 0, $12284 = 0, $12285 = 0, $12286 = 0, $12287 = 0, $12288 = 0, $12289 = 0.0, $1229 = 0, $12290 = 0, $12291 = 0, $12292 = 0.0, $12293 = 0.0, $12294 = 0.0, $12295 = 0, $12296 = 0, $12297 = 0, $12298 = 0.0, $12299 = 0, $123 = 0.0, $1230 = 0;
 var $12300 = 0, $12301 = 0.0, $12302 = 0.0, $12303 = 0.0, $12304 = 0, $12305 = 0, $12306 = 0, $12307 = 0, $12308 = 0, $12309 = 0, $1231 = 0, $12310 = 0, $12311 = 0, $12312 = 0, $12313 = 0, $12314 = 0, $12315 = 0.0, $12316 = 0, $12317 = 0, $12318 = 0;
 var $12319 = 0.0, $1232 = 0, $12320 = 0, $12321 = 0, $12322 = 0, $12323 = 0.0, $12324 = 0, $12325 = 0, $12326 = 0.0, $12327 = 0.0, $12328 = 0, $12329 = 0.0, $1233 = 0, $12330 = 0.0, $12331 = 0, $12332 = 0.0, $12333 = 0.0, $12334 = 0.0, $12335 = 0.0, $12336 = 0;
 var $12337 = 0.0, $12338 = 0.0, $12339 = 0.0, $1234 = 0, $12340 = 0.0, $12341 = 0.0, $12342 = 0, $12343 = 0.0, $12344 = 0.0, $12345 = 0.0, $12346 = 0, $12347 = 0.0, $12348 = 0, $12349 = 0.0, $1235 = 0, $12350 = 0.0, $12351 = 0.0, $12352 = 0.0, $12353 = 0, $12354 = 0.0;
 var $12355 = 0, $12356 = 0.0, $12357 = 0.0, $12358 = 0.0, $12359 = 0, $1236 = 0, $12360 = 0.0, $12361 = 0.0, $12362 = 0.0, $12363 = 0, $12364 = 0.0, $12365 = 0.0, $12366 = 0, $12367 = 0.0, $12368 = 0.0, $12369 = 0.0, $1237 = 0, $12370 = 0.0, $12371 = 0, $12372 = 0;
 var $12373 = 0.0, $12374 = 0, $12375 = 0.0, $12376 = 0.0, $12377 = 0, $12378 = 0.0, $12379 = 0, $1238 = 0, $12380 = 0.0, $12381 = 0.0, $12382 = 0.0, $12383 = 0.0, $12384 = 0.0, $12385 = 0.0, $12386 = 0, $12387 = 0, $12388 = 0.0, $12389 = 0, $1239 = 0, $12390 = 0.0;
 var $12391 = 0.0, $12392 = 0, $12393 = 0.0, $12394 = 0.0, $12395 = 0.0, $12396 = 0.0, $12397 = 0.0, $12398 = 0.0, $12399 = 0.0, $124 = 0, $1240 = 0, $12400 = 0.0, $12401 = 0, $12402 = 0, $12403 = 0.0, $12404 = 0, $12405 = 0.0, $12406 = 0.0, $12407 = 0, $12408 = 0.0;
 var $12409 = 0.0, $1241 = 0, $12410 = 0.0, $12411 = 0.0, $12412 = 0.0, $12413 = 0.0, $12414 = 0.0, $12415 = 0.0, $12416 = 0, $12417 = 0.0, $12418 = 0, $12419 = 0.0, $1242 = 0, $12420 = 0.0, $12421 = 0.0, $12422 = 0.0, $12423 = 0.0, $12424 = 0, $12425 = 0.0, $12426 = 0;
 var $12427 = 0.0, $12428 = 0.0, $12429 = 0.0, $1243 = 0, $12430 = 0.0, $12431 = 0.0, $12432 = 0, $12433 = 0, $12434 = 0.0, $12435 = 0.0, $12436 = 0.0, $12437 = 0.0, $12438 = 0.0, $12439 = 0.0, $1244 = 0, $12440 = 0.0, $12441 = 0.0, $12442 = 0.0, $12443 = 0, $12444 = 0.0;
 var $12445 = 0.0, $12446 = 0, $12447 = 0.0, $12448 = 0.0, $12449 = 0, $1245 = 0, $12450 = 0, $12451 = 0.0, $12452 = 0.0, $12453 = 0, $12454 = 0, $12455 = 0.0, $12456 = 0.0, $12457 = 0, $12458 = 0, $12459 = 0.0, $1246 = 0, $12460 = 0.0, $12461 = 0, $12462 = 0;
 var $12463 = 0.0, $12464 = 0.0, $12465 = 0, $12466 = 0, $12467 = 0.0, $12468 = 0.0, $12469 = 0, $1247 = 0, $12470 = 0, $12471 = 0.0, $12472 = 0.0, $12473 = 0, $12474 = 0, $12475 = 0.0, $12476 = 0.0, $12477 = 0, $12478 = 0, $12479 = 0, $1248 = 0, $12480 = 0;
 var $12481 = 0, $12482 = 0.0, $12483 = 0, $12484 = 0, $12485 = 0, $12486 = 0, $12487 = 0, $12488 = 0, $12489 = 0, $1249 = 0.0, $12490 = 0, $12491 = 0, $12492 = 0, $12493 = 0, $12494 = 0, $12495 = 0, $12496 = 0, $12497 = 0, $12498 = 0, $12499 = 0;
 var $125 = 0, $1250 = 0, $12500 = 0, $12501 = 0, $12502 = 0, $12503 = 0, $12504 = 0, $12505 = 0, $12506 = 0, $12507 = 0, $12508 = 0, $12509 = 0, $1251 = 0, $12510 = 0, $12511 = 0, $12512 = 0.0, $12513 = 0, $12514 = 0, $12515 = 0, $12516 = 0;
 var $12517 = 0, $12518 = 0, $12519 = 0, $1252 = 0, $12520 = 0, $12521 = 0, $12522 = 0, $12523 = 0, $12524 = 0, $12525 = 0, $12526 = 0, $12527 = 0, $12528 = 0, $12529 = 0, $1253 = 0, $12530 = 0, $12531 = 0, $12532 = 0, $12533 = 0, $12534 = 0;
 var $12535 = 0, $12536 = 0, $12537 = 0, $12538 = 0, $12539 = 0, $1254 = 0, $12540 = 0, $12541 = 0, $12542 = 0.0, $12543 = 0, $12544 = 0, $12545 = 0, $12546 = 0, $12547 = 0, $12548 = 0, $12549 = 0, $1255 = 0, $12550 = 0, $12551 = 0, $12552 = 0;
 var $12553 = 0, $12554 = 0, $12555 = 0, $12556 = 0, $12557 = 0, $12558 = 0, $12559 = 0, $1256 = 0, $12560 = 0, $12561 = 0, $12562 = 0, $12563 = 0, $12564 = 0, $12565 = 0, $12566 = 0, $12567 = 0, $12568 = 0, $12569 = 0, $1257 = 0, $12570 = 0;
 var $12571 = 0, $12572 = 0.0, $12573 = 0, $12574 = 0, $12575 = 0, $12576 = 0, $12577 = 0, $12578 = 0, $12579 = 0, $1258 = 0, $12580 = 0, $12581 = 0, $12582 = 0, $12583 = 0, $12584 = 0, $12585 = 0, $12586 = 0, $12587 = 0, $12588 = 0, $12589 = 0;
 var $1259 = 0, $12590 = 0, $12591 = 0, $12592 = 0, $12593 = 0, $12594 = 0, $12595 = 0, $12596 = 0, $12597 = 0, $12598 = 0, $12599 = 0, $126 = 0.0, $1260 = 0, $12600 = 0, $12601 = 0, $12602 = 0.0, $12603 = 0, $12604 = 0, $12605 = 0, $12606 = 0;
 var $12607 = 0, $12608 = 0, $12609 = 0, $1261 = 0, $12610 = 0, $12611 = 0, $12612 = 0, $12613 = 0, $12614 = 0, $12615 = 0, $12616 = 0, $12617 = 0, $12618 = 0, $12619 = 0, $1262 = 0, $12620 = 0, $12621 = 0, $12622 = 0, $12623 = 0, $12624 = 0;
 var $12625 = 0, $12626 = 0, $12627 = 0, $12628 = 0, $12629 = 0, $1263 = 0, $12630 = 0, $12631 = 0, $12632 = 0.0, $12633 = 0, $12634 = 0, $12635 = 0, $12636 = 0, $12637 = 0, $12638 = 0, $12639 = 0, $1264 = 0, $12640 = 0, $12641 = 0, $12642 = 0;
 var $12643 = 0, $12644 = 0, $12645 = 0, $12646 = 0, $12647 = 0, $12648 = 0, $12649 = 0, $1265 = 0, $12650 = 0, $12651 = 0, $12652 = 0, $12653 = 0, $12654 = 0, $12655 = 0, $12656 = 0, $12657 = 0, $12658 = 0, $12659 = 0, $1266 = 0, $12660 = 0;
 var $12661 = 0, $12662 = 0, $12663 = 0, $12664 = 0, $12665 = 0, $12666 = 0, $12667 = 0, $12668 = 0, $12669 = 0, $1267 = 0, $12670 = 0, $12671 = 0, $12672 = 0, $12673 = 0, $12674 = 0, $12675 = 0, $12676 = 0, $12677 = 0, $12678 = 0, $12679 = 0;
 var $1268 = 0, $12680 = 0.0, $12681 = 0.0, $12682 = 0, $12683 = 0.0, $12684 = 0.0, $12685 = 0, $12686 = 0.0, $12687 = 0, $12688 = 0.0, $12689 = 0.0, $1269 = 0, $12690 = 0.0, $12691 = 0, $12692 = 0.0, $12693 = 0, $12694 = 0.0, $12695 = 0.0, $12696 = 0, $12697 = 0.0;
 var $12698 = 0, $12699 = 0.0, $127 = 0.0, $1270 = 0, $12700 = 0.0, $12701 = 0.0, $12702 = 0, $12703 = 0.0, $12704 = 0.0, $12705 = 0.0, $12706 = 0.0, $12707 = 0.0, $12708 = 0.0, $12709 = 0, $1271 = 0, $12710 = 0.0, $12711 = 0.0, $12712 = 0, $12713 = 0, $12714 = 0.0;
 var $12715 = 0, $12716 = 0, $12717 = 0.0, $12718 = 0, $12719 = 0, $1272 = 0, $12720 = 0.0, $12721 = 0, $12722 = 0, $12723 = 0.0, $12724 = 0, $12725 = 0.0, $12726 = 0, $12727 = 0.0, $12728 = 0, $12729 = 0.0, $1273 = 0, $12730 = 0, $12731 = 0.0, $12732 = 0;
 var $12733 = 0.0, $12734 = 0.0, $12735 = 0, $12736 = 0, $12737 = 0.0, $12738 = 0.0, $12739 = 0, $1274 = 0, $12740 = 0, $12741 = 0.0, $12742 = 0.0, $12743 = 0, $12744 = 0, $12745 = 0.0, $12746 = 0.0, $12747 = 0, $12748 = 0, $12749 = 0.0, $1275 = 0, $12750 = 0.0;
 var $12751 = 0, $12752 = 0, $12753 = 0.0, $12754 = 0.0, $12755 = 0, $12756 = 0, $12757 = 0.0, $12758 = 0.0, $12759 = 0, $1276 = 0, $12760 = 0, $12761 = 0.0, $12762 = 0.0, $12763 = 0, $12764 = 0, $12765 = 0.0, $12766 = 0.0, $12767 = 0, $12768 = 0, $12769 = 0.0;
 var $1277 = 0, $12770 = 0.0, $12771 = 0, $12772 = 0, $12773 = 0, $12774 = 0.0, $12775 = 0.0, $12776 = 0, $12777 = 0.0, $12778 = 0, $12779 = 0.0, $1278 = 0, $12780 = 0.0, $12781 = 0, $12782 = 0.0, $12783 = 0.0, $12784 = 0.0, $12785 = 0.0, $12786 = 0.0, $12787 = 0.0;
 var $12788 = 0, $12789 = 0, $1279 = 0, $12790 = 0.0, $12791 = 0.0, $12792 = 0, $12793 = 0.0, $12794 = 0.0, $12795 = 0, $12796 = 0.0, $12797 = 0.0, $12798 = 0.0, $12799 = 0.0, $128 = 0.0, $1280 = 0, $12800 = 0.0, $12801 = 0.0, $12802 = 0, $12803 = 0, $12804 = 0.0;
 var $12805 = 0, $12806 = 0.0, $12807 = 0.0, $12808 = 0, $12809 = 0.0, $1281 = 0, $12810 = 0.0, $12811 = 0.0, $12812 = 0.0, $12813 = 0.0, $12814 = 0.0, $12815 = 0, $12816 = 0.0, $12817 = 0.0, $12818 = 0, $12819 = 0.0, $1282 = 0, $12820 = 0.0, $12821 = 0, $12822 = 0.0;
 var $12823 = 0.0, $12824 = 0.0, $12825 = 0.0, $12826 = 0.0, $12827 = 0.0, $12828 = 0.0, $12829 = 0.0, $1283 = 0, $12830 = 0.0, $12831 = 0, $12832 = 0, $12833 = 0.0, $12834 = 0, $12835 = 0.0, $12836 = 0.0, $12837 = 0, $12838 = 0.0, $12839 = 0.0, $1284 = 0, $12840 = 0.0;
 var $12841 = 0.0, $12842 = 0.0, $12843 = 0, $12844 = 0.0, $12845 = 0.0, $12846 = 0, $12847 = 0.0, $12848 = 0.0, $12849 = 0, $1285 = 0, $12850 = 0.0, $12851 = 0.0, $12852 = 0.0, $12853 = 0.0, $12854 = 0.0, $12855 = 0.0, $12856 = 0.0, $12857 = 0.0, $12858 = 0.0, $12859 = 0.0;
 var $1286 = 0, $12860 = 0.0, $12861 = 0, $12862 = 0.0, $12863 = 0.0, $12864 = 0.0, $12865 = 0, $12866 = 0.0, $12867 = 0.0, $12868 = 0, $12869 = 0, $1287 = 0, $12870 = 0, $12871 = 0, $12872 = 0, $12873 = 0, $12874 = 0, $12875 = 0, $12876 = 0, $12877 = 0;
 var $12878 = 0, $12879 = 0, $1288 = 0, $12880 = 0, $12881 = 0, $12882 = 0, $12883 = 0, $12884 = 0, $12885 = 0, $12886 = 0, $12887 = 0, $12888 = 0, $12889 = 0.0, $1289 = 0, $12890 = 0, $12891 = 0, $12892 = 0.0, $12893 = 0.0, $12894 = 0.0, $12895 = 0;
 var $12896 = 0, $12897 = 0, $12898 = 0.0, $12899 = 0, $129 = 0.0, $1290 = 0, $12900 = 0, $12901 = 0.0, $12902 = 0.0, $12903 = 0.0, $12904 = 0, $12905 = 0, $12906 = 0, $12907 = 0, $12908 = 0, $12909 = 0, $1291 = 0, $12910 = 0, $12911 = 0, $12912 = 0;
 var $12913 = 0, $12914 = 0, $12915 = 0.0, $12916 = 0, $12917 = 0, $12918 = 0, $12919 = 0.0, $1292 = 0, $12920 = 0, $12921 = 0, $12922 = 0, $12923 = 0.0, $12924 = 0, $12925 = 0, $12926 = 0.0, $12927 = 0.0, $12928 = 0, $12929 = 0.0, $1293 = 0, $12930 = 0.0;
 var $12931 = 0, $12932 = 0.0, $12933 = 0.0, $12934 = 0.0, $12935 = 0.0, $12936 = 0, $12937 = 0.0, $12938 = 0.0, $12939 = 0.0, $1294 = 0, $12940 = 0.0, $12941 = 0.0, $12942 = 0, $12943 = 0.0, $12944 = 0.0, $12945 = 0.0, $12946 = 0, $12947 = 0.0, $12948 = 0, $12949 = 0.0;
 var $1295 = 0, $12950 = 0.0, $12951 = 0.0, $12952 = 0.0, $12953 = 0, $12954 = 0.0, $12955 = 0, $12956 = 0.0, $12957 = 0.0, $12958 = 0.0, $12959 = 0, $1296 = 0, $12960 = 0.0, $12961 = 0, $12962 = 0.0, $12963 = 0.0, $12964 = 0, $12965 = 0.0, $12966 = 0, $12967 = 0.0;
 var $12968 = 0.0, $12969 = 0.0, $1297 = 0, $12970 = 0.0, $12971 = 0.0, $12972 = 0.0, $12973 = 0, $12974 = 0, $12975 = 0.0, $12976 = 0.0, $12977 = 0.0, $12978 = 0, $12979 = 0.0, $1298 = 0, $12980 = 0.0, $12981 = 0, $12982 = 0.0, $12983 = 0.0, $12984 = 0.0, $12985 = 0.0;
 var $12986 = 0, $12987 = 0, $12988 = 0.0, $12989 = 0, $1299 = 0.0, $12990 = 0.0, $12991 = 0.0, $12992 = 0, $12993 = 0.0, $12994 = 0.0, $12995 = 0.0, $12996 = 0.0, $12997 = 0.0, $12998 = 0.0, $12999 = 0.0, $13 = 0.0, $130 = 0, $1300 = 0.0, $13000 = 0.0, $13001 = 0;
 var $13002 = 0, $13003 = 0.0, $13004 = 0, $13005 = 0.0, $13006 = 0.0, $13007 = 0.0, $13008 = 0.0, $13009 = 0.0, $1301 = 0.0, $13010 = 0, $13011 = 0.0, $13012 = 0.0, $13013 = 0.0, $13014 = 0.0, $13015 = 0.0, $13016 = 0, $13017 = 0.0, $13018 = 0, $13019 = 0.0, $1302 = 0.0;
 var $13020 = 0.0, $13021 = 0.0, $13022 = 0.0, $13023 = 0.0, $13024 = 0, $13025 = 0.0, $13026 = 0, $13027 = 0.0, $13028 = 0.0, $13029 = 0.0, $1303 = 0.0, $13030 = 0.0, $13031 = 0.0, $13032 = 0, $13033 = 0, $13034 = 0.0, $13035 = 0.0, $13036 = 0.0, $13037 = 0.0, $13038 = 0.0;
 var $13039 = 0.0, $1304 = 0.0, $13040 = 0.0, $13041 = 0.0, $13042 = 0.0, $13043 = 0, $13044 = 0.0, $13045 = 0.0, $13046 = 0, $13047 = 0.0, $13048 = 0.0, $13049 = 0, $1305 = 0, $13050 = 0, $13051 = 0.0, $13052 = 0.0, $13053 = 0, $13054 = 0, $13055 = 0.0, $13056 = 0.0;
 var $13057 = 0, $13058 = 0, $13059 = 0.0, $1306 = 0.0, $13060 = 0.0, $13061 = 0, $13062 = 0, $13063 = 0.0, $13064 = 0.0, $13065 = 0, $13066 = 0, $13067 = 0.0, $13068 = 0.0, $13069 = 0, $1307 = 0.0, $13070 = 0, $13071 = 0.0, $13072 = 0.0, $13073 = 0, $13074 = 0;
 var $13075 = 0.0, $13076 = 0.0, $13077 = 0, $13078 = 0, $13079 = 0, $1308 = 0, $13080 = 0, $13081 = 0, $13082 = 0.0, $13083 = 0, $13084 = 0, $13085 = 0, $13086 = 0, $13087 = 0, $13088 = 0, $13089 = 0, $1309 = 0, $13090 = 0, $13091 = 0, $13092 = 0;
 var $13093 = 0, $13094 = 0, $13095 = 0, $13096 = 0, $13097 = 0, $13098 = 0, $13099 = 0, $131 = 0.0, $1310 = 0.0, $13100 = 0, $13101 = 0, $13102 = 0, $13103 = 0, $13104 = 0, $13105 = 0, $13106 = 0, $13107 = 0, $13108 = 0, $13109 = 0, $1311 = 0;
 var $13110 = 0, $13111 = 0, $13112 = 0.0, $13113 = 0, $13114 = 0, $13115 = 0, $13116 = 0, $13117 = 0, $13118 = 0, $13119 = 0, $1312 = 0, $13120 = 0, $13121 = 0, $13122 = 0, $13123 = 0, $13124 = 0, $13125 = 0, $13126 = 0, $13127 = 0, $13128 = 0;
 var $13129 = 0, $1313 = 0.0, $13130 = 0, $13131 = 0, $13132 = 0, $13133 = 0, $13134 = 0, $13135 = 0, $13136 = 0, $13137 = 0, $13138 = 0, $13139 = 0, $1314 = 0, $13140 = 0, $13141 = 0, $13142 = 0.0, $13143 = 0, $13144 = 0, $13145 = 0, $13146 = 0;
 var $13147 = 0, $13148 = 0, $13149 = 0, $1315 = 0, $13150 = 0, $13151 = 0, $13152 = 0, $13153 = 0, $13154 = 0, $13155 = 0, $13156 = 0, $13157 = 0, $13158 = 0, $13159 = 0, $1316 = 0.0, $13160 = 0, $13161 = 0, $13162 = 0, $13163 = 0, $13164 = 0;
 var $13165 = 0, $13166 = 0, $13167 = 0, $13168 = 0, $13169 = 0, $1317 = 0, $13170 = 0, $13171 = 0, $13172 = 0.0, $13173 = 0, $13174 = 0, $13175 = 0, $13176 = 0, $13177 = 0, $13178 = 0, $13179 = 0, $1318 = 0, $13180 = 0, $13181 = 0, $13182 = 0;
 var $13183 = 0, $13184 = 0, $13185 = 0, $13186 = 0, $13187 = 0, $13188 = 0, $13189 = 0, $1319 = 0.0, $13190 = 0, $13191 = 0, $13192 = 0, $13193 = 0, $13194 = 0, $13195 = 0, $13196 = 0, $13197 = 0, $13198 = 0, $13199 = 0, $132 = 0, $1320 = 0;
 var $13200 = 0, $13201 = 0, $13202 = 0.0, $13203 = 0, $13204 = 0, $13205 = 0, $13206 = 0, $13207 = 0, $13208 = 0, $13209 = 0, $1321 = 0.0, $13210 = 0, $13211 = 0, $13212 = 0, $13213 = 0, $13214 = 0, $13215 = 0, $13216 = 0, $13217 = 0, $13218 = 0;
 var $13219 = 0, $1322 = 0.0, $13220 = 0, $13221 = 0, $13222 = 0, $13223 = 0, $13224 = 0, $13225 = 0, $13226 = 0, $13227 = 0, $13228 = 0, $13229 = 0, $1323 = 0, $13230 = 0, $13231 = 0, $13232 = 0.0, $13233 = 0, $13234 = 0, $13235 = 0, $13236 = 0;
 var $13237 = 0, $13238 = 0, $13239 = 0, $1324 = 0, $13240 = 0, $13241 = 0, $13242 = 0, $13243 = 0, $13244 = 0, $13245 = 0, $13246 = 0, $13247 = 0, $13248 = 0, $13249 = 0, $1325 = 0.0, $13250 = 0, $13251 = 0, $13252 = 0, $13253 = 0, $13254 = 0;
 var $13255 = 0, $13256 = 0, $13257 = 0, $13258 = 0, $13259 = 0, $1326 = 0.0, $13260 = 0, $13261 = 0, $13262 = 0, $13263 = 0, $13264 = 0, $13265 = 0, $13266 = 0, $13267 = 0, $13268 = 0, $13269 = 0, $1327 = 0, $13270 = 0, $13271 = 0, $13272 = 0;
 var $13273 = 0, $13274 = 0, $13275 = 0, $13276 = 0, $13277 = 0, $13278 = 0, $13279 = 0, $1328 = 0, $13280 = 0.0, $13281 = 0, $13282 = 0.0, $13283 = 0.0, $13284 = 0.0, $13285 = 0, $13286 = 0.0, $13287 = 0.0, $13288 = 0, $13289 = 0.0, $1329 = 0.0, $13290 = 0.0;
 var $13291 = 0, $13292 = 0.0, $13293 = 0.0, $13294 = 0, $13295 = 0.0, $13296 = 0.0, $13297 = 0, $13298 = 0.0, $13299 = 0.0, $133 = 0.0, $1330 = 0.0, $13300 = 0.0, $13301 = 0.0, $13302 = 0.0, $13303 = 0.0, $13304 = 0, $13305 = 0.0, $13306 = 0, $13307 = 0.0, $13308 = 0;
 var $13309 = 0, $1331 = 0, $13310 = 0.0, $13311 = 0, $13312 = 0.0, $13313 = 0, $13314 = 0, $13315 = 0.0, $13316 = 0, $13317 = 0.0, $13318 = 0.0, $13319 = 0, $1332 = 0, $13320 = 0.0, $13321 = 0.0, $13322 = 0.0, $13323 = 0.0, $13324 = 0.0, $13325 = 0, $13326 = 0;
 var $13327 = 0.0, $13328 = 0.0, $13329 = 0.0, $1333 = 0.0, $13330 = 0.0, $13331 = 0, $13332 = 0.0, $13333 = 0.0, $13334 = 0.0, $13335 = 0.0, $13336 = 0.0, $13337 = 0, $13338 = 0, $13339 = 0.0, $1334 = 0.0, $13340 = 0.0, $13341 = 0.0, $13342 = 0.0, $13343 = 0, $13344 = 0.0;
 var $13345 = 0.0, $13346 = 0.0, $13347 = 0.0, $13348 = 0.0, $13349 = 0, $1335 = 0, $13350 = 0, $13351 = 0.0, $13352 = 0.0, $13353 = 0.0, $13354 = 0.0, $13355 = 0.0, $13356 = 0, $13357 = 0.0, $13358 = 0.0, $13359 = 0.0, $1336 = 0, $13360 = 0.0, $13361 = 0.0, $13362 = 0;
 var $13363 = 0.0, $13364 = 0.0, $13365 = 0, $13366 = 0, $13367 = 0.0, $13368 = 0.0, $13369 = 0, $1337 = 0.0, $13370 = 0, $13371 = 0.0, $13372 = 0.0, $13373 = 0, $13374 = 0, $13375 = 0.0, $13376 = 0.0, $13377 = 0, $13378 = 0, $13379 = 0.0, $1338 = 0.0, $13380 = 0.0;
 var $13381 = 0, $13382 = 0, $13383 = 0.0, $13384 = 0.0, $13385 = 0, $13386 = 0, $13387 = 0.0, $13388 = 0.0, $13389 = 0, $1339 = 0, $13390 = 0, $13391 = 0.0, $13392 = 0.0, $13393 = 0, $13394 = 0, $13395 = 0.0, $13396 = 0.0, $13397 = 0, $13398 = 0, $13399 = 0.0;
 var $134 = 0.0, $1340 = 0, $13400 = 0.0, $13401 = 0, $13402 = 0, $13403 = 0, $13404 = 0.0, $13405 = 0.0, $13406 = 0, $13407 = 0, $13408 = 0.0, $13409 = 0.0, $1341 = 0.0, $13410 = 0, $13411 = 0, $13412 = 0.0, $13413 = 0.0, $13414 = 0, $13415 = 0.0, $13416 = 0.0;
 var $13417 = 0.0, $13418 = 0.0, $13419 = 0.0, $1342 = 0.0, $13420 = 0, $13421 = 0, $13422 = 0.0, $13423 = 0, $13424 = 0.0, $13425 = 0.0, $13426 = 0.0, $13427 = 0.0, $13428 = 0.0, $13429 = 0.0, $1343 = 0, $13430 = 0.0, $13431 = 0, $13432 = 0.0, $13433 = 0.0, $13434 = 0.0;
 var $13435 = 0, $13436 = 0.0, $13437 = 0.0, $13438 = 0, $13439 = 0, $1344 = 0, $13440 = 0, $13441 = 0, $13442 = 0, $13443 = 0, $13444 = 0, $13445 = 0, $13446 = 0, $13447 = 0, $13448 = 0, $13449 = 0, $1345 = 0, $13450 = 0, $13451 = 0, $13452 = 0;
 var $13453 = 0, $13454 = 0, $13455 = 0, $13456 = 0, $13457 = 0, $13458 = 0, $13459 = 0.0, $1346 = 0.0, $13460 = 0, $13461 = 0, $13462 = 0.0, $13463 = 0.0, $13464 = 0.0, $13465 = 0, $13466 = 0, $13467 = 0, $13468 = 0.0, $13469 = 0, $1347 = 0, $13470 = 0;
 var $13471 = 0.0, $13472 = 0.0, $13473 = 0.0, $13474 = 0, $13475 = 0, $13476 = 0, $13477 = 0, $13478 = 0, $13479 = 0, $1348 = 0.0, $13480 = 0, $13481 = 0, $13482 = 0, $13483 = 0, $13484 = 0, $13485 = 0.0, $13486 = 0, $13487 = 0, $13488 = 0, $13489 = 0.0;
 var $1349 = 0, $13490 = 0, $13491 = 0, $13492 = 0, $13493 = 0.0, $13494 = 0, $13495 = 0, $13496 = 0.0, $13497 = 0.0, $13498 = 0, $13499 = 0.0, $135 = 0.0, $1350 = 0, $13500 = 0.0, $13501 = 0, $13502 = 0.0, $13503 = 0.0, $13504 = 0.0, $13505 = 0.0, $13506 = 0;
 var $13507 = 0.0, $13508 = 0, $13509 = 0.0, $1351 = 0, $13510 = 0.0, $13511 = 0.0, $13512 = 0.0, $13513 = 0.0, $13514 = 0.0, $13515 = 0, $13516 = 0.0, $13517 = 0.0, $13518 = 0, $13519 = 0.0, $1352 = 0.0, $13520 = 0.0, $13521 = 0, $13522 = 0.0, $13523 = 0.0, $13524 = 0;
 var $13525 = 0, $13526 = 0.0, $13527 = 0.0, $13528 = 0.0, $13529 = 0, $1353 = 0.0, $13530 = 0.0, $13531 = 0.0, $13532 = 0, $13533 = 0, $13534 = 0.0, $13535 = 0.0, $13536 = 0.0, $13537 = 0.0, $13538 = 0, $13539 = 0.0, $1354 = 0.0, $13540 = 0.0, $13541 = 0, $13542 = 0.0;
 var $13543 = 0.0, $13544 = 0.0, $13545 = 0.0, $13546 = 0, $13547 = 0.0, $13548 = 0.0, $13549 = 0, $1355 = 0.0, $13550 = 0, $13551 = 0.0, $13552 = 0.0, $13553 = 0.0, $13554 = 0.0, $13555 = 0.0, $13556 = 0.0, $13557 = 0, $13558 = 0.0, $13559 = 0, $1356 = 0.0, $13560 = 0.0;
 var $13561 = 0.0, $13562 = 0.0, $13563 = 0, $13564 = 0.0, $13565 = 0.0, $13566 = 0, $13567 = 0.0, $13568 = 0, $13569 = 0.0, $1357 = 0.0, $13570 = 0.0, $13571 = 0.0, $13572 = 0, $13573 = 0.0, $13574 = 0.0, $13575 = 0.0, $13576 = 0.0, $13577 = 0.0, $13578 = 0, $13579 = 0.0;
 var $1358 = 0.0, $13580 = 0.0, $13581 = 0, $13582 = 0, $13583 = 0.0, $13584 = 0.0, $13585 = 0, $13586 = 0, $13587 = 0.0, $13588 = 0.0, $13589 = 0, $1359 = 0.0, $13590 = 0, $13591 = 0.0, $13592 = 0.0, $13593 = 0, $13594 = 0, $13595 = 0.0, $13596 = 0.0, $13597 = 0;
 var $13598 = 0, $13599 = 0.0, $136 = 0, $1360 = 0.0, $13600 = 0.0, $13601 = 0, $13602 = 0, $13603 = 0.0, $13604 = 0.0, $13605 = 0, $13606 = 0, $13607 = 0.0, $13608 = 0.0, $13609 = 0, $1361 = 0.0, $13610 = 0, $13611 = 0, $13612 = 0, $13613 = 0, $13614 = 0.0;
 var $13615 = 0, $13616 = 0, $13617 = 0, $13618 = 0, $13619 = 0, $1362 = 0, $13620 = 0, $13621 = 0, $13622 = 0, $13623 = 0, $13624 = 0, $13625 = 0, $13626 = 0, $13627 = 0, $13628 = 0, $13629 = 0, $1363 = 0, $13630 = 0, $13631 = 0, $13632 = 0;
 var $13633 = 0, $13634 = 0, $13635 = 0, $13636 = 0, $13637 = 0, $13638 = 0, $13639 = 0, $1364 = 0.0, $13640 = 0, $13641 = 0, $13642 = 0, $13643 = 0, $13644 = 0.0, $13645 = 0, $13646 = 0, $13647 = 0, $13648 = 0, $13649 = 0, $1365 = 0.0, $13650 = 0;
 var $13651 = 0, $13652 = 0, $13653 = 0, $13654 = 0, $13655 = 0, $13656 = 0, $13657 = 0, $13658 = 0, $13659 = 0, $1366 = 0, $13660 = 0, $13661 = 0, $13662 = 0, $13663 = 0, $13664 = 0, $13665 = 0, $13666 = 0, $13667 = 0, $13668 = 0, $13669 = 0;
 var $1367 = 0, $13670 = 0, $13671 = 0, $13672 = 0, $13673 = 0, $13674 = 0.0, $13675 = 0, $13676 = 0, $13677 = 0, $13678 = 0, $13679 = 0, $1368 = 0.0, $13680 = 0, $13681 = 0, $13682 = 0, $13683 = 0, $13684 = 0, $13685 = 0, $13686 = 0, $13687 = 0;
 var $13688 = 0, $13689 = 0, $1369 = 0.0, $13690 = 0, $13691 = 0, $13692 = 0, $13693 = 0, $13694 = 0, $13695 = 0, $13696 = 0, $13697 = 0, $13698 = 0, $13699 = 0, $137 = 0, $1370 = 0, $13700 = 0, $13701 = 0, $13702 = 0, $13703 = 0, $13704 = 0.0;
 var $13705 = 0, $13706 = 0, $13707 = 0, $13708 = 0, $13709 = 0, $1371 = 0.0, $13710 = 0, $13711 = 0, $13712 = 0, $13713 = 0, $13714 = 0, $13715 = 0, $13716 = 0, $13717 = 0, $13718 = 0, $13719 = 0, $1372 = 0, $13720 = 0, $13721 = 0, $13722 = 0;
 var $13723 = 0, $13724 = 0, $13725 = 0, $13726 = 0, $13727 = 0, $13728 = 0, $13729 = 0, $1373 = 0.0, $13730 = 0, $13731 = 0, $13732 = 0, $13733 = 0, $13734 = 0.0, $13735 = 0, $13736 = 0, $13737 = 0, $13738 = 0, $13739 = 0, $1374 = 0.0, $13740 = 0;
 var $13741 = 0, $13742 = 0, $13743 = 0, $13744 = 0, $13745 = 0, $13746 = 0, $13747 = 0, $13748 = 0, $13749 = 0, $1375 = 0.0, $13750 = 0, $13751 = 0, $13752 = 0, $13753 = 0, $13754 = 0, $13755 = 0, $13756 = 0, $13757 = 0, $13758 = 0, $13759 = 0;
 var $1376 = 0, $13760 = 0, $13761 = 0, $13762 = 0, $13763 = 0, $13764 = 0.0, $13765 = 0, $13766 = 0, $13767 = 0, $13768 = 0, $13769 = 0, $1377 = 0.0, $13770 = 0, $13771 = 0, $13772 = 0, $13773 = 0, $13774 = 0, $13775 = 0, $13776 = 0, $13777 = 0;
 var $13778 = 0, $13779 = 0, $1378 = 0.0, $13780 = 0, $13781 = 0, $13782 = 0, $13783 = 0, $13784 = 0, $13785 = 0, $13786 = 0, $13787 = 0, $13788 = 0, $13789 = 0, $1379 = 0, $13790 = 0, $13791 = 0, $13792 = 0, $13793 = 0, $13794 = 0, $13795 = 0;
 var $13796 = 0, $13797 = 0, $13798 = 0, $13799 = 0, $138 = 0.0, $1380 = 0.0, $13800 = 0, $13801 = 0, $13802 = 0, $13803 = 0, $13804 = 0, $13805 = 0, $13806 = 0, $13807 = 0, $13808 = 0, $13809 = 0, $1381 = 0, $13810 = 0, $13811 = 0, $13812 = 0.0;
 var $13813 = 0, $13814 = 0.0, $13815 = 0.0, $13816 = 0.0, $13817 = 0, $13818 = 0.0, $13819 = 0.0, $1382 = 0, $13820 = 0, $13821 = 0.0, $13822 = 0.0, $13823 = 0.0, $13824 = 0.0, $13825 = 0.0, $13826 = 0.0, $13827 = 0.0, $13828 = 0, $13829 = 0.0, $1383 = 0.0, $13830 = 0;
 var $13831 = 0, $13832 = 0.0, $13833 = 0, $13834 = 0.0, $13835 = 0.0, $13836 = 0, $13837 = 0, $13838 = 0.0, $13839 = 0, $1384 = 0.0, $13840 = 0, $13841 = 0.0, $13842 = 0.0, $13843 = 0, $13844 = 0.0, $13845 = 0.0, $13846 = 0.0, $13847 = 0, $13848 = 0, $13849 = 0.0;
 var $1385 = 0, $13850 = 0, $13851 = 0.0, $13852 = 0.0, $13853 = 0, $13854 = 0.0, $13855 = 0, $13856 = 0.0, $13857 = 0.0, $13858 = 0.0, $13859 = 0, $1386 = 0.0, $13860 = 0, $13861 = 0.0, $13862 = 0, $13863 = 0.0, $13864 = 0.0, $13865 = 0, $13866 = 0.0, $13867 = 0.0;
 var $13868 = 0.0, $13869 = 0.0, $1387 = 0, $13870 = 0.0, $13871 = 0, $13872 = 0, $13873 = 0.0, $13874 = 0, $13875 = 0.0, $13876 = 0.0, $13877 = 0, $13878 = 0.0, $13879 = 0.0, $1388 = 0, $13880 = 0.0, $13881 = 0.0, $13882 = 0.0, $13883 = 0, $13884 = 0, $13885 = 0.0;
 var $13886 = 0, $13887 = 0.0, $13888 = 0.0, $13889 = 0.0, $1389 = 0.0, $13890 = 0, $13891 = 0.0, $13892 = 0.0, $13893 = 0.0, $13894 = 0.0, $13895 = 0.0, $13896 = 0, $13897 = 0.0, $13898 = 0.0, $13899 = 0, $139 = 0.0, $1390 = 0.0, $13900 = 0, $13901 = 0.0, $13902 = 0.0;
 var $13903 = 0, $13904 = 0, $13905 = 0.0, $13906 = 0.0, $13907 = 0, $13908 = 0, $13909 = 0.0, $1391 = 0, $13910 = 0.0, $13911 = 0, $13912 = 0, $13913 = 0.0, $13914 = 0.0, $13915 = 0, $13916 = 0, $13917 = 0.0, $13918 = 0.0, $13919 = 0, $1392 = 0, $13920 = 0;
 var $13921 = 0.0, $13922 = 0.0, $13923 = 0, $13924 = 0, $13925 = 0.0, $13926 = 0.0, $13927 = 0, $13928 = 0, $13929 = 0.0, $1393 = 0, $13930 = 0.0, $13931 = 0, $13932 = 0, $13933 = 0.0, $13934 = 0.0, $13935 = 0, $13936 = 0, $13937 = 0, $13938 = 0.0, $13939 = 0.0;
 var $1394 = 0, $13940 = 0, $13941 = 0.0, $13942 = 0, $13943 = 0, $13944 = 0, $13945 = 0, $13946 = 0.0, $13947 = 0.0, $13948 = 0, $13949 = 0, $1395 = 0, $13950 = 0, $13951 = 0.0, $13952 = 0.0, $13953 = 0.0, $13954 = 0.0, $13955 = 0.0, $13956 = 0.0, $13957 = 0.0;
 var $13958 = 0.0, $13959 = 0.0, $1396 = 0, $13960 = 0.0, $13961 = 0, $13962 = 0.0, $13963 = 0.0, $13964 = 0.0, $13965 = 0, $13966 = 0.0, $13967 = 0.0, $13968 = 0, $13969 = 0, $1397 = 0, $13970 = 0, $13971 = 0, $13972 = 0, $13973 = 0, $13974 = 0, $13975 = 0;
 var $13976 = 0, $13977 = 0, $13978 = 0, $13979 = 0, $1398 = 0, $13980 = 0, $13981 = 0, $13982 = 0, $13983 = 0, $13984 = 0, $13985 = 0, $13986 = 0, $13987 = 0, $13988 = 0, $13989 = 0.0, $1399 = 0, $13990 = 0, $13991 = 0, $13992 = 0.0, $13993 = 0.0;
 var $13994 = 0.0, $13995 = 0, $13996 = 0, $13997 = 0, $13998 = 0.0, $13999 = 0, $14 = 0.0, $140 = 0.0, $1400 = 0, $14000 = 0, $14001 = 0.0, $14002 = 0.0, $14003 = 0.0, $14004 = 0, $14005 = 0, $14006 = 0, $14007 = 0, $14008 = 0, $14009 = 0, $1401 = 0;
 var $14010 = 0, $14011 = 0, $14012 = 0, $14013 = 0, $14014 = 0, $14015 = 0.0, $14016 = 0, $14017 = 0, $14018 = 0, $14019 = 0.0, $1402 = 0, $14020 = 0, $14021 = 0, $14022 = 0, $14023 = 0.0, $14024 = 0, $14025 = 0, $14026 = 0.0, $14027 = 0.0, $14028 = 0;
 var $14029 = 0.0, $1403 = 0, $14030 = 0.0, $14031 = 0, $14032 = 0.0, $14033 = 0.0, $14034 = 0.0, $14035 = 0.0, $14036 = 0.0, $14037 = 0.0, $14038 = 0, $14039 = 0.0, $1404 = 0, $14040 = 0, $14041 = 0.0, $14042 = 0.0, $14043 = 0.0, $14044 = 0.0, $14045 = 0.0, $14046 = 0.0;
 var $14047 = 0.0, $14048 = 0.0, $14049 = 0, $1405 = 0, $14050 = 0.0, $14051 = 0.0, $14052 = 0, $14053 = 0.0, $14054 = 0.0, $14055 = 0, $14056 = 0.0, $14057 = 0.0, $14058 = 0.0, $14059 = 0, $1406 = 0, $14060 = 0.0, $14061 = 0.0, $14062 = 0, $14063 = 0.0, $14064 = 0.0;
 var $14065 = 0.0, $14066 = 0, $14067 = 0, $14068 = 0.0, $14069 = 0.0, $1407 = 0, $14070 = 0, $14071 = 0.0, $14072 = 0.0, $14073 = 0.0, $14074 = 0.0, $14075 = 0, $14076 = 0, $14077 = 0.0, $14078 = 0.0, $14079 = 0, $1408 = 0, $14080 = 0.0, $14081 = 0.0, $14082 = 0.0;
 var $14083 = 0.0, $14084 = 0.0, $14085 = 0, $14086 = 0, $14087 = 0.0, $14088 = 0, $14089 = 0.0, $1409 = 0, $14090 = 0.0, $14091 = 0.0, $14092 = 0.0, $14093 = 0, $14094 = 0.0, $14095 = 0.0, $14096 = 0.0, $14097 = 0.0, $14098 = 0.0, $14099 = 0, $141 = 0.0, $1410 = 0;
 var $14100 = 0.0, $14101 = 0.0, $14102 = 0, $14103 = 0.0, $14104 = 0, $14105 = 0.0, $14106 = 0.0, $14107 = 0.0, $14108 = 0, $14109 = 0.0, $1411 = 0, $14110 = 0.0, $14111 = 0.0, $14112 = 0.0, $14113 = 0.0, $14114 = 0, $14115 = 0.0, $14116 = 0.0, $14117 = 0, $14118 = 0;
 var $14119 = 0.0, $1412 = 0, $14120 = 0.0, $14121 = 0, $14122 = 0, $14123 = 0.0, $14124 = 0.0, $14125 = 0, $14126 = 0, $14127 = 0.0, $14128 = 0.0, $14129 = 0, $1413 = 0.0, $14130 = 0, $14131 = 0.0, $14132 = 0.0, $14133 = 0, $14134 = 0, $14135 = 0.0, $14136 = 0.0;
 var $14137 = 0, $14138 = 0, $14139 = 0.0, $1414 = 0, $14140 = 0.0, $14141 = 0, $14142 = 0, $14143 = 0.0, $14144 = 0.0, $14145 = 0, $14146 = 0, $14147 = 0, $14148 = 0, $14149 = 0, $1415 = 0, $14150 = 0.0, $14151 = 0, $14152 = 0, $14153 = 0, $14154 = 0;
 var $14155 = 0, $14156 = 0, $14157 = 0, $14158 = 0, $14159 = 0, $1416 = 0.0, $14160 = 0, $14161 = 0, $14162 = 0, $14163 = 0, $14164 = 0, $14165 = 0, $14166 = 0, $14167 = 0, $14168 = 0, $14169 = 0, $1417 = 0.0, $14170 = 0, $14171 = 0, $14172 = 0;
 var $14173 = 0, $14174 = 0, $14175 = 0, $14176 = 0, $14177 = 0, $14178 = 0, $14179 = 0, $1418 = 0.0, $14180 = 0.0, $14181 = 0, $14182 = 0, $14183 = 0, $14184 = 0, $14185 = 0, $14186 = 0, $14187 = 0, $14188 = 0, $14189 = 0, $1419 = 0, $14190 = 0;
 var $14191 = 0, $14192 = 0, $14193 = 0, $14194 = 0, $14195 = 0, $14196 = 0, $14197 = 0, $14198 = 0, $14199 = 0, $142 = 0, $1420 = 0, $14200 = 0, $14201 = 0, $14202 = 0, $14203 = 0, $14204 = 0, $14205 = 0, $14206 = 0, $14207 = 0, $14208 = 0;
 var $14209 = 0, $1421 = 0, $14210 = 0.0, $14211 = 0, $14212 = 0, $14213 = 0, $14214 = 0, $14215 = 0, $14216 = 0, $14217 = 0, $14218 = 0, $14219 = 0, $1422 = 0.0, $14220 = 0, $14221 = 0, $14222 = 0, $14223 = 0, $14224 = 0, $14225 = 0, $14226 = 0;
 var $14227 = 0, $14228 = 0, $14229 = 0, $1423 = 0, $14230 = 0, $14231 = 0, $14232 = 0, $14233 = 0, $14234 = 0, $14235 = 0, $14236 = 0, $14237 = 0, $14238 = 0, $14239 = 0, $1424 = 0, $14240 = 0.0, $14241 = 0, $14242 = 0, $14243 = 0, $14244 = 0;
 var $14245 = 0, $14246 = 0, $14247 = 0, $14248 = 0, $14249 = 0, $1425 = 0.0, $14250 = 0, $14251 = 0, $14252 = 0, $14253 = 0, $14254 = 0, $14255 = 0, $14256 = 0, $14257 = 0, $14258 = 0, $14259 = 0, $1426 = 0.0, $14260 = 0, $14261 = 0, $14262 = 0;
 var $14263 = 0, $14264 = 0, $14265 = 0, $14266 = 0, $14267 = 0, $14268 = 0, $14269 = 0, $1427 = 0.0, $14270 = 0.0, $14271 = 0, $14272 = 0, $14273 = 0, $14274 = 0, $14275 = 0, $14276 = 0, $14277 = 0, $14278 = 0, $14279 = 0, $1428 = 0, $14280 = 0;
 var $14281 = 0, $14282 = 0, $14283 = 0, $14284 = 0, $14285 = 0, $14286 = 0, $14287 = 0, $14288 = 0, $14289 = 0, $1429 = 0, $14290 = 0, $14291 = 0, $14292 = 0, $14293 = 0, $14294 = 0, $14295 = 0, $14296 = 0, $14297 = 0, $14298 = 0, $14299 = 0;
 var $143 = 0.0, $1430 = 0, $14300 = 0.0, $14301 = 0, $14302 = 0, $14303 = 0, $14304 = 0, $14305 = 0, $14306 = 0, $14307 = 0, $14308 = 0, $14309 = 0, $1431 = 0, $14310 = 0, $14311 = 0, $14312 = 0, $14313 = 0, $14314 = 0, $14315 = 0, $14316 = 0;
 var $14317 = 0, $14318 = 0, $14319 = 0, $1432 = 0, $14320 = 0, $14321 = 0, $14322 = 0, $14323 = 0, $14324 = 0, $14325 = 0, $14326 = 0, $14327 = 0, $14328 = 0, $14329 = 0, $1433 = 0, $14330 = 0, $14331 = 0, $14332 = 0, $14333 = 0, $14334 = 0;
 var $14335 = 0, $14336 = 0, $14337 = 0, $14338 = 0, $14339 = 0, $1434 = 0, $14340 = 0, $14341 = 0, $14342 = 0, $14343 = 0, $14344 = 0, $14345 = 0, $14346 = 0, $14347 = 0, $14348 = 0, $14349 = 0, $1435 = 0, $14350 = 0, $14351 = 0.0, $14352 = 0;
 var $14353 = 0, $14354 = 0, $14355 = 0.0, $14356 = 0, $14357 = 0.0, $14358 = 0, $14359 = 0, $1436 = 0, $14360 = 0, $14361 = 0, $14362 = 0.0, $14363 = 0, $14364 = 0, $14365 = 0, $14366 = 0.0, $14367 = 0.0, $14368 = 0.0, $14369 = 0.0, $1437 = 0, $14370 = 0.0;
 var $14371 = 0, $14372 = 0.0, $14373 = 0, $14374 = 0.0, $14375 = 0.0, $14376 = 0, $14377 = 0.0, $14378 = 0.0, $14379 = 0, $1438 = 0, $14380 = 0.0, $14381 = 0.0, $14382 = 0.0, $14383 = 0.0, $14384 = 0.0, $14385 = 0, $14386 = 0, $14387 = 0.0, $14388 = 0.0, $14389 = 0.0;
 var $1439 = 0.0, $14390 = 0.0, $14391 = 0.0, $14392 = 0, $14393 = 0.0, $14394 = 0.0, $14395 = 0.0, $14396 = 0.0, $14397 = 0.0, $14398 = 0, $14399 = 0.0, $144 = 0, $1440 = 0, $14400 = 0, $14401 = 0.0, $14402 = 0.0, $14403 = 0, $14404 = 0.0, $14405 = 0.0, $14406 = 0;
 var $14407 = 0.0, $14408 = 0.0, $14409 = 0.0, $1441 = 0, $14410 = 0.0, $14411 = 0.0, $14412 = 0, $14413 = 0.0, $14414 = 0.0, $14415 = 0.0, $14416 = 0.0, $14417 = 0.0, $14418 = 0.0, $14419 = 0.0, $1442 = 0, $14420 = 0.0, $14421 = 0, $14422 = 0.0, $14423 = 0.0, $14424 = 0.0;
 var $14425 = 0.0, $14426 = 0.0, $14427 = 0, $14428 = 0.0, $14429 = 0, $1443 = 0.0, $14430 = 0.0, $14431 = 0.0, $14432 = 0, $14433 = 0.0, $14434 = 0.0, $14435 = 0, $14436 = 0.0, $14437 = 0.0, $14438 = 0.0, $14439 = 0.0, $1444 = 0, $14440 = 0, $14441 = 0.0, $14442 = 0.0;
 var $14443 = 0.0, $14444 = 0.0, $14445 = 0.0, $14446 = 0.0, $14447 = 0.0, $14448 = 0.0, $14449 = 0.0, $1445 = 0, $14450 = 0.0, $14451 = 0, $14452 = 0.0, $14453 = 0.0, $14454 = 0.0, $14455 = 0, $14456 = 0.0, $14457 = 0.0, $14458 = 0, $14459 = 0, $1446 = 0, $14460 = 0;
 var $14461 = 0, $14462 = 0, $14463 = 0, $14464 = 0, $14465 = 0, $14466 = 0, $14467 = 0, $14468 = 0, $14469 = 0, $1447 = 0.0, $14470 = 0, $14471 = 0, $14472 = 0, $14473 = 0, $14474 = 0, $14475 = 0, $14476 = 0, $14477 = 0, $14478 = 0, $14479 = 0.0;
 var $1448 = 0, $14480 = 0, $14481 = 0, $14482 = 0.0, $14483 = 0.0, $14484 = 0.0, $14485 = 0, $14486 = 0, $14487 = 0, $14488 = 0.0, $14489 = 0, $1449 = 0, $14490 = 0, $14491 = 0.0, $14492 = 0.0, $14493 = 0.0, $14494 = 0, $14495 = 0, $14496 = 0, $14497 = 0;
 var $14498 = 0, $14499 = 0, $145 = 0.0, $1450 = 0.0, $14500 = 0, $14501 = 0, $14502 = 0, $14503 = 0, $14504 = 0, $14505 = 0.0, $14506 = 0, $14507 = 0, $14508 = 0, $14509 = 0.0, $1451 = 0.0, $14510 = 0, $14511 = 0, $14512 = 0, $14513 = 0.0, $14514 = 0;
 var $14515 = 0, $14516 = 0.0, $14517 = 0.0, $14518 = 0, $14519 = 0.0, $1452 = 0, $14520 = 0.0, $14521 = 0, $14522 = 0.0, $14523 = 0, $14524 = 0.0, $14525 = 0.0, $14526 = 0, $14527 = 0.0, $14528 = 0, $14529 = 0.0, $1453 = 0.0, $14530 = 0.0, $14531 = 0, $14532 = 0.0;
 var $14533 = 0.0, $14534 = 0.0, $14535 = 0.0, $14536 = 0, $14537 = 0.0, $14538 = 0.0, $14539 = 0.0, $1454 = 0.0, $14540 = 0.0, $14541 = 0.0, $14542 = 0, $14543 = 0.0, $14544 = 0.0, $14545 = 0.0, $14546 = 0, $14547 = 0.0, $14548 = 0.0, $14549 = 0, $1455 = 0.0, $14550 = 0.0;
 var $14551 = 0.0, $14552 = 0.0, $14553 = 0.0, $14554 = 0, $14555 = 0.0, $14556 = 0.0, $14557 = 0, $14558 = 0, $14559 = 0.0, $1456 = 0, $14560 = 0.0, $14561 = 0.0, $14562 = 0, $14563 = 0.0, $14564 = 0, $14565 = 0.0, $14566 = 0.0, $14567 = 0.0, $14568 = 0, $14569 = 0.0;
 var $1457 = 0.0, $14570 = 0, $14571 = 0.0, $14572 = 0.0, $14573 = 0.0, $14574 = 0, $14575 = 0.0, $14576 = 0.0, $14577 = 0, $14578 = 0.0, $14579 = 0.0, $1458 = 0, $14580 = 0.0, $14581 = 0.0, $14582 = 0.0, $14583 = 0, $14584 = 0.0, $14585 = 0, $14586 = 0.0, $14587 = 0.0;
 var $14588 = 0.0, $14589 = 0, $1459 = 0.0, $14590 = 0.0, $14591 = 0.0, $14592 = 0, $14593 = 0.0, $14594 = 0.0, $14595 = 0.0, $14596 = 0.0, $14597 = 0.0, $14598 = 0, $14599 = 0.0, $146 = 0.0, $1460 = 0.0, $14600 = 0, $14601 = 0.0, $14602 = 0.0, $14603 = 0.0, $14604 = 0;
 var $14605 = 0.0, $14606 = 0.0, $14607 = 0.0, $14608 = 0, $14609 = 0.0, $1461 = 0.0, $14610 = 0.0, $14611 = 0.0, $14612 = 0.0, $14613 = 0, $14614 = 0.0, $14615 = 0.0, $14616 = 0, $14617 = 0, $14618 = 0.0, $14619 = 0, $1462 = 0.0, $14620 = 0.0, $14621 = 0.0, $14622 = 0;
 var $14623 = 0.0, $14624 = 0.0, $14625 = 0.0, $14626 = 0.0, $14627 = 0.0, $14628 = 0.0, $14629 = 0.0, $1463 = 0.0, $14630 = 0, $14631 = 0.0, $14632 = 0.0, $14633 = 0.0, $14634 = 0.0, $14635 = 0.0, $14636 = 0.0, $14637 = 0, $14638 = 0.0, $14639 = 0.0, $1464 = 0.0, $14640 = 0;
 var $14641 = 0, $14642 = 0.0, $14643 = 0.0, $14644 = 0.0, $14645 = 0.0, $14646 = 0, $14647 = 0.0, $14648 = 0.0, $14649 = 0.0, $1465 = 0, $14650 = 0.0, $14651 = 0, $14652 = 0.0, $14653 = 0.0, $14654 = 0, $14655 = 0, $14656 = 0.0, $14657 = 0.0, $14658 = 0.0, $14659 = 0.0;
 var $1466 = 0, $14660 = 0.0, $14661 = 0.0, $14662 = 0, $14663 = 0.0, $14664 = 0.0, $14665 = 0.0, $14666 = 0.0, $14667 = 0.0, $14668 = 0, $14669 = 0.0, $1467 = 0, $14670 = 0.0, $14671 = 0, $14672 = 0, $14673 = 0.0, $14674 = 0, $14675 = 0.0, $14676 = 0.0, $14677 = 0;
 var $14678 = 0.0, $14679 = 0.0, $1468 = 0.0, $14680 = 0, $14681 = 0.0, $14682 = 0.0, $14683 = 0.0, $14684 = 0.0, $14685 = 0.0, $14686 = 0, $14687 = 0.0, $14688 = 0.0, $14689 = 0.0, $1469 = 0.0, $14690 = 0.0, $14691 = 0.0, $14692 = 0.0, $14693 = 0.0, $14694 = 0, $14695 = 0.0;
 var $14696 = 0.0, $14697 = 0, $14698 = 0.0, $14699 = 0.0, $147 = 0.0, $1470 = 0, $14700 = 0.0, $14701 = 0.0, $14702 = 0.0, $14703 = 0, $14704 = 0.0, $14705 = 0.0, $14706 = 0, $14707 = 0.0, $14708 = 0.0, $14709 = 0.0, $1471 = 0.0, $14710 = 0.0, $14711 = 0.0, $14712 = 0;
 var $14713 = 0.0, $14714 = 0, $14715 = 0.0, $14716 = 0.0, $14717 = 0.0, $14718 = 0, $14719 = 0.0, $1472 = 0, $14720 = 0.0, $14721 = 0, $14722 = 0, $14723 = 0.0, $14724 = 0.0, $14725 = 0, $14726 = 0, $14727 = 0.0, $14728 = 0.0, $14729 = 0, $1473 = 0.0, $14730 = 0;
 var $14731 = 0.0, $14732 = 0.0, $14733 = 0, $14734 = 0, $14735 = 0.0, $14736 = 0.0, $14737 = 0, $14738 = 0, $14739 = 0.0, $1474 = 0.0, $14740 = 0.0, $14741 = 0, $14742 = 0, $14743 = 0.0, $14744 = 0.0, $14745 = 0, $14746 = 0, $14747 = 0.0, $14748 = 0.0, $14749 = 0;
 var $1475 = 0, $14750 = 0, $14751 = 0.0, $14752 = 0.0, $14753 = 0, $14754 = 0, $14755 = 0.0, $14756 = 0.0, $14757 = 0, $14758 = 0, $14759 = 0.0, $1476 = 0.0, $14760 = 0.0, $14761 = 0, $14762 = 0, $14763 = 0.0, $14764 = 0.0, $14765 = 0, $14766 = 0, $14767 = 0;
 var $14768 = 0, $14769 = 0, $1477 = 0.0, $14770 = 0.0, $14771 = 0, $14772 = 0, $14773 = 0, $14774 = 0, $14775 = 0, $14776 = 0, $14777 = 0, $14778 = 0, $14779 = 0, $1478 = 0.0, $14780 = 0, $14781 = 0, $14782 = 0, $14783 = 0, $14784 = 0, $14785 = 0;
 var $14786 = 0, $14787 = 0, $14788 = 0, $14789 = 0, $1479 = 0.0, $14790 = 0, $14791 = 0, $14792 = 0, $14793 = 0, $14794 = 0, $14795 = 0, $14796 = 0, $14797 = 0, $14798 = 0, $14799 = 0, $148 = 0, $1480 = 0.0, $14800 = 0.0, $14801 = 0, $14802 = 0;
 var $14803 = 0, $14804 = 0, $14805 = 0, $14806 = 0, $14807 = 0, $14808 = 0, $14809 = 0, $1481 = 0.0, $14810 = 0, $14811 = 0, $14812 = 0, $14813 = 0, $14814 = 0, $14815 = 0, $14816 = 0, $14817 = 0, $14818 = 0, $14819 = 0, $1482 = 0, $14820 = 0;
 var $14821 = 0, $14822 = 0, $14823 = 0, $14824 = 0, $14825 = 0, $14826 = 0, $14827 = 0, $14828 = 0, $14829 = 0, $1483 = 0, $14830 = 0.0, $14831 = 0, $14832 = 0, $14833 = 0, $14834 = 0, $14835 = 0, $14836 = 0, $14837 = 0, $14838 = 0, $14839 = 0;
 var $1484 = 0.0, $14840 = 0, $14841 = 0, $14842 = 0, $14843 = 0, $14844 = 0, $14845 = 0, $14846 = 0, $14847 = 0, $14848 = 0, $14849 = 0, $1485 = 0.0, $14850 = 0, $14851 = 0, $14852 = 0, $14853 = 0, $14854 = 0, $14855 = 0, $14856 = 0, $14857 = 0;
 var $14858 = 0, $14859 = 0, $1486 = 0, $14860 = 0.0, $14861 = 0, $14862 = 0, $14863 = 0, $14864 = 0, $14865 = 0, $14866 = 0, $14867 = 0, $14868 = 0, $14869 = 0, $1487 = 0.0, $14870 = 0, $14871 = 0, $14872 = 0, $14873 = 0, $14874 = 0, $14875 = 0;
 var $14876 = 0, $14877 = 0, $14878 = 0, $14879 = 0, $1488 = 0.0, $14880 = 0, $14881 = 0, $14882 = 0, $14883 = 0, $14884 = 0, $14885 = 0, $14886 = 0, $14887 = 0, $14888 = 0, $14889 = 0, $1489 = 0, $14890 = 0.0, $14891 = 0, $14892 = 0, $14893 = 0;
 var $14894 = 0, $14895 = 0, $14896 = 0, $14897 = 0, $14898 = 0, $14899 = 0, $149 = 0.0, $1490 = 0.0, $14900 = 0, $14901 = 0, $14902 = 0, $14903 = 0, $14904 = 0, $14905 = 0, $14906 = 0, $14907 = 0, $14908 = 0, $14909 = 0, $1491 = 0.0, $14910 = 0;
 var $14911 = 0, $14912 = 0, $14913 = 0, $14914 = 0, $14915 = 0, $14916 = 0, $14917 = 0, $14918 = 0, $14919 = 0, $1492 = 0.0, $14920 = 0.0, $14921 = 0, $14922 = 0, $14923 = 0, $14924 = 0, $14925 = 0, $14926 = 0, $14927 = 0, $14928 = 0, $14929 = 0;
 var $1493 = 0.0, $14930 = 0, $14931 = 0, $14932 = 0, $14933 = 0, $14934 = 0, $14935 = 0, $14936 = 0, $14937 = 0, $14938 = 0, $14939 = 0, $1494 = 0.0, $14940 = 0, $14941 = 0, $14942 = 0, $14943 = 0, $14944 = 0, $14945 = 0, $14946 = 0, $14947 = 0;
 var $14948 = 0, $14949 = 0, $1495 = 0.0, $14950 = 0, $14951 = 0, $14952 = 0, $14953 = 0, $14954 = 0, $14955 = 0, $14956 = 0, $14957 = 0, $14958 = 0, $14959 = 0, $1496 = 0, $14960 = 0, $14961 = 0, $14962 = 0, $14963 = 0, $14964 = 0, $14965 = 0;
 var $14966 = 0, $14967 = 0.0, $14968 = 0, $14969 = 0, $1497 = 0, $14970 = 0, $14971 = 0.0, $14972 = 0, $14973 = 0.0, $14974 = 0, $14975 = 0, $14976 = 0, $14977 = 0.0, $14978 = 0.0, $14979 = 0.0, $1498 = 0.0, $14980 = 0, $14981 = 0.0, $14982 = 0.0, $14983 = 0;
 var $14984 = 0.0, $14985 = 0.0, $14986 = 0, $14987 = 0.0, $14988 = 0.0, $14989 = 0, $1499 = 0, $14990 = 0.0, $14991 = 0.0, $14992 = 0, $14993 = 0.0, $14994 = 0.0, $14995 = 0.0, $14996 = 0.0, $14997 = 0.0, $14998 = 0, $14999 = 0, $15 = 0, $150 = 0.0, $1500 = 0.0;
 var $15000 = 0.0, $15001 = 0.0, $15002 = 0.0, $15003 = 0.0, $15004 = 0.0, $15005 = 0, $15006 = 0.0, $15007 = 0.0, $15008 = 0.0, $15009 = 0, $1501 = 0.0, $15010 = 0.0, $15011 = 0.0, $15012 = 0, $15013 = 0.0, $15014 = 0.0, $15015 = 0, $15016 = 0.0, $15017 = 0.0, $15018 = 0;
 var $15019 = 0.0, $1502 = 0, $15020 = 0.0, $15021 = 0, $15022 = 0.0, $15023 = 0.0, $15024 = 0.0, $15025 = 0.0, $15026 = 0.0, $15027 = 0, $15028 = 0.0, $15029 = 0.0, $1503 = 0.0, $15030 = 0.0, $15031 = 0.0, $15032 = 0.0, $15033 = 0.0, $15034 = 0.0, $15035 = 0.0, $15036 = 0;
 var $15037 = 0.0, $15038 = 0.0, $15039 = 0.0, $1504 = 0.0, $15040 = 0, $15041 = 0.0, $15042 = 0.0, $15043 = 0, $15044 = 0.0, $15045 = 0.0, $15046 = 0, $15047 = 0.0, $15048 = 0.0, $15049 = 0, $1505 = 0.0, $15050 = 0.0, $15051 = 0.0, $15052 = 0, $15053 = 0.0, $15054 = 0.0;
 var $15055 = 0.0, $15056 = 0.0, $15057 = 0, $15058 = 0.0, $15059 = 0.0, $1506 = 0.0, $15060 = 0.0, $15061 = 0.0, $15062 = 0.0, $15063 = 0.0, $15064 = 0.0, $15065 = 0.0, $15066 = 0.0, $15067 = 0.0, $15068 = 0, $15069 = 0.0, $1507 = 0.0, $15070 = 0.0, $15071 = 0.0, $15072 = 0;
 var $15073 = 0.0, $15074 = 0.0, $15075 = 0, $15076 = 0, $15077 = 0, $15078 = 0, $15079 = 0, $1508 = 0.0, $15080 = 0, $15081 = 0, $15082 = 0, $15083 = 0, $15084 = 0, $15085 = 0, $15086 = 0, $15087 = 0, $15088 = 0, $15089 = 0, $1509 = 0, $15090 = 0;
 var $15091 = 0, $15092 = 0, $15093 = 0, $15094 = 0, $15095 = 0, $15096 = 0.0, $15097 = 0, $15098 = 0, $15099 = 0.0, $151 = 0.0, $1510 = 0.0, $15100 = 0.0, $15101 = 0.0, $15102 = 0, $15103 = 0, $15104 = 0, $15105 = 0.0, $15106 = 0, $15107 = 0, $15108 = 0.0;
 var $15109 = 0.0, $1511 = 0.0, $15110 = 0.0, $15111 = 0, $15112 = 0, $15113 = 0, $15114 = 0, $15115 = 0, $15116 = 0, $15117 = 0, $15118 = 0, $15119 = 0, $1512 = 0, $15120 = 0, $15121 = 0, $15122 = 0.0, $15123 = 0, $15124 = 0, $15125 = 0, $15126 = 0.0;
 var $15127 = 0, $15128 = 0, $15129 = 0, $1513 = 0.0, $15130 = 0.0, $15131 = 0, $15132 = 0, $15133 = 0.0, $15134 = 0.0, $15135 = 0, $15136 = 0.0, $15137 = 0.0, $15138 = 0, $15139 = 0.0, $1514 = 0.0, $15140 = 0, $15141 = 0.0, $15142 = 0.0, $15143 = 0, $15144 = 0.0;
 var $15145 = 0, $15146 = 0.0, $15147 = 0.0, $15148 = 0, $15149 = 0.0, $1515 = 0, $15150 = 0.0, $15151 = 0.0, $15152 = 0.0, $15153 = 0, $15154 = 0.0, $15155 = 0.0, $15156 = 0.0, $15157 = 0.0, $15158 = 0.0, $15159 = 0, $1516 = 0.0, $15160 = 0.0, $15161 = 0.0, $15162 = 0.0;
 var $15163 = 0, $15164 = 0.0, $15165 = 0.0, $15166 = 0, $15167 = 0.0, $15168 = 0.0, $15169 = 0.0, $1517 = 0.0, $15170 = 0.0, $15171 = 0, $15172 = 0.0, $15173 = 0.0, $15174 = 0, $15175 = 0, $15176 = 0.0, $15177 = 0.0, $15178 = 0.0, $15179 = 0, $1518 = 0.0, $15180 = 0.0;
 var $15181 = 0, $15182 = 0.0, $15183 = 0.0, $15184 = 0.0, $15185 = 0, $15186 = 0.0, $15187 = 0, $15188 = 0.0, $15189 = 0.0, $1519 = 0.0, $15190 = 0.0, $15191 = 0, $15192 = 0, $15193 = 0.0, $15194 = 0.0, $15195 = 0.0, $15196 = 0.0, $15197 = 0.0, $15198 = 0.0, $15199 = 0.0;
 var $152 = 0, $1520 = 0.0, $15200 = 0, $15201 = 0.0, $15202 = 0, $15203 = 0.0, $15204 = 0.0, $15205 = 0.0, $15206 = 0, $15207 = 0, $15208 = 0.0, $15209 = 0.0, $1521 = 0.0, $15210 = 0.0, $15211 = 0.0, $15212 = 0.0, $15213 = 0.0, $15214 = 0.0, $15215 = 0, $15216 = 0.0;
 var $15217 = 0, $15218 = 0.0, $15219 = 0.0, $1522 = 0.0, $15220 = 0.0, $15221 = 0, $15222 = 0, $15223 = 0.0, $15224 = 0.0, $15225 = 0.0, $15226 = 0.0, $15227 = 0.0, $15228 = 0.0, $15229 = 0.0, $1523 = 0.0, $15230 = 0, $15231 = 0.0, $15232 = 0.0, $15233 = 0, $15234 = 0;
 var $15235 = 0.0, $15236 = 0, $15237 = 0.0, $15238 = 0.0, $15239 = 0, $1524 = 0.0, $15240 = 0.0, $15241 = 0.0, $15242 = 0.0, $15243 = 0.0, $15244 = 0.0, $15245 = 0.0, $15246 = 0.0, $15247 = 0, $15248 = 0.0, $15249 = 0.0, $1525 = 0, $15250 = 0.0, $15251 = 0.0, $15252 = 0.0;
 var $15253 = 0.0, $15254 = 0, $15255 = 0.0, $15256 = 0.0, $15257 = 0, $15258 = 0, $15259 = 0.0, $1526 = 0, $15260 = 0.0, $15261 = 0.0, $15262 = 0, $15263 = 0.0, $15264 = 0.0, $15265 = 0, $15266 = 0.0, $15267 = 0.0, $15268 = 0.0, $15269 = 0.0, $1527 = 0.0, $15270 = 0.0;
 var $15271 = 0, $15272 = 0, $15273 = 0.0, $15274 = 0.0, $15275 = 0.0, $15276 = 0.0, $15277 = 0.0, $15278 = 0.0, $15279 = 0, $1528 = 0, $15280 = 0.0, $15281 = 0.0, $15282 = 0, $15283 = 0.0, $15284 = 0.0, $15285 = 0.0, $15286 = 0.0, $15287 = 0.0, $15288 = 0, $15289 = 0;
 var $1529 = 0.0, $15290 = 0.0, $15291 = 0, $15292 = 0.0, $15293 = 0.0, $15294 = 0, $15295 = 0.0, $15296 = 0.0, $15297 = 0.0, $15298 = 0.0, $15299 = 0.0, $153 = 0.0, $1530 = 0.0, $15300 = 0, $15301 = 0.0, $15302 = 0.0, $15303 = 0, $15304 = 0.0, $15305 = 0.0, $15306 = 0.0;
 var $15307 = 0.0, $15308 = 0.0, $15309 = 0.0, $1531 = 0, $15310 = 0.0, $15311 = 0, $15312 = 0.0, $15313 = 0.0, $15314 = 0, $15315 = 0.0, $15316 = 0.0, $15317 = 0, $15318 = 0.0, $15319 = 0.0, $1532 = 0.0, $15320 = 0.0, $15321 = 0.0, $15322 = 0.0, $15323 = 0, $15324 = 0.0;
 var $15325 = 0.0, $15326 = 0.0, $15327 = 0.0, $15328 = 0.0, $15329 = 0, $1533 = 0.0, $15330 = 0.0, $15331 = 0, $15332 = 0.0, $15333 = 0.0, $15334 = 0.0, $15335 = 0, $15336 = 0.0, $15337 = 0.0, $15338 = 0, $15339 = 0, $1534 = 0.0, $15340 = 0.0, $15341 = 0.0, $15342 = 0;
 var $15343 = 0, $15344 = 0.0, $15345 = 0.0, $15346 = 0, $15347 = 0, $15348 = 0.0, $15349 = 0.0, $1535 = 0.0, $15350 = 0, $15351 = 0, $15352 = 0.0, $15353 = 0.0, $15354 = 0, $15355 = 0, $15356 = 0.0, $15357 = 0.0, $15358 = 0, $15359 = 0, $1536 = 0.0, $15360 = 0.0;
 var $15361 = 0.0, $15362 = 0, $15363 = 0, $15364 = 0.0, $15365 = 0.0, $15366 = 0, $15367 = 0, $15368 = 0.0, $15369 = 0.0, $1537 = 0, $15370 = 0, $15371 = 0, $15372 = 0.0, $15373 = 0.0, $15374 = 0, $15375 = 0, $15376 = 0.0, $15377 = 0.0, $15378 = 0, $15379 = 0;
 var $1538 = 0.0, $15380 = 0.0, $15381 = 0.0, $15382 = 0, $15383 = 0, $15384 = 0, $15385 = 0, $15386 = 0, $15387 = 0.0, $15388 = 0, $15389 = 0, $1539 = 0.0, $15390 = 0, $15391 = 0, $15392 = 0, $15393 = 0, $15394 = 0, $15395 = 0, $15396 = 0, $15397 = 0;
 var $15398 = 0, $15399 = 0, $154 = 0.0, $1540 = 0, $15400 = 0, $15401 = 0, $15402 = 0, $15403 = 0, $15404 = 0, $15405 = 0, $15406 = 0, $15407 = 0, $15408 = 0, $15409 = 0, $1541 = 0.0, $15410 = 0, $15411 = 0, $15412 = 0, $15413 = 0, $15414 = 0;
 var $15415 = 0, $15416 = 0, $15417 = 0.0, $15418 = 0, $15419 = 0, $1542 = 0.0, $15420 = 0, $15421 = 0, $15422 = 0, $15423 = 0, $15424 = 0, $15425 = 0, $15426 = 0, $15427 = 0, $15428 = 0, $15429 = 0, $1543 = 0, $15430 = 0, $15431 = 0, $15432 = 0;
 var $15433 = 0, $15434 = 0, $15435 = 0, $15436 = 0, $15437 = 0, $15438 = 0, $15439 = 0, $1544 = 0.0, $15440 = 0, $15441 = 0, $15442 = 0, $15443 = 0, $15444 = 0, $15445 = 0, $15446 = 0, $15447 = 0.0, $15448 = 0, $15449 = 0, $1545 = 0.0, $15450 = 0;
 var $15451 = 0, $15452 = 0, $15453 = 0, $15454 = 0, $15455 = 0, $15456 = 0, $15457 = 0, $15458 = 0, $15459 = 0, $1546 = 0.0, $15460 = 0, $15461 = 0, $15462 = 0, $15463 = 0, $15464 = 0, $15465 = 0, $15466 = 0, $15467 = 0, $15468 = 0, $15469 = 0;
 var $1547 = 0.0, $15470 = 0, $15471 = 0, $15472 = 0, $15473 = 0, $15474 = 0, $15475 = 0, $15476 = 0, $15477 = 0.0, $15478 = 0, $15479 = 0, $1548 = 0.0, $15480 = 0, $15481 = 0, $15482 = 0, $15483 = 0, $15484 = 0, $15485 = 0, $15486 = 0, $15487 = 0;
 var $15488 = 0, $15489 = 0, $1549 = 0.0, $15490 = 0, $15491 = 0, $15492 = 0, $15493 = 0, $15494 = 0, $15495 = 0, $15496 = 0, $15497 = 0, $15498 = 0, $15499 = 0, $155 = 0.0, $1550 = 0.0, $15500 = 0, $15501 = 0, $15502 = 0, $15503 = 0, $15504 = 0;
 var $15505 = 0, $15506 = 0, $15507 = 0.0, $15508 = 0, $15509 = 0, $1551 = 0.0, $15510 = 0, $15511 = 0, $15512 = 0, $15513 = 0, $15514 = 0, $15515 = 0, $15516 = 0, $15517 = 0, $15518 = 0, $15519 = 0, $1552 = 0.0, $15520 = 0, $15521 = 0, $15522 = 0;
 var $15523 = 0, $15524 = 0, $15525 = 0, $15526 = 0, $15527 = 0, $15528 = 0, $15529 = 0, $1553 = 0.0, $15530 = 0, $15531 = 0, $15532 = 0, $15533 = 0, $15534 = 0, $15535 = 0, $15536 = 0, $15537 = 0.0, $15538 = 0, $15539 = 0, $1554 = 0.0, $15540 = 0;
 var $15541 = 0, $15542 = 0, $15543 = 0, $15544 = 0, $15545 = 0, $15546 = 0, $15547 = 0, $15548 = 0, $15549 = 0, $1555 = 0, $15550 = 0, $15551 = 0, $15552 = 0, $15553 = 0, $15554 = 0, $15555 = 0, $15556 = 0, $15557 = 0, $15558 = 0, $15559 = 0;
 var $1556 = 0.0, $15560 = 0, $15561 = 0, $15562 = 0, $15563 = 0, $15564 = 0, $15565 = 0, $15566 = 0, $15567 = 0, $15568 = 0, $15569 = 0, $1557 = 0.0, $15570 = 0, $15571 = 0, $15572 = 0, $15573 = 0, $15574 = 0, $15575 = 0, $15576 = 0, $15577 = 0;
 var $15578 = 0, $15579 = 0, $1558 = 0.0, $15580 = 0, $15581 = 0, $15582 = 0, $15583 = 0, $15584 = 0.0, $15585 = 0.0, $15586 = 0, $15587 = 0, $15588 = 0, $15589 = 0, $1559 = 0, $15590 = 0.0, $15591 = 0, $15592 = 0.0, $15593 = 0.0, $15594 = 0, $15595 = 0;
 var $15596 = 0, $15597 = 0.0, $15598 = 0.0, $15599 = 0.0, $156 = 0.0, $1560 = 0.0, $15600 = 0.0, $15601 = 0.0, $15602 = 0.0, $15603 = 0.0, $15604 = 0.0, $15605 = 0.0, $15606 = 0.0, $15607 = 0, $15608 = 0.0, $15609 = 0.0, $1561 = 0.0, $15610 = 0.0, $15611 = 0, $15612 = 0.0;
 var $15613 = 0.0, $15614 = 0, $15615 = 0, $15616 = 0, $15617 = 0, $15618 = 0, $15619 = 0, $1562 = 0, $15620 = 0, $15621 = 0, $15622 = 0, $15623 = 0, $15624 = 0, $15625 = 0, $15626 = 0, $15627 = 0, $15628 = 0, $15629 = 0, $1563 = 0, $15630 = 0;
 var $15631 = 0, $15632 = 0, $15633 = 0, $15634 = 0, $15635 = 0.0, $15636 = 0, $15637 = 0, $15638 = 0.0, $15639 = 0.0, $1564 = 0, $15640 = 0.0, $15641 = 0, $15642 = 0, $15643 = 0, $15644 = 0.0, $15645 = 0, $15646 = 0, $15647 = 0.0, $15648 = 0.0, $15649 = 0.0;
 var $1565 = 0, $15650 = 0, $15651 = 0, $15652 = 0, $15653 = 0, $15654 = 0, $15655 = 0, $15656 = 0, $15657 = 0, $15658 = 0, $15659 = 0, $1566 = 0, $15660 = 0, $15661 = 0.0, $15662 = 0, $15663 = 0, $15664 = 0, $15665 = 0.0, $15666 = 0, $15667 = 0;
 var $15668 = 0, $15669 = 0.0, $1567 = 0, $15670 = 0, $15671 = 0, $15672 = 0.0, $15673 = 0.0, $15674 = 0, $15675 = 0.0, $15676 = 0.0, $15677 = 0, $15678 = 0.0, $15679 = 0, $1568 = 0, $15680 = 0.0, $15681 = 0.0, $15682 = 0, $15683 = 0.0, $15684 = 0, $15685 = 0.0;
 var $15686 = 0.0, $15687 = 0, $15688 = 0.0, $15689 = 0.0, $1569 = 0, $15690 = 0.0, $15691 = 0.0, $15692 = 0, $15693 = 0.0, $15694 = 0.0, $15695 = 0.0, $15696 = 0.0, $15697 = 0.0, $15698 = 0, $15699 = 0.0, $157 = 0, $1570 = 0, $15700 = 0.0, $15701 = 0.0, $15702 = 0;
 var $15703 = 0.0, $15704 = 0.0, $15705 = 0, $15706 = 0.0, $15707 = 0.0, $15708 = 0.0, $15709 = 0.0, $1571 = 0, $15710 = 0, $15711 = 0.0, $15712 = 0.0, $15713 = 0, $15714 = 0, $15715 = 0.0, $15716 = 0.0, $15717 = 0.0, $15718 = 0, $15719 = 0.0, $1572 = 0, $15720 = 0;
 var $15721 = 0.0, $15722 = 0.0, $15723 = 0.0, $15724 = 0, $15725 = 0.0, $15726 = 0, $15727 = 0.0, $15728 = 0.0, $15729 = 0.0, $1573 = 0, $15730 = 0, $15731 = 0.0, $15732 = 0.0, $15733 = 0, $15734 = 0.0, $15735 = 0.0, $15736 = 0.0, $15737 = 0.0, $15738 = 0.0, $15739 = 0;
 var $1574 = 0, $15740 = 0.0, $15741 = 0, $15742 = 0.0, $15743 = 0.0, $15744 = 0.0, $15745 = 0, $15746 = 0, $15747 = 0.0, $15748 = 0.0, $15749 = 0.0, $1575 = 0, $15750 = 0.0, $15751 = 0.0, $15752 = 0.0, $15753 = 0.0, $15754 = 0, $15755 = 0.0, $15756 = 0, $15757 = 0.0;
 var $15758 = 0.0, $15759 = 0.0, $1576 = 0, $15760 = 0, $15761 = 0, $15762 = 0.0, $15763 = 0.0, $15764 = 0.0, $15765 = 0, $15766 = 0.0, $15767 = 0.0, $15768 = 0.0, $15769 = 0.0, $1577 = 0, $15770 = 0.0, $15771 = 0.0, $15772 = 0, $15773 = 0, $15774 = 0.0, $15775 = 0;
 var $15776 = 0.0, $15777 = 0.0, $15778 = 0, $15779 = 0.0, $1578 = 0, $15780 = 0.0, $15781 = 0.0, $15782 = 0.0, $15783 = 0.0, $15784 = 0.0, $15785 = 0.0, $15786 = 0, $15787 = 0.0, $15788 = 0.0, $15789 = 0.0, $1579 = 0, $15790 = 0.0, $15791 = 0.0, $15792 = 0.0, $15793 = 0;
 var $15794 = 0.0, $15795 = 0.0, $15796 = 0, $15797 = 0, $15798 = 0.0, $15799 = 0.0, $158 = 0.0, $1580 = 0, $15800 = 0.0, $15801 = 0, $15802 = 0.0, $15803 = 0.0, $15804 = 0, $15805 = 0.0, $15806 = 0.0, $15807 = 0.0, $15808 = 0.0, $15809 = 0.0, $1581 = 0, $15810 = 0;
 var $15811 = 0, $15812 = 0.0, $15813 = 0.0, $15814 = 0.0, $15815 = 0.0, $15816 = 0.0, $15817 = 0.0, $15818 = 0, $15819 = 0.0, $1582 = 0, $15820 = 0.0, $15821 = 0, $15822 = 0.0, $15823 = 0.0, $15824 = 0.0, $15825 = 0.0, $15826 = 0.0, $15827 = 0, $15828 = 0, $15829 = 0.0;
 var $1583 = 0.0, $15830 = 0, $15831 = 0.0, $15832 = 0.0, $15833 = 0, $15834 = 0.0, $15835 = 0.0, $15836 = 0.0, $15837 = 0.0, $15838 = 0.0, $15839 = 0.0, $1584 = 0, $15840 = 0.0, $15841 = 0, $15842 = 0.0, $15843 = 0.0, $15844 = 0, $15845 = 0.0, $15846 = 0.0, $15847 = 0.0;
 var $15848 = 0.0, $15849 = 0.0, $1585 = 0, $15850 = 0, $15851 = 0.0, $15852 = 0.0, $15853 = 0, $15854 = 0.0, $15855 = 0.0, $15856 = 0, $15857 = 0.0, $15858 = 0.0, $15859 = 0.0, $1586 = 0.0, $15860 = 0.0, $15861 = 0.0, $15862 = 0, $15863 = 0.0, $15864 = 0.0, $15865 = 0.0;
 var $15866 = 0.0, $15867 = 0.0, $15868 = 0, $15869 = 0.0, $1587 = 0.0, $15870 = 0, $15871 = 0.0, $15872 = 0.0, $15873 = 0.0, $15874 = 0, $15875 = 0.0, $15876 = 0.0, $15877 = 0, $15878 = 0, $15879 = 0.0, $1588 = 0.0, $15880 = 0.0, $15881 = 0, $15882 = 0, $15883 = 0.0;
 var $15884 = 0.0, $15885 = 0, $15886 = 0, $15887 = 0.0, $15888 = 0.0, $15889 = 0, $1589 = 0, $15890 = 0, $15891 = 0.0, $15892 = 0.0, $15893 = 0, $15894 = 0, $15895 = 0.0, $15896 = 0.0, $15897 = 0, $15898 = 0, $15899 = 0.0, $159 = 0.0, $1590 = 0, $15900 = 0.0;
 var $15901 = 0, $15902 = 0, $15903 = 0.0, $15904 = 0.0, $15905 = 0, $15906 = 0, $15907 = 0.0, $15908 = 0.0, $15909 = 0, $1591 = 0, $15910 = 0, $15911 = 0.0, $15912 = 0.0, $15913 = 0, $15914 = 0, $15915 = 0.0, $15916 = 0.0, $15917 = 0, $15918 = 0, $15919 = 0.0;
 var $1592 = 0.0, $15920 = 0.0, $15921 = 0, $15922 = 0, $15923 = 0, $15924 = 0, $15925 = 0, $15926 = 0.0, $15927 = 0, $15928 = 0, $15929 = 0, $1593 = 0, $15930 = 0, $15931 = 0, $15932 = 0, $15933 = 0, $15934 = 0, $15935 = 0, $15936 = 0, $15937 = 0;
 var $15938 = 0, $15939 = 0, $1594 = 0, $15940 = 0, $15941 = 0, $15942 = 0, $15943 = 0, $15944 = 0, $15945 = 0, $15946 = 0, $15947 = 0, $15948 = 0, $15949 = 0, $1595 = 0.0, $15950 = 0, $15951 = 0, $15952 = 0, $15953 = 0, $15954 = 0, $15955 = 0;
 var $15956 = 0.0, $15957 = 0, $15958 = 0, $15959 = 0, $1596 = 0.0, $15960 = 0, $15961 = 0, $15962 = 0, $15963 = 0, $15964 = 0, $15965 = 0, $15966 = 0, $15967 = 0, $15968 = 0, $15969 = 0, $1597 = 0.0, $15970 = 0, $15971 = 0, $15972 = 0, $15973 = 0;
 var $15974 = 0, $15975 = 0, $15976 = 0, $15977 = 0, $15978 = 0, $15979 = 0, $1598 = 0, $15980 = 0, $15981 = 0, $15982 = 0, $15983 = 0, $15984 = 0, $15985 = 0, $15986 = 0.0, $15987 = 0, $15988 = 0, $15989 = 0, $1599 = 0, $15990 = 0, $15991 = 0;
 var $15992 = 0, $15993 = 0, $15994 = 0, $15995 = 0, $15996 = 0, $15997 = 0, $15998 = 0, $15999 = 0, $16 = 0.0, $160 = 0.0, $1600 = 0, $16000 = 0, $16001 = 0, $16002 = 0, $16003 = 0, $16004 = 0, $16005 = 0, $16006 = 0, $16007 = 0, $16008 = 0;
 var $16009 = 0, $1601 = 0, $16010 = 0, $16011 = 0, $16012 = 0, $16013 = 0, $16014 = 0, $16015 = 0, $16016 = 0.0, $16017 = 0, $16018 = 0, $16019 = 0, $1602 = 0, $16020 = 0, $16021 = 0, $16022 = 0, $16023 = 0, $16024 = 0, $16025 = 0, $16026 = 0;
 var $16027 = 0, $16028 = 0, $16029 = 0, $1603 = 0, $16030 = 0, $16031 = 0, $16032 = 0, $16033 = 0, $16034 = 0, $16035 = 0, $16036 = 0, $16037 = 0, $16038 = 0, $16039 = 0, $1604 = 0, $16040 = 0, $16041 = 0, $16042 = 0, $16043 = 0, $16044 = 0;
 var $16045 = 0, $16046 = 0.0, $16047 = 0, $16048 = 0, $16049 = 0, $1605 = 0, $16050 = 0, $16051 = 0, $16052 = 0, $16053 = 0, $16054 = 0, $16055 = 0, $16056 = 0, $16057 = 0, $16058 = 0, $16059 = 0, $1606 = 0, $16060 = 0, $16061 = 0, $16062 = 0;
 var $16063 = 0, $16064 = 0, $16065 = 0, $16066 = 0, $16067 = 0, $16068 = 0, $16069 = 0, $1607 = 0, $16070 = 0, $16071 = 0, $16072 = 0, $16073 = 0, $16074 = 0, $16075 = 0, $16076 = 0.0, $16077 = 0, $16078 = 0, $16079 = 0, $1608 = 0, $16080 = 0;
 var $16081 = 0, $16082 = 0, $16083 = 0, $16084 = 0, $16085 = 0, $16086 = 0, $16087 = 0, $16088 = 0, $16089 = 0, $1609 = 0.0, $16090 = 0, $16091 = 0, $16092 = 0, $16093 = 0, $16094 = 0, $16095 = 0, $16096 = 0, $16097 = 0, $16098 = 0, $16099 = 0;
 var $161 = 0.0, $1610 = 0, $16100 = 0, $16101 = 0, $16102 = 0, $16103 = 0, $16104 = 0, $16105 = 0, $16106 = 0, $16107 = 0, $16108 = 0, $16109 = 0, $1611 = 0, $16110 = 0, $16111 = 0, $16112 = 0, $16113 = 0, $16114 = 0, $16115 = 0, $16116 = 0;
 var $16117 = 0, $16118 = 0, $16119 = 0, $1612 = 0, $16120 = 0, $16121 = 0, $16122 = 0, $16123 = 0, $16124 = 0, $16125 = 0, $16126 = 0, $16127 = 0, $16128 = 0, $16129 = 0, $1613 = 0.0, $16130 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0.0;
 var $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0.0, $1621 = 0.0, $1622 = 0, $1623 = 0.0, $1624 = 0.0, $1625 = 0, $1626 = 0.0, $1627 = 0.0, $1628 = 0.0, $1629 = 0.0, $163 = 0.0, $1630 = 0, $1631 = 0.0, $1632 = 0.0, $1633 = 0.0, $1634 = 0.0, $1635 = 0.0;
 var $1636 = 0, $1637 = 0.0, $1638 = 0.0, $1639 = 0.0, $164 = 0.0, $1640 = 0, $1641 = 0.0, $1642 = 0, $1643 = 0.0, $1644 = 0.0, $1645 = 0.0, $1646 = 0.0, $1647 = 0, $1648 = 0.0, $1649 = 0, $165 = 0.0, $1650 = 0.0, $1651 = 0.0, $1652 = 0.0, $1653 = 0.0;
 var $1654 = 0.0, $1655 = 0, $1656 = 0.0, $1657 = 0, $1658 = 0.0, $1659 = 0.0, $166 = 0, $1660 = 0.0, $1661 = 0, $1662 = 0.0, $1663 = 0, $1664 = 0.0, $1665 = 0.0, $1666 = 0.0, $1667 = 0, $1668 = 0, $1669 = 0.0, $167 = 0.0, $1670 = 0.0, $1671 = 0.0;
 var $1672 = 0, $1673 = 0.0, $1674 = 0.0, $1675 = 0, $1676 = 0.0, $1677 = 0.0, $1678 = 0.0, $1679 = 0.0, $168 = 0.0, $1680 = 0, $1681 = 0, $1682 = 0.0, $1683 = 0.0, $1684 = 0.0, $1685 = 0.0, $1686 = 0.0, $1687 = 0.0, $1688 = 0.0, $1689 = 0, $169 = 0.0;
 var $1690 = 0.0, $1691 = 0, $1692 = 0.0, $1693 = 0.0, $1694 = 0.0, $1695 = 0, $1696 = 0.0, $1697 = 0.0, $1698 = 0, $1699 = 0.0, $17 = 0, $170 = 0.0, $1700 = 0, $1701 = 0.0, $1702 = 0.0, $1703 = 0.0, $1704 = 0, $1705 = 0.0, $1706 = 0.0, $1707 = 0.0;
 var $1708 = 0.0, $1709 = 0.0, $171 = 0, $1710 = 0, $1711 = 0.0, $1712 = 0.0, $1713 = 0.0, $1714 = 0.0, $1715 = 0, $1716 = 0.0, $1717 = 0.0, $1718 = 0, $1719 = 0.0, $172 = 0.0, $1720 = 0.0, $1721 = 0.0, $1722 = 0.0, $1723 = 0, $1724 = 0.0, $1725 = 0.0;
 var $1726 = 0, $1727 = 0.0, $1728 = 0.0, $1729 = 0.0, $173 = 0.0, $1730 = 0.0, $1731 = 0, $1732 = 0.0, $1733 = 0.0, $1734 = 0.0, $1735 = 0.0, $1736 = 0.0, $1737 = 0, $1738 = 0.0, $1739 = 0.0, $174 = 0.0, $1740 = 0, $1741 = 0.0, $1742 = 0.0, $1743 = 0;
 var $1744 = 0, $1745 = 0.0, $1746 = 0.0, $1747 = 0, $1748 = 0, $1749 = 0.0, $175 = 0.0, $1750 = 0.0, $1751 = 0, $1752 = 0, $1753 = 0.0, $1754 = 0.0, $1755 = 0, $1756 = 0, $1757 = 0.0, $1758 = 0.0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0.0;
 var $1762 = 0.0, $1763 = 0, $1764 = 0, $1765 = 0.0, $1766 = 0.0, $1767 = 0, $1768 = 0, $1769 = 0.0, $177 = 0, $1770 = 0.0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0.0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0.0;
 var $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0.0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0;
 var $1799 = 0, $18 = 0.0, $180 = 0.0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0.0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0.0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0;
 var $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0.0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0.0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0;
 var $1834 = 0, $1835 = 0, $1836 = 0.0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0.0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0;
 var $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0.0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0.0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0.0;
 var $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0.0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0;
 var $1889 = 0, $189 = 0.0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0.0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0.0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0;
 var $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0;
 var $1924 = 0, $1925 = 0, $1926 = 0.0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0.0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0.0, $1940 = 0, $1941 = 0;
 var $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0.0;
 var $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0;
 var $1979 = 0.0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0.0, $1984 = 0, $1985 = 0.0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0.0, $199 = 0.0, $1990 = 0.0, $1991 = 0.0, $1992 = 0, $1993 = 0.0, $1994 = 0, $1995 = 0.0, $1996 = 0.0;
 var $1997 = 0.0, $1998 = 0.0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0.0, $2000 = 0.0, $2001 = 0, $2002 = 0.0, $2003 = 0.0, $2004 = 0.0, $2005 = 0.0, $2006 = 0.0, $2007 = 0.0, $2008 = 0, $2009 = 0, $201 = 0.0, $2010 = 0.0, $2011 = 0.0, $2012 = 0.0;
 var $2013 = 0.0, $2014 = 0, $2015 = 0.0, $2016 = 0.0, $2017 = 0.0, $2018 = 0, $2019 = 0.0, $202 = 0.0, $2020 = 0, $2021 = 0.0, $2022 = 0.0, $2023 = 0.0, $2024 = 0.0, $2025 = 0, $2026 = 0.0, $2027 = 0, $2028 = 0.0, $2029 = 0.0, $203 = 0.0, $2030 = 0.0;
 var $2031 = 0.0, $2032 = 0.0, $2033 = 0.0, $2034 = 0, $2035 = 0.0, $2036 = 0.0, $2037 = 0.0, $2038 = 0.0, $2039 = 0.0, $204 = 0, $2040 = 0.0, $2041 = 0.0, $2042 = 0, $2043 = 0.0, $2044 = 0.0, $2045 = 0.0, $2046 = 0, $2047 = 0.0, $2048 = 0, $2049 = 0.0;
 var $205 = 0.0, $2050 = 0.0, $2051 = 0.0, $2052 = 0.0, $2053 = 0, $2054 = 0.0, $2055 = 0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0.0, $206 = 0.0, $2060 = 0.0, $2061 = 0, $2062 = 0.0, $2063 = 0.0, $2064 = 0.0, $2065 = 0.0, $2066 = 0.0, $2067 = 0.0;
 var $2068 = 0.0, $2069 = 0.0, $207 = 0, $2070 = 0.0, $2071 = 0, $2072 = 0.0, $2073 = 0.0, $2074 = 0.0, $2075 = 0, $2076 = 0.0, $2077 = 0.0, $2078 = 0, $2079 = 0, $208 = 0.0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0;
 var $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0.0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0.0, $21 = 0.0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0.0;
 var $2103 = 0.0, $2104 = 0.0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0.0, $2109 = 0, $211 = 0.0, $2110 = 0, $2111 = 0.0, $2112 = 0.0, $2113 = 0.0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0;
 var $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0.0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0.0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0.0, $2134 = 0, $2135 = 0, $2136 = 0.0, $2137 = 0.0, $2138 = 0, $2139 = 0.0;
 var $214 = 0, $2140 = 0.0, $2141 = 0, $2142 = 0.0, $2143 = 0.0, $2144 = 0, $2145 = 0.0, $2146 = 0.0, $2147 = 0, $2148 = 0.0, $2149 = 0.0, $215 = 0, $2150 = 0.0, $2151 = 0, $2152 = 0.0, $2153 = 0.0, $2154 = 0.0, $2155 = 0.0, $2156 = 0.0, $2157 = 0.0;
 var $2158 = 0.0, $2159 = 0, $216 = 0, $2160 = 0.0, $2161 = 0.0, $2162 = 0, $2163 = 0.0, $2164 = 0.0, $2165 = 0.0, $2166 = 0.0, $2167 = 0.0, $2168 = 0.0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0.0, $2172 = 0.0, $2173 = 0.0, $2174 = 0, $2175 = 0.0;
 var $2176 = 0.0, $2177 = 0.0, $2178 = 0.0, $2179 = 0.0, $218 = 0, $2180 = 0, $2181 = 0.0, $2182 = 0.0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0, $2186 = 0.0, $2187 = 0, $2188 = 0, $2189 = 0.0, $219 = 0, $2190 = 0, $2191 = 0.0, $2192 = 0.0, $2193 = 0.0;
 var $2194 = 0.0, $2195 = 0.0, $2196 = 0.0, $2197 = 0.0, $2198 = 0.0, $2199 = 0.0, $22 = 0.0, $220 = 0, $2200 = 0.0, $2201 = 0.0, $2202 = 0.0, $2203 = 0, $2204 = 0, $2205 = 0.0, $2206 = 0.0, $2207 = 0.0, $2208 = 0.0, $2209 = 0, $221 = 0, $2210 = 0.0;
 var $2211 = 0.0, $2212 = 0.0, $2213 = 0.0, $2214 = 0.0, $2215 = 0.0, $2216 = 0.0, $2217 = 0, $2218 = 0.0, $2219 = 0.0, $222 = 0, $2220 = 0.0, $2221 = 0.0, $2222 = 0.0, $2223 = 0.0, $2224 = 0.0, $2225 = 0, $2226 = 0, $2227 = 0.0, $2228 = 0.0, $2229 = 0.0;
 var $223 = 0, $2230 = 0.0, $2231 = 0, $2232 = 0.0, $2233 = 0.0, $2234 = 0.0, $2235 = 0.0, $2236 = 0.0, $2237 = 0.0, $2238 = 0.0, $2239 = 0, $224 = 0, $2240 = 0.0, $2241 = 0.0, $2242 = 0.0, $2243 = 0.0, $2244 = 0.0, $2245 = 0.0, $2246 = 0.0, $2247 = 0;
 var $2248 = 0.0, $2249 = 0.0, $225 = 0, $2250 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2254 = 0.0, $2255 = 0.0, $2256 = 0.0, $2257 = 0.0, $2258 = 0, $2259 = 0.0, $226 = 0, $2260 = 0.0, $2261 = 0.0, $2262 = 0.0, $2263 = 0.0, $2264 = 0, $2265 = 0.0;
 var $2266 = 0.0, $2267 = 0, $2268 = 0, $2269 = 0.0, $227 = 0, $2270 = 0.0, $2271 = 0, $2272 = 0, $2273 = 0.0, $2274 = 0.0, $2275 = 0, $2276 = 0, $2277 = 0.0, $2278 = 0.0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0.0, $2282 = 0.0, $2283 = 0;
 var $2284 = 0, $2285 = 0.0, $2286 = 0.0, $2287 = 0, $2288 = 0, $2289 = 0.0, $229 = 0, $2290 = 0.0, $2291 = 0, $2292 = 0, $2293 = 0.0, $2294 = 0.0, $2295 = 0, $2296 = 0, $2297 = 0.0, $2298 = 0.0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0.0;
 var $2301 = 0, $2302 = 0.0, $2303 = 0.0, $2304 = 0, $2305 = 0.0, $2306 = 0, $2307 = 0.0, $2308 = 0.0, $2309 = 0, $231 = 0, $2310 = 0.0, $2311 = 0.0, $2312 = 0, $2313 = 0.0, $2314 = 0, $2315 = 0.0, $2316 = 0.0, $2317 = 0, $2318 = 0.0, $2319 = 0;
 var $232 = 0, $2320 = 0.0, $2321 = 0.0, $2322 = 0, $2323 = 0.0, $2324 = 0, $2325 = 0.0, $2326 = 0.0, $2327 = 0.0, $2328 = 0.0, $2329 = 0.0, $233 = 0, $2330 = 0, $2331 = 0.0, $2332 = 0.0, $2333 = 0.0, $2334 = 0, $2335 = 0.0, $2336 = 0.0, $2337 = 0.0;
 var $2338 = 0, $2339 = 0.0, $234 = 0.0, $2340 = 0.0, $2341 = 0.0, $2342 = 0.0, $2343 = 0.0, $2344 = 0.0, $2345 = 0.0, $2346 = 0, $2347 = 0.0, $2348 = 0.0, $2349 = 0.0, $235 = 0, $2350 = 0.0, $2351 = 0, $2352 = 0.0, $2353 = 0.0, $2354 = 0.0, $2355 = 0.0;
 var $2356 = 0, $2357 = 0, $2358 = 0.0, $2359 = 0.0, $236 = 0, $2360 = 0.0, $2361 = 0.0, $2362 = 0.0, $2363 = 0.0, $2364 = 0.0, $2365 = 0, $2366 = 0.0, $2367 = 0.0, $2368 = 0.0, $2369 = 0.0, $237 = 0.0, $2370 = 0, $2371 = 0.0, $2372 = 0.0, $2373 = 0.0;
 var $2374 = 0, $2375 = 0.0, $2376 = 0.0, $2377 = 0.0, $2378 = 0.0, $2379 = 0, $238 = 0.0, $2380 = 0.0, $2381 = 0.0, $2382 = 0.0, $2383 = 0.0, $2384 = 0, $2385 = 0, $2386 = 0.0, $2387 = 0, $2388 = 0.0, $2389 = 0.0, $239 = 0.0, $2390 = 0, $2391 = 0.0;
 var $2392 = 0.0, $2393 = 0.0, $2394 = 0.0, $2395 = 0.0, $2396 = 0, $2397 = 0, $2398 = 0.0, $2399 = 0.0, $24 = 0.0, $240 = 0, $2400 = 0.0, $2401 = 0.0, $2402 = 0, $2403 = 0.0, $2404 = 0, $2405 = 0.0, $2406 = 0.0, $2407 = 0.0, $2408 = 0, $2409 = 0;
 var $241 = 0, $2410 = 0.0, $2411 = 0, $2412 = 0.0, $2413 = 0.0, $2414 = 0, $2415 = 0.0, $2416 = 0.0, $2417 = 0.0, $2418 = 0.0, $2419 = 0.0, $242 = 0, $2420 = 0, $2421 = 0.0, $2422 = 0.0, $2423 = 0.0, $2424 = 0, $2425 = 0.0, $2426 = 0.0, $2427 = 0.0;
 var $2428 = 0.0, $2429 = 0, $243 = 0.0, $2430 = 0.0, $2431 = 0.0, $2432 = 0.0, $2433 = 0.0, $2434 = 0, $2435 = 0, $2436 = 0.0, $2437 = 0.0, $2438 = 0.0, $2439 = 0.0, $244 = 0, $2440 = 0.0, $2441 = 0.0, $2442 = 0.0, $2443 = 0, $2444 = 0.0, $2445 = 0.0;
 var $2446 = 0.0, $2447 = 0.0, $2448 = 0, $2449 = 0.0, $245 = 0, $2450 = 0.0, $2451 = 0.0, $2452 = 0, $2453 = 0.0, $2454 = 0.0, $2455 = 0.0, $2456 = 0.0, $2457 = 0, $2458 = 0.0, $2459 = 0.0, $246 = 0.0, $2460 = 0.0, $2461 = 0.0, $2462 = 0, $2463 = 0;
 var $2464 = 0.0, $2465 = 0, $2466 = 0.0, $2467 = 0.0, $2468 = 0, $2469 = 0.0, $247 = 0.0, $2470 = 0.0, $2471 = 0, $2472 = 0, $2473 = 0.0, $2474 = 0.0, $2475 = 0, $2476 = 0, $2477 = 0.0, $2478 = 0.0, $2479 = 0, $248 = 0.0, $2480 = 0.0, $2481 = 0;
 var $2482 = 0.0, $2483 = 0.0, $2484 = 0, $2485 = 0.0, $2486 = 0, $2487 = 0.0, $2488 = 0.0, $2489 = 0, $249 = 0, $2490 = 0.0, $2491 = 0.0, $2492 = 0, $2493 = 0.0, $2494 = 0, $2495 = 0.0, $2496 = 0.0, $2497 = 0, $2498 = 0.0, $2499 = 0, $25 = 0;
 var $250 = 0, $2500 = 0.0, $2501 = 0.0, $2502 = 0, $2503 = 0.0, $2504 = 0, $2505 = 0.0, $2506 = 0.0, $2507 = 0.0, $2508 = 0.0, $2509 = 0.0, $251 = 0, $2510 = 0, $2511 = 0.0, $2512 = 0.0, $2513 = 0.0, $2514 = 0, $2515 = 0.0, $2516 = 0.0, $2517 = 0.0;
 var $2518 = 0, $2519 = 0.0, $252 = 0, $2520 = 0.0, $2521 = 0.0, $2522 = 0.0, $2523 = 0, $2524 = 0.0, $2525 = 0.0, $2526 = 0.0, $2527 = 0.0, $2528 = 0.0, $2529 = 0.0, $253 = 0, $2530 = 0.0, $2531 = 0, $2532 = 0.0, $2533 = 0.0, $2534 = 0.0, $2535 = 0.0;
 var $2536 = 0, $2537 = 0.0, $2538 = 0.0, $2539 = 0.0, $254 = 0, $2540 = 0, $2541 = 0.0, $2542 = 0.0, $2543 = 0.0, $2544 = 0.0, $2545 = 0, $2546 = 0.0, $2547 = 0.0, $2548 = 0.0, $2549 = 0.0, $255 = 0, $2550 = 0, $2551 = 0.0, $2552 = 0.0, $2553 = 0.0;
 var $2554 = 0, $2555 = 0.0, $2556 = 0.0, $2557 = 0.0, $2558 = 0.0, $2559 = 0, $256 = 0, $2560 = 0.0, $2561 = 0.0, $2562 = 0.0, $2563 = 0.0, $2564 = 0, $2565 = 0, $2566 = 0.0, $2567 = 0, $2568 = 0.0, $2569 = 0.0, $257 = 0, $2570 = 0, $2571 = 0.0;
 var $2572 = 0.0, $2573 = 0.0, $2574 = 0.0, $2575 = 0.0, $2576 = 0, $2577 = 0, $2578 = 0.0, $2579 = 0.0, $258 = 0, $2580 = 0.0, $2581 = 0.0, $2582 = 0, $2583 = 0.0, $2584 = 0, $2585 = 0.0, $2586 = 0.0, $2587 = 0.0, $2588 = 0, $2589 = 0, $259 = 0;
 var $2590 = 0.0, $2591 = 0.0, $2592 = 0.0, $2593 = 0.0, $2594 = 0, $2595 = 0.0, $2596 = 0, $2597 = 0.0, $2598 = 0.0, $2599 = 0.0, $26 = 0.0, $260 = 0.0, $2600 = 0, $2601 = 0, $2602 = 0.0, $2603 = 0.0, $2604 = 0.0, $2605 = 0.0, $2606 = 0.0, $2607 = 0.0;
 var $2608 = 0.0, $2609 = 0, $261 = 0, $2610 = 0.0, $2611 = 0.0, $2612 = 0.0, $2613 = 0.0, $2614 = 0, $2615 = 0.0, $2616 = 0.0, $2617 = 0.0, $2618 = 0, $2619 = 0.0, $262 = 0, $2620 = 0.0, $2621 = 0.0, $2622 = 0.0, $2623 = 0, $2624 = 0.0, $2625 = 0.0;
 var $2626 = 0.0, $2627 = 0.0, $2628 = 0, $2629 = 0.0, $263 = 0, $2630 = 0.0, $2631 = 0.0, $2632 = 0, $2633 = 0.0, $2634 = 0.0, $2635 = 0.0, $2636 = 0.0, $2637 = 0, $2638 = 0.0, $2639 = 0.0, $264 = 0.0, $2640 = 0.0, $2641 = 0.0, $2642 = 0, $2643 = 0;
 var $2644 = 0.0, $2645 = 0, $2646 = 0.0, $2647 = 0, $2648 = 0.0, $2649 = 0.0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0.0, $2653 = 0.0, $2654 = 0, $2655 = 0, $2656 = 0.0, $2657 = 0.0, $2658 = 0, $2659 = 0.0, $266 = 0, $2660 = 0, $2661 = 0.0;
 var $2662 = 0.0, $2663 = 0, $2664 = 0.0, $2665 = 0, $2666 = 0.0, $2667 = 0.0, $2668 = 0, $2669 = 0.0, $267 = 0, $2670 = 0.0, $2671 = 0, $2672 = 0.0, $2673 = 0, $2674 = 0.0, $2675 = 0.0, $2676 = 0, $2677 = 0.0, $2678 = 0, $2679 = 0.0, $268 = 0.0;
 var $2680 = 0.0, $2681 = 0, $2682 = 0.0, $2683 = 0, $2684 = 0.0, $2685 = 0.0, $2686 = 0.0, $2687 = 0.0, $2688 = 0.0, $2689 = 0, $269 = 0, $2690 = 0.0, $2691 = 0.0, $2692 = 0.0, $2693 = 0, $2694 = 0.0, $2695 = 0.0, $2696 = 0.0, $2697 = 0, $2698 = 0.0;
 var $2699 = 0.0, $27 = 0.0, $270 = 0, $2700 = 0.0, $2701 = 0.0, $2702 = 0.0, $2703 = 0.0, $2704 = 0.0, $2705 = 0, $2706 = 0.0, $2707 = 0.0, $2708 = 0.0, $2709 = 0.0, $271 = 0.0, $2710 = 0, $2711 = 0.0, $2712 = 0.0, $2713 = 0.0, $2714 = 0.0, $2715 = 0;
 var $2716 = 0, $2717 = 0.0, $2718 = 0.0, $2719 = 0.0, $272 = 0.0, $2720 = 0, $2721 = 0.0, $2722 = 0.0, $2723 = 0.0, $2724 = 0.0, $2725 = 0.0, $2726 = 0.0, $2727 = 0.0, $2728 = 0.0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0.0, $2732 = 0.0, $2733 = 0.0;
 var $2734 = 0.0, $2735 = 0.0, $2736 = 0.0, $2737 = 0.0, $2738 = 0, $2739 = 0.0, $274 = 0.0, $2740 = 0.0, $2741 = 0.0, $2742 = 0.0, $2743 = 0, $2744 = 0, $2745 = 0.0, $2746 = 0, $2747 = 0.0, $2748 = 0.0, $2749 = 0, $275 = 0, $2750 = 0.0, $2751 = 0.0;
 var $2752 = 0.0, $2753 = 0.0, $2754 = 0.0, $2755 = 0, $2756 = 0, $2757 = 0.0, $2758 = 0, $2759 = 0.0, $276 = 0.0, $2760 = 0.0, $2761 = 0, $2762 = 0.0, $2763 = 0.0, $2764 = 0.0, $2765 = 0.0, $2766 = 0.0, $2767 = 0, $2768 = 0, $2769 = 0.0, $277 = 0.0;
 var $2770 = 0.0, $2771 = 0.0, $2772 = 0.0, $2773 = 0, $2774 = 0.0, $2775 = 0, $2776 = 0.0, $2777 = 0.0, $2778 = 0.0, $2779 = 0, $278 = 0, $2780 = 0.0, $2781 = 0.0, $2782 = 0.0, $2783 = 0, $2784 = 0.0, $2785 = 0.0, $2786 = 0.0, $2787 = 0.0, $2788 = 0;
 var $2789 = 0.0, $279 = 0.0, $2790 = 0.0, $2791 = 0.0, $2792 = 0.0, $2793 = 0, $2794 = 0, $2795 = 0.0, $2796 = 0.0, $2797 = 0.0, $2798 = 0, $2799 = 0.0, $28 = 0, $280 = 0, $2800 = 0.0, $2801 = 0.0, $2802 = 0.0, $2803 = 0.0, $2804 = 0.0, $2805 = 0.0;
 var $2806 = 0.0, $2807 = 0, $2808 = 0, $2809 = 0.0, $281 = 0.0, $2810 = 0.0, $2811 = 0.0, $2812 = 0.0, $2813 = 0.0, $2814 = 0.0, $2815 = 0.0, $2816 = 0, $2817 = 0.0, $2818 = 0.0, $2819 = 0.0, $282 = 0.0, $2820 = 0.0, $2821 = 0, $2822 = 0, $2823 = 0.0;
 var $2824 = 0, $2825 = 0.0, $2826 = 0, $2827 = 0, $2828 = 0.0, $2829 = 0, $283 = 0, $2830 = 0.0, $2831 = 0.0, $2832 = 0, $2833 = 0, $2834 = 0.0, $2835 = 0.0, $2836 = 0, $2837 = 0, $2838 = 0.0, $2839 = 0.0, $284 = 0.0, $2840 = 0, $2841 = 0;
 var $2842 = 0.0, $2843 = 0, $2844 = 0.0, $2845 = 0.0, $2846 = 0.0, $2847 = 0, $2848 = 0.0, $2849 = 0.0, $285 = 0.0, $2850 = 0, $2851 = 0.0, $2852 = 0.0, $2853 = 0, $2854 = 0.0, $2855 = 0.0, $2856 = 0, $2857 = 0.0, $2858 = 0.0, $2859 = 0, $286 = 0;
 var $2860 = 0.0, $2861 = 0.0, $2862 = 0.0, $2863 = 0.0, $2864 = 0.0, $2865 = 0.0, $2866 = 0.0, $2867 = 0, $2868 = 0.0, $2869 = 0, $287 = 0.0, $2870 = 0, $2871 = 0.0, $2872 = 0, $2873 = 0.0, $2874 = 0, $2875 = 0.0, $2876 = 0, $2877 = 0, $2878 = 0.0;
 var $2879 = 0.0, $288 = 0, $2880 = 0.0, $2881 = 0.0, $2882 = 0, $2883 = 0.0, $2884 = 0, $2885 = 0.0, $2886 = 0.0, $2887 = 0.0, $2888 = 0, $2889 = 0, $289 = 0.0, $2890 = 0.0, $2891 = 0.0, $2892 = 0.0, $2893 = 0.0, $2894 = 0, $2895 = 0.0, $2896 = 0.0;
 var $2897 = 0.0, $2898 = 0.0, $2899 = 0.0, $29 = 0.0, $290 = 0.0, $2900 = 0, $2901 = 0, $2902 = 0.0, $2903 = 0.0, $2904 = 0.0, $2905 = 0.0, $2906 = 0, $2907 = 0.0, $2908 = 0.0, $2909 = 0.0, $291 = 0, $2910 = 0.0, $2911 = 0.0, $2912 = 0, $2913 = 0;
 var $2914 = 0.0, $2915 = 0.0, $2916 = 0.0, $2917 = 0.0, $2918 = 0.0, $2919 = 0, $292 = 0.0, $2920 = 0.0, $2921 = 0.0, $2922 = 0.0, $2923 = 0.0, $2924 = 0.0, $2925 = 0, $2926 = 0.0, $2927 = 0.0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0.0, $2931 = 0.0;
 var $2932 = 0, $2933 = 0, $2934 = 0.0, $2935 = 0.0, $2936 = 0, $2937 = 0, $2938 = 0.0, $2939 = 0.0, $294 = 0.0, $2940 = 0, $2941 = 0, $2942 = 0.0, $2943 = 0.0, $2944 = 0, $2945 = 0, $2946 = 0.0, $2947 = 0.0, $2948 = 0, $2949 = 0, $295 = 0.0;
 var $2950 = 0.0, $2951 = 0.0, $2952 = 0, $2953 = 0, $2954 = 0.0, $2955 = 0.0, $2956 = 0, $2957 = 0, $2958 = 0.0, $2959 = 0.0, $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0.0, $2963 = 0.0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0.0, $2968 = 0;
 var $2969 = 0.0, $297 = 0.0, $2970 = 0.0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0.0, $2976 = 0.0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0, $2980 = 0.0, $2981 = 0.0, $2982 = 0.0, $2983 = 0.0, $2984 = 0.0, $2985 = 0.0, $2986 = 0.0;
 var $2987 = 0.0, $2988 = 0.0, $2989 = 0.0, $299 = 0.0, $2990 = 0, $2991 = 0.0, $2992 = 0.0, $2993 = 0.0, $2994 = 0, $2995 = 0.0, $2996 = 0.0, $2997 = 0, $2998 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0.0, $3000 = 0, $3001 = 0, $3002 = 0;
 var $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0.0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0.0, $3019 = 0, $302 = 0.0, $3020 = 0;
 var $3021 = 0.0, $3022 = 0.0, $3023 = 0.0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0.0, $3028 = 0, $3029 = 0, $303 = 0.0, $3030 = 0.0, $3031 = 0.0, $3032 = 0.0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0;
 var $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0.0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0.0, $3049 = 0, $305 = 0.0, $3050 = 0, $3051 = 0, $3052 = 0.0, $3053 = 0, $3054 = 0, $3055 = 0.0, $3056 = 0.0, $3057 = 0;
 var $3058 = 0.0, $3059 = 0.0, $306 = 0.0, $3060 = 0, $3061 = 0.0, $3062 = 0.0, $3063 = 0.0, $3064 = 0.0, $3065 = 0.0, $3066 = 0.0, $3067 = 0, $3068 = 0.0, $3069 = 0, $307 = 0.0, $3070 = 0.0, $3071 = 0.0, $3072 = 0.0, $3073 = 0.0, $3074 = 0, $3075 = 0.0;
 var $3076 = 0.0, $3077 = 0.0, $3078 = 0, $3079 = 0.0, $308 = 0, $3080 = 0.0, $3081 = 0, $3082 = 0, $3083 = 0.0, $3084 = 0.0, $3085 = 0.0, $3086 = 0.0, $3087 = 0, $3088 = 0.0, $3089 = 0.0, $309 = 0.0, $3090 = 0, $3091 = 0.0, $3092 = 0.0, $3093 = 0.0;
 var $3094 = 0.0, $3095 = 0, $3096 = 0.0, $3097 = 0.0, $3098 = 0, $3099 = 0, $31 = 0.0, $310 = 0.0, $3100 = 0.0, $3101 = 0.0, $3102 = 0.0, $3103 = 0.0, $3104 = 0.0, $3105 = 0, $3106 = 0, $3107 = 0.0, $3108 = 0.0, $3109 = 0.0, $311 = 0.0, $3110 = 0.0;
 var $3111 = 0.0, $3112 = 0, $3113 = 0, $3114 = 0.0, $3115 = 0.0, $3116 = 0.0, $3117 = 0.0, $3118 = 0, $3119 = 0.0, $312 = 0, $3120 = 0, $3121 = 0.0, $3122 = 0.0, $3123 = 0.0, $3124 = 0.0, $3125 = 0.0, $3126 = 0, $3127 = 0, $3128 = 0.0, $3129 = 0.0;
 var $313 = 0.0, $3130 = 0.0, $3131 = 0.0, $3132 = 0, $3133 = 0.0, $3134 = 0, $3135 = 0.0, $3136 = 0.0, $3137 = 0.0, $3138 = 0.0, $3139 = 0.0, $314 = 0.0, $3140 = 0.0, $3141 = 0, $3142 = 0.0, $3143 = 0.0, $3144 = 0, $3145 = 0, $3146 = 0.0, $3147 = 0.0;
 var $3148 = 0, $3149 = 0, $315 = 0.0, $3150 = 0.0, $3151 = 0.0, $3152 = 0, $3153 = 0, $3154 = 0.0, $3155 = 0.0, $3156 = 0, $3157 = 0, $3158 = 0.0, $3159 = 0.0, $316 = 0.0, $3160 = 0, $3161 = 0, $3162 = 0.0, $3163 = 0.0, $3164 = 0, $3165 = 0;
 var $3166 = 0.0, $3167 = 0.0, $3168 = 0, $3169 = 0, $317 = 0, $3170 = 0.0, $3171 = 0.0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $3177 = 0.0, $3178 = 0, $3179 = 0, $318 = 0.0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0;
 var $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0.0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0, $3196 = 0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0.0, $320 = 0.0, $3200 = 0;
 var $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0.0, $3208 = 0, $3209 = 0, $321 = 0.0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0;
 var $322 = 0.0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0.0, $3230 = 0, $3231 = 0, $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0.0;
 var $3238 = 0, $3239 = 0, $324 = 0.0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0;
 var $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0.0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0.0, $3268 = 0, $3269 = 0, $327 = 0.0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0;
 var $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0.0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0.0, $3290 = 0, $3291 = 0;
 var $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0.0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0;
 var $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0.0, $3320 = 0, $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0.0;
 var $3328 = 0, $3329 = 0, $333 = 0.0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0.0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0;
 var $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0.0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0.0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0;
 var $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0.0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0.0, $3376 = 0, $3377 = 0.0, $3378 = 0.0, $3379 = 0.0, $338 = 0.0, $3380 = 0, $3381 = 0.0;
 var $3382 = 0.0, $3383 = 0, $3384 = 0.0, $3385 = 0.0, $3386 = 0.0, $3387 = 0.0, $3388 = 0.0, $3389 = 0.0, $339 = 0, $3390 = 0.0, $3391 = 0, $3392 = 0.0, $3393 = 0, $3394 = 0, $3395 = 0.0, $3396 = 0, $3397 = 0, $3398 = 0.0, $3399 = 0, $34 = 0.0;
 var $340 = 0.0, $3400 = 0.0, $3401 = 0.0, $3402 = 0, $3403 = 0, $3404 = 0.0, $3405 = 0.0, $3406 = 0, $3407 = 0.0, $3408 = 0.0, $3409 = 0.0, $341 = 0.0, $3410 = 0, $3411 = 0, $3412 = 0.0, $3413 = 0, $3414 = 0.0, $3415 = 0.0, $3416 = 0, $3417 = 0.0;
 var $3418 = 0, $3419 = 0.0, $342 = 0.0, $3420 = 0.0, $3421 = 0.0, $3422 = 0, $3423 = 0, $3424 = 0.0, $3425 = 0, $3426 = 0.0, $3427 = 0.0, $3428 = 0, $3429 = 0.0, $343 = 0.0, $3430 = 0.0, $3431 = 0.0, $3432 = 0.0, $3433 = 0.0, $3434 = 0, $3435 = 0;
 var $3436 = 0.0, $3437 = 0, $3438 = 0.0, $3439 = 0.0, $344 = 0, $3440 = 0, $3441 = 0.0, $3442 = 0.0, $3443 = 0.0, $3444 = 0.0, $3445 = 0.0, $3446 = 0, $3447 = 0, $3448 = 0.0, $3449 = 0, $345 = 0, $3450 = 0.0, $3451 = 0.0, $3452 = 0.0, $3453 = 0;
 var $3454 = 0.0, $3455 = 0.0, $3456 = 0.0, $3457 = 0.0, $3458 = 0.0, $3459 = 0, $346 = 0.0, $3460 = 0.0, $3461 = 0.0, $3462 = 0, $3463 = 0, $3464 = 0.0, $3465 = 0.0, $3466 = 0, $3467 = 0, $3468 = 0.0, $3469 = 0.0, $347 = 0.0, $3470 = 0, $3471 = 0;
 var $3472 = 0.0, $3473 = 0.0, $3474 = 0, $3475 = 0, $3476 = 0.0, $3477 = 0.0, $3478 = 0, $3479 = 0, $348 = 0.0, $3480 = 0.0, $3481 = 0.0, $3482 = 0, $3483 = 0, $3484 = 0.0, $3485 = 0.0, $3486 = 0, $3487 = 0, $3488 = 0.0, $3489 = 0.0, $349 = 0;
 var $3490 = 0, $3491 = 0, $3492 = 0.0, $3493 = 0.0, $3494 = 0, $3495 = 0, $3496 = 0.0, $3497 = 0.0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0.0, $3500 = 0, $3501 = 0.0, $3502 = 0.0, $3503 = 0, $3504 = 0, $3505 = 0.0, $3506 = 0.0, $3507 = 0;
 var $3508 = 0, $3509 = 0.0, $351 = 0.0, $3510 = 0.0, $3511 = 0, $3512 = 0.0, $3513 = 0.0, $3514 = 0.0, $3515 = 0.0, $3516 = 0.0, $3517 = 0, $3518 = 0, $3519 = 0.0, $352 = 0.0, $3520 = 0, $3521 = 0.0, $3522 = 0.0, $3523 = 0.0, $3524 = 0.0, $3525 = 0.0;
 var $3526 = 0.0, $3527 = 0.0, $3528 = 0, $3529 = 0.0, $353 = 0.0, $3530 = 0.0, $3531 = 0.0, $3532 = 0, $3533 = 0.0, $3534 = 0.0, $3535 = 0, $3536 = 0, $3537 = 0, $3538 = 0, $3539 = 0, $354 = 0.0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0;
 var $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0.0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0.0, $3557 = 0, $3558 = 0, $3559 = 0.0, $356 = 0.0, $3560 = 0.0, $3561 = 0.0;
 var $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0.0, $3566 = 0, $3567 = 0, $3568 = 0.0, $3569 = 0.0, $357 = 0.0, $3570 = 0.0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0;
 var $3580 = 0, $3581 = 0, $3582 = 0.0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0.0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0.0, $3591 = 0, $3592 = 0, $3593 = 0.0, $3594 = 0.0, $3595 = 0, $3596 = 0.0, $3597 = 0.0, $3598 = 0;
 var $3599 = 0.0, $36 = 0.0, $360 = 0.0, $3600 = 0.0, $3601 = 0.0, $3602 = 0.0, $3603 = 0.0, $3604 = 0.0, $3605 = 0, $3606 = 0.0, $3607 = 0.0, $3608 = 0.0, $3609 = 0, $361 = 0, $3610 = 0.0, $3611 = 0.0, $3612 = 0, $3613 = 0.0, $3614 = 0.0, $3615 = 0.0;
 var $3616 = 0.0, $3617 = 0, $3618 = 0, $3619 = 0.0, $362 = 0.0, $3620 = 0.0, $3621 = 0.0, $3622 = 0.0, $3623 = 0, $3624 = 0.0, $3625 = 0.0, $3626 = 0.0, $3627 = 0.0, $3628 = 0, $3629 = 0.0, $363 = 0.0, $3630 = 0.0, $3631 = 0, $3632 = 0, $3633 = 0.0;
 var $3634 = 0.0, $3635 = 0.0, $3636 = 0, $3637 = 0.0, $3638 = 0.0, $3639 = 0.0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0.0, $3643 = 0.0, $3644 = 0, $3645 = 0.0, $3646 = 0.0, $3647 = 0.0, $3648 = 0.0, $3649 = 0.0, $365 = 0.0, $3650 = 0, $3651 = 0.0;
 var $3652 = 0, $3653 = 0.0, $3654 = 0, $3655 = 0.0, $3656 = 0.0, $3657 = 0.0, $3658 = 0, $3659 = 0.0, $366 = 0.0, $3660 = 0.0, $3661 = 0.0, $3662 = 0.0, $3663 = 0.0, $3664 = 0, $3665 = 0, $3666 = 0.0, $3667 = 0, $3668 = 0.0, $3669 = 0.0, $367 = 0.0;
 var $3670 = 0, $3671 = 0.0, $3672 = 0.0, $3673 = 0.0, $3674 = 0.0, $3675 = 0.0, $3676 = 0.0, $3677 = 0.0, $3678 = 0.0, $3679 = 0, $368 = 0.0, $3680 = 0.0, $3681 = 0.0, $3682 = 0, $3683 = 0, $3684 = 0.0, $3685 = 0.0, $3686 = 0, $3687 = 0, $3688 = 0.0;
 var $3689 = 0.0, $369 = 0.0, $3690 = 0, $3691 = 0, $3692 = 0.0, $3693 = 0.0, $3694 = 0, $3695 = 0, $3696 = 0.0, $3697 = 0.0, $3698 = 0, $3699 = 0, $37 = 0.0, $370 = 0, $3700 = 0.0, $3701 = 0.0, $3702 = 0, $3703 = 0, $3704 = 0.0, $3705 = 0.0;
 var $3706 = 0, $3707 = 0, $3708 = 0.0, $3709 = 0.0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0.0, $3716 = 0, $3717 = 0, $3718 = 0, $3719 = 0, $372 = 0.0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0;
 var $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0, $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0.0, $3740 = 0, $3741 = 0;
 var $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0.0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0.0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0, $3754 = 0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0;
 var $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0.0, $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3774 = 0, $3775 = 0.0, $3776 = 0, $3777 = 0, $3778 = 0;
 var $3779 = 0, $378 = 0.0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0.0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0;
 var $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0.0, $380 = 0.0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0.0, $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0, $381 = 0.0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0;
 var $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0;
 var $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0.0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0.0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0, $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0.0;
 var $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0.0, $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0.0, $3866 = 0, $3867 = 0, $3868 = 0;
 var $3869 = 0, $387 = 0.0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0;
 var $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0.0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0.0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0;
 var $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0.0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0.0, $3914 = 0, $3915 = 0.0, $3916 = 0.0, $3917 = 0, $3918 = 0.0, $3919 = 0, $392 = 0.0, $3920 = 0.0, $3921 = 0.0;
 var $3922 = 0, $3923 = 0.0, $3924 = 0.0, $3925 = 0, $3926 = 0.0, $3927 = 0.0, $3928 = 0, $3929 = 0.0, $393 = 0.0, $3930 = 0.0, $3931 = 0.0, $3932 = 0.0, $3933 = 0, $3934 = 0.0, $3935 = 0, $3936 = 0.0, $3937 = 0.0, $3938 = 0.0, $3939 = 0, $394 = 0;
 var $3940 = 0.0, $3941 = 0.0, $3942 = 0.0, $3943 = 0.0, $3944 = 0.0, $3945 = 0.0, $3946 = 0, $3947 = 0.0, $3948 = 0, $3949 = 0.0, $395 = 0, $3950 = 0.0, $3951 = 0, $3952 = 0.0, $3953 = 0.0, $3954 = 0, $3955 = 0.0, $3956 = 0.0, $3957 = 0, $3958 = 0.0;
 var $3959 = 0.0, $396 = 0.0, $3960 = 0, $3961 = 0.0, $3962 = 0, $3963 = 0.0, $3964 = 0, $3965 = 0.0, $3966 = 0.0, $3967 = 0, $3968 = 0.0, $3969 = 0, $397 = 0.0, $3970 = 0.0, $3971 = 0.0, $3972 = 0.0, $3973 = 0, $3974 = 0.0, $3975 = 0, $3976 = 0.0;
 var $3977 = 0, $3978 = 0.0, $3979 = 0.0, $398 = 0.0, $3980 = 0.0, $3981 = 0, $3982 = 0, $3983 = 0.0, $3984 = 0, $3985 = 0.0, $3986 = 0.0, $3987 = 0, $3988 = 0.0, $3989 = 0, $399 = 0.0, $3990 = 0.0, $3991 = 0.0, $3992 = 0.0, $3993 = 0, $3994 = 0;
 var $3995 = 0.0, $3996 = 0.0, $3997 = 0.0, $3998 = 0.0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0.0, $4000 = 0.0, $4001 = 0.0, $4002 = 0.0, $4003 = 0.0, $4004 = 0.0, $4005 = 0, $4006 = 0, $4007 = 0.0, $4008 = 0.0, $4009 = 0.0, $401 = 0.0, $4010 = 0.0;
 var $4011 = 0.0, $4012 = 0.0, $4013 = 0.0, $4014 = 0, $4015 = 0, $4016 = 0.0, $4017 = 0.0, $4018 = 0.0, $4019 = 0.0, $402 = 0.0, $4020 = 0.0, $4021 = 0.0, $4022 = 0.0, $4023 = 0.0, $4024 = 0, $4025 = 0.0, $4026 = 0.0, $4027 = 0, $4028 = 0, $4029 = 0.0;
 var $403 = 0, $4030 = 0.0, $4031 = 0, $4032 = 0, $4033 = 0.0, $4034 = 0.0, $4035 = 0, $4036 = 0, $4037 = 0.0, $4038 = 0.0, $4039 = 0, $404 = 0.0, $4040 = 0, $4041 = 0.0, $4042 = 0.0, $4043 = 0, $4044 = 0, $4045 = 0.0, $4046 = 0.0, $4047 = 0;
 var $4048 = 0, $4049 = 0.0, $405 = 0.0, $4050 = 0.0, $4051 = 0, $4052 = 0, $4053 = 0.0, $4054 = 0.0, $4055 = 0, $4056 = 0, $4057 = 0.0, $4058 = 0.0, $4059 = 0, $406 = 0.0, $4060 = 0, $4061 = 0.0, $4062 = 0.0, $4063 = 0, $4064 = 0, $4065 = 0.0;
 var $4066 = 0.0, $4067 = 0, $4068 = 0, $4069 = 0.0, $407 = 0.0, $4070 = 0.0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0.0, $4075 = 0.0, $4076 = 0, $4077 = 0, $4078 = 0.0, $4079 = 0.0, $408 = 0, $4080 = 0.0, $4081 = 0, $4082 = 0, $4083 = 0.0;
 var $4084 = 0.0, $4085 = 0, $4086 = 0.0, $4087 = 0.0, $4088 = 0.0, $4089 = 0.0, $409 = 0, $4090 = 0.0, $4091 = 0.0, $4092 = 0, $4093 = 0, $4094 = 0.0, $4095 = 0, $4096 = 0.0, $4097 = 0.0, $4098 = 0.0, $4099 = 0.0, $41 = 0.0, $410 = 0.0, $4100 = 0.0;
 var $4101 = 0.0, $4102 = 0.0, $4103 = 0.0, $4104 = 0, $4105 = 0.0, $4106 = 0.0, $4107 = 0.0, $4108 = 0, $4109 = 0.0, $411 = 0.0, $4110 = 0.0, $4111 = 0, $4112 = 0, $4113 = 0, $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0;
 var $412 = 0.0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0.0, $4130 = 0, $4131 = 0, $4132 = 0.0, $4133 = 0, $4134 = 0, $4135 = 0.0, $4136 = 0.0, $4137 = 0.0;
 var $4138 = 0, $4139 = 0, $414 = 0.0, $4140 = 0, $4141 = 0.0, $4142 = 0, $4143 = 0, $4144 = 0.0, $4145 = 0.0, $4146 = 0.0, $4147 = 0, $4148 = 0, $4149 = 0, $415 = 0.0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0;
 var $4156 = 0, $4157 = 0, $4158 = 0.0, $4159 = 0, $416 = 0.0, $4160 = 0, $4161 = 0, $4162 = 0.0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0.0, $4167 = 0, $4168 = 0, $4169 = 0.0, $417 = 0, $4170 = 0.0, $4171 = 0, $4172 = 0.0, $4173 = 0.0;
 var $4174 = 0, $4175 = 0.0, $4176 = 0.0, $4177 = 0.0, $4178 = 0.0, $4179 = 0.0, $418 = 0.0, $4180 = 0.0, $4181 = 0.0, $4182 = 0, $4183 = 0.0, $4184 = 0.0, $4185 = 0.0, $4186 = 0.0, $4187 = 0, $4188 = 0.0, $4189 = 0.0, $419 = 0.0, $4190 = 0, $4191 = 0;
 var $4192 = 0.0, $4193 = 0.0, $4194 = 0.0, $4195 = 0, $4196 = 0.0, $4197 = 0.0, $4198 = 0, $4199 = 0, $42 = 0.0, $420 = 0.0, $4200 = 0.0, $4201 = 0.0, $4202 = 0.0, $4203 = 0, $4204 = 0.0, $4205 = 0.0, $4206 = 0, $4207 = 0, $4208 = 0.0, $4209 = 0.0;
 var $421 = 0.0, $4210 = 0.0, $4211 = 0.0, $4212 = 0, $4213 = 0.0, $4214 = 0.0, $4215 = 0, $4216 = 0, $4217 = 0.0, $4218 = 0.0, $4219 = 0.0, $422 = 0, $4220 = 0.0, $4221 = 0, $4222 = 0.0, $4223 = 0.0, $4224 = 0, $4225 = 0.0, $4226 = 0.0, $4227 = 0;
 var $4228 = 0.0, $4229 = 0, $423 = 0, $4230 = 0.0, $4231 = 0.0, $4232 = 0.0, $4233 = 0, $4234 = 0.0, $4235 = 0.0, $4236 = 0.0, $4237 = 0.0, $4238 = 0.0, $4239 = 0, $424 = 0.0, $4240 = 0.0, $4241 = 0.0, $4242 = 0, $4243 = 0.0, $4244 = 0, $4245 = 0.0;
 var $4246 = 0.0, $4247 = 0.0, $4248 = 0, $4249 = 0.0, $425 = 0.0, $4250 = 0.0, $4251 = 0.0, $4252 = 0.0, $4253 = 0.0, $4254 = 0, $4255 = 0.0, $4256 = 0.0, $4257 = 0, $4258 = 0, $4259 = 0.0, $426 = 0.0, $4260 = 0.0, $4261 = 0, $4262 = 0, $4263 = 0.0;
 var $4264 = 0.0, $4265 = 0, $4266 = 0, $4267 = 0.0, $4268 = 0.0, $4269 = 0, $427 = 0, $4270 = 0, $4271 = 0.0, $4272 = 0.0, $4273 = 0, $4274 = 0, $4275 = 0.0, $4276 = 0.0, $4277 = 0, $4278 = 0, $4279 = 0.0, $428 = 0.0, $4280 = 0.0, $4281 = 0;
 var $4282 = 0, $4283 = 0.0, $4284 = 0.0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0.0, $4290 = 0.0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0.0;
 var $430 = 0.0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0.0, $4310 = 0, $4311 = 0, $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0;
 var $4318 = 0, $4319 = 0, $432 = 0.0, $4320 = 0.0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0.0, $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0;
 var $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0.0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4347 = 0, $4348 = 0, $4349 = 0, $435 = 0.0, $4350 = 0.0, $4351 = 0, $4352 = 0, $4353 = 0;
 var $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4365 = 0, $4366 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0;
 var $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0.0, $4380 = 0.0, $4381 = 0, $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0;
 var $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0.0, $440 = 0.0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0;
 var $4408 = 0, $4409 = 0, $441 = 0.0, $4410 = 0.0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0;
 var $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0.0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0.0, $4440 = 0.0, $4441 = 0, $4442 = 0, $4443 = 0;
 var $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0, $4460 = 0, $4461 = 0;
 var $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0.0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0.0;
 var $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0.0, $4489 = 0.0, $449 = 0, $4490 = 0, $4491 = 0.0, $4492 = 0.0, $4493 = 0, $4494 = 0.0, $4495 = 0, $4496 = 0.0, $4497 = 0.0, $4498 = 0.0;
 var $4499 = 0, $45 = 0, $450 = 0, $4500 = 0.0, $4501 = 0, $4502 = 0.0, $4503 = 0.0, $4504 = 0, $4505 = 0.0, $4506 = 0, $4507 = 0.0, $4508 = 0.0, $4509 = 0.0, $451 = 0.0, $4510 = 0, $4511 = 0.0, $4512 = 0, $4513 = 0.0, $4514 = 0.0, $4515 = 0;
 var $4516 = 0.0, $4517 = 0, $4518 = 0.0, $4519 = 0.0, $452 = 0.0, $4520 = 0.0, $4521 = 0, $4522 = 0.0, $4523 = 0, $4524 = 0.0, $4525 = 0.0, $4526 = 0.0, $4527 = 0, $4528 = 0.0, $4529 = 0, $453 = 0, $4530 = 0.0, $4531 = 0.0, $4532 = 0.0, $4533 = 0;
 var $4534 = 0.0, $4535 = 0.0, $4536 = 0.0, $4537 = 0.0, $4538 = 0.0, $4539 = 0.0, $454 = 0.0, $4540 = 0, $4541 = 0.0, $4542 = 0, $4543 = 0, $4544 = 0.0, $4545 = 0, $4546 = 0.0, $4547 = 0.0, $4548 = 0, $4549 = 0, $455 = 0, $4550 = 0.0, $4551 = 0;
 var $4552 = 0.0, $4553 = 0.0, $4554 = 0, $4555 = 0.0, $4556 = 0, $4557 = 0.0, $4558 = 0, $4559 = 0.0, $456 = 0.0, $4560 = 0, $4561 = 0.0, $4562 = 0, $4563 = 0.0, $4564 = 0, $4565 = 0.0, $4566 = 0, $4567 = 0.0, $4568 = 0, $4569 = 0.0, $457 = 0.0;
 var $4570 = 0, $4571 = 0.0, $4572 = 0.0, $4573 = 0, $4574 = 0, $4575 = 0.0, $4576 = 0.0, $4577 = 0, $4578 = 0, $4579 = 0.0, $458 = 0, $4580 = 0.0, $4581 = 0, $4582 = 0, $4583 = 0.0, $4584 = 0.0, $4585 = 0, $4586 = 0, $4587 = 0.0, $4588 = 0.0;
 var $4589 = 0, $459 = 0.0, $4590 = 0, $4591 = 0.0, $4592 = 0.0, $4593 = 0, $4594 = 0, $4595 = 0.0, $4596 = 0.0, $4597 = 0, $4598 = 0, $4599 = 0.0, $46 = 0.0, $460 = 0, $4600 = 0.0, $4601 = 0, $4602 = 0, $4603 = 0.0, $4604 = 0.0, $4605 = 0;
 var $4606 = 0, $4607 = 0.0, $4608 = 0.0, $4609 = 0, $461 = 0.0, $4610 = 0, $4611 = 0.0, $4612 = 0.0, $4613 = 0, $4614 = 0, $4615 = 0.0, $4616 = 0.0, $4617 = 0, $4618 = 0, $4619 = 0, $462 = 0.0, $4620 = 0.0, $4621 = 0.0, $4622 = 0.0, $4623 = 0;
 var $4624 = 0, $4625 = 0.0, $4626 = 0.0, $4627 = 0, $4628 = 0, $4629 = 0.0, $463 = 0, $4630 = 0.0, $4631 = 0.0, $4632 = 0, $4633 = 0.0, $4634 = 0.0, $4635 = 0.0, $4636 = 0.0, $4637 = 0.0, $4638 = 0, $4639 = 0, $464 = 0.0, $4640 = 0.0, $4641 = 0.0;
 var $4642 = 0, $4643 = 0.0, $4644 = 0.0, $4645 = 0.0, $4646 = 0.0, $4647 = 0.0, $4648 = 0.0, $4649 = 0.0, $465 = 0.0, $4650 = 0, $4651 = 0.0, $4652 = 0.0, $4653 = 0.0, $4654 = 0, $4655 = 0.0, $4656 = 0.0, $4657 = 0, $4658 = 0, $4659 = 0, $466 = 0;
 var $4660 = 0, $4661 = 0, $4662 = 0, $4663 = 0, $4664 = 0, $4665 = 0, $4666 = 0, $4667 = 0, $4668 = 0, $4669 = 0, $467 = 0.0, $4670 = 0, $4671 = 0, $4672 = 0, $4673 = 0, $4674 = 0, $4675 = 0, $4676 = 0, $4677 = 0, $4678 = 0.0;
 var $4679 = 0, $468 = 0, $4680 = 0, $4681 = 0.0, $4682 = 0.0, $4683 = 0.0, $4684 = 0, $4685 = 0, $4686 = 0, $4687 = 0.0, $4688 = 0, $4689 = 0, $469 = 0.0, $4690 = 0.0, $4691 = 0.0, $4692 = 0.0, $4693 = 0, $4694 = 0, $4695 = 0, $4696 = 0;
 var $4697 = 0, $4698 = 0, $4699 = 0, $47 = 0, $470 = 0.0, $4700 = 0, $4701 = 0, $4702 = 0, $4703 = 0, $4704 = 0.0, $4705 = 0, $4706 = 0, $4707 = 0, $4708 = 0.0, $4709 = 0, $471 = 0, $4710 = 0, $4711 = 0, $4712 = 0.0, $4713 = 0;
 var $4714 = 0, $4715 = 0.0, $4716 = 0.0, $4717 = 0, $4718 = 0.0, $4719 = 0.0, $472 = 0.0, $4720 = 0, $4721 = 0.0, $4722 = 0.0, $4723 = 0.0, $4724 = 0.0, $4725 = 0.0, $4726 = 0.0, $4727 = 0.0, $4728 = 0, $4729 = 0.0, $473 = 0, $4730 = 0.0, $4731 = 0.0;
 var $4732 = 0.0, $4733 = 0, $4734 = 0.0, $4735 = 0.0, $4736 = 0, $4737 = 0, $4738 = 0.0, $4739 = 0, $474 = 0.0, $4740 = 0.0, $4741 = 0.0, $4742 = 0.0, $4743 = 0.0, $4744 = 0, $4745 = 0, $4746 = 0.0, $4747 = 0, $4748 = 0.0, $4749 = 0.0, $475 = 0.0;
 var $4750 = 0.0, $4751 = 0.0, $4752 = 0, $4753 = 0, $4754 = 0.0, $4755 = 0.0, $4756 = 0.0, $4757 = 0.0, $4758 = 0, $4759 = 0.0, $476 = 0, $4760 = 0.0, $4761 = 0, $4762 = 0, $4763 = 0.0, $4764 = 0.0, $4765 = 0.0, $4766 = 0.0, $4767 = 0, $4768 = 0.0;
 var $4769 = 0.0, $477 = 0.0, $4770 = 0, $4771 = 0, $4772 = 0.0, $4773 = 0, $4774 = 0.0, $4775 = 0.0, $4776 = 0, $4777 = 0.0, $4778 = 0.0, $4779 = 0.0, $478 = 0, $4780 = 0.0, $4781 = 0.0, $4782 = 0.0, $4783 = 0.0, $4784 = 0.0, $4785 = 0, $4786 = 0;
 var $4787 = 0.0, $4788 = 0, $4789 = 0.0, $479 = 0.0, $4790 = 0.0, $4791 = 0, $4792 = 0.0, $4793 = 0.0, $4794 = 0.0, $4795 = 0.0, $4796 = 0.0, $4797 = 0.0, $4798 = 0.0, $4799 = 0.0, $48 = 0.0, $480 = 0.0, $4800 = 0, $4801 = 0.0, $4802 = 0.0, $4803 = 0;
 var $4804 = 0, $4805 = 0.0, $4806 = 0.0, $4807 = 0, $4808 = 0, $4809 = 0.0, $481 = 0.0, $4810 = 0.0, $4811 = 0, $4812 = 0, $4813 = 0.0, $4814 = 0.0, $4815 = 0, $4816 = 0, $4817 = 0.0, $4818 = 0.0, $4819 = 0, $482 = 0.0, $4820 = 0, $4821 = 0.0;
 var $4822 = 0.0, $4823 = 0, $4824 = 0, $4825 = 0.0, $4826 = 0.0, $4827 = 0, $4828 = 0, $4829 = 0.0, $483 = 0.0, $4830 = 0.0, $4831 = 0, $4832 = 0, $4833 = 0, $4834 = 0, $4835 = 0, $4836 = 0.0, $4837 = 0, $4838 = 0, $4839 = 0, $484 = 0;
 var $4840 = 0, $4841 = 0, $4842 = 0, $4843 = 0, $4844 = 0, $4845 = 0, $4846 = 0, $4847 = 0, $4848 = 0, $4849 = 0, $485 = 0.0, $4850 = 0, $4851 = 0, $4852 = 0, $4853 = 0, $4854 = 0, $4855 = 0, $4856 = 0, $4857 = 0, $4858 = 0;
 var $4859 = 0, $486 = 0.0, $4860 = 0, $4861 = 0, $4862 = 0, $4863 = 0, $4864 = 0, $4865 = 0, $4866 = 0.0, $4867 = 0, $4868 = 0, $4869 = 0, $487 = 0.0, $4870 = 0, $4871 = 0, $4872 = 0, $4873 = 0, $4874 = 0, $4875 = 0, $4876 = 0;
 var $4877 = 0, $4878 = 0, $4879 = 0, $488 = 0, $4880 = 0, $4881 = 0, $4882 = 0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0, $4887 = 0, $4888 = 0, $4889 = 0, $489 = 0.0, $4890 = 0, $4891 = 0, $4892 = 0, $4893 = 0, $4894 = 0;
 var $4895 = 0, $4896 = 0.0, $4897 = 0, $4898 = 0, $4899 = 0, $49 = 0.0, $490 = 0.0, $4900 = 0, $4901 = 0, $4902 = 0, $4903 = 0, $4904 = 0, $4905 = 0, $4906 = 0, $4907 = 0, $4908 = 0, $4909 = 0, $491 = 0.0, $4910 = 0, $4911 = 0;
 var $4912 = 0, $4913 = 0, $4914 = 0, $4915 = 0, $4916 = 0, $4917 = 0, $4918 = 0, $4919 = 0, $492 = 0, $4920 = 0, $4921 = 0, $4922 = 0, $4923 = 0, $4924 = 0, $4925 = 0, $4926 = 0.0, $4927 = 0, $4928 = 0, $4929 = 0, $493 = 0.0;
 var $4930 = 0, $4931 = 0, $4932 = 0, $4933 = 0, $4934 = 0, $4935 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $494 = 0.0, $4940 = 0, $4941 = 0, $4942 = 0, $4943 = 0, $4944 = 0, $4945 = 0, $4946 = 0, $4947 = 0, $4948 = 0;
 var $4949 = 0, $495 = 0.0, $4950 = 0, $4951 = 0, $4952 = 0, $4953 = 0, $4954 = 0, $4955 = 0, $4956 = 0.0, $4957 = 0, $4958 = 0, $4959 = 0, $496 = 0.0, $4960 = 0, $4961 = 0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0;
 var $4967 = 0, $4968 = 0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0, $4972 = 0, $4973 = 0, $4974 = 0, $4975 = 0, $4976 = 0, $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0.0, $4980 = 0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0;
 var $4985 = 0, $4986 = 0.0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0.0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0.0, $500 = 0.0, $5000 = 0;
 var $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0.0, $5010 = 0, $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0;
 var $502 = 0.0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0, $503 = 0.0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0.0, $5035 = 0, $5036 = 0.0, $5037 = 0.0;
 var $5038 = 0, $5039 = 0.0, $504 = 0.0, $5040 = 0.0, $5041 = 0, $5042 = 0.0, $5043 = 0.0, $5044 = 0.0, $5045 = 0.0, $5046 = 0, $5047 = 0.0, $5048 = 0, $5049 = 0.0, $505 = 0, $5050 = 0.0, $5051 = 0.0, $5052 = 0, $5053 = 0.0, $5054 = 0.0, $5055 = 0.0;
 var $5056 = 0.0, $5057 = 0.0, $5058 = 0, $5059 = 0.0, $506 = 0.0, $5060 = 0.0, $5061 = 0, $5062 = 0, $5063 = 0.0, $5064 = 0, $5065 = 0, $5066 = 0.0, $5067 = 0, $5068 = 0, $5069 = 0.0, $507 = 0.0, $5070 = 0, $5071 = 0, $5072 = 0.0, $5073 = 0;
 var $5074 = 0.0, $5075 = 0, $5076 = 0.0, $5077 = 0, $5078 = 0.0, $5079 = 0, $508 = 0.0, $5080 = 0.0, $5081 = 0, $5082 = 0.0, $5083 = 0.0, $5084 = 0.0, $5085 = 0, $5086 = 0.0, $5087 = 0.0, $5088 = 0, $5089 = 0.0, $509 = 0.0, $5090 = 0.0, $5091 = 0.0;
 var $5092 = 0.0, $5093 = 0.0, $5094 = 0, $5095 = 0.0, $5096 = 0.0, $5097 = 0, $5098 = 0, $5099 = 0.0, $51 = 0, $510 = 0, $5100 = 0.0, $5101 = 0, $5102 = 0, $5103 = 0.0, $5104 = 0.0, $5105 = 0, $5106 = 0, $5107 = 0.0, $5108 = 0.0, $5109 = 0;
 var $511 = 0, $5110 = 0, $5111 = 0.0, $5112 = 0.0, $5113 = 0, $5114 = 0, $5115 = 0.0, $5116 = 0.0, $5117 = 0, $5118 = 0, $5119 = 0.0, $512 = 0.0, $5120 = 0.0, $5121 = 0, $5122 = 0, $5123 = 0.0, $5124 = 0.0, $5125 = 0, $5126 = 0, $5127 = 0.0;
 var $5128 = 0.0, $5129 = 0, $513 = 0.0, $5130 = 0, $5131 = 0.0, $5132 = 0.0, $5133 = 0, $5134 = 0, $5135 = 0, $5136 = 0.0, $5137 = 0.0, $5138 = 0, $5139 = 0.0, $514 = 0.0, $5140 = 0.0, $5141 = 0.0, $5142 = 0.0, $5143 = 0, $5144 = 0.0, $5145 = 0.0;
 var $5146 = 0, $5147 = 0.0, $5148 = 0.0, $5149 = 0.0, $515 = 0, $5150 = 0.0, $5151 = 0, $5152 = 0, $5153 = 0.0, $5154 = 0.0, $5155 = 0.0, $5156 = 0.0, $5157 = 0, $5158 = 0.0, $5159 = 0, $516 = 0.0, $5160 = 0.0, $5161 = 0.0, $5162 = 0.0, $5163 = 0.0;
 var $5164 = 0, $5165 = 0, $5166 = 0.0, $5167 = 0.0, $5168 = 0.0, $5169 = 0.0, $517 = 0.0, $5170 = 0, $5171 = 0.0, $5172 = 0.0, $5173 = 0, $5174 = 0.0, $5175 = 0.0, $5176 = 0.0, $5177 = 0.0, $5178 = 0, $5179 = 0.0, $518 = 0.0, $5180 = 0.0, $5181 = 0.0;
 var $5182 = 0.0, $5183 = 0, $5184 = 0.0, $5185 = 0, $5186 = 0.0, $5187 = 0.0, $5188 = 0.0, $5189 = 0.0, $519 = 0.0, $5190 = 0.0, $5191 = 0.0, $5192 = 0.0, $5193 = 0, $5194 = 0, $5195 = 0.0, $5196 = 0.0, $5197 = 0.0, $5198 = 0.0, $5199 = 0, $52 = 0.0;
 var $520 = 0.0, $5200 = 0.0, $5201 = 0.0, $5202 = 0, $5203 = 0.0, $5204 = 0.0, $5205 = 0.0, $5206 = 0, $5207 = 0.0, $5208 = 0.0, $5209 = 0.0, $521 = 0.0, $5210 = 0.0, $5211 = 0, $5212 = 0.0, $5213 = 0, $5214 = 0.0, $5215 = 0.0, $5216 = 0.0, $5217 = 0.0;
 var $5218 = 0.0, $5219 = 0.0, $522 = 0.0, $5220 = 0.0, $5221 = 0.0, $5222 = 0.0, $5223 = 0, $5224 = 0.0, $5225 = 0.0, $5226 = 0.0, $5227 = 0, $5228 = 0.0, $5229 = 0.0, $523 = 0.0, $5230 = 0, $5231 = 0, $5232 = 0, $5233 = 0, $5234 = 0, $5235 = 0;
 var $5236 = 0, $5237 = 0, $5238 = 0, $5239 = 0, $524 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0, $5246 = 0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0.0, $5250 = 0, $5251 = 0.0, $5252 = 0, $5253 = 0;
 var $5254 = 0.0, $5255 = 0.0, $5256 = 0.0, $5257 = 0, $5258 = 0, $5259 = 0, $526 = 0.0, $5260 = 0.0, $5261 = 0, $5262 = 0, $5263 = 0.0, $5264 = 0.0, $5265 = 0.0, $5266 = 0, $5267 = 0, $5268 = 0, $5269 = 0, $527 = 0.0, $5270 = 0, $5271 = 0;
 var $5272 = 0, $5273 = 0, $5274 = 0, $5275 = 0, $5276 = 0, $5277 = 0.0, $5278 = 0, $5279 = 0, $528 = 0, $5280 = 0, $5281 = 0.0, $5282 = 0, $5283 = 0, $5284 = 0, $5285 = 0.0, $5286 = 0, $5287 = 0, $5288 = 0.0, $5289 = 0.0, $529 = 0.0;
 var $5290 = 0, $5291 = 0.0, $5292 = 0.0, $5293 = 0, $5294 = 0.0, $5295 = 0.0, $5296 = 0.0, $5297 = 0.0, $5298 = 0, $5299 = 0.0, $53 = 0.0, $530 = 0.0, $5300 = 0.0, $5301 = 0.0, $5302 = 0.0, $5303 = 0.0, $5304 = 0, $5305 = 0.0, $5306 = 0.0, $5307 = 0.0;
 var $5308 = 0, $5309 = 0.0, $531 = 0.0, $5310 = 0, $5311 = 0.0, $5312 = 0.0, $5313 = 0.0, $5314 = 0.0, $5315 = 0, $5316 = 0.0, $5317 = 0, $5318 = 0.0, $5319 = 0.0, $532 = 0.0, $5320 = 0.0, $5321 = 0, $5322 = 0.0, $5323 = 0.0, $5324 = 0.0, $5325 = 0;
 var $5326 = 0.0, $5327 = 0.0, $5328 = 0.0, $5329 = 0.0, $533 = 0, $5330 = 0, $5331 = 0.0, $5332 = 0.0, $5333 = 0, $5334 = 0, $5335 = 0.0, $5336 = 0, $5337 = 0.0, $5338 = 0.0, $5339 = 0, $534 = 0.0, $5340 = 0.0, $5341 = 0, $5342 = 0.0, $5343 = 0.0;
 var $5344 = 0.0, $5345 = 0.0, $5346 = 0.0, $5347 = 0.0, $5348 = 0, $5349 = 0, $535 = 0.0, $5350 = 0.0, $5351 = 0, $5352 = 0.0, $5353 = 0.0, $5354 = 0, $5355 = 0.0, $5356 = 0.0, $5357 = 0.0, $5358 = 0.0, $5359 = 0.0, $536 = 0.0, $5360 = 0.0, $5361 = 0.0;
 var $5362 = 0.0, $5363 = 0, $5364 = 0, $5365 = 0.0, $5366 = 0.0, $5367 = 0.0, $5368 = 0.0, $5369 = 0, $537 = 0.0, $5370 = 0.0, $5371 = 0, $5372 = 0.0, $5373 = 0.0, $5374 = 0.0, $5375 = 0.0, $5376 = 0.0, $5377 = 0.0, $5378 = 0, $5379 = 0.0, $538 = 0;
 var $5380 = 0, $5381 = 0.0, $5382 = 0.0, $5383 = 0.0, $5384 = 0.0, $5385 = 0.0, $5386 = 0, $5387 = 0.0, $5388 = 0, $5389 = 0.0, $539 = 0, $5390 = 0.0, $5391 = 0.0, $5392 = 0.0, $5393 = 0.0, $5394 = 0, $5395 = 0.0, $5396 = 0.0, $5397 = 0.0, $5398 = 0.0;
 var $5399 = 0, $54 = 0.0, $540 = 0.0, $5400 = 0.0, $5401 = 0.0, $5402 = 0.0, $5403 = 0.0, $5404 = 0.0, $5405 = 0, $5406 = 0.0, $5407 = 0.0, $5408 = 0, $5409 = 0.0, $541 = 0, $5410 = 0.0, $5411 = 0, $5412 = 0, $5413 = 0.0, $5414 = 0.0, $5415 = 0;
 var $5416 = 0, $5417 = 0.0, $5418 = 0.0, $5419 = 0, $542 = 0.0, $5420 = 0, $5421 = 0.0, $5422 = 0.0, $5423 = 0, $5424 = 0, $5425 = 0.0, $5426 = 0.0, $5427 = 0, $5428 = 0, $5429 = 0.0, $543 = 0.0, $5430 = 0.0, $5431 = 0, $5432 = 0, $5433 = 0.0;
 var $5434 = 0.0, $5435 = 0, $5436 = 0, $5437 = 0.0, $5438 = 0.0, $5439 = 0, $544 = 0, $5440 = 0, $5441 = 0, $5442 = 0, $5443 = 0, $5444 = 0.0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0.0, $5450 = 0, $5451 = 0;
 var $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5457 = 0, $5458 = 0, $5459 = 0, $546 = 0.0, $5460 = 0, $5461 = 0, $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0, $547 = 0.0;
 var $5470 = 0, $5471 = 0, $5472 = 0, $5473 = 0, $5474 = 0.0, $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0.0, $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5487 = 0, $5488 = 0;
 var $5489 = 0, $549 = 0.0, $5490 = 0, $5491 = 0, $5492 = 0, $5493 = 0, $5494 = 0, $5495 = 0, $5496 = 0, $5497 = 0, $5498 = 0, $5499 = 0, $55 = 0, $550 = 0, $5500 = 0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0.0, $5505 = 0;
 var $5506 = 0, $5507 = 0, $5508 = 0, $5509 = 0, $551 = 0, $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0, $5515 = 0, $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0.0, $5520 = 0, $5521 = 0, $5522 = 0, $5523 = 0;
 var $5524 = 0, $5525 = 0, $5526 = 0, $5527 = 0, $5528 = 0, $5529 = 0, $553 = 0, $5530 = 0, $5531 = 0, $5532 = 0, $5533 = 0, $5534 = 0.0, $5535 = 0, $5536 = 0, $5537 = 0, $5538 = 0, $5539 = 0, $554 = 0.0, $5540 = 0, $5541 = 0;
 var $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5547 = 0, $5548 = 0, $5549 = 0, $555 = 0.0, $5550 = 0, $5551 = 0, $5552 = 0, $5553 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5557 = 0, $5558 = 0, $5559 = 0, $556 = 0;
 var $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0, $5564 = 0.0, $5565 = 0, $5566 = 0, $5567 = 0, $5568 = 0, $5569 = 0, $557 = 0.0, $5570 = 0, $5571 = 0, $5572 = 0, $5573 = 0, $5574 = 0, $5575 = 0, $5576 = 0, $5577 = 0, $5578 = 0;
 var $5579 = 0, $558 = 0.0, $5580 = 0, $5581 = 0, $5582 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0, $5588 = 0, $5589 = 0, $559 = 0.0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0.0, $5595 = 0, $5596 = 0;
 var $5597 = 0, $5598 = 0, $5599 = 0, $56 = 0.0, $560 = 0.0, $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0.0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0;
 var $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0, $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0, $5628 = 0, $5629 = 0, $563 = 0, $5630 = 0, $5631 = 0;
 var $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0, $5637 = 0, $5638 = 0, $5639 = 0, $564 = 0.0, $5640 = 0, $5641 = 0, $5642 = 0.0, $5643 = 0.0, $5644 = 0, $5645 = 0.0, $5646 = 0.0, $5647 = 0, $5648 = 0.0, $5649 = 0, $565 = 0.0;
 var $5650 = 0.0, $5651 = 0.0, $5652 = 0.0, $5653 = 0, $5654 = 0.0, $5655 = 0, $5656 = 0.0, $5657 = 0.0, $5658 = 0, $5659 = 0.0, $566 = 0.0, $5660 = 0, $5661 = 0.0, $5662 = 0.0, $5663 = 0.0, $5664 = 0, $5665 = 0.0, $5666 = 0.0, $5667 = 0.0, $5668 = 0.0;
 var $5669 = 0.0, $567 = 0.0, $5670 = 0.0, $5671 = 0, $5672 = 0.0, $5673 = 0.0, $5674 = 0, $5675 = 0, $5676 = 0.0, $5677 = 0, $5678 = 0, $5679 = 0.0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0.0, $5683 = 0, $5684 = 0, $5685 = 0.0, $5686 = 0;
 var $5687 = 0.0, $5688 = 0, $5689 = 0.0, $569 = 0.0, $5690 = 0, $5691 = 0.0, $5692 = 0, $5693 = 0.0, $5694 = 0, $5695 = 0.0, $5696 = 0.0, $5697 = 0, $5698 = 0, $5699 = 0.0, $57 = 0.0, $570 = 0, $5700 = 0.0, $5701 = 0, $5702 = 0, $5703 = 0.0;
 var $5704 = 0.0, $5705 = 0, $5706 = 0, $5707 = 0.0, $5708 = 0.0, $5709 = 0, $571 = 0.0, $5710 = 0, $5711 = 0.0, $5712 = 0.0, $5713 = 0, $5714 = 0, $5715 = 0.0, $5716 = 0.0, $5717 = 0, $5718 = 0, $5719 = 0.0, $572 = 0.0, $5720 = 0.0, $5721 = 0;
 var $5722 = 0, $5723 = 0.0, $5724 = 0.0, $5725 = 0, $5726 = 0, $5727 = 0.0, $5728 = 0.0, $5729 = 0, $573 = 0.0, $5730 = 0, $5731 = 0.0, $5732 = 0.0, $5733 = 0, $5734 = 0, $5735 = 0, $5736 = 0.0, $5737 = 0.0, $5738 = 0, $5739 = 0.0, $574 = 0;
 var $5740 = 0.0, $5741 = 0.0, $5742 = 0.0, $5743 = 0, $5744 = 0.0, $5745 = 0, $5746 = 0.0, $5747 = 0.0, $5748 = 0.0, $5749 = 0.0, $575 = 0, $5750 = 0, $5751 = 0, $5752 = 0.0, $5753 = 0.0, $5754 = 0.0, $5755 = 0.0, $5756 = 0, $5757 = 0.0, $5758 = 0.0;
 var $5759 = 0, $576 = 0.0, $5760 = 0.0, $5761 = 0.0, $5762 = 0.0, $5763 = 0.0, $5764 = 0, $5765 = 0, $5766 = 0.0, $5767 = 0.0, $5768 = 0.0, $5769 = 0.0, $577 = 0.0, $5770 = 0, $5771 = 0.0, $5772 = 0, $5773 = 0.0, $5774 = 0.0, $5775 = 0.0, $5776 = 0.0;
 var $5777 = 0, $5778 = 0.0, $5779 = 0.0, $578 = 0.0, $5780 = 0.0, $5781 = 0.0, $5782 = 0, $5783 = 0.0, $5784 = 0.0, $5785 = 0, $5786 = 0.0, $5787 = 0.0, $5788 = 0.0, $5789 = 0.0, $579 = 0, $5790 = 0.0, $5791 = 0.0, $5792 = 0.0, $5793 = 0, $5794 = 0;
 var $5795 = 0.0, $5796 = 0.0, $5797 = 0.0, $5798 = 0.0, $5799 = 0, $58 = 0.0, $580 = 0.0, $5800 = 0.0, $5801 = 0, $5802 = 0.0, $5803 = 0.0, $5804 = 0.0, $5805 = 0, $5806 = 0.0, $5807 = 0.0, $5808 = 0.0, $5809 = 0.0, $581 = 0.0, $5810 = 0, $5811 = 0.0;
 var $5812 = 0.0, $5813 = 0, $5814 = 0.0, $5815 = 0.0, $5816 = 0.0, $5817 = 0.0, $5818 = 0.0, $5819 = 0.0, $582 = 0.0, $5820 = 0.0, $5821 = 0.0, $5822 = 0.0, $5823 = 0, $5824 = 0.0, $5825 = 0.0, $5826 = 0.0, $5827 = 0, $5828 = 0.0, $5829 = 0.0, $583 = 0.0;
 var $5830 = 0, $5831 = 0, $5832 = 0, $5833 = 0, $5834 = 0, $5835 = 0, $5836 = 0, $5837 = 0, $5838 = 0, $5839 = 0, $584 = 0.0, $5840 = 0, $5841 = 0, $5842 = 0, $5843 = 0, $5844 = 0, $5845 = 0, $5846 = 0, $5847 = 0, $5848 = 0;
 var $5849 = 0, $585 = 0.0, $5850 = 0, $5851 = 0.0, $5852 = 0, $5853 = 0, $5854 = 0.0, $5855 = 0.0, $5856 = 0.0, $5857 = 0, $5858 = 0, $5859 = 0, $586 = 0.0, $5860 = 0.0, $5861 = 0, $5862 = 0, $5863 = 0.0, $5864 = 0.0, $5865 = 0.0, $5866 = 0;
 var $5867 = 0, $5868 = 0, $5869 = 0, $587 = 0.0, $5870 = 0, $5871 = 0, $5872 = 0, $5873 = 0, $5874 = 0, $5875 = 0, $5876 = 0, $5877 = 0.0, $5878 = 0, $5879 = 0, $588 = 0, $5880 = 0, $5881 = 0.0, $5882 = 0, $5883 = 0, $5884 = 0;
 var $5885 = 0.0, $5886 = 0, $5887 = 0, $5888 = 0.0, $5889 = 0.0, $589 = 0, $5890 = 0, $5891 = 0.0, $5892 = 0.0, $5893 = 0, $5894 = 0.0, $5895 = 0.0, $5896 = 0.0, $5897 = 0.0, $5898 = 0, $5899 = 0.0, $59 = 0, $590 = 0.0, $5900 = 0.0, $5901 = 0.0;
 var $5902 = 0.0, $5903 = 0.0, $5904 = 0, $5905 = 0.0, $5906 = 0.0, $5907 = 0.0, $5908 = 0, $5909 = 0.0, $591 = 0.0, $5910 = 0, $5911 = 0.0, $5912 = 0.0, $5913 = 0.0, $5914 = 0.0, $5915 = 0, $5916 = 0.0, $5917 = 0, $5918 = 0.0, $5919 = 0.0, $592 = 0.0;
 var $5920 = 0.0, $5921 = 0, $5922 = 0.0, $5923 = 0, $5924 = 0.0, $5925 = 0.0, $5926 = 0, $5927 = 0.0, $5928 = 0, $5929 = 0.0, $593 = 0, $5930 = 0.0, $5931 = 0.0, $5932 = 0.0, $5933 = 0.0, $5934 = 0.0, $5935 = 0, $5936 = 0, $5937 = 0.0, $5938 = 0.0;
 var $5939 = 0.0, $594 = 0.0, $5940 = 0, $5941 = 0.0, $5942 = 0.0, $5943 = 0, $5944 = 0.0, $5945 = 0.0, $5946 = 0.0, $5947 = 0.0, $5948 = 0, $5949 = 0, $595 = 0.0, $5950 = 0.0, $5951 = 0.0, $5952 = 0.0, $5953 = 0.0, $5954 = 0, $5955 = 0.0, $5956 = 0;
 var $5957 = 0.0, $5958 = 0.0, $5959 = 0.0, $596 = 0.0, $5960 = 0.0, $5961 = 0.0, $5962 = 0.0, $5963 = 0, $5964 = 0, $5965 = 0.0, $5966 = 0.0, $5967 = 0.0, $5968 = 0.0, $5969 = 0, $597 = 0.0, $5970 = 0.0, $5971 = 0, $5972 = 0.0, $5973 = 0.0, $5974 = 0.0;
 var $5975 = 0.0, $5976 = 0.0, $5977 = 0.0, $5978 = 0, $5979 = 0.0, $598 = 0.0, $5980 = 0, $5981 = 0.0, $5982 = 0.0, $5983 = 0.0, $5984 = 0.0, $5985 = 0.0, $5986 = 0, $5987 = 0.0, $5988 = 0, $5989 = 0.0, $599 = 0.0, $5990 = 0.0, $5991 = 0.0, $5992 = 0.0;
 var $5993 = 0.0, $5994 = 0, $5995 = 0, $5996 = 0.0, $5997 = 0.0, $5998 = 0.0, $5999 = 0.0, $6 = 0, $60 = 0.0, $600 = 0.0, $6000 = 0.0, $6001 = 0.0, $6002 = 0.0, $6003 = 0.0, $6004 = 0.0, $6005 = 0, $6006 = 0.0, $6007 = 0.0, $6008 = 0, $6009 = 0.0;
 var $601 = 0.0, $6010 = 0.0, $6011 = 0, $6012 = 0, $6013 = 0.0, $6014 = 0.0, $6015 = 0, $6016 = 0, $6017 = 0.0, $6018 = 0.0, $6019 = 0, $602 = 0, $6020 = 0, $6021 = 0.0, $6022 = 0.0, $6023 = 0, $6024 = 0, $6025 = 0.0, $6026 = 0.0, $6027 = 0;
 var $6028 = 0, $6029 = 0.0, $603 = 0.0, $6030 = 0.0, $6031 = 0, $6032 = 0, $6033 = 0.0, $6034 = 0.0, $6035 = 0, $6036 = 0, $6037 = 0.0, $6038 = 0.0, $6039 = 0, $604 = 0.0, $6040 = 0, $6041 = 0, $6042 = 0, $6043 = 0, $6044 = 0.0, $6045 = 0;
 var $6046 = 0, $6047 = 0, $6048 = 0, $6049 = 0, $605 = 0.0, $6050 = 0, $6051 = 0, $6052 = 0, $6053 = 0, $6054 = 0, $6055 = 0, $6056 = 0, $6057 = 0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0, $6062 = 0, $6063 = 0;
 var $6064 = 0, $6065 = 0, $6066 = 0, $6067 = 0, $6068 = 0, $6069 = 0, $607 = 0.0, $6070 = 0, $6071 = 0, $6072 = 0, $6073 = 0, $6074 = 0.0, $6075 = 0, $6076 = 0, $6077 = 0, $6078 = 0, $6079 = 0, $608 = 0.0, $6080 = 0, $6081 = 0;
 var $6082 = 0, $6083 = 0, $6084 = 0, $6085 = 0, $6086 = 0, $6087 = 0, $6088 = 0, $6089 = 0, $609 = 0.0, $6090 = 0, $6091 = 0, $6092 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6096 = 0, $6097 = 0, $6098 = 0, $6099 = 0, $61 = 0.0;
 var $610 = 0.0, $6100 = 0, $6101 = 0, $6102 = 0, $6103 = 0, $6104 = 0.0, $6105 = 0, $6106 = 0, $6107 = 0, $6108 = 0, $6109 = 0, $611 = 0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0;
 var $6118 = 0, $6119 = 0, $612 = 0.0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0.0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0.0, $6135 = 0;
 var $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0.0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0.0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0;
 var $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0, $6164 = 0.0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0, $617 = 0, $6170 = 0, $6171 = 0;
 var $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0, $6176 = 0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0.0, $6180 = 0, $6181 = 0, $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0.0;
 var $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0.0, $6195 = 0, $6196 = 0, $6197 = 0, $6198 = 0, $6199 = 0, $62 = 0.0, $620 = 0.0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0, $6206 = 0, $6207 = 0;
 var $6208 = 0, $6209 = 0, $621 = 0, $6210 = 0, $6211 = 0, $6212 = 0, $6213 = 0, $6214 = 0, $6215 = 0, $6216 = 0, $6217 = 0, $6218 = 0, $6219 = 0, $622 = 0, $6220 = 0, $6221 = 0, $6222 = 0, $6223 = 0, $6224 = 0, $6225 = 0;
 var $6226 = 0, $6227 = 0, $6228 = 0, $6229 = 0, $623 = 0.0, $6230 = 0, $6231 = 0, $6232 = 0, $6233 = 0, $6234 = 0, $6235 = 0, $6236 = 0, $6237 = 0, $6238 = 0, $6239 = 0, $624 = 0.0, $6240 = 0, $6241 = 0, $6242 = 0.0, $6243 = 0;
 var $6244 = 0.0, $6245 = 0.0, $6246 = 0.0, $6247 = 0, $6248 = 0.0, $6249 = 0.0, $625 = 0.0, $6250 = 0, $6251 = 0.0, $6252 = 0.0, $6253 = 0, $6254 = 0.0, $6255 = 0.0, $6256 = 0, $6257 = 0.0, $6258 = 0.0, $6259 = 0, $626 = 0.0, $6260 = 0.0, $6261 = 0.0;
 var $6262 = 0.0, $6263 = 0.0, $6264 = 0.0, $6265 = 0.0, $6266 = 0, $6267 = 0.0, $6268 = 0, $6269 = 0.0, $627 = 0.0, $6270 = 0, $6271 = 0, $6272 = 0.0, $6273 = 0, $6274 = 0.0, $6275 = 0, $6276 = 0, $6277 = 0.0, $6278 = 0, $6279 = 0.0, $628 = 0;
 var $6280 = 0.0, $6281 = 0, $6282 = 0.0, $6283 = 0.0, $6284 = 0.0, $6285 = 0.0, $6286 = 0.0, $6287 = 0, $6288 = 0, $6289 = 0.0, $629 = 0.0, $6290 = 0.0, $6291 = 0.0, $6292 = 0.0, $6293 = 0, $6294 = 0.0, $6295 = 0.0, $6296 = 0.0, $6297 = 0.0, $6298 = 0.0;
 var $6299 = 0, $63 = 0, $630 = 0.0, $6300 = 0, $6301 = 0.0, $6302 = 0.0, $6303 = 0.0, $6304 = 0.0, $6305 = 0, $6306 = 0.0, $6307 = 0.0, $6308 = 0.0, $6309 = 0.0, $631 = 0, $6310 = 0.0, $6311 = 0, $6312 = 0, $6313 = 0.0, $6314 = 0.0, $6315 = 0.0;
 var $6316 = 0.0, $6317 = 0.0, $6318 = 0, $6319 = 0.0, $632 = 0, $6320 = 0.0, $6321 = 0.0, $6322 = 0.0, $6323 = 0.0, $6324 = 0, $6325 = 0.0, $6326 = 0.0, $6327 = 0, $6328 = 0, $6329 = 0.0, $633 = 0.0, $6330 = 0.0, $6331 = 0, $6332 = 0, $6333 = 0.0;
 var $6334 = 0.0, $6335 = 0, $6336 = 0, $6337 = 0.0, $6338 = 0.0, $6339 = 0, $634 = 0, $6340 = 0, $6341 = 0.0, $6342 = 0.0, $6343 = 0, $6344 = 0, $6345 = 0.0, $6346 = 0.0, $6347 = 0, $6348 = 0, $6349 = 0.0, $635 = 0, $6350 = 0.0, $6351 = 0;
 var $6352 = 0, $6353 = 0.0, $6354 = 0.0, $6355 = 0, $6356 = 0, $6357 = 0.0, $6358 = 0.0, $6359 = 0, $636 = 0.0, $6360 = 0, $6361 = 0.0, $6362 = 0.0, $6363 = 0, $6364 = 0, $6365 = 0, $6366 = 0.0, $6367 = 0.0, $6368 = 0, $6369 = 0, $637 = 0;
 var $6370 = 0.0, $6371 = 0.0, $6372 = 0, $6373 = 0, $6374 = 0.0, $6375 = 0.0, $6376 = 0, $6377 = 0.0, $6378 = 0.0, $6379 = 0.0, $638 = 0, $6380 = 0.0, $6381 = 0.0, $6382 = 0, $6383 = 0, $6384 = 0.0, $6385 = 0, $6386 = 0.0, $6387 = 0.0, $6388 = 0.0;
 var $6389 = 0.0, $639 = 0.0, $6390 = 0.0, $6391 = 0.0, $6392 = 0.0, $6393 = 0, $6394 = 0.0, $6395 = 0.0, $6396 = 0.0, $6397 = 0, $6398 = 0.0, $6399 = 0.0, $64 = 0.0, $640 = 0, $6400 = 0, $6401 = 0, $6402 = 0, $6403 = 0, $6404 = 0, $6405 = 0;
 var $6406 = 0, $6407 = 0, $6408 = 0, $6409 = 0, $641 = 0, $6410 = 0, $6411 = 0, $6412 = 0, $6413 = 0, $6414 = 0, $6415 = 0, $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0.0, $6420 = 0, $6421 = 0.0, $6422 = 0, $6423 = 0;
 var $6424 = 0.0, $6425 = 0.0, $6426 = 0.0, $6427 = 0, $6428 = 0, $6429 = 0, $643 = 0, $6430 = 0.0, $6431 = 0, $6432 = 0, $6433 = 0.0, $6434 = 0.0, $6435 = 0.0, $6436 = 0, $6437 = 0, $6438 = 0, $6439 = 0, $644 = 0.0, $6440 = 0, $6441 = 0;
 var $6442 = 0, $6443 = 0, $6444 = 0, $6445 = 0, $6446 = 0, $6447 = 0.0, $6448 = 0, $6449 = 0, $645 = 0.0, $6450 = 0, $6451 = 0.0, $6452 = 0, $6453 = 0, $6454 = 0, $6455 = 0.0, $6456 = 0, $6457 = 0, $6458 = 0.0, $6459 = 0.0, $646 = 0;
 var $6460 = 0, $6461 = 0.0, $6462 = 0.0, $6463 = 0, $6464 = 0.0, $6465 = 0.0, $6466 = 0.0, $6467 = 0.0, $6468 = 0, $6469 = 0.0, $647 = 0, $6470 = 0, $6471 = 0.0, $6472 = 0.0, $6473 = 0.0, $6474 = 0.0, $6475 = 0.0, $6476 = 0.0, $6477 = 0, $6478 = 0.0;
 var $6479 = 0.0, $648 = 0.0, $6480 = 0, $6481 = 0.0, $6482 = 0.0, $6483 = 0, $6484 = 0.0, $6485 = 0.0, $6486 = 0, $6487 = 0, $6488 = 0.0, $6489 = 0.0, $649 = 0.0, $6490 = 0.0, $6491 = 0, $6492 = 0.0, $6493 = 0.0, $6494 = 0, $6495 = 0, $6496 = 0.0;
 var $6497 = 0.0, $6498 = 0.0, $6499 = 0.0, $65 = 0.0, $650 = 0, $6500 = 0, $6501 = 0.0, $6502 = 0.0, $6503 = 0, $6504 = 0.0, $6505 = 0.0, $6506 = 0.0, $6507 = 0.0, $6508 = 0, $6509 = 0.0, $651 = 0, $6510 = 0.0, $6511 = 0, $6512 = 0, $6513 = 0.0;
 var $6514 = 0.0, $6515 = 0.0, $6516 = 0.0, $6517 = 0.0, $6518 = 0.0, $6519 = 0, $652 = 0.0, $6520 = 0.0, $6521 = 0, $6522 = 0.0, $6523 = 0.0, $6524 = 0.0, $6525 = 0, $6526 = 0, $6527 = 0.0, $6528 = 0.0, $6529 = 0.0, $653 = 0.0, $6530 = 0.0, $6531 = 0.0;
 var $6532 = 0.0, $6533 = 0.0, $6534 = 0, $6535 = 0.0, $6536 = 0, $6537 = 0.0, $6538 = 0.0, $6539 = 0.0, $654 = 0, $6540 = 0, $6541 = 0.0, $6542 = 0.0, $6543 = 0, $6544 = 0, $6545 = 0.0, $6546 = 0.0, $6547 = 0, $6548 = 0, $6549 = 0.0, $655 = 0;
 var $6550 = 0.0, $6551 = 0, $6552 = 0, $6553 = 0.0, $6554 = 0.0, $6555 = 0, $6556 = 0, $6557 = 0.0, $6558 = 0.0, $6559 = 0, $656 = 0.0, $6560 = 0, $6561 = 0.0, $6562 = 0.0, $6563 = 0, $6564 = 0, $6565 = 0.0, $6566 = 0.0, $6567 = 0, $6568 = 0;
 var $6569 = 0.0, $657 = 0.0, $6570 = 0.0, $6571 = 0, $6572 = 0, $6573 = 0, $6574 = 0, $6575 = 0, $6576 = 0.0, $6577 = 0, $6578 = 0, $6579 = 0, $658 = 0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0, $6584 = 0, $6585 = 0, $6586 = 0;
 var $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0, $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0.0, $660 = 0.0, $6600 = 0, $6601 = 0, $6602 = 0, $6603 = 0;
 var $6604 = 0, $6605 = 0, $6606 = 0.0, $6607 = 0, $6608 = 0, $6609 = 0, $661 = 0.0, $6610 = 0, $6611 = 0, $6612 = 0, $6613 = 0, $6614 = 0, $6615 = 0, $6616 = 0, $6617 = 0, $6618 = 0, $6619 = 0, $662 = 0, $6620 = 0, $6621 = 0;
 var $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0, $6626 = 0, $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0, $6630 = 0, $6631 = 0, $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0.0, $6637 = 0, $6638 = 0, $6639 = 0, $664 = 0.0;
 var $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0, $6648 = 0, $6649 = 0, $665 = 0.0, $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0, $6655 = 0, $6656 = 0, $6657 = 0, $6658 = 0;
 var $6659 = 0, $666 = 0, $6660 = 0, $6661 = 0, $6662 = 0, $6663 = 0, $6664 = 0, $6665 = 0, $6666 = 0.0, $6667 = 0, $6668 = 0, $6669 = 0, $667 = 0, $6670 = 0, $6671 = 0, $6672 = 0, $6673 = 0, $6674 = 0, $6675 = 0, $6676 = 0;
 var $6677 = 0, $6678 = 0, $6679 = 0, $668 = 0, $6680 = 0, $6681 = 0, $6682 = 0, $6683 = 0, $6684 = 0, $6685 = 0, $6686 = 0, $6687 = 0, $6688 = 0, $6689 = 0, $669 = 0.0, $6690 = 0, $6691 = 0, $6692 = 0, $6693 = 0, $6694 = 0;
 var $6695 = 0, $6696 = 0.0, $6697 = 0, $6698 = 0, $6699 = 0, $67 = 0.0, $670 = 0, $6700 = 0, $6701 = 0, $6702 = 0, $6703 = 0, $6704 = 0, $6705 = 0, $6706 = 0, $6707 = 0, $6708 = 0, $6709 = 0, $671 = 0.0, $6710 = 0, $6711 = 0;
 var $6712 = 0, $6713 = 0, $6714 = 0, $6715 = 0, $6716 = 0, $6717 = 0, $6718 = 0, $6719 = 0, $672 = 0, $6720 = 0, $6721 = 0, $6722 = 0, $6723 = 0, $6724 = 0, $6725 = 0, $6726 = 0.0, $6727 = 0, $6728 = 0, $6729 = 0, $673 = 0;
 var $6730 = 0, $6731 = 0, $6732 = 0, $6733 = 0, $6734 = 0, $6735 = 0, $6736 = 0, $6737 = 0, $6738 = 0, $6739 = 0, $674 = 0, $6740 = 0, $6741 = 0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0, $6746 = 0, $6747 = 0, $6748 = 0;
 var $6749 = 0, $675 = 0.0, $6750 = 0, $6751 = 0, $6752 = 0, $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0, $6758 = 0, $6759 = 0, $676 = 0.0, $6760 = 0, $6761 = 0, $6762 = 0, $6763 = 0, $6764 = 0, $6765 = 0, $6766 = 0;
 var $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0.0, $6770 = 0, $6771 = 0, $6772 = 0, $6773 = 0, $6774 = 0.0, $6775 = 0, $6776 = 0.0, $6777 = 0.0, $6778 = 0.0, $6779 = 0, $678 = 0.0, $6780 = 0.0, $6781 = 0.0, $6782 = 0, $6783 = 0.0, $6784 = 0.0;
 var $6785 = 0.0, $6786 = 0.0, $6787 = 0.0, $6788 = 0.0, $6789 = 0.0, $679 = 0.0, $6790 = 0, $6791 = 0.0, $6792 = 0, $6793 = 0, $6794 = 0.0, $6795 = 0, $6796 = 0.0, $6797 = 0.0, $6798 = 0, $6799 = 0, $68 = 0.0, $680 = 0.0, $6800 = 0.0, $6801 = 0;
 var $6802 = 0, $6803 = 0.0, $6804 = 0.0, $6805 = 0, $6806 = 0.0, $6807 = 0.0, $6808 = 0.0, $6809 = 0, $681 = 0.0, $6810 = 0, $6811 = 0.0, $6812 = 0, $6813 = 0.0, $6814 = 0.0, $6815 = 0, $6816 = 0.0, $6817 = 0, $6818 = 0.0, $6819 = 0.0, $682 = 0.0;
 var $6820 = 0.0, $6821 = 0, $6822 = 0, $6823 = 0.0, $6824 = 0, $6825 = 0.0, $6826 = 0.0, $6827 = 0, $6828 = 0.0, $6829 = 0.0, $683 = 0.0, $6830 = 0.0, $6831 = 0.0, $6832 = 0.0, $6833 = 0, $6834 = 0, $6835 = 0.0, $6836 = 0, $6837 = 0.0, $6838 = 0.0;
 var $6839 = 0, $684 = 0.0, $6840 = 0.0, $6841 = 0.0, $6842 = 0.0, $6843 = 0.0, $6844 = 0.0, $6845 = 0, $6846 = 0, $6847 = 0.0, $6848 = 0, $6849 = 0.0, $685 = 0, $6850 = 0.0, $6851 = 0.0, $6852 = 0, $6853 = 0.0, $6854 = 0.0, $6855 = 0.0, $6856 = 0.0;
 var $6857 = 0.0, $6858 = 0, $6859 = 0.0, $686 = 0, $6860 = 0.0, $6861 = 0, $6862 = 0, $6863 = 0.0, $6864 = 0.0, $6865 = 0, $6866 = 0, $6867 = 0.0, $6868 = 0.0, $6869 = 0, $687 = 0.0, $6870 = 0, $6871 = 0.0, $6872 = 0.0, $6873 = 0, $6874 = 0;
 var $6875 = 0.0, $6876 = 0.0, $6877 = 0, $6878 = 0, $6879 = 0.0, $688 = 0.0, $6880 = 0.0, $6881 = 0, $6882 = 0, $6883 = 0.0, $6884 = 0.0, $6885 = 0, $6886 = 0, $6887 = 0.0, $6888 = 0.0, $6889 = 0, $689 = 0, $6890 = 0, $6891 = 0.0, $6892 = 0.0;
 var $6893 = 0, $6894 = 0, $6895 = 0.0, $6896 = 0.0, $6897 = 0, $6898 = 0, $6899 = 0, $69 = 0.0, $690 = 0, $6900 = 0.0, $6901 = 0.0, $6902 = 0, $6903 = 0.0, $6904 = 0, $6905 = 0, $6906 = 0, $6907 = 0, $6908 = 0.0, $6909 = 0.0, $691 = 0.0;
 var $6910 = 0, $6911 = 0, $6912 = 0, $6913 = 0.0, $6914 = 0.0, $6915 = 0.0, $6916 = 0.0, $6917 = 0.0, $6918 = 0.0, $6919 = 0.0, $692 = 0.0, $6920 = 0.0, $6921 = 0.0, $6922 = 0.0, $6923 = 0, $6924 = 0.0, $6925 = 0.0, $6926 = 0.0, $6927 = 0, $6928 = 0.0;
 var $6929 = 0.0, $693 = 0, $6930 = 0, $6931 = 0, $6932 = 0, $6933 = 0, $6934 = 0, $6935 = 0, $6936 = 0, $6937 = 0, $6938 = 0, $6939 = 0, $694 = 0.0, $6940 = 0, $6941 = 0, $6942 = 0, $6943 = 0, $6944 = 0, $6945 = 0, $6946 = 0;
 var $6947 = 0, $6948 = 0, $6949 = 0, $695 = 0, $6950 = 0, $6951 = 0.0, $6952 = 0, $6953 = 0, $6954 = 0.0, $6955 = 0.0, $6956 = 0.0, $6957 = 0, $6958 = 0, $6959 = 0, $696 = 0.0, $6960 = 0.0, $6961 = 0, $6962 = 0, $6963 = 0.0, $6964 = 0.0;
 var $6965 = 0.0, $6966 = 0, $6967 = 0, $6968 = 0, $6969 = 0, $697 = 0.0, $6970 = 0, $6971 = 0, $6972 = 0, $6973 = 0, $6974 = 0, $6975 = 0, $6976 = 0, $6977 = 0.0, $6978 = 0, $6979 = 0, $698 = 0.0, $6980 = 0, $6981 = 0.0, $6982 = 0;
 var $6983 = 0, $6984 = 0, $6985 = 0.0, $6986 = 0, $6987 = 0, $6988 = 0.0, $6989 = 0.0, $699 = 0, $6990 = 0, $6991 = 0.0, $6992 = 0.0, $6993 = 0, $6994 = 0.0, $6995 = 0.0, $6996 = 0.0, $6997 = 0.0, $6998 = 0.0, $6999 = 0.0, $7 = 0, $70 = 0.0;
 var $700 = 0.0, $7000 = 0, $7001 = 0.0, $7002 = 0.0, $7003 = 0.0, $7004 = 0, $7005 = 0.0, $7006 = 0.0, $7007 = 0.0, $7008 = 0.0, $7009 = 0.0, $701 = 0.0, $7010 = 0.0, $7011 = 0, $7012 = 0.0, $7013 = 0.0, $7014 = 0, $7015 = 0, $7016 = 0.0, $7017 = 0.0;
 var $7018 = 0.0, $7019 = 0.0, $702 = 0, $7020 = 0.0, $7021 = 0, $7022 = 0, $7023 = 0.0, $7024 = 0.0, $7025 = 0.0, $7026 = 0.0, $7027 = 0.0, $7028 = 0, $7029 = 0, $703 = 0.0, $7030 = 0.0, $7031 = 0.0, $7032 = 0, $7033 = 0.0, $7034 = 0.0, $7035 = 0.0;
 var $7036 = 0.0, $7037 = 0, $7038 = 0, $7039 = 0.0, $704 = 0, $7040 = 0.0, $7041 = 0.0, $7042 = 0.0, $7043 = 0, $7044 = 0.0, $7045 = 0.0, $7046 = 0.0, $7047 = 0, $7048 = 0, $7049 = 0.0, $705 = 0, $7050 = 0, $7051 = 0.0, $7052 = 0.0, $7053 = 0.0;
 var $7054 = 0.0, $7055 = 0, $7056 = 0.0, $7057 = 0.0, $7058 = 0.0, $7059 = 0.0, $706 = 0.0, $7060 = 0.0, $7061 = 0, $7062 = 0, $7063 = 0.0, $7064 = 0, $7065 = 0.0, $7066 = 0.0, $7067 = 0.0, $7068 = 0.0, $7069 = 0.0, $707 = 0.0, $7070 = 0, $7071 = 0.0;
 var $7072 = 0.0, $7073 = 0.0, $7074 = 0.0, $7075 = 0.0, $7076 = 0, $7077 = 0.0, $7078 = 0.0, $7079 = 0, $708 = 0, $7080 = 0, $7081 = 0.0, $7082 = 0.0, $7083 = 0, $7084 = 0, $7085 = 0.0, $7086 = 0.0, $7087 = 0, $7088 = 0, $7089 = 0.0, $709 = 0.0;
 var $7090 = 0.0, $7091 = 0, $7092 = 0, $7093 = 0.0, $7094 = 0.0, $7095 = 0, $7096 = 0, $7097 = 0.0, $7098 = 0.0, $7099 = 0, $71 = 0.0, $710 = 0, $7100 = 0, $7101 = 0.0, $7102 = 0.0, $7103 = 0, $7104 = 0, $7105 = 0.0, $7106 = 0.0, $7107 = 0;
 var $7108 = 0, $7109 = 0, $711 = 0, $7110 = 0, $7111 = 0, $7112 = 0.0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0, $7117 = 0, $7118 = 0, $7119 = 0, $712 = 0.0, $7120 = 0, $7121 = 0, $7122 = 0, $7123 = 0, $7124 = 0, $7125 = 0;
 var $7126 = 0, $7127 = 0, $7128 = 0, $7129 = 0, $713 = 0.0, $7130 = 0, $7131 = 0, $7132 = 0, $7133 = 0, $7134 = 0, $7135 = 0, $7136 = 0, $7137 = 0, $7138 = 0, $7139 = 0, $714 = 0, $7140 = 0, $7141 = 0, $7142 = 0.0, $7143 = 0;
 var $7144 = 0, $7145 = 0, $7146 = 0, $7147 = 0, $7148 = 0, $7149 = 0, $715 = 0, $7150 = 0, $7151 = 0, $7152 = 0, $7153 = 0, $7154 = 0, $7155 = 0, $7156 = 0, $7157 = 0, $7158 = 0, $7159 = 0, $716 = 0, $7160 = 0, $7161 = 0;
 var $7162 = 0, $7163 = 0, $7164 = 0, $7165 = 0, $7166 = 0, $7167 = 0, $7168 = 0, $7169 = 0, $717 = 0, $7170 = 0, $7171 = 0, $7172 = 0.0, $7173 = 0, $7174 = 0, $7175 = 0, $7176 = 0, $7177 = 0, $7178 = 0, $7179 = 0, $718 = 0;
 var $7180 = 0, $7181 = 0, $7182 = 0, $7183 = 0, $7184 = 0, $7185 = 0, $7186 = 0, $7187 = 0, $7188 = 0, $7189 = 0, $719 = 0, $7190 = 0, $7191 = 0, $7192 = 0, $7193 = 0, $7194 = 0, $7195 = 0, $7196 = 0, $7197 = 0, $7198 = 0;
 var $7199 = 0, $72 = 0.0, $720 = 0, $7200 = 0, $7201 = 0, $7202 = 0.0, $7203 = 0, $7204 = 0, $7205 = 0, $7206 = 0, $7207 = 0, $7208 = 0, $7209 = 0, $721 = 0, $7210 = 0, $7211 = 0, $7212 = 0, $7213 = 0, $7214 = 0, $7215 = 0;
 var $7216 = 0, $7217 = 0, $7218 = 0, $7219 = 0, $722 = 0, $7220 = 0, $7221 = 0, $7222 = 0, $7223 = 0, $7224 = 0, $7225 = 0, $7226 = 0, $7227 = 0, $7228 = 0, $7229 = 0, $723 = 0, $7230 = 0, $7231 = 0, $7232 = 0.0, $7233 = 0;
 var $7234 = 0, $7235 = 0, $7236 = 0, $7237 = 0, $7238 = 0, $7239 = 0, $724 = 0, $7240 = 0, $7241 = 0, $7242 = 0, $7243 = 0, $7244 = 0, $7245 = 0, $7246 = 0, $7247 = 0, $7248 = 0, $7249 = 0, $725 = 0, $7250 = 0, $7251 = 0;
 var $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0, $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0, $7260 = 0, $7261 = 0, $7262 = 0.0, $7263 = 0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0, $7268 = 0, $7269 = 0, $727 = 0;
 var $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0, $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0;
 var $7289 = 0, $729 = 0, $7290 = 0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0, $7299 = 0, $73 = 0.0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0, $7305 = 0;
 var $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0, $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0.0, $7314 = 0, $7315 = 0, $7316 = 0, $7317 = 0.0, $7318 = 0, $7319 = 0.0, $732 = 0, $7320 = 0, $7321 = 0, $7322 = 0, $7323 = 0;
 var $7324 = 0.0, $7325 = 0, $7326 = 0, $7327 = 0, $7328 = 0.0, $7329 = 0.0, $733 = 0, $7330 = 0.0, $7331 = 0.0, $7332 = 0.0, $7333 = 0, $7334 = 0.0, $7335 = 0, $7336 = 0.0, $7337 = 0.0, $7338 = 0, $7339 = 0.0, $734 = 0, $7340 = 0.0, $7341 = 0;
 var $7342 = 0.0, $7343 = 0.0, $7344 = 0.0, $7345 = 0.0, $7346 = 0.0, $7347 = 0, $7348 = 0, $7349 = 0.0, $735 = 0, $7350 = 0.0, $7351 = 0.0, $7352 = 0.0, $7353 = 0.0, $7354 = 0, $7355 = 0.0, $7356 = 0.0, $7357 = 0.0, $7358 = 0.0, $7359 = 0.0, $736 = 0.0;
 var $7360 = 0, $7361 = 0.0, $7362 = 0, $7363 = 0.0, $7364 = 0.0, $7365 = 0, $7366 = 0.0, $7367 = 0.0, $7368 = 0, $7369 = 0.0, $737 = 0, $7370 = 0.0, $7371 = 0.0, $7372 = 0.0, $7373 = 0.0, $7374 = 0, $7375 = 0.0, $7376 = 0.0, $7377 = 0.0, $7378 = 0.0;
 var $7379 = 0.0, $738 = 0, $7380 = 0.0, $7381 = 0.0, $7382 = 0.0, $7383 = 0, $7384 = 0.0, $7385 = 0.0, $7386 = 0.0, $7387 = 0.0, $7388 = 0.0, $7389 = 0, $739 = 0.0, $7390 = 0.0, $7391 = 0, $7392 = 0.0, $7393 = 0.0, $7394 = 0, $7395 = 0.0, $7396 = 0.0;
 var $7397 = 0, $7398 = 0.0, $7399 = 0.0, $74 = 0, $740 = 0.0, $7400 = 0.0, $7401 = 0.0, $7402 = 0, $7403 = 0.0, $7404 = 0.0, $7405 = 0.0, $7406 = 0.0, $7407 = 0.0, $7408 = 0.0, $7409 = 0.0, $741 = 0.0, $7410 = 0.0, $7411 = 0.0, $7412 = 0.0, $7413 = 0;
 var $7414 = 0.0, $7415 = 0.0, $7416 = 0.0, $7417 = 0, $7418 = 0.0, $7419 = 0.0, $742 = 0, $7420 = 0, $7421 = 0, $7422 = 0, $7423 = 0, $7424 = 0, $7425 = 0, $7426 = 0, $7427 = 0, $7428 = 0, $7429 = 0, $743 = 0, $7430 = 0, $7431 = 0;
 var $7432 = 0, $7433 = 0, $7434 = 0, $7435 = 0, $7436 = 0, $7437 = 0, $7438 = 0, $7439 = 0, $744 = 0, $7440 = 0, $7441 = 0.0, $7442 = 0, $7443 = 0, $7444 = 0.0, $7445 = 0.0, $7446 = 0.0, $7447 = 0, $7448 = 0, $7449 = 0, $745 = 0.0;
 var $7450 = 0.0, $7451 = 0, $7452 = 0, $7453 = 0.0, $7454 = 0.0, $7455 = 0.0, $7456 = 0, $7457 = 0, $7458 = 0, $7459 = 0, $746 = 0, $7460 = 0, $7461 = 0, $7462 = 0, $7463 = 0, $7464 = 0, $7465 = 0, $7466 = 0, $7467 = 0.0, $7468 = 0;
 var $7469 = 0, $747 = 0, $7470 = 0, $7471 = 0.0, $7472 = 0, $7473 = 0, $7474 = 0, $7475 = 0.0, $7476 = 0, $7477 = 0, $7478 = 0.0, $7479 = 0.0, $748 = 0.0, $7480 = 0, $7481 = 0.0, $7482 = 0.0, $7483 = 0, $7484 = 0.0, $7485 = 0, $7486 = 0.0;
 var $7487 = 0.0, $7488 = 0, $7489 = 0.0, $749 = 0.0, $7490 = 0, $7491 = 0.0, $7492 = 0.0, $7493 = 0, $7494 = 0.0, $7495 = 0.0, $7496 = 0.0, $7497 = 0.0, $7498 = 0, $7499 = 0.0, $75 = 0.0, $750 = 0.0, $7500 = 0.0, $7501 = 0.0, $7502 = 0.0, $7503 = 0.0;
 var $7504 = 0, $7505 = 0.0, $7506 = 0.0, $7507 = 0.0, $7508 = 0, $7509 = 0.0, $751 = 0, $7510 = 0.0, $7511 = 0, $7512 = 0.0, $7513 = 0, $7514 = 0.0, $7515 = 0.0, $7516 = 0.0, $7517 = 0.0, $7518 = 0.0, $7519 = 0, $752 = 0, $7520 = 0, $7521 = 0.0;
 var $7522 = 0, $7523 = 0.0, $7524 = 0.0, $7525 = 0, $7526 = 0.0, $7527 = 0, $7528 = 0.0, $7529 = 0.0, $753 = 0, $7530 = 0.0, $7531 = 0, $7532 = 0.0, $7533 = 0.0, $7534 = 0.0, $7535 = 0.0, $7536 = 0, $7537 = 0.0, $7538 = 0.0, $7539 = 0, $754 = 0;
 var $7540 = 0.0, $7541 = 0, $7542 = 0.0, $7543 = 0.0, $7544 = 0.0, $7545 = 0, $7546 = 0.0, $7547 = 0.0, $7548 = 0.0, $7549 = 0.0, $755 = 0, $7550 = 0.0, $7551 = 0, $7552 = 0, $7553 = 0.0, $7554 = 0.0, $7555 = 0.0, $7556 = 0.0, $7557 = 0.0, $7558 = 0.0;
 var $7559 = 0.0, $756 = 0, $7560 = 0, $7561 = 0.0, $7562 = 0, $7563 = 0.0, $7564 = 0.0, $7565 = 0.0, $7566 = 0, $7567 = 0.0, $7568 = 0.0, $7569 = 0.0, $757 = 0, $7570 = 0, $7571 = 0.0, $7572 = 0.0, $7573 = 0, $7574 = 0.0, $7575 = 0.0, $7576 = 0.0;
 var $7577 = 0.0, $7578 = 0, $7579 = 0, $758 = 0, $7580 = 0.0, $7581 = 0, $7582 = 0.0, $7583 = 0.0, $7584 = 0, $7585 = 0.0, $7586 = 0.0, $7587 = 0.0, $7588 = 0.0, $7589 = 0.0, $759 = 0, $7590 = 0.0, $7591 = 0.0, $7592 = 0, $7593 = 0.0, $7594 = 0;
 var $7595 = 0.0, $7596 = 0.0, $7597 = 0.0, $7598 = 0.0, $7599 = 0.0, $76 = 0.0, $760 = 0, $7600 = 0.0, $7601 = 0.0, $7602 = 0, $7603 = 0, $7604 = 0.0, $7605 = 0.0, $7606 = 0.0, $7607 = 0, $7608 = 0.0, $7609 = 0.0, $761 = 0, $7610 = 0.0, $7611 = 0.0;
 var $7612 = 0.0, $7613 = 0, $7614 = 0.0, $7615 = 0.0, $7616 = 0, $7617 = 0, $7618 = 0.0, $7619 = 0.0, $762 = 0.0, $7620 = 0.0, $7621 = 0.0, $7622 = 0, $7623 = 0.0, $7624 = 0.0, $7625 = 0, $7626 = 0.0, $7627 = 0.0, $7628 = 0.0, $7629 = 0.0, $763 = 0;
 var $7630 = 0.0, $7631 = 0.0, $7632 = 0.0, $7633 = 0, $7634 = 0, $7635 = 0.0, $7636 = 0, $7637 = 0.0, $7638 = 0.0, $7639 = 0, $764 = 0, $7640 = 0.0, $7641 = 0.0, $7642 = 0.0, $7643 = 0.0, $7644 = 0.0, $7645 = 0, $7646 = 0.0, $7647 = 0.0, $7648 = 0;
 var $7649 = 0.0, $765 = 0, $7650 = 0.0, $7651 = 0.0, $7652 = 0.0, $7653 = 0.0, $7654 = 0.0, $7655 = 0.0, $7656 = 0, $7657 = 0, $7658 = 0.0, $7659 = 0.0, $766 = 0.0, $7660 = 0.0, $7661 = 0.0, $7662 = 0.0, $7663 = 0.0, $7664 = 0.0, $7665 = 0, $7666 = 0.0;
 var $7667 = 0.0, $7668 = 0, $7669 = 0.0, $767 = 0, $7670 = 0.0, $7671 = 0.0, $7672 = 0.0, $7673 = 0.0, $7674 = 0, $7675 = 0.0, $7676 = 0, $7677 = 0.0, $7678 = 0.0, $7679 = 0.0, $768 = 0, $7680 = 0, $7681 = 0.0, $7682 = 0.0, $7683 = 0, $7684 = 0;
 var $7685 = 0.0, $7686 = 0.0, $7687 = 0, $7688 = 0, $7689 = 0.0, $769 = 0, $7690 = 0.0, $7691 = 0, $7692 = 0, $7693 = 0.0, $7694 = 0.0, $7695 = 0, $7696 = 0, $7697 = 0.0, $7698 = 0.0, $7699 = 0, $77 = 0.0, $770 = 0.0, $7700 = 0, $7701 = 0.0;
 var $7702 = 0.0, $7703 = 0, $7704 = 0, $7705 = 0.0, $7706 = 0.0, $7707 = 0, $7708 = 0, $7709 = 0.0, $771 = 0, $7710 = 0.0, $7711 = 0, $7712 = 0, $7713 = 0.0, $7714 = 0.0, $7715 = 0, $7716 = 0, $7717 = 0.0, $7718 = 0.0, $7719 = 0, $772 = 0;
 var $7720 = 0, $7721 = 0.0, $7722 = 0.0, $7723 = 0, $7724 = 0, $7725 = 0.0, $7726 = 0.0, $7727 = 0, $7728 = 0, $7729 = 0, $773 = 0.0, $7730 = 0, $7731 = 0, $7732 = 0.0, $7733 = 0, $7734 = 0, $7735 = 0, $7736 = 0, $7737 = 0, $7738 = 0;
 var $7739 = 0, $774 = 0.0, $7740 = 0, $7741 = 0, $7742 = 0, $7743 = 0, $7744 = 0, $7745 = 0, $7746 = 0, $7747 = 0, $7748 = 0, $7749 = 0, $775 = 0, $7750 = 0, $7751 = 0, $7752 = 0, $7753 = 0, $7754 = 0, $7755 = 0, $7756 = 0;
 var $7757 = 0, $7758 = 0, $7759 = 0, $776 = 0.0, $7760 = 0, $7761 = 0, $7762 = 0.0, $7763 = 0, $7764 = 0, $7765 = 0, $7766 = 0, $7767 = 0, $7768 = 0, $7769 = 0, $777 = 0.0, $7770 = 0, $7771 = 0, $7772 = 0, $7773 = 0, $7774 = 0;
 var $7775 = 0, $7776 = 0, $7777 = 0, $7778 = 0, $7779 = 0, $778 = 0.0, $7780 = 0, $7781 = 0, $7782 = 0, $7783 = 0, $7784 = 0, $7785 = 0, $7786 = 0, $7787 = 0, $7788 = 0, $7789 = 0, $779 = 0, $7790 = 0, $7791 = 0, $7792 = 0.0;
 var $7793 = 0, $7794 = 0, $7795 = 0, $7796 = 0, $7797 = 0, $7798 = 0, $7799 = 0, $78 = 0.0, $780 = 0.0, $7800 = 0, $7801 = 0, $7802 = 0, $7803 = 0, $7804 = 0, $7805 = 0, $7806 = 0, $7807 = 0, $7808 = 0, $7809 = 0, $781 = 0;
 var $7810 = 0, $7811 = 0, $7812 = 0, $7813 = 0, $7814 = 0, $7815 = 0, $7816 = 0, $7817 = 0, $7818 = 0, $7819 = 0, $782 = 0.0, $7820 = 0, $7821 = 0, $7822 = 0.0, $7823 = 0, $7824 = 0, $7825 = 0, $7826 = 0, $7827 = 0, $7828 = 0;
 var $7829 = 0, $783 = 0.0, $7830 = 0, $7831 = 0, $7832 = 0, $7833 = 0, $7834 = 0, $7835 = 0, $7836 = 0, $7837 = 0, $7838 = 0, $7839 = 0, $784 = 0.0, $7840 = 0, $7841 = 0, $7842 = 0, $7843 = 0, $7844 = 0, $7845 = 0, $7846 = 0;
 var $7847 = 0, $7848 = 0, $7849 = 0, $785 = 0.0, $7850 = 0, $7851 = 0, $7852 = 0.0, $7853 = 0, $7854 = 0, $7855 = 0, $7856 = 0, $7857 = 0, $7858 = 0, $7859 = 0, $786 = 0.0, $7860 = 0, $7861 = 0, $7862 = 0, $7863 = 0, $7864 = 0;
 var $7865 = 0, $7866 = 0, $7867 = 0, $7868 = 0, $7869 = 0, $787 = 0.0, $7870 = 0, $7871 = 0, $7872 = 0, $7873 = 0, $7874 = 0, $7875 = 0, $7876 = 0, $7877 = 0, $7878 = 0, $7879 = 0, $788 = 0, $7880 = 0, $7881 = 0, $7882 = 0.0;
 var $7883 = 0, $7884 = 0, $7885 = 0, $7886 = 0, $7887 = 0, $7888 = 0, $7889 = 0, $789 = 0, $7890 = 0, $7891 = 0, $7892 = 0, $7893 = 0, $7894 = 0, $7895 = 0, $7896 = 0, $7897 = 0, $7898 = 0, $7899 = 0, $79 = 0, $790 = 0;
 var $7900 = 0, $7901 = 0, $7902 = 0, $7903 = 0, $7904 = 0, $7905 = 0, $7906 = 0, $7907 = 0, $7908 = 0, $7909 = 0, $791 = 0.0, $7910 = 0, $7911 = 0, $7912 = 0, $7913 = 0, $7914 = 0, $7915 = 0, $7916 = 0, $7917 = 0, $7918 = 0;
 var $7919 = 0, $792 = 0.0, $7920 = 0, $7921 = 0, $7922 = 0, $7923 = 0, $7924 = 0, $7925 = 0, $7926 = 0, $7927 = 0, $7928 = 0, $7929 = 0.0, $793 = 0, $7930 = 0, $7931 = 0, $7932 = 0, $7933 = 0.0, $7934 = 0, $7935 = 0.0, $7936 = 0;
 var $7937 = 0, $7938 = 0, $7939 = 0.0, $794 = 0.0, $7940 = 0.0, $7941 = 0.0, $7942 = 0, $7943 = 0.0, $7944 = 0.0, $7945 = 0, $7946 = 0.0, $7947 = 0.0, $7948 = 0, $7949 = 0.0, $795 = 0.0, $7950 = 0.0, $7951 = 0, $7952 = 0.0, $7953 = 0.0, $7954 = 0;
 var $7955 = 0.0, $7956 = 0.0, $7957 = 0.0, $7958 = 0.0, $7959 = 0.0, $796 = 0.0, $7960 = 0, $7961 = 0, $7962 = 0.0, $7963 = 0.0, $7964 = 0.0, $7965 = 0.0, $7966 = 0.0, $7967 = 0, $7968 = 0.0, $7969 = 0.0, $797 = 0.0, $7970 = 0.0, $7971 = 0, $7972 = 0.0;
 var $7973 = 0.0, $7974 = 0, $7975 = 0.0, $7976 = 0.0, $7977 = 0, $7978 = 0.0, $7979 = 0.0, $798 = 0, $7980 = 0, $7981 = 0.0, $7982 = 0.0, $7983 = 0, $7984 = 0.0, $7985 = 0.0, $7986 = 0.0, $7987 = 0.0, $7988 = 0.0, $7989 = 0, $799 = 0.0, $7990 = 0.0;
 var $7991 = 0.0, $7992 = 0.0, $7993 = 0.0, $7994 = 0.0, $7995 = 0.0, $7996 = 0.0, $7997 = 0.0, $7998 = 0, $7999 = 0.0, $8 = 0.0, $80 = 0.0, $800 = 0.0, $8000 = 0.0, $8001 = 0.0, $8002 = 0, $8003 = 0.0, $8004 = 0.0, $8005 = 0, $8006 = 0.0, $8007 = 0.0;
 var $8008 = 0, $8009 = 0.0, $801 = 0, $8010 = 0.0, $8011 = 0, $8012 = 0.0, $8013 = 0.0, $8014 = 0, $8015 = 0.0, $8016 = 0.0, $8017 = 0.0, $8018 = 0.0, $8019 = 0, $802 = 0.0, $8020 = 0.0, $8021 = 0.0, $8022 = 0.0, $8023 = 0.0, $8024 = 0.0, $8025 = 0.0;
 var $8026 = 0.0, $8027 = 0.0, $8028 = 0.0, $8029 = 0.0, $803 = 0.0, $8030 = 0, $8031 = 0.0, $8032 = 0.0, $8033 = 0.0, $8034 = 0, $8035 = 0.0, $8036 = 0.0, $8037 = 0, $8038 = 0, $8039 = 0, $804 = 0.0, $8040 = 0, $8041 = 0, $8042 = 0, $8043 = 0;
 var $8044 = 0, $8045 = 0, $8046 = 0, $8047 = 0, $8048 = 0, $8049 = 0, $805 = 0.0, $8050 = 0, $8051 = 0, $8052 = 0, $8053 = 0, $8054 = 0, $8055 = 0, $8056 = 0, $8057 = 0, $8058 = 0.0, $8059 = 0, $806 = 0, $8060 = 0, $8061 = 0.0;
 var $8062 = 0.0, $8063 = 0.0, $8064 = 0, $8065 = 0, $8066 = 0, $8067 = 0.0, $8068 = 0, $8069 = 0, $807 = 0, $8070 = 0.0, $8071 = 0.0, $8072 = 0.0, $8073 = 0, $8074 = 0, $8075 = 0, $8076 = 0, $8077 = 0, $8078 = 0, $8079 = 0, $808 = 0.0;
 var $8080 = 0, $8081 = 0, $8082 = 0, $8083 = 0, $8084 = 0.0, $8085 = 0, $8086 = 0, $8087 = 0, $8088 = 0.0, $8089 = 0, $809 = 0.0, $8090 = 0, $8091 = 0, $8092 = 0.0, $8093 = 0, $8094 = 0, $8095 = 0.0, $8096 = 0.0, $8097 = 0, $8098 = 0.0;
 var $8099 = 0.0, $81 = 0.0, $810 = 0.0, $8100 = 0, $8101 = 0.0, $8102 = 0, $8103 = 0.0, $8104 = 0.0, $8105 = 0, $8106 = 0.0, $8107 = 0, $8108 = 0.0, $8109 = 0.0, $811 = 0.0, $8110 = 0, $8111 = 0.0, $8112 = 0.0, $8113 = 0.0, $8114 = 0.0, $8115 = 0;
 var $8116 = 0.0, $8117 = 0.0, $8118 = 0.0, $8119 = 0.0, $812 = 0, $8120 = 0.0, $8121 = 0, $8122 = 0.0, $8123 = 0.0, $8124 = 0.0, $8125 = 0, $8126 = 0.0, $8127 = 0.0, $8128 = 0, $8129 = 0.0, $813 = 0.0, $8130 = 0.0, $8131 = 0.0, $8132 = 0.0, $8133 = 0;
 var $8134 = 0.0, $8135 = 0.0, $8136 = 0, $8137 = 0, $8138 = 0.0, $8139 = 0, $814 = 0, $8140 = 0.0, $8141 = 0.0, $8142 = 0, $8143 = 0.0, $8144 = 0, $8145 = 0.0, $8146 = 0.0, $8147 = 0.0, $8148 = 0, $8149 = 0.0, $815 = 0.0, $8150 = 0.0, $8151 = 0.0;
 var $8152 = 0.0, $8153 = 0, $8154 = 0, $8155 = 0.0, $8156 = 0, $8157 = 0.0, $8158 = 0.0, $8159 = 0, $816 = 0.0, $8160 = 0.0, $8161 = 0.0, $8162 = 0.0, $8163 = 0.0, $8164 = 0.0, $8165 = 0.0, $8166 = 0.0, $8167 = 0.0, $8168 = 0, $8169 = 0, $817 = 0.0;
 var $8170 = 0.0, $8171 = 0.0, $8172 = 0.0, $8173 = 0.0, $8174 = 0, $8175 = 0.0, $8176 = 0, $8177 = 0.0, $8178 = 0.0, $8179 = 0.0, $818 = 0.0, $8180 = 0.0, $8181 = 0.0, $8182 = 0.0, $8183 = 0, $8184 = 0, $8185 = 0.0, $8186 = 0.0, $8187 = 0.0, $8188 = 0;
 var $8189 = 0.0, $819 = 0, $8190 = 0.0, $8191 = 0.0, $8192 = 0.0, $8193 = 0.0, $8194 = 0.0, $8195 = 0, $8196 = 0, $8197 = 0.0, $8198 = 0, $8199 = 0.0, $82 = 0.0, $820 = 0, $8200 = 0.0, $8201 = 0, $8202 = 0.0, $8203 = 0.0, $8204 = 0.0, $8205 = 0.0;
 var $8206 = 0.0, $8207 = 0.0, $8208 = 0.0, $8209 = 0, $821 = 0.0, $8210 = 0.0, $8211 = 0.0, $8212 = 0.0, $8213 = 0.0, $8214 = 0.0, $8215 = 0.0, $8216 = 0, $8217 = 0.0, $8218 = 0.0, $8219 = 0, $822 = 0.0, $8220 = 0, $8221 = 0.0, $8222 = 0.0, $8223 = 0.0;
 var $8224 = 0.0, $8225 = 0, $8226 = 0.0, $8227 = 0.0, $8228 = 0, $8229 = 0.0, $823 = 0.0, $8230 = 0.0, $8231 = 0.0, $8232 = 0.0, $8233 = 0, $8234 = 0, $8235 = 0.0, $8236 = 0.0, $8237 = 0.0, $8238 = 0.0, $8239 = 0, $824 = 0.0, $8240 = 0.0, $8241 = 0.0;
 var $8242 = 0.0, $8243 = 0.0, $8244 = 0.0, $8245 = 0.0, $8246 = 0.0, $8247 = 0, $8248 = 0.0, $8249 = 0.0, $825 = 0, $8250 = 0, $8251 = 0, $8252 = 0.0, $8253 = 0, $8254 = 0.0, $8255 = 0.0, $8256 = 0.0, $8257 = 0.0, $8258 = 0, $8259 = 0.0, $826 = 0.0;
 var $8260 = 0.0, $8261 = 0.0, $8262 = 0.0, $8263 = 0.0, $8264 = 0, $8265 = 0.0, $8266 = 0.0, $8267 = 0, $8268 = 0.0, $8269 = 0.0, $827 = 0.0, $8270 = 0.0, $8271 = 0.0, $8272 = 0.0, $8273 = 0, $8274 = 0, $8275 = 0.0, $8276 = 0.0, $8277 = 0.0, $8278 = 0.0;
 var $8279 = 0, $828 = 0, $8280 = 0.0, $8281 = 0.0, $8282 = 0, $8283 = 0.0, $8284 = 0.0, $8285 = 0.0, $8286 = 0.0, $8287 = 0.0, $8288 = 0, $8289 = 0.0, $829 = 0.0, $8290 = 0, $8291 = 0.0, $8292 = 0.0, $8293 = 0.0, $8294 = 0.0, $8295 = 0.0, $8296 = 0.0;
 var $8297 = 0, $8298 = 0.0, $8299 = 0.0, $83 = 0.0, $830 = 0.0, $8300 = 0, $8301 = 0, $8302 = 0.0, $8303 = 0.0, $8304 = 0, $8305 = 0, $8306 = 0.0, $8307 = 0.0, $8308 = 0, $8309 = 0, $831 = 0.0, $8310 = 0.0, $8311 = 0.0, $8312 = 0, $8313 = 0;
 var $8314 = 0.0, $8315 = 0.0, $8316 = 0, $8317 = 0, $8318 = 0.0, $8319 = 0.0, $832 = 0.0, $8320 = 0, $8321 = 0, $8322 = 0.0, $8323 = 0.0, $8324 = 0, $8325 = 0, $8326 = 0.0, $8327 = 0.0, $8328 = 0, $8329 = 0, $833 = 0, $8330 = 0.0, $8331 = 0.0;
 var $8332 = 0, $8333 = 0, $8334 = 0.0, $8335 = 0.0, $8336 = 0, $8337 = 0, $8338 = 0.0, $8339 = 0.0, $834 = 0.0, $8340 = 0, $8341 = 0, $8342 = 0.0, $8343 = 0.0, $8344 = 0, $8345 = 0, $8346 = 0, $8347 = 0, $8348 = 0, $8349 = 0.0, $835 = 0.0;
 var $8350 = 0, $8351 = 0, $8352 = 0, $8353 = 0, $8354 = 0, $8355 = 0, $8356 = 0, $8357 = 0, $8358 = 0, $8359 = 0, $836 = 0.0, $8360 = 0, $8361 = 0, $8362 = 0, $8363 = 0, $8364 = 0, $8365 = 0, $8366 = 0, $8367 = 0, $8368 = 0;
 var $8369 = 0, $837 = 0.0, $8370 = 0, $8371 = 0, $8372 = 0, $8373 = 0, $8374 = 0, $8375 = 0, $8376 = 0, $8377 = 0, $8378 = 0, $8379 = 0.0, $838 = 0, $8380 = 0, $8381 = 0, $8382 = 0, $8383 = 0, $8384 = 0, $8385 = 0, $8386 = 0;
 var $8387 = 0, $8388 = 0, $8389 = 0, $839 = 0.0, $8390 = 0, $8391 = 0, $8392 = 0, $8393 = 0, $8394 = 0, $8395 = 0, $8396 = 0, $8397 = 0, $8398 = 0, $8399 = 0, $84 = 0, $840 = 0, $8400 = 0, $8401 = 0, $8402 = 0, $8403 = 0;
 var $8404 = 0, $8405 = 0, $8406 = 0, $8407 = 0, $8408 = 0, $8409 = 0.0, $841 = 0.0, $8410 = 0, $8411 = 0, $8412 = 0, $8413 = 0, $8414 = 0, $8415 = 0, $8416 = 0, $8417 = 0, $8418 = 0, $8419 = 0, $842 = 0.0, $8420 = 0, $8421 = 0;
 var $8422 = 0, $8423 = 0, $8424 = 0, $8425 = 0, $8426 = 0, $8427 = 0, $8428 = 0, $8429 = 0, $843 = 0.0, $8430 = 0, $8431 = 0, $8432 = 0, $8433 = 0, $8434 = 0, $8435 = 0, $8436 = 0, $8437 = 0, $8438 = 0, $8439 = 0.0, $844 = 0.0;
 var $8440 = 0, $8441 = 0, $8442 = 0, $8443 = 0, $8444 = 0, $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0, $845 = 0.0, $8450 = 0, $8451 = 0, $8452 = 0, $8453 = 0, $8454 = 0, $8455 = 0, $8456 = 0, $8457 = 0, $8458 = 0;
 var $8459 = 0, $846 = 0.0, $8460 = 0, $8461 = 0, $8462 = 0, $8463 = 0, $8464 = 0, $8465 = 0, $8466 = 0, $8467 = 0, $8468 = 0, $8469 = 0.0, $847 = 0.0, $8470 = 0, $8471 = 0, $8472 = 0, $8473 = 0, $8474 = 0, $8475 = 0, $8476 = 0;
 var $8477 = 0, $8478 = 0, $8479 = 0, $848 = 0, $8480 = 0, $8481 = 0, $8482 = 0, $8483 = 0, $8484 = 0, $8485 = 0, $8486 = 0, $8487 = 0, $8488 = 0, $8489 = 0, $849 = 0, $8490 = 0, $8491 = 0, $8492 = 0, $8493 = 0, $8494 = 0;
 var $8495 = 0, $8496 = 0, $8497 = 0, $8498 = 0, $8499 = 0.0, $85 = 0.0, $850 = 0.0, $8500 = 0, $8501 = 0, $8502 = 0, $8503 = 0, $8504 = 0, $8505 = 0, $8506 = 0, $8507 = 0, $8508 = 0, $8509 = 0, $851 = 0.0, $8510 = 0, $8511 = 0;
 var $8512 = 0, $8513 = 0, $8514 = 0, $8515 = 0, $8516 = 0, $8517 = 0, $8518 = 0, $8519 = 0, $852 = 0.0, $8520 = 0, $8521 = 0, $8522 = 0, $8523 = 0, $8524 = 0, $8525 = 0, $8526 = 0, $8527 = 0, $8528 = 0, $8529 = 0, $853 = 0.0;
 var $8530 = 0, $8531 = 0, $8532 = 0, $8533 = 0, $8534 = 0, $8535 = 0, $8536 = 0, $8537 = 0, $8538 = 0, $8539 = 0, $854 = 0, $8540 = 0, $8541 = 0, $8542 = 0, $8543 = 0, $8544 = 0, $8545 = 0, $8546 = 0.0, $8547 = 0.0, $8548 = 0;
 var $8549 = 0, $855 = 0.0, $8550 = 0, $8551 = 0, $8552 = 0.0, $8553 = 0, $8554 = 0.0, $8555 = 0.0, $8556 = 0, $8557 = 0, $8558 = 0, $8559 = 0.0, $856 = 0.0, $8560 = 0.0, $8561 = 0.0, $8562 = 0.0, $8563 = 0.0, $8564 = 0.0, $8565 = 0.0, $8566 = 0.0;
 var $8567 = 0.0, $8568 = 0.0, $8569 = 0, $857 = 0, $8570 = 0.0, $8571 = 0.0, $8572 = 0.0, $8573 = 0, $8574 = 0.0, $8575 = 0.0, $8576 = 0, $8577 = 0, $8578 = 0, $8579 = 0, $858 = 0.0, $8580 = 0, $8581 = 0, $8582 = 0, $8583 = 0, $8584 = 0;
 var $8585 = 0, $8586 = 0, $8587 = 0, $8588 = 0, $8589 = 0, $859 = 0.0, $8590 = 0, $8591 = 0, $8592 = 0, $8593 = 0, $8594 = 0, $8595 = 0, $8596 = 0, $8597 = 0.0, $8598 = 0, $8599 = 0, $86 = 0.0, $860 = 0.0, $8600 = 0.0, $8601 = 0.0;
 var $8602 = 0.0, $8603 = 0, $8604 = 0, $8605 = 0, $8606 = 0.0, $8607 = 0, $8608 = 0, $8609 = 0.0, $861 = 0, $8610 = 0.0, $8611 = 0.0, $8612 = 0, $8613 = 0, $8614 = 0, $8615 = 0, $8616 = 0, $8617 = 0, $8618 = 0, $8619 = 0, $862 = 0.0;
 var $8620 = 0, $8621 = 0, $8622 = 0, $8623 = 0.0, $8624 = 0, $8625 = 0, $8626 = 0, $8627 = 0.0, $8628 = 0, $8629 = 0, $863 = 0.0, $8630 = 0, $8631 = 0.0, $8632 = 0, $8633 = 0, $8634 = 0.0, $8635 = 0.0, $8636 = 0, $8637 = 0.0, $8638 = 0.0;
 var $8639 = 0, $864 = 0.0, $8640 = 0.0, $8641 = 0, $8642 = 0.0, $8643 = 0.0, $8644 = 0, $8645 = 0.0, $8646 = 0, $8647 = 0.0, $8648 = 0.0, $8649 = 0, $865 = 0.0, $8650 = 0.0, $8651 = 0.0, $8652 = 0.0, $8653 = 0.0, $8654 = 0, $8655 = 0.0, $8656 = 0.0;
 var $8657 = 0.0, $8658 = 0.0, $8659 = 0.0, $866 = 0, $8660 = 0, $8661 = 0.0, $8662 = 0.0, $8663 = 0.0, $8664 = 0, $8665 = 0.0, $8666 = 0.0, $8667 = 0, $8668 = 0.0, $8669 = 0.0, $867 = 0.0, $8670 = 0.0, $8671 = 0.0, $8672 = 0, $8673 = 0.0, $8674 = 0.0;
 var $8675 = 0, $8676 = 0, $8677 = 0.0, $8678 = 0.0, $8679 = 0.0, $868 = 0, $8680 = 0, $8681 = 0.0, $8682 = 0, $8683 = 0.0, $8684 = 0.0, $8685 = 0.0, $8686 = 0, $8687 = 0.0, $8688 = 0, $8689 = 0.0, $869 = 0.0, $8690 = 0.0, $8691 = 0.0, $8692 = 0;
 var $8693 = 0, $8694 = 0.0, $8695 = 0.0, $8696 = 0.0, $8697 = 0.0, $8698 = 0.0, $8699 = 0.0, $87 = 0.0, $870 = 0.0, $8700 = 0.0, $8701 = 0, $8702 = 0.0, $8703 = 0, $8704 = 0.0, $8705 = 0.0, $8706 = 0.0, $8707 = 0, $8708 = 0.0, $8709 = 0.0, $871 = 0.0;
 var $8710 = 0, $8711 = 0.0, $8712 = 0, $8713 = 0.0, $8714 = 0.0, $8715 = 0.0, $8716 = 0, $8717 = 0.0, $8718 = 0.0, $8719 = 0.0, $872 = 0.0, $8720 = 0.0, $8721 = 0.0, $8722 = 0, $8723 = 0.0, $8724 = 0.0, $8725 = 0.0, $8726 = 0, $8727 = 0.0, $8728 = 0.0;
 var $8729 = 0, $873 = 0.0, $8730 = 0.0, $8731 = 0.0, $8732 = 0.0, $8733 = 0.0, $8734 = 0, $8735 = 0, $8736 = 0.0, $8737 = 0, $8738 = 0.0, $8739 = 0.0, $874 = 0.0, $8740 = 0, $8741 = 0.0, $8742 = 0.0, $8743 = 0.0, $8744 = 0.0, $8745 = 0.0, $8746 = 0.0;
 var $8747 = 0.0, $8748 = 0, $8749 = 0.0, $875 = 0.0, $8750 = 0.0, $8751 = 0.0, $8752 = 0.0, $8753 = 0.0, $8754 = 0.0, $8755 = 0, $8756 = 0.0, $8757 = 0.0, $8758 = 0, $8759 = 0, $876 = 0.0, $8760 = 0.0, $8761 = 0.0, $8762 = 0.0, $8763 = 0, $8764 = 0.0;
 var $8765 = 0.0, $8766 = 0, $8767 = 0.0, $8768 = 0.0, $8769 = 0.0, $877 = 0.0, $8770 = 0.0, $8771 = 0.0, $8772 = 0, $8773 = 0, $8774 = 0.0, $8775 = 0.0, $8776 = 0.0, $8777 = 0.0, $8778 = 0.0, $8779 = 0.0, $878 = 0, $8780 = 0, $8781 = 0.0, $8782 = 0.0;
 var $8783 = 0, $8784 = 0.0, $8785 = 0.0, $8786 = 0.0, $8787 = 0.0, $8788 = 0.0, $8789 = 0, $879 = 0.0, $8790 = 0, $8791 = 0.0, $8792 = 0.0, $8793 = 0, $8794 = 0.0, $8795 = 0.0, $8796 = 0.0, $8797 = 0.0, $8798 = 0, $8799 = 0.0, $88 = 0, $880 = 0.0;
 var $8800 = 0, $8801 = 0.0, $8802 = 0.0, $8803 = 0.0, $8804 = 0.0, $8805 = 0.0, $8806 = 0, $8807 = 0.0, $8808 = 0.0, $8809 = 0.0, $881 = 0.0, $8810 = 0.0, $8811 = 0.0, $8812 = 0, $8813 = 0, $8814 = 0.0, $8815 = 0.0, $8816 = 0.0, $8817 = 0.0, $8818 = 0;
 var $8819 = 0.0, $882 = 0, $8820 = 0.0, $8821 = 0, $8822 = 0.0, $8823 = 0.0, $8824 = 0.0, $8825 = 0.0, $8826 = 0.0, $8827 = 0.0, $8828 = 0.0, $8829 = 0.0, $883 = 0.0, $8830 = 0, $8831 = 0.0, $8832 = 0, $8833 = 0.0, $8834 = 0.0, $8835 = 0.0, $8836 = 0;
 var $8837 = 0.0, $8838 = 0.0, $8839 = 0, $884 = 0.0, $8840 = 0, $8841 = 0.0, $8842 = 0.0, $8843 = 0, $8844 = 0, $8845 = 0.0, $8846 = 0.0, $8847 = 0, $8848 = 0, $8849 = 0.0, $885 = 0, $8850 = 0.0, $8851 = 0, $8852 = 0, $8853 = 0.0, $8854 = 0.0;
 var $8855 = 0, $8856 = 0, $8857 = 0.0, $8858 = 0.0, $8859 = 0, $886 = 0, $8860 = 0, $8861 = 0.0, $8862 = 0.0, $8863 = 0, $8864 = 0, $8865 = 0.0, $8866 = 0.0, $8867 = 0, $8868 = 0, $8869 = 0.0, $887 = 0, $8870 = 0.0, $8871 = 0, $8872 = 0;
 var $8873 = 0.0, $8874 = 0.0, $8875 = 0, $8876 = 0, $8877 = 0.0, $8878 = 0.0, $8879 = 0, $888 = 0, $8880 = 0, $8881 = 0.0, $8882 = 0.0, $8883 = 0, $8884 = 0, $8885 = 0, $8886 = 0, $8887 = 0, $8888 = 0.0, $8889 = 0, $889 = 0, $8890 = 0;
 var $8891 = 0, $8892 = 0, $8893 = 0, $8894 = 0, $8895 = 0, $8896 = 0, $8897 = 0, $8898 = 0, $8899 = 0, $89 = 0.0, $890 = 0, $8900 = 0, $8901 = 0, $8902 = 0, $8903 = 0, $8904 = 0, $8905 = 0, $8906 = 0, $8907 = 0, $8908 = 0;
 var $8909 = 0, $891 = 0, $8910 = 0, $8911 = 0, $8912 = 0, $8913 = 0, $8914 = 0, $8915 = 0, $8916 = 0, $8917 = 0, $8918 = 0.0, $8919 = 0, $892 = 0, $8920 = 0, $8921 = 0, $8922 = 0, $8923 = 0, $8924 = 0, $8925 = 0, $8926 = 0;
 var $8927 = 0, $8928 = 0, $8929 = 0, $893 = 0, $8930 = 0, $8931 = 0, $8932 = 0, $8933 = 0, $8934 = 0, $8935 = 0, $8936 = 0, $8937 = 0, $8938 = 0, $8939 = 0, $894 = 0, $8940 = 0, $8941 = 0, $8942 = 0, $8943 = 0, $8944 = 0;
 var $8945 = 0, $8946 = 0, $8947 = 0, $8948 = 0.0, $8949 = 0, $895 = 0, $8950 = 0, $8951 = 0, $8952 = 0, $8953 = 0, $8954 = 0, $8955 = 0, $8956 = 0, $8957 = 0, $8958 = 0, $8959 = 0, $896 = 0, $8960 = 0, $8961 = 0, $8962 = 0;
 var $8963 = 0, $8964 = 0, $8965 = 0, $8966 = 0, $8967 = 0, $8968 = 0, $8969 = 0, $897 = 0, $8970 = 0, $8971 = 0, $8972 = 0, $8973 = 0, $8974 = 0, $8975 = 0, $8976 = 0, $8977 = 0, $8978 = 0.0, $8979 = 0, $898 = 0, $8980 = 0;
 var $8981 = 0, $8982 = 0, $8983 = 0, $8984 = 0, $8985 = 0, $8986 = 0, $8987 = 0, $8988 = 0, $8989 = 0, $899 = 0, $8990 = 0, $8991 = 0, $8992 = 0, $8993 = 0, $8994 = 0, $8995 = 0, $8996 = 0, $8997 = 0, $8998 = 0, $8999 = 0;
 var $9 = 0.0, $90 = 0.0, $900 = 0, $9000 = 0, $9001 = 0, $9002 = 0, $9003 = 0, $9004 = 0, $9005 = 0, $9006 = 0, $9007 = 0, $9008 = 0.0, $9009 = 0, $901 = 0, $9010 = 0, $9011 = 0, $9012 = 0, $9013 = 0, $9014 = 0, $9015 = 0;
 var $9016 = 0, $9017 = 0, $9018 = 0, $9019 = 0, $902 = 0, $9020 = 0, $9021 = 0, $9022 = 0, $9023 = 0, $9024 = 0, $9025 = 0, $9026 = 0, $9027 = 0, $9028 = 0, $9029 = 0, $903 = 0, $9030 = 0, $9031 = 0, $9032 = 0, $9033 = 0;
 var $9034 = 0, $9035 = 0, $9036 = 0, $9037 = 0, $9038 = 0.0, $9039 = 0, $904 = 0, $9040 = 0, $9041 = 0, $9042 = 0, $9043 = 0, $9044 = 0, $9045 = 0, $9046 = 0, $9047 = 0, $9048 = 0, $9049 = 0, $905 = 0, $9050 = 0, $9051 = 0;
 var $9052 = 0, $9053 = 0, $9054 = 0, $9055 = 0, $9056 = 0, $9057 = 0, $9058 = 0, $9059 = 0, $906 = 0.0, $9060 = 0, $9061 = 0, $9062 = 0, $9063 = 0, $9064 = 0, $9065 = 0, $9066 = 0, $9067 = 0, $9068 = 0, $9069 = 0, $907 = 0;
 var $9070 = 0, $9071 = 0, $9072 = 0, $9073 = 0, $9074 = 0, $9075 = 0, $9076 = 0, $9077 = 0, $9078 = 0, $9079 = 0, $908 = 0, $9080 = 0, $9081 = 0, $9082 = 0, $9083 = 0, $9084 = 0, $9085 = 0, $9086 = 0, $9087 = 0.0, $9088 = 0.0;
 var $9089 = 0, $909 = 0.0, $9090 = 0, $9091 = 0, $9092 = 0, $9093 = 0.0, $9094 = 0, $9095 = 0.0, $9096 = 0, $9097 = 0, $9098 = 0, $9099 = 0.0, $91 = 0.0, $910 = 0.0, $9100 = 0.0, $9101 = 0.0, $9102 = 0.0, $9103 = 0.0, $9104 = 0.0, $9105 = 0.0;
 var $9106 = 0.0, $9107 = 0.0, $9108 = 0.0, $9109 = 0, $911 = 0.0, $9110 = 0.0, $9111 = 0.0, $9112 = 0.0, $9113 = 0, $9114 = 0.0, $9115 = 0.0, $9116 = 0, $9117 = 0, $9118 = 0, $9119 = 0, $912 = 0, $9120 = 0, $9121 = 0, $9122 = 0, $9123 = 0;
 var $9124 = 0, $9125 = 0, $9126 = 0, $9127 = 0, $9128 = 0, $9129 = 0, $913 = 0, $9130 = 0, $9131 = 0, $9132 = 0, $9133 = 0, $9134 = 0, $9135 = 0, $9136 = 0, $9137 = 0.0, $9138 = 0, $9139 = 0, $914 = 0, $9140 = 0.0, $9141 = 0.0;
 var $9142 = 0.0, $9143 = 0, $9144 = 0, $9145 = 0, $9146 = 0.0, $9147 = 0, $9148 = 0, $9149 = 0.0, $915 = 0.0, $9150 = 0.0, $9151 = 0.0, $9152 = 0, $9153 = 0, $9154 = 0, $9155 = 0, $9156 = 0, $9157 = 0, $9158 = 0, $9159 = 0, $916 = 0;
 var $9160 = 0, $9161 = 0, $9162 = 0, $9163 = 0.0, $9164 = 0, $9165 = 0, $9166 = 0, $9167 = 0.0, $9168 = 0, $9169 = 0, $917 = 0, $9170 = 0, $9171 = 0.0, $9172 = 0, $9173 = 0, $9174 = 0.0, $9175 = 0.0, $9176 = 0, $9177 = 0.0, $9178 = 0.0;
 var $9179 = 0, $918 = 0.0, $9180 = 0.0, $9181 = 0.0, $9182 = 0, $9183 = 0.0, $9184 = 0.0, $9185 = 0, $9186 = 0.0, $9187 = 0.0, $9188 = 0.0, $9189 = 0, $919 = 0.0, $9190 = 0.0, $9191 = 0.0, $9192 = 0.0, $9193 = 0.0, $9194 = 0.0, $9195 = 0.0, $9196 = 0.0;
 var $9197 = 0, $9198 = 0.0, $9199 = 0.0, $92 = 0.0, $920 = 0.0, $9200 = 0.0, $9201 = 0.0, $9202 = 0.0, $9203 = 0.0, $9204 = 0, $9205 = 0.0, $9206 = 0.0, $9207 = 0, $9208 = 0, $9209 = 0.0, $921 = 0, $9210 = 0.0, $9211 = 0.0, $9212 = 0, $9213 = 0.0;
 var $9214 = 0.0, $9215 = 0.0, $9216 = 0.0, $9217 = 0.0, $9218 = 0, $9219 = 0.0, $922 = 0, $9220 = 0.0, $9221 = 0.0, $9222 = 0.0, $9223 = 0.0, $9224 = 0.0, $9225 = 0, $9226 = 0.0, $9227 = 0.0, $9228 = 0.0, $9229 = 0.0, $923 = 0, $9230 = 0.0, $9231 = 0.0;
 var $9232 = 0.0, $9233 = 0.0, $9234 = 0.0, $9235 = 0, $9236 = 0.0, $9237 = 0, $9238 = 0.0, $9239 = 0.0, $924 = 0, $9240 = 0.0, $9241 = 0, $9242 = 0, $9243 = 0.0, $9244 = 0.0, $9245 = 0.0, $9246 = 0.0, $9247 = 0.0, $9248 = 0.0, $9249 = 0, $925 = 0;
 var $9250 = 0.0, $9251 = 0.0, $9252 = 0.0, $9253 = 0.0, $9254 = 0.0, $9255 = 0.0, $9256 = 0.0, $9257 = 0, $9258 = 0.0, $9259 = 0.0, $926 = 0, $9260 = 0.0, $9261 = 0.0, $9262 = 0.0, $9263 = 0, $9264 = 0, $9265 = 0.0, $9266 = 0.0, $9267 = 0.0, $9268 = 0.0;
 var $9269 = 0.0, $927 = 0, $9270 = 0.0, $9271 = 0, $9272 = 0.0, $9273 = 0.0, $9274 = 0.0, $9275 = 0.0, $9276 = 0.0, $9277 = 0.0, $9278 = 0.0, $9279 = 0, $928 = 0, $9280 = 0.0, $9281 = 0.0, $9282 = 0.0, $9283 = 0.0, $9284 = 0.0, $9285 = 0, $9286 = 0;
 var $9287 = 0.0, $9288 = 0.0, $9289 = 0.0, $929 = 0, $9290 = 0.0, $9291 = 0.0, $9292 = 0.0, $9293 = 0.0, $9294 = 0.0, $9295 = 0.0, $9296 = 0.0, $9297 = 0.0, $9298 = 0.0, $9299 = 0.0, $93 = 0, $930 = 0, $9300 = 0.0, $9301 = 0.0, $9302 = 0, $9303 = 0.0;
 var $9304 = 0.0, $9305 = 0, $9306 = 0, $9307 = 0.0, $9308 = 0.0, $9309 = 0, $931 = 0, $9310 = 0, $9311 = 0.0, $9312 = 0.0, $9313 = 0, $9314 = 0, $9315 = 0.0, $9316 = 0.0, $9317 = 0, $9318 = 0, $9319 = 0.0, $932 = 0.0, $9320 = 0.0, $9321 = 0;
 var $9322 = 0, $9323 = 0.0, $9324 = 0.0, $9325 = 0, $9326 = 0, $9327 = 0.0, $9328 = 0.0, $9329 = 0, $933 = 0, $9330 = 0, $9331 = 0.0, $9332 = 0.0, $9333 = 0, $9334 = 0, $9335 = 0.0, $9336 = 0.0, $9337 = 0, $9338 = 0.0, $9339 = 0, $934 = 0;
 var $9340 = 0.0, $9341 = 0.0, $9342 = 0, $9343 = 0.0, $9344 = 0, $9345 = 0.0, $9346 = 0.0, $9347 = 0, $9348 = 0.0, $9349 = 0.0, $935 = 0, $9350 = 0, $9351 = 0.0, $9352 = 0, $9353 = 0.0, $9354 = 0.0, $9355 = 0, $9356 = 0.0, $9357 = 0, $9358 = 0.0;
 var $9359 = 0.0, $936 = 0.0, $9360 = 0, $9361 = 0.0, $9362 = 0, $9363 = 0.0, $9364 = 0.0, $9365 = 0.0, $9366 = 0.0, $9367 = 0.0, $9368 = 0, $9369 = 0.0, $937 = 0, $9370 = 0.0, $9371 = 0.0, $9372 = 0, $9373 = 0.0, $9374 = 0.0, $9375 = 0.0, $9376 = 0;
 var $9377 = 0.0, $9378 = 0.0, $9379 = 0.0, $938 = 0, $9380 = 0.0, $9381 = 0, $9382 = 0.0, $9383 = 0.0, $9384 = 0.0, $9385 = 0, $9386 = 0.0, $9387 = 0.0, $9388 = 0.0, $9389 = 0.0, $939 = 0, $9390 = 0.0, $9391 = 0.0, $9392 = 0.0, $9393 = 0.0, $9394 = 0;
 var $9395 = 0, $9396 = 0.0, $9397 = 0.0, $9398 = 0.0, $9399 = 0, $94 = 0.0, $940 = 0.0, $9400 = 0.0, $9401 = 0.0, $9402 = 0.0, $9403 = 0.0, $9404 = 0.0, $9405 = 0.0, $9406 = 0.0, $9407 = 0.0, $9408 = 0, $9409 = 0, $941 = 0, $9410 = 0.0, $9411 = 0.0;
 var $9412 = 0.0, $9413 = 0.0, $9414 = 0.0, $9415 = 0.0, $9416 = 0.0, $9417 = 0, $9418 = 0.0, $9419 = 0.0, $942 = 0, $9420 = 0.0, $9421 = 0.0, $9422 = 0, $9423 = 0, $9424 = 0.0, $9425 = 0, $9426 = 0.0, $9427 = 0.0, $9428 = 0, $9429 = 0.0, $943 = 0.0;
 var $9430 = 0.0, $9431 = 0.0, $9432 = 0.0, $9433 = 0.0, $9434 = 0, $9435 = 0, $9436 = 0.0, $9437 = 0, $9438 = 0.0, $9439 = 0.0, $944 = 0.0, $9440 = 0, $9441 = 0.0, $9442 = 0.0, $9443 = 0.0, $9444 = 0.0, $9445 = 0.0, $9446 = 0, $9447 = 0, $9448 = 0.0;
 var $9449 = 0.0, $945 = 0, $9450 = 0.0, $9451 = 0.0, $9452 = 0, $9453 = 0.0, $9454 = 0, $9455 = 0.0, $9456 = 0.0, $9457 = 0.0, $9458 = 0, $9459 = 0, $946 = 0.0, $9460 = 0.0, $9461 = 0.0, $9462 = 0.0, $9463 = 0, $9464 = 0.0, $9465 = 0.0, $9466 = 0.0;
 var $9467 = 0.0, $9468 = 0.0, $9469 = 0.0, $947 = 0.0, $9470 = 0.0, $9471 = 0.0, $9472 = 0, $9473 = 0, $9474 = 0.0, $9475 = 0.0, $9476 = 0.0, $9477 = 0, $9478 = 0.0, $9479 = 0.0, $948 = 0, $9480 = 0.0, $9481 = 0.0, $9482 = 0.0, $9483 = 0.0, $9484 = 0.0;
 var $9485 = 0.0, $9486 = 0, $9487 = 0, $9488 = 0.0, $9489 = 0.0, $949 = 0.0, $9490 = 0.0, $9491 = 0.0, $9492 = 0.0, $9493 = 0.0, $9494 = 0.0, $9495 = 0, $9496 = 0.0, $9497 = 0.0, $9498 = 0.0, $9499 = 0.0, $95 = 0.0, $950 = 0.0, $9500 = 0, $9501 = 0;
 var $9502 = 0.0, $9503 = 0, $9504 = 0.0, $9505 = 0.0, $9506 = 0, $9507 = 0.0, $9508 = 0.0, $9509 = 0, $951 = 0.0, $9510 = 0, $9511 = 0.0, $9512 = 0.0, $9513 = 0, $9514 = 0, $9515 = 0.0, $9516 = 0.0, $9517 = 0, $9518 = 0.0, $9519 = 0, $952 = 0.0;
 var $9520 = 0.0, $9521 = 0.0, $9522 = 0, $9523 = 0.0, $9524 = 0, $9525 = 0.0, $9526 = 0.0, $9527 = 0, $9528 = 0.0, $9529 = 0.0, $953 = 0, $9530 = 0, $9531 = 0.0, $9532 = 0, $9533 = 0.0, $9534 = 0.0, $9535 = 0, $9536 = 0.0, $9537 = 0, $9538 = 0.0;
 var $9539 = 0.0, $954 = 0.0, $9540 = 0, $9541 = 0.0, $9542 = 0, $9543 = 0.0, $9544 = 0.0, $9545 = 0.0, $9546 = 0.0, $9547 = 0.0, $9548 = 0, $9549 = 0.0, $955 = 0.0, $9550 = 0.0, $9551 = 0.0, $9552 = 0, $9553 = 0.0, $9554 = 0.0, $9555 = 0.0, $9556 = 0;
 var $9557 = 0.0, $9558 = 0.0, $9559 = 0.0, $956 = 0.0, $9560 = 0.0, $9561 = 0, $9562 = 0.0, $9563 = 0.0, $9564 = 0.0, $9565 = 0, $9566 = 0.0, $9567 = 0.0, $9568 = 0.0, $9569 = 0.0, $957 = 0.0, $9570 = 0.0, $9571 = 0.0, $9572 = 0.0, $9573 = 0.0, $9574 = 0;
 var $9575 = 0, $9576 = 0.0, $9577 = 0.0, $9578 = 0.0, $9579 = 0, $958 = 0.0, $9580 = 0.0, $9581 = 0.0, $9582 = 0.0, $9583 = 0.0, $9584 = 0.0, $9585 = 0.0, $9586 = 0.0, $9587 = 0.0, $9588 = 0, $9589 = 0, $959 = 0, $9590 = 0.0, $9591 = 0.0, $9592 = 0.0;
 var $9593 = 0, $9594 = 0.0, $9595 = 0.0, $9596 = 0.0, $9597 = 0.0, $9598 = 0.0, $9599 = 0.0, $96 = 0.0, $960 = 0.0, $9600 = 0.0, $9601 = 0.0, $9602 = 0, $9603 = 0, $9604 = 0.0, $9605 = 0, $9606 = 0.0, $9607 = 0.0, $9608 = 0, $9609 = 0.0, $961 = 0.0;
 var $9610 = 0.0, $9611 = 0.0, $9612 = 0.0, $9613 = 0.0, $9614 = 0, $9615 = 0, $9616 = 0.0, $9617 = 0, $9618 = 0.0, $9619 = 0.0, $962 = 0.0, $9620 = 0, $9621 = 0.0, $9622 = 0.0, $9623 = 0.0, $9624 = 0.0, $9625 = 0.0, $9626 = 0, $9627 = 0, $9628 = 0.0;
 var $9629 = 0, $963 = 0, $9630 = 0.0, $9631 = 0.0, $9632 = 0, $9633 = 0.0, $9634 = 0.0, $9635 = 0.0, $9636 = 0.0, $9637 = 0.0, $9638 = 0, $9639 = 0, $964 = 0.0, $9640 = 0.0, $9641 = 0.0, $9642 = 0.0, $9643 = 0, $9644 = 0.0, $9645 = 0.0, $9646 = 0.0;
 var $9647 = 0.0, $9648 = 0.0, $9649 = 0.0, $965 = 0, $9650 = 0.0, $9651 = 0.0, $9652 = 0, $9653 = 0, $9654 = 0.0, $9655 = 0.0, $9656 = 0.0, $9657 = 0, $9658 = 0.0, $9659 = 0.0, $966 = 0.0, $9660 = 0.0, $9661 = 0.0, $9662 = 0.0, $9663 = 0.0, $9664 = 0.0;
 var $9665 = 0.0, $9666 = 0, $9667 = 0, $9668 = 0.0, $9669 = 0.0, $967 = 0.0, $9670 = 0.0, $9671 = 0, $9672 = 0.0, $9673 = 0.0, $9674 = 0.0, $9675 = 0.0, $9676 = 0.0, $9677 = 0.0, $9678 = 0.0, $9679 = 0.0, $968 = 0.0, $9680 = 0, $9681 = 0, $9682 = 0.0;
 var $9683 = 0, $9684 = 0.0, $9685 = 0, $9686 = 0.0, $9687 = 0.0, $9688 = 0, $9689 = 0, $969 = 0.0, $9690 = 0.0, $9691 = 0.0, $9692 = 0, $9693 = 0, $9694 = 0.0, $9695 = 0.0, $9696 = 0, $9697 = 0.0, $9698 = 0, $9699 = 0.0, $97 = 0.0, $970 = 0;
 var $9700 = 0.0, $9701 = 0, $9702 = 0.0, $9703 = 0, $9704 = 0.0, $9705 = 0.0, $9706 = 0, $9707 = 0.0, $9708 = 0.0, $9709 = 0, $971 = 0.0, $9710 = 0.0, $9711 = 0, $9712 = 0.0, $9713 = 0.0, $9714 = 0, $9715 = 0.0, $9716 = 0, $9717 = 0.0, $9718 = 0.0;
 var $9719 = 0, $972 = 0, $9720 = 0.0, $9721 = 0, $9722 = 0.0, $9723 = 0.0, $9724 = 0.0, $9725 = 0.0, $9726 = 0.0, $9727 = 0, $9728 = 0.0, $9729 = 0.0, $973 = 0.0, $9730 = 0.0, $9731 = 0, $9732 = 0.0, $9733 = 0.0, $9734 = 0.0, $9735 = 0, $9736 = 0.0;
 var $9737 = 0.0, $9738 = 0.0, $9739 = 0.0, $974 = 0.0, $9740 = 0.0, $9741 = 0.0, $9742 = 0.0, $9743 = 0, $9744 = 0.0, $9745 = 0.0, $9746 = 0.0, $9747 = 0.0, $9748 = 0, $9749 = 0.0, $975 = 0.0, $9750 = 0.0, $9751 = 0.0, $9752 = 0.0, $9753 = 0, $9754 = 0;
 var $9755 = 0.0, $9756 = 0.0, $9757 = 0.0, $9758 = 0, $9759 = 0.0, $976 = 0, $9760 = 0.0, $9761 = 0.0, $9762 = 0.0, $9763 = 0.0, $9764 = 0.0, $9765 = 0.0, $9766 = 0.0, $9767 = 0, $9768 = 0.0, $9769 = 0.0, $977 = 0.0, $9770 = 0.0, $9771 = 0, $9772 = 0.0;
 var $9773 = 0.0, $9774 = 0.0, $9775 = 0.0, $9776 = 0, $9777 = 0.0, $9778 = 0.0, $9779 = 0.0, $978 = 0.0, $9780 = 0.0, $9781 = 0, $9782 = 0, $9783 = 0.0, $9784 = 0, $9785 = 0.0, $9786 = 0.0, $9787 = 0, $9788 = 0.0, $9789 = 0.0, $979 = 0.0, $9790 = 0.0;
 var $9791 = 0.0, $9792 = 0.0, $9793 = 0, $9794 = 0, $9795 = 0.0, $9796 = 0.0, $9797 = 0.0, $9798 = 0.0, $9799 = 0, $98 = 0, $980 = 0, $9800 = 0.0, $9801 = 0, $9802 = 0.0, $9803 = 0.0, $9804 = 0.0, $9805 = 0, $9806 = 0, $9807 = 0.0, $9808 = 0.0;
 var $9809 = 0.0, $981 = 0.0, $9810 = 0.0, $9811 = 0, $9812 = 0.0, $9813 = 0, $9814 = 0.0, $9815 = 0.0, $9816 = 0.0, $9817 = 0, $9818 = 0, $9819 = 0.0, $982 = 0.0, $9820 = 0.0, $9821 = 0.0, $9822 = 0, $9823 = 0.0, $9824 = 0.0, $9825 = 0.0, $9826 = 0.0;
 var $9827 = 0.0, $9828 = 0.0, $9829 = 0.0, $983 = 0, $9830 = 0.0, $9831 = 0, $9832 = 0, $9833 = 0.0, $9834 = 0.0, $9835 = 0.0, $9836 = 0.0, $9837 = 0.0, $9838 = 0.0, $9839 = 0.0, $984 = 0.0, $9840 = 0, $9841 = 0.0, $9842 = 0.0, $9843 = 0.0, $9844 = 0.0;
 var $9845 = 0, $9846 = 0.0, $9847 = 0.0, $9848 = 0.0, $9849 = 0, $985 = 0.0, $9850 = 0.0, $9851 = 0.0, $9852 = 0.0, $9853 = 0.0, $9854 = 0, $9855 = 0.0, $9856 = 0.0, $9857 = 0.0, $9858 = 0.0, $9859 = 0, $986 = 0.0, $9860 = 0, $9861 = 0.0, $9862 = 0;
 var $9863 = 0.0, $9864 = 0, $9865 = 0, $9866 = 0.0, $9867 = 0, $9868 = 0.0, $9869 = 0.0, $987 = 0.0, $9870 = 0, $9871 = 0, $9872 = 0.0, $9873 = 0.0, $9874 = 0, $9875 = 0, $9876 = 0.0, $9877 = 0.0, $9878 = 0, $9879 = 0, $988 = 0, $9880 = 0.0;
 var $9881 = 0, $9882 = 0.0, $9883 = 0.0, $9884 = 0.0, $9885 = 0, $9886 = 0.0, $9887 = 0.0, $9888 = 0, $9889 = 0.0, $989 = 0.0, $9890 = 0.0, $9891 = 0, $9892 = 0.0, $9893 = 0.0, $9894 = 0, $9895 = 0.0, $9896 = 0.0, $9897 = 0, $9898 = 0.0, $9899 = 0.0;
 var $99 = 0, $990 = 0.0, $9900 = 0.0, $9901 = 0.0, $9902 = 0.0, $9903 = 0.0, $9904 = 0.0, $9905 = 0, $9906 = 0.0, $9907 = 0, $9908 = 0, $9909 = 0.0, $991 = 0, $9910 = 0, $9911 = 0.0, $9912 = 0, $9913 = 0.0, $9914 = 0, $9915 = 0, $9916 = 0.0;
 var $9917 = 0.0, $9918 = 0.0, $9919 = 0.0, $992 = 0.0, $9920 = 0, $9921 = 0.0, $9922 = 0, $9923 = 0.0, $9924 = 0.0, $9925 = 0.0, $9926 = 0, $9927 = 0, $9928 = 0.0, $9929 = 0.0, $993 = 0, $9930 = 0.0, $9931 = 0.0, $9932 = 0, $9933 = 0.0, $9934 = 0.0;
 var $9935 = 0.0, $9936 = 0.0, $9937 = 0.0, $9938 = 0, $9939 = 0, $994 = 0.0, $9940 = 0.0, $9941 = 0.0, $9942 = 0.0, $9943 = 0.0, $9944 = 0, $9945 = 0.0, $9946 = 0.0, $9947 = 0.0, $9948 = 0.0, $9949 = 0.0, $995 = 0.0, $9950 = 0, $9951 = 0, $9952 = 0.0;
 var $9953 = 0.0, $9954 = 0.0, $9955 = 0.0, $9956 = 0.0, $9957 = 0, $9958 = 0.0, $9959 = 0.0, $996 = 0.0, $9960 = 0.0, $9961 = 0.0, $9962 = 0.0, $9963 = 0, $9964 = 0.0, $9965 = 0.0, $9966 = 0, $9967 = 0, $9968 = 0.0, $9969 = 0.0, $997 = 0, $9970 = 0;
 var $9971 = 0, $9972 = 0.0, $9973 = 0.0, $9974 = 0, $9975 = 0, $9976 = 0.0, $9977 = 0.0, $9978 = 0, $9979 = 0, $998 = 0.0, $9980 = 0.0, $9981 = 0.0, $9982 = 0, $9983 = 0, $9984 = 0.0, $9985 = 0.0, $9986 = 0, $9987 = 0, $9988 = 0.0, $9989 = 0.0;
 var $999 = 0, $9990 = 0, $9991 = 0, $9992 = 0.0, $9993 = 0.0, $9994 = 0, $9995 = 0, $9996 = 0.0, $9997 = 0.0, $9998 = 0, $9999 = 0, $bgotonextstatement = 0, $bgotonextstatement102 = 0, $bgotonextstatement112 = 0, $bgotonextstatement151 = 0, $bgotonextstatement161 = 0, $bgotonextstatement171 = 0, $bgotonextstatement181 = 0, $bgotonextstatement191 = 0, $bgotonextstatement201 = 0;
 var $bgotonextstatement21 = 0, $bgotonextstatement211 = 0, $bgotonextstatement221 = 0, $bgotonextstatement231 = 0, $bgotonextstatement32 = 0, $bgotonextstatement4 = 0, $bgotonextstatement42 = 0, $bgotonextstatement52 = 0, $bgotonextstatement62 = 0, $bgotonextstatement72 = 0, $bgotonextstatement82 = 0, $bgotonextstatement92 = 0, $cj3array = 0, $cj3array141 = 0, $cj3array23 = 0, $cj3array6 = 0, $cj4array = 0, $cj5array = 0, $cj5array104 = 0, $cj5array114 = 0;
 var $cj5array123 = 0, $cj5array13 = 0, $cj5array132 = 0, $cj5array153 = 0, $cj5array163 = 0, $cj5array173 = 0, $cj5array183 = 0, $cj5array193 = 0, $cj5array203 = 0, $cj5array213 = 0, $cj5array223 = 0, $cj5array233 = 0, $cj5array242 = 0, $cj5array251 = 0, $cj5array34 = 0, $cj5array44 = 0, $cj5array54 = 0, $cj5array64 = 0, $cj5array74 = 0, $cj5array84 = 0;
 var $cj5array94 = 0, $evalcond = 0, $evalcond109 = 0, $evalcond11 = 0, $evalcond119 = 0, $evalcond128 = 0, $evalcond137 = 0, $evalcond146 = 0, $evalcond150 = 0, $evalcond158 = 0, $evalcond168 = 0, $evalcond178 = 0, $evalcond18 = 0, $evalcond188 = 0, $evalcond198 = 0, $evalcond2 = 0, $evalcond208 = 0, $evalcond218 = 0, $evalcond228 = 0, $evalcond238 = 0;
 var $evalcond247 = 0, $evalcond256 = 0, $evalcond28 = 0, $evalcond3 = 0, $evalcond31 = 0, $evalcond39 = 0, $evalcond49 = 0, $evalcond59 = 0, $evalcond69 = 0, $evalcond79 = 0, $evalcond89 = 0, $evalcond99 = 0, $iij3 = 0, $iij310 = 0, $iij3145 = 0, $iij327 = 0, $iij4 = 0, $iij5 = 0, $iij5108 = 0, $iij5118 = 0;
 var $iij5127 = 0, $iij5136 = 0, $iij5157 = 0, $iij5167 = 0, $iij517 = 0, $iij5177 = 0, $iij5187 = 0, $iij5197 = 0, $iij5207 = 0, $iij5217 = 0, $iij5227 = 0, $iij5237 = 0, $iij5246 = 0, $iij5255 = 0, $iij538 = 0, $iij548 = 0, $iij558 = 0, $iij568 = 0, $iij578 = 0, $iij588 = 0;
 var $iij598 = 0, $ij3 = 0, $ij3144 = 0, $ij326 = 0, $ij39 = 0, $ij4 = 0, $ij5 = 0, $ij5107 = 0, $ij5117 = 0, $ij5126 = 0, $ij5135 = 0, $ij5156 = 0, $ij516 = 0, $ij5166 = 0, $ij5176 = 0, $ij5186 = 0, $ij5196 = 0, $ij5206 = 0, $ij5216 = 0, $ij5226 = 0;
 var $ij5236 = 0, $ij5245 = 0, $ij5254 = 0, $ij537 = 0, $ij547 = 0, $ij557 = 0, $ij567 = 0, $ij577 = 0, $ij587 = 0, $ij597 = 0, $j3array = 0, $j3array140 = 0, $j3array22 = 0, $j3array5 = 0, $j3eval = 0, $j3eval1 = 0, $j3valid = 0, $j3valid143 = 0, $j3valid25 = 0, $j3valid8 = 0;
 var $j4array = 0, $j4valid = 0, $j5array = 0, $j5array103 = 0, $j5array113 = 0, $j5array12 = 0, $j5array122 = 0, $j5array131 = 0, $j5array152 = 0, $j5array162 = 0, $j5array172 = 0, $j5array182 = 0, $j5array192 = 0, $j5array202 = 0, $j5array212 = 0, $j5array222 = 0, $j5array232 = 0, $j5array241 = 0, $j5array250 = 0, $j5array33 = 0;
 var $j5array43 = 0, $j5array53 = 0, $j5array63 = 0, $j5array73 = 0, $j5array83 = 0, $j5array93 = 0, $j5eval = 0, $j5eval147 = 0, $j5eval148 = 0, $j5eval149 = 0, $j5eval29 = 0, $j5eval30 = 0, $j5valid = 0, $j5valid106 = 0, $j5valid116 = 0, $j5valid125 = 0, $j5valid134 = 0, $j5valid15 = 0, $j5valid155 = 0, $j5valid165 = 0;
 var $j5valid175 = 0, $j5valid185 = 0, $j5valid195 = 0, $j5valid205 = 0, $j5valid215 = 0, $j5valid225 = 0, $j5valid235 = 0, $j5valid244 = 0, $j5valid253 = 0, $j5valid36 = 0, $j5valid46 = 0, $j5valid56 = 0, $j5valid66 = 0, $j5valid76 = 0, $j5valid86 = 0, $j5valid96 = 0, $rotationiter = 0, $sj3array = 0, $sj3array142 = 0, $sj3array24 = 0;
 var $sj3array7 = 0, $sj4array = 0, $sj5array = 0, $sj5array105 = 0, $sj5array115 = 0, $sj5array124 = 0, $sj5array133 = 0, $sj5array14 = 0, $sj5array154 = 0, $sj5array164 = 0, $sj5array174 = 0, $sj5array184 = 0, $sj5array194 = 0, $sj5array204 = 0, $sj5array214 = 0, $sj5array224 = 0, $sj5array234 = 0, $sj5array243 = 0, $sj5array252 = 0, $sj5array35 = 0;
 var $sj5array45 = 0, $sj5array55 = 0, $sj5array65 = 0, $sj5array75 = 0, $sj5array85 = 0, $sj5array95 = 0, $vfree = 0, $vfree101 = 0, $vfree111 = 0, $vfree121 = 0, $vfree130 = 0, $vfree139 = 0, $vfree160 = 0, $vfree170 = 0, $vfree180 = 0, $vfree190 = 0, $vfree20 = 0, $vfree200 = 0, $vfree210 = 0, $vfree220 = 0;
 var $vfree230 = 0, $vfree240 = 0, $vfree249 = 0, $vfree258 = 0, $vfree41 = 0, $vfree51 = 0, $vfree61 = 0, $vfree71 = 0, $vfree81 = 0, $vfree91 = 0, $vinfos = 0, $vinfos100 = 0, $vinfos110 = 0, $vinfos120 = 0, $vinfos129 = 0, $vinfos138 = 0, $vinfos159 = 0, $vinfos169 = 0, $vinfos179 = 0, $vinfos189 = 0;
 var $vinfos19 = 0, $vinfos199 = 0, $vinfos209 = 0, $vinfos219 = 0, $vinfos229 = 0, $vinfos239 = 0, $vinfos248 = 0, $vinfos257 = 0, $vinfos40 = 0, $vinfos50 = 0, $vinfos60 = 0, $vinfos70 = 0, $vinfos80 = 0, $vinfos90 = 0, $x109 = 0.0, $x110 = 0.0, $x111 = 0.0, $x112 = 0.0, $x113 = 0.0, $x114 = 0.0;
 var $x115 = 0.0, $x116 = 0.0, $x117 = 0.0, $x118 = 0.0, $x119 = 0.0, $x120 = 0.0, $x121 = 0.0, $x122 = 0.0, $x123 = 0.0, $x124 = 0.0, $x125 = 0.0, $x126 = 0.0, $x127 = 0.0, $x128 = 0.0, $x129 = 0.0, $x130 = 0.0, $x131 = 0.0, $x132 = 0.0, $x133 = 0.0, $x134 = 0.0;
 var $x135 = 0.0, $x136 = 0.0, $x137 = 0.0, $x138 = 0.0, $x139 = 0.0, $x140 = 0.0, $x141 = 0.0, $x142 = 0.0, $x143 = 0.0, $x144 = 0.0, $x145 = 0.0, $x146 = 0, $x147 = 0.0, $x148 = 0.0, $x149 = 0.0, $x150 = 0.0, $x151 = 0.0, $x152 = 0.0, $x153 = 0.0, $x154 = 0.0;
 var $x155 = 0.0, $x156 = 0, $x157 = 0.0, $x158 = 0.0, $x159 = 0.0, $x160 = 0.0, $x161 = 0.0, $x162 = 0.0, $x163 = 0.0, $x164 = 0.0, $x165 = 0.0, $x166 = 0, $x167 = 0, $x168 = 0.0, $x169 = 0.0, $x170 = 0.0, $x171 = 0.0, $x172 = 0.0, $x173 = 0.0, $x174 = 0.0;
 var $x175 = 0.0, $x176 = 0.0, $x177 = 0.0, $x178 = 0.0, $x179 = 0.0, $x180 = 0.0, $x181 = 0.0, $x182 = 0.0, $x183 = 0.0, $x184 = 0.0, $x185 = 0.0, $x186 = 0.0, $x187 = 0.0, $x188 = 0.0, $x189 = 0.0, $x190 = 0.0, $x191 = 0.0, $x192 = 0.0, $x193 = 0.0, $x194 = 0.0;
 var $x195 = 0.0, $x196 = 0.0, $x197 = 0.0, $x198 = 0.0, $x199 = 0.0, $x200 = 0.0, $x201 = 0.0, $x202 = 0.0, $x203 = 0.0, $x204 = 0.0, $x205 = 0.0, $x206 = 0.0, $x207 = 0.0, $x208 = 0.0, $x209 = 0.0, $x210 = 0.0, $x211 = 0.0, $x212 = 0.0, $x213 = 0.0, $x214 = 0;
 var $x215 = 0, $x216 = 0.0, $x217 = 0.0, $x218 = 0.0, $x219 = 0.0, $x220 = 0.0, $x221 = 0.0, $x222 = 0.0, $x223 = 0.0, $x224 = 0.0, $x225 = 0.0, $x226 = 0.0, $x227 = 0.0, $x228 = 0.0, $x229 = 0.0, $x230 = 0.0, $x231 = 0.0, $x232 = 0.0, $x233 = 0.0, $x234 = 0.0;
 var $x235 = 0.0, $x236 = 0.0, $x237 = 0.0, $x238 = 0.0, $x239 = 0.0, $x240 = 0.0, $x241 = 0.0, $x242 = 0.0, $x243 = 0.0, $x244 = 0.0, $x245 = 0.0, $x246 = 0.0, $x247 = 0.0, $x248 = 0.0, $x249 = 0.0, $x250 = 0.0, $x251 = 0.0, $x252 = 0.0, $x253 = 0.0, $x254 = 0.0;
 var $x255 = 0.0, $x256 = 0.0, $x257 = 0.0, $x258 = 0.0, $x259 = 0.0, $x260 = 0.0, $x261 = 0.0, $x262 = 0.0, $x263 = 0.0, $x264 = 0.0, $x265 = 0.0, $x266 = 0.0, $x267 = 0.0, $x268 = 0.0, $x269 = 0.0, $x270 = 0.0, $x271 = 0.0, $x272 = 0.0, $x273 = 0.0, $x274 = 0.0;
 var $x275 = 0.0, $x276 = 0.0, $x277 = 0.0, $x278 = 0, $x279 = 0, $x280 = 0.0, $x281 = 0.0, $x282 = 0.0, $x283 = 0.0, $x284 = 0.0, $x285 = 0.0, $x286 = 0, $x287 = 0, $x288 = 0, $x289 = 0.0, $x290 = 0.0, $x291 = 0.0, $x292 = 0.0, $x293 = 0.0, $x294 = 0.0;
 var $x295 = 0.0, $x296 = 0.0, $x297 = 0.0, $x298 = 0, $x299 = 0, $x300 = 0.0, $x301 = 0.0, $x302 = 0.0, $x303 = 0.0, $x304 = 0.0, $x305 = 0.0, $x306 = 0.0, $x307 = 0.0, $x308 = 0, $x309 = 0, $x310 = 0.0, $x311 = 0.0, $x312 = 0.0, $x313 = 0.0, $x314 = 0.0;
 var $x315 = 0.0, $x316 = 0.0, $x317 = 0.0, $x318 = 0, $x319 = 0, $x320 = 0.0, $x321 = 0.0, $x322 = 0.0, $x323 = 0.0, $x324 = 0.0, $x325 = 0.0, $x326 = 0.0, $x327 = 0.0, $x328 = 0.0, $x329 = 0.0, $x330 = 0.0, $x331 = 0.0, $x332 = 0.0, $x333 = 0.0, $x334 = 0.0;
 var $x335 = 0.0, $x336 = 0.0, $x337 = 0.0, $x338 = 0.0, $x339 = 0.0, $x340 = 0.0, $x341 = 0.0, $x342 = 0.0, $x343 = 0.0, $x344 = 0.0, $x345 = 0.0, $x346 = 0.0, $x347 = 0.0, $x348 = 0.0, $x349 = 0.0, $x350 = 0.0, $x351 = 0.0, $x352 = 0.0, $x353 = 0.0, $x354 = 0.0;
 var $x355 = 0.0, $x356 = 0.0, $x357 = 0.0, $x358 = 0.0, $x359 = 0.0, $x360 = 0.0, $x361 = 0.0, $x362 = 0.0, $x363 = 0.0, $x364 = 0.0, $x365 = 0.0, $x366 = 0, $x367 = 0, $x368 = 0.0, $x369 = 0.0, $x370 = 0.0, $x371 = 0.0, $x372 = 0.0, $x373 = 0.0, $x374 = 0.0;
 var $x375 = 0.0, $x376 = 0.0, $x377 = 0.0, $x378 = 0.0, $x379 = 0.0, $x380 = 0.0, $x381 = 0.0, $x382 = 0.0, $x383 = 0.0, $x384 = 0.0, $x385 = 0.0, $x386 = 0.0, $x387 = 0.0, $x388 = 0.0, $x389 = 0.0, $x390 = 0.0, $x391 = 0.0, $x392 = 0.0, $x393 = 0.0, $x394 = 0.0;
 var $x395 = 0.0, $x396 = 0.0, $x397 = 0.0, $x398 = 0.0, $x399 = 0.0, $x400 = 0.0, $x401 = 0.0, $x402 = 0.0, $x403 = 0.0, $x404 = 0.0, $x405 = 0.0, $x406 = 0.0, $x407 = 0.0, $x408 = 0.0, $x409 = 0.0, $x410 = 0.0, $x411 = 0.0, $x412 = 0.0, $x413 = 0.0, $x414 = 0.0;
 var $x415 = 0.0, $x416 = 0.0, $x417 = 0.0, $x418 = 0.0, $x419 = 0.0, $x420 = 0.0, $x421 = 0.0, $x422 = 0.0, $x423 = 0.0, $x424 = 0.0, $x425 = 0.0, $x426 = 0.0, $x427 = 0.0, $x428 = 0.0, $x429 = 0.0, $x430 = 0, $x431 = 0, $x432 = 0.0, $x433 = 0.0, $x434 = 0.0;
 var $x435 = 0.0, $x436 = 0.0, $x437 = 0.0, $x438 = 0, $x439 = 0, $x440 = 0, $x441 = 0.0, $x442 = 0.0, $x443 = 0.0, $x444 = 0.0, $x445 = 0.0, $x446 = 0.0, $x447 = 0.0, $x448 = 0.0, $x449 = 0.0, $x450 = 0, $x451 = 0, $x452 = 0.0, $x453 = 0.0, $x454 = 0.0;
 var $x455 = 0.0, $x456 = 0.0, $x457 = 0.0, $x458 = 0.0, $x459 = 0.0, $x460 = 0, $x461 = 0, $x462 = 0.0, $x463 = 0.0, $x464 = 0.0, $x465 = 0.0, $x466 = 0.0, $x467 = 0.0, $x468 = 0.0, $x469 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 7024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j4array = sp + 6016|0;
 $cj4array = sp + 6000|0;
 $sj4array = sp + 5984|0;
 $j4valid = sp + 7008|0;
 $j3eval = sp + 5968|0;
 $j3eval1 = sp + 5864|0;
 $evalcond = sp + 5720|0;
 $j3array = sp + 5704|0;
 $cj3array = sp + 5688|0;
 $sj3array = sp + 5672|0;
 $j3valid = sp + 7004|0;
 $x146 = sp + 5656|0;
 $evalcond2 = sp + 5640|0;
 $j5array = sp + 5632|0;
 $cj5array = sp + 5624|0;
 $sj5array = sp + 5616|0;
 $j5valid = sp + 7003|0;
 $evalcond3 = sp + 5544|0;
 $vinfos = sp + 6908|0;
 $vfree = sp + 6888|0;
 $j3array5 = sp + 5472|0;
 $cj3array6 = sp + 5456|0;
 $sj3array7 = sp + 5440|0;
 $j3valid8 = sp + 7000|0;
 $x156 = sp + 5424|0;
 $evalcond11 = sp + 5408|0;
 $j5array12 = sp + 5400|0;
 $cj5array13 = sp + 5392|0;
 $sj5array14 = sp + 5384|0;
 $j5valid15 = sp + 6999|0;
 $evalcond18 = sp + 5312|0;
 $vinfos19 = sp + 6860|0;
 $vfree20 = sp + 6848|0;
 $j3array22 = sp + 5248|0;
 $cj3array23 = sp + 5240|0;
 $sj3array24 = sp + 5232|0;
 $j3valid25 = sp + 6997|0;
 $x166 = sp + 5216|0;
 $x167 = sp + 5192|0;
 $evalcond28 = sp + 5128|0;
 $j5eval = sp + 5064|0;
 $j5eval29 = sp + 4952|0;
 $j5eval30 = sp + 4832|0;
 $evalcond31 = sp + 4640|0;
 $j5array33 = sp + 4600|0;
 $cj5array34 = sp + 4592|0;
 $sj5array35 = sp + 4584|0;
 $j5valid36 = sp + 6995|0;
 $x214 = sp + 4568|0;
 $x215 = sp + 4552|0;
 $evalcond39 = sp + 4488|0;
 $vinfos40 = sp + 6820|0;
 $vfree41 = sp + 6808|0;
 $j5array43 = sp + 4424|0;
 $cj5array44 = sp + 4416|0;
 $sj5array45 = sp + 4408|0;
 $j5valid46 = sp + 6993|0;
 $evalcond49 = sp + 4344|0;
 $vinfos50 = sp + 6788|0;
 $vfree51 = sp + 6776|0;
 $j5array53 = sp + 4256|0;
 $cj5array54 = sp + 4248|0;
 $sj5array55 = sp + 4240|0;
 $j5valid56 = sp + 6991|0;
 $evalcond59 = sp + 4176|0;
 $vinfos60 = sp + 6756|0;
 $vfree61 = sp + 6744|0;
 $j5array63 = sp + 4096|0;
 $cj5array64 = sp + 4088|0;
 $sj5array65 = sp + 4080|0;
 $j5valid66 = sp + 6989|0;
 $evalcond69 = sp + 4016|0;
 $vinfos70 = sp + 6724|0;
 $vfree71 = sp + 6712|0;
 $j5array73 = sp + 3944|0;
 $cj5array74 = sp + 3936|0;
 $sj5array75 = sp + 3928|0;
 $j5valid76 = sp + 6987|0;
 $evalcond79 = sp + 3856|0;
 $vinfos80 = sp + 6692|0;
 $vfree81 = sp + 6680|0;
 $j5array83 = sp + 3776|0;
 $cj5array84 = sp + 3768|0;
 $sj5array85 = sp + 3760|0;
 $j5valid86 = sp + 6985|0;
 $evalcond89 = sp + 3688|0;
 $vinfos90 = sp + 6660|0;
 $vfree91 = sp + 6648|0;
 $j5array93 = sp + 3592|0;
 $cj5array94 = sp + 3584|0;
 $sj5array95 = sp + 3576|0;
 $j5valid96 = sp + 6983|0;
 $evalcond99 = sp + 3512|0;
 $vinfos100 = sp + 6628|0;
 $vfree101 = sp + 6616|0;
 $j5array103 = sp + 3456|0;
 $cj5array104 = sp + 3448|0;
 $sj5array105 = sp + 3440|0;
 $j5valid106 = sp + 6981|0;
 $x278 = sp + 3424|0;
 $x279 = sp + 3408|0;
 $evalcond109 = sp + 3344|0;
 $vinfos110 = sp + 6596|0;
 $vfree111 = sp + 6584|0;
 $j5array113 = sp + 3296|0;
 $cj5array114 = sp + 3288|0;
 $sj5array115 = sp + 3280|0;
 $j5valid116 = sp + 6979|0;
 $x286 = sp + 3264|0;
 $x287 = sp + 3240|0;
 $x288 = sp + 3224|0;
 $evalcond119 = sp + 3128|0;
 $vinfos120 = sp + 6564|0;
 $vfree121 = sp + 6552|0;
 $j5array122 = sp + 3056|0;
 $cj5array123 = sp + 3048|0;
 $sj5array124 = sp + 3040|0;
 $j5valid125 = sp + 6978|0;
 $x298 = sp + 3024|0;
 $x299 = sp + 3000|0;
 $evalcond128 = sp + 2904|0;
 $vinfos129 = sp + 6532|0;
 $vfree130 = sp + 6520|0;
 $j5array131 = sp + 2832|0;
 $cj5array132 = sp + 2824|0;
 $sj5array133 = sp + 2816|0;
 $j5valid134 = sp + 6977|0;
 $x308 = sp + 2800|0;
 $x309 = sp + 2784|0;
 $evalcond137 = sp + 2688|0;
 $vinfos138 = sp + 6500|0;
 $vfree139 = sp + 6488|0;
 $j3array140 = sp + 2616|0;
 $cj3array141 = sp + 2608|0;
 $sj3array142 = sp + 2600|0;
 $j3valid143 = sp + 6976|0;
 $x318 = sp + 2584|0;
 $x319 = sp + 2568|0;
 $evalcond146 = sp + 2504|0;
 $j5eval147 = sp + 2440|0;
 $j5eval148 = sp + 2328|0;
 $j5eval149 = sp + 2208|0;
 $evalcond150 = sp + 2016|0;
 $j5array152 = sp + 1976|0;
 $cj5array153 = sp + 1968|0;
 $sj5array154 = sp + 1960|0;
 $j5valid155 = sp + 6974|0;
 $x366 = sp + 1944|0;
 $x367 = sp + 1928|0;
 $evalcond158 = sp + 1864|0;
 $vinfos159 = sp + 6460|0;
 $vfree160 = sp + 6448|0;
 $j5array162 = sp + 1800|0;
 $cj5array163 = sp + 1792|0;
 $sj5array164 = sp + 1784|0;
 $j5valid165 = sp + 6972|0;
 $evalcond168 = sp + 1720|0;
 $vinfos169 = sp + 6428|0;
 $vfree170 = sp + 6416|0;
 $j5array172 = sp + 1632|0;
 $cj5array173 = sp + 1624|0;
 $sj5array174 = sp + 1616|0;
 $j5valid175 = sp + 6970|0;
 $evalcond178 = sp + 1552|0;
 $vinfos179 = sp + 6396|0;
 $vfree180 = sp + 6384|0;
 $j5array182 = sp + 1472|0;
 $cj5array183 = sp + 1464|0;
 $sj5array184 = sp + 1456|0;
 $j5valid185 = sp + 6968|0;
 $evalcond188 = sp + 1392|0;
 $vinfos189 = sp + 6364|0;
 $vfree190 = sp + 6352|0;
 $j5array192 = sp + 1320|0;
 $cj5array193 = sp + 1312|0;
 $sj5array194 = sp + 1304|0;
 $j5valid195 = sp + 6966|0;
 $evalcond198 = sp + 1232|0;
 $vinfos199 = sp + 6332|0;
 $vfree200 = sp + 6320|0;
 $j5array202 = sp + 1152|0;
 $cj5array203 = sp + 1144|0;
 $sj5array204 = sp + 1136|0;
 $j5valid205 = sp + 6964|0;
 $evalcond208 = sp + 1064|0;
 $vinfos209 = sp + 6300|0;
 $vfree210 = sp + 6288|0;
 $j5array212 = sp + 968|0;
 $cj5array213 = sp + 960|0;
 $sj5array214 = sp + 952|0;
 $j5valid215 = sp + 6962|0;
 $evalcond218 = sp + 888|0;
 $vinfos219 = sp + 6268|0;
 $vfree220 = sp + 6256|0;
 $j5array222 = sp + 832|0;
 $cj5array223 = sp + 824|0;
 $sj5array224 = sp + 816|0;
 $j5valid225 = sp + 6960|0;
 $x430 = sp + 800|0;
 $x431 = sp + 784|0;
 $evalcond228 = sp + 720|0;
 $vinfos229 = sp + 6236|0;
 $vfree230 = sp + 6224|0;
 $j5array232 = sp + 672|0;
 $cj5array233 = sp + 664|0;
 $sj5array234 = sp + 656|0;
 $j5valid235 = sp + 6958|0;
 $x438 = sp + 640|0;
 $x439 = sp + 616|0;
 $x440 = sp + 600|0;
 $evalcond238 = sp + 504|0;
 $vinfos239 = sp + 6204|0;
 $vfree240 = sp + 6192|0;
 $j5array241 = sp + 432|0;
 $cj5array242 = sp + 424|0;
 $sj5array243 = sp + 416|0;
 $j5valid244 = sp + 6957|0;
 $x450 = sp + 400|0;
 $x451 = sp + 376|0;
 $evalcond247 = sp + 280|0;
 $vinfos248 = sp + 6172|0;
 $vfree249 = sp + 6160|0;
 $j5array250 = sp + 208|0;
 $cj5array251 = sp + 200|0;
 $sj5array252 = sp + 192|0;
 $j5valid253 = sp + 6956|0;
 $x460 = sp + 176|0;
 $x461 = sp + 160|0;
 $evalcond256 = sp + 64|0;
 $vinfos257 = sp + 6140|0;
 $vfree258 = sp + 6128|0;
 $0 = $this;
 $1 = $solutions;
 $4 = $0;
 $rotationiter = 0;
 L1: while(1) {
  $5 = $rotationiter;
  $6 = ($5|0)<(1);
  if (!($6)) {
   label = 2188;
   break;
  }
  $7 = (($4) + 8|0);
  $8 = +HEAPF64[$7>>3];
  $9 = 1.0 * $8;
  $x109 = $9;
  $10 = (($4) + 344|0);
  $11 = +HEAPF64[$10>>3];
  $12 = (($4) + 16|0);
  $13 = +HEAPF64[$12>>3];
  $14 = $11 * $13;
  $x110 = $14;
  $15 = (($4) + 320|0);
  $16 = +HEAPF64[$15>>3];
  $17 = (($4) + 16|0);
  $18 = +HEAPF64[$17>>3];
  $19 = $16 * $18;
  $x111 = $19;
  $20 = (($4) + 88|0);
  $21 = +HEAPF64[$20>>3];
  $22 = 1.0 * $21;
  $x112 = $22;
  $23 = (($4) + 48|0);
  $24 = +HEAPF64[$23>>3];
  $25 = (($4) + 96|0);
  $26 = +HEAPF64[$25>>3];
  $27 = $24 * $26;
  $x113 = $27;
  $28 = (($4) + 368|0);
  $29 = +HEAPF64[$28>>3];
  $30 = (($4) + 16|0);
  $31 = +HEAPF64[$30>>3];
  $32 = $29 * $31;
  $x114 = $32;
  $33 = (($4) + 88|0);
  $34 = +HEAPF64[$33>>3];
  $35 = (($4) + 56|0);
  $36 = +HEAPF64[$35>>3];
  $37 = $34 * $36;
  $38 = $x113;
  $39 = $37 + $38;
  $x115 = $39;
  $40 = (($4) + 48|0);
  $41 = +HEAPF64[$40>>3];
  $42 = -1.0 * $41;
  $43 = $x112;
  $44 = $42 * $43;
  $45 = (($4) + 56|0);
  $46 = +HEAPF64[$45>>3];
  $47 = (($4) + 96|0);
  $48 = +HEAPF64[$47>>3];
  $49 = $46 * $48;
  $50 = $44 + $49;
  $x116 = $50;
  $51 = (($4) + 16|0);
  $52 = +HEAPF64[$51>>3];
  $53 = $x116;
  $54 = $52 * $53;
  $x117 = $54;
  $55 = (($4) + 8|0);
  $56 = +HEAPF64[$55>>3];
  $57 = $x115;
  $58 = $56 * $57;
  $x118 = $58;
  $59 = (($4) + 8|0);
  $60 = +HEAPF64[$59>>3];
  $61 = $x116;
  $62 = $60 * $61;
  $x119 = $62;
  $63 = (($4) + 56|0);
  $64 = +HEAPF64[$63>>3];
  $65 = -1.0 * $64;
  $66 = $x112;
  $67 = $65 * $66;
  $68 = $x113;
  $69 = -1.0 * $68;
  $70 = $67 + $69;
  $x120 = $70;
  $71 = $x111;
  $72 = $x115;
  $73 = $71 * $72;
  $74 = (($4) + 392|0);
  $75 = +HEAPF64[$74>>3];
  $76 = $x116;
  $77 = $75 * $76;
  $78 = $73 + $77;
  $79 = (($4) + 248|0);
  $80 = +HEAPF64[$79>>3];
  $81 = $x118;
  $82 = $80 * $81;
  $83 = $78 + $82;
  $84 = (($4) + 240|0);
  HEAPF64[$84>>3] = $83;
  $85 = $x110;
  $86 = $x115;
  $87 = $85 * $86;
  $88 = (($4) + 416|0);
  $89 = +HEAPF64[$88>>3];
  $90 = $x116;
  $91 = $89 * $90;
  $92 = $87 + $91;
  $93 = (($4) + 272|0);
  $94 = +HEAPF64[$93>>3];
  $95 = $x118;
  $96 = $94 * $95;
  $97 = $92 + $96;
  $98 = (($4) + 264|0);
  HEAPF64[$98>>3] = $97;
  $99 = (($4) + 440|0);
  $100 = +HEAPF64[$99>>3];
  $101 = $x116;
  $102 = $100 * $101;
  $103 = (($4) + 296|0);
  $104 = +HEAPF64[$103>>3];
  $105 = $x118;
  $106 = $104 * $105;
  $107 = $102 + $106;
  $108 = $x114;
  $109 = $x115;
  $110 = $108 * $109;
  $111 = $107 + $110;
  $112 = (($4) + 288|0);
  HEAPF64[$112>>3] = $111;
  $113 = (($4) + 248|0);
  $114 = +HEAPF64[$113>>3];
  $115 = (($4) + 16|0);
  $116 = +HEAPF64[$115>>3];
  $117 = $114 * $116;
  $118 = (($4) + 320|0);
  $119 = +HEAPF64[$118>>3];
  $120 = -1.0 * $119;
  $121 = $x109;
  $122 = $120 * $121;
  $123 = $117 + $122;
  $124 = (($4) + 312|0);
  HEAPF64[$124>>3] = $123;
  $125 = (($4) + 344|0);
  $126 = +HEAPF64[$125>>3];
  $127 = -1.0 * $126;
  $128 = $x109;
  $129 = $127 * $128;
  $130 = (($4) + 272|0);
  $131 = +HEAPF64[$130>>3];
  $132 = (($4) + 16|0);
  $133 = +HEAPF64[$132>>3];
  $134 = $131 * $133;
  $135 = $129 + $134;
  $136 = (($4) + 336|0);
  HEAPF64[$136>>3] = $135;
  $137 = (($4) + 368|0);
  $138 = +HEAPF64[$137>>3];
  $139 = -1.0 * $138;
  $140 = $x109;
  $141 = $139 * $140;
  $142 = (($4) + 296|0);
  $143 = +HEAPF64[$142>>3];
  $144 = (($4) + 16|0);
  $145 = +HEAPF64[$144>>3];
  $146 = $143 * $145;
  $147 = $141 + $146;
  $148 = (($4) + 360|0);
  HEAPF64[$148>>3] = $147;
  $149 = $x111;
  $150 = $x116;
  $151 = $149 * $150;
  $152 = (($4) + 248|0);
  $153 = +HEAPF64[$152>>3];
  $154 = $x119;
  $155 = $153 * $154;
  $156 = $151 + $155;
  $157 = (($4) + 392|0);
  $158 = +HEAPF64[$157>>3];
  $159 = $x120;
  $160 = $158 * $159;
  $161 = $156 + $160;
  $162 = (($4) + 384|0);
  HEAPF64[$162>>3] = $161;
  $163 = $x110;
  $164 = $x116;
  $165 = $163 * $164;
  $166 = (($4) + 416|0);
  $167 = +HEAPF64[$166>>3];
  $168 = $x120;
  $169 = $167 * $168;
  $170 = $165 + $169;
  $171 = (($4) + 272|0);
  $172 = +HEAPF64[$171>>3];
  $173 = $x119;
  $174 = $172 * $173;
  $175 = $170 + $174;
  $176 = (($4) + 408|0);
  HEAPF64[$176>>3] = $175;
  $177 = (($4) + 296|0);
  $178 = +HEAPF64[$177>>3];
  $179 = $x119;
  $180 = $178 * $179;
  $181 = $x114;
  $182 = $x116;
  $183 = $181 * $182;
  $184 = $180 + $183;
  $185 = (($4) + 440|0);
  $186 = +HEAPF64[$185>>3];
  $187 = $x120;
  $188 = $186 * $187;
  $189 = $184 + $188;
  $190 = (($4) + 432|0);
  HEAPF64[$190>>3] = $189;
  ;HEAP8[$j4valid+0>>0]=0|0;HEAP8[$j4valid+1>>0]=0|0;
  $191 = (($4) + 550|0);
  HEAP8[$191>>0] = 2;
  $192 = (($4) + 432|0);
  $193 = +HEAPF64[$192>>3];
  HEAPF64[$cj4array>>3] = $193;
  $194 = +HEAPF64[$cj4array>>3];
  $195 = $194 >= -1.0000020000000001;
  if ($195) {
   $196 = +HEAPF64[$cj4array>>3];
   $197 = $196 <= 1.0000020000000001;
   if ($197) {
    $198 = (($j4valid) + 1|0);
    HEAP8[$198>>0] = 1;
    HEAP8[$j4valid>>0] = 1;
    $199 = +HEAPF64[$cj4array>>3];
    $200 = (+__Z6IKacosd($199));
    HEAPF64[$j4array>>3] = $200;
    $201 = +HEAPF64[$j4array>>3];
    $202 = (+__Z5IKsind($201));
    HEAPF64[$sj4array>>3] = $202;
    $203 = +HEAPF64[$cj4array>>3];
    $204 = (($cj4array) + 8|0);
    HEAPF64[$204>>3] = $203;
    $205 = +HEAPF64[$j4array>>3];
    $206 = -$205;
    $207 = (($j4array) + 8|0);
    HEAPF64[$207>>3] = $206;
    $208 = +HEAPF64[$sj4array>>3];
    $209 = -$208;
    $210 = (($sj4array) + 8|0);
    HEAPF64[$210>>3] = $209;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $211 = +HEAPF64[$cj4array>>3];
   $212 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($211)|0);
   if ($212) {
    HEAP8[$j4valid>>0] = 1;
    HEAPF64[$cj4array>>3] = 1.0;
    HEAPF64[$sj4array>>3] = 0.0;
    HEAPF64[$j4array>>3] = 0.0;
   }
  }
  $ij4 = 0;
  while(1) {
   $213 = $ij4;
   $214 = ($213|0)<(2);
   if (!($214)) {
    break;
   }
   $215 = $ij4;
   $216 = (($j4valid) + ($215)|0);
   $217 = HEAP8[$216>>0]|0;
   $218 = $217&1;
   do {
    if ($218) {
     $219 = $ij4;
     $220 = $219&255;
     $221 = (($4) + 548|0);
     HEAP8[$221>>0] = $220;
     $222 = (($4) + 548|0);
     $223 = (($222) + 1|0);
     HEAP8[$223>>0] = -1;
     $224 = $ij4;
     $225 = (($224) + 1)|0;
     $iij4 = $225;
     while(1) {
      $226 = $iij4;
      $227 = ($226|0)<(2);
      if (!($227)) {
       break;
      }
      $228 = $iij4;
      $229 = (($j4valid) + ($228)|0);
      $230 = HEAP8[$229>>0]|0;
      $231 = $230&1;
      if ($231) {
       $232 = $ij4;
       $233 = (($cj4array) + ($232<<3)|0);
       $234 = +HEAPF64[$233>>3];
       $235 = $iij4;
       $236 = (($cj4array) + ($235<<3)|0);
       $237 = +HEAPF64[$236>>3];
       $238 = $234 - $237;
       $239 = (+__Z5IKabsd($238));
       $240 = $239 < 9.9999999999999995E-7;
       if ($240) {
        $241 = $ij4;
        $242 = (($sj4array) + ($241<<3)|0);
        $243 = +HEAPF64[$242>>3];
        $244 = $iij4;
        $245 = (($sj4array) + ($244<<3)|0);
        $246 = +HEAPF64[$245>>3];
        $247 = $243 - $246;
        $248 = (+__Z5IKabsd($247));
        $249 = $248 < 9.9999999999999995E-7;
        if ($249) {
         label = 18;
         break;
        }
       }
      }
      $256 = $iij4;
      $257 = (($256) + 1)|0;
      $iij4 = $257;
     }
     if ((label|0) == 18) {
      label = 0;
      $250 = $iij4;
      $251 = (($j4valid) + ($250)|0);
      HEAP8[$251>>0] = 0;
      $252 = $iij4;
      $253 = $252&255;
      $254 = (($4) + 548|0);
      $255 = (($254) + 1|0);
      HEAP8[$255>>0] = $253;
     }
     $258 = $ij4;
     $259 = (($j4array) + ($258<<3)|0);
     $260 = +HEAPF64[$259>>3];
     $261 = (($4) + 160|0);
     HEAPF64[$261>>3] = $260;
     $262 = $ij4;
     $263 = (($cj4array) + ($262<<3)|0);
     $264 = +HEAPF64[$263>>3];
     $265 = (($4) + 168|0);
     HEAPF64[$265>>3] = $264;
     $266 = $ij4;
     $267 = (($sj4array) + ($266<<3)|0);
     $268 = +HEAPF64[$267>>3];
     $269 = (($4) + 176|0);
     HEAPF64[$269>>3] = $268;
     $270 = (($4) + 8|0);
     $271 = +HEAPF64[$270>>3];
     $272 = 1.0 * $271;
     $x121 = $272;
     $273 = (($4) + 344|0);
     $274 = +HEAPF64[$273>>3];
     $275 = (($4) + 16|0);
     $276 = +HEAPF64[$275>>3];
     $277 = $274 * $276;
     $x122 = $277;
     $278 = (($4) + 320|0);
     $279 = +HEAPF64[$278>>3];
     $280 = (($4) + 16|0);
     $281 = +HEAPF64[$280>>3];
     $282 = $279 * $281;
     $x123 = $282;
     $283 = (($4) + 88|0);
     $284 = +HEAPF64[$283>>3];
     $285 = 1.0 * $284;
     $x124 = $285;
     $286 = (($4) + 48|0);
     $287 = +HEAPF64[$286>>3];
     $288 = (($4) + 96|0);
     $289 = +HEAPF64[$288>>3];
     $290 = $287 * $289;
     $x125 = $290;
     $291 = (($4) + 368|0);
     $292 = +HEAPF64[$291>>3];
     $293 = (($4) + 16|0);
     $294 = +HEAPF64[$293>>3];
     $295 = $292 * $294;
     $x126 = $295;
     $296 = (($4) + 88|0);
     $297 = +HEAPF64[$296>>3];
     $298 = (($4) + 56|0);
     $299 = +HEAPF64[$298>>3];
     $300 = $297 * $299;
     $301 = $x125;
     $302 = $300 + $301;
     $x127 = $302;
     $303 = $x116;
     $x128 = $303;
     $304 = (($4) + 16|0);
     $305 = +HEAPF64[$304>>3];
     $306 = $x128;
     $307 = $305 * $306;
     $x129 = $307;
     $308 = (($4) + 8|0);
     $309 = +HEAPF64[$308>>3];
     $310 = $x127;
     $311 = $309 * $310;
     $x130 = $311;
     $312 = (($4) + 8|0);
     $313 = +HEAPF64[$312>>3];
     $314 = $x128;
     $315 = $313 * $314;
     $x131 = $315;
     $316 = $x120;
     $x132 = $316;
     $317 = (($4) + 248|0);
     $318 = +HEAPF64[$317>>3];
     $319 = $x130;
     $320 = $318 * $319;
     $321 = $x123;
     $322 = $x127;
     $323 = $321 * $322;
     $324 = $320 + $323;
     $325 = (($4) + 392|0);
     $326 = +HEAPF64[$325>>3];
     $327 = $x128;
     $328 = $326 * $327;
     $329 = $324 + $328;
     $330 = (($4) + 240|0);
     HEAPF64[$330>>3] = $329;
     $331 = (($4) + 416|0);
     $332 = +HEAPF64[$331>>3];
     $333 = $x128;
     $334 = $332 * $333;
     $335 = $x122;
     $336 = $x127;
     $337 = $335 * $336;
     $338 = $334 + $337;
     $339 = (($4) + 272|0);
     $340 = +HEAPF64[$339>>3];
     $341 = $x130;
     $342 = $340 * $341;
     $343 = $338 + $342;
     $344 = (($4) + 264|0);
     HEAPF64[$344>>3] = $343;
     $345 = (($4) + 296|0);
     $346 = +HEAPF64[$345>>3];
     $347 = $x130;
     $348 = $346 * $347;
     $349 = (($4) + 440|0);
     $350 = +HEAPF64[$349>>3];
     $351 = $x128;
     $352 = $350 * $351;
     $353 = $348 + $352;
     $354 = $x126;
     $355 = $x127;
     $356 = $354 * $355;
     $357 = $353 + $356;
     $358 = (($4) + 288|0);
     HEAPF64[$358>>3] = $357;
     $359 = (($4) + 248|0);
     $360 = +HEAPF64[$359>>3];
     $361 = (($4) + 16|0);
     $362 = +HEAPF64[$361>>3];
     $363 = $360 * $362;
     $364 = (($4) + 320|0);
     $365 = +HEAPF64[$364>>3];
     $366 = -1.0 * $365;
     $367 = $x121;
     $368 = $366 * $367;
     $369 = $363 + $368;
     $370 = (($4) + 312|0);
     HEAPF64[$370>>3] = $369;
     $371 = (($4) + 272|0);
     $372 = +HEAPF64[$371>>3];
     $373 = (($4) + 16|0);
     $374 = +HEAPF64[$373>>3];
     $375 = $372 * $374;
     $376 = (($4) + 344|0);
     $377 = +HEAPF64[$376>>3];
     $378 = -1.0 * $377;
     $379 = $x121;
     $380 = $378 * $379;
     $381 = $375 + $380;
     $382 = (($4) + 336|0);
     HEAPF64[$382>>3] = $381;
     $383 = (($4) + 368|0);
     $384 = +HEAPF64[$383>>3];
     $385 = -1.0 * $384;
     $386 = $x121;
     $387 = $385 * $386;
     $388 = (($4) + 296|0);
     $389 = +HEAPF64[$388>>3];
     $390 = (($4) + 16|0);
     $391 = +HEAPF64[$390>>3];
     $392 = $389 * $391;
     $393 = $387 + $392;
     $394 = (($4) + 360|0);
     HEAPF64[$394>>3] = $393;
     $395 = (($4) + 248|0);
     $396 = +HEAPF64[$395>>3];
     $397 = $x131;
     $398 = $396 * $397;
     $399 = $x123;
     $400 = $x128;
     $401 = $399 * $400;
     $402 = $398 + $401;
     $403 = (($4) + 392|0);
     $404 = +HEAPF64[$403>>3];
     $405 = $x132;
     $406 = $404 * $405;
     $407 = $402 + $406;
     $408 = (($4) + 384|0);
     HEAPF64[$408>>3] = $407;
     $409 = (($4) + 416|0);
     $410 = +HEAPF64[$409>>3];
     $411 = $x132;
     $412 = $410 * $411;
     $413 = $x122;
     $414 = $x128;
     $415 = $413 * $414;
     $416 = $412 + $415;
     $417 = (($4) + 272|0);
     $418 = +HEAPF64[$417>>3];
     $419 = $x131;
     $420 = $418 * $419;
     $421 = $416 + $420;
     $422 = (($4) + 408|0);
     HEAPF64[$422>>3] = $421;
     $423 = (($4) + 296|0);
     $424 = +HEAPF64[$423>>3];
     $425 = $x131;
     $426 = $424 * $425;
     $427 = (($4) + 440|0);
     $428 = +HEAPF64[$427>>3];
     $429 = $x132;
     $430 = $428 * $429;
     $431 = $426 + $430;
     $432 = $x126;
     $433 = $x128;
     $434 = $432 * $433;
     $435 = $431 + $434;
     $436 = (($4) + 432|0);
     HEAPF64[$436>>3] = $435;
     $437 = (($4) + 176|0);
     $438 = +HEAPF64[$437>>3];
     HEAPF64[$j3eval>>3] = $438;
     $439 = (($4) + 176|0);
     $440 = +HEAPF64[$439>>3];
     $441 = (+__Z6IKsignd($440));
     $442 = (($j3eval) + 8|0);
     HEAPF64[$442>>3] = $441;
     $443 = +HEAPF64[$j3eval>>3];
     $444 = (+__Z5IKabsd($443));
     $445 = $444 < 9.9999999999999995E-7;
     if ($445) {
      label = 23;
     } else {
      $446 = (($j3eval) + 8|0);
      $447 = +HEAPF64[$446>>3];
      $448 = (+__Z5IKabsd($447));
      $449 = $448 < 9.9999999999999995E-7;
      if ($449) {
       label = 23;
      } else {
       ;HEAP8[$j3valid143+0>>0]=0|0;
       $9085 = (($4) + 547|0);
       HEAP8[$9085>>0] = 1;
       $9086 = (($4) + 176|0);
       $9087 = +HEAPF64[$9086>>3];
       $9088 = (+__Z6IKsignd($9087));
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x318,$9088,-1);
       $9089 = (($x318) + 8|0);
       $9090 = HEAP8[$9089>>0]|0;
       $9091 = $9090&1;
       if (!($9091)) {
        break;
       }
       $9092 = (($4) + 360|0);
       $9093 = +HEAPF64[$9092>>3];
       $9094 = (($4) + 288|0);
       $9095 = +HEAPF64[$9094>>3];
       __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x319,$9093,$9095,1.9999999999999999E-6);
       $9096 = (($x319) + 8|0);
       $9097 = HEAP8[$9096>>0]|0;
       $9098 = $9097&1;
       if (!($9098)) {
        break;
       }
       $9099 = +HEAPF64[$x318>>3];
       $9100 = 1.5707963267949001 * $9099;
       $9101 = -1.5707963267949001 + $9100;
       $9102 = +HEAPF64[$x319>>3];
       $9103 = $9101 + $9102;
       HEAPF64[$j3array140>>3] = $9103;
       $9104 = +HEAPF64[$j3array140>>3];
       $9105 = (+__Z5IKsind($9104));
       HEAPF64[$sj3array142>>3] = $9105;
       $9106 = +HEAPF64[$j3array140>>3];
       $9107 = (+__Z5IKcosd($9106));
       HEAPF64[$cj3array141>>3] = $9107;
       $9108 = +HEAPF64[$j3array140>>3];
       $9109 = $9108 > 3.14159265358979;
       if ($9109) {
        $9110 = +HEAPF64[$j3array140>>3];
        $9111 = $9110 - 6.2831853071795898;
        HEAPF64[$j3array140>>3] = $9111;
       } else {
        $9112 = +HEAPF64[$j3array140>>3];
        $9113 = $9112 < -3.14159265358979;
        if ($9113) {
         $9114 = +HEAPF64[$j3array140>>3];
         $9115 = $9114 + 6.2831853071795898;
         HEAPF64[$j3array140>>3] = $9115;
        }
       }
       HEAP8[$j3valid143>>0] = 1;
       $ij3144 = 0;
       while(1) {
        $9116 = $ij3144;
        $9117 = ($9116|0)<(1);
        if (!($9117)) {
         break;
        }
        $9118 = $ij3144;
        $9119 = (($j3valid143) + ($9118)|0);
        $9120 = HEAP8[$9119>>0]|0;
        $9121 = $9120&1;
        L49: do {
         if ($9121) {
          $9122 = $ij3144;
          $9123 = $9122&255;
          $9124 = (($4) + 545|0);
          HEAP8[$9124>>0] = $9123;
          $9125 = (($4) + 545|0);
          $9126 = (($9125) + 1|0);
          HEAP8[$9126>>0] = -1;
          $9127 = $ij3144;
          $9128 = (($9127) + 1)|0;
          $iij3145 = $9128;
          L52: while(1) {
           $9129 = $iij3145;
           $9130 = ($9129|0)<(1);
           if (!($9130)) {
            break;
           }
           $9131 = $iij3145;
           $9132 = (($j3valid143) + ($9131)|0);
           $9133 = HEAP8[$9132>>0]|0;
           $9134 = $9133&1;
           do {
            if ($9134) {
             $9135 = $ij3144;
             $9136 = (($cj3array141) + ($9135<<3)|0);
             $9137 = +HEAPF64[$9136>>3];
             $9138 = $iij3145;
             $9139 = (($cj3array141) + ($9138<<3)|0);
             $9140 = +HEAPF64[$9139>>3];
             $9141 = $9137 - $9140;
             $9142 = (+__Z5IKabsd($9141));
             $9143 = $9142 < 9.9999999999999995E-7;
             if (!($9143)) {
              break;
             }
             $9144 = $ij3144;
             $9145 = (($sj3array142) + ($9144<<3)|0);
             $9146 = +HEAPF64[$9145>>3];
             $9147 = $iij3145;
             $9148 = (($sj3array142) + ($9147<<3)|0);
             $9149 = +HEAPF64[$9148>>3];
             $9150 = $9146 - $9149;
             $9151 = (+__Z5IKabsd($9150));
             $9152 = $9151 < 9.9999999999999995E-7;
             if ($9152) {
              label = 1236;
              break L52;
             }
            }
           } while(0);
           $9159 = $iij3145;
           $9160 = (($9159) + 1)|0;
           $iij3145 = $9160;
          }
          if ((label|0) == 1236) {
           label = 0;
           $9153 = $iij3145;
           $9154 = (($j3valid143) + ($9153)|0);
           HEAP8[$9154>>0] = 0;
           $9155 = $iij3145;
           $9156 = $9155&255;
           $9157 = (($4) + 545|0);
           $9158 = (($9157) + 1|0);
           HEAP8[$9158>>0] = $9156;
          }
          $9161 = $ij3144;
          $9162 = (($j3array140) + ($9161<<3)|0);
          $9163 = +HEAPF64[$9162>>3];
          $9164 = (($4) + 120|0);
          HEAPF64[$9164>>3] = $9163;
          $9165 = $ij3144;
          $9166 = (($cj3array141) + ($9165<<3)|0);
          $9167 = +HEAPF64[$9166>>3];
          $9168 = (($4) + 128|0);
          HEAPF64[$9168>>3] = $9167;
          $9169 = $ij3144;
          $9170 = (($sj3array142) + ($9169<<3)|0);
          $9171 = +HEAPF64[$9170>>3];
          $9172 = (($4) + 136|0);
          HEAPF64[$9172>>3] = $9171;
          $9173 = (($4) + 120|0);
          $9174 = +HEAPF64[$9173>>3];
          $9175 = (+__Z5IKcosd($9174));
          $x320 = $9175;
          $9176 = (($4) + 120|0);
          $9177 = +HEAPF64[$9176>>3];
          $9178 = (+__Z5IKsind($9177));
          $x321 = $9178;
          $9179 = (($4) + 176|0);
          $9180 = +HEAPF64[$9179>>3];
          $9181 = 1.0 * $9180;
          $x322 = $9181;
          $9182 = (($4) + 168|0);
          $9183 = +HEAPF64[$9182>>3];
          $9184 = 1.0 * $9183;
          $x323 = $9184;
          $9185 = (($4) + 360|0);
          $9186 = +HEAPF64[$9185>>3];
          $9187 = $x321;
          $9188 = $9186 * $9187;
          $x324 = $9188;
          $9189 = (($4) + 288|0);
          $9190 = +HEAPF64[$9189>>3];
          $9191 = $x320;
          $9192 = $9190 * $9191;
          $x325 = $9192;
          $9193 = $x320;
          $9194 = -1.0 * $9193;
          $9195 = $x322;
          $9196 = $9194 * $9195;
          $9197 = (($4) + 288|0);
          $9198 = +HEAPF64[$9197>>3];
          $9199 = $9196 + $9198;
          HEAPF64[$evalcond146>>3] = $9199;
          $9200 = $x321;
          $9201 = -1.0 * $9200;
          $9202 = $x322;
          $9203 = $9201 * $9202;
          $9204 = (($4) + 360|0);
          $9205 = +HEAPF64[$9204>>3];
          $9206 = $9203 + $9205;
          $9207 = (($evalcond146) + 8|0);
          HEAPF64[$9207>>3] = $9206;
          $9208 = (($4) + 360|0);
          $9209 = +HEAPF64[$9208>>3];
          $9210 = $x320;
          $9211 = $9209 * $9210;
          $9212 = (($4) + 288|0);
          $9213 = +HEAPF64[$9212>>3];
          $9214 = -1.0 * $9213;
          $9215 = $x321;
          $9216 = $9214 * $9215;
          $9217 = $9211 + $9216;
          $9218 = (($evalcond146) + 16|0);
          HEAPF64[$9218>>3] = $9217;
          $9219 = $x322;
          $9220 = -1.0 * $9219;
          $9221 = $x324;
          $9222 = $9220 + $9221;
          $9223 = $x325;
          $9224 = $9222 + $9223;
          $9225 = (($evalcond146) + 24|0);
          HEAPF64[$9225>>3] = $9224;
          $9226 = $x323;
          $9227 = -1.0 * $9226;
          $9228 = $x325;
          $9229 = $9227 * $9228;
          $9230 = $x323;
          $9231 = -1.0 * $9230;
          $9232 = $x324;
          $9233 = $9231 * $9232;
          $9234 = $9229 + $9233;
          $9235 = (($4) + 432|0);
          $9236 = +HEAPF64[$9235>>3];
          $9237 = (($4) + 176|0);
          $9238 = +HEAPF64[$9237>>3];
          $9239 = $9236 * $9238;
          $9240 = $9234 + $9239;
          $9241 = (($evalcond146) + 32|0);
          HEAPF64[$9241>>3] = $9240;
          $9242 = (($4) + 312|0);
          $9243 = +HEAPF64[$9242>>3];
          $9244 = -1.0 * $9243;
          $9245 = $x321;
          $9246 = $9244 * $9245;
          $9247 = $x322;
          $9248 = $9246 * $9247;
          $9249 = (($4) + 240|0);
          $9250 = +HEAPF64[$9249>>3];
          $9251 = -1.0 * $9250;
          $9252 = $x320;
          $9253 = $9251 * $9252;
          $9254 = $x322;
          $9255 = $9253 * $9254;
          $9256 = $9248 + $9255;
          $9257 = (($4) + 384|0);
          $9258 = +HEAPF64[$9257>>3];
          $9259 = -1.0 * $9258;
          $9260 = $x323;
          $9261 = $9259 * $9260;
          $9262 = $9256 + $9261;
          $9263 = (($evalcond146) + 40|0);
          HEAPF64[$9263>>3] = $9262;
          $9264 = (($4) + 264|0);
          $9265 = +HEAPF64[$9264>>3];
          $9266 = -1.0 * $9265;
          $9267 = $x320;
          $9268 = $9266 * $9267;
          $9269 = $x322;
          $9270 = $9268 * $9269;
          $9271 = (($4) + 336|0);
          $9272 = +HEAPF64[$9271>>3];
          $9273 = -1.0 * $9272;
          $9274 = $x321;
          $9275 = $9273 * $9274;
          $9276 = $x322;
          $9277 = $9275 * $9276;
          $9278 = $9270 + $9277;
          $9279 = (($4) + 408|0);
          $9280 = +HEAPF64[$9279>>3];
          $9281 = -1.0 * $9280;
          $9282 = $x323;
          $9283 = $9281 * $9282;
          $9284 = $9278 + $9283;
          $9285 = (($evalcond146) + 48|0);
          HEAPF64[$9285>>3] = $9284;
          $9286 = (($4) + 432|0);
          $9287 = +HEAPF64[$9286>>3];
          $9288 = -1.0 * $9287;
          $9289 = $x323;
          $9290 = $9288 * $9289;
          $9291 = 1.0 + $9290;
          $9292 = $x322;
          $9293 = -1.0 * $9292;
          $9294 = $x324;
          $9295 = $9293 * $9294;
          $9296 = $9291 + $9295;
          $9297 = $x322;
          $9298 = -1.0 * $9297;
          $9299 = $x325;
          $9300 = $9298 * $9299;
          $9301 = $9296 + $9300;
          $9302 = (($evalcond146) + 56|0);
          HEAPF64[$9302>>3] = $9301;
          $9303 = +HEAPF64[$evalcond146>>3];
          $9304 = (+__Z5IKabsd($9303));
          $9305 = $9304 > 5.0000000000000004E-6;
          do {
           if (!($9305)) {
            $9306 = (($evalcond146) + 8|0);
            $9307 = +HEAPF64[$9306>>3];
            $9308 = (+__Z5IKabsd($9307));
            $9309 = $9308 > 5.0000000000000004E-6;
            if (!($9309)) {
             $9310 = (($evalcond146) + 16|0);
             $9311 = +HEAPF64[$9310>>3];
             $9312 = (+__Z5IKabsd($9311));
             $9313 = $9312 > 5.0000000000000004E-6;
             if ($9313) {
              break;
             }
             $9314 = (($evalcond146) + 24|0);
             $9315 = +HEAPF64[$9314>>3];
             $9316 = (+__Z5IKabsd($9315));
             $9317 = $9316 > 5.0000000000000004E-6;
             if ($9317) {
              break;
             }
             $9318 = (($evalcond146) + 32|0);
             $9319 = +HEAPF64[$9318>>3];
             $9320 = (+__Z5IKabsd($9319));
             $9321 = $9320 > 5.0000000000000004E-6;
             if ($9321) {
              break;
             }
             $9322 = (($evalcond146) + 40|0);
             $9323 = +HEAPF64[$9322>>3];
             $9324 = (+__Z5IKabsd($9323));
             $9325 = $9324 > 5.0000000000000004E-6;
             if ($9325) {
              break;
             }
             $9326 = (($evalcond146) + 48|0);
             $9327 = +HEAPF64[$9326>>3];
             $9328 = (+__Z5IKabsd($9327));
             $9329 = $9328 > 5.0000000000000004E-6;
             if ($9329) {
              break;
             }
             $9330 = (($evalcond146) + 56|0);
             $9331 = +HEAPF64[$9330>>3];
             $9332 = (+__Z5IKabsd($9331));
             $9333 = $9332 > 5.0000000000000004E-6;
             if ($9333) {
              break;
             }
             $9334 = (($4) + 8|0);
             $9335 = +HEAPF64[$9334>>3];
             $9336 = 1.0 * $9335;
             $x326 = $9336;
             $9337 = (($4) + 344|0);
             $9338 = +HEAPF64[$9337>>3];
             $9339 = (($4) + 16|0);
             $9340 = +HEAPF64[$9339>>3];
             $9341 = $9338 * $9340;
             $x327 = $9341;
             $9342 = (($4) + 320|0);
             $9343 = +HEAPF64[$9342>>3];
             $9344 = (($4) + 16|0);
             $9345 = +HEAPF64[$9344>>3];
             $9346 = $9343 * $9345;
             $x328 = $9346;
             $9347 = (($4) + 88|0);
             $9348 = +HEAPF64[$9347>>3];
             $9349 = 1.0 * $9348;
             $x329 = $9349;
             $9350 = (($4) + 48|0);
             $9351 = +HEAPF64[$9350>>3];
             $9352 = (($4) + 96|0);
             $9353 = +HEAPF64[$9352>>3];
             $9354 = $9351 * $9353;
             $x330 = $9354;
             $9355 = (($4) + 368|0);
             $9356 = +HEAPF64[$9355>>3];
             $9357 = (($4) + 16|0);
             $9358 = +HEAPF64[$9357>>3];
             $9359 = $9356 * $9358;
             $x331 = $9359;
             $9360 = (($4) + 88|0);
             $9361 = +HEAPF64[$9360>>3];
             $9362 = (($4) + 56|0);
             $9363 = +HEAPF64[$9362>>3];
             $9364 = $9361 * $9363;
             $9365 = $x330;
             $9366 = $9364 + $9365;
             $x332 = $9366;
             $9367 = $x116;
             $x333 = $9367;
             $9368 = (($4) + 16|0);
             $9369 = +HEAPF64[$9368>>3];
             $9370 = $x333;
             $9371 = $9369 * $9370;
             $x334 = $9371;
             $9372 = (($4) + 8|0);
             $9373 = +HEAPF64[$9372>>3];
             $9374 = $x332;
             $9375 = $9373 * $9374;
             $x335 = $9375;
             $9376 = (($4) + 8|0);
             $9377 = +HEAPF64[$9376>>3];
             $9378 = $x333;
             $9379 = $9377 * $9378;
             $x336 = $9379;
             $9380 = $x120;
             $x337 = $9380;
             $9381 = (($4) + 248|0);
             $9382 = +HEAPF64[$9381>>3];
             $9383 = $x335;
             $9384 = $9382 * $9383;
             $9385 = (($4) + 392|0);
             $9386 = +HEAPF64[$9385>>3];
             $9387 = $x333;
             $9388 = $9386 * $9387;
             $9389 = $9384 + $9388;
             $9390 = $x328;
             $9391 = $x332;
             $9392 = $9390 * $9391;
             $9393 = $9389 + $9392;
             $9394 = (($4) + 240|0);
             HEAPF64[$9394>>3] = $9393;
             $9395 = (($4) + 272|0);
             $9396 = +HEAPF64[$9395>>3];
             $9397 = $x335;
             $9398 = $9396 * $9397;
             $9399 = (($4) + 416|0);
             $9400 = +HEAPF64[$9399>>3];
             $9401 = $x333;
             $9402 = $9400 * $9401;
             $9403 = $9398 + $9402;
             $9404 = $x327;
             $9405 = $x332;
             $9406 = $9404 * $9405;
             $9407 = $9403 + $9406;
             $9408 = (($4) + 264|0);
             HEAPF64[$9408>>3] = $9407;
             $9409 = (($4) + 440|0);
             $9410 = +HEAPF64[$9409>>3];
             $9411 = $x333;
             $9412 = $9410 * $9411;
             $9413 = $x331;
             $9414 = $x332;
             $9415 = $9413 * $9414;
             $9416 = $9412 + $9415;
             $9417 = (($4) + 296|0);
             $9418 = +HEAPF64[$9417>>3];
             $9419 = $x335;
             $9420 = $9418 * $9419;
             $9421 = $9416 + $9420;
             $9422 = (($4) + 288|0);
             HEAPF64[$9422>>3] = $9421;
             $9423 = (($4) + 248|0);
             $9424 = +HEAPF64[$9423>>3];
             $9425 = (($4) + 16|0);
             $9426 = +HEAPF64[$9425>>3];
             $9427 = $9424 * $9426;
             $9428 = (($4) + 320|0);
             $9429 = +HEAPF64[$9428>>3];
             $9430 = -1.0 * $9429;
             $9431 = $x326;
             $9432 = $9430 * $9431;
             $9433 = $9427 + $9432;
             $9434 = (($4) + 312|0);
             HEAPF64[$9434>>3] = $9433;
             $9435 = (($4) + 272|0);
             $9436 = +HEAPF64[$9435>>3];
             $9437 = (($4) + 16|0);
             $9438 = +HEAPF64[$9437>>3];
             $9439 = $9436 * $9438;
             $9440 = (($4) + 344|0);
             $9441 = +HEAPF64[$9440>>3];
             $9442 = -1.0 * $9441;
             $9443 = $x326;
             $9444 = $9442 * $9443;
             $9445 = $9439 + $9444;
             $9446 = (($4) + 336|0);
             HEAPF64[$9446>>3] = $9445;
             $9447 = (($4) + 368|0);
             $9448 = +HEAPF64[$9447>>3];
             $9449 = -1.0 * $9448;
             $9450 = $x326;
             $9451 = $9449 * $9450;
             $9452 = (($4) + 296|0);
             $9453 = +HEAPF64[$9452>>3];
             $9454 = (($4) + 16|0);
             $9455 = +HEAPF64[$9454>>3];
             $9456 = $9453 * $9455;
             $9457 = $9451 + $9456;
             $9458 = (($4) + 360|0);
             HEAPF64[$9458>>3] = $9457;
             $9459 = (($4) + 248|0);
             $9460 = +HEAPF64[$9459>>3];
             $9461 = $x336;
             $9462 = $9460 * $9461;
             $9463 = (($4) + 392|0);
             $9464 = +HEAPF64[$9463>>3];
             $9465 = $x337;
             $9466 = $9464 * $9465;
             $9467 = $9462 + $9466;
             $9468 = $x328;
             $9469 = $x333;
             $9470 = $9468 * $9469;
             $9471 = $9467 + $9470;
             $9472 = (($4) + 384|0);
             HEAPF64[$9472>>3] = $9471;
             $9473 = (($4) + 272|0);
             $9474 = +HEAPF64[$9473>>3];
             $9475 = $x336;
             $9476 = $9474 * $9475;
             $9477 = (($4) + 416|0);
             $9478 = +HEAPF64[$9477>>3];
             $9479 = $x337;
             $9480 = $9478 * $9479;
             $9481 = $9476 + $9480;
             $9482 = $x327;
             $9483 = $x333;
             $9484 = $9482 * $9483;
             $9485 = $9481 + $9484;
             $9486 = (($4) + 408|0);
             HEAPF64[$9486>>3] = $9485;
             $9487 = (($4) + 440|0);
             $9488 = +HEAPF64[$9487>>3];
             $9489 = $x337;
             $9490 = $9488 * $9489;
             $9491 = $x331;
             $9492 = $x333;
             $9493 = $9491 * $9492;
             $9494 = $9490 + $9493;
             $9495 = (($4) + 296|0);
             $9496 = +HEAPF64[$9495>>3];
             $9497 = $x336;
             $9498 = $9496 * $9497;
             $9499 = $9494 + $9498;
             $9500 = (($4) + 432|0);
             HEAPF64[$9500>>3] = $9499;
             $9501 = (($4) + 176|0);
             $9502 = +HEAPF64[$9501>>3];
             HEAPF64[$j5eval147>>3] = $9502;
             $9503 = (($4) + 176|0);
             $9504 = +HEAPF64[$9503>>3];
             $9505 = (+__Z6IKsignd($9504));
             $9506 = (($j5eval147) + 8|0);
             HEAPF64[$9506>>3] = $9505;
             $9507 = +HEAPF64[$j5eval147>>3];
             $9508 = (+__Z5IKabsd($9507));
             $9509 = $9508 < 9.9999999999999995E-7;
             do {
              if ($9509) {
               label = 1250;
              } else {
               $9510 = (($j5eval147) + 8|0);
               $9511 = +HEAPF64[$9510>>3];
               $9512 = (+__Z5IKabsd($9511));
               $9513 = $9512 < 9.9999999999999995E-7;
               if ($9513) {
                label = 1250;
                break;
               }
               ;HEAP8[$j5valid253+0>>0]=0|0;
               $15582 = (($4) + 553|0);
               HEAP8[$15582>>0] = 1;
               $15583 = (($4) + 176|0);
               $15584 = +HEAPF64[$15583>>3];
               $15585 = (+__Z6IKsignd($15584));
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x460,$15585,-1);
               $15586 = (($x460) + 8|0);
               $15587 = HEAP8[$15586>>0]|0;
               $15588 = $15587&1;
               if (!($15588)) {
                break L49;
               }
               $15589 = (($4) + 408|0);
               $15590 = +HEAPF64[$15589>>3];
               $15591 = (($4) + 384|0);
               $15592 = +HEAPF64[$15591>>3];
               $15593 = -1.0 * $15592;
               __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x461,$15590,$15593,1.9999999999999999E-6);
               $15594 = (($x461) + 8|0);
               $15595 = HEAP8[$15594>>0]|0;
               $15596 = $15595&1;
               if (!($15596)) {
                break L49;
               }
               $15597 = +HEAPF64[$x460>>3];
               $15598 = 1.5707963267949001 * $15597;
               $15599 = -1.5707963267949001 + $15598;
               $15600 = +HEAPF64[$x461>>3];
               $15601 = $15599 + $15600;
               HEAPF64[$j5array250>>3] = $15601;
               $15602 = +HEAPF64[$j5array250>>3];
               $15603 = (+__Z5IKsind($15602));
               HEAPF64[$sj5array252>>3] = $15603;
               $15604 = +HEAPF64[$j5array250>>3];
               $15605 = (+__Z5IKcosd($15604));
               HEAPF64[$cj5array251>>3] = $15605;
               $15606 = +HEAPF64[$j5array250>>3];
               $15607 = $15606 > 3.14159265358979;
               if ($15607) {
                $15608 = +HEAPF64[$j5array250>>3];
                $15609 = $15608 - 6.2831853071795898;
                HEAPF64[$j5array250>>3] = $15609;
               } else {
                $15610 = +HEAPF64[$j5array250>>3];
                $15611 = $15610 < -3.14159265358979;
                if ($15611) {
                 $15612 = +HEAPF64[$j5array250>>3];
                 $15613 = $15612 + 6.2831853071795898;
                 HEAPF64[$j5array250>>3] = $15613;
                }
               }
               HEAP8[$j5valid253>>0] = 1;
               $ij5254 = 0;
               while(1) {
                $15614 = $ij5254;
                $15615 = ($15614|0)<(1);
                if (!($15615)) {
                 break;
                }
                $15616 = $ij5254;
                $15617 = (($j5valid253) + ($15616)|0);
                $15618 = HEAP8[$15617>>0]|0;
                $15619 = $15618&1;
                L91: do {
                 if ($15619) {
                  $15620 = $ij5254;
                  $15621 = $15620&255;
                  $15622 = (($4) + 551|0);
                  HEAP8[$15622>>0] = $15621;
                  $15623 = (($4) + 551|0);
                  $15624 = (($15623) + 1|0);
                  HEAP8[$15624>>0] = -1;
                  $15625 = $ij5254;
                  $15626 = (($15625) + 1)|0;
                  $iij5255 = $15626;
                  L94: while(1) {
                   $15627 = $iij5255;
                   $15628 = ($15627|0)<(1);
                   if (!($15628)) {
                    break;
                   }
                   $15629 = $iij5255;
                   $15630 = (($j5valid253) + ($15629)|0);
                   $15631 = HEAP8[$15630>>0]|0;
                   $15632 = $15631&1;
                   do {
                    if ($15632) {
                     $15633 = $ij5254;
                     $15634 = (($cj5array251) + ($15633<<3)|0);
                     $15635 = +HEAPF64[$15634>>3];
                     $15636 = $iij5255;
                     $15637 = (($cj5array251) + ($15636<<3)|0);
                     $15638 = +HEAPF64[$15637>>3];
                     $15639 = $15635 - $15638;
                     $15640 = (+__Z5IKabsd($15639));
                     $15641 = $15640 < 9.9999999999999995E-7;
                     if (!($15641)) {
                      break;
                     }
                     $15642 = $ij5254;
                     $15643 = (($sj5array252) + ($15642<<3)|0);
                     $15644 = +HEAPF64[$15643>>3];
                     $15645 = $iij5255;
                     $15646 = (($sj5array252) + ($15645<<3)|0);
                     $15647 = +HEAPF64[$15646>>3];
                     $15648 = $15644 - $15647;
                     $15649 = (+__Z5IKabsd($15648));
                     $15650 = $15649 < 9.9999999999999995E-7;
                     if ($15650) {
                      label = 2124;
                      break L94;
                     }
                    }
                   } while(0);
                   $15657 = $iij5255;
                   $15658 = (($15657) + 1)|0;
                   $iij5255 = $15658;
                  }
                  if ((label|0) == 2124) {
                   label = 0;
                   $15651 = $iij5255;
                   $15652 = (($j5valid253) + ($15651)|0);
                   HEAP8[$15652>>0] = 0;
                   $15653 = $iij5255;
                   $15654 = $15653&255;
                   $15655 = (($4) + 551|0);
                   $15656 = (($15655) + 1|0);
                   HEAP8[$15656>>0] = $15654;
                  }
                  $15659 = $ij5254;
                  $15660 = (($j5array250) + ($15659<<3)|0);
                  $15661 = +HEAPF64[$15660>>3];
                  $15662 = (($4) + 200|0);
                  HEAPF64[$15662>>3] = $15661;
                  $15663 = $ij5254;
                  $15664 = (($cj5array251) + ($15663<<3)|0);
                  $15665 = +HEAPF64[$15664>>3];
                  $15666 = (($4) + 208|0);
                  HEAPF64[$15666>>3] = $15665;
                  $15667 = $ij5254;
                  $15668 = (($sj5array252) + ($15667<<3)|0);
                  $15669 = +HEAPF64[$15668>>3];
                  $15670 = (($4) + 216|0);
                  HEAPF64[$15670>>3] = $15669;
                  $15671 = (($4) + 200|0);
                  $15672 = +HEAPF64[$15671>>3];
                  $15673 = (+__Z5IKsind($15672));
                  $x462 = $15673;
                  $15674 = (($4) + 200|0);
                  $15675 = +HEAPF64[$15674>>3];
                  $15676 = (+__Z5IKcosd($15675));
                  $x463 = $15676;
                  $15677 = (($4) + 128|0);
                  $15678 = +HEAPF64[$15677>>3];
                  $15679 = (($4) + 240|0);
                  $15680 = +HEAPF64[$15679>>3];
                  $15681 = $15678 * $15680;
                  $x464 = $15681;
                  $15682 = (($4) + 128|0);
                  $15683 = +HEAPF64[$15682>>3];
                  $15684 = (($4) + 168|0);
                  $15685 = +HEAPF64[$15684>>3];
                  $15686 = $15683 * $15685;
                  $x465 = $15686;
                  $15687 = (($4) + 136|0);
                  $15688 = +HEAPF64[$15687>>3];
                  $15689 = 1.0 * $15688;
                  $x466 = $15689;
                  $15690 = $x462;
                  $15691 = 1.0 * $15690;
                  $x467 = $15691;
                  $15692 = (($4) + 136|0);
                  $15693 = +HEAPF64[$15692>>3];
                  $15694 = $x462;
                  $15695 = $15693 * $15694;
                  $x468 = $15695;
                  $15696 = $x463;
                  $15697 = 1.0 * $15696;
                  $x469 = $15697;
                  $15698 = (($4) + 176|0);
                  $15699 = +HEAPF64[$15698>>3];
                  $15700 = $x463;
                  $15701 = $15699 * $15700;
                  $15702 = (($4) + 384|0);
                  $15703 = +HEAPF64[$15702>>3];
                  $15704 = $15701 + $15703;
                  HEAPF64[$evalcond256>>3] = $15704;
                  $15705 = (($4) + 176|0);
                  $15706 = +HEAPF64[$15705>>3];
                  $15707 = -1.0 * $15706;
                  $15708 = $x467;
                  $15709 = $15707 * $15708;
                  $15710 = (($4) + 408|0);
                  $15711 = +HEAPF64[$15710>>3];
                  $15712 = $15709 + $15711;
                  $15713 = (($evalcond256) + 8|0);
                  HEAPF64[$15713>>3] = $15712;
                  $15714 = (($4) + 168|0);
                  $15715 = +HEAPF64[$15714>>3];
                  $15716 = $x462;
                  $15717 = $15715 * $15716;
                  $15718 = (($4) + 336|0);
                  $15719 = +HEAPF64[$15718>>3];
                  $15720 = (($4) + 136|0);
                  $15721 = +HEAPF64[$15720>>3];
                  $15722 = $15719 * $15721;
                  $15723 = $15717 + $15722;
                  $15724 = (($4) + 128|0);
                  $15725 = +HEAPF64[$15724>>3];
                  $15726 = (($4) + 264|0);
                  $15727 = +HEAPF64[$15726>>3];
                  $15728 = $15725 * $15727;
                  $15729 = $15723 + $15728;
                  $15730 = (($evalcond256) + 16|0);
                  HEAPF64[$15730>>3] = $15729;
                  $15731 = $x467;
                  $15732 = -1.0 * $15731;
                  $15733 = (($4) + 240|0);
                  $15734 = +HEAPF64[$15733>>3];
                  $15735 = -1.0 * $15734;
                  $15736 = $x466;
                  $15737 = $15735 * $15736;
                  $15738 = $15732 + $15737;
                  $15739 = (($4) + 128|0);
                  $15740 = +HEAPF64[$15739>>3];
                  $15741 = (($4) + 312|0);
                  $15742 = +HEAPF64[$15741>>3];
                  $15743 = $15740 * $15742;
                  $15744 = $15738 + $15743;
                  $15745 = (($evalcond256) + 24|0);
                  HEAPF64[$15745>>3] = $15744;
                  $15746 = (($4) + 264|0);
                  $15747 = +HEAPF64[$15746>>3];
                  $15748 = -1.0 * $15747;
                  $15749 = $x466;
                  $15750 = $15748 * $15749;
                  $15751 = $x469;
                  $15752 = -1.0 * $15751;
                  $15753 = $15750 + $15752;
                  $15754 = (($4) + 128|0);
                  $15755 = +HEAPF64[$15754>>3];
                  $15756 = (($4) + 336|0);
                  $15757 = +HEAPF64[$15756>>3];
                  $15758 = $15755 * $15757;
                  $15759 = $15753 + $15758;
                  $15760 = (($evalcond256) + 32|0);
                  HEAPF64[$15760>>3] = $15759;
                  $15761 = (($4) + 136|0);
                  $15762 = +HEAPF64[$15761>>3];
                  $15763 = $x463;
                  $15764 = $15762 * $15763;
                  $15765 = (($4) + 264|0);
                  $15766 = +HEAPF64[$15765>>3];
                  $15767 = $15764 + $15766;
                  $15768 = $x462;
                  $15769 = $x465;
                  $15770 = $15768 * $15769;
                  $15771 = $15767 + $15770;
                  $15772 = (($evalcond256) + 40|0);
                  HEAPF64[$15772>>3] = $15771;
                  $15773 = (($4) + 312|0);
                  $15774 = +HEAPF64[$15773>>3];
                  $15775 = (($4) + 136|0);
                  $15776 = +HEAPF64[$15775>>3];
                  $15777 = $15774 * $15776;
                  $15778 = (($4) + 168|0);
                  $15779 = +HEAPF64[$15778>>3];
                  $15780 = -1.0 * $15779;
                  $15781 = $x469;
                  $15782 = $15780 * $15781;
                  $15783 = $15777 + $15782;
                  $15784 = $x464;
                  $15785 = $15783 + $15784;
                  $15786 = (($evalcond256) + 48|0);
                  HEAPF64[$15786>>3] = $15785;
                  $15787 = $x465;
                  $15788 = -1.0 * $15787;
                  $15789 = $x469;
                  $15790 = $15788 * $15789;
                  $15791 = $x468;
                  $15792 = $15790 + $15791;
                  $15793 = (($4) + 240|0);
                  $15794 = +HEAPF64[$15793>>3];
                  $15795 = $15792 + $15794;
                  $15796 = (($evalcond256) + 56|0);
                  HEAPF64[$15796>>3] = $15795;
                  $15797 = (($4) + 168|0);
                  $15798 = +HEAPF64[$15797>>3];
                  $15799 = $x468;
                  $15800 = $15798 * $15799;
                  $15801 = (($4) + 336|0);
                  $15802 = +HEAPF64[$15801>>3];
                  $15803 = $15800 + $15802;
                  $15804 = (($4) + 128|0);
                  $15805 = +HEAPF64[$15804>>3];
                  $15806 = -1.0 * $15805;
                  $15807 = $x469;
                  $15808 = $15806 * $15807;
                  $15809 = $15803 + $15808;
                  $15810 = (($evalcond256) + 64|0);
                  HEAPF64[$15810>>3] = $15809;
                  $15811 = (($4) + 168|0);
                  $15812 = +HEAPF64[$15811>>3];
                  $15813 = -1.0 * $15812;
                  $15814 = $x463;
                  $15815 = $15813 * $15814;
                  $15816 = $x466;
                  $15817 = $15815 * $15816;
                  $15818 = (($4) + 312|0);
                  $15819 = +HEAPF64[$15818>>3];
                  $15820 = $15817 + $15819;
                  $15821 = (($4) + 128|0);
                  $15822 = +HEAPF64[$15821>>3];
                  $15823 = -1.0 * $15822;
                  $15824 = $x467;
                  $15825 = $15823 * $15824;
                  $15826 = $15820 + $15825;
                  $15827 = (($evalcond256) + 72|0);
                  HEAPF64[$15827>>3] = $15826;
                  $15828 = (($4) + 384|0);
                  $15829 = +HEAPF64[$15828>>3];
                  $15830 = (($4) + 176|0);
                  $15831 = +HEAPF64[$15830>>3];
                  $15832 = $15829 * $15831;
                  $15833 = (($4) + 168|0);
                  $15834 = +HEAPF64[$15833>>3];
                  $15835 = -1.0 * $15834;
                  $15836 = $x464;
                  $15837 = $15835 * $15836;
                  $15838 = $15832 + $15837;
                  $15839 = $x463;
                  $15840 = $15838 + $15839;
                  $15841 = (($4) + 168|0);
                  $15842 = +HEAPF64[$15841>>3];
                  $15843 = -1.0 * $15842;
                  $15844 = (($4) + 312|0);
                  $15845 = +HEAPF64[$15844>>3];
                  $15846 = $15843 * $15845;
                  $15847 = $x466;
                  $15848 = $15846 * $15847;
                  $15849 = $15840 + $15848;
                  $15850 = (($evalcond256) + 80|0);
                  HEAPF64[$15850>>3] = $15849;
                  $15851 = $x467;
                  $15852 = -1.0 * $15851;
                  $15853 = (($4) + 168|0);
                  $15854 = +HEAPF64[$15853>>3];
                  $15855 = -1.0 * $15854;
                  $15856 = (($4) + 336|0);
                  $15857 = +HEAPF64[$15856>>3];
                  $15858 = $15855 * $15857;
                  $15859 = $x466;
                  $15860 = $15858 * $15859;
                  $15861 = $15852 + $15860;
                  $15862 = (($4) + 264|0);
                  $15863 = +HEAPF64[$15862>>3];
                  $15864 = -1.0 * $15863;
                  $15865 = $x465;
                  $15866 = $15864 * $15865;
                  $15867 = $15861 + $15866;
                  $15868 = (($4) + 408|0);
                  $15869 = +HEAPF64[$15868>>3];
                  $15870 = (($4) + 176|0);
                  $15871 = +HEAPF64[$15870>>3];
                  $15872 = $15869 * $15871;
                  $15873 = $15867 + $15872;
                  $15874 = (($evalcond256) + 88|0);
                  HEAPF64[$15874>>3] = $15873;
                  $15875 = +HEAPF64[$evalcond256>>3];
                  $15876 = (+__Z5IKabsd($15875));
                  $15877 = $15876 > 5.0000000000000004E-6;
                  do {
                   if (!($15877)) {
                    $15878 = (($evalcond256) + 8|0);
                    $15879 = +HEAPF64[$15878>>3];
                    $15880 = (+__Z5IKabsd($15879));
                    $15881 = $15880 > 5.0000000000000004E-6;
                    if ($15881) {
                     break;
                    }
                    $15882 = (($evalcond256) + 16|0);
                    $15883 = +HEAPF64[$15882>>3];
                    $15884 = (+__Z5IKabsd($15883));
                    $15885 = $15884 > 5.0000000000000004E-6;
                    if ($15885) {
                     break;
                    }
                    $15886 = (($evalcond256) + 24|0);
                    $15887 = +HEAPF64[$15886>>3];
                    $15888 = (+__Z5IKabsd($15887));
                    $15889 = $15888 > 5.0000000000000004E-6;
                    if ($15889) {
                     break;
                    }
                    $15890 = (($evalcond256) + 32|0);
                    $15891 = +HEAPF64[$15890>>3];
                    $15892 = (+__Z5IKabsd($15891));
                    $15893 = $15892 > 5.0000000000000004E-6;
                    if ($15893) {
                     break;
                    }
                    $15894 = (($evalcond256) + 40|0);
                    $15895 = +HEAPF64[$15894>>3];
                    $15896 = (+__Z5IKabsd($15895));
                    $15897 = $15896 > 5.0000000000000004E-6;
                    if ($15897) {
                     break;
                    }
                    $15898 = (($evalcond256) + 48|0);
                    $15899 = +HEAPF64[$15898>>3];
                    $15900 = (+__Z5IKabsd($15899));
                    $15901 = $15900 > 5.0000000000000004E-6;
                    if ($15901) {
                     break;
                    }
                    $15902 = (($evalcond256) + 56|0);
                    $15903 = +HEAPF64[$15902>>3];
                    $15904 = (+__Z5IKabsd($15903));
                    $15905 = $15904 > 5.0000000000000004E-6;
                    if ($15905) {
                     break;
                    }
                    $15906 = (($evalcond256) + 64|0);
                    $15907 = +HEAPF64[$15906>>3];
                    $15908 = (+__Z5IKabsd($15907));
                    $15909 = $15908 > 5.0000000000000004E-6;
                    if ($15909) {
                     break;
                    }
                    $15910 = (($evalcond256) + 72|0);
                    $15911 = +HEAPF64[$15910>>3];
                    $15912 = (+__Z5IKabsd($15911));
                    $15913 = $15912 > 5.0000000000000004E-6;
                    if ($15913) {
                     break;
                    }
                    $15914 = (($evalcond256) + 80|0);
                    $15915 = +HEAPF64[$15914>>3];
                    $15916 = (+__Z5IKabsd($15915));
                    $15917 = $15916 > 5.0000000000000004E-6;
                    if ($15917) {
                     break;
                    }
                    $15918 = (($evalcond256) + 88|0);
                    $15919 = +HEAPF64[$15918>>3];
                    $15920 = (+__Z5IKabsd($15919));
                    $15921 = $15920 > 5.0000000000000004E-6;
                    if ($15921) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos257,6);
                    __THREW__ = 0;
                    $15922 = (invoke_iii(381,($vinfos257|0),0)|0);
                    $15923 = __THREW__; __THREW__ = 0;
                    $15924 = $15923&1;
                    if ($15924) {
                     label = 2175;
                     break L1;
                    }
                    $15925 = (($15922) + 17|0);
                    HEAP8[$15925>>0] = 1;
                    $15926 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $15927 = (invoke_iii(381,($vinfos257|0),0)|0);
                    $15928 = __THREW__; __THREW__ = 0;
                    $15929 = $15928&1;
                    if ($15929) {
                     label = 2175;
                     break L1;
                    }
                    $15930 = (($15927) + 8|0);
                    HEAPF64[$15930>>3] = $15926;
                    $15931 = (($4) + 536|0);
                    $15932 = HEAP8[$15931>>0]|0;
                    __THREW__ = 0;
                    $15933 = (invoke_iii(381,($vinfos257|0),0)|0);
                    $15934 = __THREW__; __THREW__ = 0;
                    $15935 = $15934&1;
                    if ($15935) {
                     label = 2175;
                     break L1;
                    }
                    $15936 = (($15933) + 19|0);
                    HEAP8[$15936>>0] = $15932;
                    $15937 = (($4) + 536|0);
                    $15938 = (($15937) + 1|0);
                    $15939 = HEAP8[$15938>>0]|0;
                    __THREW__ = 0;
                    $15940 = (invoke_iii(381,($vinfos257|0),0)|0);
                    $15941 = __THREW__; __THREW__ = 0;
                    $15942 = $15941&1;
                    if ($15942) {
                     label = 2175;
                     break L1;
                    }
                    $15943 = (($15940) + 19|0);
                    $15944 = (($15943) + 1|0);
                    HEAP8[$15944>>0] = $15939;
                    $15945 = (($4) + 538|0);
                    $15946 = HEAP8[$15945>>0]|0;
                    __THREW__ = 0;
                    $15947 = (invoke_iii(381,($vinfos257|0),0)|0);
                    $15948 = __THREW__; __THREW__ = 0;
                    $15949 = $15948&1;
                    if ($15949) {
                     label = 2175;
                     break L1;
                    }
                    $15950 = (($15947) + 18|0);
                    HEAP8[$15950>>0] = $15946;
                    __THREW__ = 0;
                    $15951 = (invoke_iii(381,($vinfos257|0),1)|0);
                    $15952 = __THREW__; __THREW__ = 0;
                    $15953 = $15952&1;
                    if ($15953) {
                     label = 2175;
                     break L1;
                    }
                    $15954 = (($15951) + 17|0);
                    HEAP8[$15954>>0] = 1;
                    $15955 = (($4) + 40|0);
                    $15956 = +HEAPF64[$15955>>3];
                    __THREW__ = 0;
                    $15957 = (invoke_iii(381,($vinfos257|0),1)|0);
                    $15958 = __THREW__; __THREW__ = 0;
                    $15959 = $15958&1;
                    if ($15959) {
                     label = 2175;
                     break L1;
                    }
                    $15960 = (($15957) + 8|0);
                    HEAPF64[$15960>>3] = $15956;
                    $15961 = (($4) + 539|0);
                    $15962 = HEAP8[$15961>>0]|0;
                    __THREW__ = 0;
                    $15963 = (invoke_iii(381,($vinfos257|0),1)|0);
                    $15964 = __THREW__; __THREW__ = 0;
                    $15965 = $15964&1;
                    if ($15965) {
                     label = 2175;
                     break L1;
                    }
                    $15966 = (($15963) + 19|0);
                    HEAP8[$15966>>0] = $15962;
                    $15967 = (($4) + 539|0);
                    $15968 = (($15967) + 1|0);
                    $15969 = HEAP8[$15968>>0]|0;
                    __THREW__ = 0;
                    $15970 = (invoke_iii(381,($vinfos257|0),1)|0);
                    $15971 = __THREW__; __THREW__ = 0;
                    $15972 = $15971&1;
                    if ($15972) {
                     label = 2175;
                     break L1;
                    }
                    $15973 = (($15970) + 19|0);
                    $15974 = (($15973) + 1|0);
                    HEAP8[$15974>>0] = $15969;
                    $15975 = (($4) + 541|0);
                    $15976 = HEAP8[$15975>>0]|0;
                    __THREW__ = 0;
                    $15977 = (invoke_iii(381,($vinfos257|0),1)|0);
                    $15978 = __THREW__; __THREW__ = 0;
                    $15979 = $15978&1;
                    if ($15979) {
                     label = 2175;
                     break L1;
                    }
                    $15980 = (($15977) + 18|0);
                    HEAP8[$15980>>0] = $15976;
                    __THREW__ = 0;
                    $15981 = (invoke_iii(381,($vinfos257|0),2)|0);
                    $15982 = __THREW__; __THREW__ = 0;
                    $15983 = $15982&1;
                    if ($15983) {
                     label = 2175;
                     break L1;
                    }
                    $15984 = (($15981) + 17|0);
                    HEAP8[$15984>>0] = 1;
                    $15985 = (($4) + 80|0);
                    $15986 = +HEAPF64[$15985>>3];
                    __THREW__ = 0;
                    $15987 = (invoke_iii(381,($vinfos257|0),2)|0);
                    $15988 = __THREW__; __THREW__ = 0;
                    $15989 = $15988&1;
                    if ($15989) {
                     label = 2175;
                     break L1;
                    }
                    $15990 = (($15987) + 8|0);
                    HEAPF64[$15990>>3] = $15986;
                    $15991 = (($4) + 542|0);
                    $15992 = HEAP8[$15991>>0]|0;
                    __THREW__ = 0;
                    $15993 = (invoke_iii(381,($vinfos257|0),2)|0);
                    $15994 = __THREW__; __THREW__ = 0;
                    $15995 = $15994&1;
                    if ($15995) {
                     label = 2175;
                     break L1;
                    }
                    $15996 = (($15993) + 19|0);
                    HEAP8[$15996>>0] = $15992;
                    $15997 = (($4) + 542|0);
                    $15998 = (($15997) + 1|0);
                    $15999 = HEAP8[$15998>>0]|0;
                    __THREW__ = 0;
                    $16000 = (invoke_iii(381,($vinfos257|0),2)|0);
                    $16001 = __THREW__; __THREW__ = 0;
                    $16002 = $16001&1;
                    if ($16002) {
                     label = 2175;
                     break L1;
                    }
                    $16003 = (($16000) + 19|0);
                    $16004 = (($16003) + 1|0);
                    HEAP8[$16004>>0] = $15999;
                    $16005 = (($4) + 544|0);
                    $16006 = HEAP8[$16005>>0]|0;
                    __THREW__ = 0;
                    $16007 = (invoke_iii(381,($vinfos257|0),2)|0);
                    $16008 = __THREW__; __THREW__ = 0;
                    $16009 = $16008&1;
                    if ($16009) {
                     label = 2175;
                     break L1;
                    }
                    $16010 = (($16007) + 18|0);
                    HEAP8[$16010>>0] = $16006;
                    __THREW__ = 0;
                    $16011 = (invoke_iii(381,($vinfos257|0),3)|0);
                    $16012 = __THREW__; __THREW__ = 0;
                    $16013 = $16012&1;
                    if ($16013) {
                     label = 2175;
                     break L1;
                    }
                    $16014 = (($16011) + 17|0);
                    HEAP8[$16014>>0] = 1;
                    $16015 = (($4) + 120|0);
                    $16016 = +HEAPF64[$16015>>3];
                    __THREW__ = 0;
                    $16017 = (invoke_iii(381,($vinfos257|0),3)|0);
                    $16018 = __THREW__; __THREW__ = 0;
                    $16019 = $16018&1;
                    if ($16019) {
                     label = 2175;
                     break L1;
                    }
                    $16020 = (($16017) + 8|0);
                    HEAPF64[$16020>>3] = $16016;
                    $16021 = (($4) + 545|0);
                    $16022 = HEAP8[$16021>>0]|0;
                    __THREW__ = 0;
                    $16023 = (invoke_iii(381,($vinfos257|0),3)|0);
                    $16024 = __THREW__; __THREW__ = 0;
                    $16025 = $16024&1;
                    if ($16025) {
                     label = 2175;
                     break L1;
                    }
                    $16026 = (($16023) + 19|0);
                    HEAP8[$16026>>0] = $16022;
                    $16027 = (($4) + 545|0);
                    $16028 = (($16027) + 1|0);
                    $16029 = HEAP8[$16028>>0]|0;
                    __THREW__ = 0;
                    $16030 = (invoke_iii(381,($vinfos257|0),3)|0);
                    $16031 = __THREW__; __THREW__ = 0;
                    $16032 = $16031&1;
                    if ($16032) {
                     label = 2175;
                     break L1;
                    }
                    $16033 = (($16030) + 19|0);
                    $16034 = (($16033) + 1|0);
                    HEAP8[$16034>>0] = $16029;
                    $16035 = (($4) + 547|0);
                    $16036 = HEAP8[$16035>>0]|0;
                    __THREW__ = 0;
                    $16037 = (invoke_iii(381,($vinfos257|0),3)|0);
                    $16038 = __THREW__; __THREW__ = 0;
                    $16039 = $16038&1;
                    if ($16039) {
                     label = 2175;
                     break L1;
                    }
                    $16040 = (($16037) + 18|0);
                    HEAP8[$16040>>0] = $16036;
                    __THREW__ = 0;
                    $16041 = (invoke_iii(381,($vinfos257|0),4)|0);
                    $16042 = __THREW__; __THREW__ = 0;
                    $16043 = $16042&1;
                    if ($16043) {
                     label = 2175;
                     break L1;
                    }
                    $16044 = (($16041) + 17|0);
                    HEAP8[$16044>>0] = 1;
                    $16045 = (($4) + 160|0);
                    $16046 = +HEAPF64[$16045>>3];
                    __THREW__ = 0;
                    $16047 = (invoke_iii(381,($vinfos257|0),4)|0);
                    $16048 = __THREW__; __THREW__ = 0;
                    $16049 = $16048&1;
                    if ($16049) {
                     label = 2175;
                     break L1;
                    }
                    $16050 = (($16047) + 8|0);
                    HEAPF64[$16050>>3] = $16046;
                    $16051 = (($4) + 548|0);
                    $16052 = HEAP8[$16051>>0]|0;
                    __THREW__ = 0;
                    $16053 = (invoke_iii(381,($vinfos257|0),4)|0);
                    $16054 = __THREW__; __THREW__ = 0;
                    $16055 = $16054&1;
                    if ($16055) {
                     label = 2175;
                     break L1;
                    }
                    $16056 = (($16053) + 19|0);
                    HEAP8[$16056>>0] = $16052;
                    $16057 = (($4) + 548|0);
                    $16058 = (($16057) + 1|0);
                    $16059 = HEAP8[$16058>>0]|0;
                    __THREW__ = 0;
                    $16060 = (invoke_iii(381,($vinfos257|0),4)|0);
                    $16061 = __THREW__; __THREW__ = 0;
                    $16062 = $16061&1;
                    if ($16062) {
                     label = 2175;
                     break L1;
                    }
                    $16063 = (($16060) + 19|0);
                    $16064 = (($16063) + 1|0);
                    HEAP8[$16064>>0] = $16059;
                    $16065 = (($4) + 550|0);
                    $16066 = HEAP8[$16065>>0]|0;
                    __THREW__ = 0;
                    $16067 = (invoke_iii(381,($vinfos257|0),4)|0);
                    $16068 = __THREW__; __THREW__ = 0;
                    $16069 = $16068&1;
                    if ($16069) {
                     label = 2175;
                     break L1;
                    }
                    $16070 = (($16067) + 18|0);
                    HEAP8[$16070>>0] = $16066;
                    __THREW__ = 0;
                    $16071 = (invoke_iii(381,($vinfos257|0),5)|0);
                    $16072 = __THREW__; __THREW__ = 0;
                    $16073 = $16072&1;
                    if ($16073) {
                     label = 2175;
                     break L1;
                    }
                    $16074 = (($16071) + 17|0);
                    HEAP8[$16074>>0] = 1;
                    $16075 = (($4) + 200|0);
                    $16076 = +HEAPF64[$16075>>3];
                    __THREW__ = 0;
                    $16077 = (invoke_iii(381,($vinfos257|0),5)|0);
                    $16078 = __THREW__; __THREW__ = 0;
                    $16079 = $16078&1;
                    if ($16079) {
                     label = 2175;
                     break L1;
                    }
                    $16080 = (($16077) + 8|0);
                    HEAPF64[$16080>>3] = $16076;
                    $16081 = (($4) + 551|0);
                    $16082 = HEAP8[$16081>>0]|0;
                    __THREW__ = 0;
                    $16083 = (invoke_iii(381,($vinfos257|0),5)|0);
                    $16084 = __THREW__; __THREW__ = 0;
                    $16085 = $16084&1;
                    if ($16085) {
                     label = 2175;
                     break L1;
                    }
                    $16086 = (($16083) + 19|0);
                    HEAP8[$16086>>0] = $16082;
                    $16087 = (($4) + 551|0);
                    $16088 = (($16087) + 1|0);
                    $16089 = HEAP8[$16088>>0]|0;
                    __THREW__ = 0;
                    $16090 = (invoke_iii(381,($vinfos257|0),5)|0);
                    $16091 = __THREW__; __THREW__ = 0;
                    $16092 = $16091&1;
                    if ($16092) {
                     label = 2175;
                     break L1;
                    }
                    $16093 = (($16090) + 19|0);
                    $16094 = (($16093) + 1|0);
                    HEAP8[$16094>>0] = $16089;
                    $16095 = (($4) + 553|0);
                    $16096 = HEAP8[$16095>>0]|0;
                    __THREW__ = 0;
                    $16097 = (invoke_iii(381,($vinfos257|0),5)|0);
                    $16098 = __THREW__; __THREW__ = 0;
                    $16099 = $16098&1;
                    if ($16099) {
                     label = 2175;
                     break L1;
                    }
                    $16100 = (($16097) + 18|0);
                    HEAP8[$16100>>0] = $16096;
                    __THREW__ = 0;
                    invoke_vii(382,($vfree258|0),0);
                    $16101 = __THREW__; __THREW__ = 0;
                    $16102 = $16101&1;
                    if ($16102) {
                     label = 2175;
                     break L1;
                    }
                    $16103 = $1;
                    $16104 = HEAP32[$16103>>2]|0;
                    $16105 = (($16104) + 8|0);
                    $16106 = HEAP32[$16105>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($16106|0,($16103|0),($vinfos257|0),($vfree258|0))|0);
                    $16107 = __THREW__; __THREW__ = 0;
                    $16108 = $16107&1;
                    if ($16108) {
                     label = 2176;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(366,($vfree258|0));
                    $16109 = __THREW__; __THREW__ = 0;
                    $16110 = $16109&1;
                    if ($16110) {
                     label = 2175;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos257);
                    break L91;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $16111 = $ij5254;
                $16112 = (($16111) + 1)|0;
                $ij5254 = $16112;
               }
              }
             } while(0);
             if ((label|0) == 1250) {
              label = 0;
              $9514 = (($4) + 8|0);
              $9515 = +HEAPF64[$9514>>3];
              $9516 = 1.0 * $9515;
              $x338 = $9516;
              $9517 = (($4) + 344|0);
              $9518 = +HEAPF64[$9517>>3];
              $9519 = (($4) + 16|0);
              $9520 = +HEAPF64[$9519>>3];
              $9521 = $9518 * $9520;
              $x339 = $9521;
              $9522 = (($4) + 320|0);
              $9523 = +HEAPF64[$9522>>3];
              $9524 = (($4) + 16|0);
              $9525 = +HEAPF64[$9524>>3];
              $9526 = $9523 * $9525;
              $x340 = $9526;
              $9527 = (($4) + 88|0);
              $9528 = +HEAPF64[$9527>>3];
              $9529 = 1.0 * $9528;
              $x341 = $9529;
              $9530 = (($4) + 48|0);
              $9531 = +HEAPF64[$9530>>3];
              $9532 = (($4) + 96|0);
              $9533 = +HEAPF64[$9532>>3];
              $9534 = $9531 * $9533;
              $x342 = $9534;
              $9535 = (($4) + 368|0);
              $9536 = +HEAPF64[$9535>>3];
              $9537 = (($4) + 16|0);
              $9538 = +HEAPF64[$9537>>3];
              $9539 = $9536 * $9538;
              $x343 = $9539;
              $9540 = (($4) + 88|0);
              $9541 = +HEAPF64[$9540>>3];
              $9542 = (($4) + 56|0);
              $9543 = +HEAPF64[$9542>>3];
              $9544 = $9541 * $9543;
              $9545 = $x342;
              $9546 = $9544 + $9545;
              $x344 = $9546;
              $9547 = $x116;
              $x345 = $9547;
              $9548 = (($4) + 16|0);
              $9549 = +HEAPF64[$9548>>3];
              $9550 = $x345;
              $9551 = $9549 * $9550;
              $x346 = $9551;
              $9552 = (($4) + 8|0);
              $9553 = +HEAPF64[$9552>>3];
              $9554 = $x344;
              $9555 = $9553 * $9554;
              $x347 = $9555;
              $9556 = (($4) + 8|0);
              $9557 = +HEAPF64[$9556>>3];
              $9558 = $x345;
              $9559 = $9557 * $9558;
              $x348 = $9559;
              $9560 = $x120;
              $x349 = $9560;
              $9561 = (($4) + 248|0);
              $9562 = +HEAPF64[$9561>>3];
              $9563 = $x347;
              $9564 = $9562 * $9563;
              $9565 = (($4) + 392|0);
              $9566 = +HEAPF64[$9565>>3];
              $9567 = $x345;
              $9568 = $9566 * $9567;
              $9569 = $9564 + $9568;
              $9570 = $x340;
              $9571 = $x344;
              $9572 = $9570 * $9571;
              $9573 = $9569 + $9572;
              $9574 = (($4) + 240|0);
              HEAPF64[$9574>>3] = $9573;
              $9575 = (($4) + 272|0);
              $9576 = +HEAPF64[$9575>>3];
              $9577 = $x347;
              $9578 = $9576 * $9577;
              $9579 = (($4) + 416|0);
              $9580 = +HEAPF64[$9579>>3];
              $9581 = $x345;
              $9582 = $9580 * $9581;
              $9583 = $9578 + $9582;
              $9584 = $x339;
              $9585 = $x344;
              $9586 = $9584 * $9585;
              $9587 = $9583 + $9586;
              $9588 = (($4) + 264|0);
              HEAPF64[$9588>>3] = $9587;
              $9589 = (($4) + 440|0);
              $9590 = +HEAPF64[$9589>>3];
              $9591 = $x345;
              $9592 = $9590 * $9591;
              $9593 = (($4) + 296|0);
              $9594 = +HEAPF64[$9593>>3];
              $9595 = $x347;
              $9596 = $9594 * $9595;
              $9597 = $9592 + $9596;
              $9598 = $x343;
              $9599 = $x344;
              $9600 = $9598 * $9599;
              $9601 = $9597 + $9600;
              $9602 = (($4) + 288|0);
              HEAPF64[$9602>>3] = $9601;
              $9603 = (($4) + 248|0);
              $9604 = +HEAPF64[$9603>>3];
              $9605 = (($4) + 16|0);
              $9606 = +HEAPF64[$9605>>3];
              $9607 = $9604 * $9606;
              $9608 = (($4) + 320|0);
              $9609 = +HEAPF64[$9608>>3];
              $9610 = -1.0 * $9609;
              $9611 = $x338;
              $9612 = $9610 * $9611;
              $9613 = $9607 + $9612;
              $9614 = (($4) + 312|0);
              HEAPF64[$9614>>3] = $9613;
              $9615 = (($4) + 272|0);
              $9616 = +HEAPF64[$9615>>3];
              $9617 = (($4) + 16|0);
              $9618 = +HEAPF64[$9617>>3];
              $9619 = $9616 * $9618;
              $9620 = (($4) + 344|0);
              $9621 = +HEAPF64[$9620>>3];
              $9622 = -1.0 * $9621;
              $9623 = $x338;
              $9624 = $9622 * $9623;
              $9625 = $9619 + $9624;
              $9626 = (($4) + 336|0);
              HEAPF64[$9626>>3] = $9625;
              $9627 = (($4) + 296|0);
              $9628 = +HEAPF64[$9627>>3];
              $9629 = (($4) + 16|0);
              $9630 = +HEAPF64[$9629>>3];
              $9631 = $9628 * $9630;
              $9632 = (($4) + 368|0);
              $9633 = +HEAPF64[$9632>>3];
              $9634 = -1.0 * $9633;
              $9635 = $x338;
              $9636 = $9634 * $9635;
              $9637 = $9631 + $9636;
              $9638 = (($4) + 360|0);
              HEAPF64[$9638>>3] = $9637;
              $9639 = (($4) + 248|0);
              $9640 = +HEAPF64[$9639>>3];
              $9641 = $x348;
              $9642 = $9640 * $9641;
              $9643 = (($4) + 392|0);
              $9644 = +HEAPF64[$9643>>3];
              $9645 = $x349;
              $9646 = $9644 * $9645;
              $9647 = $9642 + $9646;
              $9648 = $x340;
              $9649 = $x345;
              $9650 = $9648 * $9649;
              $9651 = $9647 + $9650;
              $9652 = (($4) + 384|0);
              HEAPF64[$9652>>3] = $9651;
              $9653 = (($4) + 272|0);
              $9654 = +HEAPF64[$9653>>3];
              $9655 = $x348;
              $9656 = $9654 * $9655;
              $9657 = (($4) + 416|0);
              $9658 = +HEAPF64[$9657>>3];
              $9659 = $x349;
              $9660 = $9658 * $9659;
              $9661 = $9656 + $9660;
              $9662 = $x339;
              $9663 = $x345;
              $9664 = $9662 * $9663;
              $9665 = $9661 + $9664;
              $9666 = (($4) + 408|0);
              HEAPF64[$9666>>3] = $9665;
              $9667 = (($4) + 440|0);
              $9668 = +HEAPF64[$9667>>3];
              $9669 = $x349;
              $9670 = $9668 * $9669;
              $9671 = (($4) + 296|0);
              $9672 = +HEAPF64[$9671>>3];
              $9673 = $x348;
              $9674 = $9672 * $9673;
              $9675 = $9670 + $9674;
              $9676 = $x343;
              $9677 = $x345;
              $9678 = $9676 * $9677;
              $9679 = $9675 + $9678;
              $9680 = (($4) + 432|0);
              HEAPF64[$9680>>3] = $9679;
              $9681 = (($4) + 136|0);
              $9682 = +HEAPF64[$9681>>3];
              HEAPF64[$j5eval148>>3] = $9682;
              $9683 = (($4) + 176|0);
              $9684 = +HEAPF64[$9683>>3];
              $9685 = (($j5eval148) + 8|0);
              HEAPF64[$9685>>3] = $9684;
              $9686 = +HEAPF64[$j5eval148>>3];
              $9687 = (+__Z5IKabsd($9686));
              $9688 = $9687 < 9.9999999999999995E-7;
              do {
               if ($9688) {
                label = 1252;
               } else {
                $9689 = (($j5eval148) + 8|0);
                $9690 = +HEAPF64[$9689>>3];
                $9691 = (+__Z5IKabsd($9690));
                $9692 = $9691 < 9.9999999999999995E-7;
                if ($9692) {
                 label = 1252;
                 break;
                }
                ;HEAP8[$j5valid244+0>>0]=0|0;
                $14965 = (($4) + 553|0);
                HEAP8[$14965>>0] = 1;
                $14966 = (($4) + 176|0);
                $14967 = +HEAPF64[$14966>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x450,$14967,-1);
                $14968 = (($x450) + 8|0);
                $14969 = HEAP8[$14968>>0]|0;
                $14970 = $14969&1;
                if (!($14970)) {
                 break L49;
                }
                $14971 = +HEAPF64[$x450>>3];
                $x449 = $14971;
                $14972 = (($4) + 136|0);
                $14973 = +HEAPF64[$14972>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x451,$14973,-1);
                $14974 = (($x451) + 8|0);
                $14975 = HEAP8[$14974>>0]|0;
                $14976 = $14975&1;
                if (!($14976)) {
                 break L49;
                }
                $14977 = $x449;
                $14978 = +HEAPF64[$x451>>3];
                $14979 = $14977 * $14978;
                $14980 = (($4) + 128|0);
                $14981 = +HEAPF64[$14980>>3];
                $14982 = -1.0 * $14981;
                $14983 = (($4) + 168|0);
                $14984 = +HEAPF64[$14983>>3];
                $14985 = $14982 * $14984;
                $14986 = (($4) + 384|0);
                $14987 = +HEAPF64[$14986>>3];
                $14988 = $14985 * $14987;
                $14989 = (($4) + 240|0);
                $14990 = +HEAPF64[$14989>>3];
                $14991 = -1.0 * $14990;
                $14992 = (($4) + 176|0);
                $14993 = +HEAPF64[$14992>>3];
                $14994 = $14991 * $14993;
                $14995 = $14988 + $14994;
                $14996 = $14979 * $14995;
                $14997 = (+__Z5IKabsd($14996));
                $14998 = $14997 < 1.9999999999999999E-6;
                do {
                 if ($14998) {
                  $14999 = (($4) + 384|0);
                  $15000 = +HEAPF64[$14999>>3];
                  $15001 = -1.0 * $15000;
                  $15002 = $x449;
                  $15003 = $15001 * $15002;
                  $15004 = (+__Z5IKabsd($15003));
                  $15005 = $15004 < 1.9999999999999999E-6;
                  if (!($15005)) {
                   break;
                  }
                  $15006 = $x449;
                  $15007 = +HEAPF64[$x451>>3];
                  $15008 = $15006 * $15007;
                  $15009 = (($4) + 128|0);
                  $15010 = +HEAPF64[$15009>>3];
                  $15011 = -1.0 * $15010;
                  $15012 = (($4) + 168|0);
                  $15013 = +HEAPF64[$15012>>3];
                  $15014 = $15011 * $15013;
                  $15015 = (($4) + 384|0);
                  $15016 = +HEAPF64[$15015>>3];
                  $15017 = $15014 * $15016;
                  $15018 = (($4) + 240|0);
                  $15019 = +HEAPF64[$15018>>3];
                  $15020 = -1.0 * $15019;
                  $15021 = (($4) + 176|0);
                  $15022 = +HEAPF64[$15021>>3];
                  $15023 = $15020 * $15022;
                  $15024 = $15017 + $15023;
                  $15025 = $15008 * $15024;
                  $15026 = (+__Z5IKsqrd($15025));
                  $15027 = (($4) + 384|0);
                  $15028 = +HEAPF64[$15027>>3];
                  $15029 = -1.0 * $15028;
                  $15030 = $x449;
                  $15031 = $15029 * $15030;
                  $15032 = (+__Z5IKsqrd($15031));
                  $15033 = $15026 + $15032;
                  $15034 = $15033 - 1.0;
                  $15035 = (+__Z5IKabsd($15034));
                  $15036 = $15035 <= 1.9999999999999999E-6;
                  if (!($15036)) {
                   break;
                  }
                  break L49;
                 }
                } while(0);
                $15037 = $x449;
                $15038 = +HEAPF64[$x451>>3];
                $15039 = $15037 * $15038;
                $15040 = (($4) + 128|0);
                $15041 = +HEAPF64[$15040>>3];
                $15042 = -1.0 * $15041;
                $15043 = (($4) + 168|0);
                $15044 = +HEAPF64[$15043>>3];
                $15045 = $15042 * $15044;
                $15046 = (($4) + 384|0);
                $15047 = +HEAPF64[$15046>>3];
                $15048 = $15045 * $15047;
                $15049 = (($4) + 240|0);
                $15050 = +HEAPF64[$15049>>3];
                $15051 = -1.0 * $15050;
                $15052 = (($4) + 176|0);
                $15053 = +HEAPF64[$15052>>3];
                $15054 = $15051 * $15053;
                $15055 = $15048 + $15054;
                $15056 = $15039 * $15055;
                $15057 = (($4) + 384|0);
                $15058 = +HEAPF64[$15057>>3];
                $15059 = -1.0 * $15058;
                $15060 = $x449;
                $15061 = $15059 * $15060;
                $15062 = (+__Z7IKatan2dd($15056,$15061));
                HEAPF64[$j5array241>>3] = $15062;
                $15063 = +HEAPF64[$j5array241>>3];
                $15064 = (+__Z5IKsind($15063));
                HEAPF64[$sj5array243>>3] = $15064;
                $15065 = +HEAPF64[$j5array241>>3];
                $15066 = (+__Z5IKcosd($15065));
                HEAPF64[$cj5array242>>3] = $15066;
                $15067 = +HEAPF64[$j5array241>>3];
                $15068 = $15067 > 3.14159265358979;
                if ($15068) {
                 $15069 = +HEAPF64[$j5array241>>3];
                 $15070 = $15069 - 6.2831853071795898;
                 HEAPF64[$j5array241>>3] = $15070;
                } else {
                 $15071 = +HEAPF64[$j5array241>>3];
                 $15072 = $15071 < -3.14159265358979;
                 if ($15072) {
                  $15073 = +HEAPF64[$j5array241>>3];
                  $15074 = $15073 + 6.2831853071795898;
                  HEAPF64[$j5array241>>3] = $15074;
                 }
                }
                HEAP8[$j5valid244>>0] = 1;
                $ij5245 = 0;
                while(1) {
                 $15075 = $ij5245;
                 $15076 = ($15075|0)<(1);
                 if (!($15076)) {
                  break;
                 }
                 $15077 = $ij5245;
                 $15078 = (($j5valid244) + ($15077)|0);
                 $15079 = HEAP8[$15078>>0]|0;
                 $15080 = $15079&1;
                 L180: do {
                  if ($15080) {
                   $15081 = $ij5245;
                   $15082 = $15081&255;
                   $15083 = (($4) + 551|0);
                   HEAP8[$15083>>0] = $15082;
                   $15084 = (($4) + 551|0);
                   $15085 = (($15084) + 1|0);
                   HEAP8[$15085>>0] = -1;
                   $15086 = $ij5245;
                   $15087 = (($15086) + 1)|0;
                   $iij5246 = $15087;
                   L183: while(1) {
                    $15088 = $iij5246;
                    $15089 = ($15088|0)<(1);
                    if (!($15089)) {
                     break;
                    }
                    $15090 = $iij5246;
                    $15091 = (($j5valid244) + ($15090)|0);
                    $15092 = HEAP8[$15091>>0]|0;
                    $15093 = $15092&1;
                    do {
                     if ($15093) {
                      $15094 = $ij5245;
                      $15095 = (($cj5array242) + ($15094<<3)|0);
                      $15096 = +HEAPF64[$15095>>3];
                      $15097 = $iij5246;
                      $15098 = (($cj5array242) + ($15097<<3)|0);
                      $15099 = +HEAPF64[$15098>>3];
                      $15100 = $15096 - $15099;
                      $15101 = (+__Z5IKabsd($15100));
                      $15102 = $15101 < 9.9999999999999995E-7;
                      if (!($15102)) {
                       break;
                      }
                      $15103 = $ij5245;
                      $15104 = (($sj5array243) + ($15103<<3)|0);
                      $15105 = +HEAPF64[$15104>>3];
                      $15106 = $iij5246;
                      $15107 = (($sj5array243) + ($15106<<3)|0);
                      $15108 = +HEAPF64[$15107>>3];
                      $15109 = $15105 - $15108;
                      $15110 = (+__Z5IKabsd($15109));
                      $15111 = $15110 < 9.9999999999999995E-7;
                      if ($15111) {
                       label = 2048;
                       break L183;
                      }
                     }
                    } while(0);
                    $15118 = $iij5246;
                    $15119 = (($15118) + 1)|0;
                    $iij5246 = $15119;
                   }
                   if ((label|0) == 2048) {
                    label = 0;
                    $15112 = $iij5246;
                    $15113 = (($j5valid244) + ($15112)|0);
                    HEAP8[$15113>>0] = 0;
                    $15114 = $iij5246;
                    $15115 = $15114&255;
                    $15116 = (($4) + 551|0);
                    $15117 = (($15116) + 1|0);
                    HEAP8[$15117>>0] = $15115;
                   }
                   $15120 = $ij5245;
                   $15121 = (($j5array241) + ($15120<<3)|0);
                   $15122 = +HEAPF64[$15121>>3];
                   $15123 = (($4) + 200|0);
                   HEAPF64[$15123>>3] = $15122;
                   $15124 = $ij5245;
                   $15125 = (($cj5array242) + ($15124<<3)|0);
                   $15126 = +HEAPF64[$15125>>3];
                   $15127 = (($4) + 208|0);
                   HEAPF64[$15127>>3] = $15126;
                   $15128 = $ij5245;
                   $15129 = (($sj5array243) + ($15128<<3)|0);
                   $15130 = +HEAPF64[$15129>>3];
                   $15131 = (($4) + 216|0);
                   HEAPF64[$15131>>3] = $15130;
                   $15132 = (($4) + 200|0);
                   $15133 = +HEAPF64[$15132>>3];
                   $15134 = (+__Z5IKsind($15133));
                   $x452 = $15134;
                   $15135 = (($4) + 200|0);
                   $15136 = +HEAPF64[$15135>>3];
                   $15137 = (+__Z5IKcosd($15136));
                   $x453 = $15137;
                   $15138 = (($4) + 128|0);
                   $15139 = +HEAPF64[$15138>>3];
                   $15140 = (($4) + 240|0);
                   $15141 = +HEAPF64[$15140>>3];
                   $15142 = $15139 * $15141;
                   $x454 = $15142;
                   $15143 = (($4) + 128|0);
                   $15144 = +HEAPF64[$15143>>3];
                   $15145 = (($4) + 168|0);
                   $15146 = +HEAPF64[$15145>>3];
                   $15147 = $15144 * $15146;
                   $x455 = $15147;
                   $15148 = (($4) + 136|0);
                   $15149 = +HEAPF64[$15148>>3];
                   $15150 = 1.0 * $15149;
                   $x456 = $15150;
                   $15151 = $x452;
                   $15152 = 1.0 * $15151;
                   $x457 = $15152;
                   $15153 = (($4) + 136|0);
                   $15154 = +HEAPF64[$15153>>3];
                   $15155 = $x452;
                   $15156 = $15154 * $15155;
                   $x458 = $15156;
                   $15157 = $x453;
                   $15158 = 1.0 * $15157;
                   $x459 = $15158;
                   $15159 = (($4) + 176|0);
                   $15160 = +HEAPF64[$15159>>3];
                   $15161 = $x453;
                   $15162 = $15160 * $15161;
                   $15163 = (($4) + 384|0);
                   $15164 = +HEAPF64[$15163>>3];
                   $15165 = $15162 + $15164;
                   HEAPF64[$evalcond247>>3] = $15165;
                   $15166 = (($4) + 176|0);
                   $15167 = +HEAPF64[$15166>>3];
                   $15168 = -1.0 * $15167;
                   $15169 = $x457;
                   $15170 = $15168 * $15169;
                   $15171 = (($4) + 408|0);
                   $15172 = +HEAPF64[$15171>>3];
                   $15173 = $15170 + $15172;
                   $15174 = (($evalcond247) + 8|0);
                   HEAPF64[$15174>>3] = $15173;
                   $15175 = (($4) + 168|0);
                   $15176 = +HEAPF64[$15175>>3];
                   $15177 = $x452;
                   $15178 = $15176 * $15177;
                   $15179 = (($4) + 336|0);
                   $15180 = +HEAPF64[$15179>>3];
                   $15181 = (($4) + 136|0);
                   $15182 = +HEAPF64[$15181>>3];
                   $15183 = $15180 * $15182;
                   $15184 = $15178 + $15183;
                   $15185 = (($4) + 128|0);
                   $15186 = +HEAPF64[$15185>>3];
                   $15187 = (($4) + 264|0);
                   $15188 = +HEAPF64[$15187>>3];
                   $15189 = $15186 * $15188;
                   $15190 = $15184 + $15189;
                   $15191 = (($evalcond247) + 16|0);
                   HEAPF64[$15191>>3] = $15190;
                   $15192 = (($4) + 240|0);
                   $15193 = +HEAPF64[$15192>>3];
                   $15194 = -1.0 * $15193;
                   $15195 = $x456;
                   $15196 = $15194 * $15195;
                   $15197 = $x457;
                   $15198 = -1.0 * $15197;
                   $15199 = $15196 + $15198;
                   $15200 = (($4) + 128|0);
                   $15201 = +HEAPF64[$15200>>3];
                   $15202 = (($4) + 312|0);
                   $15203 = +HEAPF64[$15202>>3];
                   $15204 = $15201 * $15203;
                   $15205 = $15199 + $15204;
                   $15206 = (($evalcond247) + 24|0);
                   HEAPF64[$15206>>3] = $15205;
                   $15207 = (($4) + 264|0);
                   $15208 = +HEAPF64[$15207>>3];
                   $15209 = -1.0 * $15208;
                   $15210 = $x456;
                   $15211 = $15209 * $15210;
                   $15212 = $x459;
                   $15213 = -1.0 * $15212;
                   $15214 = $15211 + $15213;
                   $15215 = (($4) + 128|0);
                   $15216 = +HEAPF64[$15215>>3];
                   $15217 = (($4) + 336|0);
                   $15218 = +HEAPF64[$15217>>3];
                   $15219 = $15216 * $15218;
                   $15220 = $15214 + $15219;
                   $15221 = (($evalcond247) + 32|0);
                   HEAPF64[$15221>>3] = $15220;
                   $15222 = (($4) + 136|0);
                   $15223 = +HEAPF64[$15222>>3];
                   $15224 = $x453;
                   $15225 = $15223 * $15224;
                   $15226 = $x452;
                   $15227 = $x455;
                   $15228 = $15226 * $15227;
                   $15229 = $15225 + $15228;
                   $15230 = (($4) + 264|0);
                   $15231 = +HEAPF64[$15230>>3];
                   $15232 = $15229 + $15231;
                   $15233 = (($evalcond247) + 40|0);
                   HEAPF64[$15233>>3] = $15232;
                   $15234 = (($4) + 312|0);
                   $15235 = +HEAPF64[$15234>>3];
                   $15236 = (($4) + 136|0);
                   $15237 = +HEAPF64[$15236>>3];
                   $15238 = $15235 * $15237;
                   $15239 = (($4) + 168|0);
                   $15240 = +HEAPF64[$15239>>3];
                   $15241 = -1.0 * $15240;
                   $15242 = $x459;
                   $15243 = $15241 * $15242;
                   $15244 = $15238 + $15243;
                   $15245 = $x454;
                   $15246 = $15244 + $15245;
                   $15247 = (($evalcond247) + 48|0);
                   HEAPF64[$15247>>3] = $15246;
                   $15248 = $x458;
                   $15249 = $x455;
                   $15250 = -1.0 * $15249;
                   $15251 = $x459;
                   $15252 = $15250 * $15251;
                   $15253 = $15248 + $15252;
                   $15254 = (($4) + 240|0);
                   $15255 = +HEAPF64[$15254>>3];
                   $15256 = $15253 + $15255;
                   $15257 = (($evalcond247) + 56|0);
                   HEAPF64[$15257>>3] = $15256;
                   $15258 = (($4) + 168|0);
                   $15259 = +HEAPF64[$15258>>3];
                   $15260 = $x458;
                   $15261 = $15259 * $15260;
                   $15262 = (($4) + 336|0);
                   $15263 = +HEAPF64[$15262>>3];
                   $15264 = $15261 + $15263;
                   $15265 = (($4) + 128|0);
                   $15266 = +HEAPF64[$15265>>3];
                   $15267 = -1.0 * $15266;
                   $15268 = $x459;
                   $15269 = $15267 * $15268;
                   $15270 = $15264 + $15269;
                   $15271 = (($evalcond247) + 64|0);
                   HEAPF64[$15271>>3] = $15270;
                   $15272 = (($4) + 168|0);
                   $15273 = +HEAPF64[$15272>>3];
                   $15274 = -1.0 * $15273;
                   $15275 = $x453;
                   $15276 = $15274 * $15275;
                   $15277 = $x456;
                   $15278 = $15276 * $15277;
                   $15279 = (($4) + 312|0);
                   $15280 = +HEAPF64[$15279>>3];
                   $15281 = $15278 + $15280;
                   $15282 = (($4) + 128|0);
                   $15283 = +HEAPF64[$15282>>3];
                   $15284 = -1.0 * $15283;
                   $15285 = $x457;
                   $15286 = $15284 * $15285;
                   $15287 = $15281 + $15286;
                   $15288 = (($evalcond247) + 72|0);
                   HEAPF64[$15288>>3] = $15287;
                   $15289 = (($4) + 384|0);
                   $15290 = +HEAPF64[$15289>>3];
                   $15291 = (($4) + 176|0);
                   $15292 = +HEAPF64[$15291>>3];
                   $15293 = $15290 * $15292;
                   $15294 = (($4) + 168|0);
                   $15295 = +HEAPF64[$15294>>3];
                   $15296 = -1.0 * $15295;
                   $15297 = $x454;
                   $15298 = $15296 * $15297;
                   $15299 = $15293 + $15298;
                   $15300 = (($4) + 168|0);
                   $15301 = +HEAPF64[$15300>>3];
                   $15302 = -1.0 * $15301;
                   $15303 = (($4) + 312|0);
                   $15304 = +HEAPF64[$15303>>3];
                   $15305 = $15302 * $15304;
                   $15306 = $x456;
                   $15307 = $15305 * $15306;
                   $15308 = $15299 + $15307;
                   $15309 = $x453;
                   $15310 = $15308 + $15309;
                   $15311 = (($evalcond247) + 80|0);
                   HEAPF64[$15311>>3] = $15310;
                   $15312 = $x457;
                   $15313 = -1.0 * $15312;
                   $15314 = (($4) + 168|0);
                   $15315 = +HEAPF64[$15314>>3];
                   $15316 = -1.0 * $15315;
                   $15317 = (($4) + 336|0);
                   $15318 = +HEAPF64[$15317>>3];
                   $15319 = $15316 * $15318;
                   $15320 = $x456;
                   $15321 = $15319 * $15320;
                   $15322 = $15313 + $15321;
                   $15323 = (($4) + 264|0);
                   $15324 = +HEAPF64[$15323>>3];
                   $15325 = -1.0 * $15324;
                   $15326 = $x455;
                   $15327 = $15325 * $15326;
                   $15328 = $15322 + $15327;
                   $15329 = (($4) + 408|0);
                   $15330 = +HEAPF64[$15329>>3];
                   $15331 = (($4) + 176|0);
                   $15332 = +HEAPF64[$15331>>3];
                   $15333 = $15330 * $15332;
                   $15334 = $15328 + $15333;
                   $15335 = (($evalcond247) + 88|0);
                   HEAPF64[$15335>>3] = $15334;
                   $15336 = +HEAPF64[$evalcond247>>3];
                   $15337 = (+__Z5IKabsd($15336));
                   $15338 = $15337 > 5.0000000000000004E-6;
                   do {
                    if (!($15338)) {
                     $15339 = (($evalcond247) + 8|0);
                     $15340 = +HEAPF64[$15339>>3];
                     $15341 = (+__Z5IKabsd($15340));
                     $15342 = $15341 > 5.0000000000000004E-6;
                     if ($15342) {
                      break;
                     }
                     $15343 = (($evalcond247) + 16|0);
                     $15344 = +HEAPF64[$15343>>3];
                     $15345 = (+__Z5IKabsd($15344));
                     $15346 = $15345 > 5.0000000000000004E-6;
                     if ($15346) {
                      break;
                     }
                     $15347 = (($evalcond247) + 24|0);
                     $15348 = +HEAPF64[$15347>>3];
                     $15349 = (+__Z5IKabsd($15348));
                     $15350 = $15349 > 5.0000000000000004E-6;
                     if ($15350) {
                      break;
                     }
                     $15351 = (($evalcond247) + 32|0);
                     $15352 = +HEAPF64[$15351>>3];
                     $15353 = (+__Z5IKabsd($15352));
                     $15354 = $15353 > 5.0000000000000004E-6;
                     if ($15354) {
                      break;
                     }
                     $15355 = (($evalcond247) + 40|0);
                     $15356 = +HEAPF64[$15355>>3];
                     $15357 = (+__Z5IKabsd($15356));
                     $15358 = $15357 > 5.0000000000000004E-6;
                     if ($15358) {
                      break;
                     }
                     $15359 = (($evalcond247) + 48|0);
                     $15360 = +HEAPF64[$15359>>3];
                     $15361 = (+__Z5IKabsd($15360));
                     $15362 = $15361 > 5.0000000000000004E-6;
                     if ($15362) {
                      break;
                     }
                     $15363 = (($evalcond247) + 56|0);
                     $15364 = +HEAPF64[$15363>>3];
                     $15365 = (+__Z5IKabsd($15364));
                     $15366 = $15365 > 5.0000000000000004E-6;
                     if ($15366) {
                      break;
                     }
                     $15367 = (($evalcond247) + 64|0);
                     $15368 = +HEAPF64[$15367>>3];
                     $15369 = (+__Z5IKabsd($15368));
                     $15370 = $15369 > 5.0000000000000004E-6;
                     if ($15370) {
                      break;
                     }
                     $15371 = (($evalcond247) + 72|0);
                     $15372 = +HEAPF64[$15371>>3];
                     $15373 = (+__Z5IKabsd($15372));
                     $15374 = $15373 > 5.0000000000000004E-6;
                     if ($15374) {
                      break;
                     }
                     $15375 = (($evalcond247) + 80|0);
                     $15376 = +HEAPF64[$15375>>3];
                     $15377 = (+__Z5IKabsd($15376));
                     $15378 = $15377 > 5.0000000000000004E-6;
                     if ($15378) {
                      break;
                     }
                     $15379 = (($evalcond247) + 88|0);
                     $15380 = +HEAPF64[$15379>>3];
                     $15381 = (+__Z5IKabsd($15380));
                     $15382 = $15381 > 5.0000000000000004E-6;
                     if ($15382) {
                      break;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos248,6);
                     __THREW__ = 0;
                     $15383 = (invoke_iii(381,($vinfos248|0),0)|0);
                     $15384 = __THREW__; __THREW__ = 0;
                     $15385 = $15384&1;
                     if ($15385) {
                      label = 2099;
                      break L1;
                     }
                     $15386 = (($15383) + 17|0);
                     HEAP8[$15386>>0] = 1;
                     $15387 = +HEAPF64[$4>>3];
                     __THREW__ = 0;
                     $15388 = (invoke_iii(381,($vinfos248|0),0)|0);
                     $15389 = __THREW__; __THREW__ = 0;
                     $15390 = $15389&1;
                     if ($15390) {
                      label = 2099;
                      break L1;
                     }
                     $15391 = (($15388) + 8|0);
                     HEAPF64[$15391>>3] = $15387;
                     $15392 = (($4) + 536|0);
                     $15393 = HEAP8[$15392>>0]|0;
                     __THREW__ = 0;
                     $15394 = (invoke_iii(381,($vinfos248|0),0)|0);
                     $15395 = __THREW__; __THREW__ = 0;
                     $15396 = $15395&1;
                     if ($15396) {
                      label = 2099;
                      break L1;
                     }
                     $15397 = (($15394) + 19|0);
                     HEAP8[$15397>>0] = $15393;
                     $15398 = (($4) + 536|0);
                     $15399 = (($15398) + 1|0);
                     $15400 = HEAP8[$15399>>0]|0;
                     __THREW__ = 0;
                     $15401 = (invoke_iii(381,($vinfos248|0),0)|0);
                     $15402 = __THREW__; __THREW__ = 0;
                     $15403 = $15402&1;
                     if ($15403) {
                      label = 2099;
                      break L1;
                     }
                     $15404 = (($15401) + 19|0);
                     $15405 = (($15404) + 1|0);
                     HEAP8[$15405>>0] = $15400;
                     $15406 = (($4) + 538|0);
                     $15407 = HEAP8[$15406>>0]|0;
                     __THREW__ = 0;
                     $15408 = (invoke_iii(381,($vinfos248|0),0)|0);
                     $15409 = __THREW__; __THREW__ = 0;
                     $15410 = $15409&1;
                     if ($15410) {
                      label = 2099;
                      break L1;
                     }
                     $15411 = (($15408) + 18|0);
                     HEAP8[$15411>>0] = $15407;
                     __THREW__ = 0;
                     $15412 = (invoke_iii(381,($vinfos248|0),1)|0);
                     $15413 = __THREW__; __THREW__ = 0;
                     $15414 = $15413&1;
                     if ($15414) {
                      label = 2099;
                      break L1;
                     }
                     $15415 = (($15412) + 17|0);
                     HEAP8[$15415>>0] = 1;
                     $15416 = (($4) + 40|0);
                     $15417 = +HEAPF64[$15416>>3];
                     __THREW__ = 0;
                     $15418 = (invoke_iii(381,($vinfos248|0),1)|0);
                     $15419 = __THREW__; __THREW__ = 0;
                     $15420 = $15419&1;
                     if ($15420) {
                      label = 2099;
                      break L1;
                     }
                     $15421 = (($15418) + 8|0);
                     HEAPF64[$15421>>3] = $15417;
                     $15422 = (($4) + 539|0);
                     $15423 = HEAP8[$15422>>0]|0;
                     __THREW__ = 0;
                     $15424 = (invoke_iii(381,($vinfos248|0),1)|0);
                     $15425 = __THREW__; __THREW__ = 0;
                     $15426 = $15425&1;
                     if ($15426) {
                      label = 2099;
                      break L1;
                     }
                     $15427 = (($15424) + 19|0);
                     HEAP8[$15427>>0] = $15423;
                     $15428 = (($4) + 539|0);
                     $15429 = (($15428) + 1|0);
                     $15430 = HEAP8[$15429>>0]|0;
                     __THREW__ = 0;
                     $15431 = (invoke_iii(381,($vinfos248|0),1)|0);
                     $15432 = __THREW__; __THREW__ = 0;
                     $15433 = $15432&1;
                     if ($15433) {
                      label = 2099;
                      break L1;
                     }
                     $15434 = (($15431) + 19|0);
                     $15435 = (($15434) + 1|0);
                     HEAP8[$15435>>0] = $15430;
                     $15436 = (($4) + 541|0);
                     $15437 = HEAP8[$15436>>0]|0;
                     __THREW__ = 0;
                     $15438 = (invoke_iii(381,($vinfos248|0),1)|0);
                     $15439 = __THREW__; __THREW__ = 0;
                     $15440 = $15439&1;
                     if ($15440) {
                      label = 2099;
                      break L1;
                     }
                     $15441 = (($15438) + 18|0);
                     HEAP8[$15441>>0] = $15437;
                     __THREW__ = 0;
                     $15442 = (invoke_iii(381,($vinfos248|0),2)|0);
                     $15443 = __THREW__; __THREW__ = 0;
                     $15444 = $15443&1;
                     if ($15444) {
                      label = 2099;
                      break L1;
                     }
                     $15445 = (($15442) + 17|0);
                     HEAP8[$15445>>0] = 1;
                     $15446 = (($4) + 80|0);
                     $15447 = +HEAPF64[$15446>>3];
                     __THREW__ = 0;
                     $15448 = (invoke_iii(381,($vinfos248|0),2)|0);
                     $15449 = __THREW__; __THREW__ = 0;
                     $15450 = $15449&1;
                     if ($15450) {
                      label = 2099;
                      break L1;
                     }
                     $15451 = (($15448) + 8|0);
                     HEAPF64[$15451>>3] = $15447;
                     $15452 = (($4) + 542|0);
                     $15453 = HEAP8[$15452>>0]|0;
                     __THREW__ = 0;
                     $15454 = (invoke_iii(381,($vinfos248|0),2)|0);
                     $15455 = __THREW__; __THREW__ = 0;
                     $15456 = $15455&1;
                     if ($15456) {
                      label = 2099;
                      break L1;
                     }
                     $15457 = (($15454) + 19|0);
                     HEAP8[$15457>>0] = $15453;
                     $15458 = (($4) + 542|0);
                     $15459 = (($15458) + 1|0);
                     $15460 = HEAP8[$15459>>0]|0;
                     __THREW__ = 0;
                     $15461 = (invoke_iii(381,($vinfos248|0),2)|0);
                     $15462 = __THREW__; __THREW__ = 0;
                     $15463 = $15462&1;
                     if ($15463) {
                      label = 2099;
                      break L1;
                     }
                     $15464 = (($15461) + 19|0);
                     $15465 = (($15464) + 1|0);
                     HEAP8[$15465>>0] = $15460;
                     $15466 = (($4) + 544|0);
                     $15467 = HEAP8[$15466>>0]|0;
                     __THREW__ = 0;
                     $15468 = (invoke_iii(381,($vinfos248|0),2)|0);
                     $15469 = __THREW__; __THREW__ = 0;
                     $15470 = $15469&1;
                     if ($15470) {
                      label = 2099;
                      break L1;
                     }
                     $15471 = (($15468) + 18|0);
                     HEAP8[$15471>>0] = $15467;
                     __THREW__ = 0;
                     $15472 = (invoke_iii(381,($vinfos248|0),3)|0);
                     $15473 = __THREW__; __THREW__ = 0;
                     $15474 = $15473&1;
                     if ($15474) {
                      label = 2099;
                      break L1;
                     }
                     $15475 = (($15472) + 17|0);
                     HEAP8[$15475>>0] = 1;
                     $15476 = (($4) + 120|0);
                     $15477 = +HEAPF64[$15476>>3];
                     __THREW__ = 0;
                     $15478 = (invoke_iii(381,($vinfos248|0),3)|0);
                     $15479 = __THREW__; __THREW__ = 0;
                     $15480 = $15479&1;
                     if ($15480) {
                      label = 2099;
                      break L1;
                     }
                     $15481 = (($15478) + 8|0);
                     HEAPF64[$15481>>3] = $15477;
                     $15482 = (($4) + 545|0);
                     $15483 = HEAP8[$15482>>0]|0;
                     __THREW__ = 0;
                     $15484 = (invoke_iii(381,($vinfos248|0),3)|0);
                     $15485 = __THREW__; __THREW__ = 0;
                     $15486 = $15485&1;
                     if ($15486) {
                      label = 2099;
                      break L1;
                     }
                     $15487 = (($15484) + 19|0);
                     HEAP8[$15487>>0] = $15483;
                     $15488 = (($4) + 545|0);
                     $15489 = (($15488) + 1|0);
                     $15490 = HEAP8[$15489>>0]|0;
                     __THREW__ = 0;
                     $15491 = (invoke_iii(381,($vinfos248|0),3)|0);
                     $15492 = __THREW__; __THREW__ = 0;
                     $15493 = $15492&1;
                     if ($15493) {
                      label = 2099;
                      break L1;
                     }
                     $15494 = (($15491) + 19|0);
                     $15495 = (($15494) + 1|0);
                     HEAP8[$15495>>0] = $15490;
                     $15496 = (($4) + 547|0);
                     $15497 = HEAP8[$15496>>0]|0;
                     __THREW__ = 0;
                     $15498 = (invoke_iii(381,($vinfos248|0),3)|0);
                     $15499 = __THREW__; __THREW__ = 0;
                     $15500 = $15499&1;
                     if ($15500) {
                      label = 2099;
                      break L1;
                     }
                     $15501 = (($15498) + 18|0);
                     HEAP8[$15501>>0] = $15497;
                     __THREW__ = 0;
                     $15502 = (invoke_iii(381,($vinfos248|0),4)|0);
                     $15503 = __THREW__; __THREW__ = 0;
                     $15504 = $15503&1;
                     if ($15504) {
                      label = 2099;
                      break L1;
                     }
                     $15505 = (($15502) + 17|0);
                     HEAP8[$15505>>0] = 1;
                     $15506 = (($4) + 160|0);
                     $15507 = +HEAPF64[$15506>>3];
                     __THREW__ = 0;
                     $15508 = (invoke_iii(381,($vinfos248|0),4)|0);
                     $15509 = __THREW__; __THREW__ = 0;
                     $15510 = $15509&1;
                     if ($15510) {
                      label = 2099;
                      break L1;
                     }
                     $15511 = (($15508) + 8|0);
                     HEAPF64[$15511>>3] = $15507;
                     $15512 = (($4) + 548|0);
                     $15513 = HEAP8[$15512>>0]|0;
                     __THREW__ = 0;
                     $15514 = (invoke_iii(381,($vinfos248|0),4)|0);
                     $15515 = __THREW__; __THREW__ = 0;
                     $15516 = $15515&1;
                     if ($15516) {
                      label = 2099;
                      break L1;
                     }
                     $15517 = (($15514) + 19|0);
                     HEAP8[$15517>>0] = $15513;
                     $15518 = (($4) + 548|0);
                     $15519 = (($15518) + 1|0);
                     $15520 = HEAP8[$15519>>0]|0;
                     __THREW__ = 0;
                     $15521 = (invoke_iii(381,($vinfos248|0),4)|0);
                     $15522 = __THREW__; __THREW__ = 0;
                     $15523 = $15522&1;
                     if ($15523) {
                      label = 2099;
                      break L1;
                     }
                     $15524 = (($15521) + 19|0);
                     $15525 = (($15524) + 1|0);
                     HEAP8[$15525>>0] = $15520;
                     $15526 = (($4) + 550|0);
                     $15527 = HEAP8[$15526>>0]|0;
                     __THREW__ = 0;
                     $15528 = (invoke_iii(381,($vinfos248|0),4)|0);
                     $15529 = __THREW__; __THREW__ = 0;
                     $15530 = $15529&1;
                     if ($15530) {
                      label = 2099;
                      break L1;
                     }
                     $15531 = (($15528) + 18|0);
                     HEAP8[$15531>>0] = $15527;
                     __THREW__ = 0;
                     $15532 = (invoke_iii(381,($vinfos248|0),5)|0);
                     $15533 = __THREW__; __THREW__ = 0;
                     $15534 = $15533&1;
                     if ($15534) {
                      label = 2099;
                      break L1;
                     }
                     $15535 = (($15532) + 17|0);
                     HEAP8[$15535>>0] = 1;
                     $15536 = (($4) + 200|0);
                     $15537 = +HEAPF64[$15536>>3];
                     __THREW__ = 0;
                     $15538 = (invoke_iii(381,($vinfos248|0),5)|0);
                     $15539 = __THREW__; __THREW__ = 0;
                     $15540 = $15539&1;
                     if ($15540) {
                      label = 2099;
                      break L1;
                     }
                     $15541 = (($15538) + 8|0);
                     HEAPF64[$15541>>3] = $15537;
                     $15542 = (($4) + 551|0);
                     $15543 = HEAP8[$15542>>0]|0;
                     __THREW__ = 0;
                     $15544 = (invoke_iii(381,($vinfos248|0),5)|0);
                     $15545 = __THREW__; __THREW__ = 0;
                     $15546 = $15545&1;
                     if ($15546) {
                      label = 2099;
                      break L1;
                     }
                     $15547 = (($15544) + 19|0);
                     HEAP8[$15547>>0] = $15543;
                     $15548 = (($4) + 551|0);
                     $15549 = (($15548) + 1|0);
                     $15550 = HEAP8[$15549>>0]|0;
                     __THREW__ = 0;
                     $15551 = (invoke_iii(381,($vinfos248|0),5)|0);
                     $15552 = __THREW__; __THREW__ = 0;
                     $15553 = $15552&1;
                     if ($15553) {
                      label = 2099;
                      break L1;
                     }
                     $15554 = (($15551) + 19|0);
                     $15555 = (($15554) + 1|0);
                     HEAP8[$15555>>0] = $15550;
                     $15556 = (($4) + 553|0);
                     $15557 = HEAP8[$15556>>0]|0;
                     __THREW__ = 0;
                     $15558 = (invoke_iii(381,($vinfos248|0),5)|0);
                     $15559 = __THREW__; __THREW__ = 0;
                     $15560 = $15559&1;
                     if ($15560) {
                      label = 2099;
                      break L1;
                     }
                     $15561 = (($15558) + 18|0);
                     HEAP8[$15561>>0] = $15557;
                     __THREW__ = 0;
                     invoke_vii(382,($vfree249|0),0);
                     $15562 = __THREW__; __THREW__ = 0;
                     $15563 = $15562&1;
                     if ($15563) {
                      label = 2099;
                      break L1;
                     }
                     $15564 = $1;
                     $15565 = HEAP32[$15564>>2]|0;
                     $15566 = (($15565) + 8|0);
                     $15567 = HEAP32[$15566>>2]|0;
                     __THREW__ = 0;
                     (invoke_iiii($15567|0,($15564|0),($vinfos248|0),($vfree249|0))|0);
                     $15568 = __THREW__; __THREW__ = 0;
                     $15569 = $15568&1;
                     if ($15569) {
                      label = 2100;
                      break L1;
                     }
                     __THREW__ = 0;
                     invoke_vi(366,($vfree249|0));
                     $15570 = __THREW__; __THREW__ = 0;
                     $15571 = $15570&1;
                     if ($15571) {
                      label = 2099;
                      break L1;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos248);
                     break L180;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $15572 = $ij5245;
                 $15573 = (($15572) + 1)|0;
                 $ij5245 = $15573;
                }
               }
              } while(0);
              if ((label|0) == 1252) {
               label = 0;
               $9693 = (($4) + 8|0);
               $9694 = +HEAPF64[$9693>>3];
               $9695 = 1.0 * $9694;
               $x350 = $9695;
               $9696 = (($4) + 344|0);
               $9697 = +HEAPF64[$9696>>3];
               $9698 = (($4) + 16|0);
               $9699 = +HEAPF64[$9698>>3];
               $9700 = $9697 * $9699;
               $x351 = $9700;
               $9701 = (($4) + 320|0);
               $9702 = +HEAPF64[$9701>>3];
               $9703 = (($4) + 16|0);
               $9704 = +HEAPF64[$9703>>3];
               $9705 = $9702 * $9704;
               $x352 = $9705;
               $9706 = (($4) + 88|0);
               $9707 = +HEAPF64[$9706>>3];
               $9708 = 1.0 * $9707;
               $x353 = $9708;
               $9709 = (($4) + 48|0);
               $9710 = +HEAPF64[$9709>>3];
               $9711 = (($4) + 96|0);
               $9712 = +HEAPF64[$9711>>3];
               $9713 = $9710 * $9712;
               $x354 = $9713;
               $9714 = (($4) + 368|0);
               $9715 = +HEAPF64[$9714>>3];
               $9716 = (($4) + 16|0);
               $9717 = +HEAPF64[$9716>>3];
               $9718 = $9715 * $9717;
               $x355 = $9718;
               $9719 = (($4) + 88|0);
               $9720 = +HEAPF64[$9719>>3];
               $9721 = (($4) + 56|0);
               $9722 = +HEAPF64[$9721>>3];
               $9723 = $9720 * $9722;
               $9724 = $x354;
               $9725 = $9723 + $9724;
               $x356 = $9725;
               $9726 = $x116;
               $x357 = $9726;
               $9727 = (($4) + 16|0);
               $9728 = +HEAPF64[$9727>>3];
               $9729 = $x357;
               $9730 = $9728 * $9729;
               $x358 = $9730;
               $9731 = (($4) + 8|0);
               $9732 = +HEAPF64[$9731>>3];
               $9733 = $x356;
               $9734 = $9732 * $9733;
               $x359 = $9734;
               $9735 = (($4) + 8|0);
               $9736 = +HEAPF64[$9735>>3];
               $9737 = $x357;
               $9738 = $9736 * $9737;
               $x360 = $9738;
               $9739 = $x120;
               $x361 = $9739;
               $9740 = $x352;
               $9741 = $x356;
               $9742 = $9740 * $9741;
               $9743 = (($4) + 248|0);
               $9744 = +HEAPF64[$9743>>3];
               $9745 = $x359;
               $9746 = $9744 * $9745;
               $9747 = $9742 + $9746;
               $9748 = (($4) + 392|0);
               $9749 = +HEAPF64[$9748>>3];
               $9750 = $x357;
               $9751 = $9749 * $9750;
               $9752 = $9747 + $9751;
               $9753 = (($4) + 240|0);
               HEAPF64[$9753>>3] = $9752;
               $9754 = (($4) + 416|0);
               $9755 = +HEAPF64[$9754>>3];
               $9756 = $x357;
               $9757 = $9755 * $9756;
               $9758 = (($4) + 272|0);
               $9759 = +HEAPF64[$9758>>3];
               $9760 = $x359;
               $9761 = $9759 * $9760;
               $9762 = $9757 + $9761;
               $9763 = $x351;
               $9764 = $x356;
               $9765 = $9763 * $9764;
               $9766 = $9762 + $9765;
               $9767 = (($4) + 264|0);
               HEAPF64[$9767>>3] = $9766;
               $9768 = $x355;
               $9769 = $x356;
               $9770 = $9768 * $9769;
               $9771 = (($4) + 440|0);
               $9772 = +HEAPF64[$9771>>3];
               $9773 = $x357;
               $9774 = $9772 * $9773;
               $9775 = $9770 + $9774;
               $9776 = (($4) + 296|0);
               $9777 = +HEAPF64[$9776>>3];
               $9778 = $x359;
               $9779 = $9777 * $9778;
               $9780 = $9775 + $9779;
               $9781 = (($4) + 288|0);
               HEAPF64[$9781>>3] = $9780;
               $9782 = (($4) + 248|0);
               $9783 = +HEAPF64[$9782>>3];
               $9784 = (($4) + 16|0);
               $9785 = +HEAPF64[$9784>>3];
               $9786 = $9783 * $9785;
               $9787 = (($4) + 320|0);
               $9788 = +HEAPF64[$9787>>3];
               $9789 = -1.0 * $9788;
               $9790 = $x350;
               $9791 = $9789 * $9790;
               $9792 = $9786 + $9791;
               $9793 = (($4) + 312|0);
               HEAPF64[$9793>>3] = $9792;
               $9794 = (($4) + 344|0);
               $9795 = +HEAPF64[$9794>>3];
               $9796 = -1.0 * $9795;
               $9797 = $x350;
               $9798 = $9796 * $9797;
               $9799 = (($4) + 272|0);
               $9800 = +HEAPF64[$9799>>3];
               $9801 = (($4) + 16|0);
               $9802 = +HEAPF64[$9801>>3];
               $9803 = $9800 * $9802;
               $9804 = $9798 + $9803;
               $9805 = (($4) + 336|0);
               HEAPF64[$9805>>3] = $9804;
               $9806 = (($4) + 368|0);
               $9807 = +HEAPF64[$9806>>3];
               $9808 = -1.0 * $9807;
               $9809 = $x350;
               $9810 = $9808 * $9809;
               $9811 = (($4) + 296|0);
               $9812 = +HEAPF64[$9811>>3];
               $9813 = (($4) + 16|0);
               $9814 = +HEAPF64[$9813>>3];
               $9815 = $9812 * $9814;
               $9816 = $9810 + $9815;
               $9817 = (($4) + 360|0);
               HEAPF64[$9817>>3] = $9816;
               $9818 = (($4) + 392|0);
               $9819 = +HEAPF64[$9818>>3];
               $9820 = $x361;
               $9821 = $9819 * $9820;
               $9822 = (($4) + 248|0);
               $9823 = +HEAPF64[$9822>>3];
               $9824 = $x360;
               $9825 = $9823 * $9824;
               $9826 = $9821 + $9825;
               $9827 = $x352;
               $9828 = $x357;
               $9829 = $9827 * $9828;
               $9830 = $9826 + $9829;
               $9831 = (($4) + 384|0);
               HEAPF64[$9831>>3] = $9830;
               $9832 = (($4) + 272|0);
               $9833 = +HEAPF64[$9832>>3];
               $9834 = $x360;
               $9835 = $9833 * $9834;
               $9836 = $x351;
               $9837 = $x357;
               $9838 = $9836 * $9837;
               $9839 = $9835 + $9838;
               $9840 = (($4) + 416|0);
               $9841 = +HEAPF64[$9840>>3];
               $9842 = $x361;
               $9843 = $9841 * $9842;
               $9844 = $9839 + $9843;
               $9845 = (($4) + 408|0);
               HEAPF64[$9845>>3] = $9844;
               $9846 = $x355;
               $9847 = $x357;
               $9848 = $9846 * $9847;
               $9849 = (($4) + 440|0);
               $9850 = +HEAPF64[$9849>>3];
               $9851 = $x361;
               $9852 = $9850 * $9851;
               $9853 = $9848 + $9852;
               $9854 = (($4) + 296|0);
               $9855 = +HEAPF64[$9854>>3];
               $9856 = $x360;
               $9857 = $9855 * $9856;
               $9858 = $9853 + $9857;
               $9859 = (($4) + 432|0);
               HEAPF64[$9859>>3] = $9858;
               $9860 = (($4) + 128|0);
               $9861 = +HEAPF64[$9860>>3];
               HEAPF64[$j5eval149>>3] = $9861;
               $9862 = (($4) + 168|0);
               $9863 = +HEAPF64[$9862>>3];
               $9864 = (($j5eval149) + 8|0);
               HEAPF64[$9864>>3] = $9863;
               $9865 = (($4) + 176|0);
               $9866 = +HEAPF64[$9865>>3];
               $9867 = (($j5eval149) + 16|0);
               HEAPF64[$9867>>3] = $9866;
               $9868 = +HEAPF64[$j5eval149>>3];
               $9869 = (+__Z5IKabsd($9868));
               $9870 = $9869 < 9.9999999999999995E-7;
               do {
                if ($9870) {
                 label = 1255;
                } else {
                 $9871 = (($j5eval149) + 8|0);
                 $9872 = +HEAPF64[$9871>>3];
                 $9873 = (+__Z5IKabsd($9872));
                 $9874 = $9873 < 9.9999999999999995E-7;
                 if ($9874) {
                  label = 1255;
                  break;
                 }
                 $9875 = (($j5eval149) + 16|0);
                 $9876 = +HEAPF64[$9875>>3];
                 $9877 = (+__Z5IKabsd($9876));
                 $9878 = $9877 < 9.9999999999999995E-7;
                 if ($9878) {
                  label = 1255;
                  break;
                 }
                 ;HEAP8[$j5valid235+0>>0]=0|0;
                 $14349 = (($4) + 553|0);
                 HEAP8[$14349>>0] = 1;
                 $14350 = (($4) + 176|0);
                 $14351 = +HEAPF64[$14350>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x438,$14351,-1);
                 $14352 = (($x438) + 8|0);
                 $14353 = HEAP8[$14352>>0]|0;
                 $14354 = $14353&1;
                 if (!($14354)) {
                  break L49;
                 }
                 $14355 = +HEAPF64[$x438>>3];
                 $x437 = $14355;
                 $14356 = (($4) + 128|0);
                 $14357 = +HEAPF64[$14356>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x439,$14357,-1);
                 $14358 = (($x439) + 8|0);
                 $14359 = HEAP8[$14358>>0]|0;
                 $14360 = $14359&1;
                 if (!($14360)) {
                  break L49;
                 }
                 $14361 = (($4) + 168|0);
                 $14362 = +HEAPF64[$14361>>3];
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x440,$14362,-1);
                 $14363 = (($x440) + 8|0);
                 $14364 = HEAP8[$14363>>0]|0;
                 $14365 = $14364&1;
                 if (!($14365)) {
                  break L49;
                 }
                 $14366 = $x437;
                 $14367 = +HEAPF64[$x439>>3];
                 $14368 = $14366 * $14367;
                 $14369 = +HEAPF64[$x440>>3];
                 $14370 = $14368 * $14369;
                 $14371 = (($4) + 384|0);
                 $14372 = +HEAPF64[$14371>>3];
                 $14373 = (($4) + 136|0);
                 $14374 = +HEAPF64[$14373>>3];
                 $14375 = $14372 * $14374;
                 $14376 = (($4) + 264|0);
                 $14377 = +HEAPF64[$14376>>3];
                 $14378 = -1.0 * $14377;
                 $14379 = (($4) + 176|0);
                 $14380 = +HEAPF64[$14379>>3];
                 $14381 = $14378 * $14380;
                 $14382 = $14375 + $14381;
                 $14383 = $14370 * $14382;
                 $14384 = (+__Z5IKabsd($14383));
                 $14385 = $14384 < 1.9999999999999999E-6;
                 do {
                  if ($14385) {
                   $14386 = (($4) + 384|0);
                   $14387 = +HEAPF64[$14386>>3];
                   $14388 = -1.0 * $14387;
                   $14389 = $x437;
                   $14390 = $14388 * $14389;
                   $14391 = (+__Z5IKabsd($14390));
                   $14392 = $14391 < 1.9999999999999999E-6;
                   if (!($14392)) {
                    break;
                   }
                   $14393 = $x437;
                   $14394 = +HEAPF64[$x439>>3];
                   $14395 = $14393 * $14394;
                   $14396 = +HEAPF64[$x440>>3];
                   $14397 = $14395 * $14396;
                   $14398 = (($4) + 384|0);
                   $14399 = +HEAPF64[$14398>>3];
                   $14400 = (($4) + 136|0);
                   $14401 = +HEAPF64[$14400>>3];
                   $14402 = $14399 * $14401;
                   $14403 = (($4) + 264|0);
                   $14404 = +HEAPF64[$14403>>3];
                   $14405 = -1.0 * $14404;
                   $14406 = (($4) + 176|0);
                   $14407 = +HEAPF64[$14406>>3];
                   $14408 = $14405 * $14407;
                   $14409 = $14402 + $14408;
                   $14410 = $14397 * $14409;
                   $14411 = (+__Z5IKsqrd($14410));
                   $14412 = (($4) + 384|0);
                   $14413 = +HEAPF64[$14412>>3];
                   $14414 = -1.0 * $14413;
                   $14415 = $x437;
                   $14416 = $14414 * $14415;
                   $14417 = (+__Z5IKsqrd($14416));
                   $14418 = $14411 + $14417;
                   $14419 = $14418 - 1.0;
                   $14420 = (+__Z5IKabsd($14419));
                   $14421 = $14420 <= 1.9999999999999999E-6;
                   if (!($14421)) {
                    break;
                   }
                   break L49;
                  }
                 } while(0);
                 $14422 = $x437;
                 $14423 = +HEAPF64[$x439>>3];
                 $14424 = $14422 * $14423;
                 $14425 = +HEAPF64[$x440>>3];
                 $14426 = $14424 * $14425;
                 $14427 = (($4) + 384|0);
                 $14428 = +HEAPF64[$14427>>3];
                 $14429 = (($4) + 136|0);
                 $14430 = +HEAPF64[$14429>>3];
                 $14431 = $14428 * $14430;
                 $14432 = (($4) + 264|0);
                 $14433 = +HEAPF64[$14432>>3];
                 $14434 = -1.0 * $14433;
                 $14435 = (($4) + 176|0);
                 $14436 = +HEAPF64[$14435>>3];
                 $14437 = $14434 * $14436;
                 $14438 = $14431 + $14437;
                 $14439 = $14426 * $14438;
                 $14440 = (($4) + 384|0);
                 $14441 = +HEAPF64[$14440>>3];
                 $14442 = -1.0 * $14441;
                 $14443 = $x437;
                 $14444 = $14442 * $14443;
                 $14445 = (+__Z7IKatan2dd($14439,$14444));
                 HEAPF64[$j5array232>>3] = $14445;
                 $14446 = +HEAPF64[$j5array232>>3];
                 $14447 = (+__Z5IKsind($14446));
                 HEAPF64[$sj5array234>>3] = $14447;
                 $14448 = +HEAPF64[$j5array232>>3];
                 $14449 = (+__Z5IKcosd($14448));
                 HEAPF64[$cj5array233>>3] = $14449;
                 $14450 = +HEAPF64[$j5array232>>3];
                 $14451 = $14450 > 3.14159265358979;
                 if ($14451) {
                  $14452 = +HEAPF64[$j5array232>>3];
                  $14453 = $14452 - 6.2831853071795898;
                  HEAPF64[$j5array232>>3] = $14453;
                 } else {
                  $14454 = +HEAPF64[$j5array232>>3];
                  $14455 = $14454 < -3.14159265358979;
                  if ($14455) {
                   $14456 = +HEAPF64[$j5array232>>3];
                   $14457 = $14456 + 6.2831853071795898;
                   HEAPF64[$j5array232>>3] = $14457;
                  }
                 }
                 HEAP8[$j5valid235>>0] = 1;
                 $ij5236 = 0;
                 while(1) {
                  $14458 = $ij5236;
                  $14459 = ($14458|0)<(1);
                  if (!($14459)) {
                   break;
                  }
                  $14460 = $ij5236;
                  $14461 = (($j5valid235) + ($14460)|0);
                  $14462 = HEAP8[$14461>>0]|0;
                  $14463 = $14462&1;
                  L273: do {
                   if ($14463) {
                    $14464 = $ij5236;
                    $14465 = $14464&255;
                    $14466 = (($4) + 551|0);
                    HEAP8[$14466>>0] = $14465;
                    $14467 = (($4) + 551|0);
                    $14468 = (($14467) + 1|0);
                    HEAP8[$14468>>0] = -1;
                    $14469 = $ij5236;
                    $14470 = (($14469) + 1)|0;
                    $iij5237 = $14470;
                    L276: while(1) {
                     $14471 = $iij5237;
                     $14472 = ($14471|0)<(1);
                     if (!($14472)) {
                      break;
                     }
                     $14473 = $iij5237;
                     $14474 = (($j5valid235) + ($14473)|0);
                     $14475 = HEAP8[$14474>>0]|0;
                     $14476 = $14475&1;
                     do {
                      if ($14476) {
                       $14477 = $ij5236;
                       $14478 = (($cj5array233) + ($14477<<3)|0);
                       $14479 = +HEAPF64[$14478>>3];
                       $14480 = $iij5237;
                       $14481 = (($cj5array233) + ($14480<<3)|0);
                       $14482 = +HEAPF64[$14481>>3];
                       $14483 = $14479 - $14482;
                       $14484 = (+__Z5IKabsd($14483));
                       $14485 = $14484 < 9.9999999999999995E-7;
                       if (!($14485)) {
                        break;
                       }
                       $14486 = $ij5236;
                       $14487 = (($sj5array234) + ($14486<<3)|0);
                       $14488 = +HEAPF64[$14487>>3];
                       $14489 = $iij5237;
                       $14490 = (($sj5array234) + ($14489<<3)|0);
                       $14491 = +HEAPF64[$14490>>3];
                       $14492 = $14488 - $14491;
                       $14493 = (+__Z5IKabsd($14492));
                       $14494 = $14493 < 9.9999999999999995E-7;
                       if ($14494) {
                        label = 1968;
                        break L276;
                       }
                      }
                     } while(0);
                     $14501 = $iij5237;
                     $14502 = (($14501) + 1)|0;
                     $iij5237 = $14502;
                    }
                    if ((label|0) == 1968) {
                     label = 0;
                     $14495 = $iij5237;
                     $14496 = (($j5valid235) + ($14495)|0);
                     HEAP8[$14496>>0] = 0;
                     $14497 = $iij5237;
                     $14498 = $14497&255;
                     $14499 = (($4) + 551|0);
                     $14500 = (($14499) + 1|0);
                     HEAP8[$14500>>0] = $14498;
                    }
                    $14503 = $ij5236;
                    $14504 = (($j5array232) + ($14503<<3)|0);
                    $14505 = +HEAPF64[$14504>>3];
                    $14506 = (($4) + 200|0);
                    HEAPF64[$14506>>3] = $14505;
                    $14507 = $ij5236;
                    $14508 = (($cj5array233) + ($14507<<3)|0);
                    $14509 = +HEAPF64[$14508>>3];
                    $14510 = (($4) + 208|0);
                    HEAPF64[$14510>>3] = $14509;
                    $14511 = $ij5236;
                    $14512 = (($sj5array234) + ($14511<<3)|0);
                    $14513 = +HEAPF64[$14512>>3];
                    $14514 = (($4) + 216|0);
                    HEAPF64[$14514>>3] = $14513;
                    $14515 = (($4) + 200|0);
                    $14516 = +HEAPF64[$14515>>3];
                    $14517 = (+__Z5IKsind($14516));
                    $x441 = $14517;
                    $14518 = (($4) + 200|0);
                    $14519 = +HEAPF64[$14518>>3];
                    $14520 = (+__Z5IKcosd($14519));
                    $x442 = $14520;
                    $14521 = (($4) + 128|0);
                    $14522 = +HEAPF64[$14521>>3];
                    $14523 = (($4) + 240|0);
                    $14524 = +HEAPF64[$14523>>3];
                    $14525 = $14522 * $14524;
                    $x443 = $14525;
                    $14526 = (($4) + 128|0);
                    $14527 = +HEAPF64[$14526>>3];
                    $14528 = (($4) + 168|0);
                    $14529 = +HEAPF64[$14528>>3];
                    $14530 = $14527 * $14529;
                    $x444 = $14530;
                    $14531 = (($4) + 136|0);
                    $14532 = +HEAPF64[$14531>>3];
                    $14533 = 1.0 * $14532;
                    $x445 = $14533;
                    $14534 = $x441;
                    $14535 = 1.0 * $14534;
                    $x446 = $14535;
                    $14536 = (($4) + 136|0);
                    $14537 = +HEAPF64[$14536>>3];
                    $14538 = $x441;
                    $14539 = $14537 * $14538;
                    $x447 = $14539;
                    $14540 = $x442;
                    $14541 = 1.0 * $14540;
                    $x448 = $14541;
                    $14542 = (($4) + 176|0);
                    $14543 = +HEAPF64[$14542>>3];
                    $14544 = $x442;
                    $14545 = $14543 * $14544;
                    $14546 = (($4) + 384|0);
                    $14547 = +HEAPF64[$14546>>3];
                    $14548 = $14545 + $14547;
                    HEAPF64[$evalcond238>>3] = $14548;
                    $14549 = (($4) + 176|0);
                    $14550 = +HEAPF64[$14549>>3];
                    $14551 = -1.0 * $14550;
                    $14552 = $x446;
                    $14553 = $14551 * $14552;
                    $14554 = (($4) + 408|0);
                    $14555 = +HEAPF64[$14554>>3];
                    $14556 = $14553 + $14555;
                    $14557 = (($evalcond238) + 8|0);
                    HEAPF64[$14557>>3] = $14556;
                    $14558 = (($4) + 168|0);
                    $14559 = +HEAPF64[$14558>>3];
                    $14560 = $x441;
                    $14561 = $14559 * $14560;
                    $14562 = (($4) + 336|0);
                    $14563 = +HEAPF64[$14562>>3];
                    $14564 = (($4) + 136|0);
                    $14565 = +HEAPF64[$14564>>3];
                    $14566 = $14563 * $14565;
                    $14567 = $14561 + $14566;
                    $14568 = (($4) + 128|0);
                    $14569 = +HEAPF64[$14568>>3];
                    $14570 = (($4) + 264|0);
                    $14571 = +HEAPF64[$14570>>3];
                    $14572 = $14569 * $14571;
                    $14573 = $14567 + $14572;
                    $14574 = (($evalcond238) + 16|0);
                    HEAPF64[$14574>>3] = $14573;
                    $14575 = $x446;
                    $14576 = -1.0 * $14575;
                    $14577 = (($4) + 240|0);
                    $14578 = +HEAPF64[$14577>>3];
                    $14579 = -1.0 * $14578;
                    $14580 = $x445;
                    $14581 = $14579 * $14580;
                    $14582 = $14576 + $14581;
                    $14583 = (($4) + 128|0);
                    $14584 = +HEAPF64[$14583>>3];
                    $14585 = (($4) + 312|0);
                    $14586 = +HEAPF64[$14585>>3];
                    $14587 = $14584 * $14586;
                    $14588 = $14582 + $14587;
                    $14589 = (($evalcond238) + 24|0);
                    HEAPF64[$14589>>3] = $14588;
                    $14590 = $x448;
                    $14591 = -1.0 * $14590;
                    $14592 = (($4) + 264|0);
                    $14593 = +HEAPF64[$14592>>3];
                    $14594 = -1.0 * $14593;
                    $14595 = $x445;
                    $14596 = $14594 * $14595;
                    $14597 = $14591 + $14596;
                    $14598 = (($4) + 128|0);
                    $14599 = +HEAPF64[$14598>>3];
                    $14600 = (($4) + 336|0);
                    $14601 = +HEAPF64[$14600>>3];
                    $14602 = $14599 * $14601;
                    $14603 = $14597 + $14602;
                    $14604 = (($evalcond238) + 32|0);
                    HEAPF64[$14604>>3] = $14603;
                    $14605 = $x441;
                    $14606 = $x444;
                    $14607 = $14605 * $14606;
                    $14608 = (($4) + 136|0);
                    $14609 = +HEAPF64[$14608>>3];
                    $14610 = $x442;
                    $14611 = $14609 * $14610;
                    $14612 = $14607 + $14611;
                    $14613 = (($4) + 264|0);
                    $14614 = +HEAPF64[$14613>>3];
                    $14615 = $14612 + $14614;
                    $14616 = (($evalcond238) + 40|0);
                    HEAPF64[$14616>>3] = $14615;
                    $14617 = (($4) + 312|0);
                    $14618 = +HEAPF64[$14617>>3];
                    $14619 = (($4) + 136|0);
                    $14620 = +HEAPF64[$14619>>3];
                    $14621 = $14618 * $14620;
                    $14622 = (($4) + 168|0);
                    $14623 = +HEAPF64[$14622>>3];
                    $14624 = -1.0 * $14623;
                    $14625 = $x448;
                    $14626 = $14624 * $14625;
                    $14627 = $14621 + $14626;
                    $14628 = $x443;
                    $14629 = $14627 + $14628;
                    $14630 = (($evalcond238) + 48|0);
                    HEAPF64[$14630>>3] = $14629;
                    $14631 = $x444;
                    $14632 = -1.0 * $14631;
                    $14633 = $x448;
                    $14634 = $14632 * $14633;
                    $14635 = $x447;
                    $14636 = $14634 + $14635;
                    $14637 = (($4) + 240|0);
                    $14638 = +HEAPF64[$14637>>3];
                    $14639 = $14636 + $14638;
                    $14640 = (($evalcond238) + 56|0);
                    HEAPF64[$14640>>3] = $14639;
                    $14641 = (($4) + 128|0);
                    $14642 = +HEAPF64[$14641>>3];
                    $14643 = -1.0 * $14642;
                    $14644 = $x448;
                    $14645 = $14643 * $14644;
                    $14646 = (($4) + 168|0);
                    $14647 = +HEAPF64[$14646>>3];
                    $14648 = $x447;
                    $14649 = $14647 * $14648;
                    $14650 = $14645 + $14649;
                    $14651 = (($4) + 336|0);
                    $14652 = +HEAPF64[$14651>>3];
                    $14653 = $14650 + $14652;
                    $14654 = (($evalcond238) + 64|0);
                    HEAPF64[$14654>>3] = $14653;
                    $14655 = (($4) + 168|0);
                    $14656 = +HEAPF64[$14655>>3];
                    $14657 = -1.0 * $14656;
                    $14658 = $x442;
                    $14659 = $14657 * $14658;
                    $14660 = $x445;
                    $14661 = $14659 * $14660;
                    $14662 = (($4) + 128|0);
                    $14663 = +HEAPF64[$14662>>3];
                    $14664 = -1.0 * $14663;
                    $14665 = $x446;
                    $14666 = $14664 * $14665;
                    $14667 = $14661 + $14666;
                    $14668 = (($4) + 312|0);
                    $14669 = +HEAPF64[$14668>>3];
                    $14670 = $14667 + $14669;
                    $14671 = (($evalcond238) + 72|0);
                    HEAPF64[$14671>>3] = $14670;
                    $14672 = (($4) + 384|0);
                    $14673 = +HEAPF64[$14672>>3];
                    $14674 = (($4) + 176|0);
                    $14675 = +HEAPF64[$14674>>3];
                    $14676 = $14673 * $14675;
                    $14677 = (($4) + 168|0);
                    $14678 = +HEAPF64[$14677>>3];
                    $14679 = -1.0 * $14678;
                    $14680 = (($4) + 312|0);
                    $14681 = +HEAPF64[$14680>>3];
                    $14682 = $14679 * $14681;
                    $14683 = $x445;
                    $14684 = $14682 * $14683;
                    $14685 = $14676 + $14684;
                    $14686 = (($4) + 168|0);
                    $14687 = +HEAPF64[$14686>>3];
                    $14688 = -1.0 * $14687;
                    $14689 = $x443;
                    $14690 = $14688 * $14689;
                    $14691 = $14685 + $14690;
                    $14692 = $x442;
                    $14693 = $14691 + $14692;
                    $14694 = (($evalcond238) + 80|0);
                    HEAPF64[$14694>>3] = $14693;
                    $14695 = $x446;
                    $14696 = -1.0 * $14695;
                    $14697 = (($4) + 264|0);
                    $14698 = +HEAPF64[$14697>>3];
                    $14699 = -1.0 * $14698;
                    $14700 = $x444;
                    $14701 = $14699 * $14700;
                    $14702 = $14696 + $14701;
                    $14703 = (($4) + 168|0);
                    $14704 = +HEAPF64[$14703>>3];
                    $14705 = -1.0 * $14704;
                    $14706 = (($4) + 336|0);
                    $14707 = +HEAPF64[$14706>>3];
                    $14708 = $14705 * $14707;
                    $14709 = $x445;
                    $14710 = $14708 * $14709;
                    $14711 = $14702 + $14710;
                    $14712 = (($4) + 408|0);
                    $14713 = +HEAPF64[$14712>>3];
                    $14714 = (($4) + 176|0);
                    $14715 = +HEAPF64[$14714>>3];
                    $14716 = $14713 * $14715;
                    $14717 = $14711 + $14716;
                    $14718 = (($evalcond238) + 88|0);
                    HEAPF64[$14718>>3] = $14717;
                    $14719 = +HEAPF64[$evalcond238>>3];
                    $14720 = (+__Z5IKabsd($14719));
                    $14721 = $14720 > 5.0000000000000004E-6;
                    do {
                     if (!($14721)) {
                      $14722 = (($evalcond238) + 8|0);
                      $14723 = +HEAPF64[$14722>>3];
                      $14724 = (+__Z5IKabsd($14723));
                      $14725 = $14724 > 5.0000000000000004E-6;
                      if ($14725) {
                       break;
                      }
                      $14726 = (($evalcond238) + 16|0);
                      $14727 = +HEAPF64[$14726>>3];
                      $14728 = (+__Z5IKabsd($14727));
                      $14729 = $14728 > 5.0000000000000004E-6;
                      if ($14729) {
                       break;
                      }
                      $14730 = (($evalcond238) + 24|0);
                      $14731 = +HEAPF64[$14730>>3];
                      $14732 = (+__Z5IKabsd($14731));
                      $14733 = $14732 > 5.0000000000000004E-6;
                      if ($14733) {
                       break;
                      }
                      $14734 = (($evalcond238) + 32|0);
                      $14735 = +HEAPF64[$14734>>3];
                      $14736 = (+__Z5IKabsd($14735));
                      $14737 = $14736 > 5.0000000000000004E-6;
                      if ($14737) {
                       break;
                      }
                      $14738 = (($evalcond238) + 40|0);
                      $14739 = +HEAPF64[$14738>>3];
                      $14740 = (+__Z5IKabsd($14739));
                      $14741 = $14740 > 5.0000000000000004E-6;
                      if ($14741) {
                       break;
                      }
                      $14742 = (($evalcond238) + 48|0);
                      $14743 = +HEAPF64[$14742>>3];
                      $14744 = (+__Z5IKabsd($14743));
                      $14745 = $14744 > 5.0000000000000004E-6;
                      if ($14745) {
                       break;
                      }
                      $14746 = (($evalcond238) + 56|0);
                      $14747 = +HEAPF64[$14746>>3];
                      $14748 = (+__Z5IKabsd($14747));
                      $14749 = $14748 > 5.0000000000000004E-6;
                      if ($14749) {
                       break;
                      }
                      $14750 = (($evalcond238) + 64|0);
                      $14751 = +HEAPF64[$14750>>3];
                      $14752 = (+__Z5IKabsd($14751));
                      $14753 = $14752 > 5.0000000000000004E-6;
                      if ($14753) {
                       break;
                      }
                      $14754 = (($evalcond238) + 72|0);
                      $14755 = +HEAPF64[$14754>>3];
                      $14756 = (+__Z5IKabsd($14755));
                      $14757 = $14756 > 5.0000000000000004E-6;
                      if ($14757) {
                       break;
                      }
                      $14758 = (($evalcond238) + 80|0);
                      $14759 = +HEAPF64[$14758>>3];
                      $14760 = (+__Z5IKabsd($14759));
                      $14761 = $14760 > 5.0000000000000004E-6;
                      if ($14761) {
                       break;
                      }
                      $14762 = (($evalcond238) + 88|0);
                      $14763 = +HEAPF64[$14762>>3];
                      $14764 = (+__Z5IKabsd($14763));
                      $14765 = $14764 > 5.0000000000000004E-6;
                      if ($14765) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos239,6);
                      __THREW__ = 0;
                      $14766 = (invoke_iii(381,($vinfos239|0),0)|0);
                      $14767 = __THREW__; __THREW__ = 0;
                      $14768 = $14767&1;
                      if ($14768) {
                       label = 2019;
                       break L1;
                      }
                      $14769 = (($14766) + 17|0);
                      HEAP8[$14769>>0] = 1;
                      $14770 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $14771 = (invoke_iii(381,($vinfos239|0),0)|0);
                      $14772 = __THREW__; __THREW__ = 0;
                      $14773 = $14772&1;
                      if ($14773) {
                       label = 2019;
                       break L1;
                      }
                      $14774 = (($14771) + 8|0);
                      HEAPF64[$14774>>3] = $14770;
                      $14775 = (($4) + 536|0);
                      $14776 = HEAP8[$14775>>0]|0;
                      __THREW__ = 0;
                      $14777 = (invoke_iii(381,($vinfos239|0),0)|0);
                      $14778 = __THREW__; __THREW__ = 0;
                      $14779 = $14778&1;
                      if ($14779) {
                       label = 2019;
                       break L1;
                      }
                      $14780 = (($14777) + 19|0);
                      HEAP8[$14780>>0] = $14776;
                      $14781 = (($4) + 536|0);
                      $14782 = (($14781) + 1|0);
                      $14783 = HEAP8[$14782>>0]|0;
                      __THREW__ = 0;
                      $14784 = (invoke_iii(381,($vinfos239|0),0)|0);
                      $14785 = __THREW__; __THREW__ = 0;
                      $14786 = $14785&1;
                      if ($14786) {
                       label = 2019;
                       break L1;
                      }
                      $14787 = (($14784) + 19|0);
                      $14788 = (($14787) + 1|0);
                      HEAP8[$14788>>0] = $14783;
                      $14789 = (($4) + 538|0);
                      $14790 = HEAP8[$14789>>0]|0;
                      __THREW__ = 0;
                      $14791 = (invoke_iii(381,($vinfos239|0),0)|0);
                      $14792 = __THREW__; __THREW__ = 0;
                      $14793 = $14792&1;
                      if ($14793) {
                       label = 2019;
                       break L1;
                      }
                      $14794 = (($14791) + 18|0);
                      HEAP8[$14794>>0] = $14790;
                      __THREW__ = 0;
                      $14795 = (invoke_iii(381,($vinfos239|0),1)|0);
                      $14796 = __THREW__; __THREW__ = 0;
                      $14797 = $14796&1;
                      if ($14797) {
                       label = 2019;
                       break L1;
                      }
                      $14798 = (($14795) + 17|0);
                      HEAP8[$14798>>0] = 1;
                      $14799 = (($4) + 40|0);
                      $14800 = +HEAPF64[$14799>>3];
                      __THREW__ = 0;
                      $14801 = (invoke_iii(381,($vinfos239|0),1)|0);
                      $14802 = __THREW__; __THREW__ = 0;
                      $14803 = $14802&1;
                      if ($14803) {
                       label = 2019;
                       break L1;
                      }
                      $14804 = (($14801) + 8|0);
                      HEAPF64[$14804>>3] = $14800;
                      $14805 = (($4) + 539|0);
                      $14806 = HEAP8[$14805>>0]|0;
                      __THREW__ = 0;
                      $14807 = (invoke_iii(381,($vinfos239|0),1)|0);
                      $14808 = __THREW__; __THREW__ = 0;
                      $14809 = $14808&1;
                      if ($14809) {
                       label = 2019;
                       break L1;
                      }
                      $14810 = (($14807) + 19|0);
                      HEAP8[$14810>>0] = $14806;
                      $14811 = (($4) + 539|0);
                      $14812 = (($14811) + 1|0);
                      $14813 = HEAP8[$14812>>0]|0;
                      __THREW__ = 0;
                      $14814 = (invoke_iii(381,($vinfos239|0),1)|0);
                      $14815 = __THREW__; __THREW__ = 0;
                      $14816 = $14815&1;
                      if ($14816) {
                       label = 2019;
                       break L1;
                      }
                      $14817 = (($14814) + 19|0);
                      $14818 = (($14817) + 1|0);
                      HEAP8[$14818>>0] = $14813;
                      $14819 = (($4) + 541|0);
                      $14820 = HEAP8[$14819>>0]|0;
                      __THREW__ = 0;
                      $14821 = (invoke_iii(381,($vinfos239|0),1)|0);
                      $14822 = __THREW__; __THREW__ = 0;
                      $14823 = $14822&1;
                      if ($14823) {
                       label = 2019;
                       break L1;
                      }
                      $14824 = (($14821) + 18|0);
                      HEAP8[$14824>>0] = $14820;
                      __THREW__ = 0;
                      $14825 = (invoke_iii(381,($vinfos239|0),2)|0);
                      $14826 = __THREW__; __THREW__ = 0;
                      $14827 = $14826&1;
                      if ($14827) {
                       label = 2019;
                       break L1;
                      }
                      $14828 = (($14825) + 17|0);
                      HEAP8[$14828>>0] = 1;
                      $14829 = (($4) + 80|0);
                      $14830 = +HEAPF64[$14829>>3];
                      __THREW__ = 0;
                      $14831 = (invoke_iii(381,($vinfos239|0),2)|0);
                      $14832 = __THREW__; __THREW__ = 0;
                      $14833 = $14832&1;
                      if ($14833) {
                       label = 2019;
                       break L1;
                      }
                      $14834 = (($14831) + 8|0);
                      HEAPF64[$14834>>3] = $14830;
                      $14835 = (($4) + 542|0);
                      $14836 = HEAP8[$14835>>0]|0;
                      __THREW__ = 0;
                      $14837 = (invoke_iii(381,($vinfos239|0),2)|0);
                      $14838 = __THREW__; __THREW__ = 0;
                      $14839 = $14838&1;
                      if ($14839) {
                       label = 2019;
                       break L1;
                      }
                      $14840 = (($14837) + 19|0);
                      HEAP8[$14840>>0] = $14836;
                      $14841 = (($4) + 542|0);
                      $14842 = (($14841) + 1|0);
                      $14843 = HEAP8[$14842>>0]|0;
                      __THREW__ = 0;
                      $14844 = (invoke_iii(381,($vinfos239|0),2)|0);
                      $14845 = __THREW__; __THREW__ = 0;
                      $14846 = $14845&1;
                      if ($14846) {
                       label = 2019;
                       break L1;
                      }
                      $14847 = (($14844) + 19|0);
                      $14848 = (($14847) + 1|0);
                      HEAP8[$14848>>0] = $14843;
                      $14849 = (($4) + 544|0);
                      $14850 = HEAP8[$14849>>0]|0;
                      __THREW__ = 0;
                      $14851 = (invoke_iii(381,($vinfos239|0),2)|0);
                      $14852 = __THREW__; __THREW__ = 0;
                      $14853 = $14852&1;
                      if ($14853) {
                       label = 2019;
                       break L1;
                      }
                      $14854 = (($14851) + 18|0);
                      HEAP8[$14854>>0] = $14850;
                      __THREW__ = 0;
                      $14855 = (invoke_iii(381,($vinfos239|0),3)|0);
                      $14856 = __THREW__; __THREW__ = 0;
                      $14857 = $14856&1;
                      if ($14857) {
                       label = 2019;
                       break L1;
                      }
                      $14858 = (($14855) + 17|0);
                      HEAP8[$14858>>0] = 1;
                      $14859 = (($4) + 120|0);
                      $14860 = +HEAPF64[$14859>>3];
                      __THREW__ = 0;
                      $14861 = (invoke_iii(381,($vinfos239|0),3)|0);
                      $14862 = __THREW__; __THREW__ = 0;
                      $14863 = $14862&1;
                      if ($14863) {
                       label = 2019;
                       break L1;
                      }
                      $14864 = (($14861) + 8|0);
                      HEAPF64[$14864>>3] = $14860;
                      $14865 = (($4) + 545|0);
                      $14866 = HEAP8[$14865>>0]|0;
                      __THREW__ = 0;
                      $14867 = (invoke_iii(381,($vinfos239|0),3)|0);
                      $14868 = __THREW__; __THREW__ = 0;
                      $14869 = $14868&1;
                      if ($14869) {
                       label = 2019;
                       break L1;
                      }
                      $14870 = (($14867) + 19|0);
                      HEAP8[$14870>>0] = $14866;
                      $14871 = (($4) + 545|0);
                      $14872 = (($14871) + 1|0);
                      $14873 = HEAP8[$14872>>0]|0;
                      __THREW__ = 0;
                      $14874 = (invoke_iii(381,($vinfos239|0),3)|0);
                      $14875 = __THREW__; __THREW__ = 0;
                      $14876 = $14875&1;
                      if ($14876) {
                       label = 2019;
                       break L1;
                      }
                      $14877 = (($14874) + 19|0);
                      $14878 = (($14877) + 1|0);
                      HEAP8[$14878>>0] = $14873;
                      $14879 = (($4) + 547|0);
                      $14880 = HEAP8[$14879>>0]|0;
                      __THREW__ = 0;
                      $14881 = (invoke_iii(381,($vinfos239|0),3)|0);
                      $14882 = __THREW__; __THREW__ = 0;
                      $14883 = $14882&1;
                      if ($14883) {
                       label = 2019;
                       break L1;
                      }
                      $14884 = (($14881) + 18|0);
                      HEAP8[$14884>>0] = $14880;
                      __THREW__ = 0;
                      $14885 = (invoke_iii(381,($vinfos239|0),4)|0);
                      $14886 = __THREW__; __THREW__ = 0;
                      $14887 = $14886&1;
                      if ($14887) {
                       label = 2019;
                       break L1;
                      }
                      $14888 = (($14885) + 17|0);
                      HEAP8[$14888>>0] = 1;
                      $14889 = (($4) + 160|0);
                      $14890 = +HEAPF64[$14889>>3];
                      __THREW__ = 0;
                      $14891 = (invoke_iii(381,($vinfos239|0),4)|0);
                      $14892 = __THREW__; __THREW__ = 0;
                      $14893 = $14892&1;
                      if ($14893) {
                       label = 2019;
                       break L1;
                      }
                      $14894 = (($14891) + 8|0);
                      HEAPF64[$14894>>3] = $14890;
                      $14895 = (($4) + 548|0);
                      $14896 = HEAP8[$14895>>0]|0;
                      __THREW__ = 0;
                      $14897 = (invoke_iii(381,($vinfos239|0),4)|0);
                      $14898 = __THREW__; __THREW__ = 0;
                      $14899 = $14898&1;
                      if ($14899) {
                       label = 2019;
                       break L1;
                      }
                      $14900 = (($14897) + 19|0);
                      HEAP8[$14900>>0] = $14896;
                      $14901 = (($4) + 548|0);
                      $14902 = (($14901) + 1|0);
                      $14903 = HEAP8[$14902>>0]|0;
                      __THREW__ = 0;
                      $14904 = (invoke_iii(381,($vinfos239|0),4)|0);
                      $14905 = __THREW__; __THREW__ = 0;
                      $14906 = $14905&1;
                      if ($14906) {
                       label = 2019;
                       break L1;
                      }
                      $14907 = (($14904) + 19|0);
                      $14908 = (($14907) + 1|0);
                      HEAP8[$14908>>0] = $14903;
                      $14909 = (($4) + 550|0);
                      $14910 = HEAP8[$14909>>0]|0;
                      __THREW__ = 0;
                      $14911 = (invoke_iii(381,($vinfos239|0),4)|0);
                      $14912 = __THREW__; __THREW__ = 0;
                      $14913 = $14912&1;
                      if ($14913) {
                       label = 2019;
                       break L1;
                      }
                      $14914 = (($14911) + 18|0);
                      HEAP8[$14914>>0] = $14910;
                      __THREW__ = 0;
                      $14915 = (invoke_iii(381,($vinfos239|0),5)|0);
                      $14916 = __THREW__; __THREW__ = 0;
                      $14917 = $14916&1;
                      if ($14917) {
                       label = 2019;
                       break L1;
                      }
                      $14918 = (($14915) + 17|0);
                      HEAP8[$14918>>0] = 1;
                      $14919 = (($4) + 200|0);
                      $14920 = +HEAPF64[$14919>>3];
                      __THREW__ = 0;
                      $14921 = (invoke_iii(381,($vinfos239|0),5)|0);
                      $14922 = __THREW__; __THREW__ = 0;
                      $14923 = $14922&1;
                      if ($14923) {
                       label = 2019;
                       break L1;
                      }
                      $14924 = (($14921) + 8|0);
                      HEAPF64[$14924>>3] = $14920;
                      $14925 = (($4) + 551|0);
                      $14926 = HEAP8[$14925>>0]|0;
                      __THREW__ = 0;
                      $14927 = (invoke_iii(381,($vinfos239|0),5)|0);
                      $14928 = __THREW__; __THREW__ = 0;
                      $14929 = $14928&1;
                      if ($14929) {
                       label = 2019;
                       break L1;
                      }
                      $14930 = (($14927) + 19|0);
                      HEAP8[$14930>>0] = $14926;
                      $14931 = (($4) + 551|0);
                      $14932 = (($14931) + 1|0);
                      $14933 = HEAP8[$14932>>0]|0;
                      __THREW__ = 0;
                      $14934 = (invoke_iii(381,($vinfos239|0),5)|0);
                      $14935 = __THREW__; __THREW__ = 0;
                      $14936 = $14935&1;
                      if ($14936) {
                       label = 2019;
                       break L1;
                      }
                      $14937 = (($14934) + 19|0);
                      $14938 = (($14937) + 1|0);
                      HEAP8[$14938>>0] = $14933;
                      $14939 = (($4) + 553|0);
                      $14940 = HEAP8[$14939>>0]|0;
                      __THREW__ = 0;
                      $14941 = (invoke_iii(381,($vinfos239|0),5)|0);
                      $14942 = __THREW__; __THREW__ = 0;
                      $14943 = $14942&1;
                      if ($14943) {
                       label = 2019;
                       break L1;
                      }
                      $14944 = (($14941) + 18|0);
                      HEAP8[$14944>>0] = $14940;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree240|0),0);
                      $14945 = __THREW__; __THREW__ = 0;
                      $14946 = $14945&1;
                      if ($14946) {
                       label = 2019;
                       break L1;
                      }
                      $14947 = $1;
                      $14948 = HEAP32[$14947>>2]|0;
                      $14949 = (($14948) + 8|0);
                      $14950 = HEAP32[$14949>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($14950|0,($14947|0),($vinfos239|0),($vfree240|0))|0);
                      $14951 = __THREW__; __THREW__ = 0;
                      $14952 = $14951&1;
                      if ($14952) {
                       label = 2020;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree240|0));
                      $14953 = __THREW__; __THREW__ = 0;
                      $14954 = $14953&1;
                      if ($14954) {
                       label = 2019;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos239);
                      break L273;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $14955 = $ij5236;
                  $14956 = (($14955) + 1)|0;
                  $ij5236 = $14956;
                 }
                }
               } while(0);
               if ((label|0) == 1255) {
                label = 0;
                $bgotonextstatement151 = 1;
                $9879 = (($4) + 432|0);
                $9880 = +HEAPF64[$9879>>3];
                $9881 = (($4) + 168|0);
                $9882 = +HEAPF64[$9881>>3];
                $9883 = -1.0 * $9882;
                $9884 = $9880 + $9883;
                $x362 = $9884;
                $9885 = (($4) + 176|0);
                $9886 = +HEAPF64[$9885>>3];
                $9887 = -1.0 * $9886;
                $9888 = (($4) + 360|0);
                $9889 = +HEAPF64[$9888>>3];
                $9890 = $9887 + $9889;
                $x363 = $9890;
                $9891 = (($4) + 168|0);
                $9892 = +HEAPF64[$9891>>3];
                $9893 = 1.0 * $9892;
                $x364 = $9893;
                $9894 = (($4) + 176|0);
                $9895 = +HEAPF64[$9894>>3];
                $9896 = 1.0 * $9895;
                $x365 = $9896;
                $9897 = (($4) + 120|0);
                $9898 = +HEAPF64[$9897>>3];
                $9899 = -1.5707963267949001 + $9898;
                $9900 = (+__Z5IKabsd($9899));
                $9901 = 3.14159265358979 + $9900;
                $9902 = (+__Z6IKfmoddd($9901,6.2831853071795898));
                $9903 = -3.14159265358979 + $9902;
                HEAPF64[$evalcond150>>3] = $9903;
                $9904 = $x362;
                $9905 = (($evalcond150) + 8|0);
                HEAPF64[$9905>>3] = $9904;
                $9906 = $x362;
                $9907 = (($evalcond150) + 16|0);
                HEAPF64[$9907>>3] = $9906;
                $9908 = (($4) + 288|0);
                $9909 = +HEAPF64[$9908>>3];
                $9910 = (($evalcond150) + 24|0);
                HEAPF64[$9910>>3] = $9909;
                $9911 = $x363;
                $9912 = (($evalcond150) + 32|0);
                HEAPF64[$9912>>3] = $9911;
                $9913 = $x363;
                $9914 = (($evalcond150) + 40|0);
                HEAPF64[$9914>>3] = $9913;
                $9915 = (($4) + 360|0);
                $9916 = +HEAPF64[$9915>>3];
                $9917 = -1.0 * $9916;
                $9918 = $x364;
                $9919 = $9917 * $9918;
                $9920 = (($4) + 432|0);
                $9921 = +HEAPF64[$9920>>3];
                $9922 = (($4) + 176|0);
                $9923 = +HEAPF64[$9922>>3];
                $9924 = $9921 * $9923;
                $9925 = $9919 + $9924;
                $9926 = (($evalcond150) + 48|0);
                HEAPF64[$9926>>3] = $9925;
                $9927 = (($4) + 384|0);
                $9928 = +HEAPF64[$9927>>3];
                $9929 = -1.0 * $9928;
                $9930 = $x364;
                $9931 = $9929 * $9930;
                $9932 = (($4) + 312|0);
                $9933 = +HEAPF64[$9932>>3];
                $9934 = -1.0 * $9933;
                $9935 = $x365;
                $9936 = $9934 * $9935;
                $9937 = $9931 + $9936;
                $9938 = (($evalcond150) + 56|0);
                HEAPF64[$9938>>3] = $9937;
                $9939 = (($4) + 336|0);
                $9940 = +HEAPF64[$9939>>3];
                $9941 = -1.0 * $9940;
                $9942 = $x365;
                $9943 = $9941 * $9942;
                $9944 = (($4) + 408|0);
                $9945 = +HEAPF64[$9944>>3];
                $9946 = -1.0 * $9945;
                $9947 = $x364;
                $9948 = $9946 * $9947;
                $9949 = $9943 + $9948;
                $9950 = (($evalcond150) + 64|0);
                HEAPF64[$9950>>3] = $9949;
                $9951 = (($4) + 432|0);
                $9952 = +HEAPF64[$9951>>3];
                $9953 = -1.0 * $9952;
                $9954 = $x364;
                $9955 = $9953 * $9954;
                $9956 = 1.0 + $9955;
                $9957 = (($4) + 360|0);
                $9958 = +HEAPF64[$9957>>3];
                $9959 = -1.0 * $9958;
                $9960 = $x365;
                $9961 = $9959 * $9960;
                $9962 = $9956 + $9961;
                $9963 = (($evalcond150) + 72|0);
                HEAPF64[$9963>>3] = $9962;
                $9964 = +HEAPF64[$evalcond150>>3];
                $9965 = (+__Z5IKabsd($9964));
                $9966 = $9965 < 9.9999999999999995E-7;
                do {
                 if ($9966) {
                  $9967 = (($evalcond150) + 8|0);
                  $9968 = +HEAPF64[$9967>>3];
                  $9969 = (+__Z5IKabsd($9968));
                  $9970 = $9969 < 9.9999999999999995E-7;
                  if (!($9970)) {
                   label = 1337;
                   break;
                  }
                  $9971 = (($evalcond150) + 16|0);
                  $9972 = +HEAPF64[$9971>>3];
                  $9973 = (+__Z5IKabsd($9972));
                  $9974 = $9973 < 9.9999999999999995E-7;
                  if (!($9974)) {
                   label = 1337;
                   break;
                  }
                  $9975 = (($evalcond150) + 24|0);
                  $9976 = +HEAPF64[$9975>>3];
                  $9977 = (+__Z5IKabsd($9976));
                  $9978 = $9977 < 9.9999999999999995E-7;
                  if (!($9978)) {
                   label = 1337;
                   break;
                  }
                  $9979 = (($evalcond150) + 32|0);
                  $9980 = +HEAPF64[$9979>>3];
                  $9981 = (+__Z5IKabsd($9980));
                  $9982 = $9981 < 9.9999999999999995E-7;
                  if (!($9982)) {
                   label = 1337;
                   break;
                  }
                  $9983 = (($evalcond150) + 40|0);
                  $9984 = +HEAPF64[$9983>>3];
                  $9985 = (+__Z5IKabsd($9984));
                  $9986 = $9985 < 9.9999999999999995E-7;
                  if (!($9986)) {
                   label = 1337;
                   break;
                  }
                  $9987 = (($evalcond150) + 48|0);
                  $9988 = +HEAPF64[$9987>>3];
                  $9989 = (+__Z5IKabsd($9988));
                  $9990 = $9989 < 9.9999999999999995E-7;
                  if (!($9990)) {
                   label = 1337;
                   break;
                  }
                  $9991 = (($evalcond150) + 56|0);
                  $9992 = +HEAPF64[$9991>>3];
                  $9993 = (+__Z5IKabsd($9992));
                  $9994 = $9993 < 9.9999999999999995E-7;
                  if (!($9994)) {
                   label = 1337;
                   break;
                  }
                  $9995 = (($evalcond150) + 64|0);
                  $9996 = +HEAPF64[$9995>>3];
                  $9997 = (+__Z5IKabsd($9996));
                  $9998 = $9997 < 9.9999999999999995E-7;
                  if (!($9998)) {
                   label = 1337;
                   break;
                  }
                  $9999 = (($evalcond150) + 72|0);
                  $10000 = +HEAPF64[$9999>>3];
                  $10001 = (+__Z5IKabsd($10000));
                  $10002 = $10001 < 9.9999999999999995E-7;
                  if (!($10002)) {
                   label = 1337;
                   break;
                  }
                  $bgotonextstatement151 = 0;
                  ;HEAP8[$j5valid155+0>>0]=0|0;
                  $10003 = (($4) + 553|0);
                  HEAP8[$10003>>0] = 1;
                  $10004 = (($4) + 408|0);
                  $10005 = +HEAPF64[$10004>>3];
                  $10006 = (($4) + 384|0);
                  $10007 = +HEAPF64[$10006>>3];
                  $10008 = -1.0 * $10007;
                  __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x366,$10005,$10008,1.9999999999999999E-6);
                  $10009 = (($x366) + 8|0);
                  $10010 = HEAP8[$10009>>0]|0;
                  $10011 = $10010&1;
                  if (!($10011)) {
                   break;
                  }
                  $10012 = (($4) + 360|0);
                  $10013 = +HEAPF64[$10012>>3];
                  $10014 = (+__Z6IKsignd($10013));
                  __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x367,$10014,-1);
                  $10015 = (($x367) + 8|0);
                  $10016 = HEAP8[$10015>>0]|0;
                  $10017 = $10016&1;
                  if (!($10017)) {
                   break;
                  }
                  $10018 = +HEAPF64[$x366>>3];
                  $10019 = -1.5707963267949001 + $10018;
                  $10020 = +HEAPF64[$x367>>3];
                  $10021 = 1.5707963267949001 * $10020;
                  $10022 = $10019 + $10021;
                  HEAPF64[$j5array152>>3] = $10022;
                  $10023 = +HEAPF64[$j5array152>>3];
                  $10024 = (+__Z5IKsind($10023));
                  HEAPF64[$sj5array154>>3] = $10024;
                  $10025 = +HEAPF64[$j5array152>>3];
                  $10026 = (+__Z5IKcosd($10025));
                  HEAPF64[$cj5array153>>3] = $10026;
                  $10027 = +HEAPF64[$j5array152>>3];
                  $10028 = $10027 > 3.14159265358979;
                  if ($10028) {
                   $10029 = +HEAPF64[$j5array152>>3];
                   $10030 = $10029 - 6.2831853071795898;
                   HEAPF64[$j5array152>>3] = $10030;
                  } else {
                   $10031 = +HEAPF64[$j5array152>>3];
                   $10032 = $10031 < -3.14159265358979;
                   if ($10032) {
                    $10033 = +HEAPF64[$j5array152>>3];
                    $10034 = $10033 + 6.2831853071795898;
                    HEAPF64[$j5array152>>3] = $10034;
                   }
                  }
                  HEAP8[$j5valid155>>0] = 1;
                  $ij5156 = 0;
                  while(1) {
                   $10035 = $ij5156;
                   $10036 = ($10035|0)<(1);
                   if (!($10036)) {
                    break;
                   }
                   $10037 = $ij5156;
                   $10038 = (($j5valid155) + ($10037)|0);
                   $10039 = HEAP8[$10038>>0]|0;
                   $10040 = $10039&1;
                   L366: do {
                    if ($10040) {
                     $10041 = $ij5156;
                     $10042 = $10041&255;
                     $10043 = (($4) + 551|0);
                     HEAP8[$10043>>0] = $10042;
                     $10044 = (($4) + 551|0);
                     $10045 = (($10044) + 1|0);
                     HEAP8[$10045>>0] = -1;
                     $10046 = $ij5156;
                     $10047 = (($10046) + 1)|0;
                     $iij5157 = $10047;
                     L369: while(1) {
                      $10048 = $iij5157;
                      $10049 = ($10048|0)<(1);
                      if (!($10049)) {
                       break;
                      }
                      $10050 = $iij5157;
                      $10051 = (($j5valid155) + ($10050)|0);
                      $10052 = HEAP8[$10051>>0]|0;
                      $10053 = $10052&1;
                      do {
                       if ($10053) {
                        $10054 = $ij5156;
                        $10055 = (($cj5array153) + ($10054<<3)|0);
                        $10056 = +HEAPF64[$10055>>3];
                        $10057 = $iij5157;
                        $10058 = (($cj5array153) + ($10057<<3)|0);
                        $10059 = +HEAPF64[$10058>>3];
                        $10060 = $10056 - $10059;
                        $10061 = (+__Z5IKabsd($10060));
                        $10062 = $10061 < 9.9999999999999995E-7;
                        if (!($10062)) {
                         break;
                        }
                        $10063 = $ij5156;
                        $10064 = (($sj5array154) + ($10063<<3)|0);
                        $10065 = +HEAPF64[$10064>>3];
                        $10066 = $iij5157;
                        $10067 = (($sj5array154) + ($10066<<3)|0);
                        $10068 = +HEAPF64[$10067>>3];
                        $10069 = $10065 - $10068;
                        $10070 = (+__Z5IKabsd($10069));
                        $10071 = $10070 < 9.9999999999999995E-7;
                        if ($10071) {
                         label = 1284;
                         break L369;
                        }
                       }
                      } while(0);
                      $10078 = $iij5157;
                      $10079 = (($10078) + 1)|0;
                      $iij5157 = $10079;
                     }
                     if ((label|0) == 1284) {
                      label = 0;
                      $10072 = $iij5157;
                      $10073 = (($j5valid155) + ($10072)|0);
                      HEAP8[$10073>>0] = 0;
                      $10074 = $iij5157;
                      $10075 = $10074&255;
                      $10076 = (($4) + 551|0);
                      $10077 = (($10076) + 1|0);
                      HEAP8[$10077>>0] = $10075;
                     }
                     $10080 = $ij5156;
                     $10081 = (($j5array152) + ($10080<<3)|0);
                     $10082 = +HEAPF64[$10081>>3];
                     $10083 = (($4) + 200|0);
                     HEAPF64[$10083>>3] = $10082;
                     $10084 = $ij5156;
                     $10085 = (($cj5array153) + ($10084<<3)|0);
                     $10086 = +HEAPF64[$10085>>3];
                     $10087 = (($4) + 208|0);
                     HEAPF64[$10087>>3] = $10086;
                     $10088 = $ij5156;
                     $10089 = (($sj5array154) + ($10088<<3)|0);
                     $10090 = +HEAPF64[$10089>>3];
                     $10091 = (($4) + 216|0);
                     HEAPF64[$10091>>3] = $10090;
                     $10092 = (($4) + 200|0);
                     $10093 = +HEAPF64[$10092>>3];
                     $10094 = (+__Z5IKsind($10093));
                     $x368 = $10094;
                     $10095 = (($4) + 200|0);
                     $10096 = +HEAPF64[$10095>>3];
                     $10097 = (+__Z5IKcosd($10096));
                     $x369 = $10097;
                     $10098 = (($4) + 432|0);
                     $10099 = +HEAPF64[$10098>>3];
                     $10100 = 1.0 * $10099;
                     $x370 = $10100;
                     $10101 = $x368;
                     $10102 = 1.0 * $10101;
                     $x371 = $10102;
                     $10103 = $x369;
                     $10104 = 1.0 * $10103;
                     $x372 = $10104;
                     $10105 = (($4) + 384|0);
                     $10106 = +HEAPF64[$10105>>3];
                     $10107 = (($4) + 360|0);
                     $10108 = +HEAPF64[$10107>>3];
                     $10109 = $x369;
                     $10110 = $10108 * $10109;
                     $10111 = $10106 + $10110;
                     HEAPF64[$evalcond158>>3] = $10111;
                     $10112 = (($4) + 432|0);
                     $10113 = +HEAPF64[$10112>>3];
                     $10114 = $x368;
                     $10115 = $10113 * $10114;
                     $10116 = (($4) + 336|0);
                     $10117 = +HEAPF64[$10116>>3];
                     $10118 = $10115 + $10117;
                     $10119 = (($evalcond158) + 8|0);
                     HEAPF64[$10119>>3] = $10118;
                     $10120 = (($4) + 360|0);
                     $10121 = +HEAPF64[$10120>>3];
                     $10122 = -1.0 * $10121;
                     $10123 = $x371;
                     $10124 = $10122 * $10123;
                     $10125 = (($4) + 408|0);
                     $10126 = +HEAPF64[$10125>>3];
                     $10127 = $10124 + $10126;
                     $10128 = (($evalcond158) + 16|0);
                     HEAPF64[$10128>>3] = $10127;
                     $10129 = $x369;
                     $10130 = -1.0 * $10129;
                     $10131 = $x370;
                     $10132 = $10130 * $10131;
                     $10133 = (($4) + 312|0);
                     $10134 = +HEAPF64[$10133>>3];
                     $10135 = $10132 + $10134;
                     $10136 = (($evalcond158) + 24|0);
                     HEAPF64[$10136>>3] = $10135;
                     $10137 = $x371;
                     $10138 = -1.0 * $10137;
                     $10139 = (($4) + 240|0);
                     $10140 = +HEAPF64[$10139>>3];
                     $10141 = -1.0 * $10140;
                     $10142 = $10138 + $10141;
                     $10143 = (($evalcond158) + 32|0);
                     HEAPF64[$10143>>3] = $10142;
                     $10144 = $x372;
                     $10145 = -1.0 * $10144;
                     $10146 = (($4) + 264|0);
                     $10147 = +HEAPF64[$10146>>3];
                     $10148 = -1.0 * $10147;
                     $10149 = $10145 + $10148;
                     $10150 = (($evalcond158) + 40|0);
                     HEAPF64[$10150>>3] = $10149;
                     $10151 = $x369;
                     $10152 = (($4) + 360|0);
                     $10153 = +HEAPF64[$10152>>3];
                     $10154 = (($4) + 384|0);
                     $10155 = +HEAPF64[$10154>>3];
                     $10156 = $10153 * $10155;
                     $10157 = $10151 + $10156;
                     $10158 = (($4) + 312|0);
                     $10159 = +HEAPF64[$10158>>3];
                     $10160 = -1.0 * $10159;
                     $10161 = $x370;
                     $10162 = $10160 * $10161;
                     $10163 = $10157 + $10162;
                     $10164 = (($evalcond158) + 48|0);
                     HEAPF64[$10164>>3] = $10163;
                     $10165 = $x371;
                     $10166 = -1.0 * $10165;
                     $10167 = (($4) + 360|0);
                     $10168 = +HEAPF64[$10167>>3];
                     $10169 = (($4) + 408|0);
                     $10170 = +HEAPF64[$10169>>3];
                     $10171 = $10168 * $10170;
                     $10172 = $10166 + $10171;
                     $10173 = (($4) + 336|0);
                     $10174 = +HEAPF64[$10173>>3];
                     $10175 = -1.0 * $10174;
                     $10176 = $x370;
                     $10177 = $10175 * $10176;
                     $10178 = $10172 + $10177;
                     $10179 = (($evalcond158) + 56|0);
                     HEAPF64[$10179>>3] = $10178;
                     $10180 = +HEAPF64[$evalcond158>>3];
                     $10181 = (+__Z5IKabsd($10180));
                     $10182 = $10181 > 5.0000000000000004E-6;
                     do {
                      if (!($10182)) {
                       $10183 = (($evalcond158) + 8|0);
                       $10184 = +HEAPF64[$10183>>3];
                       $10185 = (+__Z5IKabsd($10184));
                       $10186 = $10185 > 5.0000000000000004E-6;
                       if ($10186) {
                        break;
                       }
                       $10187 = (($evalcond158) + 16|0);
                       $10188 = +HEAPF64[$10187>>3];
                       $10189 = (+__Z5IKabsd($10188));
                       $10190 = $10189 > 5.0000000000000004E-6;
                       if ($10190) {
                        break;
                       }
                       $10191 = (($evalcond158) + 24|0);
                       $10192 = +HEAPF64[$10191>>3];
                       $10193 = (+__Z5IKabsd($10192));
                       $10194 = $10193 > 5.0000000000000004E-6;
                       if ($10194) {
                        break;
                       }
                       $10195 = (($evalcond158) + 32|0);
                       $10196 = +HEAPF64[$10195>>3];
                       $10197 = (+__Z5IKabsd($10196));
                       $10198 = $10197 > 5.0000000000000004E-6;
                       if ($10198) {
                        break;
                       }
                       $10199 = (($evalcond158) + 40|0);
                       $10200 = +HEAPF64[$10199>>3];
                       $10201 = (+__Z5IKabsd($10200));
                       $10202 = $10201 > 5.0000000000000004E-6;
                       if ($10202) {
                        break;
                       }
                       $10203 = (($evalcond158) + 48|0);
                       $10204 = +HEAPF64[$10203>>3];
                       $10205 = (+__Z5IKabsd($10204));
                       $10206 = $10205 > 5.0000000000000004E-6;
                       if ($10206) {
                        break;
                       }
                       $10207 = (($evalcond158) + 56|0);
                       $10208 = +HEAPF64[$10207>>3];
                       $10209 = (+__Z5IKabsd($10208));
                       $10210 = $10209 > 5.0000000000000004E-6;
                       if ($10210) {
                        break;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos159,6);
                       __THREW__ = 0;
                       $10211 = (invoke_iii(381,($vinfos159|0),0)|0);
                       $10212 = __THREW__; __THREW__ = 0;
                       $10213 = $10212&1;
                       if ($10213) {
                        label = 1331;
                        break L1;
                       }
                       $10214 = (($10211) + 17|0);
                       HEAP8[$10214>>0] = 1;
                       $10215 = +HEAPF64[$4>>3];
                       __THREW__ = 0;
                       $10216 = (invoke_iii(381,($vinfos159|0),0)|0);
                       $10217 = __THREW__; __THREW__ = 0;
                       $10218 = $10217&1;
                       if ($10218) {
                        label = 1331;
                        break L1;
                       }
                       $10219 = (($10216) + 8|0);
                       HEAPF64[$10219>>3] = $10215;
                       $10220 = (($4) + 536|0);
                       $10221 = HEAP8[$10220>>0]|0;
                       __THREW__ = 0;
                       $10222 = (invoke_iii(381,($vinfos159|0),0)|0);
                       $10223 = __THREW__; __THREW__ = 0;
                       $10224 = $10223&1;
                       if ($10224) {
                        label = 1331;
                        break L1;
                       }
                       $10225 = (($10222) + 19|0);
                       HEAP8[$10225>>0] = $10221;
                       $10226 = (($4) + 536|0);
                       $10227 = (($10226) + 1|0);
                       $10228 = HEAP8[$10227>>0]|0;
                       __THREW__ = 0;
                       $10229 = (invoke_iii(381,($vinfos159|0),0)|0);
                       $10230 = __THREW__; __THREW__ = 0;
                       $10231 = $10230&1;
                       if ($10231) {
                        label = 1331;
                        break L1;
                       }
                       $10232 = (($10229) + 19|0);
                       $10233 = (($10232) + 1|0);
                       HEAP8[$10233>>0] = $10228;
                       $10234 = (($4) + 538|0);
                       $10235 = HEAP8[$10234>>0]|0;
                       __THREW__ = 0;
                       $10236 = (invoke_iii(381,($vinfos159|0),0)|0);
                       $10237 = __THREW__; __THREW__ = 0;
                       $10238 = $10237&1;
                       if ($10238) {
                        label = 1331;
                        break L1;
                       }
                       $10239 = (($10236) + 18|0);
                       HEAP8[$10239>>0] = $10235;
                       __THREW__ = 0;
                       $10240 = (invoke_iii(381,($vinfos159|0),1)|0);
                       $10241 = __THREW__; __THREW__ = 0;
                       $10242 = $10241&1;
                       if ($10242) {
                        label = 1331;
                        break L1;
                       }
                       $10243 = (($10240) + 17|0);
                       HEAP8[$10243>>0] = 1;
                       $10244 = (($4) + 40|0);
                       $10245 = +HEAPF64[$10244>>3];
                       __THREW__ = 0;
                       $10246 = (invoke_iii(381,($vinfos159|0),1)|0);
                       $10247 = __THREW__; __THREW__ = 0;
                       $10248 = $10247&1;
                       if ($10248) {
                        label = 1331;
                        break L1;
                       }
                       $10249 = (($10246) + 8|0);
                       HEAPF64[$10249>>3] = $10245;
                       $10250 = (($4) + 539|0);
                       $10251 = HEAP8[$10250>>0]|0;
                       __THREW__ = 0;
                       $10252 = (invoke_iii(381,($vinfos159|0),1)|0);
                       $10253 = __THREW__; __THREW__ = 0;
                       $10254 = $10253&1;
                       if ($10254) {
                        label = 1331;
                        break L1;
                       }
                       $10255 = (($10252) + 19|0);
                       HEAP8[$10255>>0] = $10251;
                       $10256 = (($4) + 539|0);
                       $10257 = (($10256) + 1|0);
                       $10258 = HEAP8[$10257>>0]|0;
                       __THREW__ = 0;
                       $10259 = (invoke_iii(381,($vinfos159|0),1)|0);
                       $10260 = __THREW__; __THREW__ = 0;
                       $10261 = $10260&1;
                       if ($10261) {
                        label = 1331;
                        break L1;
                       }
                       $10262 = (($10259) + 19|0);
                       $10263 = (($10262) + 1|0);
                       HEAP8[$10263>>0] = $10258;
                       $10264 = (($4) + 541|0);
                       $10265 = HEAP8[$10264>>0]|0;
                       __THREW__ = 0;
                       $10266 = (invoke_iii(381,($vinfos159|0),1)|0);
                       $10267 = __THREW__; __THREW__ = 0;
                       $10268 = $10267&1;
                       if ($10268) {
                        label = 1331;
                        break L1;
                       }
                       $10269 = (($10266) + 18|0);
                       HEAP8[$10269>>0] = $10265;
                       __THREW__ = 0;
                       $10270 = (invoke_iii(381,($vinfos159|0),2)|0);
                       $10271 = __THREW__; __THREW__ = 0;
                       $10272 = $10271&1;
                       if ($10272) {
                        label = 1331;
                        break L1;
                       }
                       $10273 = (($10270) + 17|0);
                       HEAP8[$10273>>0] = 1;
                       $10274 = (($4) + 80|0);
                       $10275 = +HEAPF64[$10274>>3];
                       __THREW__ = 0;
                       $10276 = (invoke_iii(381,($vinfos159|0),2)|0);
                       $10277 = __THREW__; __THREW__ = 0;
                       $10278 = $10277&1;
                       if ($10278) {
                        label = 1331;
                        break L1;
                       }
                       $10279 = (($10276) + 8|0);
                       HEAPF64[$10279>>3] = $10275;
                       $10280 = (($4) + 542|0);
                       $10281 = HEAP8[$10280>>0]|0;
                       __THREW__ = 0;
                       $10282 = (invoke_iii(381,($vinfos159|0),2)|0);
                       $10283 = __THREW__; __THREW__ = 0;
                       $10284 = $10283&1;
                       if ($10284) {
                        label = 1331;
                        break L1;
                       }
                       $10285 = (($10282) + 19|0);
                       HEAP8[$10285>>0] = $10281;
                       $10286 = (($4) + 542|0);
                       $10287 = (($10286) + 1|0);
                       $10288 = HEAP8[$10287>>0]|0;
                       __THREW__ = 0;
                       $10289 = (invoke_iii(381,($vinfos159|0),2)|0);
                       $10290 = __THREW__; __THREW__ = 0;
                       $10291 = $10290&1;
                       if ($10291) {
                        label = 1331;
                        break L1;
                       }
                       $10292 = (($10289) + 19|0);
                       $10293 = (($10292) + 1|0);
                       HEAP8[$10293>>0] = $10288;
                       $10294 = (($4) + 544|0);
                       $10295 = HEAP8[$10294>>0]|0;
                       __THREW__ = 0;
                       $10296 = (invoke_iii(381,($vinfos159|0),2)|0);
                       $10297 = __THREW__; __THREW__ = 0;
                       $10298 = $10297&1;
                       if ($10298) {
                        label = 1331;
                        break L1;
                       }
                       $10299 = (($10296) + 18|0);
                       HEAP8[$10299>>0] = $10295;
                       __THREW__ = 0;
                       $10300 = (invoke_iii(381,($vinfos159|0),3)|0);
                       $10301 = __THREW__; __THREW__ = 0;
                       $10302 = $10301&1;
                       if ($10302) {
                        label = 1331;
                        break L1;
                       }
                       $10303 = (($10300) + 17|0);
                       HEAP8[$10303>>0] = 1;
                       $10304 = (($4) + 120|0);
                       $10305 = +HEAPF64[$10304>>3];
                       __THREW__ = 0;
                       $10306 = (invoke_iii(381,($vinfos159|0),3)|0);
                       $10307 = __THREW__; __THREW__ = 0;
                       $10308 = $10307&1;
                       if ($10308) {
                        label = 1331;
                        break L1;
                       }
                       $10309 = (($10306) + 8|0);
                       HEAPF64[$10309>>3] = $10305;
                       $10310 = (($4) + 545|0);
                       $10311 = HEAP8[$10310>>0]|0;
                       __THREW__ = 0;
                       $10312 = (invoke_iii(381,($vinfos159|0),3)|0);
                       $10313 = __THREW__; __THREW__ = 0;
                       $10314 = $10313&1;
                       if ($10314) {
                        label = 1331;
                        break L1;
                       }
                       $10315 = (($10312) + 19|0);
                       HEAP8[$10315>>0] = $10311;
                       $10316 = (($4) + 545|0);
                       $10317 = (($10316) + 1|0);
                       $10318 = HEAP8[$10317>>0]|0;
                       __THREW__ = 0;
                       $10319 = (invoke_iii(381,($vinfos159|0),3)|0);
                       $10320 = __THREW__; __THREW__ = 0;
                       $10321 = $10320&1;
                       if ($10321) {
                        label = 1331;
                        break L1;
                       }
                       $10322 = (($10319) + 19|0);
                       $10323 = (($10322) + 1|0);
                       HEAP8[$10323>>0] = $10318;
                       $10324 = (($4) + 547|0);
                       $10325 = HEAP8[$10324>>0]|0;
                       __THREW__ = 0;
                       $10326 = (invoke_iii(381,($vinfos159|0),3)|0);
                       $10327 = __THREW__; __THREW__ = 0;
                       $10328 = $10327&1;
                       if ($10328) {
                        label = 1331;
                        break L1;
                       }
                       $10329 = (($10326) + 18|0);
                       HEAP8[$10329>>0] = $10325;
                       __THREW__ = 0;
                       $10330 = (invoke_iii(381,($vinfos159|0),4)|0);
                       $10331 = __THREW__; __THREW__ = 0;
                       $10332 = $10331&1;
                       if ($10332) {
                        label = 1331;
                        break L1;
                       }
                       $10333 = (($10330) + 17|0);
                       HEAP8[$10333>>0] = 1;
                       $10334 = (($4) + 160|0);
                       $10335 = +HEAPF64[$10334>>3];
                       __THREW__ = 0;
                       $10336 = (invoke_iii(381,($vinfos159|0),4)|0);
                       $10337 = __THREW__; __THREW__ = 0;
                       $10338 = $10337&1;
                       if ($10338) {
                        label = 1331;
                        break L1;
                       }
                       $10339 = (($10336) + 8|0);
                       HEAPF64[$10339>>3] = $10335;
                       $10340 = (($4) + 548|0);
                       $10341 = HEAP8[$10340>>0]|0;
                       __THREW__ = 0;
                       $10342 = (invoke_iii(381,($vinfos159|0),4)|0);
                       $10343 = __THREW__; __THREW__ = 0;
                       $10344 = $10343&1;
                       if ($10344) {
                        label = 1331;
                        break L1;
                       }
                       $10345 = (($10342) + 19|0);
                       HEAP8[$10345>>0] = $10341;
                       $10346 = (($4) + 548|0);
                       $10347 = (($10346) + 1|0);
                       $10348 = HEAP8[$10347>>0]|0;
                       __THREW__ = 0;
                       $10349 = (invoke_iii(381,($vinfos159|0),4)|0);
                       $10350 = __THREW__; __THREW__ = 0;
                       $10351 = $10350&1;
                       if ($10351) {
                        label = 1331;
                        break L1;
                       }
                       $10352 = (($10349) + 19|0);
                       $10353 = (($10352) + 1|0);
                       HEAP8[$10353>>0] = $10348;
                       $10354 = (($4) + 550|0);
                       $10355 = HEAP8[$10354>>0]|0;
                       __THREW__ = 0;
                       $10356 = (invoke_iii(381,($vinfos159|0),4)|0);
                       $10357 = __THREW__; __THREW__ = 0;
                       $10358 = $10357&1;
                       if ($10358) {
                        label = 1331;
                        break L1;
                       }
                       $10359 = (($10356) + 18|0);
                       HEAP8[$10359>>0] = $10355;
                       __THREW__ = 0;
                       $10360 = (invoke_iii(381,($vinfos159|0),5)|0);
                       $10361 = __THREW__; __THREW__ = 0;
                       $10362 = $10361&1;
                       if ($10362) {
                        label = 1331;
                        break L1;
                       }
                       $10363 = (($10360) + 17|0);
                       HEAP8[$10363>>0] = 1;
                       $10364 = (($4) + 200|0);
                       $10365 = +HEAPF64[$10364>>3];
                       __THREW__ = 0;
                       $10366 = (invoke_iii(381,($vinfos159|0),5)|0);
                       $10367 = __THREW__; __THREW__ = 0;
                       $10368 = $10367&1;
                       if ($10368) {
                        label = 1331;
                        break L1;
                       }
                       $10369 = (($10366) + 8|0);
                       HEAPF64[$10369>>3] = $10365;
                       $10370 = (($4) + 551|0);
                       $10371 = HEAP8[$10370>>0]|0;
                       __THREW__ = 0;
                       $10372 = (invoke_iii(381,($vinfos159|0),5)|0);
                       $10373 = __THREW__; __THREW__ = 0;
                       $10374 = $10373&1;
                       if ($10374) {
                        label = 1331;
                        break L1;
                       }
                       $10375 = (($10372) + 19|0);
                       HEAP8[$10375>>0] = $10371;
                       $10376 = (($4) + 551|0);
                       $10377 = (($10376) + 1|0);
                       $10378 = HEAP8[$10377>>0]|0;
                       __THREW__ = 0;
                       $10379 = (invoke_iii(381,($vinfos159|0),5)|0);
                       $10380 = __THREW__; __THREW__ = 0;
                       $10381 = $10380&1;
                       if ($10381) {
                        label = 1331;
                        break L1;
                       }
                       $10382 = (($10379) + 19|0);
                       $10383 = (($10382) + 1|0);
                       HEAP8[$10383>>0] = $10378;
                       $10384 = (($4) + 553|0);
                       $10385 = HEAP8[$10384>>0]|0;
                       __THREW__ = 0;
                       $10386 = (invoke_iii(381,($vinfos159|0),5)|0);
                       $10387 = __THREW__; __THREW__ = 0;
                       $10388 = $10387&1;
                       if ($10388) {
                        label = 1331;
                        break L1;
                       }
                       $10389 = (($10386) + 18|0);
                       HEAP8[$10389>>0] = $10385;
                       __THREW__ = 0;
                       invoke_vii(382,($vfree160|0),0);
                       $10390 = __THREW__; __THREW__ = 0;
                       $10391 = $10390&1;
                       if ($10391) {
                        label = 1331;
                        break L1;
                       }
                       $10392 = $1;
                       $10393 = HEAP32[$10392>>2]|0;
                       $10394 = (($10393) + 8|0);
                       $10395 = HEAP32[$10394>>2]|0;
                       __THREW__ = 0;
                       (invoke_iiii($10395|0,($10392|0),($vinfos159|0),($vfree160|0))|0);
                       $10396 = __THREW__; __THREW__ = 0;
                       $10397 = $10396&1;
                       if ($10397) {
                        label = 1332;
                        break L1;
                       }
                       __THREW__ = 0;
                       invoke_vi(366,($vfree160|0));
                       $10398 = __THREW__; __THREW__ = 0;
                       $10399 = $10398&1;
                       if ($10399) {
                        label = 1331;
                        break L1;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos159);
                       break L366;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $10400 = $ij5156;
                   $10401 = (($10400) + 1)|0;
                   $ij5156 = $10401;
                  }
                  label = 1337;
                 } else {
                  label = 1337;
                 }
                } while(0);
                if ((label|0) == 1337) {
                 label = 0;
                }
                $10410 = $bgotonextstatement151;
                $10411 = $10410&1;
                if ($10411) {
                 $bgotonextstatement161 = 1;
                 $10412 = (($4) + 432|0);
                 $10413 = +HEAPF64[$10412>>3];
                 $10414 = (($4) + 168|0);
                 $10415 = +HEAPF64[$10414>>3];
                 $10416 = -1.0 * $10415;
                 $10417 = $10413 + $10416;
                 $x373 = $10417;
                 $10418 = (($4) + 168|0);
                 $10419 = +HEAPF64[$10418>>3];
                 $10420 = 1.0 * $10419;
                 $x374 = $10420;
                 $10421 = (($4) + 120|0);
                 $10422 = +HEAPF64[$10421>>3];
                 $10423 = 1.5707963267949001 + $10422;
                 $10424 = (+__Z5IKabsd($10423));
                 $10425 = 3.14159265358979 + $10424;
                 $10426 = (+__Z6IKfmoddd($10425,6.2831853071795898));
                 $10427 = -3.14159265358979 + $10426;
                 HEAPF64[$evalcond150>>3] = $10427;
                 $10428 = $x373;
                 $10429 = (($evalcond150) + 8|0);
                 HEAPF64[$10429>>3] = $10428;
                 $10430 = $x373;
                 $10431 = (($evalcond150) + 16|0);
                 HEAPF64[$10431>>3] = $10430;
                 $10432 = (($4) + 288|0);
                 $10433 = +HEAPF64[$10432>>3];
                 $10434 = (($evalcond150) + 24|0);
                 HEAPF64[$10434>>3] = $10433;
                 $10435 = (($4) + 176|0);
                 $10436 = +HEAPF64[$10435>>3];
                 $10437 = (($4) + 360|0);
                 $10438 = +HEAPF64[$10437>>3];
                 $10439 = $10436 + $10438;
                 $10440 = (($evalcond150) + 32|0);
                 HEAPF64[$10440>>3] = $10439;
                 $10441 = (($4) + 176|0);
                 $10442 = +HEAPF64[$10441>>3];
                 $10443 = -1.0 * $10442;
                 $10444 = (($4) + 360|0);
                 $10445 = +HEAPF64[$10444>>3];
                 $10446 = -1.0 * $10445;
                 $10447 = $10443 + $10446;
                 $10448 = (($evalcond150) + 40|0);
                 HEAPF64[$10448>>3] = $10447;
                 $10449 = (($4) + 168|0);
                 $10450 = +HEAPF64[$10449>>3];
                 $10451 = (($4) + 360|0);
                 $10452 = +HEAPF64[$10451>>3];
                 $10453 = $10450 * $10452;
                 $10454 = (($4) + 432|0);
                 $10455 = +HEAPF64[$10454>>3];
                 $10456 = (($4) + 176|0);
                 $10457 = +HEAPF64[$10456>>3];
                 $10458 = $10455 * $10457;
                 $10459 = $10453 + $10458;
                 $10460 = (($evalcond150) + 48|0);
                 HEAPF64[$10460>>3] = $10459;
                 $10461 = (($4) + 384|0);
                 $10462 = +HEAPF64[$10461>>3];
                 $10463 = -1.0 * $10462;
                 $10464 = $x374;
                 $10465 = $10463 * $10464;
                 $10466 = (($4) + 312|0);
                 $10467 = +HEAPF64[$10466>>3];
                 $10468 = (($4) + 176|0);
                 $10469 = +HEAPF64[$10468>>3];
                 $10470 = $10467 * $10469;
                 $10471 = $10465 + $10470;
                 $10472 = (($evalcond150) + 56|0);
                 HEAPF64[$10472>>3] = $10471;
                 $10473 = (($4) + 408|0);
                 $10474 = +HEAPF64[$10473>>3];
                 $10475 = -1.0 * $10474;
                 $10476 = $x374;
                 $10477 = $10475 * $10476;
                 $10478 = (($4) + 336|0);
                 $10479 = +HEAPF64[$10478>>3];
                 $10480 = (($4) + 176|0);
                 $10481 = +HEAPF64[$10480>>3];
                 $10482 = $10479 * $10481;
                 $10483 = $10477 + $10482;
                 $10484 = (($evalcond150) + 64|0);
                 HEAPF64[$10484>>3] = $10483;
                 $10485 = (($4) + 360|0);
                 $10486 = +HEAPF64[$10485>>3];
                 $10487 = (($4) + 176|0);
                 $10488 = +HEAPF64[$10487>>3];
                 $10489 = $10486 * $10488;
                 $10490 = 1.0 + $10489;
                 $10491 = (($4) + 432|0);
                 $10492 = +HEAPF64[$10491>>3];
                 $10493 = -1.0 * $10492;
                 $10494 = $x374;
                 $10495 = $10493 * $10494;
                 $10496 = $10490 + $10495;
                 $10497 = (($evalcond150) + 72|0);
                 HEAPF64[$10497>>3] = $10496;
                 $10498 = +HEAPF64[$evalcond150>>3];
                 $10499 = (+__Z5IKabsd($10498));
                 $10500 = $10499 < 9.9999999999999995E-7;
                 L431: do {
                  if ($10500) {
                   $10501 = (($evalcond150) + 8|0);
                   $10502 = +HEAPF64[$10501>>3];
                   $10503 = (+__Z5IKabsd($10502));
                   $10504 = $10503 < 9.9999999999999995E-7;
                   if (!($10504)) {
                    label = 1421;
                    break;
                   }
                   $10505 = (($evalcond150) + 16|0);
                   $10506 = +HEAPF64[$10505>>3];
                   $10507 = (+__Z5IKabsd($10506));
                   $10508 = $10507 < 9.9999999999999995E-7;
                   if (!($10508)) {
                    label = 1421;
                    break;
                   }
                   $10509 = (($evalcond150) + 24|0);
                   $10510 = +HEAPF64[$10509>>3];
                   $10511 = (+__Z5IKabsd($10510));
                   $10512 = $10511 < 9.9999999999999995E-7;
                   if (!($10512)) {
                    label = 1421;
                    break;
                   }
                   $10513 = (($evalcond150) + 32|0);
                   $10514 = +HEAPF64[$10513>>3];
                   $10515 = (+__Z5IKabsd($10514));
                   $10516 = $10515 < 9.9999999999999995E-7;
                   if (!($10516)) {
                    label = 1421;
                    break;
                   }
                   $10517 = (($evalcond150) + 40|0);
                   $10518 = +HEAPF64[$10517>>3];
                   $10519 = (+__Z5IKabsd($10518));
                   $10520 = $10519 < 9.9999999999999995E-7;
                   if (!($10520)) {
                    label = 1421;
                    break;
                   }
                   $10521 = (($evalcond150) + 48|0);
                   $10522 = +HEAPF64[$10521>>3];
                   $10523 = (+__Z5IKabsd($10522));
                   $10524 = $10523 < 9.9999999999999995E-7;
                   if (!($10524)) {
                    label = 1421;
                    break;
                   }
                   $10525 = (($evalcond150) + 56|0);
                   $10526 = +HEAPF64[$10525>>3];
                   $10527 = (+__Z5IKabsd($10526));
                   $10528 = $10527 < 9.9999999999999995E-7;
                   if (!($10528)) {
                    label = 1421;
                    break;
                   }
                   $10529 = (($evalcond150) + 64|0);
                   $10530 = +HEAPF64[$10529>>3];
                   $10531 = (+__Z5IKabsd($10530));
                   $10532 = $10531 < 9.9999999999999995E-7;
                   if (!($10532)) {
                    label = 1421;
                    break;
                   }
                   $10533 = (($evalcond150) + 72|0);
                   $10534 = +HEAPF64[$10533>>3];
                   $10535 = (+__Z5IKabsd($10534));
                   $10536 = $10535 < 9.9999999999999995E-7;
                   if (!($10536)) {
                    label = 1421;
                    break;
                   }
                   $bgotonextstatement161 = 0;
                   ;HEAP8[$j5valid165+0>>0]=0|0;
                   $10537 = (($4) + 553|0);
                   HEAP8[$10537>>0] = 1;
                   $10538 = (($4) + 240|0);
                   $10539 = +HEAPF64[$10538>>3];
                   $10540 = (+__Z5IKabsd($10539));
                   $10541 = $10540 < 1.9999999999999999E-6;
                   do {
                    if ($10541) {
                     $10542 = (($4) + 264|0);
                     $10543 = +HEAPF64[$10542>>3];
                     $10544 = (+__Z5IKabsd($10543));
                     $10545 = $10544 < 1.9999999999999999E-6;
                     if (!($10545)) {
                      break;
                     }
                     $10546 = (($4) + 240|0);
                     $10547 = +HEAPF64[$10546>>3];
                     $10548 = (+__Z5IKsqrd($10547));
                     $10549 = (($4) + 264|0);
                     $10550 = +HEAPF64[$10549>>3];
                     $10551 = (+__Z5IKsqrd($10550));
                     $10552 = $10548 + $10551;
                     $10553 = $10552 - 1.0;
                     $10554 = (+__Z5IKabsd($10553));
                     $10555 = $10554 <= 1.9999999999999999E-6;
                     if (!($10555)) {
                      break;
                     }
                     break L431;
                    }
                   } while(0);
                   $10556 = (($4) + 240|0);
                   $10557 = +HEAPF64[$10556>>3];
                   $10558 = (($4) + 264|0);
                   $10559 = +HEAPF64[$10558>>3];
                   $10560 = (+__Z7IKatan2dd($10557,$10559));
                   HEAPF64[$j5array162>>3] = $10560;
                   $10561 = +HEAPF64[$j5array162>>3];
                   $10562 = (+__Z5IKsind($10561));
                   HEAPF64[$sj5array164>>3] = $10562;
                   $10563 = +HEAPF64[$j5array162>>3];
                   $10564 = (+__Z5IKcosd($10563));
                   HEAPF64[$cj5array163>>3] = $10564;
                   $10565 = +HEAPF64[$j5array162>>3];
                   $10566 = $10565 > 3.14159265358979;
                   if ($10566) {
                    $10567 = +HEAPF64[$j5array162>>3];
                    $10568 = $10567 - 6.2831853071795898;
                    HEAPF64[$j5array162>>3] = $10568;
                   } else {
                    $10569 = +HEAPF64[$j5array162>>3];
                    $10570 = $10569 < -3.14159265358979;
                    if ($10570) {
                     $10571 = +HEAPF64[$j5array162>>3];
                     $10572 = $10571 + 6.2831853071795898;
                     HEAPF64[$j5array162>>3] = $10572;
                    }
                   }
                   HEAP8[$j5valid165>>0] = 1;
                   $ij5166 = 0;
                   while(1) {
                    $10573 = $ij5166;
                    $10574 = ($10573|0)<(1);
                    if (!($10574)) {
                     break;
                    }
                    $10575 = $ij5166;
                    $10576 = (($j5valid165) + ($10575)|0);
                    $10577 = HEAP8[$10576>>0]|0;
                    $10578 = $10577&1;
                    L457: do {
                     if ($10578) {
                      $10579 = $ij5166;
                      $10580 = $10579&255;
                      $10581 = (($4) + 551|0);
                      HEAP8[$10581>>0] = $10580;
                      $10582 = (($4) + 551|0);
                      $10583 = (($10582) + 1|0);
                      HEAP8[$10583>>0] = -1;
                      $10584 = $ij5166;
                      $10585 = (($10584) + 1)|0;
                      $iij5167 = $10585;
                      L460: while(1) {
                       $10586 = $iij5167;
                       $10587 = ($10586|0)<(1);
                       if (!($10587)) {
                        break;
                       }
                       $10588 = $iij5167;
                       $10589 = (($j5valid165) + ($10588)|0);
                       $10590 = HEAP8[$10589>>0]|0;
                       $10591 = $10590&1;
                       do {
                        if ($10591) {
                         $10592 = $ij5166;
                         $10593 = (($cj5array163) + ($10592<<3)|0);
                         $10594 = +HEAPF64[$10593>>3];
                         $10595 = $iij5167;
                         $10596 = (($cj5array163) + ($10595<<3)|0);
                         $10597 = +HEAPF64[$10596>>3];
                         $10598 = $10594 - $10597;
                         $10599 = (+__Z5IKabsd($10598));
                         $10600 = $10599 < 9.9999999999999995E-7;
                         if (!($10600)) {
                          break;
                         }
                         $10601 = $ij5166;
                         $10602 = (($sj5array164) + ($10601<<3)|0);
                         $10603 = +HEAPF64[$10602>>3];
                         $10604 = $iij5167;
                         $10605 = (($sj5array164) + ($10604<<3)|0);
                         $10606 = +HEAPF64[$10605>>3];
                         $10607 = $10603 - $10606;
                         $10608 = (+__Z5IKabsd($10607));
                         $10609 = $10608 < 9.9999999999999995E-7;
                         if ($10609) {
                          label = 1368;
                          break L460;
                         }
                        }
                       } while(0);
                       $10616 = $iij5167;
                       $10617 = (($10616) + 1)|0;
                       $iij5167 = $10617;
                      }
                      if ((label|0) == 1368) {
                       label = 0;
                       $10610 = $iij5167;
                       $10611 = (($j5valid165) + ($10610)|0);
                       HEAP8[$10611>>0] = 0;
                       $10612 = $iij5167;
                       $10613 = $10612&255;
                       $10614 = (($4) + 551|0);
                       $10615 = (($10614) + 1|0);
                       HEAP8[$10615>>0] = $10613;
                      }
                      $10618 = $ij5166;
                      $10619 = (($j5array162) + ($10618<<3)|0);
                      $10620 = +HEAPF64[$10619>>3];
                      $10621 = (($4) + 200|0);
                      HEAPF64[$10621>>3] = $10620;
                      $10622 = $ij5166;
                      $10623 = (($cj5array163) + ($10622<<3)|0);
                      $10624 = +HEAPF64[$10623>>3];
                      $10625 = (($4) + 208|0);
                      HEAPF64[$10625>>3] = $10624;
                      $10626 = $ij5166;
                      $10627 = (($sj5array164) + ($10626<<3)|0);
                      $10628 = +HEAPF64[$10627>>3];
                      $10629 = (($4) + 216|0);
                      HEAPF64[$10629>>3] = $10628;
                      $10630 = (($4) + 200|0);
                      $10631 = +HEAPF64[$10630>>3];
                      $10632 = (+__Z5IKsind($10631));
                      $x375 = $10632;
                      $10633 = (($4) + 200|0);
                      $10634 = +HEAPF64[$10633>>3];
                      $10635 = (+__Z5IKcosd($10634));
                      $x376 = $10635;
                      $10636 = (($4) + 360|0);
                      $10637 = +HEAPF64[$10636>>3];
                      $10638 = 1.0 * $10637;
                      $x377 = $10638;
                      $10639 = $x375;
                      $10640 = 1.0 * $10639;
                      $x378 = $10640;
                      $10641 = $x376;
                      $10642 = 1.0 * $10641;
                      $x379 = $10642;
                      $10643 = (($4) + 360|0);
                      $10644 = +HEAPF64[$10643>>3];
                      $10645 = $x375;
                      $10646 = $10644 * $10645;
                      $10647 = (($4) + 408|0);
                      $10648 = +HEAPF64[$10647>>3];
                      $10649 = $10646 + $10648;
                      HEAPF64[$evalcond168>>3] = $10649;
                      $10650 = $x378;
                      $10651 = -1.0 * $10650;
                      $10652 = (($4) + 240|0);
                      $10653 = +HEAPF64[$10652>>3];
                      $10654 = $10651 + $10653;
                      $10655 = (($evalcond168) + 8|0);
                      HEAPF64[$10655>>3] = $10654;
                      $10656 = $x379;
                      $10657 = -1.0 * $10656;
                      $10658 = (($4) + 264|0);
                      $10659 = +HEAPF64[$10658>>3];
                      $10660 = $10657 + $10659;
                      $10661 = (($evalcond168) + 16|0);
                      HEAPF64[$10661>>3] = $10660;
                      $10662 = $x376;
                      $10663 = -1.0 * $10662;
                      $10664 = $x377;
                      $10665 = $10663 * $10664;
                      $10666 = (($4) + 384|0);
                      $10667 = +HEAPF64[$10666>>3];
                      $10668 = $10665 + $10667;
                      $10669 = (($evalcond168) + 24|0);
                      HEAPF64[$10669>>3] = $10668;
                      $10670 = (($4) + 336|0);
                      $10671 = +HEAPF64[$10670>>3];
                      $10672 = -1.0 * $10671;
                      $10673 = (($4) + 432|0);
                      $10674 = +HEAPF64[$10673>>3];
                      $10675 = $x375;
                      $10676 = $10674 * $10675;
                      $10677 = $10672 + $10676;
                      $10678 = (($evalcond168) + 32|0);
                      HEAPF64[$10678>>3] = $10677;
                      $10679 = (($4) + 432|0);
                      $10680 = +HEAPF64[$10679>>3];
                      $10681 = -1.0 * $10680;
                      $10682 = $x379;
                      $10683 = $10681 * $10682;
                      $10684 = (($4) + 312|0);
                      $10685 = +HEAPF64[$10684>>3];
                      $10686 = -1.0 * $10685;
                      $10687 = $10683 + $10686;
                      $10688 = (($evalcond168) + 40|0);
                      HEAPF64[$10688>>3] = $10687;
                      $10689 = (($4) + 384|0);
                      $10690 = +HEAPF64[$10689>>3];
                      $10691 = -1.0 * $10690;
                      $10692 = $x377;
                      $10693 = $10691 * $10692;
                      $10694 = $x376;
                      $10695 = $10693 + $10694;
                      $10696 = (($4) + 312|0);
                      $10697 = +HEAPF64[$10696>>3];
                      $10698 = (($4) + 432|0);
                      $10699 = +HEAPF64[$10698>>3];
                      $10700 = $10697 * $10699;
                      $10701 = $10695 + $10700;
                      $10702 = (($evalcond168) + 48|0);
                      HEAPF64[$10702>>3] = $10701;
                      $10703 = (($4) + 408|0);
                      $10704 = +HEAPF64[$10703>>3];
                      $10705 = -1.0 * $10704;
                      $10706 = $x377;
                      $10707 = $10705 * $10706;
                      $10708 = $x378;
                      $10709 = -1.0 * $10708;
                      $10710 = $10707 + $10709;
                      $10711 = (($4) + 336|0);
                      $10712 = +HEAPF64[$10711>>3];
                      $10713 = (($4) + 432|0);
                      $10714 = +HEAPF64[$10713>>3];
                      $10715 = $10712 * $10714;
                      $10716 = $10710 + $10715;
                      $10717 = (($evalcond168) + 56|0);
                      HEAPF64[$10717>>3] = $10716;
                      $10718 = +HEAPF64[$evalcond168>>3];
                      $10719 = (+__Z5IKabsd($10718));
                      $10720 = $10719 > 5.0000000000000004E-6;
                      do {
                       if (!($10720)) {
                        $10721 = (($evalcond168) + 8|0);
                        $10722 = +HEAPF64[$10721>>3];
                        $10723 = (+__Z5IKabsd($10722));
                        $10724 = $10723 > 5.0000000000000004E-6;
                        if ($10724) {
                         break;
                        }
                        $10725 = (($evalcond168) + 16|0);
                        $10726 = +HEAPF64[$10725>>3];
                        $10727 = (+__Z5IKabsd($10726));
                        $10728 = $10727 > 5.0000000000000004E-6;
                        if ($10728) {
                         break;
                        }
                        $10729 = (($evalcond168) + 24|0);
                        $10730 = +HEAPF64[$10729>>3];
                        $10731 = (+__Z5IKabsd($10730));
                        $10732 = $10731 > 5.0000000000000004E-6;
                        if ($10732) {
                         break;
                        }
                        $10733 = (($evalcond168) + 32|0);
                        $10734 = +HEAPF64[$10733>>3];
                        $10735 = (+__Z5IKabsd($10734));
                        $10736 = $10735 > 5.0000000000000004E-6;
                        if ($10736) {
                         break;
                        }
                        $10737 = (($evalcond168) + 40|0);
                        $10738 = +HEAPF64[$10737>>3];
                        $10739 = (+__Z5IKabsd($10738));
                        $10740 = $10739 > 5.0000000000000004E-6;
                        if ($10740) {
                         break;
                        }
                        $10741 = (($evalcond168) + 48|0);
                        $10742 = +HEAPF64[$10741>>3];
                        $10743 = (+__Z5IKabsd($10742));
                        $10744 = $10743 > 5.0000000000000004E-6;
                        if ($10744) {
                         break;
                        }
                        $10745 = (($evalcond168) + 56|0);
                        $10746 = +HEAPF64[$10745>>3];
                        $10747 = (+__Z5IKabsd($10746));
                        $10748 = $10747 > 5.0000000000000004E-6;
                        if ($10748) {
                         break;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos169,6);
                        __THREW__ = 0;
                        $10749 = (invoke_iii(381,($vinfos169|0),0)|0);
                        $10750 = __THREW__; __THREW__ = 0;
                        $10751 = $10750&1;
                        if ($10751) {
                         label = 1415;
                         break L1;
                        }
                        $10752 = (($10749) + 17|0);
                        HEAP8[$10752>>0] = 1;
                        $10753 = +HEAPF64[$4>>3];
                        __THREW__ = 0;
                        $10754 = (invoke_iii(381,($vinfos169|0),0)|0);
                        $10755 = __THREW__; __THREW__ = 0;
                        $10756 = $10755&1;
                        if ($10756) {
                         label = 1415;
                         break L1;
                        }
                        $10757 = (($10754) + 8|0);
                        HEAPF64[$10757>>3] = $10753;
                        $10758 = (($4) + 536|0);
                        $10759 = HEAP8[$10758>>0]|0;
                        __THREW__ = 0;
                        $10760 = (invoke_iii(381,($vinfos169|0),0)|0);
                        $10761 = __THREW__; __THREW__ = 0;
                        $10762 = $10761&1;
                        if ($10762) {
                         label = 1415;
                         break L1;
                        }
                        $10763 = (($10760) + 19|0);
                        HEAP8[$10763>>0] = $10759;
                        $10764 = (($4) + 536|0);
                        $10765 = (($10764) + 1|0);
                        $10766 = HEAP8[$10765>>0]|0;
                        __THREW__ = 0;
                        $10767 = (invoke_iii(381,($vinfos169|0),0)|0);
                        $10768 = __THREW__; __THREW__ = 0;
                        $10769 = $10768&1;
                        if ($10769) {
                         label = 1415;
                         break L1;
                        }
                        $10770 = (($10767) + 19|0);
                        $10771 = (($10770) + 1|0);
                        HEAP8[$10771>>0] = $10766;
                        $10772 = (($4) + 538|0);
                        $10773 = HEAP8[$10772>>0]|0;
                        __THREW__ = 0;
                        $10774 = (invoke_iii(381,($vinfos169|0),0)|0);
                        $10775 = __THREW__; __THREW__ = 0;
                        $10776 = $10775&1;
                        if ($10776) {
                         label = 1415;
                         break L1;
                        }
                        $10777 = (($10774) + 18|0);
                        HEAP8[$10777>>0] = $10773;
                        __THREW__ = 0;
                        $10778 = (invoke_iii(381,($vinfos169|0),1)|0);
                        $10779 = __THREW__; __THREW__ = 0;
                        $10780 = $10779&1;
                        if ($10780) {
                         label = 1415;
                         break L1;
                        }
                        $10781 = (($10778) + 17|0);
                        HEAP8[$10781>>0] = 1;
                        $10782 = (($4) + 40|0);
                        $10783 = +HEAPF64[$10782>>3];
                        __THREW__ = 0;
                        $10784 = (invoke_iii(381,($vinfos169|0),1)|0);
                        $10785 = __THREW__; __THREW__ = 0;
                        $10786 = $10785&1;
                        if ($10786) {
                         label = 1415;
                         break L1;
                        }
                        $10787 = (($10784) + 8|0);
                        HEAPF64[$10787>>3] = $10783;
                        $10788 = (($4) + 539|0);
                        $10789 = HEAP8[$10788>>0]|0;
                        __THREW__ = 0;
                        $10790 = (invoke_iii(381,($vinfos169|0),1)|0);
                        $10791 = __THREW__; __THREW__ = 0;
                        $10792 = $10791&1;
                        if ($10792) {
                         label = 1415;
                         break L1;
                        }
                        $10793 = (($10790) + 19|0);
                        HEAP8[$10793>>0] = $10789;
                        $10794 = (($4) + 539|0);
                        $10795 = (($10794) + 1|0);
                        $10796 = HEAP8[$10795>>0]|0;
                        __THREW__ = 0;
                        $10797 = (invoke_iii(381,($vinfos169|0),1)|0);
                        $10798 = __THREW__; __THREW__ = 0;
                        $10799 = $10798&1;
                        if ($10799) {
                         label = 1415;
                         break L1;
                        }
                        $10800 = (($10797) + 19|0);
                        $10801 = (($10800) + 1|0);
                        HEAP8[$10801>>0] = $10796;
                        $10802 = (($4) + 541|0);
                        $10803 = HEAP8[$10802>>0]|0;
                        __THREW__ = 0;
                        $10804 = (invoke_iii(381,($vinfos169|0),1)|0);
                        $10805 = __THREW__; __THREW__ = 0;
                        $10806 = $10805&1;
                        if ($10806) {
                         label = 1415;
                         break L1;
                        }
                        $10807 = (($10804) + 18|0);
                        HEAP8[$10807>>0] = $10803;
                        __THREW__ = 0;
                        $10808 = (invoke_iii(381,($vinfos169|0),2)|0);
                        $10809 = __THREW__; __THREW__ = 0;
                        $10810 = $10809&1;
                        if ($10810) {
                         label = 1415;
                         break L1;
                        }
                        $10811 = (($10808) + 17|0);
                        HEAP8[$10811>>0] = 1;
                        $10812 = (($4) + 80|0);
                        $10813 = +HEAPF64[$10812>>3];
                        __THREW__ = 0;
                        $10814 = (invoke_iii(381,($vinfos169|0),2)|0);
                        $10815 = __THREW__; __THREW__ = 0;
                        $10816 = $10815&1;
                        if ($10816) {
                         label = 1415;
                         break L1;
                        }
                        $10817 = (($10814) + 8|0);
                        HEAPF64[$10817>>3] = $10813;
                        $10818 = (($4) + 542|0);
                        $10819 = HEAP8[$10818>>0]|0;
                        __THREW__ = 0;
                        $10820 = (invoke_iii(381,($vinfos169|0),2)|0);
                        $10821 = __THREW__; __THREW__ = 0;
                        $10822 = $10821&1;
                        if ($10822) {
                         label = 1415;
                         break L1;
                        }
                        $10823 = (($10820) + 19|0);
                        HEAP8[$10823>>0] = $10819;
                        $10824 = (($4) + 542|0);
                        $10825 = (($10824) + 1|0);
                        $10826 = HEAP8[$10825>>0]|0;
                        __THREW__ = 0;
                        $10827 = (invoke_iii(381,($vinfos169|0),2)|0);
                        $10828 = __THREW__; __THREW__ = 0;
                        $10829 = $10828&1;
                        if ($10829) {
                         label = 1415;
                         break L1;
                        }
                        $10830 = (($10827) + 19|0);
                        $10831 = (($10830) + 1|0);
                        HEAP8[$10831>>0] = $10826;
                        $10832 = (($4) + 544|0);
                        $10833 = HEAP8[$10832>>0]|0;
                        __THREW__ = 0;
                        $10834 = (invoke_iii(381,($vinfos169|0),2)|0);
                        $10835 = __THREW__; __THREW__ = 0;
                        $10836 = $10835&1;
                        if ($10836) {
                         label = 1415;
                         break L1;
                        }
                        $10837 = (($10834) + 18|0);
                        HEAP8[$10837>>0] = $10833;
                        __THREW__ = 0;
                        $10838 = (invoke_iii(381,($vinfos169|0),3)|0);
                        $10839 = __THREW__; __THREW__ = 0;
                        $10840 = $10839&1;
                        if ($10840) {
                         label = 1415;
                         break L1;
                        }
                        $10841 = (($10838) + 17|0);
                        HEAP8[$10841>>0] = 1;
                        $10842 = (($4) + 120|0);
                        $10843 = +HEAPF64[$10842>>3];
                        __THREW__ = 0;
                        $10844 = (invoke_iii(381,($vinfos169|0),3)|0);
                        $10845 = __THREW__; __THREW__ = 0;
                        $10846 = $10845&1;
                        if ($10846) {
                         label = 1415;
                         break L1;
                        }
                        $10847 = (($10844) + 8|0);
                        HEAPF64[$10847>>3] = $10843;
                        $10848 = (($4) + 545|0);
                        $10849 = HEAP8[$10848>>0]|0;
                        __THREW__ = 0;
                        $10850 = (invoke_iii(381,($vinfos169|0),3)|0);
                        $10851 = __THREW__; __THREW__ = 0;
                        $10852 = $10851&1;
                        if ($10852) {
                         label = 1415;
                         break L1;
                        }
                        $10853 = (($10850) + 19|0);
                        HEAP8[$10853>>0] = $10849;
                        $10854 = (($4) + 545|0);
                        $10855 = (($10854) + 1|0);
                        $10856 = HEAP8[$10855>>0]|0;
                        __THREW__ = 0;
                        $10857 = (invoke_iii(381,($vinfos169|0),3)|0);
                        $10858 = __THREW__; __THREW__ = 0;
                        $10859 = $10858&1;
                        if ($10859) {
                         label = 1415;
                         break L1;
                        }
                        $10860 = (($10857) + 19|0);
                        $10861 = (($10860) + 1|0);
                        HEAP8[$10861>>0] = $10856;
                        $10862 = (($4) + 547|0);
                        $10863 = HEAP8[$10862>>0]|0;
                        __THREW__ = 0;
                        $10864 = (invoke_iii(381,($vinfos169|0),3)|0);
                        $10865 = __THREW__; __THREW__ = 0;
                        $10866 = $10865&1;
                        if ($10866) {
                         label = 1415;
                         break L1;
                        }
                        $10867 = (($10864) + 18|0);
                        HEAP8[$10867>>0] = $10863;
                        __THREW__ = 0;
                        $10868 = (invoke_iii(381,($vinfos169|0),4)|0);
                        $10869 = __THREW__; __THREW__ = 0;
                        $10870 = $10869&1;
                        if ($10870) {
                         label = 1415;
                         break L1;
                        }
                        $10871 = (($10868) + 17|0);
                        HEAP8[$10871>>0] = 1;
                        $10872 = (($4) + 160|0);
                        $10873 = +HEAPF64[$10872>>3];
                        __THREW__ = 0;
                        $10874 = (invoke_iii(381,($vinfos169|0),4)|0);
                        $10875 = __THREW__; __THREW__ = 0;
                        $10876 = $10875&1;
                        if ($10876) {
                         label = 1415;
                         break L1;
                        }
                        $10877 = (($10874) + 8|0);
                        HEAPF64[$10877>>3] = $10873;
                        $10878 = (($4) + 548|0);
                        $10879 = HEAP8[$10878>>0]|0;
                        __THREW__ = 0;
                        $10880 = (invoke_iii(381,($vinfos169|0),4)|0);
                        $10881 = __THREW__; __THREW__ = 0;
                        $10882 = $10881&1;
                        if ($10882) {
                         label = 1415;
                         break L1;
                        }
                        $10883 = (($10880) + 19|0);
                        HEAP8[$10883>>0] = $10879;
                        $10884 = (($4) + 548|0);
                        $10885 = (($10884) + 1|0);
                        $10886 = HEAP8[$10885>>0]|0;
                        __THREW__ = 0;
                        $10887 = (invoke_iii(381,($vinfos169|0),4)|0);
                        $10888 = __THREW__; __THREW__ = 0;
                        $10889 = $10888&1;
                        if ($10889) {
                         label = 1415;
                         break L1;
                        }
                        $10890 = (($10887) + 19|0);
                        $10891 = (($10890) + 1|0);
                        HEAP8[$10891>>0] = $10886;
                        $10892 = (($4) + 550|0);
                        $10893 = HEAP8[$10892>>0]|0;
                        __THREW__ = 0;
                        $10894 = (invoke_iii(381,($vinfos169|0),4)|0);
                        $10895 = __THREW__; __THREW__ = 0;
                        $10896 = $10895&1;
                        if ($10896) {
                         label = 1415;
                         break L1;
                        }
                        $10897 = (($10894) + 18|0);
                        HEAP8[$10897>>0] = $10893;
                        __THREW__ = 0;
                        $10898 = (invoke_iii(381,($vinfos169|0),5)|0);
                        $10899 = __THREW__; __THREW__ = 0;
                        $10900 = $10899&1;
                        if ($10900) {
                         label = 1415;
                         break L1;
                        }
                        $10901 = (($10898) + 17|0);
                        HEAP8[$10901>>0] = 1;
                        $10902 = (($4) + 200|0);
                        $10903 = +HEAPF64[$10902>>3];
                        __THREW__ = 0;
                        $10904 = (invoke_iii(381,($vinfos169|0),5)|0);
                        $10905 = __THREW__; __THREW__ = 0;
                        $10906 = $10905&1;
                        if ($10906) {
                         label = 1415;
                         break L1;
                        }
                        $10907 = (($10904) + 8|0);
                        HEAPF64[$10907>>3] = $10903;
                        $10908 = (($4) + 551|0);
                        $10909 = HEAP8[$10908>>0]|0;
                        __THREW__ = 0;
                        $10910 = (invoke_iii(381,($vinfos169|0),5)|0);
                        $10911 = __THREW__; __THREW__ = 0;
                        $10912 = $10911&1;
                        if ($10912) {
                         label = 1415;
                         break L1;
                        }
                        $10913 = (($10910) + 19|0);
                        HEAP8[$10913>>0] = $10909;
                        $10914 = (($4) + 551|0);
                        $10915 = (($10914) + 1|0);
                        $10916 = HEAP8[$10915>>0]|0;
                        __THREW__ = 0;
                        $10917 = (invoke_iii(381,($vinfos169|0),5)|0);
                        $10918 = __THREW__; __THREW__ = 0;
                        $10919 = $10918&1;
                        if ($10919) {
                         label = 1415;
                         break L1;
                        }
                        $10920 = (($10917) + 19|0);
                        $10921 = (($10920) + 1|0);
                        HEAP8[$10921>>0] = $10916;
                        $10922 = (($4) + 553|0);
                        $10923 = HEAP8[$10922>>0]|0;
                        __THREW__ = 0;
                        $10924 = (invoke_iii(381,($vinfos169|0),5)|0);
                        $10925 = __THREW__; __THREW__ = 0;
                        $10926 = $10925&1;
                        if ($10926) {
                         label = 1415;
                         break L1;
                        }
                        $10927 = (($10924) + 18|0);
                        HEAP8[$10927>>0] = $10923;
                        __THREW__ = 0;
                        invoke_vii(382,($vfree170|0),0);
                        $10928 = __THREW__; __THREW__ = 0;
                        $10929 = $10928&1;
                        if ($10929) {
                         label = 1415;
                         break L1;
                        }
                        $10930 = $1;
                        $10931 = HEAP32[$10930>>2]|0;
                        $10932 = (($10931) + 8|0);
                        $10933 = HEAP32[$10932>>2]|0;
                        __THREW__ = 0;
                        (invoke_iiii($10933|0,($10930|0),($vinfos169|0),($vfree170|0))|0);
                        $10934 = __THREW__; __THREW__ = 0;
                        $10935 = $10934&1;
                        if ($10935) {
                         label = 1416;
                         break L1;
                        }
                        __THREW__ = 0;
                        invoke_vi(366,($vfree170|0));
                        $10936 = __THREW__; __THREW__ = 0;
                        $10937 = $10936&1;
                        if ($10937) {
                         label = 1415;
                         break L1;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos169);
                        break L457;
                       }
                      } while(0);
                     } else {
                     }
                    } while(0);
                    $10938 = $ij5166;
                    $10939 = (($10938) + 1)|0;
                    $ij5166 = $10939;
                   }
                   label = 1421;
                  } else {
                   label = 1421;
                  }
                 } while(0);
                 if ((label|0) == 1421) {
                  label = 0;
                 }
                 $10948 = $bgotonextstatement161;
                 $10949 = $10948&1;
                 if ($10949) {
                  $bgotonextstatement171 = 1;
                  $10950 = (($4) + 360|0);
                  $10951 = +HEAPF64[$10950>>3];
                  $10952 = (($4) + 136|0);
                  $10953 = +HEAPF64[$10952>>3];
                  $10954 = $10951 * $10953;
                  $x380 = $10954;
                  $10955 = (($4) + 336|0);
                  $10956 = +HEAPF64[$10955>>3];
                  $10957 = (($4) + 136|0);
                  $10958 = +HEAPF64[$10957>>3];
                  $10959 = $10956 * $10958;
                  $x381 = $10959;
                  $10960 = (($4) + 136|0);
                  $10961 = +HEAPF64[$10960>>3];
                  $10962 = 1.0 * $10961;
                  $x382 = $10962;
                  $10963 = (($4) + 128|0);
                  $10964 = +HEAPF64[$10963>>3];
                  $10965 = 1.0 * $10964;
                  $x383 = $10965;
                  $10966 = (($4) + 288|0);
                  $10967 = +HEAPF64[$10966>>3];
                  $10968 = -1.0 * $10967;
                  $10969 = $x382;
                  $10970 = $10968 * $10969;
                  $10971 = (($4) + 128|0);
                  $10972 = +HEAPF64[$10971>>3];
                  $10973 = (($4) + 360|0);
                  $10974 = +HEAPF64[$10973>>3];
                  $10975 = $10972 * $10974;
                  $10976 = $10970 + $10975;
                  $x384 = $10976;
                  $10977 = (($4) + 160|0);
                  $10978 = +HEAPF64[$10977>>3];
                  $10979 = -1.5707963267949001 + $10978;
                  $10980 = (+__Z5IKabsd($10979));
                  $10981 = 3.14159265358979 + $10980;
                  $10982 = (+__Z6IKfmoddd($10981,6.2831853071795898));
                  $10983 = -3.14159265358979 + $10982;
                  HEAPF64[$evalcond150>>3] = $10983;
                  $10984 = (($4) + 432|0);
                  $10985 = +HEAPF64[$10984>>3];
                  $10986 = (($evalcond150) + 8|0);
                  HEAPF64[$10986>>3] = $10985;
                  $10987 = $x383;
                  $10988 = -1.0 * $10987;
                  $10989 = (($4) + 288|0);
                  $10990 = +HEAPF64[$10989>>3];
                  $10991 = $10988 + $10990;
                  $10992 = (($evalcond150) + 16|0);
                  HEAPF64[$10992>>3] = $10991;
                  $10993 = $x382;
                  $10994 = -1.0 * $10993;
                  $10995 = (($4) + 360|0);
                  $10996 = +HEAPF64[$10995>>3];
                  $10997 = $10994 + $10996;
                  $10998 = (($evalcond150) + 24|0);
                  HEAPF64[$10998>>3] = $10997;
                  $10999 = $x384;
                  $11000 = (($evalcond150) + 32|0);
                  HEAPF64[$11000>>3] = $10999;
                  $11001 = $x384;
                  $11002 = (($evalcond150) + 40|0);
                  HEAPF64[$11002>>3] = $11001;
                  $11003 = $x380;
                  $11004 = -1.0 + $11003;
                  $11005 = (($4) + 128|0);
                  $11006 = +HEAPF64[$11005>>3];
                  $11007 = (($4) + 288|0);
                  $11008 = +HEAPF64[$11007>>3];
                  $11009 = $11006 * $11008;
                  $11010 = $11004 + $11009;
                  $11011 = (($evalcond150) + 48|0);
                  HEAPF64[$11011>>3] = $11010;
                  $11012 = $x381;
                  $11013 = (($4) + 128|0);
                  $11014 = +HEAPF64[$11013>>3];
                  $11015 = (($4) + 264|0);
                  $11016 = +HEAPF64[$11015>>3];
                  $11017 = $11014 * $11016;
                  $11018 = $11012 + $11017;
                  $11019 = (($evalcond150) + 56|0);
                  HEAPF64[$11019>>3] = $11018;
                  $11020 = (($4) + 312|0);
                  $11021 = +HEAPF64[$11020>>3];
                  $11022 = (($4) + 136|0);
                  $11023 = +HEAPF64[$11022>>3];
                  $11024 = $11021 * $11023;
                  $11025 = (($4) + 128|0);
                  $11026 = +HEAPF64[$11025>>3];
                  $11027 = (($4) + 240|0);
                  $11028 = +HEAPF64[$11027>>3];
                  $11029 = $11026 * $11028;
                  $11030 = $11024 + $11029;
                  $11031 = (($evalcond150) + 64|0);
                  HEAPF64[$11031>>3] = $11030;
                  $11032 = (($4) + 312|0);
                  $11033 = +HEAPF64[$11032>>3];
                  $11034 = -1.0 * $11033;
                  $11035 = $x382;
                  $11036 = $11034 * $11035;
                  $11037 = (($4) + 240|0);
                  $11038 = +HEAPF64[$11037>>3];
                  $11039 = -1.0 * $11038;
                  $11040 = $x383;
                  $11041 = $11039 * $11040;
                  $11042 = $11036 + $11041;
                  $11043 = (($evalcond150) + 72|0);
                  HEAPF64[$11043>>3] = $11042;
                  $11044 = (($4) + 264|0);
                  $11045 = +HEAPF64[$11044>>3];
                  $11046 = -1.0 * $11045;
                  $11047 = $x383;
                  $11048 = $11046 * $11047;
                  $11049 = $x381;
                  $11050 = -1.0 * $11049;
                  $11051 = $11048 + $11050;
                  $11052 = (($evalcond150) + 80|0);
                  HEAPF64[$11052>>3] = $11051;
                  $11053 = (($4) + 288|0);
                  $11054 = +HEAPF64[$11053>>3];
                  $11055 = -1.0 * $11054;
                  $11056 = $x383;
                  $11057 = $11055 * $11056;
                  $11058 = 1.0 + $11057;
                  $11059 = $x380;
                  $11060 = -1.0 * $11059;
                  $11061 = $11058 + $11060;
                  $11062 = (($evalcond150) + 88|0);
                  HEAPF64[$11062>>3] = $11061;
                  $11063 = +HEAPF64[$evalcond150>>3];
                  $11064 = (+__Z5IKabsd($11063));
                  $11065 = $11064 < 9.9999999999999995E-7;
                  L522: do {
                   if ($11065) {
                    $11066 = (($evalcond150) + 8|0);
                    $11067 = +HEAPF64[$11066>>3];
                    $11068 = (+__Z5IKabsd($11067));
                    $11069 = $11068 < 9.9999999999999995E-7;
                    if (!($11069)) {
                     label = 1507;
                     break;
                    }
                    $11070 = (($evalcond150) + 16|0);
                    $11071 = +HEAPF64[$11070>>3];
                    $11072 = (+__Z5IKabsd($11071));
                    $11073 = $11072 < 9.9999999999999995E-7;
                    if (!($11073)) {
                     label = 1507;
                     break;
                    }
                    $11074 = (($evalcond150) + 24|0);
                    $11075 = +HEAPF64[$11074>>3];
                    $11076 = (+__Z5IKabsd($11075));
                    $11077 = $11076 < 9.9999999999999995E-7;
                    if (!($11077)) {
                     label = 1507;
                     break;
                    }
                    $11078 = (($evalcond150) + 32|0);
                    $11079 = +HEAPF64[$11078>>3];
                    $11080 = (+__Z5IKabsd($11079));
                    $11081 = $11080 < 9.9999999999999995E-7;
                    if (!($11081)) {
                     label = 1507;
                     break;
                    }
                    $11082 = (($evalcond150) + 40|0);
                    $11083 = +HEAPF64[$11082>>3];
                    $11084 = (+__Z5IKabsd($11083));
                    $11085 = $11084 < 9.9999999999999995E-7;
                    if (!($11085)) {
                     label = 1507;
                     break;
                    }
                    $11086 = (($evalcond150) + 48|0);
                    $11087 = +HEAPF64[$11086>>3];
                    $11088 = (+__Z5IKabsd($11087));
                    $11089 = $11088 < 9.9999999999999995E-7;
                    if (!($11089)) {
                     label = 1507;
                     break;
                    }
                    $11090 = (($evalcond150) + 56|0);
                    $11091 = +HEAPF64[$11090>>3];
                    $11092 = (+__Z5IKabsd($11091));
                    $11093 = $11092 < 9.9999999999999995E-7;
                    if (!($11093)) {
                     label = 1507;
                     break;
                    }
                    $11094 = (($evalcond150) + 64|0);
                    $11095 = +HEAPF64[$11094>>3];
                    $11096 = (+__Z5IKabsd($11095));
                    $11097 = $11096 < 9.9999999999999995E-7;
                    if (!($11097)) {
                     label = 1507;
                     break;
                    }
                    $11098 = (($evalcond150) + 72|0);
                    $11099 = +HEAPF64[$11098>>3];
                    $11100 = (+__Z5IKabsd($11099));
                    $11101 = $11100 < 9.9999999999999995E-7;
                    if (!($11101)) {
                     label = 1507;
                     break;
                    }
                    $11102 = (($evalcond150) + 80|0);
                    $11103 = +HEAPF64[$11102>>3];
                    $11104 = (+__Z5IKabsd($11103));
                    $11105 = $11104 < 9.9999999999999995E-7;
                    if (!($11105)) {
                     label = 1507;
                     break;
                    }
                    $11106 = (($evalcond150) + 88|0);
                    $11107 = +HEAPF64[$11106>>3];
                    $11108 = (+__Z5IKabsd($11107));
                    $11109 = $11108 < 9.9999999999999995E-7;
                    if (!($11109)) {
                     label = 1507;
                     break;
                    }
                    $bgotonextstatement171 = 0;
                    ;HEAP8[$j5valid175+0>>0]=0|0;
                    $11110 = (($4) + 553|0);
                    HEAP8[$11110>>0] = 1;
                    $11111 = (($4) + 408|0);
                    $11112 = +HEAPF64[$11111>>3];
                    $11113 = (+__Z5IKabsd($11112));
                    $11114 = $11113 < 1.9999999999999999E-6;
                    do {
                     if ($11114) {
                      $11115 = (($4) + 384|0);
                      $11116 = +HEAPF64[$11115>>3];
                      $11117 = -1.0 * $11116;
                      $11118 = (+__Z5IKabsd($11117));
                      $11119 = $11118 < 1.9999999999999999E-6;
                      if (!($11119)) {
                       break;
                      }
                      $11120 = (($4) + 408|0);
                      $11121 = +HEAPF64[$11120>>3];
                      $11122 = (+__Z5IKsqrd($11121));
                      $11123 = (($4) + 384|0);
                      $11124 = +HEAPF64[$11123>>3];
                      $11125 = -1.0 * $11124;
                      $11126 = (+__Z5IKsqrd($11125));
                      $11127 = $11122 + $11126;
                      $11128 = $11127 - 1.0;
                      $11129 = (+__Z5IKabsd($11128));
                      $11130 = $11129 <= 1.9999999999999999E-6;
                      if (!($11130)) {
                       break;
                      }
                      break L522;
                     }
                    } while(0);
                    $11131 = (($4) + 408|0);
                    $11132 = +HEAPF64[$11131>>3];
                    $11133 = (($4) + 384|0);
                    $11134 = +HEAPF64[$11133>>3];
                    $11135 = -1.0 * $11134;
                    $11136 = (+__Z7IKatan2dd($11132,$11135));
                    HEAPF64[$j5array172>>3] = $11136;
                    $11137 = +HEAPF64[$j5array172>>3];
                    $11138 = (+__Z5IKsind($11137));
                    HEAPF64[$sj5array174>>3] = $11138;
                    $11139 = +HEAPF64[$j5array172>>3];
                    $11140 = (+__Z5IKcosd($11139));
                    HEAPF64[$cj5array173>>3] = $11140;
                    $11141 = +HEAPF64[$j5array172>>3];
                    $11142 = $11141 > 3.14159265358979;
                    if ($11142) {
                     $11143 = +HEAPF64[$j5array172>>3];
                     $11144 = $11143 - 6.2831853071795898;
                     HEAPF64[$j5array172>>3] = $11144;
                    } else {
                     $11145 = +HEAPF64[$j5array172>>3];
                     $11146 = $11145 < -3.14159265358979;
                     if ($11146) {
                      $11147 = +HEAPF64[$j5array172>>3];
                      $11148 = $11147 + 6.2831853071795898;
                      HEAPF64[$j5array172>>3] = $11148;
                     }
                    }
                    HEAP8[$j5valid175>>0] = 1;
                    $ij5176 = 0;
                    while(1) {
                     $11149 = $ij5176;
                     $11150 = ($11149|0)<(1);
                     if (!($11150)) {
                      break;
                     }
                     $11151 = $ij5176;
                     $11152 = (($j5valid175) + ($11151)|0);
                     $11153 = HEAP8[$11152>>0]|0;
                     $11154 = $11153&1;
                     L550: do {
                      if ($11154) {
                       $11155 = $ij5176;
                       $11156 = $11155&255;
                       $11157 = (($4) + 551|0);
                       HEAP8[$11157>>0] = $11156;
                       $11158 = (($4) + 551|0);
                       $11159 = (($11158) + 1|0);
                       HEAP8[$11159>>0] = -1;
                       $11160 = $ij5176;
                       $11161 = (($11160) + 1)|0;
                       $iij5177 = $11161;
                       L553: while(1) {
                        $11162 = $iij5177;
                        $11163 = ($11162|0)<(1);
                        if (!($11163)) {
                         break;
                        }
                        $11164 = $iij5177;
                        $11165 = (($j5valid175) + ($11164)|0);
                        $11166 = HEAP8[$11165>>0]|0;
                        $11167 = $11166&1;
                        do {
                         if ($11167) {
                          $11168 = $ij5176;
                          $11169 = (($cj5array173) + ($11168<<3)|0);
                          $11170 = +HEAPF64[$11169>>3];
                          $11171 = $iij5177;
                          $11172 = (($cj5array173) + ($11171<<3)|0);
                          $11173 = +HEAPF64[$11172>>3];
                          $11174 = $11170 - $11173;
                          $11175 = (+__Z5IKabsd($11174));
                          $11176 = $11175 < 9.9999999999999995E-7;
                          if (!($11176)) {
                           break;
                          }
                          $11177 = $ij5176;
                          $11178 = (($sj5array174) + ($11177<<3)|0);
                          $11179 = +HEAPF64[$11178>>3];
                          $11180 = $iij5177;
                          $11181 = (($sj5array174) + ($11180<<3)|0);
                          $11182 = +HEAPF64[$11181>>3];
                          $11183 = $11179 - $11182;
                          $11184 = (+__Z5IKabsd($11183));
                          $11185 = $11184 < 9.9999999999999995E-7;
                          if ($11185) {
                           label = 1454;
                           break L553;
                          }
                         }
                        } while(0);
                        $11192 = $iij5177;
                        $11193 = (($11192) + 1)|0;
                        $iij5177 = $11193;
                       }
                       if ((label|0) == 1454) {
                        label = 0;
                        $11186 = $iij5177;
                        $11187 = (($j5valid175) + ($11186)|0);
                        HEAP8[$11187>>0] = 0;
                        $11188 = $iij5177;
                        $11189 = $11188&255;
                        $11190 = (($4) + 551|0);
                        $11191 = (($11190) + 1|0);
                        HEAP8[$11191>>0] = $11189;
                       }
                       $11194 = $ij5176;
                       $11195 = (($j5array172) + ($11194<<3)|0);
                       $11196 = +HEAPF64[$11195>>3];
                       $11197 = (($4) + 200|0);
                       HEAPF64[$11197>>3] = $11196;
                       $11198 = $ij5176;
                       $11199 = (($cj5array173) + ($11198<<3)|0);
                       $11200 = +HEAPF64[$11199>>3];
                       $11201 = (($4) + 208|0);
                       HEAPF64[$11201>>3] = $11200;
                       $11202 = $ij5176;
                       $11203 = (($sj5array174) + ($11202<<3)|0);
                       $11204 = +HEAPF64[$11203>>3];
                       $11205 = (($4) + 216|0);
                       HEAPF64[$11205>>3] = $11204;
                       $11206 = (($4) + 200|0);
                       $11207 = +HEAPF64[$11206>>3];
                       $11208 = (+__Z5IKcosd($11207));
                       $x385 = $11208;
                       $11209 = (($4) + 200|0);
                       $11210 = +HEAPF64[$11209>>3];
                       $11211 = (+__Z5IKsind($11210));
                       $x386 = $11211;
                       $11212 = (($4) + 360|0);
                       $11213 = +HEAPF64[$11212>>3];
                       $11214 = 1.0 * $11213;
                       $x387 = $11214;
                       $11215 = $x386;
                       $11216 = 1.0 * $11215;
                       $x388 = $11216;
                       $11217 = $x385;
                       $11218 = 1.0 * $11217;
                       $x389 = $11218;
                       $11219 = $x385;
                       $11220 = (($4) + 384|0);
                       $11221 = +HEAPF64[$11220>>3];
                       $11222 = $11219 + $11221;
                       HEAPF64[$evalcond178>>3] = $11222;
                       $11223 = $x388;
                       $11224 = -1.0 * $11223;
                       $11225 = (($4) + 408|0);
                       $11226 = +HEAPF64[$11225>>3];
                       $11227 = $11224 + $11226;
                       $11228 = (($evalcond178) + 8|0);
                       HEAPF64[$11228>>3] = $11227;
                       $11229 = (($4) + 360|0);
                       $11230 = +HEAPF64[$11229>>3];
                       $11231 = $x385;
                       $11232 = $11230 * $11231;
                       $11233 = (($4) + 264|0);
                       $11234 = +HEAPF64[$11233>>3];
                       $11235 = $11232 + $11234;
                       $11236 = (($evalcond178) + 16|0);
                       HEAPF64[$11236>>3] = $11235;
                       $11237 = (($4) + 360|0);
                       $11238 = +HEAPF64[$11237>>3];
                       $11239 = $x386;
                       $11240 = $11238 * $11239;
                       $11241 = (($4) + 240|0);
                       $11242 = +HEAPF64[$11241>>3];
                       $11243 = $11240 + $11242;
                       $11244 = (($evalcond178) + 24|0);
                       HEAPF64[$11244>>3] = $11243;
                       $11245 = (($4) + 288|0);
                       $11246 = +HEAPF64[$11245>>3];
                       $11247 = -1.0 * $11246;
                       $11248 = $x389;
                       $11249 = $11247 * $11248;
                       $11250 = (($4) + 336|0);
                       $11251 = +HEAPF64[$11250>>3];
                       $11252 = $11249 + $11251;
                       $11253 = (($evalcond178) + 32|0);
                       HEAPF64[$11253>>3] = $11252;
                       $11254 = (($4) + 288|0);
                       $11255 = +HEAPF64[$11254>>3];
                       $11256 = -1.0 * $11255;
                       $11257 = $x388;
                       $11258 = $11256 * $11257;
                       $11259 = (($4) + 312|0);
                       $11260 = +HEAPF64[$11259>>3];
                       $11261 = $11258 + $11260;
                       $11262 = (($evalcond178) + 40|0);
                       HEAPF64[$11262>>3] = $11261;
                       $11263 = (($4) + 240|0);
                       $11264 = +HEAPF64[$11263>>3];
                       $11265 = -1.0 * $11264;
                       $11266 = $x387;
                       $11267 = $11265 * $11266;
                       $11268 = $x388;
                       $11269 = -1.0 * $11268;
                       $11270 = $11267 + $11269;
                       $11271 = (($4) + 288|0);
                       $11272 = +HEAPF64[$11271>>3];
                       $11273 = (($4) + 312|0);
                       $11274 = +HEAPF64[$11273>>3];
                       $11275 = $11272 * $11274;
                       $11276 = $11270 + $11275;
                       $11277 = (($evalcond178) + 48|0);
                       HEAPF64[$11277>>3] = $11276;
                       $11278 = (($4) + 264|0);
                       $11279 = +HEAPF64[$11278>>3];
                       $11280 = -1.0 * $11279;
                       $11281 = $x387;
                       $11282 = $11280 * $11281;
                       $11283 = $x389;
                       $11284 = -1.0 * $11283;
                       $11285 = $11282 + $11284;
                       $11286 = (($4) + 288|0);
                       $11287 = +HEAPF64[$11286>>3];
                       $11288 = (($4) + 336|0);
                       $11289 = +HEAPF64[$11288>>3];
                       $11290 = $11287 * $11289;
                       $11291 = $11285 + $11290;
                       $11292 = (($evalcond178) + 56|0);
                       HEAPF64[$11292>>3] = $11291;
                       $11293 = +HEAPF64[$evalcond178>>3];
                       $11294 = (+__Z5IKabsd($11293));
                       $11295 = $11294 > 5.0000000000000004E-6;
                       do {
                        if (!($11295)) {
                         $11296 = (($evalcond178) + 8|0);
                         $11297 = +HEAPF64[$11296>>3];
                         $11298 = (+__Z5IKabsd($11297));
                         $11299 = $11298 > 5.0000000000000004E-6;
                         if ($11299) {
                          break;
                         }
                         $11300 = (($evalcond178) + 16|0);
                         $11301 = +HEAPF64[$11300>>3];
                         $11302 = (+__Z5IKabsd($11301));
                         $11303 = $11302 > 5.0000000000000004E-6;
                         if ($11303) {
                          break;
                         }
                         $11304 = (($evalcond178) + 24|0);
                         $11305 = +HEAPF64[$11304>>3];
                         $11306 = (+__Z5IKabsd($11305));
                         $11307 = $11306 > 5.0000000000000004E-6;
                         if ($11307) {
                          break;
                         }
                         $11308 = (($evalcond178) + 32|0);
                         $11309 = +HEAPF64[$11308>>3];
                         $11310 = (+__Z5IKabsd($11309));
                         $11311 = $11310 > 5.0000000000000004E-6;
                         if ($11311) {
                          break;
                         }
                         $11312 = (($evalcond178) + 40|0);
                         $11313 = +HEAPF64[$11312>>3];
                         $11314 = (+__Z5IKabsd($11313));
                         $11315 = $11314 > 5.0000000000000004E-6;
                         if ($11315) {
                          break;
                         }
                         $11316 = (($evalcond178) + 48|0);
                         $11317 = +HEAPF64[$11316>>3];
                         $11318 = (+__Z5IKabsd($11317));
                         $11319 = $11318 > 5.0000000000000004E-6;
                         if ($11319) {
                          break;
                         }
                         $11320 = (($evalcond178) + 56|0);
                         $11321 = +HEAPF64[$11320>>3];
                         $11322 = (+__Z5IKabsd($11321));
                         $11323 = $11322 > 5.0000000000000004E-6;
                         if ($11323) {
                          break;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos179,6);
                         __THREW__ = 0;
                         $11324 = (invoke_iii(381,($vinfos179|0),0)|0);
                         $11325 = __THREW__; __THREW__ = 0;
                         $11326 = $11325&1;
                         if ($11326) {
                          label = 1501;
                          break L1;
                         }
                         $11327 = (($11324) + 17|0);
                         HEAP8[$11327>>0] = 1;
                         $11328 = +HEAPF64[$4>>3];
                         __THREW__ = 0;
                         $11329 = (invoke_iii(381,($vinfos179|0),0)|0);
                         $11330 = __THREW__; __THREW__ = 0;
                         $11331 = $11330&1;
                         if ($11331) {
                          label = 1501;
                          break L1;
                         }
                         $11332 = (($11329) + 8|0);
                         HEAPF64[$11332>>3] = $11328;
                         $11333 = (($4) + 536|0);
                         $11334 = HEAP8[$11333>>0]|0;
                         __THREW__ = 0;
                         $11335 = (invoke_iii(381,($vinfos179|0),0)|0);
                         $11336 = __THREW__; __THREW__ = 0;
                         $11337 = $11336&1;
                         if ($11337) {
                          label = 1501;
                          break L1;
                         }
                         $11338 = (($11335) + 19|0);
                         HEAP8[$11338>>0] = $11334;
                         $11339 = (($4) + 536|0);
                         $11340 = (($11339) + 1|0);
                         $11341 = HEAP8[$11340>>0]|0;
                         __THREW__ = 0;
                         $11342 = (invoke_iii(381,($vinfos179|0),0)|0);
                         $11343 = __THREW__; __THREW__ = 0;
                         $11344 = $11343&1;
                         if ($11344) {
                          label = 1501;
                          break L1;
                         }
                         $11345 = (($11342) + 19|0);
                         $11346 = (($11345) + 1|0);
                         HEAP8[$11346>>0] = $11341;
                         $11347 = (($4) + 538|0);
                         $11348 = HEAP8[$11347>>0]|0;
                         __THREW__ = 0;
                         $11349 = (invoke_iii(381,($vinfos179|0),0)|0);
                         $11350 = __THREW__; __THREW__ = 0;
                         $11351 = $11350&1;
                         if ($11351) {
                          label = 1501;
                          break L1;
                         }
                         $11352 = (($11349) + 18|0);
                         HEAP8[$11352>>0] = $11348;
                         __THREW__ = 0;
                         $11353 = (invoke_iii(381,($vinfos179|0),1)|0);
                         $11354 = __THREW__; __THREW__ = 0;
                         $11355 = $11354&1;
                         if ($11355) {
                          label = 1501;
                          break L1;
                         }
                         $11356 = (($11353) + 17|0);
                         HEAP8[$11356>>0] = 1;
                         $11357 = (($4) + 40|0);
                         $11358 = +HEAPF64[$11357>>3];
                         __THREW__ = 0;
                         $11359 = (invoke_iii(381,($vinfos179|0),1)|0);
                         $11360 = __THREW__; __THREW__ = 0;
                         $11361 = $11360&1;
                         if ($11361) {
                          label = 1501;
                          break L1;
                         }
                         $11362 = (($11359) + 8|0);
                         HEAPF64[$11362>>3] = $11358;
                         $11363 = (($4) + 539|0);
                         $11364 = HEAP8[$11363>>0]|0;
                         __THREW__ = 0;
                         $11365 = (invoke_iii(381,($vinfos179|0),1)|0);
                         $11366 = __THREW__; __THREW__ = 0;
                         $11367 = $11366&1;
                         if ($11367) {
                          label = 1501;
                          break L1;
                         }
                         $11368 = (($11365) + 19|0);
                         HEAP8[$11368>>0] = $11364;
                         $11369 = (($4) + 539|0);
                         $11370 = (($11369) + 1|0);
                         $11371 = HEAP8[$11370>>0]|0;
                         __THREW__ = 0;
                         $11372 = (invoke_iii(381,($vinfos179|0),1)|0);
                         $11373 = __THREW__; __THREW__ = 0;
                         $11374 = $11373&1;
                         if ($11374) {
                          label = 1501;
                          break L1;
                         }
                         $11375 = (($11372) + 19|0);
                         $11376 = (($11375) + 1|0);
                         HEAP8[$11376>>0] = $11371;
                         $11377 = (($4) + 541|0);
                         $11378 = HEAP8[$11377>>0]|0;
                         __THREW__ = 0;
                         $11379 = (invoke_iii(381,($vinfos179|0),1)|0);
                         $11380 = __THREW__; __THREW__ = 0;
                         $11381 = $11380&1;
                         if ($11381) {
                          label = 1501;
                          break L1;
                         }
                         $11382 = (($11379) + 18|0);
                         HEAP8[$11382>>0] = $11378;
                         __THREW__ = 0;
                         $11383 = (invoke_iii(381,($vinfos179|0),2)|0);
                         $11384 = __THREW__; __THREW__ = 0;
                         $11385 = $11384&1;
                         if ($11385) {
                          label = 1501;
                          break L1;
                         }
                         $11386 = (($11383) + 17|0);
                         HEAP8[$11386>>0] = 1;
                         $11387 = (($4) + 80|0);
                         $11388 = +HEAPF64[$11387>>3];
                         __THREW__ = 0;
                         $11389 = (invoke_iii(381,($vinfos179|0),2)|0);
                         $11390 = __THREW__; __THREW__ = 0;
                         $11391 = $11390&1;
                         if ($11391) {
                          label = 1501;
                          break L1;
                         }
                         $11392 = (($11389) + 8|0);
                         HEAPF64[$11392>>3] = $11388;
                         $11393 = (($4) + 542|0);
                         $11394 = HEAP8[$11393>>0]|0;
                         __THREW__ = 0;
                         $11395 = (invoke_iii(381,($vinfos179|0),2)|0);
                         $11396 = __THREW__; __THREW__ = 0;
                         $11397 = $11396&1;
                         if ($11397) {
                          label = 1501;
                          break L1;
                         }
                         $11398 = (($11395) + 19|0);
                         HEAP8[$11398>>0] = $11394;
                         $11399 = (($4) + 542|0);
                         $11400 = (($11399) + 1|0);
                         $11401 = HEAP8[$11400>>0]|0;
                         __THREW__ = 0;
                         $11402 = (invoke_iii(381,($vinfos179|0),2)|0);
                         $11403 = __THREW__; __THREW__ = 0;
                         $11404 = $11403&1;
                         if ($11404) {
                          label = 1501;
                          break L1;
                         }
                         $11405 = (($11402) + 19|0);
                         $11406 = (($11405) + 1|0);
                         HEAP8[$11406>>0] = $11401;
                         $11407 = (($4) + 544|0);
                         $11408 = HEAP8[$11407>>0]|0;
                         __THREW__ = 0;
                         $11409 = (invoke_iii(381,($vinfos179|0),2)|0);
                         $11410 = __THREW__; __THREW__ = 0;
                         $11411 = $11410&1;
                         if ($11411) {
                          label = 1501;
                          break L1;
                         }
                         $11412 = (($11409) + 18|0);
                         HEAP8[$11412>>0] = $11408;
                         __THREW__ = 0;
                         $11413 = (invoke_iii(381,($vinfos179|0),3)|0);
                         $11414 = __THREW__; __THREW__ = 0;
                         $11415 = $11414&1;
                         if ($11415) {
                          label = 1501;
                          break L1;
                         }
                         $11416 = (($11413) + 17|0);
                         HEAP8[$11416>>0] = 1;
                         $11417 = (($4) + 120|0);
                         $11418 = +HEAPF64[$11417>>3];
                         __THREW__ = 0;
                         $11419 = (invoke_iii(381,($vinfos179|0),3)|0);
                         $11420 = __THREW__; __THREW__ = 0;
                         $11421 = $11420&1;
                         if ($11421) {
                          label = 1501;
                          break L1;
                         }
                         $11422 = (($11419) + 8|0);
                         HEAPF64[$11422>>3] = $11418;
                         $11423 = (($4) + 545|0);
                         $11424 = HEAP8[$11423>>0]|0;
                         __THREW__ = 0;
                         $11425 = (invoke_iii(381,($vinfos179|0),3)|0);
                         $11426 = __THREW__; __THREW__ = 0;
                         $11427 = $11426&1;
                         if ($11427) {
                          label = 1501;
                          break L1;
                         }
                         $11428 = (($11425) + 19|0);
                         HEAP8[$11428>>0] = $11424;
                         $11429 = (($4) + 545|0);
                         $11430 = (($11429) + 1|0);
                         $11431 = HEAP8[$11430>>0]|0;
                         __THREW__ = 0;
                         $11432 = (invoke_iii(381,($vinfos179|0),3)|0);
                         $11433 = __THREW__; __THREW__ = 0;
                         $11434 = $11433&1;
                         if ($11434) {
                          label = 1501;
                          break L1;
                         }
                         $11435 = (($11432) + 19|0);
                         $11436 = (($11435) + 1|0);
                         HEAP8[$11436>>0] = $11431;
                         $11437 = (($4) + 547|0);
                         $11438 = HEAP8[$11437>>0]|0;
                         __THREW__ = 0;
                         $11439 = (invoke_iii(381,($vinfos179|0),3)|0);
                         $11440 = __THREW__; __THREW__ = 0;
                         $11441 = $11440&1;
                         if ($11441) {
                          label = 1501;
                          break L1;
                         }
                         $11442 = (($11439) + 18|0);
                         HEAP8[$11442>>0] = $11438;
                         __THREW__ = 0;
                         $11443 = (invoke_iii(381,($vinfos179|0),4)|0);
                         $11444 = __THREW__; __THREW__ = 0;
                         $11445 = $11444&1;
                         if ($11445) {
                          label = 1501;
                          break L1;
                         }
                         $11446 = (($11443) + 17|0);
                         HEAP8[$11446>>0] = 1;
                         $11447 = (($4) + 160|0);
                         $11448 = +HEAPF64[$11447>>3];
                         __THREW__ = 0;
                         $11449 = (invoke_iii(381,($vinfos179|0),4)|0);
                         $11450 = __THREW__; __THREW__ = 0;
                         $11451 = $11450&1;
                         if ($11451) {
                          label = 1501;
                          break L1;
                         }
                         $11452 = (($11449) + 8|0);
                         HEAPF64[$11452>>3] = $11448;
                         $11453 = (($4) + 548|0);
                         $11454 = HEAP8[$11453>>0]|0;
                         __THREW__ = 0;
                         $11455 = (invoke_iii(381,($vinfos179|0),4)|0);
                         $11456 = __THREW__; __THREW__ = 0;
                         $11457 = $11456&1;
                         if ($11457) {
                          label = 1501;
                          break L1;
                         }
                         $11458 = (($11455) + 19|0);
                         HEAP8[$11458>>0] = $11454;
                         $11459 = (($4) + 548|0);
                         $11460 = (($11459) + 1|0);
                         $11461 = HEAP8[$11460>>0]|0;
                         __THREW__ = 0;
                         $11462 = (invoke_iii(381,($vinfos179|0),4)|0);
                         $11463 = __THREW__; __THREW__ = 0;
                         $11464 = $11463&1;
                         if ($11464) {
                          label = 1501;
                          break L1;
                         }
                         $11465 = (($11462) + 19|0);
                         $11466 = (($11465) + 1|0);
                         HEAP8[$11466>>0] = $11461;
                         $11467 = (($4) + 550|0);
                         $11468 = HEAP8[$11467>>0]|0;
                         __THREW__ = 0;
                         $11469 = (invoke_iii(381,($vinfos179|0),4)|0);
                         $11470 = __THREW__; __THREW__ = 0;
                         $11471 = $11470&1;
                         if ($11471) {
                          label = 1501;
                          break L1;
                         }
                         $11472 = (($11469) + 18|0);
                         HEAP8[$11472>>0] = $11468;
                         __THREW__ = 0;
                         $11473 = (invoke_iii(381,($vinfos179|0),5)|0);
                         $11474 = __THREW__; __THREW__ = 0;
                         $11475 = $11474&1;
                         if ($11475) {
                          label = 1501;
                          break L1;
                         }
                         $11476 = (($11473) + 17|0);
                         HEAP8[$11476>>0] = 1;
                         $11477 = (($4) + 200|0);
                         $11478 = +HEAPF64[$11477>>3];
                         __THREW__ = 0;
                         $11479 = (invoke_iii(381,($vinfos179|0),5)|0);
                         $11480 = __THREW__; __THREW__ = 0;
                         $11481 = $11480&1;
                         if ($11481) {
                          label = 1501;
                          break L1;
                         }
                         $11482 = (($11479) + 8|0);
                         HEAPF64[$11482>>3] = $11478;
                         $11483 = (($4) + 551|0);
                         $11484 = HEAP8[$11483>>0]|0;
                         __THREW__ = 0;
                         $11485 = (invoke_iii(381,($vinfos179|0),5)|0);
                         $11486 = __THREW__; __THREW__ = 0;
                         $11487 = $11486&1;
                         if ($11487) {
                          label = 1501;
                          break L1;
                         }
                         $11488 = (($11485) + 19|0);
                         HEAP8[$11488>>0] = $11484;
                         $11489 = (($4) + 551|0);
                         $11490 = (($11489) + 1|0);
                         $11491 = HEAP8[$11490>>0]|0;
                         __THREW__ = 0;
                         $11492 = (invoke_iii(381,($vinfos179|0),5)|0);
                         $11493 = __THREW__; __THREW__ = 0;
                         $11494 = $11493&1;
                         if ($11494) {
                          label = 1501;
                          break L1;
                         }
                         $11495 = (($11492) + 19|0);
                         $11496 = (($11495) + 1|0);
                         HEAP8[$11496>>0] = $11491;
                         $11497 = (($4) + 553|0);
                         $11498 = HEAP8[$11497>>0]|0;
                         __THREW__ = 0;
                         $11499 = (invoke_iii(381,($vinfos179|0),5)|0);
                         $11500 = __THREW__; __THREW__ = 0;
                         $11501 = $11500&1;
                         if ($11501) {
                          label = 1501;
                          break L1;
                         }
                         $11502 = (($11499) + 18|0);
                         HEAP8[$11502>>0] = $11498;
                         __THREW__ = 0;
                         invoke_vii(382,($vfree180|0),0);
                         $11503 = __THREW__; __THREW__ = 0;
                         $11504 = $11503&1;
                         if ($11504) {
                          label = 1501;
                          break L1;
                         }
                         $11505 = $1;
                         $11506 = HEAP32[$11505>>2]|0;
                         $11507 = (($11506) + 8|0);
                         $11508 = HEAP32[$11507>>2]|0;
                         __THREW__ = 0;
                         (invoke_iiii($11508|0,($11505|0),($vinfos179|0),($vfree180|0))|0);
                         $11509 = __THREW__; __THREW__ = 0;
                         $11510 = $11509&1;
                         if ($11510) {
                          label = 1502;
                          break L1;
                         }
                         __THREW__ = 0;
                         invoke_vi(366,($vfree180|0));
                         $11511 = __THREW__; __THREW__ = 0;
                         $11512 = $11511&1;
                         if ($11512) {
                          label = 1501;
                          break L1;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos179);
                         break L550;
                        }
                       } while(0);
                      } else {
                      }
                     } while(0);
                     $11513 = $ij5176;
                     $11514 = (($11513) + 1)|0;
                     $ij5176 = $11514;
                    }
                    label = 1507;
                   } else {
                    label = 1507;
                   }
                  } while(0);
                  if ((label|0) == 1507) {
                   label = 0;
                  }
                  $11523 = $bgotonextstatement171;
                  $11524 = $11523&1;
                  if ($11524) {
                   $bgotonextstatement181 = 1;
                   $11525 = (($4) + 288|0);
                   $11526 = +HEAPF64[$11525>>3];
                   $11527 = -1.0 * $11526;
                   $11528 = (($4) + 136|0);
                   $11529 = +HEAPF64[$11528>>3];
                   $11530 = $11527 * $11529;
                   $11531 = (($4) + 128|0);
                   $11532 = +HEAPF64[$11531>>3];
                   $11533 = (($4) + 360|0);
                   $11534 = +HEAPF64[$11533>>3];
                   $11535 = $11532 * $11534;
                   $11536 = $11530 + $11535;
                   $x390 = $11536;
                   $11537 = (($4) + 312|0);
                   $11538 = +HEAPF64[$11537>>3];
                   $11539 = (($4) + 136|0);
                   $11540 = +HEAPF64[$11539>>3];
                   $11541 = $11538 * $11540;
                   $11542 = (($4) + 128|0);
                   $11543 = +HEAPF64[$11542>>3];
                   $11544 = (($4) + 240|0);
                   $11545 = +HEAPF64[$11544>>3];
                   $11546 = $11543 * $11545;
                   $11547 = $11541 + $11546;
                   $x391 = $11547;
                   $11548 = (($4) + 336|0);
                   $11549 = +HEAPF64[$11548>>3];
                   $11550 = (($4) + 136|0);
                   $11551 = +HEAPF64[$11550>>3];
                   $11552 = $11549 * $11551;
                   $11553 = (($4) + 128|0);
                   $11554 = +HEAPF64[$11553>>3];
                   $11555 = (($4) + 264|0);
                   $11556 = +HEAPF64[$11555>>3];
                   $11557 = $11554 * $11556;
                   $11558 = $11552 + $11557;
                   $x392 = $11558;
                   $11559 = (($4) + 360|0);
                   $11560 = +HEAPF64[$11559>>3];
                   $11561 = (($4) + 136|0);
                   $11562 = +HEAPF64[$11561>>3];
                   $11563 = $11560 * $11562;
                   $11564 = 1.0 + $11563;
                   $11565 = (($4) + 128|0);
                   $11566 = +HEAPF64[$11565>>3];
                   $11567 = (($4) + 288|0);
                   $11568 = +HEAPF64[$11567>>3];
                   $11569 = $11566 * $11568;
                   $11570 = $11564 + $11569;
                   $x393 = $11570;
                   $11571 = (($4) + 160|0);
                   $11572 = +HEAPF64[$11571>>3];
                   $11573 = 1.5707963267949001 + $11572;
                   $11574 = (+__Z5IKabsd($11573));
                   $11575 = 3.14159265358979 + $11574;
                   $11576 = (+__Z6IKfmoddd($11575,6.2831853071795898));
                   $11577 = -3.14159265358979 + $11576;
                   HEAPF64[$evalcond150>>3] = $11577;
                   $11578 = (($4) + 432|0);
                   $11579 = +HEAPF64[$11578>>3];
                   $11580 = (($evalcond150) + 8|0);
                   HEAPF64[$11580>>3] = $11579;
                   $11581 = (($4) + 128|0);
                   $11582 = +HEAPF64[$11581>>3];
                   $11583 = (($4) + 288|0);
                   $11584 = +HEAPF64[$11583>>3];
                   $11585 = $11582 + $11584;
                   $11586 = (($evalcond150) + 16|0);
                   HEAPF64[$11586>>3] = $11585;
                   $11587 = (($4) + 136|0);
                   $11588 = +HEAPF64[$11587>>3];
                   $11589 = (($4) + 360|0);
                   $11590 = +HEAPF64[$11589>>3];
                   $11591 = $11588 + $11590;
                   $11592 = (($evalcond150) + 24|0);
                   HEAPF64[$11592>>3] = $11591;
                   $11593 = $x390;
                   $11594 = (($evalcond150) + 32|0);
                   HEAPF64[$11594>>3] = $11593;
                   $11595 = $x390;
                   $11596 = (($evalcond150) + 40|0);
                   HEAPF64[$11596>>3] = $11595;
                   $11597 = $x393;
                   $11598 = (($evalcond150) + 48|0);
                   HEAPF64[$11598>>3] = $11597;
                   $11599 = $x392;
                   $11600 = (($evalcond150) + 56|0);
                   HEAPF64[$11600>>3] = $11599;
                   $11601 = $x391;
                   $11602 = (($evalcond150) + 64|0);
                   HEAPF64[$11602>>3] = $11601;
                   $11603 = $x391;
                   $11604 = (($evalcond150) + 72|0);
                   HEAPF64[$11604>>3] = $11603;
                   $11605 = $x392;
                   $11606 = (($evalcond150) + 80|0);
                   HEAPF64[$11606>>3] = $11605;
                   $11607 = $x393;
                   $11608 = (($evalcond150) + 88|0);
                   HEAPF64[$11608>>3] = $11607;
                   $11609 = +HEAPF64[$evalcond150>>3];
                   $11610 = (+__Z5IKabsd($11609));
                   $11611 = $11610 < 9.9999999999999995E-7;
                   L615: do {
                    if ($11611) {
                     $11612 = (($evalcond150) + 8|0);
                     $11613 = +HEAPF64[$11612>>3];
                     $11614 = (+__Z5IKabsd($11613));
                     $11615 = $11614 < 9.9999999999999995E-7;
                     if (!($11615)) {
                      label = 1593;
                      break;
                     }
                     $11616 = (($evalcond150) + 16|0);
                     $11617 = +HEAPF64[$11616>>3];
                     $11618 = (+__Z5IKabsd($11617));
                     $11619 = $11618 < 9.9999999999999995E-7;
                     if (!($11619)) {
                      label = 1593;
                      break;
                     }
                     $11620 = (($evalcond150) + 24|0);
                     $11621 = +HEAPF64[$11620>>3];
                     $11622 = (+__Z5IKabsd($11621));
                     $11623 = $11622 < 9.9999999999999995E-7;
                     if (!($11623)) {
                      label = 1593;
                      break;
                     }
                     $11624 = (($evalcond150) + 32|0);
                     $11625 = +HEAPF64[$11624>>3];
                     $11626 = (+__Z5IKabsd($11625));
                     $11627 = $11626 < 9.9999999999999995E-7;
                     if (!($11627)) {
                      label = 1593;
                      break;
                     }
                     $11628 = (($evalcond150) + 40|0);
                     $11629 = +HEAPF64[$11628>>3];
                     $11630 = (+__Z5IKabsd($11629));
                     $11631 = $11630 < 9.9999999999999995E-7;
                     if (!($11631)) {
                      label = 1593;
                      break;
                     }
                     $11632 = (($evalcond150) + 48|0);
                     $11633 = +HEAPF64[$11632>>3];
                     $11634 = (+__Z5IKabsd($11633));
                     $11635 = $11634 < 9.9999999999999995E-7;
                     if (!($11635)) {
                      label = 1593;
                      break;
                     }
                     $11636 = (($evalcond150) + 56|0);
                     $11637 = +HEAPF64[$11636>>3];
                     $11638 = (+__Z5IKabsd($11637));
                     $11639 = $11638 < 9.9999999999999995E-7;
                     if (!($11639)) {
                      label = 1593;
                      break;
                     }
                     $11640 = (($evalcond150) + 64|0);
                     $11641 = +HEAPF64[$11640>>3];
                     $11642 = (+__Z5IKabsd($11641));
                     $11643 = $11642 < 9.9999999999999995E-7;
                     if (!($11643)) {
                      label = 1593;
                      break;
                     }
                     $11644 = (($evalcond150) + 72|0);
                     $11645 = +HEAPF64[$11644>>3];
                     $11646 = (+__Z5IKabsd($11645));
                     $11647 = $11646 < 9.9999999999999995E-7;
                     if (!($11647)) {
                      label = 1593;
                      break;
                     }
                     $11648 = (($evalcond150) + 80|0);
                     $11649 = +HEAPF64[$11648>>3];
                     $11650 = (+__Z5IKabsd($11649));
                     $11651 = $11650 < 9.9999999999999995E-7;
                     if (!($11651)) {
                      label = 1593;
                      break;
                     }
                     $11652 = (($evalcond150) + 88|0);
                     $11653 = +HEAPF64[$11652>>3];
                     $11654 = (+__Z5IKabsd($11653));
                     $11655 = $11654 < 9.9999999999999995E-7;
                     if (!($11655)) {
                      label = 1593;
                      break;
                     }
                     $bgotonextstatement181 = 0;
                     ;HEAP8[$j5valid185+0>>0]=0|0;
                     $11656 = (($4) + 553|0);
                     HEAP8[$11656>>0] = 1;
                     $11657 = (($4) + 408|0);
                     $11658 = +HEAPF64[$11657>>3];
                     $11659 = -1.0 * $11658;
                     $11660 = (+__Z5IKabsd($11659));
                     $11661 = $11660 < 1.9999999999999999E-6;
                     do {
                      if ($11661) {
                       $11662 = (($4) + 384|0);
                       $11663 = +HEAPF64[$11662>>3];
                       $11664 = (+__Z5IKabsd($11663));
                       $11665 = $11664 < 1.9999999999999999E-6;
                       if (!($11665)) {
                        break;
                       }
                       $11666 = (($4) + 408|0);
                       $11667 = +HEAPF64[$11666>>3];
                       $11668 = -1.0 * $11667;
                       $11669 = (+__Z5IKsqrd($11668));
                       $11670 = (($4) + 384|0);
                       $11671 = +HEAPF64[$11670>>3];
                       $11672 = (+__Z5IKsqrd($11671));
                       $11673 = $11669 + $11672;
                       $11674 = $11673 - 1.0;
                       $11675 = (+__Z5IKabsd($11674));
                       $11676 = $11675 <= 1.9999999999999999E-6;
                       if (!($11676)) {
                        break;
                       }
                       break L615;
                      }
                     } while(0);
                     $11677 = (($4) + 408|0);
                     $11678 = +HEAPF64[$11677>>3];
                     $11679 = -1.0 * $11678;
                     $11680 = (($4) + 384|0);
                     $11681 = +HEAPF64[$11680>>3];
                     $11682 = (+__Z7IKatan2dd($11679,$11681));
                     HEAPF64[$j5array182>>3] = $11682;
                     $11683 = +HEAPF64[$j5array182>>3];
                     $11684 = (+__Z5IKsind($11683));
                     HEAPF64[$sj5array184>>3] = $11684;
                     $11685 = +HEAPF64[$j5array182>>3];
                     $11686 = (+__Z5IKcosd($11685));
                     HEAPF64[$cj5array183>>3] = $11686;
                     $11687 = +HEAPF64[$j5array182>>3];
                     $11688 = $11687 > 3.14159265358979;
                     if ($11688) {
                      $11689 = +HEAPF64[$j5array182>>3];
                      $11690 = $11689 - 6.2831853071795898;
                      HEAPF64[$j5array182>>3] = $11690;
                     } else {
                      $11691 = +HEAPF64[$j5array182>>3];
                      $11692 = $11691 < -3.14159265358979;
                      if ($11692) {
                       $11693 = +HEAPF64[$j5array182>>3];
                       $11694 = $11693 + 6.2831853071795898;
                       HEAPF64[$j5array182>>3] = $11694;
                      }
                     }
                     HEAP8[$j5valid185>>0] = 1;
                     $ij5186 = 0;
                     while(1) {
                      $11695 = $ij5186;
                      $11696 = ($11695|0)<(1);
                      if (!($11696)) {
                       break;
                      }
                      $11697 = $ij5186;
                      $11698 = (($j5valid185) + ($11697)|0);
                      $11699 = HEAP8[$11698>>0]|0;
                      $11700 = $11699&1;
                      L643: do {
                       if ($11700) {
                        $11701 = $ij5186;
                        $11702 = $11701&255;
                        $11703 = (($4) + 551|0);
                        HEAP8[$11703>>0] = $11702;
                        $11704 = (($4) + 551|0);
                        $11705 = (($11704) + 1|0);
                        HEAP8[$11705>>0] = -1;
                        $11706 = $ij5186;
                        $11707 = (($11706) + 1)|0;
                        $iij5187 = $11707;
                        L646: while(1) {
                         $11708 = $iij5187;
                         $11709 = ($11708|0)<(1);
                         if (!($11709)) {
                          break;
                         }
                         $11710 = $iij5187;
                         $11711 = (($j5valid185) + ($11710)|0);
                         $11712 = HEAP8[$11711>>0]|0;
                         $11713 = $11712&1;
                         do {
                          if ($11713) {
                           $11714 = $ij5186;
                           $11715 = (($cj5array183) + ($11714<<3)|0);
                           $11716 = +HEAPF64[$11715>>3];
                           $11717 = $iij5187;
                           $11718 = (($cj5array183) + ($11717<<3)|0);
                           $11719 = +HEAPF64[$11718>>3];
                           $11720 = $11716 - $11719;
                           $11721 = (+__Z5IKabsd($11720));
                           $11722 = $11721 < 9.9999999999999995E-7;
                           if (!($11722)) {
                            break;
                           }
                           $11723 = $ij5186;
                           $11724 = (($sj5array184) + ($11723<<3)|0);
                           $11725 = +HEAPF64[$11724>>3];
                           $11726 = $iij5187;
                           $11727 = (($sj5array184) + ($11726<<3)|0);
                           $11728 = +HEAPF64[$11727>>3];
                           $11729 = $11725 - $11728;
                           $11730 = (+__Z5IKabsd($11729));
                           $11731 = $11730 < 9.9999999999999995E-7;
                           if ($11731) {
                            label = 1540;
                            break L646;
                           }
                          }
                         } while(0);
                         $11738 = $iij5187;
                         $11739 = (($11738) + 1)|0;
                         $iij5187 = $11739;
                        }
                        if ((label|0) == 1540) {
                         label = 0;
                         $11732 = $iij5187;
                         $11733 = (($j5valid185) + ($11732)|0);
                         HEAP8[$11733>>0] = 0;
                         $11734 = $iij5187;
                         $11735 = $11734&255;
                         $11736 = (($4) + 551|0);
                         $11737 = (($11736) + 1|0);
                         HEAP8[$11737>>0] = $11735;
                        }
                        $11740 = $ij5186;
                        $11741 = (($j5array182) + ($11740<<3)|0);
                        $11742 = +HEAPF64[$11741>>3];
                        $11743 = (($4) + 200|0);
                        HEAPF64[$11743>>3] = $11742;
                        $11744 = $ij5186;
                        $11745 = (($cj5array183) + ($11744<<3)|0);
                        $11746 = +HEAPF64[$11745>>3];
                        $11747 = (($4) + 208|0);
                        HEAPF64[$11747>>3] = $11746;
                        $11748 = $ij5186;
                        $11749 = (($sj5array184) + ($11748<<3)|0);
                        $11750 = +HEAPF64[$11749>>3];
                        $11751 = (($4) + 216|0);
                        HEAPF64[$11751>>3] = $11750;
                        $11752 = (($4) + 200|0);
                        $11753 = +HEAPF64[$11752>>3];
                        $11754 = (+__Z5IKcosd($11753));
                        $x394 = $11754;
                        $11755 = (($4) + 200|0);
                        $11756 = +HEAPF64[$11755>>3];
                        $11757 = (+__Z5IKsind($11756));
                        $x395 = $11757;
                        $11758 = (($4) + 288|0);
                        $11759 = +HEAPF64[$11758>>3];
                        $11760 = 1.0 * $11759;
                        $x396 = $11760;
                        $11761 = $x394;
                        $11762 = 1.0 * $11761;
                        $x397 = $11762;
                        $11763 = $x395;
                        $11764 = 1.0 * $11763;
                        $x398 = $11764;
                        $11765 = $x395;
                        $11766 = (($4) + 408|0);
                        $11767 = +HEAPF64[$11766>>3];
                        $11768 = $11765 + $11767;
                        HEAPF64[$evalcond188>>3] = $11768;
                        $11769 = $x397;
                        $11770 = -1.0 * $11769;
                        $11771 = (($4) + 384|0);
                        $11772 = +HEAPF64[$11771>>3];
                        $11773 = $11770 + $11772;
                        $11774 = (($evalcond188) + 8|0);
                        HEAPF64[$11774>>3] = $11773;
                        $11775 = (($4) + 336|0);
                        $11776 = +HEAPF64[$11775>>3];
                        $11777 = (($4) + 288|0);
                        $11778 = +HEAPF64[$11777>>3];
                        $11779 = $x394;
                        $11780 = $11778 * $11779;
                        $11781 = $11776 + $11780;
                        $11782 = (($evalcond188) + 16|0);
                        HEAPF64[$11782>>3] = $11781;
                        $11783 = (($4) + 312|0);
                        $11784 = +HEAPF64[$11783>>3];
                        $11785 = (($4) + 288|0);
                        $11786 = +HEAPF64[$11785>>3];
                        $11787 = $x395;
                        $11788 = $11786 * $11787;
                        $11789 = $11784 + $11788;
                        $11790 = (($evalcond188) + 24|0);
                        HEAPF64[$11790>>3] = $11789;
                        $11791 = (($4) + 360|0);
                        $11792 = +HEAPF64[$11791>>3];
                        $11793 = -1.0 * $11792;
                        $11794 = $x397;
                        $11795 = $11793 * $11794;
                        $11796 = (($4) + 264|0);
                        $11797 = +HEAPF64[$11796>>3];
                        $11798 = $11795 + $11797;
                        $11799 = (($evalcond188) + 32|0);
                        HEAPF64[$11799>>3] = $11798;
                        $11800 = (($4) + 360|0);
                        $11801 = +HEAPF64[$11800>>3];
                        $11802 = -1.0 * $11801;
                        $11803 = $x398;
                        $11804 = $11802 * $11803;
                        $11805 = (($4) + 240|0);
                        $11806 = +HEAPF64[$11805>>3];
                        $11807 = $11804 + $11806;
                        $11808 = (($evalcond188) + 40|0);
                        HEAPF64[$11808>>3] = $11807;
                        $11809 = $x398;
                        $11810 = -1.0 * $11809;
                        $11811 = (($4) + 240|0);
                        $11812 = +HEAPF64[$11811>>3];
                        $11813 = (($4) + 360|0);
                        $11814 = +HEAPF64[$11813>>3];
                        $11815 = $11812 * $11814;
                        $11816 = $11810 + $11815;
                        $11817 = (($4) + 312|0);
                        $11818 = +HEAPF64[$11817>>3];
                        $11819 = -1.0 * $11818;
                        $11820 = $x396;
                        $11821 = $11819 * $11820;
                        $11822 = $11816 + $11821;
                        $11823 = (($evalcond188) + 48|0);
                        HEAPF64[$11823>>3] = $11822;
                        $11824 = $x397;
                        $11825 = -1.0 * $11824;
                        $11826 = (($4) + 264|0);
                        $11827 = +HEAPF64[$11826>>3];
                        $11828 = (($4) + 360|0);
                        $11829 = +HEAPF64[$11828>>3];
                        $11830 = $11827 * $11829;
                        $11831 = $11825 + $11830;
                        $11832 = (($4) + 336|0);
                        $11833 = +HEAPF64[$11832>>3];
                        $11834 = -1.0 * $11833;
                        $11835 = $x396;
                        $11836 = $11834 * $11835;
                        $11837 = $11831 + $11836;
                        $11838 = (($evalcond188) + 56|0);
                        HEAPF64[$11838>>3] = $11837;
                        $11839 = +HEAPF64[$evalcond188>>3];
                        $11840 = (+__Z5IKabsd($11839));
                        $11841 = $11840 > 5.0000000000000004E-6;
                        do {
                         if (!($11841)) {
                          $11842 = (($evalcond188) + 8|0);
                          $11843 = +HEAPF64[$11842>>3];
                          $11844 = (+__Z5IKabsd($11843));
                          $11845 = $11844 > 5.0000000000000004E-6;
                          if ($11845) {
                           break;
                          }
                          $11846 = (($evalcond188) + 16|0);
                          $11847 = +HEAPF64[$11846>>3];
                          $11848 = (+__Z5IKabsd($11847));
                          $11849 = $11848 > 5.0000000000000004E-6;
                          if ($11849) {
                           break;
                          }
                          $11850 = (($evalcond188) + 24|0);
                          $11851 = +HEAPF64[$11850>>3];
                          $11852 = (+__Z5IKabsd($11851));
                          $11853 = $11852 > 5.0000000000000004E-6;
                          if ($11853) {
                           break;
                          }
                          $11854 = (($evalcond188) + 32|0);
                          $11855 = +HEAPF64[$11854>>3];
                          $11856 = (+__Z5IKabsd($11855));
                          $11857 = $11856 > 5.0000000000000004E-6;
                          if ($11857) {
                           break;
                          }
                          $11858 = (($evalcond188) + 40|0);
                          $11859 = +HEAPF64[$11858>>3];
                          $11860 = (+__Z5IKabsd($11859));
                          $11861 = $11860 > 5.0000000000000004E-6;
                          if ($11861) {
                           break;
                          }
                          $11862 = (($evalcond188) + 48|0);
                          $11863 = +HEAPF64[$11862>>3];
                          $11864 = (+__Z5IKabsd($11863));
                          $11865 = $11864 > 5.0000000000000004E-6;
                          if ($11865) {
                           break;
                          }
                          $11866 = (($evalcond188) + 56|0);
                          $11867 = +HEAPF64[$11866>>3];
                          $11868 = (+__Z5IKabsd($11867));
                          $11869 = $11868 > 5.0000000000000004E-6;
                          if ($11869) {
                           break;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos189,6);
                          __THREW__ = 0;
                          $11870 = (invoke_iii(381,($vinfos189|0),0)|0);
                          $11871 = __THREW__; __THREW__ = 0;
                          $11872 = $11871&1;
                          if ($11872) {
                           label = 1587;
                           break L1;
                          }
                          $11873 = (($11870) + 17|0);
                          HEAP8[$11873>>0] = 1;
                          $11874 = +HEAPF64[$4>>3];
                          __THREW__ = 0;
                          $11875 = (invoke_iii(381,($vinfos189|0),0)|0);
                          $11876 = __THREW__; __THREW__ = 0;
                          $11877 = $11876&1;
                          if ($11877) {
                           label = 1587;
                           break L1;
                          }
                          $11878 = (($11875) + 8|0);
                          HEAPF64[$11878>>3] = $11874;
                          $11879 = (($4) + 536|0);
                          $11880 = HEAP8[$11879>>0]|0;
                          __THREW__ = 0;
                          $11881 = (invoke_iii(381,($vinfos189|0),0)|0);
                          $11882 = __THREW__; __THREW__ = 0;
                          $11883 = $11882&1;
                          if ($11883) {
                           label = 1587;
                           break L1;
                          }
                          $11884 = (($11881) + 19|0);
                          HEAP8[$11884>>0] = $11880;
                          $11885 = (($4) + 536|0);
                          $11886 = (($11885) + 1|0);
                          $11887 = HEAP8[$11886>>0]|0;
                          __THREW__ = 0;
                          $11888 = (invoke_iii(381,($vinfos189|0),0)|0);
                          $11889 = __THREW__; __THREW__ = 0;
                          $11890 = $11889&1;
                          if ($11890) {
                           label = 1587;
                           break L1;
                          }
                          $11891 = (($11888) + 19|0);
                          $11892 = (($11891) + 1|0);
                          HEAP8[$11892>>0] = $11887;
                          $11893 = (($4) + 538|0);
                          $11894 = HEAP8[$11893>>0]|0;
                          __THREW__ = 0;
                          $11895 = (invoke_iii(381,($vinfos189|0),0)|0);
                          $11896 = __THREW__; __THREW__ = 0;
                          $11897 = $11896&1;
                          if ($11897) {
                           label = 1587;
                           break L1;
                          }
                          $11898 = (($11895) + 18|0);
                          HEAP8[$11898>>0] = $11894;
                          __THREW__ = 0;
                          $11899 = (invoke_iii(381,($vinfos189|0),1)|0);
                          $11900 = __THREW__; __THREW__ = 0;
                          $11901 = $11900&1;
                          if ($11901) {
                           label = 1587;
                           break L1;
                          }
                          $11902 = (($11899) + 17|0);
                          HEAP8[$11902>>0] = 1;
                          $11903 = (($4) + 40|0);
                          $11904 = +HEAPF64[$11903>>3];
                          __THREW__ = 0;
                          $11905 = (invoke_iii(381,($vinfos189|0),1)|0);
                          $11906 = __THREW__; __THREW__ = 0;
                          $11907 = $11906&1;
                          if ($11907) {
                           label = 1587;
                           break L1;
                          }
                          $11908 = (($11905) + 8|0);
                          HEAPF64[$11908>>3] = $11904;
                          $11909 = (($4) + 539|0);
                          $11910 = HEAP8[$11909>>0]|0;
                          __THREW__ = 0;
                          $11911 = (invoke_iii(381,($vinfos189|0),1)|0);
                          $11912 = __THREW__; __THREW__ = 0;
                          $11913 = $11912&1;
                          if ($11913) {
                           label = 1587;
                           break L1;
                          }
                          $11914 = (($11911) + 19|0);
                          HEAP8[$11914>>0] = $11910;
                          $11915 = (($4) + 539|0);
                          $11916 = (($11915) + 1|0);
                          $11917 = HEAP8[$11916>>0]|0;
                          __THREW__ = 0;
                          $11918 = (invoke_iii(381,($vinfos189|0),1)|0);
                          $11919 = __THREW__; __THREW__ = 0;
                          $11920 = $11919&1;
                          if ($11920) {
                           label = 1587;
                           break L1;
                          }
                          $11921 = (($11918) + 19|0);
                          $11922 = (($11921) + 1|0);
                          HEAP8[$11922>>0] = $11917;
                          $11923 = (($4) + 541|0);
                          $11924 = HEAP8[$11923>>0]|0;
                          __THREW__ = 0;
                          $11925 = (invoke_iii(381,($vinfos189|0),1)|0);
                          $11926 = __THREW__; __THREW__ = 0;
                          $11927 = $11926&1;
                          if ($11927) {
                           label = 1587;
                           break L1;
                          }
                          $11928 = (($11925) + 18|0);
                          HEAP8[$11928>>0] = $11924;
                          __THREW__ = 0;
                          $11929 = (invoke_iii(381,($vinfos189|0),2)|0);
                          $11930 = __THREW__; __THREW__ = 0;
                          $11931 = $11930&1;
                          if ($11931) {
                           label = 1587;
                           break L1;
                          }
                          $11932 = (($11929) + 17|0);
                          HEAP8[$11932>>0] = 1;
                          $11933 = (($4) + 80|0);
                          $11934 = +HEAPF64[$11933>>3];
                          __THREW__ = 0;
                          $11935 = (invoke_iii(381,($vinfos189|0),2)|0);
                          $11936 = __THREW__; __THREW__ = 0;
                          $11937 = $11936&1;
                          if ($11937) {
                           label = 1587;
                           break L1;
                          }
                          $11938 = (($11935) + 8|0);
                          HEAPF64[$11938>>3] = $11934;
                          $11939 = (($4) + 542|0);
                          $11940 = HEAP8[$11939>>0]|0;
                          __THREW__ = 0;
                          $11941 = (invoke_iii(381,($vinfos189|0),2)|0);
                          $11942 = __THREW__; __THREW__ = 0;
                          $11943 = $11942&1;
                          if ($11943) {
                           label = 1587;
                           break L1;
                          }
                          $11944 = (($11941) + 19|0);
                          HEAP8[$11944>>0] = $11940;
                          $11945 = (($4) + 542|0);
                          $11946 = (($11945) + 1|0);
                          $11947 = HEAP8[$11946>>0]|0;
                          __THREW__ = 0;
                          $11948 = (invoke_iii(381,($vinfos189|0),2)|0);
                          $11949 = __THREW__; __THREW__ = 0;
                          $11950 = $11949&1;
                          if ($11950) {
                           label = 1587;
                           break L1;
                          }
                          $11951 = (($11948) + 19|0);
                          $11952 = (($11951) + 1|0);
                          HEAP8[$11952>>0] = $11947;
                          $11953 = (($4) + 544|0);
                          $11954 = HEAP8[$11953>>0]|0;
                          __THREW__ = 0;
                          $11955 = (invoke_iii(381,($vinfos189|0),2)|0);
                          $11956 = __THREW__; __THREW__ = 0;
                          $11957 = $11956&1;
                          if ($11957) {
                           label = 1587;
                           break L1;
                          }
                          $11958 = (($11955) + 18|0);
                          HEAP8[$11958>>0] = $11954;
                          __THREW__ = 0;
                          $11959 = (invoke_iii(381,($vinfos189|0),3)|0);
                          $11960 = __THREW__; __THREW__ = 0;
                          $11961 = $11960&1;
                          if ($11961) {
                           label = 1587;
                           break L1;
                          }
                          $11962 = (($11959) + 17|0);
                          HEAP8[$11962>>0] = 1;
                          $11963 = (($4) + 120|0);
                          $11964 = +HEAPF64[$11963>>3];
                          __THREW__ = 0;
                          $11965 = (invoke_iii(381,($vinfos189|0),3)|0);
                          $11966 = __THREW__; __THREW__ = 0;
                          $11967 = $11966&1;
                          if ($11967) {
                           label = 1587;
                           break L1;
                          }
                          $11968 = (($11965) + 8|0);
                          HEAPF64[$11968>>3] = $11964;
                          $11969 = (($4) + 545|0);
                          $11970 = HEAP8[$11969>>0]|0;
                          __THREW__ = 0;
                          $11971 = (invoke_iii(381,($vinfos189|0),3)|0);
                          $11972 = __THREW__; __THREW__ = 0;
                          $11973 = $11972&1;
                          if ($11973) {
                           label = 1587;
                           break L1;
                          }
                          $11974 = (($11971) + 19|0);
                          HEAP8[$11974>>0] = $11970;
                          $11975 = (($4) + 545|0);
                          $11976 = (($11975) + 1|0);
                          $11977 = HEAP8[$11976>>0]|0;
                          __THREW__ = 0;
                          $11978 = (invoke_iii(381,($vinfos189|0),3)|0);
                          $11979 = __THREW__; __THREW__ = 0;
                          $11980 = $11979&1;
                          if ($11980) {
                           label = 1587;
                           break L1;
                          }
                          $11981 = (($11978) + 19|0);
                          $11982 = (($11981) + 1|0);
                          HEAP8[$11982>>0] = $11977;
                          $11983 = (($4) + 547|0);
                          $11984 = HEAP8[$11983>>0]|0;
                          __THREW__ = 0;
                          $11985 = (invoke_iii(381,($vinfos189|0),3)|0);
                          $11986 = __THREW__; __THREW__ = 0;
                          $11987 = $11986&1;
                          if ($11987) {
                           label = 1587;
                           break L1;
                          }
                          $11988 = (($11985) + 18|0);
                          HEAP8[$11988>>0] = $11984;
                          __THREW__ = 0;
                          $11989 = (invoke_iii(381,($vinfos189|0),4)|0);
                          $11990 = __THREW__; __THREW__ = 0;
                          $11991 = $11990&1;
                          if ($11991) {
                           label = 1587;
                           break L1;
                          }
                          $11992 = (($11989) + 17|0);
                          HEAP8[$11992>>0] = 1;
                          $11993 = (($4) + 160|0);
                          $11994 = +HEAPF64[$11993>>3];
                          __THREW__ = 0;
                          $11995 = (invoke_iii(381,($vinfos189|0),4)|0);
                          $11996 = __THREW__; __THREW__ = 0;
                          $11997 = $11996&1;
                          if ($11997) {
                           label = 1587;
                           break L1;
                          }
                          $11998 = (($11995) + 8|0);
                          HEAPF64[$11998>>3] = $11994;
                          $11999 = (($4) + 548|0);
                          $12000 = HEAP8[$11999>>0]|0;
                          __THREW__ = 0;
                          $12001 = (invoke_iii(381,($vinfos189|0),4)|0);
                          $12002 = __THREW__; __THREW__ = 0;
                          $12003 = $12002&1;
                          if ($12003) {
                           label = 1587;
                           break L1;
                          }
                          $12004 = (($12001) + 19|0);
                          HEAP8[$12004>>0] = $12000;
                          $12005 = (($4) + 548|0);
                          $12006 = (($12005) + 1|0);
                          $12007 = HEAP8[$12006>>0]|0;
                          __THREW__ = 0;
                          $12008 = (invoke_iii(381,($vinfos189|0),4)|0);
                          $12009 = __THREW__; __THREW__ = 0;
                          $12010 = $12009&1;
                          if ($12010) {
                           label = 1587;
                           break L1;
                          }
                          $12011 = (($12008) + 19|0);
                          $12012 = (($12011) + 1|0);
                          HEAP8[$12012>>0] = $12007;
                          $12013 = (($4) + 550|0);
                          $12014 = HEAP8[$12013>>0]|0;
                          __THREW__ = 0;
                          $12015 = (invoke_iii(381,($vinfos189|0),4)|0);
                          $12016 = __THREW__; __THREW__ = 0;
                          $12017 = $12016&1;
                          if ($12017) {
                           label = 1587;
                           break L1;
                          }
                          $12018 = (($12015) + 18|0);
                          HEAP8[$12018>>0] = $12014;
                          __THREW__ = 0;
                          $12019 = (invoke_iii(381,($vinfos189|0),5)|0);
                          $12020 = __THREW__; __THREW__ = 0;
                          $12021 = $12020&1;
                          if ($12021) {
                           label = 1587;
                           break L1;
                          }
                          $12022 = (($12019) + 17|0);
                          HEAP8[$12022>>0] = 1;
                          $12023 = (($4) + 200|0);
                          $12024 = +HEAPF64[$12023>>3];
                          __THREW__ = 0;
                          $12025 = (invoke_iii(381,($vinfos189|0),5)|0);
                          $12026 = __THREW__; __THREW__ = 0;
                          $12027 = $12026&1;
                          if ($12027) {
                           label = 1587;
                           break L1;
                          }
                          $12028 = (($12025) + 8|0);
                          HEAPF64[$12028>>3] = $12024;
                          $12029 = (($4) + 551|0);
                          $12030 = HEAP8[$12029>>0]|0;
                          __THREW__ = 0;
                          $12031 = (invoke_iii(381,($vinfos189|0),5)|0);
                          $12032 = __THREW__; __THREW__ = 0;
                          $12033 = $12032&1;
                          if ($12033) {
                           label = 1587;
                           break L1;
                          }
                          $12034 = (($12031) + 19|0);
                          HEAP8[$12034>>0] = $12030;
                          $12035 = (($4) + 551|0);
                          $12036 = (($12035) + 1|0);
                          $12037 = HEAP8[$12036>>0]|0;
                          __THREW__ = 0;
                          $12038 = (invoke_iii(381,($vinfos189|0),5)|0);
                          $12039 = __THREW__; __THREW__ = 0;
                          $12040 = $12039&1;
                          if ($12040) {
                           label = 1587;
                           break L1;
                          }
                          $12041 = (($12038) + 19|0);
                          $12042 = (($12041) + 1|0);
                          HEAP8[$12042>>0] = $12037;
                          $12043 = (($4) + 553|0);
                          $12044 = HEAP8[$12043>>0]|0;
                          __THREW__ = 0;
                          $12045 = (invoke_iii(381,($vinfos189|0),5)|0);
                          $12046 = __THREW__; __THREW__ = 0;
                          $12047 = $12046&1;
                          if ($12047) {
                           label = 1587;
                           break L1;
                          }
                          $12048 = (($12045) + 18|0);
                          HEAP8[$12048>>0] = $12044;
                          __THREW__ = 0;
                          invoke_vii(382,($vfree190|0),0);
                          $12049 = __THREW__; __THREW__ = 0;
                          $12050 = $12049&1;
                          if ($12050) {
                           label = 1587;
                           break L1;
                          }
                          $12051 = $1;
                          $12052 = HEAP32[$12051>>2]|0;
                          $12053 = (($12052) + 8|0);
                          $12054 = HEAP32[$12053>>2]|0;
                          __THREW__ = 0;
                          (invoke_iiii($12054|0,($12051|0),($vinfos189|0),($vfree190|0))|0);
                          $12055 = __THREW__; __THREW__ = 0;
                          $12056 = $12055&1;
                          if ($12056) {
                           label = 1588;
                           break L1;
                          }
                          __THREW__ = 0;
                          invoke_vi(366,($vfree190|0));
                          $12057 = __THREW__; __THREW__ = 0;
                          $12058 = $12057&1;
                          if ($12058) {
                           label = 1587;
                           break L1;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos189);
                          break L643;
                         }
                        } while(0);
                       } else {
                       }
                      } while(0);
                      $12059 = $ij5186;
                      $12060 = (($12059) + 1)|0;
                      $ij5186 = $12060;
                     }
                     label = 1593;
                    } else {
                     label = 1593;
                    }
                   } while(0);
                   if ((label|0) == 1593) {
                    label = 0;
                   }
                   $12069 = $bgotonextstatement181;
                   $12070 = $12069&1;
                   if ($12070) {
                    $bgotonextstatement191 = 1;
                    $12071 = (($4) + 360|0);
                    $12072 = +HEAPF64[$12071>>3];
                    $12073 = (($4) + 136|0);
                    $12074 = +HEAPF64[$12073>>3];
                    $12075 = $12072 * $12074;
                    $x399 = $12075;
                    $12076 = (($4) + 288|0);
                    $12077 = +HEAPF64[$12076>>3];
                    $12078 = 1.0 * $12077;
                    $x400 = $12078;
                    $12079 = (($4) + 128|0);
                    $12080 = +HEAPF64[$12079>>3];
                    $12081 = (($4) + 360|0);
                    $12082 = +HEAPF64[$12081>>3];
                    $12083 = $12080 * $12082;
                    $12084 = (($4) + 136|0);
                    $12085 = +HEAPF64[$12084>>3];
                    $12086 = -1.0 * $12085;
                    $12087 = $x400;
                    $12088 = $12086 * $12087;
                    $12089 = $12083 + $12088;
                    $x401 = $12089;
                    $12090 = (($4) + 160|0);
                    $12091 = +HEAPF64[$12090>>3];
                    $12092 = (+__Z5IKabsd($12091));
                    $12093 = 3.14159265358979 + $12092;
                    $12094 = (+__Z6IKfmoddd($12093,6.2831853071795898));
                    $12095 = -3.14159265358979 + $12094;
                    HEAPF64[$evalcond150>>3] = $12095;
                    $12096 = (($4) + 432|0);
                    $12097 = +HEAPF64[$12096>>3];
                    $12098 = -1.0 + $12097;
                    $12099 = (($evalcond150) + 8|0);
                    HEAPF64[$12099>>3] = $12098;
                    $12100 = (($4) + 384|0);
                    $12101 = +HEAPF64[$12100>>3];
                    $12102 = (($evalcond150) + 16|0);
                    HEAPF64[$12102>>3] = $12101;
                    $12103 = (($4) + 288|0);
                    $12104 = +HEAPF64[$12103>>3];
                    $12105 = (($evalcond150) + 24|0);
                    HEAPF64[$12105>>3] = $12104;
                    $12106 = (($4) + 360|0);
                    $12107 = +HEAPF64[$12106>>3];
                    $12108 = (($evalcond150) + 32|0);
                    HEAPF64[$12108>>3] = $12107;
                    $12109 = (($4) + 408|0);
                    $12110 = +HEAPF64[$12109>>3];
                    $12111 = (($evalcond150) + 40|0);
                    HEAPF64[$12111>>3] = $12110;
                    $12112 = $x401;
                    $12113 = (($evalcond150) + 48|0);
                    HEAPF64[$12113>>3] = $12112;
                    $12114 = $x401;
                    $12115 = (($evalcond150) + 56|0);
                    HEAPF64[$12115>>3] = $12114;
                    $12116 = $x399;
                    $12117 = (($4) + 128|0);
                    $12118 = +HEAPF64[$12117>>3];
                    $12119 = (($4) + 288|0);
                    $12120 = +HEAPF64[$12119>>3];
                    $12121 = $12118 * $12120;
                    $12122 = $12116 + $12121;
                    $12123 = (($evalcond150) + 64|0);
                    HEAPF64[$12123>>3] = $12122;
                    $12124 = $x399;
                    $12125 = -1.0 * $12124;
                    $12126 = (($4) + 128|0);
                    $12127 = +HEAPF64[$12126>>3];
                    $12128 = -1.0 * $12127;
                    $12129 = $x400;
                    $12130 = $12128 * $12129;
                    $12131 = $12125 + $12130;
                    $12132 = (($evalcond150) + 72|0);
                    HEAPF64[$12132>>3] = $12131;
                    $12133 = +HEAPF64[$evalcond150>>3];
                    $12134 = (+__Z5IKabsd($12133));
                    $12135 = $12134 < 9.9999999999999995E-7;
                    L708: do {
                     if ($12135) {
                      $12136 = (($evalcond150) + 8|0);
                      $12137 = +HEAPF64[$12136>>3];
                      $12138 = (+__Z5IKabsd($12137));
                      $12139 = $12138 < 9.9999999999999995E-7;
                      if (!($12139)) {
                       label = 1677;
                       break;
                      }
                      $12140 = (($evalcond150) + 16|0);
                      $12141 = +HEAPF64[$12140>>3];
                      $12142 = (+__Z5IKabsd($12141));
                      $12143 = $12142 < 9.9999999999999995E-7;
                      if (!($12143)) {
                       label = 1677;
                       break;
                      }
                      $12144 = (($evalcond150) + 24|0);
                      $12145 = +HEAPF64[$12144>>3];
                      $12146 = (+__Z5IKabsd($12145));
                      $12147 = $12146 < 9.9999999999999995E-7;
                      if (!($12147)) {
                       label = 1677;
                       break;
                      }
                      $12148 = (($evalcond150) + 32|0);
                      $12149 = +HEAPF64[$12148>>3];
                      $12150 = (+__Z5IKabsd($12149));
                      $12151 = $12150 < 9.9999999999999995E-7;
                      if (!($12151)) {
                       label = 1677;
                       break;
                      }
                      $12152 = (($evalcond150) + 40|0);
                      $12153 = +HEAPF64[$12152>>3];
                      $12154 = (+__Z5IKabsd($12153));
                      $12155 = $12154 < 9.9999999999999995E-7;
                      if (!($12155)) {
                       label = 1677;
                       break;
                      }
                      $12156 = (($evalcond150) + 48|0);
                      $12157 = +HEAPF64[$12156>>3];
                      $12158 = (+__Z5IKabsd($12157));
                      $12159 = $12158 < 9.9999999999999995E-7;
                      if (!($12159)) {
                       label = 1677;
                       break;
                      }
                      $12160 = (($evalcond150) + 56|0);
                      $12161 = +HEAPF64[$12160>>3];
                      $12162 = (+__Z5IKabsd($12161));
                      $12163 = $12162 < 9.9999999999999995E-7;
                      if (!($12163)) {
                       label = 1677;
                       break;
                      }
                      $12164 = (($evalcond150) + 64|0);
                      $12165 = +HEAPF64[$12164>>3];
                      $12166 = (+__Z5IKabsd($12165));
                      $12167 = $12166 < 9.9999999999999995E-7;
                      if (!($12167)) {
                       label = 1677;
                       break;
                      }
                      $12168 = (($evalcond150) + 72|0);
                      $12169 = +HEAPF64[$12168>>3];
                      $12170 = (+__Z5IKabsd($12169));
                      $12171 = $12170 < 9.9999999999999995E-7;
                      if (!($12171)) {
                       label = 1677;
                       break;
                      }
                      $bgotonextstatement191 = 0;
                      ;HEAP8[$j5valid195+0>>0]=0|0;
                      $12172 = (($4) + 553|0);
                      HEAP8[$12172>>0] = 1;
                      $12173 = (($4) + 264|0);
                      $12174 = +HEAPF64[$12173>>3];
                      $12175 = 1.0 * $12174;
                      $x402 = $12175;
                      $12176 = (($4) + 128|0);
                      $12177 = +HEAPF64[$12176>>3];
                      $12178 = -1.0 * $12177;
                      $12179 = $x402;
                      $12180 = $12178 * $12179;
                      $12181 = (($4) + 240|0);
                      $12182 = +HEAPF64[$12181>>3];
                      $12183 = -1.0 * $12182;
                      $12184 = (($4) + 136|0);
                      $12185 = +HEAPF64[$12184>>3];
                      $12186 = $12183 * $12185;
                      $12187 = $12180 + $12186;
                      $12188 = (+__Z5IKabsd($12187));
                      $12189 = $12188 < 1.9999999999999999E-6;
                      do {
                       if ($12189) {
                        $12190 = (($4) + 128|0);
                        $12191 = +HEAPF64[$12190>>3];
                        $12192 = (($4) + 240|0);
                        $12193 = +HEAPF64[$12192>>3];
                        $12194 = $12191 * $12193;
                        $12195 = (($4) + 136|0);
                        $12196 = +HEAPF64[$12195>>3];
                        $12197 = -1.0 * $12196;
                        $12198 = $x402;
                        $12199 = $12197 * $12198;
                        $12200 = $12194 + $12199;
                        $12201 = (+__Z5IKabsd($12200));
                        $12202 = $12201 < 1.9999999999999999E-6;
                        if (!($12202)) {
                         break;
                        }
                        $12203 = (($4) + 128|0);
                        $12204 = +HEAPF64[$12203>>3];
                        $12205 = -1.0 * $12204;
                        $12206 = $x402;
                        $12207 = $12205 * $12206;
                        $12208 = (($4) + 240|0);
                        $12209 = +HEAPF64[$12208>>3];
                        $12210 = -1.0 * $12209;
                        $12211 = (($4) + 136|0);
                        $12212 = +HEAPF64[$12211>>3];
                        $12213 = $12210 * $12212;
                        $12214 = $12207 + $12213;
                        $12215 = (+__Z5IKsqrd($12214));
                        $12216 = (($4) + 128|0);
                        $12217 = +HEAPF64[$12216>>3];
                        $12218 = (($4) + 240|0);
                        $12219 = +HEAPF64[$12218>>3];
                        $12220 = $12217 * $12219;
                        $12221 = (($4) + 136|0);
                        $12222 = +HEAPF64[$12221>>3];
                        $12223 = -1.0 * $12222;
                        $12224 = $x402;
                        $12225 = $12223 * $12224;
                        $12226 = $12220 + $12225;
                        $12227 = (+__Z5IKsqrd($12226));
                        $12228 = $12215 + $12227;
                        $12229 = $12228 - 1.0;
                        $12230 = (+__Z5IKabsd($12229));
                        $12231 = $12230 <= 1.9999999999999999E-6;
                        if (!($12231)) {
                         break;
                        }
                        break L708;
                       }
                      } while(0);
                      $12232 = (($4) + 128|0);
                      $12233 = +HEAPF64[$12232>>3];
                      $12234 = -1.0 * $12233;
                      $12235 = $x402;
                      $12236 = $12234 * $12235;
                      $12237 = (($4) + 240|0);
                      $12238 = +HEAPF64[$12237>>3];
                      $12239 = -1.0 * $12238;
                      $12240 = (($4) + 136|0);
                      $12241 = +HEAPF64[$12240>>3];
                      $12242 = $12239 * $12241;
                      $12243 = $12236 + $12242;
                      $12244 = (($4) + 128|0);
                      $12245 = +HEAPF64[$12244>>3];
                      $12246 = (($4) + 240|0);
                      $12247 = +HEAPF64[$12246>>3];
                      $12248 = $12245 * $12247;
                      $12249 = (($4) + 136|0);
                      $12250 = +HEAPF64[$12249>>3];
                      $12251 = -1.0 * $12250;
                      $12252 = $x402;
                      $12253 = $12251 * $12252;
                      $12254 = $12248 + $12253;
                      $12255 = (+__Z7IKatan2dd($12243,$12254));
                      HEAPF64[$j5array192>>3] = $12255;
                      $12256 = +HEAPF64[$j5array192>>3];
                      $12257 = (+__Z5IKsind($12256));
                      HEAPF64[$sj5array194>>3] = $12257;
                      $12258 = +HEAPF64[$j5array192>>3];
                      $12259 = (+__Z5IKcosd($12258));
                      HEAPF64[$cj5array193>>3] = $12259;
                      $12260 = +HEAPF64[$j5array192>>3];
                      $12261 = $12260 > 3.14159265358979;
                      if ($12261) {
                       $12262 = +HEAPF64[$j5array192>>3];
                       $12263 = $12262 - 6.2831853071795898;
                       HEAPF64[$j5array192>>3] = $12263;
                      } else {
                       $12264 = +HEAPF64[$j5array192>>3];
                       $12265 = $12264 < -3.14159265358979;
                       if ($12265) {
                        $12266 = +HEAPF64[$j5array192>>3];
                        $12267 = $12266 + 6.2831853071795898;
                        HEAPF64[$j5array192>>3] = $12267;
                       }
                      }
                      HEAP8[$j5valid195>>0] = 1;
                      $ij5196 = 0;
                      while(1) {
                       $12268 = $ij5196;
                       $12269 = ($12268|0)<(1);
                       if (!($12269)) {
                        break;
                       }
                       $12270 = $ij5196;
                       $12271 = (($j5valid195) + ($12270)|0);
                       $12272 = HEAP8[$12271>>0]|0;
                       $12273 = $12272&1;
                       L734: do {
                        if ($12273) {
                         $12274 = $ij5196;
                         $12275 = $12274&255;
                         $12276 = (($4) + 551|0);
                         HEAP8[$12276>>0] = $12275;
                         $12277 = (($4) + 551|0);
                         $12278 = (($12277) + 1|0);
                         HEAP8[$12278>>0] = -1;
                         $12279 = $ij5196;
                         $12280 = (($12279) + 1)|0;
                         $iij5197 = $12280;
                         L737: while(1) {
                          $12281 = $iij5197;
                          $12282 = ($12281|0)<(1);
                          if (!($12282)) {
                           break;
                          }
                          $12283 = $iij5197;
                          $12284 = (($j5valid195) + ($12283)|0);
                          $12285 = HEAP8[$12284>>0]|0;
                          $12286 = $12285&1;
                          do {
                           if ($12286) {
                            $12287 = $ij5196;
                            $12288 = (($cj5array193) + ($12287<<3)|0);
                            $12289 = +HEAPF64[$12288>>3];
                            $12290 = $iij5197;
                            $12291 = (($cj5array193) + ($12290<<3)|0);
                            $12292 = +HEAPF64[$12291>>3];
                            $12293 = $12289 - $12292;
                            $12294 = (+__Z5IKabsd($12293));
                            $12295 = $12294 < 9.9999999999999995E-7;
                            if (!($12295)) {
                             break;
                            }
                            $12296 = $ij5196;
                            $12297 = (($sj5array194) + ($12296<<3)|0);
                            $12298 = +HEAPF64[$12297>>3];
                            $12299 = $iij5197;
                            $12300 = (($sj5array194) + ($12299<<3)|0);
                            $12301 = +HEAPF64[$12300>>3];
                            $12302 = $12298 - $12301;
                            $12303 = (+__Z5IKabsd($12302));
                            $12304 = $12303 < 9.9999999999999995E-7;
                            if ($12304) {
                             label = 1624;
                             break L737;
                            }
                           }
                          } while(0);
                          $12311 = $iij5197;
                          $12312 = (($12311) + 1)|0;
                          $iij5197 = $12312;
                         }
                         if ((label|0) == 1624) {
                          label = 0;
                          $12305 = $iij5197;
                          $12306 = (($j5valid195) + ($12305)|0);
                          HEAP8[$12306>>0] = 0;
                          $12307 = $iij5197;
                          $12308 = $12307&255;
                          $12309 = (($4) + 551|0);
                          $12310 = (($12309) + 1|0);
                          HEAP8[$12310>>0] = $12308;
                         }
                         $12313 = $ij5196;
                         $12314 = (($j5array192) + ($12313<<3)|0);
                         $12315 = +HEAPF64[$12314>>3];
                         $12316 = (($4) + 200|0);
                         HEAPF64[$12316>>3] = $12315;
                         $12317 = $ij5196;
                         $12318 = (($cj5array193) + ($12317<<3)|0);
                         $12319 = +HEAPF64[$12318>>3];
                         $12320 = (($4) + 208|0);
                         HEAPF64[$12320>>3] = $12319;
                         $12321 = $ij5196;
                         $12322 = (($sj5array194) + ($12321<<3)|0);
                         $12323 = +HEAPF64[$12322>>3];
                         $12324 = (($4) + 216|0);
                         HEAPF64[$12324>>3] = $12323;
                         $12325 = (($4) + 200|0);
                         $12326 = +HEAPF64[$12325>>3];
                         $12327 = (+__Z5IKsind($12326));
                         $x403 = $12327;
                         $12328 = (($4) + 200|0);
                         $12329 = +HEAPF64[$12328>>3];
                         $12330 = (+__Z5IKcosd($12329));
                         $x404 = $12330;
                         $12331 = (($4) + 136|0);
                         $12332 = +HEAPF64[$12331>>3];
                         $12333 = 1.0 * $12332;
                         $x405 = $12333;
                         $12334 = $x404;
                         $12335 = 1.0 * $12334;
                         $x406 = $12335;
                         $12336 = (($4) + 136|0);
                         $12337 = +HEAPF64[$12336>>3];
                         $12338 = $x403;
                         $12339 = $12337 * $12338;
                         $x407 = $12339;
                         $12340 = $x403;
                         $12341 = 1.0 * $12340;
                         $x408 = $12341;
                         $12342 = (($4) + 128|0);
                         $12343 = +HEAPF64[$12342>>3];
                         $12344 = $x406;
                         $12345 = $12343 * $12344;
                         $x409 = $12345;
                         $12346 = (($4) + 336|0);
                         $12347 = +HEAPF64[$12346>>3];
                         $12348 = (($4) + 136|0);
                         $12349 = +HEAPF64[$12348>>3];
                         $12350 = $12347 * $12349;
                         $12351 = $x403;
                         $12352 = $12350 + $12351;
                         $12353 = (($4) + 128|0);
                         $12354 = +HEAPF64[$12353>>3];
                         $12355 = (($4) + 264|0);
                         $12356 = +HEAPF64[$12355>>3];
                         $12357 = $12354 * $12356;
                         $12358 = $12352 + $12357;
                         HEAPF64[$evalcond198>>3] = $12358;
                         $12359 = (($4) + 136|0);
                         $12360 = +HEAPF64[$12359>>3];
                         $12361 = $x404;
                         $12362 = $12360 * $12361;
                         $12363 = (($4) + 264|0);
                         $12364 = +HEAPF64[$12363>>3];
                         $12365 = $12362 + $12364;
                         $12366 = (($4) + 128|0);
                         $12367 = +HEAPF64[$12366>>3];
                         $12368 = $x403;
                         $12369 = $12367 * $12368;
                         $12370 = $12365 + $12369;
                         $12371 = (($evalcond198) + 8|0);
                         HEAPF64[$12371>>3] = $12370;
                         $12372 = (($4) + 312|0);
                         $12373 = +HEAPF64[$12372>>3];
                         $12374 = (($4) + 136|0);
                         $12375 = +HEAPF64[$12374>>3];
                         $12376 = $12373 * $12375;
                         $12377 = (($4) + 128|0);
                         $12378 = +HEAPF64[$12377>>3];
                         $12379 = (($4) + 240|0);
                         $12380 = +HEAPF64[$12379>>3];
                         $12381 = $12378 * $12380;
                         $12382 = $12376 + $12381;
                         $12383 = $x406;
                         $12384 = -1.0 * $12383;
                         $12385 = $12382 + $12384;
                         $12386 = (($evalcond198) + 16|0);
                         HEAPF64[$12386>>3] = $12385;
                         $12387 = (($4) + 128|0);
                         $12388 = +HEAPF64[$12387>>3];
                         $12389 = (($4) + 312|0);
                         $12390 = +HEAPF64[$12389>>3];
                         $12391 = $12388 * $12390;
                         $12392 = (($4) + 240|0);
                         $12393 = +HEAPF64[$12392>>3];
                         $12394 = -1.0 * $12393;
                         $12395 = $x405;
                         $12396 = $12394 * $12395;
                         $12397 = $12391 + $12396;
                         $12398 = $x408;
                         $12399 = -1.0 * $12398;
                         $12400 = $12397 + $12399;
                         $12401 = (($evalcond198) + 24|0);
                         HEAPF64[$12401>>3] = $12400;
                         $12402 = (($4) + 128|0);
                         $12403 = +HEAPF64[$12402>>3];
                         $12404 = (($4) + 336|0);
                         $12405 = +HEAPF64[$12404>>3];
                         $12406 = $12403 * $12405;
                         $12407 = (($4) + 264|0);
                         $12408 = +HEAPF64[$12407>>3];
                         $12409 = -1.0 * $12408;
                         $12410 = $x405;
                         $12411 = $12409 * $12410;
                         $12412 = $12406 + $12411;
                         $12413 = $x406;
                         $12414 = -1.0 * $12413;
                         $12415 = $12412 + $12414;
                         $12416 = (($evalcond198) + 32|0);
                         HEAPF64[$12416>>3] = $12415;
                         $12417 = $x407;
                         $12418 = (($4) + 240|0);
                         $12419 = +HEAPF64[$12418>>3];
                         $12420 = $12417 + $12419;
                         $12421 = $x409;
                         $12422 = -1.0 * $12421;
                         $12423 = $12420 + $12422;
                         $12424 = (($evalcond198) + 40|0);
                         HEAPF64[$12424>>3] = $12423;
                         $12425 = $x407;
                         $12426 = (($4) + 336|0);
                         $12427 = +HEAPF64[$12426>>3];
                         $12428 = $12425 + $12427;
                         $12429 = $x409;
                         $12430 = -1.0 * $12429;
                         $12431 = $12428 + $12430;
                         $12432 = (($evalcond198) + 48|0);
                         HEAPF64[$12432>>3] = $12431;
                         $12433 = (($4) + 128|0);
                         $12434 = +HEAPF64[$12433>>3];
                         $12435 = -1.0 * $12434;
                         $12436 = $x408;
                         $12437 = $12435 * $12436;
                         $12438 = $x404;
                         $12439 = -1.0 * $12438;
                         $12440 = $x405;
                         $12441 = $12439 * $12440;
                         $12442 = $12437 + $12441;
                         $12443 = (($4) + 312|0);
                         $12444 = +HEAPF64[$12443>>3];
                         $12445 = $12442 + $12444;
                         $12446 = (($evalcond198) + 56|0);
                         HEAPF64[$12446>>3] = $12445;
                         $12447 = +HEAPF64[$evalcond198>>3];
                         $12448 = (+__Z5IKabsd($12447));
                         $12449 = $12448 > 5.0000000000000004E-6;
                         do {
                          if (!($12449)) {
                           $12450 = (($evalcond198) + 8|0);
                           $12451 = +HEAPF64[$12450>>3];
                           $12452 = (+__Z5IKabsd($12451));
                           $12453 = $12452 > 5.0000000000000004E-6;
                           if ($12453) {
                            break;
                           }
                           $12454 = (($evalcond198) + 16|0);
                           $12455 = +HEAPF64[$12454>>3];
                           $12456 = (+__Z5IKabsd($12455));
                           $12457 = $12456 > 5.0000000000000004E-6;
                           if ($12457) {
                            break;
                           }
                           $12458 = (($evalcond198) + 24|0);
                           $12459 = +HEAPF64[$12458>>3];
                           $12460 = (+__Z5IKabsd($12459));
                           $12461 = $12460 > 5.0000000000000004E-6;
                           if ($12461) {
                            break;
                           }
                           $12462 = (($evalcond198) + 32|0);
                           $12463 = +HEAPF64[$12462>>3];
                           $12464 = (+__Z5IKabsd($12463));
                           $12465 = $12464 > 5.0000000000000004E-6;
                           if ($12465) {
                            break;
                           }
                           $12466 = (($evalcond198) + 40|0);
                           $12467 = +HEAPF64[$12466>>3];
                           $12468 = (+__Z5IKabsd($12467));
                           $12469 = $12468 > 5.0000000000000004E-6;
                           if ($12469) {
                            break;
                           }
                           $12470 = (($evalcond198) + 48|0);
                           $12471 = +HEAPF64[$12470>>3];
                           $12472 = (+__Z5IKabsd($12471));
                           $12473 = $12472 > 5.0000000000000004E-6;
                           if ($12473) {
                            break;
                           }
                           $12474 = (($evalcond198) + 56|0);
                           $12475 = +HEAPF64[$12474>>3];
                           $12476 = (+__Z5IKabsd($12475));
                           $12477 = $12476 > 5.0000000000000004E-6;
                           if ($12477) {
                            break;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos199,6);
                           __THREW__ = 0;
                           $12478 = (invoke_iii(381,($vinfos199|0),0)|0);
                           $12479 = __THREW__; __THREW__ = 0;
                           $12480 = $12479&1;
                           if ($12480) {
                            label = 1671;
                            break L1;
                           }
                           $12481 = (($12478) + 17|0);
                           HEAP8[$12481>>0] = 1;
                           $12482 = +HEAPF64[$4>>3];
                           __THREW__ = 0;
                           $12483 = (invoke_iii(381,($vinfos199|0),0)|0);
                           $12484 = __THREW__; __THREW__ = 0;
                           $12485 = $12484&1;
                           if ($12485) {
                            label = 1671;
                            break L1;
                           }
                           $12486 = (($12483) + 8|0);
                           HEAPF64[$12486>>3] = $12482;
                           $12487 = (($4) + 536|0);
                           $12488 = HEAP8[$12487>>0]|0;
                           __THREW__ = 0;
                           $12489 = (invoke_iii(381,($vinfos199|0),0)|0);
                           $12490 = __THREW__; __THREW__ = 0;
                           $12491 = $12490&1;
                           if ($12491) {
                            label = 1671;
                            break L1;
                           }
                           $12492 = (($12489) + 19|0);
                           HEAP8[$12492>>0] = $12488;
                           $12493 = (($4) + 536|0);
                           $12494 = (($12493) + 1|0);
                           $12495 = HEAP8[$12494>>0]|0;
                           __THREW__ = 0;
                           $12496 = (invoke_iii(381,($vinfos199|0),0)|0);
                           $12497 = __THREW__; __THREW__ = 0;
                           $12498 = $12497&1;
                           if ($12498) {
                            label = 1671;
                            break L1;
                           }
                           $12499 = (($12496) + 19|0);
                           $12500 = (($12499) + 1|0);
                           HEAP8[$12500>>0] = $12495;
                           $12501 = (($4) + 538|0);
                           $12502 = HEAP8[$12501>>0]|0;
                           __THREW__ = 0;
                           $12503 = (invoke_iii(381,($vinfos199|0),0)|0);
                           $12504 = __THREW__; __THREW__ = 0;
                           $12505 = $12504&1;
                           if ($12505) {
                            label = 1671;
                            break L1;
                           }
                           $12506 = (($12503) + 18|0);
                           HEAP8[$12506>>0] = $12502;
                           __THREW__ = 0;
                           $12507 = (invoke_iii(381,($vinfos199|0),1)|0);
                           $12508 = __THREW__; __THREW__ = 0;
                           $12509 = $12508&1;
                           if ($12509) {
                            label = 1671;
                            break L1;
                           }
                           $12510 = (($12507) + 17|0);
                           HEAP8[$12510>>0] = 1;
                           $12511 = (($4) + 40|0);
                           $12512 = +HEAPF64[$12511>>3];
                           __THREW__ = 0;
                           $12513 = (invoke_iii(381,($vinfos199|0),1)|0);
                           $12514 = __THREW__; __THREW__ = 0;
                           $12515 = $12514&1;
                           if ($12515) {
                            label = 1671;
                            break L1;
                           }
                           $12516 = (($12513) + 8|0);
                           HEAPF64[$12516>>3] = $12512;
                           $12517 = (($4) + 539|0);
                           $12518 = HEAP8[$12517>>0]|0;
                           __THREW__ = 0;
                           $12519 = (invoke_iii(381,($vinfos199|0),1)|0);
                           $12520 = __THREW__; __THREW__ = 0;
                           $12521 = $12520&1;
                           if ($12521) {
                            label = 1671;
                            break L1;
                           }
                           $12522 = (($12519) + 19|0);
                           HEAP8[$12522>>0] = $12518;
                           $12523 = (($4) + 539|0);
                           $12524 = (($12523) + 1|0);
                           $12525 = HEAP8[$12524>>0]|0;
                           __THREW__ = 0;
                           $12526 = (invoke_iii(381,($vinfos199|0),1)|0);
                           $12527 = __THREW__; __THREW__ = 0;
                           $12528 = $12527&1;
                           if ($12528) {
                            label = 1671;
                            break L1;
                           }
                           $12529 = (($12526) + 19|0);
                           $12530 = (($12529) + 1|0);
                           HEAP8[$12530>>0] = $12525;
                           $12531 = (($4) + 541|0);
                           $12532 = HEAP8[$12531>>0]|0;
                           __THREW__ = 0;
                           $12533 = (invoke_iii(381,($vinfos199|0),1)|0);
                           $12534 = __THREW__; __THREW__ = 0;
                           $12535 = $12534&1;
                           if ($12535) {
                            label = 1671;
                            break L1;
                           }
                           $12536 = (($12533) + 18|0);
                           HEAP8[$12536>>0] = $12532;
                           __THREW__ = 0;
                           $12537 = (invoke_iii(381,($vinfos199|0),2)|0);
                           $12538 = __THREW__; __THREW__ = 0;
                           $12539 = $12538&1;
                           if ($12539) {
                            label = 1671;
                            break L1;
                           }
                           $12540 = (($12537) + 17|0);
                           HEAP8[$12540>>0] = 1;
                           $12541 = (($4) + 80|0);
                           $12542 = +HEAPF64[$12541>>3];
                           __THREW__ = 0;
                           $12543 = (invoke_iii(381,($vinfos199|0),2)|0);
                           $12544 = __THREW__; __THREW__ = 0;
                           $12545 = $12544&1;
                           if ($12545) {
                            label = 1671;
                            break L1;
                           }
                           $12546 = (($12543) + 8|0);
                           HEAPF64[$12546>>3] = $12542;
                           $12547 = (($4) + 542|0);
                           $12548 = HEAP8[$12547>>0]|0;
                           __THREW__ = 0;
                           $12549 = (invoke_iii(381,($vinfos199|0),2)|0);
                           $12550 = __THREW__; __THREW__ = 0;
                           $12551 = $12550&1;
                           if ($12551) {
                            label = 1671;
                            break L1;
                           }
                           $12552 = (($12549) + 19|0);
                           HEAP8[$12552>>0] = $12548;
                           $12553 = (($4) + 542|0);
                           $12554 = (($12553) + 1|0);
                           $12555 = HEAP8[$12554>>0]|0;
                           __THREW__ = 0;
                           $12556 = (invoke_iii(381,($vinfos199|0),2)|0);
                           $12557 = __THREW__; __THREW__ = 0;
                           $12558 = $12557&1;
                           if ($12558) {
                            label = 1671;
                            break L1;
                           }
                           $12559 = (($12556) + 19|0);
                           $12560 = (($12559) + 1|0);
                           HEAP8[$12560>>0] = $12555;
                           $12561 = (($4) + 544|0);
                           $12562 = HEAP8[$12561>>0]|0;
                           __THREW__ = 0;
                           $12563 = (invoke_iii(381,($vinfos199|0),2)|0);
                           $12564 = __THREW__; __THREW__ = 0;
                           $12565 = $12564&1;
                           if ($12565) {
                            label = 1671;
                            break L1;
                           }
                           $12566 = (($12563) + 18|0);
                           HEAP8[$12566>>0] = $12562;
                           __THREW__ = 0;
                           $12567 = (invoke_iii(381,($vinfos199|0),3)|0);
                           $12568 = __THREW__; __THREW__ = 0;
                           $12569 = $12568&1;
                           if ($12569) {
                            label = 1671;
                            break L1;
                           }
                           $12570 = (($12567) + 17|0);
                           HEAP8[$12570>>0] = 1;
                           $12571 = (($4) + 120|0);
                           $12572 = +HEAPF64[$12571>>3];
                           __THREW__ = 0;
                           $12573 = (invoke_iii(381,($vinfos199|0),3)|0);
                           $12574 = __THREW__; __THREW__ = 0;
                           $12575 = $12574&1;
                           if ($12575) {
                            label = 1671;
                            break L1;
                           }
                           $12576 = (($12573) + 8|0);
                           HEAPF64[$12576>>3] = $12572;
                           $12577 = (($4) + 545|0);
                           $12578 = HEAP8[$12577>>0]|0;
                           __THREW__ = 0;
                           $12579 = (invoke_iii(381,($vinfos199|0),3)|0);
                           $12580 = __THREW__; __THREW__ = 0;
                           $12581 = $12580&1;
                           if ($12581) {
                            label = 1671;
                            break L1;
                           }
                           $12582 = (($12579) + 19|0);
                           HEAP8[$12582>>0] = $12578;
                           $12583 = (($4) + 545|0);
                           $12584 = (($12583) + 1|0);
                           $12585 = HEAP8[$12584>>0]|0;
                           __THREW__ = 0;
                           $12586 = (invoke_iii(381,($vinfos199|0),3)|0);
                           $12587 = __THREW__; __THREW__ = 0;
                           $12588 = $12587&1;
                           if ($12588) {
                            label = 1671;
                            break L1;
                           }
                           $12589 = (($12586) + 19|0);
                           $12590 = (($12589) + 1|0);
                           HEAP8[$12590>>0] = $12585;
                           $12591 = (($4) + 547|0);
                           $12592 = HEAP8[$12591>>0]|0;
                           __THREW__ = 0;
                           $12593 = (invoke_iii(381,($vinfos199|0),3)|0);
                           $12594 = __THREW__; __THREW__ = 0;
                           $12595 = $12594&1;
                           if ($12595) {
                            label = 1671;
                            break L1;
                           }
                           $12596 = (($12593) + 18|0);
                           HEAP8[$12596>>0] = $12592;
                           __THREW__ = 0;
                           $12597 = (invoke_iii(381,($vinfos199|0),4)|0);
                           $12598 = __THREW__; __THREW__ = 0;
                           $12599 = $12598&1;
                           if ($12599) {
                            label = 1671;
                            break L1;
                           }
                           $12600 = (($12597) + 17|0);
                           HEAP8[$12600>>0] = 1;
                           $12601 = (($4) + 160|0);
                           $12602 = +HEAPF64[$12601>>3];
                           __THREW__ = 0;
                           $12603 = (invoke_iii(381,($vinfos199|0),4)|0);
                           $12604 = __THREW__; __THREW__ = 0;
                           $12605 = $12604&1;
                           if ($12605) {
                            label = 1671;
                            break L1;
                           }
                           $12606 = (($12603) + 8|0);
                           HEAPF64[$12606>>3] = $12602;
                           $12607 = (($4) + 548|0);
                           $12608 = HEAP8[$12607>>0]|0;
                           __THREW__ = 0;
                           $12609 = (invoke_iii(381,($vinfos199|0),4)|0);
                           $12610 = __THREW__; __THREW__ = 0;
                           $12611 = $12610&1;
                           if ($12611) {
                            label = 1671;
                            break L1;
                           }
                           $12612 = (($12609) + 19|0);
                           HEAP8[$12612>>0] = $12608;
                           $12613 = (($4) + 548|0);
                           $12614 = (($12613) + 1|0);
                           $12615 = HEAP8[$12614>>0]|0;
                           __THREW__ = 0;
                           $12616 = (invoke_iii(381,($vinfos199|0),4)|0);
                           $12617 = __THREW__; __THREW__ = 0;
                           $12618 = $12617&1;
                           if ($12618) {
                            label = 1671;
                            break L1;
                           }
                           $12619 = (($12616) + 19|0);
                           $12620 = (($12619) + 1|0);
                           HEAP8[$12620>>0] = $12615;
                           $12621 = (($4) + 550|0);
                           $12622 = HEAP8[$12621>>0]|0;
                           __THREW__ = 0;
                           $12623 = (invoke_iii(381,($vinfos199|0),4)|0);
                           $12624 = __THREW__; __THREW__ = 0;
                           $12625 = $12624&1;
                           if ($12625) {
                            label = 1671;
                            break L1;
                           }
                           $12626 = (($12623) + 18|0);
                           HEAP8[$12626>>0] = $12622;
                           __THREW__ = 0;
                           $12627 = (invoke_iii(381,($vinfos199|0),5)|0);
                           $12628 = __THREW__; __THREW__ = 0;
                           $12629 = $12628&1;
                           if ($12629) {
                            label = 1671;
                            break L1;
                           }
                           $12630 = (($12627) + 17|0);
                           HEAP8[$12630>>0] = 1;
                           $12631 = (($4) + 200|0);
                           $12632 = +HEAPF64[$12631>>3];
                           __THREW__ = 0;
                           $12633 = (invoke_iii(381,($vinfos199|0),5)|0);
                           $12634 = __THREW__; __THREW__ = 0;
                           $12635 = $12634&1;
                           if ($12635) {
                            label = 1671;
                            break L1;
                           }
                           $12636 = (($12633) + 8|0);
                           HEAPF64[$12636>>3] = $12632;
                           $12637 = (($4) + 551|0);
                           $12638 = HEAP8[$12637>>0]|0;
                           __THREW__ = 0;
                           $12639 = (invoke_iii(381,($vinfos199|0),5)|0);
                           $12640 = __THREW__; __THREW__ = 0;
                           $12641 = $12640&1;
                           if ($12641) {
                            label = 1671;
                            break L1;
                           }
                           $12642 = (($12639) + 19|0);
                           HEAP8[$12642>>0] = $12638;
                           $12643 = (($4) + 551|0);
                           $12644 = (($12643) + 1|0);
                           $12645 = HEAP8[$12644>>0]|0;
                           __THREW__ = 0;
                           $12646 = (invoke_iii(381,($vinfos199|0),5)|0);
                           $12647 = __THREW__; __THREW__ = 0;
                           $12648 = $12647&1;
                           if ($12648) {
                            label = 1671;
                            break L1;
                           }
                           $12649 = (($12646) + 19|0);
                           $12650 = (($12649) + 1|0);
                           HEAP8[$12650>>0] = $12645;
                           $12651 = (($4) + 553|0);
                           $12652 = HEAP8[$12651>>0]|0;
                           __THREW__ = 0;
                           $12653 = (invoke_iii(381,($vinfos199|0),5)|0);
                           $12654 = __THREW__; __THREW__ = 0;
                           $12655 = $12654&1;
                           if ($12655) {
                            label = 1671;
                            break L1;
                           }
                           $12656 = (($12653) + 18|0);
                           HEAP8[$12656>>0] = $12652;
                           __THREW__ = 0;
                           invoke_vii(382,($vfree200|0),0);
                           $12657 = __THREW__; __THREW__ = 0;
                           $12658 = $12657&1;
                           if ($12658) {
                            label = 1671;
                            break L1;
                           }
                           $12659 = $1;
                           $12660 = HEAP32[$12659>>2]|0;
                           $12661 = (($12660) + 8|0);
                           $12662 = HEAP32[$12661>>2]|0;
                           __THREW__ = 0;
                           (invoke_iiii($12662|0,($12659|0),($vinfos199|0),($vfree200|0))|0);
                           $12663 = __THREW__; __THREW__ = 0;
                           $12664 = $12663&1;
                           if ($12664) {
                            label = 1672;
                            break L1;
                           }
                           __THREW__ = 0;
                           invoke_vi(366,($vfree200|0));
                           $12665 = __THREW__; __THREW__ = 0;
                           $12666 = $12665&1;
                           if ($12666) {
                            label = 1671;
                            break L1;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos199);
                           break L734;
                          }
                         } while(0);
                        } else {
                        }
                       } while(0);
                       $12667 = $ij5196;
                       $12668 = (($12667) + 1)|0;
                       $ij5196 = $12668;
                      }
                      label = 1677;
                     } else {
                      label = 1677;
                     }
                    } while(0);
                    if ((label|0) == 1677) {
                     label = 0;
                    }
                    $12677 = $bgotonextstatement191;
                    $12678 = $12677&1;
                    if ($12678) {
                     $bgotonextstatement201 = 1;
                     $12679 = (($4) + 288|0);
                     $12680 = +HEAPF64[$12679>>3];
                     $12681 = -1.0 * $12680;
                     $12682 = (($4) + 136|0);
                     $12683 = +HEAPF64[$12682>>3];
                     $12684 = $12681 * $12683;
                     $12685 = (($4) + 128|0);
                     $12686 = +HEAPF64[$12685>>3];
                     $12687 = (($4) + 360|0);
                     $12688 = +HEAPF64[$12687>>3];
                     $12689 = $12686 * $12688;
                     $12690 = $12684 + $12689;
                     $x410 = $12690;
                     $12691 = (($4) + 360|0);
                     $12692 = +HEAPF64[$12691>>3];
                     $12693 = (($4) + 136|0);
                     $12694 = +HEAPF64[$12693>>3];
                     $12695 = $12692 * $12694;
                     $12696 = (($4) + 128|0);
                     $12697 = +HEAPF64[$12696>>3];
                     $12698 = (($4) + 288|0);
                     $12699 = +HEAPF64[$12698>>3];
                     $12700 = $12697 * $12699;
                     $12701 = $12695 + $12700;
                     $x411 = $12701;
                     $12702 = (($4) + 160|0);
                     $12703 = +HEAPF64[$12702>>3];
                     $12704 = -3.14159265358979 + $12703;
                     $12705 = (+__Z5IKabsd($12704));
                     $12706 = 3.14159265358979 + $12705;
                     $12707 = (+__Z6IKfmoddd($12706,6.2831853071795898));
                     $12708 = -3.14159265358979 + $12707;
                     HEAPF64[$evalcond150>>3] = $12708;
                     $12709 = (($4) + 432|0);
                     $12710 = +HEAPF64[$12709>>3];
                     $12711 = 1.0 + $12710;
                     $12712 = (($evalcond150) + 8|0);
                     HEAPF64[$12712>>3] = $12711;
                     $12713 = (($4) + 384|0);
                     $12714 = +HEAPF64[$12713>>3];
                     $12715 = (($evalcond150) + 16|0);
                     HEAPF64[$12715>>3] = $12714;
                     $12716 = (($4) + 288|0);
                     $12717 = +HEAPF64[$12716>>3];
                     $12718 = (($evalcond150) + 24|0);
                     HEAPF64[$12718>>3] = $12717;
                     $12719 = (($4) + 360|0);
                     $12720 = +HEAPF64[$12719>>3];
                     $12721 = (($evalcond150) + 32|0);
                     HEAPF64[$12721>>3] = $12720;
                     $12722 = (($4) + 408|0);
                     $12723 = +HEAPF64[$12722>>3];
                     $12724 = (($evalcond150) + 40|0);
                     HEAPF64[$12724>>3] = $12723;
                     $12725 = $x410;
                     $12726 = (($evalcond150) + 48|0);
                     HEAPF64[$12726>>3] = $12725;
                     $12727 = $x410;
                     $12728 = (($evalcond150) + 56|0);
                     HEAPF64[$12728>>3] = $12727;
                     $12729 = $x411;
                     $12730 = (($evalcond150) + 64|0);
                     HEAPF64[$12730>>3] = $12729;
                     $12731 = $x411;
                     $12732 = (($evalcond150) + 72|0);
                     HEAPF64[$12732>>3] = $12731;
                     $12733 = +HEAPF64[$evalcond150>>3];
                     $12734 = (+__Z5IKabsd($12733));
                     $12735 = $12734 < 9.9999999999999995E-7;
                     L799: do {
                      if ($12735) {
                       $12736 = (($evalcond150) + 8|0);
                       $12737 = +HEAPF64[$12736>>3];
                       $12738 = (+__Z5IKabsd($12737));
                       $12739 = $12738 < 9.9999999999999995E-7;
                       if (!($12739)) {
                        label = 1761;
                        break;
                       }
                       $12740 = (($evalcond150) + 16|0);
                       $12741 = +HEAPF64[$12740>>3];
                       $12742 = (+__Z5IKabsd($12741));
                       $12743 = $12742 < 9.9999999999999995E-7;
                       if (!($12743)) {
                        label = 1761;
                        break;
                       }
                       $12744 = (($evalcond150) + 24|0);
                       $12745 = +HEAPF64[$12744>>3];
                       $12746 = (+__Z5IKabsd($12745));
                       $12747 = $12746 < 9.9999999999999995E-7;
                       if (!($12747)) {
                        label = 1761;
                        break;
                       }
                       $12748 = (($evalcond150) + 32|0);
                       $12749 = +HEAPF64[$12748>>3];
                       $12750 = (+__Z5IKabsd($12749));
                       $12751 = $12750 < 9.9999999999999995E-7;
                       if (!($12751)) {
                        label = 1761;
                        break;
                       }
                       $12752 = (($evalcond150) + 40|0);
                       $12753 = +HEAPF64[$12752>>3];
                       $12754 = (+__Z5IKabsd($12753));
                       $12755 = $12754 < 9.9999999999999995E-7;
                       if (!($12755)) {
                        label = 1761;
                        break;
                       }
                       $12756 = (($evalcond150) + 48|0);
                       $12757 = +HEAPF64[$12756>>3];
                       $12758 = (+__Z5IKabsd($12757));
                       $12759 = $12758 < 9.9999999999999995E-7;
                       if (!($12759)) {
                        label = 1761;
                        break;
                       }
                       $12760 = (($evalcond150) + 56|0);
                       $12761 = +HEAPF64[$12760>>3];
                       $12762 = (+__Z5IKabsd($12761));
                       $12763 = $12762 < 9.9999999999999995E-7;
                       if (!($12763)) {
                        label = 1761;
                        break;
                       }
                       $12764 = (($evalcond150) + 64|0);
                       $12765 = +HEAPF64[$12764>>3];
                       $12766 = (+__Z5IKabsd($12765));
                       $12767 = $12766 < 9.9999999999999995E-7;
                       if (!($12767)) {
                        label = 1761;
                        break;
                       }
                       $12768 = (($evalcond150) + 72|0);
                       $12769 = +HEAPF64[$12768>>3];
                       $12770 = (+__Z5IKabsd($12769));
                       $12771 = $12770 < 9.9999999999999995E-7;
                       if (!($12771)) {
                        label = 1761;
                        break;
                       }
                       $bgotonextstatement201 = 0;
                       ;HEAP8[$j5valid205+0>>0]=0|0;
                       $12772 = (($4) + 553|0);
                       HEAP8[$12772>>0] = 1;
                       $12773 = (($4) + 136|0);
                       $12774 = +HEAPF64[$12773>>3];
                       $12775 = 1.0 * $12774;
                       $x412 = $12775;
                       $12776 = (($4) + 128|0);
                       $12777 = +HEAPF64[$12776>>3];
                       $12778 = (($4) + 264|0);
                       $12779 = +HEAPF64[$12778>>3];
                       $12780 = $12777 * $12779;
                       $12781 = (($4) + 240|0);
                       $12782 = +HEAPF64[$12781>>3];
                       $12783 = -1.0 * $12782;
                       $12784 = $x412;
                       $12785 = $12783 * $12784;
                       $12786 = $12780 + $12785;
                       $12787 = (+__Z5IKabsd($12786));
                       $12788 = $12787 < 1.9999999999999999E-6;
                       do {
                        if ($12788) {
                         $12789 = (($4) + 128|0);
                         $12790 = +HEAPF64[$12789>>3];
                         $12791 = -1.0 * $12790;
                         $12792 = (($4) + 240|0);
                         $12793 = +HEAPF64[$12792>>3];
                         $12794 = $12791 * $12793;
                         $12795 = (($4) + 264|0);
                         $12796 = +HEAPF64[$12795>>3];
                         $12797 = -1.0 * $12796;
                         $12798 = $x412;
                         $12799 = $12797 * $12798;
                         $12800 = $12794 + $12799;
                         $12801 = (+__Z5IKabsd($12800));
                         $12802 = $12801 < 1.9999999999999999E-6;
                         if (!($12802)) {
                          break;
                         }
                         $12803 = (($4) + 128|0);
                         $12804 = +HEAPF64[$12803>>3];
                         $12805 = (($4) + 264|0);
                         $12806 = +HEAPF64[$12805>>3];
                         $12807 = $12804 * $12806;
                         $12808 = (($4) + 240|0);
                         $12809 = +HEAPF64[$12808>>3];
                         $12810 = -1.0 * $12809;
                         $12811 = $x412;
                         $12812 = $12810 * $12811;
                         $12813 = $12807 + $12812;
                         $12814 = (+__Z5IKsqrd($12813));
                         $12815 = (($4) + 128|0);
                         $12816 = +HEAPF64[$12815>>3];
                         $12817 = -1.0 * $12816;
                         $12818 = (($4) + 240|0);
                         $12819 = +HEAPF64[$12818>>3];
                         $12820 = $12817 * $12819;
                         $12821 = (($4) + 264|0);
                         $12822 = +HEAPF64[$12821>>3];
                         $12823 = -1.0 * $12822;
                         $12824 = $x412;
                         $12825 = $12823 * $12824;
                         $12826 = $12820 + $12825;
                         $12827 = (+__Z5IKsqrd($12826));
                         $12828 = $12814 + $12827;
                         $12829 = $12828 - 1.0;
                         $12830 = (+__Z5IKabsd($12829));
                         $12831 = $12830 <= 1.9999999999999999E-6;
                         if (!($12831)) {
                          break;
                         }
                         break L799;
                        }
                       } while(0);
                       $12832 = (($4) + 128|0);
                       $12833 = +HEAPF64[$12832>>3];
                       $12834 = (($4) + 264|0);
                       $12835 = +HEAPF64[$12834>>3];
                       $12836 = $12833 * $12835;
                       $12837 = (($4) + 240|0);
                       $12838 = +HEAPF64[$12837>>3];
                       $12839 = -1.0 * $12838;
                       $12840 = $x412;
                       $12841 = $12839 * $12840;
                       $12842 = $12836 + $12841;
                       $12843 = (($4) + 128|0);
                       $12844 = +HEAPF64[$12843>>3];
                       $12845 = -1.0 * $12844;
                       $12846 = (($4) + 240|0);
                       $12847 = +HEAPF64[$12846>>3];
                       $12848 = $12845 * $12847;
                       $12849 = (($4) + 264|0);
                       $12850 = +HEAPF64[$12849>>3];
                       $12851 = -1.0 * $12850;
                       $12852 = $x412;
                       $12853 = $12851 * $12852;
                       $12854 = $12848 + $12853;
                       $12855 = (+__Z7IKatan2dd($12842,$12854));
                       HEAPF64[$j5array202>>3] = $12855;
                       $12856 = +HEAPF64[$j5array202>>3];
                       $12857 = (+__Z5IKsind($12856));
                       HEAPF64[$sj5array204>>3] = $12857;
                       $12858 = +HEAPF64[$j5array202>>3];
                       $12859 = (+__Z5IKcosd($12858));
                       HEAPF64[$cj5array203>>3] = $12859;
                       $12860 = +HEAPF64[$j5array202>>3];
                       $12861 = $12860 > 3.14159265358979;
                       if ($12861) {
                        $12862 = +HEAPF64[$j5array202>>3];
                        $12863 = $12862 - 6.2831853071795898;
                        HEAPF64[$j5array202>>3] = $12863;
                       } else {
                        $12864 = +HEAPF64[$j5array202>>3];
                        $12865 = $12864 < -3.14159265358979;
                        if ($12865) {
                         $12866 = +HEAPF64[$j5array202>>3];
                         $12867 = $12866 + 6.2831853071795898;
                         HEAPF64[$j5array202>>3] = $12867;
                        }
                       }
                       HEAP8[$j5valid205>>0] = 1;
                       $ij5206 = 0;
                       while(1) {
                        $12868 = $ij5206;
                        $12869 = ($12868|0)<(1);
                        if (!($12869)) {
                         break;
                        }
                        $12870 = $ij5206;
                        $12871 = (($j5valid205) + ($12870)|0);
                        $12872 = HEAP8[$12871>>0]|0;
                        $12873 = $12872&1;
                        L825: do {
                         if ($12873) {
                          $12874 = $ij5206;
                          $12875 = $12874&255;
                          $12876 = (($4) + 551|0);
                          HEAP8[$12876>>0] = $12875;
                          $12877 = (($4) + 551|0);
                          $12878 = (($12877) + 1|0);
                          HEAP8[$12878>>0] = -1;
                          $12879 = $ij5206;
                          $12880 = (($12879) + 1)|0;
                          $iij5207 = $12880;
                          L828: while(1) {
                           $12881 = $iij5207;
                           $12882 = ($12881|0)<(1);
                           if (!($12882)) {
                            break;
                           }
                           $12883 = $iij5207;
                           $12884 = (($j5valid205) + ($12883)|0);
                           $12885 = HEAP8[$12884>>0]|0;
                           $12886 = $12885&1;
                           do {
                            if ($12886) {
                             $12887 = $ij5206;
                             $12888 = (($cj5array203) + ($12887<<3)|0);
                             $12889 = +HEAPF64[$12888>>3];
                             $12890 = $iij5207;
                             $12891 = (($cj5array203) + ($12890<<3)|0);
                             $12892 = +HEAPF64[$12891>>3];
                             $12893 = $12889 - $12892;
                             $12894 = (+__Z5IKabsd($12893));
                             $12895 = $12894 < 9.9999999999999995E-7;
                             if (!($12895)) {
                              break;
                             }
                             $12896 = $ij5206;
                             $12897 = (($sj5array204) + ($12896<<3)|0);
                             $12898 = +HEAPF64[$12897>>3];
                             $12899 = $iij5207;
                             $12900 = (($sj5array204) + ($12899<<3)|0);
                             $12901 = +HEAPF64[$12900>>3];
                             $12902 = $12898 - $12901;
                             $12903 = (+__Z5IKabsd($12902));
                             $12904 = $12903 < 9.9999999999999995E-7;
                             if ($12904) {
                              label = 1708;
                              break L828;
                             }
                            }
                           } while(0);
                           $12911 = $iij5207;
                           $12912 = (($12911) + 1)|0;
                           $iij5207 = $12912;
                          }
                          if ((label|0) == 1708) {
                           label = 0;
                           $12905 = $iij5207;
                           $12906 = (($j5valid205) + ($12905)|0);
                           HEAP8[$12906>>0] = 0;
                           $12907 = $iij5207;
                           $12908 = $12907&255;
                           $12909 = (($4) + 551|0);
                           $12910 = (($12909) + 1|0);
                           HEAP8[$12910>>0] = $12908;
                          }
                          $12913 = $ij5206;
                          $12914 = (($j5array202) + ($12913<<3)|0);
                          $12915 = +HEAPF64[$12914>>3];
                          $12916 = (($4) + 200|0);
                          HEAPF64[$12916>>3] = $12915;
                          $12917 = $ij5206;
                          $12918 = (($cj5array203) + ($12917<<3)|0);
                          $12919 = +HEAPF64[$12918>>3];
                          $12920 = (($4) + 208|0);
                          HEAPF64[$12920>>3] = $12919;
                          $12921 = $ij5206;
                          $12922 = (($sj5array204) + ($12921<<3)|0);
                          $12923 = +HEAPF64[$12922>>3];
                          $12924 = (($4) + 216|0);
                          HEAPF64[$12924>>3] = $12923;
                          $12925 = (($4) + 200|0);
                          $12926 = +HEAPF64[$12925>>3];
                          $12927 = (+__Z5IKsind($12926));
                          $x413 = $12927;
                          $12928 = (($4) + 200|0);
                          $12929 = +HEAPF64[$12928>>3];
                          $12930 = (+__Z5IKcosd($12929));
                          $x414 = $12930;
                          $12931 = (($4) + 136|0);
                          $12932 = +HEAPF64[$12931>>3];
                          $12933 = 1.0 * $12932;
                          $x415 = $12933;
                          $12934 = $x413;
                          $12935 = 1.0 * $12934;
                          $x416 = $12935;
                          $12936 = (($4) + 136|0);
                          $12937 = +HEAPF64[$12936>>3];
                          $12938 = $x414;
                          $12939 = $12937 * $12938;
                          $x417 = $12939;
                          $12940 = $x414;
                          $12941 = 1.0 * $12940;
                          $x418 = $12941;
                          $12942 = (($4) + 128|0);
                          $12943 = +HEAPF64[$12942>>3];
                          $12944 = $x416;
                          $12945 = $12943 * $12944;
                          $x419 = $12945;
                          $12946 = (($4) + 312|0);
                          $12947 = +HEAPF64[$12946>>3];
                          $12948 = (($4) + 136|0);
                          $12949 = +HEAPF64[$12948>>3];
                          $12950 = $12947 * $12949;
                          $12951 = $x414;
                          $12952 = $12950 + $12951;
                          $12953 = (($4) + 128|0);
                          $12954 = +HEAPF64[$12953>>3];
                          $12955 = (($4) + 240|0);
                          $12956 = +HEAPF64[$12955>>3];
                          $12957 = $12954 * $12956;
                          $12958 = $12952 + $12957;
                          HEAPF64[$evalcond208>>3] = $12958;
                          $12959 = (($4) + 336|0);
                          $12960 = +HEAPF64[$12959>>3];
                          $12961 = (($4) + 136|0);
                          $12962 = +HEAPF64[$12961>>3];
                          $12963 = $12960 * $12962;
                          $12964 = (($4) + 128|0);
                          $12965 = +HEAPF64[$12964>>3];
                          $12966 = (($4) + 264|0);
                          $12967 = +HEAPF64[$12966>>3];
                          $12968 = $12965 * $12967;
                          $12969 = $12963 + $12968;
                          $12970 = $x416;
                          $12971 = -1.0 * $12970;
                          $12972 = $12969 + $12971;
                          $12973 = (($evalcond208) + 8|0);
                          HEAPF64[$12973>>3] = $12972;
                          $12974 = (($4) + 136|0);
                          $12975 = +HEAPF64[$12974>>3];
                          $12976 = $x413;
                          $12977 = $12975 * $12976;
                          $12978 = (($4) + 240|0);
                          $12979 = +HEAPF64[$12978>>3];
                          $12980 = $12977 + $12979;
                          $12981 = (($4) + 128|0);
                          $12982 = +HEAPF64[$12981>>3];
                          $12983 = $x414;
                          $12984 = $12982 * $12983;
                          $12985 = $12980 + $12984;
                          $12986 = (($evalcond208) + 16|0);
                          HEAPF64[$12986>>3] = $12985;
                          $12987 = (($4) + 128|0);
                          $12988 = +HEAPF64[$12987>>3];
                          $12989 = (($4) + 312|0);
                          $12990 = +HEAPF64[$12989>>3];
                          $12991 = $12988 * $12990;
                          $12992 = (($4) + 240|0);
                          $12993 = +HEAPF64[$12992>>3];
                          $12994 = -1.0 * $12993;
                          $12995 = $x415;
                          $12996 = $12994 * $12995;
                          $12997 = $12991 + $12996;
                          $12998 = $x416;
                          $12999 = -1.0 * $12998;
                          $13000 = $12997 + $12999;
                          $13001 = (($evalcond208) + 24|0);
                          HEAPF64[$13001>>3] = $13000;
                          $13002 = (($4) + 128|0);
                          $13003 = +HEAPF64[$13002>>3];
                          $13004 = (($4) + 336|0);
                          $13005 = +HEAPF64[$13004>>3];
                          $13006 = $13003 * $13005;
                          $13007 = $x418;
                          $13008 = -1.0 * $13007;
                          $13009 = $13006 + $13008;
                          $13010 = (($4) + 264|0);
                          $13011 = +HEAPF64[$13010>>3];
                          $13012 = -1.0 * $13011;
                          $13013 = $x415;
                          $13014 = $13012 * $13013;
                          $13015 = $13009 + $13014;
                          $13016 = (($evalcond208) + 32|0);
                          HEAPF64[$13016>>3] = $13015;
                          $13017 = $x417;
                          $13018 = (($4) + 264|0);
                          $13019 = +HEAPF64[$13018>>3];
                          $13020 = $13017 + $13019;
                          $13021 = $x419;
                          $13022 = -1.0 * $13021;
                          $13023 = $13020 + $13022;
                          $13024 = (($evalcond208) + 40|0);
                          HEAPF64[$13024>>3] = $13023;
                          $13025 = $x417;
                          $13026 = (($4) + 312|0);
                          $13027 = +HEAPF64[$13026>>3];
                          $13028 = $13025 + $13027;
                          $13029 = $x419;
                          $13030 = -1.0 * $13029;
                          $13031 = $13028 + $13030;
                          $13032 = (($evalcond208) + 48|0);
                          HEAPF64[$13032>>3] = $13031;
                          $13033 = (($4) + 128|0);
                          $13034 = +HEAPF64[$13033>>3];
                          $13035 = -1.0 * $13034;
                          $13036 = $x418;
                          $13037 = $13035 * $13036;
                          $13038 = $x413;
                          $13039 = -1.0 * $13038;
                          $13040 = $x415;
                          $13041 = $13039 * $13040;
                          $13042 = $13037 + $13041;
                          $13043 = (($4) + 336|0);
                          $13044 = +HEAPF64[$13043>>3];
                          $13045 = $13042 + $13044;
                          $13046 = (($evalcond208) + 56|0);
                          HEAPF64[$13046>>3] = $13045;
                          $13047 = +HEAPF64[$evalcond208>>3];
                          $13048 = (+__Z5IKabsd($13047));
                          $13049 = $13048 > 5.0000000000000004E-6;
                          do {
                           if (!($13049)) {
                            $13050 = (($evalcond208) + 8|0);
                            $13051 = +HEAPF64[$13050>>3];
                            $13052 = (+__Z5IKabsd($13051));
                            $13053 = $13052 > 5.0000000000000004E-6;
                            if ($13053) {
                             break;
                            }
                            $13054 = (($evalcond208) + 16|0);
                            $13055 = +HEAPF64[$13054>>3];
                            $13056 = (+__Z5IKabsd($13055));
                            $13057 = $13056 > 5.0000000000000004E-6;
                            if ($13057) {
                             break;
                            }
                            $13058 = (($evalcond208) + 24|0);
                            $13059 = +HEAPF64[$13058>>3];
                            $13060 = (+__Z5IKabsd($13059));
                            $13061 = $13060 > 5.0000000000000004E-6;
                            if ($13061) {
                             break;
                            }
                            $13062 = (($evalcond208) + 32|0);
                            $13063 = +HEAPF64[$13062>>3];
                            $13064 = (+__Z5IKabsd($13063));
                            $13065 = $13064 > 5.0000000000000004E-6;
                            if ($13065) {
                             break;
                            }
                            $13066 = (($evalcond208) + 40|0);
                            $13067 = +HEAPF64[$13066>>3];
                            $13068 = (+__Z5IKabsd($13067));
                            $13069 = $13068 > 5.0000000000000004E-6;
                            if ($13069) {
                             break;
                            }
                            $13070 = (($evalcond208) + 48|0);
                            $13071 = +HEAPF64[$13070>>3];
                            $13072 = (+__Z5IKabsd($13071));
                            $13073 = $13072 > 5.0000000000000004E-6;
                            if ($13073) {
                             break;
                            }
                            $13074 = (($evalcond208) + 56|0);
                            $13075 = +HEAPF64[$13074>>3];
                            $13076 = (+__Z5IKabsd($13075));
                            $13077 = $13076 > 5.0000000000000004E-6;
                            if ($13077) {
                             break;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos209,6);
                            __THREW__ = 0;
                            $13078 = (invoke_iii(381,($vinfos209|0),0)|0);
                            $13079 = __THREW__; __THREW__ = 0;
                            $13080 = $13079&1;
                            if ($13080) {
                             label = 1755;
                             break L1;
                            }
                            $13081 = (($13078) + 17|0);
                            HEAP8[$13081>>0] = 1;
                            $13082 = +HEAPF64[$4>>3];
                            __THREW__ = 0;
                            $13083 = (invoke_iii(381,($vinfos209|0),0)|0);
                            $13084 = __THREW__; __THREW__ = 0;
                            $13085 = $13084&1;
                            if ($13085) {
                             label = 1755;
                             break L1;
                            }
                            $13086 = (($13083) + 8|0);
                            HEAPF64[$13086>>3] = $13082;
                            $13087 = (($4) + 536|0);
                            $13088 = HEAP8[$13087>>0]|0;
                            __THREW__ = 0;
                            $13089 = (invoke_iii(381,($vinfos209|0),0)|0);
                            $13090 = __THREW__; __THREW__ = 0;
                            $13091 = $13090&1;
                            if ($13091) {
                             label = 1755;
                             break L1;
                            }
                            $13092 = (($13089) + 19|0);
                            HEAP8[$13092>>0] = $13088;
                            $13093 = (($4) + 536|0);
                            $13094 = (($13093) + 1|0);
                            $13095 = HEAP8[$13094>>0]|0;
                            __THREW__ = 0;
                            $13096 = (invoke_iii(381,($vinfos209|0),0)|0);
                            $13097 = __THREW__; __THREW__ = 0;
                            $13098 = $13097&1;
                            if ($13098) {
                             label = 1755;
                             break L1;
                            }
                            $13099 = (($13096) + 19|0);
                            $13100 = (($13099) + 1|0);
                            HEAP8[$13100>>0] = $13095;
                            $13101 = (($4) + 538|0);
                            $13102 = HEAP8[$13101>>0]|0;
                            __THREW__ = 0;
                            $13103 = (invoke_iii(381,($vinfos209|0),0)|0);
                            $13104 = __THREW__; __THREW__ = 0;
                            $13105 = $13104&1;
                            if ($13105) {
                             label = 1755;
                             break L1;
                            }
                            $13106 = (($13103) + 18|0);
                            HEAP8[$13106>>0] = $13102;
                            __THREW__ = 0;
                            $13107 = (invoke_iii(381,($vinfos209|0),1)|0);
                            $13108 = __THREW__; __THREW__ = 0;
                            $13109 = $13108&1;
                            if ($13109) {
                             label = 1755;
                             break L1;
                            }
                            $13110 = (($13107) + 17|0);
                            HEAP8[$13110>>0] = 1;
                            $13111 = (($4) + 40|0);
                            $13112 = +HEAPF64[$13111>>3];
                            __THREW__ = 0;
                            $13113 = (invoke_iii(381,($vinfos209|0),1)|0);
                            $13114 = __THREW__; __THREW__ = 0;
                            $13115 = $13114&1;
                            if ($13115) {
                             label = 1755;
                             break L1;
                            }
                            $13116 = (($13113) + 8|0);
                            HEAPF64[$13116>>3] = $13112;
                            $13117 = (($4) + 539|0);
                            $13118 = HEAP8[$13117>>0]|0;
                            __THREW__ = 0;
                            $13119 = (invoke_iii(381,($vinfos209|0),1)|0);
                            $13120 = __THREW__; __THREW__ = 0;
                            $13121 = $13120&1;
                            if ($13121) {
                             label = 1755;
                             break L1;
                            }
                            $13122 = (($13119) + 19|0);
                            HEAP8[$13122>>0] = $13118;
                            $13123 = (($4) + 539|0);
                            $13124 = (($13123) + 1|0);
                            $13125 = HEAP8[$13124>>0]|0;
                            __THREW__ = 0;
                            $13126 = (invoke_iii(381,($vinfos209|0),1)|0);
                            $13127 = __THREW__; __THREW__ = 0;
                            $13128 = $13127&1;
                            if ($13128) {
                             label = 1755;
                             break L1;
                            }
                            $13129 = (($13126) + 19|0);
                            $13130 = (($13129) + 1|0);
                            HEAP8[$13130>>0] = $13125;
                            $13131 = (($4) + 541|0);
                            $13132 = HEAP8[$13131>>0]|0;
                            __THREW__ = 0;
                            $13133 = (invoke_iii(381,($vinfos209|0),1)|0);
                            $13134 = __THREW__; __THREW__ = 0;
                            $13135 = $13134&1;
                            if ($13135) {
                             label = 1755;
                             break L1;
                            }
                            $13136 = (($13133) + 18|0);
                            HEAP8[$13136>>0] = $13132;
                            __THREW__ = 0;
                            $13137 = (invoke_iii(381,($vinfos209|0),2)|0);
                            $13138 = __THREW__; __THREW__ = 0;
                            $13139 = $13138&1;
                            if ($13139) {
                             label = 1755;
                             break L1;
                            }
                            $13140 = (($13137) + 17|0);
                            HEAP8[$13140>>0] = 1;
                            $13141 = (($4) + 80|0);
                            $13142 = +HEAPF64[$13141>>3];
                            __THREW__ = 0;
                            $13143 = (invoke_iii(381,($vinfos209|0),2)|0);
                            $13144 = __THREW__; __THREW__ = 0;
                            $13145 = $13144&1;
                            if ($13145) {
                             label = 1755;
                             break L1;
                            }
                            $13146 = (($13143) + 8|0);
                            HEAPF64[$13146>>3] = $13142;
                            $13147 = (($4) + 542|0);
                            $13148 = HEAP8[$13147>>0]|0;
                            __THREW__ = 0;
                            $13149 = (invoke_iii(381,($vinfos209|0),2)|0);
                            $13150 = __THREW__; __THREW__ = 0;
                            $13151 = $13150&1;
                            if ($13151) {
                             label = 1755;
                             break L1;
                            }
                            $13152 = (($13149) + 19|0);
                            HEAP8[$13152>>0] = $13148;
                            $13153 = (($4) + 542|0);
                            $13154 = (($13153) + 1|0);
                            $13155 = HEAP8[$13154>>0]|0;
                            __THREW__ = 0;
                            $13156 = (invoke_iii(381,($vinfos209|0),2)|0);
                            $13157 = __THREW__; __THREW__ = 0;
                            $13158 = $13157&1;
                            if ($13158) {
                             label = 1755;
                             break L1;
                            }
                            $13159 = (($13156) + 19|0);
                            $13160 = (($13159) + 1|0);
                            HEAP8[$13160>>0] = $13155;
                            $13161 = (($4) + 544|0);
                            $13162 = HEAP8[$13161>>0]|0;
                            __THREW__ = 0;
                            $13163 = (invoke_iii(381,($vinfos209|0),2)|0);
                            $13164 = __THREW__; __THREW__ = 0;
                            $13165 = $13164&1;
                            if ($13165) {
                             label = 1755;
                             break L1;
                            }
                            $13166 = (($13163) + 18|0);
                            HEAP8[$13166>>0] = $13162;
                            __THREW__ = 0;
                            $13167 = (invoke_iii(381,($vinfos209|0),3)|0);
                            $13168 = __THREW__; __THREW__ = 0;
                            $13169 = $13168&1;
                            if ($13169) {
                             label = 1755;
                             break L1;
                            }
                            $13170 = (($13167) + 17|0);
                            HEAP8[$13170>>0] = 1;
                            $13171 = (($4) + 120|0);
                            $13172 = +HEAPF64[$13171>>3];
                            __THREW__ = 0;
                            $13173 = (invoke_iii(381,($vinfos209|0),3)|0);
                            $13174 = __THREW__; __THREW__ = 0;
                            $13175 = $13174&1;
                            if ($13175) {
                             label = 1755;
                             break L1;
                            }
                            $13176 = (($13173) + 8|0);
                            HEAPF64[$13176>>3] = $13172;
                            $13177 = (($4) + 545|0);
                            $13178 = HEAP8[$13177>>0]|0;
                            __THREW__ = 0;
                            $13179 = (invoke_iii(381,($vinfos209|0),3)|0);
                            $13180 = __THREW__; __THREW__ = 0;
                            $13181 = $13180&1;
                            if ($13181) {
                             label = 1755;
                             break L1;
                            }
                            $13182 = (($13179) + 19|0);
                            HEAP8[$13182>>0] = $13178;
                            $13183 = (($4) + 545|0);
                            $13184 = (($13183) + 1|0);
                            $13185 = HEAP8[$13184>>0]|0;
                            __THREW__ = 0;
                            $13186 = (invoke_iii(381,($vinfos209|0),3)|0);
                            $13187 = __THREW__; __THREW__ = 0;
                            $13188 = $13187&1;
                            if ($13188) {
                             label = 1755;
                             break L1;
                            }
                            $13189 = (($13186) + 19|0);
                            $13190 = (($13189) + 1|0);
                            HEAP8[$13190>>0] = $13185;
                            $13191 = (($4) + 547|0);
                            $13192 = HEAP8[$13191>>0]|0;
                            __THREW__ = 0;
                            $13193 = (invoke_iii(381,($vinfos209|0),3)|0);
                            $13194 = __THREW__; __THREW__ = 0;
                            $13195 = $13194&1;
                            if ($13195) {
                             label = 1755;
                             break L1;
                            }
                            $13196 = (($13193) + 18|0);
                            HEAP8[$13196>>0] = $13192;
                            __THREW__ = 0;
                            $13197 = (invoke_iii(381,($vinfos209|0),4)|0);
                            $13198 = __THREW__; __THREW__ = 0;
                            $13199 = $13198&1;
                            if ($13199) {
                             label = 1755;
                             break L1;
                            }
                            $13200 = (($13197) + 17|0);
                            HEAP8[$13200>>0] = 1;
                            $13201 = (($4) + 160|0);
                            $13202 = +HEAPF64[$13201>>3];
                            __THREW__ = 0;
                            $13203 = (invoke_iii(381,($vinfos209|0),4)|0);
                            $13204 = __THREW__; __THREW__ = 0;
                            $13205 = $13204&1;
                            if ($13205) {
                             label = 1755;
                             break L1;
                            }
                            $13206 = (($13203) + 8|0);
                            HEAPF64[$13206>>3] = $13202;
                            $13207 = (($4) + 548|0);
                            $13208 = HEAP8[$13207>>0]|0;
                            __THREW__ = 0;
                            $13209 = (invoke_iii(381,($vinfos209|0),4)|0);
                            $13210 = __THREW__; __THREW__ = 0;
                            $13211 = $13210&1;
                            if ($13211) {
                             label = 1755;
                             break L1;
                            }
                            $13212 = (($13209) + 19|0);
                            HEAP8[$13212>>0] = $13208;
                            $13213 = (($4) + 548|0);
                            $13214 = (($13213) + 1|0);
                            $13215 = HEAP8[$13214>>0]|0;
                            __THREW__ = 0;
                            $13216 = (invoke_iii(381,($vinfos209|0),4)|0);
                            $13217 = __THREW__; __THREW__ = 0;
                            $13218 = $13217&1;
                            if ($13218) {
                             label = 1755;
                             break L1;
                            }
                            $13219 = (($13216) + 19|0);
                            $13220 = (($13219) + 1|0);
                            HEAP8[$13220>>0] = $13215;
                            $13221 = (($4) + 550|0);
                            $13222 = HEAP8[$13221>>0]|0;
                            __THREW__ = 0;
                            $13223 = (invoke_iii(381,($vinfos209|0),4)|0);
                            $13224 = __THREW__; __THREW__ = 0;
                            $13225 = $13224&1;
                            if ($13225) {
                             label = 1755;
                             break L1;
                            }
                            $13226 = (($13223) + 18|0);
                            HEAP8[$13226>>0] = $13222;
                            __THREW__ = 0;
                            $13227 = (invoke_iii(381,($vinfos209|0),5)|0);
                            $13228 = __THREW__; __THREW__ = 0;
                            $13229 = $13228&1;
                            if ($13229) {
                             label = 1755;
                             break L1;
                            }
                            $13230 = (($13227) + 17|0);
                            HEAP8[$13230>>0] = 1;
                            $13231 = (($4) + 200|0);
                            $13232 = +HEAPF64[$13231>>3];
                            __THREW__ = 0;
                            $13233 = (invoke_iii(381,($vinfos209|0),5)|0);
                            $13234 = __THREW__; __THREW__ = 0;
                            $13235 = $13234&1;
                            if ($13235) {
                             label = 1755;
                             break L1;
                            }
                            $13236 = (($13233) + 8|0);
                            HEAPF64[$13236>>3] = $13232;
                            $13237 = (($4) + 551|0);
                            $13238 = HEAP8[$13237>>0]|0;
                            __THREW__ = 0;
                            $13239 = (invoke_iii(381,($vinfos209|0),5)|0);
                            $13240 = __THREW__; __THREW__ = 0;
                            $13241 = $13240&1;
                            if ($13241) {
                             label = 1755;
                             break L1;
                            }
                            $13242 = (($13239) + 19|0);
                            HEAP8[$13242>>0] = $13238;
                            $13243 = (($4) + 551|0);
                            $13244 = (($13243) + 1|0);
                            $13245 = HEAP8[$13244>>0]|0;
                            __THREW__ = 0;
                            $13246 = (invoke_iii(381,($vinfos209|0),5)|0);
                            $13247 = __THREW__; __THREW__ = 0;
                            $13248 = $13247&1;
                            if ($13248) {
                             label = 1755;
                             break L1;
                            }
                            $13249 = (($13246) + 19|0);
                            $13250 = (($13249) + 1|0);
                            HEAP8[$13250>>0] = $13245;
                            $13251 = (($4) + 553|0);
                            $13252 = HEAP8[$13251>>0]|0;
                            __THREW__ = 0;
                            $13253 = (invoke_iii(381,($vinfos209|0),5)|0);
                            $13254 = __THREW__; __THREW__ = 0;
                            $13255 = $13254&1;
                            if ($13255) {
                             label = 1755;
                             break L1;
                            }
                            $13256 = (($13253) + 18|0);
                            HEAP8[$13256>>0] = $13252;
                            __THREW__ = 0;
                            invoke_vii(382,($vfree210|0),0);
                            $13257 = __THREW__; __THREW__ = 0;
                            $13258 = $13257&1;
                            if ($13258) {
                             label = 1755;
                             break L1;
                            }
                            $13259 = $1;
                            $13260 = HEAP32[$13259>>2]|0;
                            $13261 = (($13260) + 8|0);
                            $13262 = HEAP32[$13261>>2]|0;
                            __THREW__ = 0;
                            (invoke_iiii($13262|0,($13259|0),($vinfos209|0),($vfree210|0))|0);
                            $13263 = __THREW__; __THREW__ = 0;
                            $13264 = $13263&1;
                            if ($13264) {
                             label = 1756;
                             break L1;
                            }
                            __THREW__ = 0;
                            invoke_vi(366,($vfree210|0));
                            $13265 = __THREW__; __THREW__ = 0;
                            $13266 = $13265&1;
                            if ($13266) {
                             label = 1755;
                             break L1;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos209);
                            break L825;
                           }
                          } while(0);
                         } else {
                         }
                        } while(0);
                        $13267 = $ij5206;
                        $13268 = (($13267) + 1)|0;
                        $ij5206 = $13268;
                       }
                       label = 1761;
                      } else {
                       label = 1761;
                      }
                     } while(0);
                     if ((label|0) == 1761) {
                      label = 0;
                     }
                     $13277 = $bgotonextstatement201;
                     $13278 = $13277&1;
                     if ($13278) {
                      $bgotonextstatement211 = 1;
                      $13279 = (($4) + 432|0);
                      $13280 = +HEAPF64[$13279>>3];
                      $13281 = (($4) + 168|0);
                      $13282 = +HEAPF64[$13281>>3];
                      $13283 = -1.0 * $13282;
                      $13284 = $13280 + $13283;
                      $x420 = $13284;
                      $13285 = (($4) + 176|0);
                      $13286 = +HEAPF64[$13285>>3];
                      $13287 = -1.0 * $13286;
                      $13288 = (($4) + 288|0);
                      $13289 = +HEAPF64[$13288>>3];
                      $13290 = $13287 + $13289;
                      $x421 = $13290;
                      $13291 = (($4) + 168|0);
                      $13292 = +HEAPF64[$13291>>3];
                      $13293 = 1.0 * $13292;
                      $x422 = $13293;
                      $13294 = (($4) + 176|0);
                      $13295 = +HEAPF64[$13294>>3];
                      $13296 = 1.0 * $13295;
                      $x423 = $13296;
                      $13297 = (($4) + 120|0);
                      $13298 = +HEAPF64[$13297>>3];
                      $13299 = (+__Z5IKabsd($13298));
                      $13300 = 3.14159265358979 + $13299;
                      $13301 = (+__Z6IKfmoddd($13300,6.2831853071795898));
                      $13302 = -3.14159265358979 + $13301;
                      HEAPF64[$evalcond150>>3] = $13302;
                      $13303 = $x420;
                      $13304 = (($evalcond150) + 8|0);
                      HEAPF64[$13304>>3] = $13303;
                      $13305 = $x420;
                      $13306 = (($evalcond150) + 16|0);
                      HEAPF64[$13306>>3] = $13305;
                      $13307 = $x421;
                      $13308 = (($evalcond150) + 24|0);
                      HEAPF64[$13308>>3] = $13307;
                      $13309 = (($4) + 360|0);
                      $13310 = +HEAPF64[$13309>>3];
                      $13311 = (($evalcond150) + 32|0);
                      HEAPF64[$13311>>3] = $13310;
                      $13312 = $x421;
                      $13313 = (($evalcond150) + 40|0);
                      HEAPF64[$13313>>3] = $13312;
                      $13314 = (($4) + 432|0);
                      $13315 = +HEAPF64[$13314>>3];
                      $13316 = (($4) + 176|0);
                      $13317 = +HEAPF64[$13316>>3];
                      $13318 = $13315 * $13317;
                      $13319 = (($4) + 288|0);
                      $13320 = +HEAPF64[$13319>>3];
                      $13321 = -1.0 * $13320;
                      $13322 = $x422;
                      $13323 = $13321 * $13322;
                      $13324 = $13318 + $13323;
                      $13325 = (($evalcond150) + 48|0);
                      HEAPF64[$13325>>3] = $13324;
                      $13326 = (($4) + 240|0);
                      $13327 = +HEAPF64[$13326>>3];
                      $13328 = -1.0 * $13327;
                      $13329 = $x423;
                      $13330 = $13328 * $13329;
                      $13331 = (($4) + 384|0);
                      $13332 = +HEAPF64[$13331>>3];
                      $13333 = -1.0 * $13332;
                      $13334 = $x422;
                      $13335 = $13333 * $13334;
                      $13336 = $13330 + $13335;
                      $13337 = (($evalcond150) + 56|0);
                      HEAPF64[$13337>>3] = $13336;
                      $13338 = (($4) + 408|0);
                      $13339 = +HEAPF64[$13338>>3];
                      $13340 = -1.0 * $13339;
                      $13341 = $x422;
                      $13342 = $13340 * $13341;
                      $13343 = (($4) + 264|0);
                      $13344 = +HEAPF64[$13343>>3];
                      $13345 = -1.0 * $13344;
                      $13346 = $x423;
                      $13347 = $13345 * $13346;
                      $13348 = $13342 + $13347;
                      $13349 = (($evalcond150) + 64|0);
                      HEAPF64[$13349>>3] = $13348;
                      $13350 = (($4) + 432|0);
                      $13351 = +HEAPF64[$13350>>3];
                      $13352 = -1.0 * $13351;
                      $13353 = $x422;
                      $13354 = $13352 * $13353;
                      $13355 = 1.0 + $13354;
                      $13356 = (($4) + 288|0);
                      $13357 = +HEAPF64[$13356>>3];
                      $13358 = -1.0 * $13357;
                      $13359 = $x423;
                      $13360 = $13358 * $13359;
                      $13361 = $13355 + $13360;
                      $13362 = (($evalcond150) + 72|0);
                      HEAPF64[$13362>>3] = $13361;
                      $13363 = +HEAPF64[$evalcond150>>3];
                      $13364 = (+__Z5IKabsd($13363));
                      $13365 = $13364 < 9.9999999999999995E-7;
                      L890: do {
                       if ($13365) {
                        $13366 = (($evalcond150) + 8|0);
                        $13367 = +HEAPF64[$13366>>3];
                        $13368 = (+__Z5IKabsd($13367));
                        $13369 = $13368 < 9.9999999999999995E-7;
                        if (!($13369)) {
                         label = 1845;
                         break;
                        }
                        $13370 = (($evalcond150) + 16|0);
                        $13371 = +HEAPF64[$13370>>3];
                        $13372 = (+__Z5IKabsd($13371));
                        $13373 = $13372 < 9.9999999999999995E-7;
                        if (!($13373)) {
                         label = 1845;
                         break;
                        }
                        $13374 = (($evalcond150) + 24|0);
                        $13375 = +HEAPF64[$13374>>3];
                        $13376 = (+__Z5IKabsd($13375));
                        $13377 = $13376 < 9.9999999999999995E-7;
                        if (!($13377)) {
                         label = 1845;
                         break;
                        }
                        $13378 = (($evalcond150) + 32|0);
                        $13379 = +HEAPF64[$13378>>3];
                        $13380 = (+__Z5IKabsd($13379));
                        $13381 = $13380 < 9.9999999999999995E-7;
                        if (!($13381)) {
                         label = 1845;
                         break;
                        }
                        $13382 = (($evalcond150) + 40|0);
                        $13383 = +HEAPF64[$13382>>3];
                        $13384 = (+__Z5IKabsd($13383));
                        $13385 = $13384 < 9.9999999999999995E-7;
                        if (!($13385)) {
                         label = 1845;
                         break;
                        }
                        $13386 = (($evalcond150) + 48|0);
                        $13387 = +HEAPF64[$13386>>3];
                        $13388 = (+__Z5IKabsd($13387));
                        $13389 = $13388 < 9.9999999999999995E-7;
                        if (!($13389)) {
                         label = 1845;
                         break;
                        }
                        $13390 = (($evalcond150) + 56|0);
                        $13391 = +HEAPF64[$13390>>3];
                        $13392 = (+__Z5IKabsd($13391));
                        $13393 = $13392 < 9.9999999999999995E-7;
                        if (!($13393)) {
                         label = 1845;
                         break;
                        }
                        $13394 = (($evalcond150) + 64|0);
                        $13395 = +HEAPF64[$13394>>3];
                        $13396 = (+__Z5IKabsd($13395));
                        $13397 = $13396 < 9.9999999999999995E-7;
                        if (!($13397)) {
                         label = 1845;
                         break;
                        }
                        $13398 = (($evalcond150) + 72|0);
                        $13399 = +HEAPF64[$13398>>3];
                        $13400 = (+__Z5IKabsd($13399));
                        $13401 = $13400 < 9.9999999999999995E-7;
                        if (!($13401)) {
                         label = 1845;
                         break;
                        }
                        $bgotonextstatement211 = 0;
                        ;HEAP8[$j5valid215+0>>0]=0|0;
                        $13402 = (($4) + 553|0);
                        HEAP8[$13402>>0] = 1;
                        $13403 = (($4) + 312|0);
                        $13404 = +HEAPF64[$13403>>3];
                        $13405 = (+__Z5IKabsd($13404));
                        $13406 = $13405 < 1.9999999999999999E-6;
                        do {
                         if ($13406) {
                          $13407 = (($4) + 336|0);
                          $13408 = +HEAPF64[$13407>>3];
                          $13409 = (+__Z5IKabsd($13408));
                          $13410 = $13409 < 1.9999999999999999E-6;
                          if (!($13410)) {
                           break;
                          }
                          $13411 = (($4) + 312|0);
                          $13412 = +HEAPF64[$13411>>3];
                          $13413 = (+__Z5IKsqrd($13412));
                          $13414 = (($4) + 336|0);
                          $13415 = +HEAPF64[$13414>>3];
                          $13416 = (+__Z5IKsqrd($13415));
                          $13417 = $13413 + $13416;
                          $13418 = $13417 - 1.0;
                          $13419 = (+__Z5IKabsd($13418));
                          $13420 = $13419 <= 1.9999999999999999E-6;
                          if (!($13420)) {
                           break;
                          }
                          break L890;
                         }
                        } while(0);
                        $13421 = (($4) + 312|0);
                        $13422 = +HEAPF64[$13421>>3];
                        $13423 = (($4) + 336|0);
                        $13424 = +HEAPF64[$13423>>3];
                        $13425 = (+__Z7IKatan2dd($13422,$13424));
                        HEAPF64[$j5array212>>3] = $13425;
                        $13426 = +HEAPF64[$j5array212>>3];
                        $13427 = (+__Z5IKsind($13426));
                        HEAPF64[$sj5array214>>3] = $13427;
                        $13428 = +HEAPF64[$j5array212>>3];
                        $13429 = (+__Z5IKcosd($13428));
                        HEAPF64[$cj5array213>>3] = $13429;
                        $13430 = +HEAPF64[$j5array212>>3];
                        $13431 = $13430 > 3.14159265358979;
                        if ($13431) {
                         $13432 = +HEAPF64[$j5array212>>3];
                         $13433 = $13432 - 6.2831853071795898;
                         HEAPF64[$j5array212>>3] = $13433;
                        } else {
                         $13434 = +HEAPF64[$j5array212>>3];
                         $13435 = $13434 < -3.14159265358979;
                         if ($13435) {
                          $13436 = +HEAPF64[$j5array212>>3];
                          $13437 = $13436 + 6.2831853071795898;
                          HEAPF64[$j5array212>>3] = $13437;
                         }
                        }
                        HEAP8[$j5valid215>>0] = 1;
                        $ij5216 = 0;
                        while(1) {
                         $13438 = $ij5216;
                         $13439 = ($13438|0)<(1);
                         if (!($13439)) {
                          break;
                         }
                         $13440 = $ij5216;
                         $13441 = (($j5valid215) + ($13440)|0);
                         $13442 = HEAP8[$13441>>0]|0;
                         $13443 = $13442&1;
                         L916: do {
                          if ($13443) {
                           $13444 = $ij5216;
                           $13445 = $13444&255;
                           $13446 = (($4) + 551|0);
                           HEAP8[$13446>>0] = $13445;
                           $13447 = (($4) + 551|0);
                           $13448 = (($13447) + 1|0);
                           HEAP8[$13448>>0] = -1;
                           $13449 = $ij5216;
                           $13450 = (($13449) + 1)|0;
                           $iij5217 = $13450;
                           L919: while(1) {
                            $13451 = $iij5217;
                            $13452 = ($13451|0)<(1);
                            if (!($13452)) {
                             break;
                            }
                            $13453 = $iij5217;
                            $13454 = (($j5valid215) + ($13453)|0);
                            $13455 = HEAP8[$13454>>0]|0;
                            $13456 = $13455&1;
                            do {
                             if ($13456) {
                              $13457 = $ij5216;
                              $13458 = (($cj5array213) + ($13457<<3)|0);
                              $13459 = +HEAPF64[$13458>>3];
                              $13460 = $iij5217;
                              $13461 = (($cj5array213) + ($13460<<3)|0);
                              $13462 = +HEAPF64[$13461>>3];
                              $13463 = $13459 - $13462;
                              $13464 = (+__Z5IKabsd($13463));
                              $13465 = $13464 < 9.9999999999999995E-7;
                              if (!($13465)) {
                               break;
                              }
                              $13466 = $ij5216;
                              $13467 = (($sj5array214) + ($13466<<3)|0);
                              $13468 = +HEAPF64[$13467>>3];
                              $13469 = $iij5217;
                              $13470 = (($sj5array214) + ($13469<<3)|0);
                              $13471 = +HEAPF64[$13470>>3];
                              $13472 = $13468 - $13471;
                              $13473 = (+__Z5IKabsd($13472));
                              $13474 = $13473 < 9.9999999999999995E-7;
                              if ($13474) {
                               label = 1792;
                               break L919;
                              }
                             }
                            } while(0);
                            $13481 = $iij5217;
                            $13482 = (($13481) + 1)|0;
                            $iij5217 = $13482;
                           }
                           if ((label|0) == 1792) {
                            label = 0;
                            $13475 = $iij5217;
                            $13476 = (($j5valid215) + ($13475)|0);
                            HEAP8[$13476>>0] = 0;
                            $13477 = $iij5217;
                            $13478 = $13477&255;
                            $13479 = (($4) + 551|0);
                            $13480 = (($13479) + 1|0);
                            HEAP8[$13480>>0] = $13478;
                           }
                           $13483 = $ij5216;
                           $13484 = (($j5array212) + ($13483<<3)|0);
                           $13485 = +HEAPF64[$13484>>3];
                           $13486 = (($4) + 200|0);
                           HEAPF64[$13486>>3] = $13485;
                           $13487 = $ij5216;
                           $13488 = (($cj5array213) + ($13487<<3)|0);
                           $13489 = +HEAPF64[$13488>>3];
                           $13490 = (($4) + 208|0);
                           HEAPF64[$13490>>3] = $13489;
                           $13491 = $ij5216;
                           $13492 = (($sj5array214) + ($13491<<3)|0);
                           $13493 = +HEAPF64[$13492>>3];
                           $13494 = (($4) + 216|0);
                           HEAPF64[$13494>>3] = $13493;
                           $13495 = (($4) + 200|0);
                           $13496 = +HEAPF64[$13495>>3];
                           $13497 = (+__Z5IKcosd($13496));
                           $x424 = $13497;
                           $13498 = (($4) + 200|0);
                           $13499 = +HEAPF64[$13498>>3];
                           $13500 = (+__Z5IKsind($13499));
                           $x425 = $13500;
                           $13501 = (($4) + 432|0);
                           $13502 = +HEAPF64[$13501>>3];
                           $13503 = 1.0 * $13502;
                           $x426 = $13503;
                           $13504 = $x425;
                           $13505 = 1.0 * $13504;
                           $x427 = $13505;
                           $13506 = (($4) + 384|0);
                           $13507 = +HEAPF64[$13506>>3];
                           $13508 = (($4) + 288|0);
                           $13509 = +HEAPF64[$13508>>3];
                           $13510 = $x424;
                           $13511 = $13509 * $13510;
                           $13512 = $13507 + $13511;
                           HEAPF64[$evalcond218>>3] = $13512;
                           $13513 = $x427;
                           $13514 = -1.0 * $13513;
                           $13515 = (($4) + 312|0);
                           $13516 = +HEAPF64[$13515>>3];
                           $13517 = $13514 + $13516;
                           $13518 = (($evalcond218) + 8|0);
                           HEAPF64[$13518>>3] = $13517;
                           $13519 = $x424;
                           $13520 = -1.0 * $13519;
                           $13521 = (($4) + 336|0);
                           $13522 = +HEAPF64[$13521>>3];
                           $13523 = $13520 + $13522;
                           $13524 = (($evalcond218) + 16|0);
                           HEAPF64[$13524>>3] = $13523;
                           $13525 = (($4) + 432|0);
                           $13526 = +HEAPF64[$13525>>3];
                           $13527 = $x425;
                           $13528 = $13526 * $13527;
                           $13529 = (($4) + 264|0);
                           $13530 = +HEAPF64[$13529>>3];
                           $13531 = $13528 + $13530;
                           $13532 = (($evalcond218) + 24|0);
                           HEAPF64[$13532>>3] = $13531;
                           $13533 = (($4) + 288|0);
                           $13534 = +HEAPF64[$13533>>3];
                           $13535 = -1.0 * $13534;
                           $13536 = $x427;
                           $13537 = $13535 * $13536;
                           $13538 = (($4) + 408|0);
                           $13539 = +HEAPF64[$13538>>3];
                           $13540 = $13537 + $13539;
                           $13541 = (($evalcond218) + 32|0);
                           HEAPF64[$13541>>3] = $13540;
                           $13542 = $x424;
                           $13543 = -1.0 * $13542;
                           $13544 = $x426;
                           $13545 = $13543 * $13544;
                           $13546 = (($4) + 240|0);
                           $13547 = +HEAPF64[$13546>>3];
                           $13548 = $13545 + $13547;
                           $13549 = (($evalcond218) + 40|0);
                           HEAPF64[$13549>>3] = $13548;
                           $13550 = (($4) + 240|0);
                           $13551 = +HEAPF64[$13550>>3];
                           $13552 = -1.0 * $13551;
                           $13553 = $x426;
                           $13554 = $13552 * $13553;
                           $13555 = $x424;
                           $13556 = $13554 + $13555;
                           $13557 = (($4) + 288|0);
                           $13558 = +HEAPF64[$13557>>3];
                           $13559 = (($4) + 384|0);
                           $13560 = +HEAPF64[$13559>>3];
                           $13561 = $13558 * $13560;
                           $13562 = $13556 + $13561;
                           $13563 = (($evalcond218) + 48|0);
                           HEAPF64[$13563>>3] = $13562;
                           $13564 = $x427;
                           $13565 = -1.0 * $13564;
                           $13566 = (($4) + 288|0);
                           $13567 = +HEAPF64[$13566>>3];
                           $13568 = (($4) + 408|0);
                           $13569 = +HEAPF64[$13568>>3];
                           $13570 = $13567 * $13569;
                           $13571 = $13565 + $13570;
                           $13572 = (($4) + 264|0);
                           $13573 = +HEAPF64[$13572>>3];
                           $13574 = -1.0 * $13573;
                           $13575 = $x426;
                           $13576 = $13574 * $13575;
                           $13577 = $13571 + $13576;
                           $13578 = (($evalcond218) + 56|0);
                           HEAPF64[$13578>>3] = $13577;
                           $13579 = +HEAPF64[$evalcond218>>3];
                           $13580 = (+__Z5IKabsd($13579));
                           $13581 = $13580 > 5.0000000000000004E-6;
                           do {
                            if (!($13581)) {
                             $13582 = (($evalcond218) + 8|0);
                             $13583 = +HEAPF64[$13582>>3];
                             $13584 = (+__Z5IKabsd($13583));
                             $13585 = $13584 > 5.0000000000000004E-6;
                             if ($13585) {
                              break;
                             }
                             $13586 = (($evalcond218) + 16|0);
                             $13587 = +HEAPF64[$13586>>3];
                             $13588 = (+__Z5IKabsd($13587));
                             $13589 = $13588 > 5.0000000000000004E-6;
                             if ($13589) {
                              break;
                             }
                             $13590 = (($evalcond218) + 24|0);
                             $13591 = +HEAPF64[$13590>>3];
                             $13592 = (+__Z5IKabsd($13591));
                             $13593 = $13592 > 5.0000000000000004E-6;
                             if ($13593) {
                              break;
                             }
                             $13594 = (($evalcond218) + 32|0);
                             $13595 = +HEAPF64[$13594>>3];
                             $13596 = (+__Z5IKabsd($13595));
                             $13597 = $13596 > 5.0000000000000004E-6;
                             if ($13597) {
                              break;
                             }
                             $13598 = (($evalcond218) + 40|0);
                             $13599 = +HEAPF64[$13598>>3];
                             $13600 = (+__Z5IKabsd($13599));
                             $13601 = $13600 > 5.0000000000000004E-6;
                             if ($13601) {
                              break;
                             }
                             $13602 = (($evalcond218) + 48|0);
                             $13603 = +HEAPF64[$13602>>3];
                             $13604 = (+__Z5IKabsd($13603));
                             $13605 = $13604 > 5.0000000000000004E-6;
                             if ($13605) {
                              break;
                             }
                             $13606 = (($evalcond218) + 56|0);
                             $13607 = +HEAPF64[$13606>>3];
                             $13608 = (+__Z5IKabsd($13607));
                             $13609 = $13608 > 5.0000000000000004E-6;
                             if ($13609) {
                              break;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos219,6);
                             __THREW__ = 0;
                             $13610 = (invoke_iii(381,($vinfos219|0),0)|0);
                             $13611 = __THREW__; __THREW__ = 0;
                             $13612 = $13611&1;
                             if ($13612) {
                              label = 1839;
                              break L1;
                             }
                             $13613 = (($13610) + 17|0);
                             HEAP8[$13613>>0] = 1;
                             $13614 = +HEAPF64[$4>>3];
                             __THREW__ = 0;
                             $13615 = (invoke_iii(381,($vinfos219|0),0)|0);
                             $13616 = __THREW__; __THREW__ = 0;
                             $13617 = $13616&1;
                             if ($13617) {
                              label = 1839;
                              break L1;
                             }
                             $13618 = (($13615) + 8|0);
                             HEAPF64[$13618>>3] = $13614;
                             $13619 = (($4) + 536|0);
                             $13620 = HEAP8[$13619>>0]|0;
                             __THREW__ = 0;
                             $13621 = (invoke_iii(381,($vinfos219|0),0)|0);
                             $13622 = __THREW__; __THREW__ = 0;
                             $13623 = $13622&1;
                             if ($13623) {
                              label = 1839;
                              break L1;
                             }
                             $13624 = (($13621) + 19|0);
                             HEAP8[$13624>>0] = $13620;
                             $13625 = (($4) + 536|0);
                             $13626 = (($13625) + 1|0);
                             $13627 = HEAP8[$13626>>0]|0;
                             __THREW__ = 0;
                             $13628 = (invoke_iii(381,($vinfos219|0),0)|0);
                             $13629 = __THREW__; __THREW__ = 0;
                             $13630 = $13629&1;
                             if ($13630) {
                              label = 1839;
                              break L1;
                             }
                             $13631 = (($13628) + 19|0);
                             $13632 = (($13631) + 1|0);
                             HEAP8[$13632>>0] = $13627;
                             $13633 = (($4) + 538|0);
                             $13634 = HEAP8[$13633>>0]|0;
                             __THREW__ = 0;
                             $13635 = (invoke_iii(381,($vinfos219|0),0)|0);
                             $13636 = __THREW__; __THREW__ = 0;
                             $13637 = $13636&1;
                             if ($13637) {
                              label = 1839;
                              break L1;
                             }
                             $13638 = (($13635) + 18|0);
                             HEAP8[$13638>>0] = $13634;
                             __THREW__ = 0;
                             $13639 = (invoke_iii(381,($vinfos219|0),1)|0);
                             $13640 = __THREW__; __THREW__ = 0;
                             $13641 = $13640&1;
                             if ($13641) {
                              label = 1839;
                              break L1;
                             }
                             $13642 = (($13639) + 17|0);
                             HEAP8[$13642>>0] = 1;
                             $13643 = (($4) + 40|0);
                             $13644 = +HEAPF64[$13643>>3];
                             __THREW__ = 0;
                             $13645 = (invoke_iii(381,($vinfos219|0),1)|0);
                             $13646 = __THREW__; __THREW__ = 0;
                             $13647 = $13646&1;
                             if ($13647) {
                              label = 1839;
                              break L1;
                             }
                             $13648 = (($13645) + 8|0);
                             HEAPF64[$13648>>3] = $13644;
                             $13649 = (($4) + 539|0);
                             $13650 = HEAP8[$13649>>0]|0;
                             __THREW__ = 0;
                             $13651 = (invoke_iii(381,($vinfos219|0),1)|0);
                             $13652 = __THREW__; __THREW__ = 0;
                             $13653 = $13652&1;
                             if ($13653) {
                              label = 1839;
                              break L1;
                             }
                             $13654 = (($13651) + 19|0);
                             HEAP8[$13654>>0] = $13650;
                             $13655 = (($4) + 539|0);
                             $13656 = (($13655) + 1|0);
                             $13657 = HEAP8[$13656>>0]|0;
                             __THREW__ = 0;
                             $13658 = (invoke_iii(381,($vinfos219|0),1)|0);
                             $13659 = __THREW__; __THREW__ = 0;
                             $13660 = $13659&1;
                             if ($13660) {
                              label = 1839;
                              break L1;
                             }
                             $13661 = (($13658) + 19|0);
                             $13662 = (($13661) + 1|0);
                             HEAP8[$13662>>0] = $13657;
                             $13663 = (($4) + 541|0);
                             $13664 = HEAP8[$13663>>0]|0;
                             __THREW__ = 0;
                             $13665 = (invoke_iii(381,($vinfos219|0),1)|0);
                             $13666 = __THREW__; __THREW__ = 0;
                             $13667 = $13666&1;
                             if ($13667) {
                              label = 1839;
                              break L1;
                             }
                             $13668 = (($13665) + 18|0);
                             HEAP8[$13668>>0] = $13664;
                             __THREW__ = 0;
                             $13669 = (invoke_iii(381,($vinfos219|0),2)|0);
                             $13670 = __THREW__; __THREW__ = 0;
                             $13671 = $13670&1;
                             if ($13671) {
                              label = 1839;
                              break L1;
                             }
                             $13672 = (($13669) + 17|0);
                             HEAP8[$13672>>0] = 1;
                             $13673 = (($4) + 80|0);
                             $13674 = +HEAPF64[$13673>>3];
                             __THREW__ = 0;
                             $13675 = (invoke_iii(381,($vinfos219|0),2)|0);
                             $13676 = __THREW__; __THREW__ = 0;
                             $13677 = $13676&1;
                             if ($13677) {
                              label = 1839;
                              break L1;
                             }
                             $13678 = (($13675) + 8|0);
                             HEAPF64[$13678>>3] = $13674;
                             $13679 = (($4) + 542|0);
                             $13680 = HEAP8[$13679>>0]|0;
                             __THREW__ = 0;
                             $13681 = (invoke_iii(381,($vinfos219|0),2)|0);
                             $13682 = __THREW__; __THREW__ = 0;
                             $13683 = $13682&1;
                             if ($13683) {
                              label = 1839;
                              break L1;
                             }
                             $13684 = (($13681) + 19|0);
                             HEAP8[$13684>>0] = $13680;
                             $13685 = (($4) + 542|0);
                             $13686 = (($13685) + 1|0);
                             $13687 = HEAP8[$13686>>0]|0;
                             __THREW__ = 0;
                             $13688 = (invoke_iii(381,($vinfos219|0),2)|0);
                             $13689 = __THREW__; __THREW__ = 0;
                             $13690 = $13689&1;
                             if ($13690) {
                              label = 1839;
                              break L1;
                             }
                             $13691 = (($13688) + 19|0);
                             $13692 = (($13691) + 1|0);
                             HEAP8[$13692>>0] = $13687;
                             $13693 = (($4) + 544|0);
                             $13694 = HEAP8[$13693>>0]|0;
                             __THREW__ = 0;
                             $13695 = (invoke_iii(381,($vinfos219|0),2)|0);
                             $13696 = __THREW__; __THREW__ = 0;
                             $13697 = $13696&1;
                             if ($13697) {
                              label = 1839;
                              break L1;
                             }
                             $13698 = (($13695) + 18|0);
                             HEAP8[$13698>>0] = $13694;
                             __THREW__ = 0;
                             $13699 = (invoke_iii(381,($vinfos219|0),3)|0);
                             $13700 = __THREW__; __THREW__ = 0;
                             $13701 = $13700&1;
                             if ($13701) {
                              label = 1839;
                              break L1;
                             }
                             $13702 = (($13699) + 17|0);
                             HEAP8[$13702>>0] = 1;
                             $13703 = (($4) + 120|0);
                             $13704 = +HEAPF64[$13703>>3];
                             __THREW__ = 0;
                             $13705 = (invoke_iii(381,($vinfos219|0),3)|0);
                             $13706 = __THREW__; __THREW__ = 0;
                             $13707 = $13706&1;
                             if ($13707) {
                              label = 1839;
                              break L1;
                             }
                             $13708 = (($13705) + 8|0);
                             HEAPF64[$13708>>3] = $13704;
                             $13709 = (($4) + 545|0);
                             $13710 = HEAP8[$13709>>0]|0;
                             __THREW__ = 0;
                             $13711 = (invoke_iii(381,($vinfos219|0),3)|0);
                             $13712 = __THREW__; __THREW__ = 0;
                             $13713 = $13712&1;
                             if ($13713) {
                              label = 1839;
                              break L1;
                             }
                             $13714 = (($13711) + 19|0);
                             HEAP8[$13714>>0] = $13710;
                             $13715 = (($4) + 545|0);
                             $13716 = (($13715) + 1|0);
                             $13717 = HEAP8[$13716>>0]|0;
                             __THREW__ = 0;
                             $13718 = (invoke_iii(381,($vinfos219|0),3)|0);
                             $13719 = __THREW__; __THREW__ = 0;
                             $13720 = $13719&1;
                             if ($13720) {
                              label = 1839;
                              break L1;
                             }
                             $13721 = (($13718) + 19|0);
                             $13722 = (($13721) + 1|0);
                             HEAP8[$13722>>0] = $13717;
                             $13723 = (($4) + 547|0);
                             $13724 = HEAP8[$13723>>0]|0;
                             __THREW__ = 0;
                             $13725 = (invoke_iii(381,($vinfos219|0),3)|0);
                             $13726 = __THREW__; __THREW__ = 0;
                             $13727 = $13726&1;
                             if ($13727) {
                              label = 1839;
                              break L1;
                             }
                             $13728 = (($13725) + 18|0);
                             HEAP8[$13728>>0] = $13724;
                             __THREW__ = 0;
                             $13729 = (invoke_iii(381,($vinfos219|0),4)|0);
                             $13730 = __THREW__; __THREW__ = 0;
                             $13731 = $13730&1;
                             if ($13731) {
                              label = 1839;
                              break L1;
                             }
                             $13732 = (($13729) + 17|0);
                             HEAP8[$13732>>0] = 1;
                             $13733 = (($4) + 160|0);
                             $13734 = +HEAPF64[$13733>>3];
                             __THREW__ = 0;
                             $13735 = (invoke_iii(381,($vinfos219|0),4)|0);
                             $13736 = __THREW__; __THREW__ = 0;
                             $13737 = $13736&1;
                             if ($13737) {
                              label = 1839;
                              break L1;
                             }
                             $13738 = (($13735) + 8|0);
                             HEAPF64[$13738>>3] = $13734;
                             $13739 = (($4) + 548|0);
                             $13740 = HEAP8[$13739>>0]|0;
                             __THREW__ = 0;
                             $13741 = (invoke_iii(381,($vinfos219|0),4)|0);
                             $13742 = __THREW__; __THREW__ = 0;
                             $13743 = $13742&1;
                             if ($13743) {
                              label = 1839;
                              break L1;
                             }
                             $13744 = (($13741) + 19|0);
                             HEAP8[$13744>>0] = $13740;
                             $13745 = (($4) + 548|0);
                             $13746 = (($13745) + 1|0);
                             $13747 = HEAP8[$13746>>0]|0;
                             __THREW__ = 0;
                             $13748 = (invoke_iii(381,($vinfos219|0),4)|0);
                             $13749 = __THREW__; __THREW__ = 0;
                             $13750 = $13749&1;
                             if ($13750) {
                              label = 1839;
                              break L1;
                             }
                             $13751 = (($13748) + 19|0);
                             $13752 = (($13751) + 1|0);
                             HEAP8[$13752>>0] = $13747;
                             $13753 = (($4) + 550|0);
                             $13754 = HEAP8[$13753>>0]|0;
                             __THREW__ = 0;
                             $13755 = (invoke_iii(381,($vinfos219|0),4)|0);
                             $13756 = __THREW__; __THREW__ = 0;
                             $13757 = $13756&1;
                             if ($13757) {
                              label = 1839;
                              break L1;
                             }
                             $13758 = (($13755) + 18|0);
                             HEAP8[$13758>>0] = $13754;
                             __THREW__ = 0;
                             $13759 = (invoke_iii(381,($vinfos219|0),5)|0);
                             $13760 = __THREW__; __THREW__ = 0;
                             $13761 = $13760&1;
                             if ($13761) {
                              label = 1839;
                              break L1;
                             }
                             $13762 = (($13759) + 17|0);
                             HEAP8[$13762>>0] = 1;
                             $13763 = (($4) + 200|0);
                             $13764 = +HEAPF64[$13763>>3];
                             __THREW__ = 0;
                             $13765 = (invoke_iii(381,($vinfos219|0),5)|0);
                             $13766 = __THREW__; __THREW__ = 0;
                             $13767 = $13766&1;
                             if ($13767) {
                              label = 1839;
                              break L1;
                             }
                             $13768 = (($13765) + 8|0);
                             HEAPF64[$13768>>3] = $13764;
                             $13769 = (($4) + 551|0);
                             $13770 = HEAP8[$13769>>0]|0;
                             __THREW__ = 0;
                             $13771 = (invoke_iii(381,($vinfos219|0),5)|0);
                             $13772 = __THREW__; __THREW__ = 0;
                             $13773 = $13772&1;
                             if ($13773) {
                              label = 1839;
                              break L1;
                             }
                             $13774 = (($13771) + 19|0);
                             HEAP8[$13774>>0] = $13770;
                             $13775 = (($4) + 551|0);
                             $13776 = (($13775) + 1|0);
                             $13777 = HEAP8[$13776>>0]|0;
                             __THREW__ = 0;
                             $13778 = (invoke_iii(381,($vinfos219|0),5)|0);
                             $13779 = __THREW__; __THREW__ = 0;
                             $13780 = $13779&1;
                             if ($13780) {
                              label = 1839;
                              break L1;
                             }
                             $13781 = (($13778) + 19|0);
                             $13782 = (($13781) + 1|0);
                             HEAP8[$13782>>0] = $13777;
                             $13783 = (($4) + 553|0);
                             $13784 = HEAP8[$13783>>0]|0;
                             __THREW__ = 0;
                             $13785 = (invoke_iii(381,($vinfos219|0),5)|0);
                             $13786 = __THREW__; __THREW__ = 0;
                             $13787 = $13786&1;
                             if ($13787) {
                              label = 1839;
                              break L1;
                             }
                             $13788 = (($13785) + 18|0);
                             HEAP8[$13788>>0] = $13784;
                             __THREW__ = 0;
                             invoke_vii(382,($vfree220|0),0);
                             $13789 = __THREW__; __THREW__ = 0;
                             $13790 = $13789&1;
                             if ($13790) {
                              label = 1839;
                              break L1;
                             }
                             $13791 = $1;
                             $13792 = HEAP32[$13791>>2]|0;
                             $13793 = (($13792) + 8|0);
                             $13794 = HEAP32[$13793>>2]|0;
                             __THREW__ = 0;
                             (invoke_iiii($13794|0,($13791|0),($vinfos219|0),($vfree220|0))|0);
                             $13795 = __THREW__; __THREW__ = 0;
                             $13796 = $13795&1;
                             if ($13796) {
                              label = 1840;
                              break L1;
                             }
                             __THREW__ = 0;
                             invoke_vi(366,($vfree220|0));
                             $13797 = __THREW__; __THREW__ = 0;
                             $13798 = $13797&1;
                             if ($13798) {
                              label = 1839;
                              break L1;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos219);
                             break L916;
                            }
                           } while(0);
                          } else {
                          }
                         } while(0);
                         $13799 = $ij5216;
                         $13800 = (($13799) + 1)|0;
                         $ij5216 = $13800;
                        }
                        label = 1845;
                       } else {
                        label = 1845;
                       }
                      } while(0);
                      if ((label|0) == 1845) {
                       label = 0;
                      }
                      $13809 = $bgotonextstatement211;
                      $13810 = $13809&1;
                      if ($13810) {
                       $bgotonextstatement221 = 1;
                       $13811 = (($4) + 432|0);
                       $13812 = +HEAPF64[$13811>>3];
                       $13813 = (($4) + 168|0);
                       $13814 = +HEAPF64[$13813>>3];
                       $13815 = -1.0 * $13814;
                       $13816 = $13812 + $13815;
                       $x428 = $13816;
                       $13817 = (($4) + 168|0);
                       $13818 = +HEAPF64[$13817>>3];
                       $13819 = 1.0 * $13818;
                       $x429 = $13819;
                       $13820 = (($4) + 120|0);
                       $13821 = +HEAPF64[$13820>>3];
                       $13822 = -3.14159265358979 + $13821;
                       $13823 = (+__Z5IKabsd($13822));
                       $13824 = 3.14159265358979 + $13823;
                       $13825 = (+__Z6IKfmoddd($13824,6.2831853071795898));
                       $13826 = -3.14159265358979 + $13825;
                       HEAPF64[$evalcond150>>3] = $13826;
                       $13827 = $x428;
                       $13828 = (($evalcond150) + 8|0);
                       HEAPF64[$13828>>3] = $13827;
                       $13829 = $x428;
                       $13830 = (($evalcond150) + 16|0);
                       HEAPF64[$13830>>3] = $13829;
                       $13831 = (($4) + 176|0);
                       $13832 = +HEAPF64[$13831>>3];
                       $13833 = (($4) + 288|0);
                       $13834 = +HEAPF64[$13833>>3];
                       $13835 = $13832 + $13834;
                       $13836 = (($evalcond150) + 24|0);
                       HEAPF64[$13836>>3] = $13835;
                       $13837 = (($4) + 360|0);
                       $13838 = +HEAPF64[$13837>>3];
                       $13839 = (($evalcond150) + 32|0);
                       HEAPF64[$13839>>3] = $13838;
                       $13840 = (($4) + 176|0);
                       $13841 = +HEAPF64[$13840>>3];
                       $13842 = -1.0 * $13841;
                       $13843 = (($4) + 288|0);
                       $13844 = +HEAPF64[$13843>>3];
                       $13845 = -1.0 * $13844;
                       $13846 = $13842 + $13845;
                       $13847 = (($evalcond150) + 40|0);
                       HEAPF64[$13847>>3] = $13846;
                       $13848 = (($4) + 168|0);
                       $13849 = +HEAPF64[$13848>>3];
                       $13850 = (($4) + 288|0);
                       $13851 = +HEAPF64[$13850>>3];
                       $13852 = $13849 * $13851;
                       $13853 = (($4) + 432|0);
                       $13854 = +HEAPF64[$13853>>3];
                       $13855 = (($4) + 176|0);
                       $13856 = +HEAPF64[$13855>>3];
                       $13857 = $13854 * $13856;
                       $13858 = $13852 + $13857;
                       $13859 = (($evalcond150) + 48|0);
                       HEAPF64[$13859>>3] = $13858;
                       $13860 = (($4) + 240|0);
                       $13861 = +HEAPF64[$13860>>3];
                       $13862 = (($4) + 176|0);
                       $13863 = +HEAPF64[$13862>>3];
                       $13864 = $13861 * $13863;
                       $13865 = (($4) + 384|0);
                       $13866 = +HEAPF64[$13865>>3];
                       $13867 = -1.0 * $13866;
                       $13868 = $x429;
                       $13869 = $13867 * $13868;
                       $13870 = $13864 + $13869;
                       $13871 = (($evalcond150) + 56|0);
                       HEAPF64[$13871>>3] = $13870;
                       $13872 = (($4) + 264|0);
                       $13873 = +HEAPF64[$13872>>3];
                       $13874 = (($4) + 176|0);
                       $13875 = +HEAPF64[$13874>>3];
                       $13876 = $13873 * $13875;
                       $13877 = (($4) + 408|0);
                       $13878 = +HEAPF64[$13877>>3];
                       $13879 = -1.0 * $13878;
                       $13880 = $x429;
                       $13881 = $13879 * $13880;
                       $13882 = $13876 + $13881;
                       $13883 = (($evalcond150) + 64|0);
                       HEAPF64[$13883>>3] = $13882;
                       $13884 = (($4) + 288|0);
                       $13885 = +HEAPF64[$13884>>3];
                       $13886 = (($4) + 176|0);
                       $13887 = +HEAPF64[$13886>>3];
                       $13888 = $13885 * $13887;
                       $13889 = 1.0 + $13888;
                       $13890 = (($4) + 432|0);
                       $13891 = +HEAPF64[$13890>>3];
                       $13892 = -1.0 * $13891;
                       $13893 = $x429;
                       $13894 = $13892 * $13893;
                       $13895 = $13889 + $13894;
                       $13896 = (($evalcond150) + 72|0);
                       HEAPF64[$13896>>3] = $13895;
                       $13897 = +HEAPF64[$evalcond150>>3];
                       $13898 = (+__Z5IKabsd($13897));
                       $13899 = $13898 < 9.9999999999999995E-7;
                       do {
                        if ($13899) {
                         $13900 = (($evalcond150) + 8|0);
                         $13901 = +HEAPF64[$13900>>3];
                         $13902 = (+__Z5IKabsd($13901));
                         $13903 = $13902 < 9.9999999999999995E-7;
                         if (!($13903)) {
                          label = 1929;
                          break;
                         }
                         $13904 = (($evalcond150) + 16|0);
                         $13905 = +HEAPF64[$13904>>3];
                         $13906 = (+__Z5IKabsd($13905));
                         $13907 = $13906 < 9.9999999999999995E-7;
                         if (!($13907)) {
                          label = 1929;
                          break;
                         }
                         $13908 = (($evalcond150) + 24|0);
                         $13909 = +HEAPF64[$13908>>3];
                         $13910 = (+__Z5IKabsd($13909));
                         $13911 = $13910 < 9.9999999999999995E-7;
                         if (!($13911)) {
                          label = 1929;
                          break;
                         }
                         $13912 = (($evalcond150) + 32|0);
                         $13913 = +HEAPF64[$13912>>3];
                         $13914 = (+__Z5IKabsd($13913));
                         $13915 = $13914 < 9.9999999999999995E-7;
                         if (!($13915)) {
                          label = 1929;
                          break;
                         }
                         $13916 = (($evalcond150) + 40|0);
                         $13917 = +HEAPF64[$13916>>3];
                         $13918 = (+__Z5IKabsd($13917));
                         $13919 = $13918 < 9.9999999999999995E-7;
                         if (!($13919)) {
                          label = 1929;
                          break;
                         }
                         $13920 = (($evalcond150) + 48|0);
                         $13921 = +HEAPF64[$13920>>3];
                         $13922 = (+__Z5IKabsd($13921));
                         $13923 = $13922 < 9.9999999999999995E-7;
                         if (!($13923)) {
                          label = 1929;
                          break;
                         }
                         $13924 = (($evalcond150) + 56|0);
                         $13925 = +HEAPF64[$13924>>3];
                         $13926 = (+__Z5IKabsd($13925));
                         $13927 = $13926 < 9.9999999999999995E-7;
                         if (!($13927)) {
                          label = 1929;
                          break;
                         }
                         $13928 = (($evalcond150) + 64|0);
                         $13929 = +HEAPF64[$13928>>3];
                         $13930 = (+__Z5IKabsd($13929));
                         $13931 = $13930 < 9.9999999999999995E-7;
                         if (!($13931)) {
                          label = 1929;
                          break;
                         }
                         $13932 = (($evalcond150) + 72|0);
                         $13933 = +HEAPF64[$13932>>3];
                         $13934 = (+__Z5IKabsd($13933));
                         $13935 = $13934 < 9.9999999999999995E-7;
                         if (!($13935)) {
                          label = 1929;
                          break;
                         }
                         $bgotonextstatement221 = 0;
                         ;HEAP8[$j5valid225+0>>0]=0|0;
                         $13936 = (($4) + 553|0);
                         HEAP8[$13936>>0] = 1;
                         $13937 = (($4) + 408|0);
                         $13938 = +HEAPF64[$13937>>3];
                         $13939 = -1.0 * $13938;
                         $13940 = (($4) + 384|0);
                         $13941 = +HEAPF64[$13940>>3];
                         __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x430,$13939,$13941,1.9999999999999999E-6);
                         $13942 = (($x430) + 8|0);
                         $13943 = HEAP8[$13942>>0]|0;
                         $13944 = $13943&1;
                         if (!($13944)) {
                          break;
                         }
                         $13945 = (($4) + 288|0);
                         $13946 = +HEAPF64[$13945>>3];
                         $13947 = (+__Z6IKsignd($13946));
                         __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x431,$13947,-1);
                         $13948 = (($x431) + 8|0);
                         $13949 = HEAP8[$13948>>0]|0;
                         $13950 = $13949&1;
                         if (!($13950)) {
                          break;
                         }
                         $13951 = +HEAPF64[$x430>>3];
                         $13952 = -1.5707963267949001 + $13951;
                         $13953 = +HEAPF64[$x431>>3];
                         $13954 = 1.5707963267949001 * $13953;
                         $13955 = $13952 + $13954;
                         HEAPF64[$j5array222>>3] = $13955;
                         $13956 = +HEAPF64[$j5array222>>3];
                         $13957 = (+__Z5IKsind($13956));
                         HEAPF64[$sj5array224>>3] = $13957;
                         $13958 = +HEAPF64[$j5array222>>3];
                         $13959 = (+__Z5IKcosd($13958));
                         HEAPF64[$cj5array223>>3] = $13959;
                         $13960 = +HEAPF64[$j5array222>>3];
                         $13961 = $13960 > 3.14159265358979;
                         if ($13961) {
                          $13962 = +HEAPF64[$j5array222>>3];
                          $13963 = $13962 - 6.2831853071795898;
                          HEAPF64[$j5array222>>3] = $13963;
                         } else {
                          $13964 = +HEAPF64[$j5array222>>3];
                          $13965 = $13964 < -3.14159265358979;
                          if ($13965) {
                           $13966 = +HEAPF64[$j5array222>>3];
                           $13967 = $13966 + 6.2831853071795898;
                           HEAPF64[$j5array222>>3] = $13967;
                          }
                         }
                         HEAP8[$j5valid225>>0] = 1;
                         $ij5226 = 0;
                         while(1) {
                          $13968 = $ij5226;
                          $13969 = ($13968|0)<(1);
                          if (!($13969)) {
                           break;
                          }
                          $13970 = $ij5226;
                          $13971 = (($j5valid225) + ($13970)|0);
                          $13972 = HEAP8[$13971>>0]|0;
                          $13973 = $13972&1;
                          L1008: do {
                           if ($13973) {
                            $13974 = $ij5226;
                            $13975 = $13974&255;
                            $13976 = (($4) + 551|0);
                            HEAP8[$13976>>0] = $13975;
                            $13977 = (($4) + 551|0);
                            $13978 = (($13977) + 1|0);
                            HEAP8[$13978>>0] = -1;
                            $13979 = $ij5226;
                            $13980 = (($13979) + 1)|0;
                            $iij5227 = $13980;
                            L1011: while(1) {
                             $13981 = $iij5227;
                             $13982 = ($13981|0)<(1);
                             if (!($13982)) {
                              break;
                             }
                             $13983 = $iij5227;
                             $13984 = (($j5valid225) + ($13983)|0);
                             $13985 = HEAP8[$13984>>0]|0;
                             $13986 = $13985&1;
                             do {
                              if ($13986) {
                               $13987 = $ij5226;
                               $13988 = (($cj5array223) + ($13987<<3)|0);
                               $13989 = +HEAPF64[$13988>>3];
                               $13990 = $iij5227;
                               $13991 = (($cj5array223) + ($13990<<3)|0);
                               $13992 = +HEAPF64[$13991>>3];
                               $13993 = $13989 - $13992;
                               $13994 = (+__Z5IKabsd($13993));
                               $13995 = $13994 < 9.9999999999999995E-7;
                               if (!($13995)) {
                                break;
                               }
                               $13996 = $ij5226;
                               $13997 = (($sj5array224) + ($13996<<3)|0);
                               $13998 = +HEAPF64[$13997>>3];
                               $13999 = $iij5227;
                               $14000 = (($sj5array224) + ($13999<<3)|0);
                               $14001 = +HEAPF64[$14000>>3];
                               $14002 = $13998 - $14001;
                               $14003 = (+__Z5IKabsd($14002));
                               $14004 = $14003 < 9.9999999999999995E-7;
                               if ($14004) {
                                label = 1876;
                                break L1011;
                               }
                              }
                             } while(0);
                             $14011 = $iij5227;
                             $14012 = (($14011) + 1)|0;
                             $iij5227 = $14012;
                            }
                            if ((label|0) == 1876) {
                             label = 0;
                             $14005 = $iij5227;
                             $14006 = (($j5valid225) + ($14005)|0);
                             HEAP8[$14006>>0] = 0;
                             $14007 = $iij5227;
                             $14008 = $14007&255;
                             $14009 = (($4) + 551|0);
                             $14010 = (($14009) + 1|0);
                             HEAP8[$14010>>0] = $14008;
                            }
                            $14013 = $ij5226;
                            $14014 = (($j5array222) + ($14013<<3)|0);
                            $14015 = +HEAPF64[$14014>>3];
                            $14016 = (($4) + 200|0);
                            HEAPF64[$14016>>3] = $14015;
                            $14017 = $ij5226;
                            $14018 = (($cj5array223) + ($14017<<3)|0);
                            $14019 = +HEAPF64[$14018>>3];
                            $14020 = (($4) + 208|0);
                            HEAPF64[$14020>>3] = $14019;
                            $14021 = $ij5226;
                            $14022 = (($sj5array224) + ($14021<<3)|0);
                            $14023 = +HEAPF64[$14022>>3];
                            $14024 = (($4) + 216|0);
                            HEAPF64[$14024>>3] = $14023;
                            $14025 = (($4) + 200|0);
                            $14026 = +HEAPF64[$14025>>3];
                            $14027 = (+__Z5IKsind($14026));
                            $x432 = $14027;
                            $14028 = (($4) + 200|0);
                            $14029 = +HEAPF64[$14028>>3];
                            $14030 = (+__Z5IKcosd($14029));
                            $x433 = $14030;
                            $14031 = (($4) + 288|0);
                            $14032 = +HEAPF64[$14031>>3];
                            $14033 = 1.0 * $14032;
                            $x434 = $14033;
                            $14034 = $x432;
                            $14035 = 1.0 * $14034;
                            $x435 = $14035;
                            $14036 = $x433;
                            $14037 = 1.0 * $14036;
                            $x436 = $14037;
                            $14038 = (($4) + 408|0);
                            $14039 = +HEAPF64[$14038>>3];
                            $14040 = (($4) + 288|0);
                            $14041 = +HEAPF64[$14040>>3];
                            $14042 = $x432;
                            $14043 = $14041 * $14042;
                            $14044 = $14039 + $14043;
                            HEAPF64[$evalcond228>>3] = $14044;
                            $14045 = $x433;
                            $14046 = -1.0 * $14045;
                            $14047 = $x434;
                            $14048 = $14046 * $14047;
                            $14049 = (($4) + 384|0);
                            $14050 = +HEAPF64[$14049>>3];
                            $14051 = $14048 + $14050;
                            $14052 = (($evalcond228) + 8|0);
                            HEAPF64[$14052>>3] = $14051;
                            $14053 = $x435;
                            $14054 = -1.0 * $14053;
                            $14055 = (($4) + 312|0);
                            $14056 = +HEAPF64[$14055>>3];
                            $14057 = -1.0 * $14056;
                            $14058 = $14054 + $14057;
                            $14059 = (($evalcond228) + 16|0);
                            HEAPF64[$14059>>3] = $14058;
                            $14060 = $x436;
                            $14061 = -1.0 * $14060;
                            $14062 = (($4) + 336|0);
                            $14063 = +HEAPF64[$14062>>3];
                            $14064 = -1.0 * $14063;
                            $14065 = $14061 + $14064;
                            $14066 = (($evalcond228) + 24|0);
                            HEAPF64[$14066>>3] = $14065;
                            $14067 = (($4) + 264|0);
                            $14068 = +HEAPF64[$14067>>3];
                            $14069 = -1.0 * $14068;
                            $14070 = (($4) + 432|0);
                            $14071 = +HEAPF64[$14070>>3];
                            $14072 = $x432;
                            $14073 = $14071 * $14072;
                            $14074 = $14069 + $14073;
                            $14075 = (($evalcond228) + 32|0);
                            HEAPF64[$14075>>3] = $14074;
                            $14076 = (($4) + 240|0);
                            $14077 = +HEAPF64[$14076>>3];
                            $14078 = -1.0 * $14077;
                            $14079 = (($4) + 432|0);
                            $14080 = +HEAPF64[$14079>>3];
                            $14081 = -1.0 * $14080;
                            $14082 = $x436;
                            $14083 = $14081 * $14082;
                            $14084 = $14078 + $14083;
                            $14085 = (($evalcond228) + 40|0);
                            HEAPF64[$14085>>3] = $14084;
                            $14086 = (($4) + 240|0);
                            $14087 = +HEAPF64[$14086>>3];
                            $14088 = (($4) + 432|0);
                            $14089 = +HEAPF64[$14088>>3];
                            $14090 = $14087 * $14089;
                            $14091 = $x433;
                            $14092 = $14090 + $14091;
                            $14093 = (($4) + 384|0);
                            $14094 = +HEAPF64[$14093>>3];
                            $14095 = -1.0 * $14094;
                            $14096 = $x434;
                            $14097 = $14095 * $14096;
                            $14098 = $14092 + $14097;
                            $14099 = (($evalcond228) + 48|0);
                            HEAPF64[$14099>>3] = $14098;
                            $14100 = $x435;
                            $14101 = -1.0 * $14100;
                            $14102 = (($4) + 264|0);
                            $14103 = +HEAPF64[$14102>>3];
                            $14104 = (($4) + 432|0);
                            $14105 = +HEAPF64[$14104>>3];
                            $14106 = $14103 * $14105;
                            $14107 = $14101 + $14106;
                            $14108 = (($4) + 408|0);
                            $14109 = +HEAPF64[$14108>>3];
                            $14110 = -1.0 * $14109;
                            $14111 = $x434;
                            $14112 = $14110 * $14111;
                            $14113 = $14107 + $14112;
                            $14114 = (($evalcond228) + 56|0);
                            HEAPF64[$14114>>3] = $14113;
                            $14115 = +HEAPF64[$evalcond228>>3];
                            $14116 = (+__Z5IKabsd($14115));
                            $14117 = $14116 > 5.0000000000000004E-6;
                            do {
                             if (!($14117)) {
                              $14118 = (($evalcond228) + 8|0);
                              $14119 = +HEAPF64[$14118>>3];
                              $14120 = (+__Z5IKabsd($14119));
                              $14121 = $14120 > 5.0000000000000004E-6;
                              if ($14121) {
                               break;
                              }
                              $14122 = (($evalcond228) + 16|0);
                              $14123 = +HEAPF64[$14122>>3];
                              $14124 = (+__Z5IKabsd($14123));
                              $14125 = $14124 > 5.0000000000000004E-6;
                              if ($14125) {
                               break;
                              }
                              $14126 = (($evalcond228) + 24|0);
                              $14127 = +HEAPF64[$14126>>3];
                              $14128 = (+__Z5IKabsd($14127));
                              $14129 = $14128 > 5.0000000000000004E-6;
                              if ($14129) {
                               break;
                              }
                              $14130 = (($evalcond228) + 32|0);
                              $14131 = +HEAPF64[$14130>>3];
                              $14132 = (+__Z5IKabsd($14131));
                              $14133 = $14132 > 5.0000000000000004E-6;
                              if ($14133) {
                               break;
                              }
                              $14134 = (($evalcond228) + 40|0);
                              $14135 = +HEAPF64[$14134>>3];
                              $14136 = (+__Z5IKabsd($14135));
                              $14137 = $14136 > 5.0000000000000004E-6;
                              if ($14137) {
                               break;
                              }
                              $14138 = (($evalcond228) + 48|0);
                              $14139 = +HEAPF64[$14138>>3];
                              $14140 = (+__Z5IKabsd($14139));
                              $14141 = $14140 > 5.0000000000000004E-6;
                              if ($14141) {
                               break;
                              }
                              $14142 = (($evalcond228) + 56|0);
                              $14143 = +HEAPF64[$14142>>3];
                              $14144 = (+__Z5IKabsd($14143));
                              $14145 = $14144 > 5.0000000000000004E-6;
                              if ($14145) {
                               break;
                              }
                              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos229,6);
                              __THREW__ = 0;
                              $14146 = (invoke_iii(381,($vinfos229|0),0)|0);
                              $14147 = __THREW__; __THREW__ = 0;
                              $14148 = $14147&1;
                              if ($14148) {
                               label = 1923;
                               break L1;
                              }
                              $14149 = (($14146) + 17|0);
                              HEAP8[$14149>>0] = 1;
                              $14150 = +HEAPF64[$4>>3];
                              __THREW__ = 0;
                              $14151 = (invoke_iii(381,($vinfos229|0),0)|0);
                              $14152 = __THREW__; __THREW__ = 0;
                              $14153 = $14152&1;
                              if ($14153) {
                               label = 1923;
                               break L1;
                              }
                              $14154 = (($14151) + 8|0);
                              HEAPF64[$14154>>3] = $14150;
                              $14155 = (($4) + 536|0);
                              $14156 = HEAP8[$14155>>0]|0;
                              __THREW__ = 0;
                              $14157 = (invoke_iii(381,($vinfos229|0),0)|0);
                              $14158 = __THREW__; __THREW__ = 0;
                              $14159 = $14158&1;
                              if ($14159) {
                               label = 1923;
                               break L1;
                              }
                              $14160 = (($14157) + 19|0);
                              HEAP8[$14160>>0] = $14156;
                              $14161 = (($4) + 536|0);
                              $14162 = (($14161) + 1|0);
                              $14163 = HEAP8[$14162>>0]|0;
                              __THREW__ = 0;
                              $14164 = (invoke_iii(381,($vinfos229|0),0)|0);
                              $14165 = __THREW__; __THREW__ = 0;
                              $14166 = $14165&1;
                              if ($14166) {
                               label = 1923;
                               break L1;
                              }
                              $14167 = (($14164) + 19|0);
                              $14168 = (($14167) + 1|0);
                              HEAP8[$14168>>0] = $14163;
                              $14169 = (($4) + 538|0);
                              $14170 = HEAP8[$14169>>0]|0;
                              __THREW__ = 0;
                              $14171 = (invoke_iii(381,($vinfos229|0),0)|0);
                              $14172 = __THREW__; __THREW__ = 0;
                              $14173 = $14172&1;
                              if ($14173) {
                               label = 1923;
                               break L1;
                              }
                              $14174 = (($14171) + 18|0);
                              HEAP8[$14174>>0] = $14170;
                              __THREW__ = 0;
                              $14175 = (invoke_iii(381,($vinfos229|0),1)|0);
                              $14176 = __THREW__; __THREW__ = 0;
                              $14177 = $14176&1;
                              if ($14177) {
                               label = 1923;
                               break L1;
                              }
                              $14178 = (($14175) + 17|0);
                              HEAP8[$14178>>0] = 1;
                              $14179 = (($4) + 40|0);
                              $14180 = +HEAPF64[$14179>>3];
                              __THREW__ = 0;
                              $14181 = (invoke_iii(381,($vinfos229|0),1)|0);
                              $14182 = __THREW__; __THREW__ = 0;
                              $14183 = $14182&1;
                              if ($14183) {
                               label = 1923;
                               break L1;
                              }
                              $14184 = (($14181) + 8|0);
                              HEAPF64[$14184>>3] = $14180;
                              $14185 = (($4) + 539|0);
                              $14186 = HEAP8[$14185>>0]|0;
                              __THREW__ = 0;
                              $14187 = (invoke_iii(381,($vinfos229|0),1)|0);
                              $14188 = __THREW__; __THREW__ = 0;
                              $14189 = $14188&1;
                              if ($14189) {
                               label = 1923;
                               break L1;
                              }
                              $14190 = (($14187) + 19|0);
                              HEAP8[$14190>>0] = $14186;
                              $14191 = (($4) + 539|0);
                              $14192 = (($14191) + 1|0);
                              $14193 = HEAP8[$14192>>0]|0;
                              __THREW__ = 0;
                              $14194 = (invoke_iii(381,($vinfos229|0),1)|0);
                              $14195 = __THREW__; __THREW__ = 0;
                              $14196 = $14195&1;
                              if ($14196) {
                               label = 1923;
                               break L1;
                              }
                              $14197 = (($14194) + 19|0);
                              $14198 = (($14197) + 1|0);
                              HEAP8[$14198>>0] = $14193;
                              $14199 = (($4) + 541|0);
                              $14200 = HEAP8[$14199>>0]|0;
                              __THREW__ = 0;
                              $14201 = (invoke_iii(381,($vinfos229|0),1)|0);
                              $14202 = __THREW__; __THREW__ = 0;
                              $14203 = $14202&1;
                              if ($14203) {
                               label = 1923;
                               break L1;
                              }
                              $14204 = (($14201) + 18|0);
                              HEAP8[$14204>>0] = $14200;
                              __THREW__ = 0;
                              $14205 = (invoke_iii(381,($vinfos229|0),2)|0);
                              $14206 = __THREW__; __THREW__ = 0;
                              $14207 = $14206&1;
                              if ($14207) {
                               label = 1923;
                               break L1;
                              }
                              $14208 = (($14205) + 17|0);
                              HEAP8[$14208>>0] = 1;
                              $14209 = (($4) + 80|0);
                              $14210 = +HEAPF64[$14209>>3];
                              __THREW__ = 0;
                              $14211 = (invoke_iii(381,($vinfos229|0),2)|0);
                              $14212 = __THREW__; __THREW__ = 0;
                              $14213 = $14212&1;
                              if ($14213) {
                               label = 1923;
                               break L1;
                              }
                              $14214 = (($14211) + 8|0);
                              HEAPF64[$14214>>3] = $14210;
                              $14215 = (($4) + 542|0);
                              $14216 = HEAP8[$14215>>0]|0;
                              __THREW__ = 0;
                              $14217 = (invoke_iii(381,($vinfos229|0),2)|0);
                              $14218 = __THREW__; __THREW__ = 0;
                              $14219 = $14218&1;
                              if ($14219) {
                               label = 1923;
                               break L1;
                              }
                              $14220 = (($14217) + 19|0);
                              HEAP8[$14220>>0] = $14216;
                              $14221 = (($4) + 542|0);
                              $14222 = (($14221) + 1|0);
                              $14223 = HEAP8[$14222>>0]|0;
                              __THREW__ = 0;
                              $14224 = (invoke_iii(381,($vinfos229|0),2)|0);
                              $14225 = __THREW__; __THREW__ = 0;
                              $14226 = $14225&1;
                              if ($14226) {
                               label = 1923;
                               break L1;
                              }
                              $14227 = (($14224) + 19|0);
                              $14228 = (($14227) + 1|0);
                              HEAP8[$14228>>0] = $14223;
                              $14229 = (($4) + 544|0);
                              $14230 = HEAP8[$14229>>0]|0;
                              __THREW__ = 0;
                              $14231 = (invoke_iii(381,($vinfos229|0),2)|0);
                              $14232 = __THREW__; __THREW__ = 0;
                              $14233 = $14232&1;
                              if ($14233) {
                               label = 1923;
                               break L1;
                              }
                              $14234 = (($14231) + 18|0);
                              HEAP8[$14234>>0] = $14230;
                              __THREW__ = 0;
                              $14235 = (invoke_iii(381,($vinfos229|0),3)|0);
                              $14236 = __THREW__; __THREW__ = 0;
                              $14237 = $14236&1;
                              if ($14237) {
                               label = 1923;
                               break L1;
                              }
                              $14238 = (($14235) + 17|0);
                              HEAP8[$14238>>0] = 1;
                              $14239 = (($4) + 120|0);
                              $14240 = +HEAPF64[$14239>>3];
                              __THREW__ = 0;
                              $14241 = (invoke_iii(381,($vinfos229|0),3)|0);
                              $14242 = __THREW__; __THREW__ = 0;
                              $14243 = $14242&1;
                              if ($14243) {
                               label = 1923;
                               break L1;
                              }
                              $14244 = (($14241) + 8|0);
                              HEAPF64[$14244>>3] = $14240;
                              $14245 = (($4) + 545|0);
                              $14246 = HEAP8[$14245>>0]|0;
                              __THREW__ = 0;
                              $14247 = (invoke_iii(381,($vinfos229|0),3)|0);
                              $14248 = __THREW__; __THREW__ = 0;
                              $14249 = $14248&1;
                              if ($14249) {
                               label = 1923;
                               break L1;
                              }
                              $14250 = (($14247) + 19|0);
                              HEAP8[$14250>>0] = $14246;
                              $14251 = (($4) + 545|0);
                              $14252 = (($14251) + 1|0);
                              $14253 = HEAP8[$14252>>0]|0;
                              __THREW__ = 0;
                              $14254 = (invoke_iii(381,($vinfos229|0),3)|0);
                              $14255 = __THREW__; __THREW__ = 0;
                              $14256 = $14255&1;
                              if ($14256) {
                               label = 1923;
                               break L1;
                              }
                              $14257 = (($14254) + 19|0);
                              $14258 = (($14257) + 1|0);
                              HEAP8[$14258>>0] = $14253;
                              $14259 = (($4) + 547|0);
                              $14260 = HEAP8[$14259>>0]|0;
                              __THREW__ = 0;
                              $14261 = (invoke_iii(381,($vinfos229|0),3)|0);
                              $14262 = __THREW__; __THREW__ = 0;
                              $14263 = $14262&1;
                              if ($14263) {
                               label = 1923;
                               break L1;
                              }
                              $14264 = (($14261) + 18|0);
                              HEAP8[$14264>>0] = $14260;
                              __THREW__ = 0;
                              $14265 = (invoke_iii(381,($vinfos229|0),4)|0);
                              $14266 = __THREW__; __THREW__ = 0;
                              $14267 = $14266&1;
                              if ($14267) {
                               label = 1923;
                               break L1;
                              }
                              $14268 = (($14265) + 17|0);
                              HEAP8[$14268>>0] = 1;
                              $14269 = (($4) + 160|0);
                              $14270 = +HEAPF64[$14269>>3];
                              __THREW__ = 0;
                              $14271 = (invoke_iii(381,($vinfos229|0),4)|0);
                              $14272 = __THREW__; __THREW__ = 0;
                              $14273 = $14272&1;
                              if ($14273) {
                               label = 1923;
                               break L1;
                              }
                              $14274 = (($14271) + 8|0);
                              HEAPF64[$14274>>3] = $14270;
                              $14275 = (($4) + 548|0);
                              $14276 = HEAP8[$14275>>0]|0;
                              __THREW__ = 0;
                              $14277 = (invoke_iii(381,($vinfos229|0),4)|0);
                              $14278 = __THREW__; __THREW__ = 0;
                              $14279 = $14278&1;
                              if ($14279) {
                               label = 1923;
                               break L1;
                              }
                              $14280 = (($14277) + 19|0);
                              HEAP8[$14280>>0] = $14276;
                              $14281 = (($4) + 548|0);
                              $14282 = (($14281) + 1|0);
                              $14283 = HEAP8[$14282>>0]|0;
                              __THREW__ = 0;
                              $14284 = (invoke_iii(381,($vinfos229|0),4)|0);
                              $14285 = __THREW__; __THREW__ = 0;
                              $14286 = $14285&1;
                              if ($14286) {
                               label = 1923;
                               break L1;
                              }
                              $14287 = (($14284) + 19|0);
                              $14288 = (($14287) + 1|0);
                              HEAP8[$14288>>0] = $14283;
                              $14289 = (($4) + 550|0);
                              $14290 = HEAP8[$14289>>0]|0;
                              __THREW__ = 0;
                              $14291 = (invoke_iii(381,($vinfos229|0),4)|0);
                              $14292 = __THREW__; __THREW__ = 0;
                              $14293 = $14292&1;
                              if ($14293) {
                               label = 1923;
                               break L1;
                              }
                              $14294 = (($14291) + 18|0);
                              HEAP8[$14294>>0] = $14290;
                              __THREW__ = 0;
                              $14295 = (invoke_iii(381,($vinfos229|0),5)|0);
                              $14296 = __THREW__; __THREW__ = 0;
                              $14297 = $14296&1;
                              if ($14297) {
                               label = 1923;
                               break L1;
                              }
                              $14298 = (($14295) + 17|0);
                              HEAP8[$14298>>0] = 1;
                              $14299 = (($4) + 200|0);
                              $14300 = +HEAPF64[$14299>>3];
                              __THREW__ = 0;
                              $14301 = (invoke_iii(381,($vinfos229|0),5)|0);
                              $14302 = __THREW__; __THREW__ = 0;
                              $14303 = $14302&1;
                              if ($14303) {
                               label = 1923;
                               break L1;
                              }
                              $14304 = (($14301) + 8|0);
                              HEAPF64[$14304>>3] = $14300;
                              $14305 = (($4) + 551|0);
                              $14306 = HEAP8[$14305>>0]|0;
                              __THREW__ = 0;
                              $14307 = (invoke_iii(381,($vinfos229|0),5)|0);
                              $14308 = __THREW__; __THREW__ = 0;
                              $14309 = $14308&1;
                              if ($14309) {
                               label = 1923;
                               break L1;
                              }
                              $14310 = (($14307) + 19|0);
                              HEAP8[$14310>>0] = $14306;
                              $14311 = (($4) + 551|0);
                              $14312 = (($14311) + 1|0);
                              $14313 = HEAP8[$14312>>0]|0;
                              __THREW__ = 0;
                              $14314 = (invoke_iii(381,($vinfos229|0),5)|0);
                              $14315 = __THREW__; __THREW__ = 0;
                              $14316 = $14315&1;
                              if ($14316) {
                               label = 1923;
                               break L1;
                              }
                              $14317 = (($14314) + 19|0);
                              $14318 = (($14317) + 1|0);
                              HEAP8[$14318>>0] = $14313;
                              $14319 = (($4) + 553|0);
                              $14320 = HEAP8[$14319>>0]|0;
                              __THREW__ = 0;
                              $14321 = (invoke_iii(381,($vinfos229|0),5)|0);
                              $14322 = __THREW__; __THREW__ = 0;
                              $14323 = $14322&1;
                              if ($14323) {
                               label = 1923;
                               break L1;
                              }
                              $14324 = (($14321) + 18|0);
                              HEAP8[$14324>>0] = $14320;
                              __THREW__ = 0;
                              invoke_vii(382,($vfree230|0),0);
                              $14325 = __THREW__; __THREW__ = 0;
                              $14326 = $14325&1;
                              if ($14326) {
                               label = 1923;
                               break L1;
                              }
                              $14327 = $1;
                              $14328 = HEAP32[$14327>>2]|0;
                              $14329 = (($14328) + 8|0);
                              $14330 = HEAP32[$14329>>2]|0;
                              __THREW__ = 0;
                              (invoke_iiii($14330|0,($14327|0),($vinfos229|0),($vfree230|0))|0);
                              $14331 = __THREW__; __THREW__ = 0;
                              $14332 = $14331&1;
                              if ($14332) {
                               label = 1924;
                               break L1;
                              }
                              __THREW__ = 0;
                              invoke_vi(366,($vfree230|0));
                              $14333 = __THREW__; __THREW__ = 0;
                              $14334 = $14333&1;
                              if ($14334) {
                               label = 1923;
                               break L1;
                              }
                              __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos229);
                              break L1008;
                             }
                            } while(0);
                           } else {
                           }
                          } while(0);
                          $14335 = $ij5226;
                          $14336 = (($14335) + 1)|0;
                          $ij5226 = $14336;
                         }
                         label = 1929;
                        } else {
                         label = 1929;
                        }
                       } while(0);
                       if ((label|0) == 1929) {
                        label = 0;
                       }
                       $14345 = $bgotonextstatement221;
                       $14346 = $14345&1;
                       if ($14346) {
                        $bgotonextstatement231 = 1;
                        $bgotonextstatement231 = 0;
                        $14347 = $bgotonextstatement231;
                        $14348 = $14347&1;
                        if ($14348) {
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
             break L49;
            }
           }
          } while(0);
         } else {
         }
        } while(0);
        $16121 = $ij3144;
        $16122 = (($16121) + 1)|0;
        $ij3144 = $16122;
       }
      }
     }
     if ((label|0) == 23) {
      label = 0;
      $450 = (($4) + 8|0);
      $451 = +HEAPF64[$450>>3];
      $452 = 1.0 * $451;
      $x133 = $452;
      $453 = (($4) + 344|0);
      $454 = +HEAPF64[$453>>3];
      $455 = (($4) + 16|0);
      $456 = +HEAPF64[$455>>3];
      $457 = $454 * $456;
      $x134 = $457;
      $458 = (($4) + 320|0);
      $459 = +HEAPF64[$458>>3];
      $460 = (($4) + 16|0);
      $461 = +HEAPF64[$460>>3];
      $462 = $459 * $461;
      $x135 = $462;
      $463 = (($4) + 88|0);
      $464 = +HEAPF64[$463>>3];
      $465 = 1.0 * $464;
      $x136 = $465;
      $466 = (($4) + 48|0);
      $467 = +HEAPF64[$466>>3];
      $468 = (($4) + 96|0);
      $469 = +HEAPF64[$468>>3];
      $470 = $467 * $469;
      $x137 = $470;
      $471 = (($4) + 368|0);
      $472 = +HEAPF64[$471>>3];
      $473 = (($4) + 16|0);
      $474 = +HEAPF64[$473>>3];
      $475 = $472 * $474;
      $x138 = $475;
      $476 = (($4) + 88|0);
      $477 = +HEAPF64[$476>>3];
      $478 = (($4) + 56|0);
      $479 = +HEAPF64[$478>>3];
      $480 = $477 * $479;
      $481 = $x137;
      $482 = $480 + $481;
      $x139 = $482;
      $483 = $x116;
      $x140 = $483;
      $484 = (($4) + 16|0);
      $485 = +HEAPF64[$484>>3];
      $486 = $x140;
      $487 = $485 * $486;
      $x141 = $487;
      $488 = (($4) + 8|0);
      $489 = +HEAPF64[$488>>3];
      $490 = $x139;
      $491 = $489 * $490;
      $x142 = $491;
      $492 = (($4) + 8|0);
      $493 = +HEAPF64[$492>>3];
      $494 = $x140;
      $495 = $493 * $494;
      $x143 = $495;
      $496 = $x120;
      $x144 = $496;
      $497 = (($4) + 392|0);
      $498 = +HEAPF64[$497>>3];
      $499 = $x140;
      $500 = $498 * $499;
      $501 = $x135;
      $502 = $x139;
      $503 = $501 * $502;
      $504 = $500 + $503;
      $505 = (($4) + 248|0);
      $506 = +HEAPF64[$505>>3];
      $507 = $x142;
      $508 = $506 * $507;
      $509 = $504 + $508;
      $510 = (($4) + 240|0);
      HEAPF64[$510>>3] = $509;
      $511 = (($4) + 272|0);
      $512 = +HEAPF64[$511>>3];
      $513 = $x142;
      $514 = $512 * $513;
      $515 = (($4) + 416|0);
      $516 = +HEAPF64[$515>>3];
      $517 = $x140;
      $518 = $516 * $517;
      $519 = $514 + $518;
      $520 = $x134;
      $521 = $x139;
      $522 = $520 * $521;
      $523 = $519 + $522;
      $524 = (($4) + 264|0);
      HEAPF64[$524>>3] = $523;
      $525 = $x138;
      $526 = $x139;
      $527 = $525 * $526;
      $528 = (($4) + 296|0);
      $529 = +HEAPF64[$528>>3];
      $530 = $x142;
      $531 = $529 * $530;
      $532 = $527 + $531;
      $533 = (($4) + 440|0);
      $534 = +HEAPF64[$533>>3];
      $535 = $x140;
      $536 = $534 * $535;
      $537 = $532 + $536;
      $538 = (($4) + 288|0);
      HEAPF64[$538>>3] = $537;
      $539 = (($4) + 248|0);
      $540 = +HEAPF64[$539>>3];
      $541 = (($4) + 16|0);
      $542 = +HEAPF64[$541>>3];
      $543 = $540 * $542;
      $544 = (($4) + 320|0);
      $545 = +HEAPF64[$544>>3];
      $546 = -1.0 * $545;
      $547 = $x133;
      $548 = $546 * $547;
      $549 = $543 + $548;
      $550 = (($4) + 312|0);
      HEAPF64[$550>>3] = $549;
      $551 = (($4) + 272|0);
      $552 = +HEAPF64[$551>>3];
      $553 = (($4) + 16|0);
      $554 = +HEAPF64[$553>>3];
      $555 = $552 * $554;
      $556 = (($4) + 344|0);
      $557 = +HEAPF64[$556>>3];
      $558 = -1.0 * $557;
      $559 = $x133;
      $560 = $558 * $559;
      $561 = $555 + $560;
      $562 = (($4) + 336|0);
      HEAPF64[$562>>3] = $561;
      $563 = (($4) + 368|0);
      $564 = +HEAPF64[$563>>3];
      $565 = -1.0 * $564;
      $566 = $x133;
      $567 = $565 * $566;
      $568 = (($4) + 296|0);
      $569 = +HEAPF64[$568>>3];
      $570 = (($4) + 16|0);
      $571 = +HEAPF64[$570>>3];
      $572 = $569 * $571;
      $573 = $567 + $572;
      $574 = (($4) + 360|0);
      HEAPF64[$574>>3] = $573;
      $575 = (($4) + 392|0);
      $576 = +HEAPF64[$575>>3];
      $577 = $x144;
      $578 = $576 * $577;
      $579 = (($4) + 248|0);
      $580 = +HEAPF64[$579>>3];
      $581 = $x143;
      $582 = $580 * $581;
      $583 = $578 + $582;
      $584 = $x135;
      $585 = $x140;
      $586 = $584 * $585;
      $587 = $583 + $586;
      $588 = (($4) + 384|0);
      HEAPF64[$588>>3] = $587;
      $589 = (($4) + 272|0);
      $590 = +HEAPF64[$589>>3];
      $591 = $x143;
      $592 = $590 * $591;
      $593 = (($4) + 416|0);
      $594 = +HEAPF64[$593>>3];
      $595 = $x144;
      $596 = $594 * $595;
      $597 = $592 + $596;
      $598 = $x134;
      $599 = $x140;
      $600 = $598 * $599;
      $601 = $597 + $600;
      $602 = (($4) + 408|0);
      HEAPF64[$602>>3] = $601;
      $603 = $x138;
      $604 = $x140;
      $605 = $603 * $604;
      $606 = (($4) + 296|0);
      $607 = +HEAPF64[$606>>3];
      $608 = $x143;
      $609 = $607 * $608;
      $610 = $605 + $609;
      $611 = (($4) + 440|0);
      $612 = +HEAPF64[$611>>3];
      $613 = $x144;
      $614 = $612 * $613;
      $615 = $610 + $614;
      $616 = (($4) + 432|0);
      HEAPF64[$616>>3] = $615;
      $617 = (($4) + 176|0);
      $618 = +HEAPF64[$617>>3];
      HEAPF64[$j3eval1>>3] = $618;
      $619 = +HEAPF64[$j3eval1>>3];
      $620 = (+__Z5IKabsd($619));
      $621 = $620 < 9.9999999999999995E-7;
      if ($621) {
       $bgotonextstatement = 1;
       $622 = (($4) + 160|0);
       $623 = +HEAPF64[$622>>3];
       $624 = (+__Z5IKabsd($623));
       $625 = 3.14159265358979 + $624;
       $626 = (+__Z6IKfmoddd($625,6.2831853071795898));
       $627 = -3.14159265358979 + $626;
       HEAPF64[$evalcond>>3] = $627;
       $628 = (($4) + 432|0);
       $629 = +HEAPF64[$628>>3];
       $630 = -1.0 + $629;
       $631 = (($evalcond) + 8|0);
       HEAPF64[$631>>3] = $630;
       $632 = (($4) + 384|0);
       $633 = +HEAPF64[$632>>3];
       $634 = (($evalcond) + 16|0);
       HEAPF64[$634>>3] = $633;
       $635 = (($4) + 288|0);
       $636 = +HEAPF64[$635>>3];
       $637 = (($evalcond) + 24|0);
       HEAPF64[$637>>3] = $636;
       $638 = (($4) + 360|0);
       $639 = +HEAPF64[$638>>3];
       $640 = (($evalcond) + 32|0);
       HEAPF64[$640>>3] = $639;
       $641 = (($4) + 408|0);
       $642 = +HEAPF64[$641>>3];
       $643 = (($evalcond) + 40|0);
       HEAPF64[$643>>3] = $642;
       $644 = +HEAPF64[$evalcond>>3];
       $645 = (+__Z5IKabsd($644));
       $646 = $645 < 9.9999999999999995E-7;
       do {
        if ($646) {
         $647 = (($evalcond) + 8|0);
         $648 = +HEAPF64[$647>>3];
         $649 = (+__Z5IKabsd($648));
         $650 = $649 < 9.9999999999999995E-7;
         if ($650) {
          $651 = (($evalcond) + 16|0);
          $652 = +HEAPF64[$651>>3];
          $653 = (+__Z5IKabsd($652));
          $654 = $653 < 9.9999999999999995E-7;
          if ($654) {
           $655 = (($evalcond) + 24|0);
           $656 = +HEAPF64[$655>>3];
           $657 = (+__Z5IKabsd($656));
           $658 = $657 < 9.9999999999999995E-7;
           if ($658) {
            $659 = (($evalcond) + 32|0);
            $660 = +HEAPF64[$659>>3];
            $661 = (+__Z5IKabsd($660));
            $662 = $661 < 9.9999999999999995E-7;
            if ($662) {
             $663 = (($evalcond) + 40|0);
             $664 = +HEAPF64[$663>>3];
             $665 = (+__Z5IKabsd($664));
             $666 = $665 < 9.9999999999999995E-7;
             if ($666) {
              $bgotonextstatement = 0;
              ;HEAP8[$j3valid+0>>0]=0|0;HEAP8[$j3valid+1>>0]=0|0;
              $667 = (($4) + 547|0);
              HEAP8[$667>>0] = 2;
              $668 = (($4) + 288|0);
              $669 = +HEAPF64[$668>>3];
              $670 = (($4) + 360|0);
              $671 = +HEAPF64[$670>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x146,$669,$671,1.9999999999999999E-6);
              $672 = (($x146) + 8|0);
              $673 = HEAP8[$672>>0]|0;
              $674 = $673&1;
              if (!($674)) {
               break;
              }
              $675 = +HEAPF64[$x146>>3];
              $x145 = $675;
              $676 = $x145;
              $677 = -1.0 * $676;
              HEAPF64[$j3array>>3] = $677;
              $678 = +HEAPF64[$j3array>>3];
              $679 = (+__Z5IKsind($678));
              HEAPF64[$sj3array>>3] = $679;
              $680 = +HEAPF64[$j3array>>3];
              $681 = (+__Z5IKcosd($680));
              HEAPF64[$cj3array>>3] = $681;
              $682 = $x145;
              $683 = -1.0 * $682;
              $684 = 3.14159265358979 + $683;
              $685 = (($j3array) + 8|0);
              HEAPF64[$685>>3] = $684;
              $686 = (($j3array) + 8|0);
              $687 = +HEAPF64[$686>>3];
              $688 = (+__Z5IKsind($687));
              $689 = (($sj3array) + 8|0);
              HEAPF64[$689>>3] = $688;
              $690 = (($j3array) + 8|0);
              $691 = +HEAPF64[$690>>3];
              $692 = (+__Z5IKcosd($691));
              $693 = (($cj3array) + 8|0);
              HEAPF64[$693>>3] = $692;
              $694 = +HEAPF64[$j3array>>3];
              $695 = $694 > 3.14159265358979;
              if ($695) {
               $696 = +HEAPF64[$j3array>>3];
               $697 = $696 - 6.2831853071795898;
               HEAPF64[$j3array>>3] = $697;
              } else {
               $698 = +HEAPF64[$j3array>>3];
               $699 = $698 < -3.14159265358979;
               if ($699) {
                $700 = +HEAPF64[$j3array>>3];
                $701 = $700 + 6.2831853071795898;
                HEAPF64[$j3array>>3] = $701;
               }
              }
              HEAP8[$j3valid>>0] = 1;
              $702 = (($j3array) + 8|0);
              $703 = +HEAPF64[$702>>3];
              $704 = $703 > 3.14159265358979;
              if ($704) {
               $705 = (($j3array) + 8|0);
               $706 = +HEAPF64[$705>>3];
               $707 = $706 - 6.2831853071795898;
               HEAPF64[$705>>3] = $707;
              } else {
               $708 = (($j3array) + 8|0);
               $709 = +HEAPF64[$708>>3];
               $710 = $709 < -3.14159265358979;
               if ($710) {
                $711 = (($j3array) + 8|0);
                $712 = +HEAPF64[$711>>3];
                $713 = $712 + 6.2831853071795898;
                HEAPF64[$711>>3] = $713;
               }
              }
              $714 = (($j3valid) + 1|0);
              HEAP8[$714>>0] = 1;
              $ij3 = 0;
              while(1) {
               $715 = $ij3;
               $716 = ($715|0)<(2);
               if (!($716)) {
                break;
               }
               $717 = $ij3;
               $718 = (($j3valid) + ($717)|0);
               $719 = HEAP8[$718>>0]|0;
               $720 = $719&1;
               L1123: do {
                if ($720) {
                 $721 = $ij3;
                 $722 = $721&255;
                 $723 = (($4) + 545|0);
                 HEAP8[$723>>0] = $722;
                 $724 = (($4) + 545|0);
                 $725 = (($724) + 1|0);
                 HEAP8[$725>>0] = -1;
                 $726 = $ij3;
                 $727 = (($726) + 1)|0;
                 $iij3 = $727;
                 L1126: while(1) {
                  $728 = $iij3;
                  $729 = ($728|0)<(2);
                  if (!($729)) {
                   break;
                  }
                  $730 = $iij3;
                  $731 = (($j3valid) + ($730)|0);
                  $732 = HEAP8[$731>>0]|0;
                  $733 = $732&1;
                  do {
                   if ($733) {
                    $734 = $ij3;
                    $735 = (($cj3array) + ($734<<3)|0);
                    $736 = +HEAPF64[$735>>3];
                    $737 = $iij3;
                    $738 = (($cj3array) + ($737<<3)|0);
                    $739 = +HEAPF64[$738>>3];
                    $740 = $736 - $739;
                    $741 = (+__Z5IKabsd($740));
                    $742 = $741 < 9.9999999999999995E-7;
                    if (!($742)) {
                     break;
                    }
                    $743 = $ij3;
                    $744 = (($sj3array) + ($743<<3)|0);
                    $745 = +HEAPF64[$744>>3];
                    $746 = $iij3;
                    $747 = (($sj3array) + ($746<<3)|0);
                    $748 = +HEAPF64[$747>>3];
                    $749 = $745 - $748;
                    $750 = (+__Z5IKabsd($749));
                    $751 = $750 < 9.9999999999999995E-7;
                    if ($751) {
                     label = 52;
                     break L1126;
                    }
                   }
                  } while(0);
                  $758 = $iij3;
                  $759 = (($758) + 1)|0;
                  $iij3 = $759;
                 }
                 if ((label|0) == 52) {
                  label = 0;
                  $752 = $iij3;
                  $753 = (($j3valid) + ($752)|0);
                  HEAP8[$753>>0] = 0;
                  $754 = $iij3;
                  $755 = $754&255;
                  $756 = (($4) + 545|0);
                  $757 = (($756) + 1|0);
                  HEAP8[$757>>0] = $755;
                 }
                 $760 = $ij3;
                 $761 = (($j3array) + ($760<<3)|0);
                 $762 = +HEAPF64[$761>>3];
                 $763 = (($4) + 120|0);
                 HEAPF64[$763>>3] = $762;
                 $764 = $ij3;
                 $765 = (($cj3array) + ($764<<3)|0);
                 $766 = +HEAPF64[$765>>3];
                 $767 = (($4) + 128|0);
                 HEAPF64[$767>>3] = $766;
                 $768 = $ij3;
                 $769 = (($sj3array) + ($768<<3)|0);
                 $770 = +HEAPF64[$769>>3];
                 $771 = (($4) + 136|0);
                 HEAPF64[$771>>3] = $770;
                 $772 = (($4) + 288|0);
                 $773 = +HEAPF64[$772>>3];
                 $774 = -1.0 * $773;
                 $775 = (($4) + 120|0);
                 $776 = +HEAPF64[$775>>3];
                 $777 = (+__Z5IKsind($776));
                 $778 = $774 * $777;
                 $779 = (($4) + 360|0);
                 $780 = +HEAPF64[$779>>3];
                 $781 = (($4) + 120|0);
                 $782 = +HEAPF64[$781>>3];
                 $783 = (+__Z5IKcosd($782));
                 $784 = $780 * $783;
                 $785 = $778 + $784;
                 HEAPF64[$evalcond2>>3] = $785;
                 $786 = +HEAPF64[$evalcond2>>3];
                 $787 = (+__Z5IKabsd($786));
                 $788 = $787 > 5.0000000000000004E-6;
                 if ($788) {
                  break;
                 }
                 ;HEAP8[$j5valid+0>>0]=0|0;
                 $789 = (($4) + 553|0);
                 HEAP8[$789>>0] = 1;
                 $790 = (($4) + 264|0);
                 $791 = +HEAPF64[$790>>3];
                 $792 = 1.0 * $791;
                 $x147 = $792;
                 $793 = (($4) + 128|0);
                 $794 = +HEAPF64[$793>>3];
                 $795 = -1.0 * $794;
                 $796 = $x147;
                 $797 = $795 * $796;
                 $798 = (($4) + 240|0);
                 $799 = +HEAPF64[$798>>3];
                 $800 = -1.0 * $799;
                 $801 = (($4) + 136|0);
                 $802 = +HEAPF64[$801>>3];
                 $803 = $800 * $802;
                 $804 = $797 + $803;
                 $805 = (+__Z5IKabsd($804));
                 $806 = $805 < 1.9999999999999999E-6;
                 do {
                  if ($806) {
                   $807 = (($4) + 136|0);
                   $808 = +HEAPF64[$807>>3];
                   $809 = -1.0 * $808;
                   $810 = $x147;
                   $811 = $809 * $810;
                   $812 = (($4) + 128|0);
                   $813 = +HEAPF64[$812>>3];
                   $814 = (($4) + 240|0);
                   $815 = +HEAPF64[$814>>3];
                   $816 = $813 * $815;
                   $817 = $811 + $816;
                   $818 = (+__Z5IKabsd($817));
                   $819 = $818 < 1.9999999999999999E-6;
                   if (!($819)) {
                    break;
                   }
                   $820 = (($4) + 128|0);
                   $821 = +HEAPF64[$820>>3];
                   $822 = -1.0 * $821;
                   $823 = $x147;
                   $824 = $822 * $823;
                   $825 = (($4) + 240|0);
                   $826 = +HEAPF64[$825>>3];
                   $827 = -1.0 * $826;
                   $828 = (($4) + 136|0);
                   $829 = +HEAPF64[$828>>3];
                   $830 = $827 * $829;
                   $831 = $824 + $830;
                   $832 = (+__Z5IKsqrd($831));
                   $833 = (($4) + 136|0);
                   $834 = +HEAPF64[$833>>3];
                   $835 = -1.0 * $834;
                   $836 = $x147;
                   $837 = $835 * $836;
                   $838 = (($4) + 128|0);
                   $839 = +HEAPF64[$838>>3];
                   $840 = (($4) + 240|0);
                   $841 = +HEAPF64[$840>>3];
                   $842 = $839 * $841;
                   $843 = $837 + $842;
                   $844 = (+__Z5IKsqrd($843));
                   $845 = $832 + $844;
                   $846 = $845 - 1.0;
                   $847 = (+__Z5IKabsd($846));
                   $848 = $847 <= 1.9999999999999999E-6;
                   if (!($848)) {
                    break;
                   }
                   break L1123;
                  }
                 } while(0);
                 $849 = (($4) + 128|0);
                 $850 = +HEAPF64[$849>>3];
                 $851 = -1.0 * $850;
                 $852 = $x147;
                 $853 = $851 * $852;
                 $854 = (($4) + 240|0);
                 $855 = +HEAPF64[$854>>3];
                 $856 = -1.0 * $855;
                 $857 = (($4) + 136|0);
                 $858 = +HEAPF64[$857>>3];
                 $859 = $856 * $858;
                 $860 = $853 + $859;
                 $861 = (($4) + 136|0);
                 $862 = +HEAPF64[$861>>3];
                 $863 = -1.0 * $862;
                 $864 = $x147;
                 $865 = $863 * $864;
                 $866 = (($4) + 128|0);
                 $867 = +HEAPF64[$866>>3];
                 $868 = (($4) + 240|0);
                 $869 = +HEAPF64[$868>>3];
                 $870 = $867 * $869;
                 $871 = $865 + $870;
                 $872 = (+__Z7IKatan2dd($860,$871));
                 HEAPF64[$j5array>>3] = $872;
                 $873 = +HEAPF64[$j5array>>3];
                 $874 = (+__Z5IKsind($873));
                 HEAPF64[$sj5array>>3] = $874;
                 $875 = +HEAPF64[$j5array>>3];
                 $876 = (+__Z5IKcosd($875));
                 HEAPF64[$cj5array>>3] = $876;
                 $877 = +HEAPF64[$j5array>>3];
                 $878 = $877 > 3.14159265358979;
                 if ($878) {
                  $879 = +HEAPF64[$j5array>>3];
                  $880 = $879 - 6.2831853071795898;
                  HEAPF64[$j5array>>3] = $880;
                 } else {
                  $881 = +HEAPF64[$j5array>>3];
                  $882 = $881 < -3.14159265358979;
                  if ($882) {
                   $883 = +HEAPF64[$j5array>>3];
                   $884 = $883 + 6.2831853071795898;
                   HEAPF64[$j5array>>3] = $884;
                  }
                 }
                 HEAP8[$j5valid>>0] = 1;
                 $ij5 = 0;
                 while(1) {
                  $885 = $ij5;
                  $886 = ($885|0)<(1);
                  if (!($886)) {
                   break;
                  }
                  $887 = $ij5;
                  $888 = (($j5valid) + ($887)|0);
                  $889 = HEAP8[$888>>0]|0;
                  $890 = $889&1;
                  L1155: do {
                   if ($890) {
                    $891 = $ij5;
                    $892 = $891&255;
                    $893 = (($4) + 551|0);
                    HEAP8[$893>>0] = $892;
                    $894 = (($4) + 551|0);
                    $895 = (($894) + 1|0);
                    HEAP8[$895>>0] = -1;
                    $896 = $ij5;
                    $897 = (($896) + 1)|0;
                    $iij5 = $897;
                    L1158: while(1) {
                     $898 = $iij5;
                     $899 = ($898|0)<(1);
                     if (!($899)) {
                      break;
                     }
                     $900 = $iij5;
                     $901 = (($j5valid) + ($900)|0);
                     $902 = HEAP8[$901>>0]|0;
                     $903 = $902&1;
                     do {
                      if ($903) {
                       $904 = $ij5;
                       $905 = (($cj5array) + ($904<<3)|0);
                       $906 = +HEAPF64[$905>>3];
                       $907 = $iij5;
                       $908 = (($cj5array) + ($907<<3)|0);
                       $909 = +HEAPF64[$908>>3];
                       $910 = $906 - $909;
                       $911 = (+__Z5IKabsd($910));
                       $912 = $911 < 9.9999999999999995E-7;
                       if (!($912)) {
                        break;
                       }
                       $913 = $ij5;
                       $914 = (($sj5array) + ($913<<3)|0);
                       $915 = +HEAPF64[$914>>3];
                       $916 = $iij5;
                       $917 = (($sj5array) + ($916<<3)|0);
                       $918 = +HEAPF64[$917>>3];
                       $919 = $915 - $918;
                       $920 = (+__Z5IKabsd($919));
                       $921 = $920 < 9.9999999999999995E-7;
                       if ($921) {
                        label = 75;
                        break L1158;
                       }
                      }
                     } while(0);
                     $928 = $iij5;
                     $929 = (($928) + 1)|0;
                     $iij5 = $929;
                    }
                    if ((label|0) == 75) {
                     label = 0;
                     $922 = $iij5;
                     $923 = (($j5valid) + ($922)|0);
                     HEAP8[$923>>0] = 0;
                     $924 = $iij5;
                     $925 = $924&255;
                     $926 = (($4) + 551|0);
                     $927 = (($926) + 1|0);
                     HEAP8[$927>>0] = $925;
                    }
                    $930 = $ij5;
                    $931 = (($j5array) + ($930<<3)|0);
                    $932 = +HEAPF64[$931>>3];
                    $933 = (($4) + 200|0);
                    HEAPF64[$933>>3] = $932;
                    $934 = $ij5;
                    $935 = (($cj5array) + ($934<<3)|0);
                    $936 = +HEAPF64[$935>>3];
                    $937 = (($4) + 208|0);
                    HEAPF64[$937>>3] = $936;
                    $938 = $ij5;
                    $939 = (($sj5array) + ($938<<3)|0);
                    $940 = +HEAPF64[$939>>3];
                    $941 = (($4) + 216|0);
                    HEAPF64[$941>>3] = $940;
                    $942 = (($4) + 200|0);
                    $943 = +HEAPF64[$942>>3];
                    $944 = (+__Z5IKsind($943));
                    $x148 = $944;
                    $945 = (($4) + 200|0);
                    $946 = +HEAPF64[$945>>3];
                    $947 = (+__Z5IKcosd($946));
                    $x149 = $947;
                    $948 = (($4) + 136|0);
                    $949 = +HEAPF64[$948>>3];
                    $950 = 1.0 * $949;
                    $x150 = $950;
                    $951 = $x149;
                    $952 = 1.0 * $951;
                    $x151 = $952;
                    $953 = (($4) + 136|0);
                    $954 = +HEAPF64[$953>>3];
                    $955 = $x148;
                    $956 = $954 * $955;
                    $x152 = $956;
                    $957 = $x148;
                    $958 = 1.0 * $957;
                    $x153 = $958;
                    $959 = (($4) + 128|0);
                    $960 = +HEAPF64[$959>>3];
                    $961 = $x151;
                    $962 = $960 * $961;
                    $x154 = $962;
                    $963 = (($4) + 336|0);
                    $964 = +HEAPF64[$963>>3];
                    $965 = (($4) + 136|0);
                    $966 = +HEAPF64[$965>>3];
                    $967 = $964 * $966;
                    $968 = $x148;
                    $969 = $967 + $968;
                    $970 = (($4) + 128|0);
                    $971 = +HEAPF64[$970>>3];
                    $972 = (($4) + 264|0);
                    $973 = +HEAPF64[$972>>3];
                    $974 = $971 * $973;
                    $975 = $969 + $974;
                    HEAPF64[$evalcond3>>3] = $975;
                    $976 = (($4) + 128|0);
                    $977 = +HEAPF64[$976>>3];
                    $978 = $x148;
                    $979 = $977 * $978;
                    $980 = (($4) + 264|0);
                    $981 = +HEAPF64[$980>>3];
                    $982 = $979 + $981;
                    $983 = (($4) + 136|0);
                    $984 = +HEAPF64[$983>>3];
                    $985 = $x149;
                    $986 = $984 * $985;
                    $987 = $982 + $986;
                    $988 = (($evalcond3) + 8|0);
                    HEAPF64[$988>>3] = $987;
                    $989 = $x151;
                    $990 = -1.0 * $989;
                    $991 = (($4) + 312|0);
                    $992 = +HEAPF64[$991>>3];
                    $993 = (($4) + 136|0);
                    $994 = +HEAPF64[$993>>3];
                    $995 = $992 * $994;
                    $996 = $990 + $995;
                    $997 = (($4) + 128|0);
                    $998 = +HEAPF64[$997>>3];
                    $999 = (($4) + 240|0);
                    $1000 = +HEAPF64[$999>>3];
                    $1001 = $998 * $1000;
                    $1002 = $996 + $1001;
                    $1003 = (($evalcond3) + 16|0);
                    HEAPF64[$1003>>3] = $1002;
                    $1004 = $x153;
                    $1005 = -1.0 * $1004;
                    $1006 = (($4) + 128|0);
                    $1007 = +HEAPF64[$1006>>3];
                    $1008 = (($4) + 312|0);
                    $1009 = +HEAPF64[$1008>>3];
                    $1010 = $1007 * $1009;
                    $1011 = $1005 + $1010;
                    $1012 = (($4) + 240|0);
                    $1013 = +HEAPF64[$1012>>3];
                    $1014 = -1.0 * $1013;
                    $1015 = $x150;
                    $1016 = $1014 * $1015;
                    $1017 = $1011 + $1016;
                    $1018 = (($evalcond3) + 24|0);
                    HEAPF64[$1018>>3] = $1017;
                    $1019 = $x151;
                    $1020 = -1.0 * $1019;
                    $1021 = (($4) + 128|0);
                    $1022 = +HEAPF64[$1021>>3];
                    $1023 = (($4) + 336|0);
                    $1024 = +HEAPF64[$1023>>3];
                    $1025 = $1022 * $1024;
                    $1026 = $1020 + $1025;
                    $1027 = (($4) + 264|0);
                    $1028 = +HEAPF64[$1027>>3];
                    $1029 = -1.0 * $1028;
                    $1030 = $x150;
                    $1031 = $1029 * $1030;
                    $1032 = $1026 + $1031;
                    $1033 = (($evalcond3) + 32|0);
                    HEAPF64[$1033>>3] = $1032;
                    $1034 = $x154;
                    $1035 = -1.0 * $1034;
                    $1036 = $x152;
                    $1037 = $1035 + $1036;
                    $1038 = (($4) + 240|0);
                    $1039 = +HEAPF64[$1038>>3];
                    $1040 = $1037 + $1039;
                    $1041 = (($evalcond3) + 40|0);
                    HEAPF64[$1041>>3] = $1040;
                    $1042 = $x154;
                    $1043 = -1.0 * $1042;
                    $1044 = $x152;
                    $1045 = $1043 + $1044;
                    $1046 = (($4) + 336|0);
                    $1047 = +HEAPF64[$1046>>3];
                    $1048 = $1045 + $1047;
                    $1049 = (($evalcond3) + 48|0);
                    HEAPF64[$1049>>3] = $1048;
                    $1050 = (($4) + 128|0);
                    $1051 = +HEAPF64[$1050>>3];
                    $1052 = -1.0 * $1051;
                    $1053 = $x153;
                    $1054 = $1052 * $1053;
                    $1055 = (($4) + 312|0);
                    $1056 = +HEAPF64[$1055>>3];
                    $1057 = $1054 + $1056;
                    $1058 = $x149;
                    $1059 = -1.0 * $1058;
                    $1060 = $x150;
                    $1061 = $1059 * $1060;
                    $1062 = $1057 + $1061;
                    $1063 = (($evalcond3) + 56|0);
                    HEAPF64[$1063>>3] = $1062;
                    $1064 = +HEAPF64[$evalcond3>>3];
                    $1065 = (+__Z5IKabsd($1064));
                    $1066 = $1065 > 5.0000000000000004E-6;
                    do {
                     if (!($1066)) {
                      $1067 = (($evalcond3) + 8|0);
                      $1068 = +HEAPF64[$1067>>3];
                      $1069 = (+__Z5IKabsd($1068));
                      $1070 = $1069 > 5.0000000000000004E-6;
                      if ($1070) {
                       break;
                      }
                      $1071 = (($evalcond3) + 16|0);
                      $1072 = +HEAPF64[$1071>>3];
                      $1073 = (+__Z5IKabsd($1072));
                      $1074 = $1073 > 5.0000000000000004E-6;
                      if ($1074) {
                       break;
                      }
                      $1075 = (($evalcond3) + 24|0);
                      $1076 = +HEAPF64[$1075>>3];
                      $1077 = (+__Z5IKabsd($1076));
                      $1078 = $1077 > 5.0000000000000004E-6;
                      if ($1078) {
                       break;
                      }
                      $1079 = (($evalcond3) + 32|0);
                      $1080 = +HEAPF64[$1079>>3];
                      $1081 = (+__Z5IKabsd($1080));
                      $1082 = $1081 > 5.0000000000000004E-6;
                      if ($1082) {
                       break;
                      }
                      $1083 = (($evalcond3) + 40|0);
                      $1084 = +HEAPF64[$1083>>3];
                      $1085 = (+__Z5IKabsd($1084));
                      $1086 = $1085 > 5.0000000000000004E-6;
                      if ($1086) {
                       break;
                      }
                      $1087 = (($evalcond3) + 48|0);
                      $1088 = +HEAPF64[$1087>>3];
                      $1089 = (+__Z5IKabsd($1088));
                      $1090 = $1089 > 5.0000000000000004E-6;
                      if ($1090) {
                       break;
                      }
                      $1091 = (($evalcond3) + 56|0);
                      $1092 = +HEAPF64[$1091>>3];
                      $1093 = (+__Z5IKabsd($1092));
                      $1094 = $1093 > 5.0000000000000004E-6;
                      if ($1094) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos,6);
                      __THREW__ = 0;
                      $1095 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1096 = __THREW__; __THREW__ = 0;
                      $1097 = $1096&1;
                      if ($1097) {
                       label = 122;
                       break L1;
                      }
                      $1098 = (($1095) + 17|0);
                      HEAP8[$1098>>0] = 1;
                      $1099 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1100 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1101 = __THREW__; __THREW__ = 0;
                      $1102 = $1101&1;
                      if ($1102) {
                       label = 122;
                       break L1;
                      }
                      $1103 = (($1100) + 8|0);
                      HEAPF64[$1103>>3] = $1099;
                      $1104 = (($4) + 536|0);
                      $1105 = HEAP8[$1104>>0]|0;
                      __THREW__ = 0;
                      $1106 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1107 = __THREW__; __THREW__ = 0;
                      $1108 = $1107&1;
                      if ($1108) {
                       label = 122;
                       break L1;
                      }
                      $1109 = (($1106) + 19|0);
                      HEAP8[$1109>>0] = $1105;
                      $1110 = (($4) + 536|0);
                      $1111 = (($1110) + 1|0);
                      $1112 = HEAP8[$1111>>0]|0;
                      __THREW__ = 0;
                      $1113 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1114 = __THREW__; __THREW__ = 0;
                      $1115 = $1114&1;
                      if ($1115) {
                       label = 122;
                       break L1;
                      }
                      $1116 = (($1113) + 19|0);
                      $1117 = (($1116) + 1|0);
                      HEAP8[$1117>>0] = $1112;
                      $1118 = (($4) + 538|0);
                      $1119 = HEAP8[$1118>>0]|0;
                      __THREW__ = 0;
                      $1120 = (invoke_iii(381,($vinfos|0),0)|0);
                      $1121 = __THREW__; __THREW__ = 0;
                      $1122 = $1121&1;
                      if ($1122) {
                       label = 122;
                       break L1;
                      }
                      $1123 = (($1120) + 18|0);
                      HEAP8[$1123>>0] = $1119;
                      __THREW__ = 0;
                      $1124 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1125 = __THREW__; __THREW__ = 0;
                      $1126 = $1125&1;
                      if ($1126) {
                       label = 122;
                       break L1;
                      }
                      $1127 = (($1124) + 17|0);
                      HEAP8[$1127>>0] = 1;
                      $1128 = (($4) + 40|0);
                      $1129 = +HEAPF64[$1128>>3];
                      __THREW__ = 0;
                      $1130 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1131 = __THREW__; __THREW__ = 0;
                      $1132 = $1131&1;
                      if ($1132) {
                       label = 122;
                       break L1;
                      }
                      $1133 = (($1130) + 8|0);
                      HEAPF64[$1133>>3] = $1129;
                      $1134 = (($4) + 539|0);
                      $1135 = HEAP8[$1134>>0]|0;
                      __THREW__ = 0;
                      $1136 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1137 = __THREW__; __THREW__ = 0;
                      $1138 = $1137&1;
                      if ($1138) {
                       label = 122;
                       break L1;
                      }
                      $1139 = (($1136) + 19|0);
                      HEAP8[$1139>>0] = $1135;
                      $1140 = (($4) + 539|0);
                      $1141 = (($1140) + 1|0);
                      $1142 = HEAP8[$1141>>0]|0;
                      __THREW__ = 0;
                      $1143 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1144 = __THREW__; __THREW__ = 0;
                      $1145 = $1144&1;
                      if ($1145) {
                       label = 122;
                       break L1;
                      }
                      $1146 = (($1143) + 19|0);
                      $1147 = (($1146) + 1|0);
                      HEAP8[$1147>>0] = $1142;
                      $1148 = (($4) + 541|0);
                      $1149 = HEAP8[$1148>>0]|0;
                      __THREW__ = 0;
                      $1150 = (invoke_iii(381,($vinfos|0),1)|0);
                      $1151 = __THREW__; __THREW__ = 0;
                      $1152 = $1151&1;
                      if ($1152) {
                       label = 122;
                       break L1;
                      }
                      $1153 = (($1150) + 18|0);
                      HEAP8[$1153>>0] = $1149;
                      __THREW__ = 0;
                      $1154 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1155 = __THREW__; __THREW__ = 0;
                      $1156 = $1155&1;
                      if ($1156) {
                       label = 122;
                       break L1;
                      }
                      $1157 = (($1154) + 17|0);
                      HEAP8[$1157>>0] = 1;
                      $1158 = (($4) + 80|0);
                      $1159 = +HEAPF64[$1158>>3];
                      __THREW__ = 0;
                      $1160 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1161 = __THREW__; __THREW__ = 0;
                      $1162 = $1161&1;
                      if ($1162) {
                       label = 122;
                       break L1;
                      }
                      $1163 = (($1160) + 8|0);
                      HEAPF64[$1163>>3] = $1159;
                      $1164 = (($4) + 542|0);
                      $1165 = HEAP8[$1164>>0]|0;
                      __THREW__ = 0;
                      $1166 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1167 = __THREW__; __THREW__ = 0;
                      $1168 = $1167&1;
                      if ($1168) {
                       label = 122;
                       break L1;
                      }
                      $1169 = (($1166) + 19|0);
                      HEAP8[$1169>>0] = $1165;
                      $1170 = (($4) + 542|0);
                      $1171 = (($1170) + 1|0);
                      $1172 = HEAP8[$1171>>0]|0;
                      __THREW__ = 0;
                      $1173 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1174 = __THREW__; __THREW__ = 0;
                      $1175 = $1174&1;
                      if ($1175) {
                       label = 122;
                       break L1;
                      }
                      $1176 = (($1173) + 19|0);
                      $1177 = (($1176) + 1|0);
                      HEAP8[$1177>>0] = $1172;
                      $1178 = (($4) + 544|0);
                      $1179 = HEAP8[$1178>>0]|0;
                      __THREW__ = 0;
                      $1180 = (invoke_iii(381,($vinfos|0),2)|0);
                      $1181 = __THREW__; __THREW__ = 0;
                      $1182 = $1181&1;
                      if ($1182) {
                       label = 122;
                       break L1;
                      }
                      $1183 = (($1180) + 18|0);
                      HEAP8[$1183>>0] = $1179;
                      __THREW__ = 0;
                      $1184 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1185 = __THREW__; __THREW__ = 0;
                      $1186 = $1185&1;
                      if ($1186) {
                       label = 122;
                       break L1;
                      }
                      $1187 = (($1184) + 17|0);
                      HEAP8[$1187>>0] = 1;
                      $1188 = (($4) + 120|0);
                      $1189 = +HEAPF64[$1188>>3];
                      __THREW__ = 0;
                      $1190 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1191 = __THREW__; __THREW__ = 0;
                      $1192 = $1191&1;
                      if ($1192) {
                       label = 122;
                       break L1;
                      }
                      $1193 = (($1190) + 8|0);
                      HEAPF64[$1193>>3] = $1189;
                      $1194 = (($4) + 545|0);
                      $1195 = HEAP8[$1194>>0]|0;
                      __THREW__ = 0;
                      $1196 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1197 = __THREW__; __THREW__ = 0;
                      $1198 = $1197&1;
                      if ($1198) {
                       label = 122;
                       break L1;
                      }
                      $1199 = (($1196) + 19|0);
                      HEAP8[$1199>>0] = $1195;
                      $1200 = (($4) + 545|0);
                      $1201 = (($1200) + 1|0);
                      $1202 = HEAP8[$1201>>0]|0;
                      __THREW__ = 0;
                      $1203 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1204 = __THREW__; __THREW__ = 0;
                      $1205 = $1204&1;
                      if ($1205) {
                       label = 122;
                       break L1;
                      }
                      $1206 = (($1203) + 19|0);
                      $1207 = (($1206) + 1|0);
                      HEAP8[$1207>>0] = $1202;
                      $1208 = (($4) + 547|0);
                      $1209 = HEAP8[$1208>>0]|0;
                      __THREW__ = 0;
                      $1210 = (invoke_iii(381,($vinfos|0),3)|0);
                      $1211 = __THREW__; __THREW__ = 0;
                      $1212 = $1211&1;
                      if ($1212) {
                       label = 122;
                       break L1;
                      }
                      $1213 = (($1210) + 18|0);
                      HEAP8[$1213>>0] = $1209;
                      __THREW__ = 0;
                      $1214 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1215 = __THREW__; __THREW__ = 0;
                      $1216 = $1215&1;
                      if ($1216) {
                       label = 122;
                       break L1;
                      }
                      $1217 = (($1214) + 17|0);
                      HEAP8[$1217>>0] = 1;
                      $1218 = (($4) + 160|0);
                      $1219 = +HEAPF64[$1218>>3];
                      __THREW__ = 0;
                      $1220 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1221 = __THREW__; __THREW__ = 0;
                      $1222 = $1221&1;
                      if ($1222) {
                       label = 122;
                       break L1;
                      }
                      $1223 = (($1220) + 8|0);
                      HEAPF64[$1223>>3] = $1219;
                      $1224 = (($4) + 548|0);
                      $1225 = HEAP8[$1224>>0]|0;
                      __THREW__ = 0;
                      $1226 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1227 = __THREW__; __THREW__ = 0;
                      $1228 = $1227&1;
                      if ($1228) {
                       label = 122;
                       break L1;
                      }
                      $1229 = (($1226) + 19|0);
                      HEAP8[$1229>>0] = $1225;
                      $1230 = (($4) + 548|0);
                      $1231 = (($1230) + 1|0);
                      $1232 = HEAP8[$1231>>0]|0;
                      __THREW__ = 0;
                      $1233 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1234 = __THREW__; __THREW__ = 0;
                      $1235 = $1234&1;
                      if ($1235) {
                       label = 122;
                       break L1;
                      }
                      $1236 = (($1233) + 19|0);
                      $1237 = (($1236) + 1|0);
                      HEAP8[$1237>>0] = $1232;
                      $1238 = (($4) + 550|0);
                      $1239 = HEAP8[$1238>>0]|0;
                      __THREW__ = 0;
                      $1240 = (invoke_iii(381,($vinfos|0),4)|0);
                      $1241 = __THREW__; __THREW__ = 0;
                      $1242 = $1241&1;
                      if ($1242) {
                       label = 122;
                       break L1;
                      }
                      $1243 = (($1240) + 18|0);
                      HEAP8[$1243>>0] = $1239;
                      __THREW__ = 0;
                      $1244 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1245 = __THREW__; __THREW__ = 0;
                      $1246 = $1245&1;
                      if ($1246) {
                       label = 122;
                       break L1;
                      }
                      $1247 = (($1244) + 17|0);
                      HEAP8[$1247>>0] = 1;
                      $1248 = (($4) + 200|0);
                      $1249 = +HEAPF64[$1248>>3];
                      __THREW__ = 0;
                      $1250 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1251 = __THREW__; __THREW__ = 0;
                      $1252 = $1251&1;
                      if ($1252) {
                       label = 122;
                       break L1;
                      }
                      $1253 = (($1250) + 8|0);
                      HEAPF64[$1253>>3] = $1249;
                      $1254 = (($4) + 551|0);
                      $1255 = HEAP8[$1254>>0]|0;
                      __THREW__ = 0;
                      $1256 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1257 = __THREW__; __THREW__ = 0;
                      $1258 = $1257&1;
                      if ($1258) {
                       label = 122;
                       break L1;
                      }
                      $1259 = (($1256) + 19|0);
                      HEAP8[$1259>>0] = $1255;
                      $1260 = (($4) + 551|0);
                      $1261 = (($1260) + 1|0);
                      $1262 = HEAP8[$1261>>0]|0;
                      __THREW__ = 0;
                      $1263 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1264 = __THREW__; __THREW__ = 0;
                      $1265 = $1264&1;
                      if ($1265) {
                       label = 122;
                       break L1;
                      }
                      $1266 = (($1263) + 19|0);
                      $1267 = (($1266) + 1|0);
                      HEAP8[$1267>>0] = $1262;
                      $1268 = (($4) + 553|0);
                      $1269 = HEAP8[$1268>>0]|0;
                      __THREW__ = 0;
                      $1270 = (invoke_iii(381,($vinfos|0),5)|0);
                      $1271 = __THREW__; __THREW__ = 0;
                      $1272 = $1271&1;
                      if ($1272) {
                       label = 122;
                       break L1;
                      }
                      $1273 = (($1270) + 18|0);
                      HEAP8[$1273>>0] = $1269;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree|0),0);
                      $1274 = __THREW__; __THREW__ = 0;
                      $1275 = $1274&1;
                      if ($1275) {
                       label = 122;
                       break L1;
                      }
                      $1276 = $1;
                      $1277 = HEAP32[$1276>>2]|0;
                      $1278 = (($1277) + 8|0);
                      $1279 = HEAP32[$1278>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1279|0,($1276|0),($vinfos|0),($vfree|0))|0);
                      $1280 = __THREW__; __THREW__ = 0;
                      $1281 = $1280&1;
                      if ($1281) {
                       label = 123;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree|0));
                      $1282 = __THREW__; __THREW__ = 0;
                      $1283 = $1282&1;
                      if ($1283) {
                       label = 122;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos);
                      break L1155;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1284 = $ij5;
                  $1285 = (($1284) + 1)|0;
                  $ij5 = $1285;
                 }
                } else {
                }
               } while(0);
               $1294 = $ij3;
               $1295 = (($1294) + 1)|0;
               $ij3 = $1295;
              }
              label = 130;
             } else {
              label = 130;
             }
            } else {
             label = 130;
            }
           } else {
            label = 130;
           }
          } else {
           label = 130;
          }
         } else {
          label = 130;
         }
        } else {
         label = 130;
        }
       } while(0);
       if ((label|0) == 130) {
        label = 0;
       }
       $1296 = $bgotonextstatement;
       $1297 = $1296&1;
       if ($1297) {
        $bgotonextstatement4 = 1;
        $1298 = (($4) + 160|0);
        $1299 = +HEAPF64[$1298>>3];
        $1300 = -3.14159265358979 + $1299;
        $1301 = (+__Z5IKabsd($1300));
        $1302 = 3.14159265358979 + $1301;
        $1303 = (+__Z6IKfmoddd($1302,6.2831853071795898));
        $1304 = -3.14159265358979 + $1303;
        HEAPF64[$evalcond>>3] = $1304;
        $1305 = (($4) + 432|0);
        $1306 = +HEAPF64[$1305>>3];
        $1307 = 1.0 + $1306;
        $1308 = (($evalcond) + 8|0);
        HEAPF64[$1308>>3] = $1307;
        $1309 = (($4) + 384|0);
        $1310 = +HEAPF64[$1309>>3];
        $1311 = (($evalcond) + 16|0);
        HEAPF64[$1311>>3] = $1310;
        $1312 = (($4) + 288|0);
        $1313 = +HEAPF64[$1312>>3];
        $1314 = (($evalcond) + 24|0);
        HEAPF64[$1314>>3] = $1313;
        $1315 = (($4) + 360|0);
        $1316 = +HEAPF64[$1315>>3];
        $1317 = (($evalcond) + 32|0);
        HEAPF64[$1317>>3] = $1316;
        $1318 = (($4) + 408|0);
        $1319 = +HEAPF64[$1318>>3];
        $1320 = (($evalcond) + 40|0);
        HEAPF64[$1320>>3] = $1319;
        $1321 = +HEAPF64[$evalcond>>3];
        $1322 = (+__Z5IKabsd($1321));
        $1323 = $1322 < 9.9999999999999995E-7;
        do {
         if ($1323) {
          $1324 = (($evalcond) + 8|0);
          $1325 = +HEAPF64[$1324>>3];
          $1326 = (+__Z5IKabsd($1325));
          $1327 = $1326 < 9.9999999999999995E-7;
          if ($1327) {
           $1328 = (($evalcond) + 16|0);
           $1329 = +HEAPF64[$1328>>3];
           $1330 = (+__Z5IKabsd($1329));
           $1331 = $1330 < 9.9999999999999995E-7;
           if ($1331) {
            $1332 = (($evalcond) + 24|0);
            $1333 = +HEAPF64[$1332>>3];
            $1334 = (+__Z5IKabsd($1333));
            $1335 = $1334 < 9.9999999999999995E-7;
            if ($1335) {
             $1336 = (($evalcond) + 32|0);
             $1337 = +HEAPF64[$1336>>3];
             $1338 = (+__Z5IKabsd($1337));
             $1339 = $1338 < 9.9999999999999995E-7;
             if ($1339) {
              $1340 = (($evalcond) + 40|0);
              $1341 = +HEAPF64[$1340>>3];
              $1342 = (+__Z5IKabsd($1341));
              $1343 = $1342 < 9.9999999999999995E-7;
              if (!($1343)) {
               label = 238;
               break;
              }
              $bgotonextstatement4 = 0;
              ;HEAP8[$j3valid8+0>>0]=0|0;HEAP8[$j3valid8+1>>0]=0|0;
              $1344 = (($4) + 547|0);
              HEAP8[$1344>>0] = 2;
              $1345 = (($4) + 288|0);
              $1346 = +HEAPF64[$1345>>3];
              $1347 = (($4) + 360|0);
              $1348 = +HEAPF64[$1347>>3];
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x156,$1346,$1348,1.9999999999999999E-6);
              $1349 = (($x156) + 8|0);
              $1350 = HEAP8[$1349>>0]|0;
              $1351 = $1350&1;
              if (!($1351)) {
               break;
              }
              $1352 = +HEAPF64[$x156>>3];
              $x155 = $1352;
              $1353 = $x155;
              $1354 = -1.0 * $1353;
              HEAPF64[$j3array5>>3] = $1354;
              $1355 = +HEAPF64[$j3array5>>3];
              $1356 = (+__Z5IKsind($1355));
              HEAPF64[$sj3array7>>3] = $1356;
              $1357 = +HEAPF64[$j3array5>>3];
              $1358 = (+__Z5IKcosd($1357));
              HEAPF64[$cj3array6>>3] = $1358;
              $1359 = $x155;
              $1360 = -1.0 * $1359;
              $1361 = 3.14159265358979 + $1360;
              $1362 = (($j3array5) + 8|0);
              HEAPF64[$1362>>3] = $1361;
              $1363 = (($j3array5) + 8|0);
              $1364 = +HEAPF64[$1363>>3];
              $1365 = (+__Z5IKsind($1364));
              $1366 = (($sj3array7) + 8|0);
              HEAPF64[$1366>>3] = $1365;
              $1367 = (($j3array5) + 8|0);
              $1368 = +HEAPF64[$1367>>3];
              $1369 = (+__Z5IKcosd($1368));
              $1370 = (($cj3array6) + 8|0);
              HEAPF64[$1370>>3] = $1369;
              $1371 = +HEAPF64[$j3array5>>3];
              $1372 = $1371 > 3.14159265358979;
              if ($1372) {
               $1373 = +HEAPF64[$j3array5>>3];
               $1374 = $1373 - 6.2831853071795898;
               HEAPF64[$j3array5>>3] = $1374;
              } else {
               $1375 = +HEAPF64[$j3array5>>3];
               $1376 = $1375 < -3.14159265358979;
               if ($1376) {
                $1377 = +HEAPF64[$j3array5>>3];
                $1378 = $1377 + 6.2831853071795898;
                HEAPF64[$j3array5>>3] = $1378;
               }
              }
              HEAP8[$j3valid8>>0] = 1;
              $1379 = (($j3array5) + 8|0);
              $1380 = +HEAPF64[$1379>>3];
              $1381 = $1380 > 3.14159265358979;
              if ($1381) {
               $1382 = (($j3array5) + 8|0);
               $1383 = +HEAPF64[$1382>>3];
               $1384 = $1383 - 6.2831853071795898;
               HEAPF64[$1382>>3] = $1384;
              } else {
               $1385 = (($j3array5) + 8|0);
               $1386 = +HEAPF64[$1385>>3];
               $1387 = $1386 < -3.14159265358979;
               if ($1387) {
                $1388 = (($j3array5) + 8|0);
                $1389 = +HEAPF64[$1388>>3];
                $1390 = $1389 + 6.2831853071795898;
                HEAPF64[$1388>>3] = $1390;
               }
              }
              $1391 = (($j3valid8) + 1|0);
              HEAP8[$1391>>0] = 1;
              $ij39 = 0;
              while(1) {
               $1392 = $ij39;
               $1393 = ($1392|0)<(2);
               if (!($1393)) {
                break;
               }
               $1394 = $ij39;
               $1395 = (($j3valid8) + ($1394)|0);
               $1396 = HEAP8[$1395>>0]|0;
               $1397 = $1396&1;
               L1249: do {
                if ($1397) {
                 $1398 = $ij39;
                 $1399 = $1398&255;
                 $1400 = (($4) + 545|0);
                 HEAP8[$1400>>0] = $1399;
                 $1401 = (($4) + 545|0);
                 $1402 = (($1401) + 1|0);
                 HEAP8[$1402>>0] = -1;
                 $1403 = $ij39;
                 $1404 = (($1403) + 1)|0;
                 $iij310 = $1404;
                 L1252: while(1) {
                  $1405 = $iij310;
                  $1406 = ($1405|0)<(2);
                  if (!($1406)) {
                   break;
                  }
                  $1407 = $iij310;
                  $1408 = (($j3valid8) + ($1407)|0);
                  $1409 = HEAP8[$1408>>0]|0;
                  $1410 = $1409&1;
                  do {
                   if ($1410) {
                    $1411 = $ij39;
                    $1412 = (($cj3array6) + ($1411<<3)|0);
                    $1413 = +HEAPF64[$1412>>3];
                    $1414 = $iij310;
                    $1415 = (($cj3array6) + ($1414<<3)|0);
                    $1416 = +HEAPF64[$1415>>3];
                    $1417 = $1413 - $1416;
                    $1418 = (+__Z5IKabsd($1417));
                    $1419 = $1418 < 9.9999999999999995E-7;
                    if (!($1419)) {
                     break;
                    }
                    $1420 = $ij39;
                    $1421 = (($sj3array7) + ($1420<<3)|0);
                    $1422 = +HEAPF64[$1421>>3];
                    $1423 = $iij310;
                    $1424 = (($sj3array7) + ($1423<<3)|0);
                    $1425 = +HEAPF64[$1424>>3];
                    $1426 = $1422 - $1425;
                    $1427 = (+__Z5IKabsd($1426));
                    $1428 = $1427 < 9.9999999999999995E-7;
                    if ($1428) {
                     label = 160;
                     break L1252;
                    }
                   }
                  } while(0);
                  $1435 = $iij310;
                  $1436 = (($1435) + 1)|0;
                  $iij310 = $1436;
                 }
                 if ((label|0) == 160) {
                  label = 0;
                  $1429 = $iij310;
                  $1430 = (($j3valid8) + ($1429)|0);
                  HEAP8[$1430>>0] = 0;
                  $1431 = $iij310;
                  $1432 = $1431&255;
                  $1433 = (($4) + 545|0);
                  $1434 = (($1433) + 1|0);
                  HEAP8[$1434>>0] = $1432;
                 }
                 $1437 = $ij39;
                 $1438 = (($j3array5) + ($1437<<3)|0);
                 $1439 = +HEAPF64[$1438>>3];
                 $1440 = (($4) + 120|0);
                 HEAPF64[$1440>>3] = $1439;
                 $1441 = $ij39;
                 $1442 = (($cj3array6) + ($1441<<3)|0);
                 $1443 = +HEAPF64[$1442>>3];
                 $1444 = (($4) + 128|0);
                 HEAPF64[$1444>>3] = $1443;
                 $1445 = $ij39;
                 $1446 = (($sj3array7) + ($1445<<3)|0);
                 $1447 = +HEAPF64[$1446>>3];
                 $1448 = (($4) + 136|0);
                 HEAPF64[$1448>>3] = $1447;
                 $1449 = (($4) + 288|0);
                 $1450 = +HEAPF64[$1449>>3];
                 $1451 = -1.0 * $1450;
                 $1452 = (($4) + 120|0);
                 $1453 = +HEAPF64[$1452>>3];
                 $1454 = (+__Z5IKsind($1453));
                 $1455 = $1451 * $1454;
                 $1456 = (($4) + 360|0);
                 $1457 = +HEAPF64[$1456>>3];
                 $1458 = (($4) + 120|0);
                 $1459 = +HEAPF64[$1458>>3];
                 $1460 = (+__Z5IKcosd($1459));
                 $1461 = $1457 * $1460;
                 $1462 = $1455 + $1461;
                 HEAPF64[$evalcond11>>3] = $1462;
                 $1463 = +HEAPF64[$evalcond11>>3];
                 $1464 = (+__Z5IKabsd($1463));
                 $1465 = $1464 > 5.0000000000000004E-6;
                 if ($1465) {
                  break;
                 }
                 ;HEAP8[$j5valid15+0>>0]=0|0;
                 $1466 = (($4) + 553|0);
                 HEAP8[$1466>>0] = 1;
                 $1467 = (($4) + 136|0);
                 $1468 = +HEAPF64[$1467>>3];
                 $1469 = 1.0 * $1468;
                 $x157 = $1469;
                 $1470 = (($4) + 128|0);
                 $1471 = +HEAPF64[$1470>>3];
                 $1472 = (($4) + 264|0);
                 $1473 = +HEAPF64[$1472>>3];
                 $1474 = $1471 * $1473;
                 $1475 = (($4) + 240|0);
                 $1476 = +HEAPF64[$1475>>3];
                 $1477 = -1.0 * $1476;
                 $1478 = $x157;
                 $1479 = $1477 * $1478;
                 $1480 = $1474 + $1479;
                 $1481 = (+__Z5IKabsd($1480));
                 $1482 = $1481 < 1.9999999999999999E-6;
                 do {
                  if ($1482) {
                   $1483 = (($4) + 128|0);
                   $1484 = +HEAPF64[$1483>>3];
                   $1485 = -1.0 * $1484;
                   $1486 = (($4) + 240|0);
                   $1487 = +HEAPF64[$1486>>3];
                   $1488 = $1485 * $1487;
                   $1489 = (($4) + 264|0);
                   $1490 = +HEAPF64[$1489>>3];
                   $1491 = -1.0 * $1490;
                   $1492 = $x157;
                   $1493 = $1491 * $1492;
                   $1494 = $1488 + $1493;
                   $1495 = (+__Z5IKabsd($1494));
                   $1496 = $1495 < 1.9999999999999999E-6;
                   if (!($1496)) {
                    break;
                   }
                   $1497 = (($4) + 128|0);
                   $1498 = +HEAPF64[$1497>>3];
                   $1499 = (($4) + 264|0);
                   $1500 = +HEAPF64[$1499>>3];
                   $1501 = $1498 * $1500;
                   $1502 = (($4) + 240|0);
                   $1503 = +HEAPF64[$1502>>3];
                   $1504 = -1.0 * $1503;
                   $1505 = $x157;
                   $1506 = $1504 * $1505;
                   $1507 = $1501 + $1506;
                   $1508 = (+__Z5IKsqrd($1507));
                   $1509 = (($4) + 128|0);
                   $1510 = +HEAPF64[$1509>>3];
                   $1511 = -1.0 * $1510;
                   $1512 = (($4) + 240|0);
                   $1513 = +HEAPF64[$1512>>3];
                   $1514 = $1511 * $1513;
                   $1515 = (($4) + 264|0);
                   $1516 = +HEAPF64[$1515>>3];
                   $1517 = -1.0 * $1516;
                   $1518 = $x157;
                   $1519 = $1517 * $1518;
                   $1520 = $1514 + $1519;
                   $1521 = (+__Z5IKsqrd($1520));
                   $1522 = $1508 + $1521;
                   $1523 = $1522 - 1.0;
                   $1524 = (+__Z5IKabsd($1523));
                   $1525 = $1524 <= 1.9999999999999999E-6;
                   if (!($1525)) {
                    break;
                   }
                   break L1249;
                  }
                 } while(0);
                 $1526 = (($4) + 128|0);
                 $1527 = +HEAPF64[$1526>>3];
                 $1528 = (($4) + 264|0);
                 $1529 = +HEAPF64[$1528>>3];
                 $1530 = $1527 * $1529;
                 $1531 = (($4) + 240|0);
                 $1532 = +HEAPF64[$1531>>3];
                 $1533 = -1.0 * $1532;
                 $1534 = $x157;
                 $1535 = $1533 * $1534;
                 $1536 = $1530 + $1535;
                 $1537 = (($4) + 128|0);
                 $1538 = +HEAPF64[$1537>>3];
                 $1539 = -1.0 * $1538;
                 $1540 = (($4) + 240|0);
                 $1541 = +HEAPF64[$1540>>3];
                 $1542 = $1539 * $1541;
                 $1543 = (($4) + 264|0);
                 $1544 = +HEAPF64[$1543>>3];
                 $1545 = -1.0 * $1544;
                 $1546 = $x157;
                 $1547 = $1545 * $1546;
                 $1548 = $1542 + $1547;
                 $1549 = (+__Z7IKatan2dd($1536,$1548));
                 HEAPF64[$j5array12>>3] = $1549;
                 $1550 = +HEAPF64[$j5array12>>3];
                 $1551 = (+__Z5IKsind($1550));
                 HEAPF64[$sj5array14>>3] = $1551;
                 $1552 = +HEAPF64[$j5array12>>3];
                 $1553 = (+__Z5IKcosd($1552));
                 HEAPF64[$cj5array13>>3] = $1553;
                 $1554 = +HEAPF64[$j5array12>>3];
                 $1555 = $1554 > 3.14159265358979;
                 if ($1555) {
                  $1556 = +HEAPF64[$j5array12>>3];
                  $1557 = $1556 - 6.2831853071795898;
                  HEAPF64[$j5array12>>3] = $1557;
                 } else {
                  $1558 = +HEAPF64[$j5array12>>3];
                  $1559 = $1558 < -3.14159265358979;
                  if ($1559) {
                   $1560 = +HEAPF64[$j5array12>>3];
                   $1561 = $1560 + 6.2831853071795898;
                   HEAPF64[$j5array12>>3] = $1561;
                  }
                 }
                 HEAP8[$j5valid15>>0] = 1;
                 $ij516 = 0;
                 while(1) {
                  $1562 = $ij516;
                  $1563 = ($1562|0)<(1);
                  if (!($1563)) {
                   break;
                  }
                  $1564 = $ij516;
                  $1565 = (($j5valid15) + ($1564)|0);
                  $1566 = HEAP8[$1565>>0]|0;
                  $1567 = $1566&1;
                  L1281: do {
                   if ($1567) {
                    $1568 = $ij516;
                    $1569 = $1568&255;
                    $1570 = (($4) + 551|0);
                    HEAP8[$1570>>0] = $1569;
                    $1571 = (($4) + 551|0);
                    $1572 = (($1571) + 1|0);
                    HEAP8[$1572>>0] = -1;
                    $1573 = $ij516;
                    $1574 = (($1573) + 1)|0;
                    $iij517 = $1574;
                    L1284: while(1) {
                     $1575 = $iij517;
                     $1576 = ($1575|0)<(1);
                     if (!($1576)) {
                      break;
                     }
                     $1577 = $iij517;
                     $1578 = (($j5valid15) + ($1577)|0);
                     $1579 = HEAP8[$1578>>0]|0;
                     $1580 = $1579&1;
                     do {
                      if ($1580) {
                       $1581 = $ij516;
                       $1582 = (($cj5array13) + ($1581<<3)|0);
                       $1583 = +HEAPF64[$1582>>3];
                       $1584 = $iij517;
                       $1585 = (($cj5array13) + ($1584<<3)|0);
                       $1586 = +HEAPF64[$1585>>3];
                       $1587 = $1583 - $1586;
                       $1588 = (+__Z5IKabsd($1587));
                       $1589 = $1588 < 9.9999999999999995E-7;
                       if (!($1589)) {
                        break;
                       }
                       $1590 = $ij516;
                       $1591 = (($sj5array14) + ($1590<<3)|0);
                       $1592 = +HEAPF64[$1591>>3];
                       $1593 = $iij517;
                       $1594 = (($sj5array14) + ($1593<<3)|0);
                       $1595 = +HEAPF64[$1594>>3];
                       $1596 = $1592 - $1595;
                       $1597 = (+__Z5IKabsd($1596));
                       $1598 = $1597 < 9.9999999999999995E-7;
                       if ($1598) {
                        label = 183;
                        break L1284;
                       }
                      }
                     } while(0);
                     $1605 = $iij517;
                     $1606 = (($1605) + 1)|0;
                     $iij517 = $1606;
                    }
                    if ((label|0) == 183) {
                     label = 0;
                     $1599 = $iij517;
                     $1600 = (($j5valid15) + ($1599)|0);
                     HEAP8[$1600>>0] = 0;
                     $1601 = $iij517;
                     $1602 = $1601&255;
                     $1603 = (($4) + 551|0);
                     $1604 = (($1603) + 1|0);
                     HEAP8[$1604>>0] = $1602;
                    }
                    $1607 = $ij516;
                    $1608 = (($j5array12) + ($1607<<3)|0);
                    $1609 = +HEAPF64[$1608>>3];
                    $1610 = (($4) + 200|0);
                    HEAPF64[$1610>>3] = $1609;
                    $1611 = $ij516;
                    $1612 = (($cj5array13) + ($1611<<3)|0);
                    $1613 = +HEAPF64[$1612>>3];
                    $1614 = (($4) + 208|0);
                    HEAPF64[$1614>>3] = $1613;
                    $1615 = $ij516;
                    $1616 = (($sj5array14) + ($1615<<3)|0);
                    $1617 = +HEAPF64[$1616>>3];
                    $1618 = (($4) + 216|0);
                    HEAPF64[$1618>>3] = $1617;
                    $1619 = (($4) + 200|0);
                    $1620 = +HEAPF64[$1619>>3];
                    $1621 = (+__Z5IKsind($1620));
                    $x158 = $1621;
                    $1622 = (($4) + 200|0);
                    $1623 = +HEAPF64[$1622>>3];
                    $1624 = (+__Z5IKcosd($1623));
                    $x159 = $1624;
                    $1625 = (($4) + 136|0);
                    $1626 = +HEAPF64[$1625>>3];
                    $1627 = 1.0 * $1626;
                    $x160 = $1627;
                    $1628 = $x158;
                    $1629 = 1.0 * $1628;
                    $x161 = $1629;
                    $1630 = (($4) + 136|0);
                    $1631 = +HEAPF64[$1630>>3];
                    $1632 = $x159;
                    $1633 = $1631 * $1632;
                    $x162 = $1633;
                    $1634 = $x159;
                    $1635 = 1.0 * $1634;
                    $x163 = $1635;
                    $1636 = (($4) + 128|0);
                    $1637 = +HEAPF64[$1636>>3];
                    $1638 = $x161;
                    $1639 = $1637 * $1638;
                    $x164 = $1639;
                    $1640 = (($4) + 312|0);
                    $1641 = +HEAPF64[$1640>>3];
                    $1642 = (($4) + 136|0);
                    $1643 = +HEAPF64[$1642>>3];
                    $1644 = $1641 * $1643;
                    $1645 = $x159;
                    $1646 = $1644 + $1645;
                    $1647 = (($4) + 128|0);
                    $1648 = +HEAPF64[$1647>>3];
                    $1649 = (($4) + 240|0);
                    $1650 = +HEAPF64[$1649>>3];
                    $1651 = $1648 * $1650;
                    $1652 = $1646 + $1651;
                    HEAPF64[$evalcond18>>3] = $1652;
                    $1653 = $x161;
                    $1654 = -1.0 * $1653;
                    $1655 = (($4) + 336|0);
                    $1656 = +HEAPF64[$1655>>3];
                    $1657 = (($4) + 136|0);
                    $1658 = +HEAPF64[$1657>>3];
                    $1659 = $1656 * $1658;
                    $1660 = $1654 + $1659;
                    $1661 = (($4) + 128|0);
                    $1662 = +HEAPF64[$1661>>3];
                    $1663 = (($4) + 264|0);
                    $1664 = +HEAPF64[$1663>>3];
                    $1665 = $1662 * $1664;
                    $1666 = $1660 + $1665;
                    $1667 = (($evalcond18) + 8|0);
                    HEAPF64[$1667>>3] = $1666;
                    $1668 = (($4) + 128|0);
                    $1669 = +HEAPF64[$1668>>3];
                    $1670 = $x159;
                    $1671 = $1669 * $1670;
                    $1672 = (($4) + 240|0);
                    $1673 = +HEAPF64[$1672>>3];
                    $1674 = $1671 + $1673;
                    $1675 = (($4) + 136|0);
                    $1676 = +HEAPF64[$1675>>3];
                    $1677 = $x158;
                    $1678 = $1676 * $1677;
                    $1679 = $1674 + $1678;
                    $1680 = (($evalcond18) + 16|0);
                    HEAPF64[$1680>>3] = $1679;
                    $1681 = (($4) + 240|0);
                    $1682 = +HEAPF64[$1681>>3];
                    $1683 = -1.0 * $1682;
                    $1684 = $x160;
                    $1685 = $1683 * $1684;
                    $1686 = $x161;
                    $1687 = -1.0 * $1686;
                    $1688 = $1685 + $1687;
                    $1689 = (($4) + 128|0);
                    $1690 = +HEAPF64[$1689>>3];
                    $1691 = (($4) + 312|0);
                    $1692 = +HEAPF64[$1691>>3];
                    $1693 = $1690 * $1692;
                    $1694 = $1688 + $1693;
                    $1695 = (($evalcond18) + 24|0);
                    HEAPF64[$1695>>3] = $1694;
                    $1696 = $x163;
                    $1697 = -1.0 * $1696;
                    $1698 = (($4) + 128|0);
                    $1699 = +HEAPF64[$1698>>3];
                    $1700 = (($4) + 336|0);
                    $1701 = +HEAPF64[$1700>>3];
                    $1702 = $1699 * $1701;
                    $1703 = $1697 + $1702;
                    $1704 = (($4) + 264|0);
                    $1705 = +HEAPF64[$1704>>3];
                    $1706 = -1.0 * $1705;
                    $1707 = $x160;
                    $1708 = $1706 * $1707;
                    $1709 = $1703 + $1708;
                    $1710 = (($evalcond18) + 32|0);
                    HEAPF64[$1710>>3] = $1709;
                    $1711 = $x164;
                    $1712 = -1.0 * $1711;
                    $1713 = $x162;
                    $1714 = $1712 + $1713;
                    $1715 = (($4) + 264|0);
                    $1716 = +HEAPF64[$1715>>3];
                    $1717 = $1714 + $1716;
                    $1718 = (($evalcond18) + 40|0);
                    HEAPF64[$1718>>3] = $1717;
                    $1719 = $x164;
                    $1720 = -1.0 * $1719;
                    $1721 = $x162;
                    $1722 = $1720 + $1721;
                    $1723 = (($4) + 312|0);
                    $1724 = +HEAPF64[$1723>>3];
                    $1725 = $1722 + $1724;
                    $1726 = (($evalcond18) + 48|0);
                    HEAPF64[$1726>>3] = $1725;
                    $1727 = $x158;
                    $1728 = -1.0 * $1727;
                    $1729 = $x160;
                    $1730 = $1728 * $1729;
                    $1731 = (($4) + 128|0);
                    $1732 = +HEAPF64[$1731>>3];
                    $1733 = -1.0 * $1732;
                    $1734 = $x163;
                    $1735 = $1733 * $1734;
                    $1736 = $1730 + $1735;
                    $1737 = (($4) + 336|0);
                    $1738 = +HEAPF64[$1737>>3];
                    $1739 = $1736 + $1738;
                    $1740 = (($evalcond18) + 56|0);
                    HEAPF64[$1740>>3] = $1739;
                    $1741 = +HEAPF64[$evalcond18>>3];
                    $1742 = (+__Z5IKabsd($1741));
                    $1743 = $1742 > 5.0000000000000004E-6;
                    do {
                     if (!($1743)) {
                      $1744 = (($evalcond18) + 8|0);
                      $1745 = +HEAPF64[$1744>>3];
                      $1746 = (+__Z5IKabsd($1745));
                      $1747 = $1746 > 5.0000000000000004E-6;
                      if ($1747) {
                       break;
                      }
                      $1748 = (($evalcond18) + 16|0);
                      $1749 = +HEAPF64[$1748>>3];
                      $1750 = (+__Z5IKabsd($1749));
                      $1751 = $1750 > 5.0000000000000004E-6;
                      if ($1751) {
                       break;
                      }
                      $1752 = (($evalcond18) + 24|0);
                      $1753 = +HEAPF64[$1752>>3];
                      $1754 = (+__Z5IKabsd($1753));
                      $1755 = $1754 > 5.0000000000000004E-6;
                      if ($1755) {
                       break;
                      }
                      $1756 = (($evalcond18) + 32|0);
                      $1757 = +HEAPF64[$1756>>3];
                      $1758 = (+__Z5IKabsd($1757));
                      $1759 = $1758 > 5.0000000000000004E-6;
                      if ($1759) {
                       break;
                      }
                      $1760 = (($evalcond18) + 40|0);
                      $1761 = +HEAPF64[$1760>>3];
                      $1762 = (+__Z5IKabsd($1761));
                      $1763 = $1762 > 5.0000000000000004E-6;
                      if ($1763) {
                       break;
                      }
                      $1764 = (($evalcond18) + 48|0);
                      $1765 = +HEAPF64[$1764>>3];
                      $1766 = (+__Z5IKabsd($1765));
                      $1767 = $1766 > 5.0000000000000004E-6;
                      if ($1767) {
                       break;
                      }
                      $1768 = (($evalcond18) + 56|0);
                      $1769 = +HEAPF64[$1768>>3];
                      $1770 = (+__Z5IKabsd($1769));
                      $1771 = $1770 > 5.0000000000000004E-6;
                      if ($1771) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos19,6);
                      __THREW__ = 0;
                      $1772 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1773 = __THREW__; __THREW__ = 0;
                      $1774 = $1773&1;
                      if ($1774) {
                       label = 230;
                       break L1;
                      }
                      $1775 = (($1772) + 17|0);
                      HEAP8[$1775>>0] = 1;
                      $1776 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $1777 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1778 = __THREW__; __THREW__ = 0;
                      $1779 = $1778&1;
                      if ($1779) {
                       label = 230;
                       break L1;
                      }
                      $1780 = (($1777) + 8|0);
                      HEAPF64[$1780>>3] = $1776;
                      $1781 = (($4) + 536|0);
                      $1782 = HEAP8[$1781>>0]|0;
                      __THREW__ = 0;
                      $1783 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1784 = __THREW__; __THREW__ = 0;
                      $1785 = $1784&1;
                      if ($1785) {
                       label = 230;
                       break L1;
                      }
                      $1786 = (($1783) + 19|0);
                      HEAP8[$1786>>0] = $1782;
                      $1787 = (($4) + 536|0);
                      $1788 = (($1787) + 1|0);
                      $1789 = HEAP8[$1788>>0]|0;
                      __THREW__ = 0;
                      $1790 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1791 = __THREW__; __THREW__ = 0;
                      $1792 = $1791&1;
                      if ($1792) {
                       label = 230;
                       break L1;
                      }
                      $1793 = (($1790) + 19|0);
                      $1794 = (($1793) + 1|0);
                      HEAP8[$1794>>0] = $1789;
                      $1795 = (($4) + 538|0);
                      $1796 = HEAP8[$1795>>0]|0;
                      __THREW__ = 0;
                      $1797 = (invoke_iii(381,($vinfos19|0),0)|0);
                      $1798 = __THREW__; __THREW__ = 0;
                      $1799 = $1798&1;
                      if ($1799) {
                       label = 230;
                       break L1;
                      }
                      $1800 = (($1797) + 18|0);
                      HEAP8[$1800>>0] = $1796;
                      __THREW__ = 0;
                      $1801 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1802 = __THREW__; __THREW__ = 0;
                      $1803 = $1802&1;
                      if ($1803) {
                       label = 230;
                       break L1;
                      }
                      $1804 = (($1801) + 17|0);
                      HEAP8[$1804>>0] = 1;
                      $1805 = (($4) + 40|0);
                      $1806 = +HEAPF64[$1805>>3];
                      __THREW__ = 0;
                      $1807 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1808 = __THREW__; __THREW__ = 0;
                      $1809 = $1808&1;
                      if ($1809) {
                       label = 230;
                       break L1;
                      }
                      $1810 = (($1807) + 8|0);
                      HEAPF64[$1810>>3] = $1806;
                      $1811 = (($4) + 539|0);
                      $1812 = HEAP8[$1811>>0]|0;
                      __THREW__ = 0;
                      $1813 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1814 = __THREW__; __THREW__ = 0;
                      $1815 = $1814&1;
                      if ($1815) {
                       label = 230;
                       break L1;
                      }
                      $1816 = (($1813) + 19|0);
                      HEAP8[$1816>>0] = $1812;
                      $1817 = (($4) + 539|0);
                      $1818 = (($1817) + 1|0);
                      $1819 = HEAP8[$1818>>0]|0;
                      __THREW__ = 0;
                      $1820 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1821 = __THREW__; __THREW__ = 0;
                      $1822 = $1821&1;
                      if ($1822) {
                       label = 230;
                       break L1;
                      }
                      $1823 = (($1820) + 19|0);
                      $1824 = (($1823) + 1|0);
                      HEAP8[$1824>>0] = $1819;
                      $1825 = (($4) + 541|0);
                      $1826 = HEAP8[$1825>>0]|0;
                      __THREW__ = 0;
                      $1827 = (invoke_iii(381,($vinfos19|0),1)|0);
                      $1828 = __THREW__; __THREW__ = 0;
                      $1829 = $1828&1;
                      if ($1829) {
                       label = 230;
                       break L1;
                      }
                      $1830 = (($1827) + 18|0);
                      HEAP8[$1830>>0] = $1826;
                      __THREW__ = 0;
                      $1831 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1832 = __THREW__; __THREW__ = 0;
                      $1833 = $1832&1;
                      if ($1833) {
                       label = 230;
                       break L1;
                      }
                      $1834 = (($1831) + 17|0);
                      HEAP8[$1834>>0] = 1;
                      $1835 = (($4) + 80|0);
                      $1836 = +HEAPF64[$1835>>3];
                      __THREW__ = 0;
                      $1837 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1838 = __THREW__; __THREW__ = 0;
                      $1839 = $1838&1;
                      if ($1839) {
                       label = 230;
                       break L1;
                      }
                      $1840 = (($1837) + 8|0);
                      HEAPF64[$1840>>3] = $1836;
                      $1841 = (($4) + 542|0);
                      $1842 = HEAP8[$1841>>0]|0;
                      __THREW__ = 0;
                      $1843 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1844 = __THREW__; __THREW__ = 0;
                      $1845 = $1844&1;
                      if ($1845) {
                       label = 230;
                       break L1;
                      }
                      $1846 = (($1843) + 19|0);
                      HEAP8[$1846>>0] = $1842;
                      $1847 = (($4) + 542|0);
                      $1848 = (($1847) + 1|0);
                      $1849 = HEAP8[$1848>>0]|0;
                      __THREW__ = 0;
                      $1850 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1851 = __THREW__; __THREW__ = 0;
                      $1852 = $1851&1;
                      if ($1852) {
                       label = 230;
                       break L1;
                      }
                      $1853 = (($1850) + 19|0);
                      $1854 = (($1853) + 1|0);
                      HEAP8[$1854>>0] = $1849;
                      $1855 = (($4) + 544|0);
                      $1856 = HEAP8[$1855>>0]|0;
                      __THREW__ = 0;
                      $1857 = (invoke_iii(381,($vinfos19|0),2)|0);
                      $1858 = __THREW__; __THREW__ = 0;
                      $1859 = $1858&1;
                      if ($1859) {
                       label = 230;
                       break L1;
                      }
                      $1860 = (($1857) + 18|0);
                      HEAP8[$1860>>0] = $1856;
                      __THREW__ = 0;
                      $1861 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1862 = __THREW__; __THREW__ = 0;
                      $1863 = $1862&1;
                      if ($1863) {
                       label = 230;
                       break L1;
                      }
                      $1864 = (($1861) + 17|0);
                      HEAP8[$1864>>0] = 1;
                      $1865 = (($4) + 120|0);
                      $1866 = +HEAPF64[$1865>>3];
                      __THREW__ = 0;
                      $1867 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1868 = __THREW__; __THREW__ = 0;
                      $1869 = $1868&1;
                      if ($1869) {
                       label = 230;
                       break L1;
                      }
                      $1870 = (($1867) + 8|0);
                      HEAPF64[$1870>>3] = $1866;
                      $1871 = (($4) + 545|0);
                      $1872 = HEAP8[$1871>>0]|0;
                      __THREW__ = 0;
                      $1873 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1874 = __THREW__; __THREW__ = 0;
                      $1875 = $1874&1;
                      if ($1875) {
                       label = 230;
                       break L1;
                      }
                      $1876 = (($1873) + 19|0);
                      HEAP8[$1876>>0] = $1872;
                      $1877 = (($4) + 545|0);
                      $1878 = (($1877) + 1|0);
                      $1879 = HEAP8[$1878>>0]|0;
                      __THREW__ = 0;
                      $1880 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1881 = __THREW__; __THREW__ = 0;
                      $1882 = $1881&1;
                      if ($1882) {
                       label = 230;
                       break L1;
                      }
                      $1883 = (($1880) + 19|0);
                      $1884 = (($1883) + 1|0);
                      HEAP8[$1884>>0] = $1879;
                      $1885 = (($4) + 547|0);
                      $1886 = HEAP8[$1885>>0]|0;
                      __THREW__ = 0;
                      $1887 = (invoke_iii(381,($vinfos19|0),3)|0);
                      $1888 = __THREW__; __THREW__ = 0;
                      $1889 = $1888&1;
                      if ($1889) {
                       label = 230;
                       break L1;
                      }
                      $1890 = (($1887) + 18|0);
                      HEAP8[$1890>>0] = $1886;
                      __THREW__ = 0;
                      $1891 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1892 = __THREW__; __THREW__ = 0;
                      $1893 = $1892&1;
                      if ($1893) {
                       label = 230;
                       break L1;
                      }
                      $1894 = (($1891) + 17|0);
                      HEAP8[$1894>>0] = 1;
                      $1895 = (($4) + 160|0);
                      $1896 = +HEAPF64[$1895>>3];
                      __THREW__ = 0;
                      $1897 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1898 = __THREW__; __THREW__ = 0;
                      $1899 = $1898&1;
                      if ($1899) {
                       label = 230;
                       break L1;
                      }
                      $1900 = (($1897) + 8|0);
                      HEAPF64[$1900>>3] = $1896;
                      $1901 = (($4) + 548|0);
                      $1902 = HEAP8[$1901>>0]|0;
                      __THREW__ = 0;
                      $1903 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1904 = __THREW__; __THREW__ = 0;
                      $1905 = $1904&1;
                      if ($1905) {
                       label = 230;
                       break L1;
                      }
                      $1906 = (($1903) + 19|0);
                      HEAP8[$1906>>0] = $1902;
                      $1907 = (($4) + 548|0);
                      $1908 = (($1907) + 1|0);
                      $1909 = HEAP8[$1908>>0]|0;
                      __THREW__ = 0;
                      $1910 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1911 = __THREW__; __THREW__ = 0;
                      $1912 = $1911&1;
                      if ($1912) {
                       label = 230;
                       break L1;
                      }
                      $1913 = (($1910) + 19|0);
                      $1914 = (($1913) + 1|0);
                      HEAP8[$1914>>0] = $1909;
                      $1915 = (($4) + 550|0);
                      $1916 = HEAP8[$1915>>0]|0;
                      __THREW__ = 0;
                      $1917 = (invoke_iii(381,($vinfos19|0),4)|0);
                      $1918 = __THREW__; __THREW__ = 0;
                      $1919 = $1918&1;
                      if ($1919) {
                       label = 230;
                       break L1;
                      }
                      $1920 = (($1917) + 18|0);
                      HEAP8[$1920>>0] = $1916;
                      __THREW__ = 0;
                      $1921 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1922 = __THREW__; __THREW__ = 0;
                      $1923 = $1922&1;
                      if ($1923) {
                       label = 230;
                       break L1;
                      }
                      $1924 = (($1921) + 17|0);
                      HEAP8[$1924>>0] = 1;
                      $1925 = (($4) + 200|0);
                      $1926 = +HEAPF64[$1925>>3];
                      __THREW__ = 0;
                      $1927 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1928 = __THREW__; __THREW__ = 0;
                      $1929 = $1928&1;
                      if ($1929) {
                       label = 230;
                       break L1;
                      }
                      $1930 = (($1927) + 8|0);
                      HEAPF64[$1930>>3] = $1926;
                      $1931 = (($4) + 551|0);
                      $1932 = HEAP8[$1931>>0]|0;
                      __THREW__ = 0;
                      $1933 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1934 = __THREW__; __THREW__ = 0;
                      $1935 = $1934&1;
                      if ($1935) {
                       label = 230;
                       break L1;
                      }
                      $1936 = (($1933) + 19|0);
                      HEAP8[$1936>>0] = $1932;
                      $1937 = (($4) + 551|0);
                      $1938 = (($1937) + 1|0);
                      $1939 = HEAP8[$1938>>0]|0;
                      __THREW__ = 0;
                      $1940 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1941 = __THREW__; __THREW__ = 0;
                      $1942 = $1941&1;
                      if ($1942) {
                       label = 230;
                       break L1;
                      }
                      $1943 = (($1940) + 19|0);
                      $1944 = (($1943) + 1|0);
                      HEAP8[$1944>>0] = $1939;
                      $1945 = (($4) + 553|0);
                      $1946 = HEAP8[$1945>>0]|0;
                      __THREW__ = 0;
                      $1947 = (invoke_iii(381,($vinfos19|0),5)|0);
                      $1948 = __THREW__; __THREW__ = 0;
                      $1949 = $1948&1;
                      if ($1949) {
                       label = 230;
                       break L1;
                      }
                      $1950 = (($1947) + 18|0);
                      HEAP8[$1950>>0] = $1946;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree20|0),0);
                      $1951 = __THREW__; __THREW__ = 0;
                      $1952 = $1951&1;
                      if ($1952) {
                       label = 230;
                       break L1;
                      }
                      $1953 = $1;
                      $1954 = HEAP32[$1953>>2]|0;
                      $1955 = (($1954) + 8|0);
                      $1956 = HEAP32[$1955>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($1956|0,($1953|0),($vinfos19|0),($vfree20|0))|0);
                      $1957 = __THREW__; __THREW__ = 0;
                      $1958 = $1957&1;
                      if ($1958) {
                       label = 231;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree20|0));
                      $1959 = __THREW__; __THREW__ = 0;
                      $1960 = $1959&1;
                      if ($1960) {
                       label = 230;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos19);
                      break L1281;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $1961 = $ij516;
                  $1962 = (($1961) + 1)|0;
                  $ij516 = $1962;
                 }
                } else {
                }
               } while(0);
               $1971 = $ij39;
               $1972 = (($1971) + 1)|0;
               $ij39 = $1972;
              }
              label = 238;
             } else {
              label = 238;
             }
            } else {
             label = 238;
            }
           } else {
            label = 238;
           }
          } else {
           label = 238;
          }
         } else {
          label = 238;
         }
        } while(0);
        if ((label|0) == 238) {
         label = 0;
        }
        $1973 = $bgotonextstatement4;
        $1974 = $1973&1;
        if ($1974) {
         $bgotonextstatement21 = 1;
         $bgotonextstatement21 = 0;
         $1975 = $bgotonextstatement21;
         $1976 = $1975&1;
         if ($1976) {
         }
        }
       }
      } else {
       ;HEAP8[$j3valid25+0>>0]=0|0;
       $1977 = (($4) + 547|0);
       HEAP8[$1977>>0] = 1;
       $1978 = (($4) + 176|0);
       $1979 = +HEAPF64[$1978>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x166,$1979,-1);
       $1980 = (($x166) + 8|0);
       $1981 = HEAP8[$1980>>0]|0;
       $1982 = $1981&1;
       if (!($1982)) {
        break;
       }
       $1983 = +HEAPF64[$x166>>3];
       $x165 = $1983;
       $1984 = (($4) + 360|0);
       $1985 = +HEAPF64[$1984>>3];
       __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x167,$1985,-1);
       $1986 = (($x167) + 8|0);
       $1987 = HEAP8[$1986>>0]|0;
       $1988 = $1987&1;
       if (!($1988)) {
        break;
       }
       $1989 = $x165;
       $1990 = +HEAPF64[$x167>>3];
       $1991 = $1989 * $1990;
       $1992 = (($4) + 168|0);
       $1993 = +HEAPF64[$1992>>3];
       $1994 = (($4) + 168|0);
       $1995 = +HEAPF64[$1994>>3];
       $1996 = $1993 * $1995;
       $1997 = -1.0 * $1996;
       $1998 = 1.0 + $1997;
       $1999 = (($4) + 288|0);
       $2000 = +HEAPF64[$1999>>3];
       $2001 = (($4) + 288|0);
       $2002 = +HEAPF64[$2001>>3];
       $2003 = $2000 * $2002;
       $2004 = -1.0 * $2003;
       $2005 = $1998 + $2004;
       $2006 = $1991 * $2005;
       $2007 = (+__Z5IKabsd($2006));
       $2008 = $2007 < 1.9999999999999999E-6;
       if ($2008) {
        $2009 = (($4) + 288|0);
        $2010 = +HEAPF64[$2009>>3];
        $2011 = $x165;
        $2012 = $2010 * $2011;
        $2013 = (+__Z5IKabsd($2012));
        $2014 = $2013 < 1.9999999999999999E-6;
        if ($2014) {
         $2015 = $x165;
         $2016 = +HEAPF64[$x167>>3];
         $2017 = $2015 * $2016;
         $2018 = (($4) + 168|0);
         $2019 = +HEAPF64[$2018>>3];
         $2020 = (($4) + 168|0);
         $2021 = +HEAPF64[$2020>>3];
         $2022 = $2019 * $2021;
         $2023 = -1.0 * $2022;
         $2024 = 1.0 + $2023;
         $2025 = (($4) + 288|0);
         $2026 = +HEAPF64[$2025>>3];
         $2027 = (($4) + 288|0);
         $2028 = +HEAPF64[$2027>>3];
         $2029 = $2026 * $2028;
         $2030 = -1.0 * $2029;
         $2031 = $2024 + $2030;
         $2032 = $2017 * $2031;
         $2033 = (+__Z5IKsqrd($2032));
         $2034 = (($4) + 288|0);
         $2035 = +HEAPF64[$2034>>3];
         $2036 = $x165;
         $2037 = $2035 * $2036;
         $2038 = (+__Z5IKsqrd($2037));
         $2039 = $2033 + $2038;
         $2040 = $2039 - 1.0;
         $2041 = (+__Z5IKabsd($2040));
         $2042 = $2041 <= 1.9999999999999999E-6;
         if ($2042) {
          break;
         }
        }
       }
       $2043 = $x165;
       $2044 = +HEAPF64[$x167>>3];
       $2045 = $2043 * $2044;
       $2046 = (($4) + 168|0);
       $2047 = +HEAPF64[$2046>>3];
       $2048 = (($4) + 168|0);
       $2049 = +HEAPF64[$2048>>3];
       $2050 = $2047 * $2049;
       $2051 = -1.0 * $2050;
       $2052 = 1.0 + $2051;
       $2053 = (($4) + 288|0);
       $2054 = +HEAPF64[$2053>>3];
       $2055 = (($4) + 288|0);
       $2056 = +HEAPF64[$2055>>3];
       $2057 = $2054 * $2056;
       $2058 = -1.0 * $2057;
       $2059 = $2052 + $2058;
       $2060 = $2045 * $2059;
       $2061 = (($4) + 288|0);
       $2062 = +HEAPF64[$2061>>3];
       $2063 = $x165;
       $2064 = $2062 * $2063;
       $2065 = (+__Z7IKatan2dd($2060,$2064));
       HEAPF64[$j3array22>>3] = $2065;
       $2066 = +HEAPF64[$j3array22>>3];
       $2067 = (+__Z5IKsind($2066));
       HEAPF64[$sj3array24>>3] = $2067;
       $2068 = +HEAPF64[$j3array22>>3];
       $2069 = (+__Z5IKcosd($2068));
       HEAPF64[$cj3array23>>3] = $2069;
       $2070 = +HEAPF64[$j3array22>>3];
       $2071 = $2070 > 3.14159265358979;
       if ($2071) {
        $2072 = +HEAPF64[$j3array22>>3];
        $2073 = $2072 - 6.2831853071795898;
        HEAPF64[$j3array22>>3] = $2073;
       } else {
        $2074 = +HEAPF64[$j3array22>>3];
        $2075 = $2074 < -3.14159265358979;
        if ($2075) {
         $2076 = +HEAPF64[$j3array22>>3];
         $2077 = $2076 + 6.2831853071795898;
         HEAPF64[$j3array22>>3] = $2077;
        }
       }
       HEAP8[$j3valid25>>0] = 1;
       $ij326 = 0;
       while(1) {
        $2078 = $ij326;
        $2079 = ($2078|0)<(1);
        if (!($2079)) {
         break;
        }
        $2080 = $ij326;
        $2081 = (($j3valid25) + ($2080)|0);
        $2082 = HEAP8[$2081>>0]|0;
        $2083 = $2082&1;
        L1376: do {
         if ($2083) {
          $2084 = $ij326;
          $2085 = $2084&255;
          $2086 = (($4) + 545|0);
          HEAP8[$2086>>0] = $2085;
          $2087 = (($4) + 545|0);
          $2088 = (($2087) + 1|0);
          HEAP8[$2088>>0] = -1;
          $2089 = $ij326;
          $2090 = (($2089) + 1)|0;
          $iij327 = $2090;
          L1379: while(1) {
           $2091 = $iij327;
           $2092 = ($2091|0)<(1);
           if (!($2092)) {
            break;
           }
           $2093 = $iij327;
           $2094 = (($j3valid25) + ($2093)|0);
           $2095 = HEAP8[$2094>>0]|0;
           $2096 = $2095&1;
           do {
            if ($2096) {
             $2097 = $ij326;
             $2098 = (($cj3array23) + ($2097<<3)|0);
             $2099 = +HEAPF64[$2098>>3];
             $2100 = $iij327;
             $2101 = (($cj3array23) + ($2100<<3)|0);
             $2102 = +HEAPF64[$2101>>3];
             $2103 = $2099 - $2102;
             $2104 = (+__Z5IKabsd($2103));
             $2105 = $2104 < 9.9999999999999995E-7;
             if (!($2105)) {
              break;
             }
             $2106 = $ij326;
             $2107 = (($sj3array24) + ($2106<<3)|0);
             $2108 = +HEAPF64[$2107>>3];
             $2109 = $iij327;
             $2110 = (($sj3array24) + ($2109<<3)|0);
             $2111 = +HEAPF64[$2110>>3];
             $2112 = $2108 - $2111;
             $2113 = (+__Z5IKabsd($2112));
             $2114 = $2113 < 9.9999999999999995E-7;
             if ($2114) {
              label = 269;
              break L1379;
             }
            }
           } while(0);
           $2121 = $iij327;
           $2122 = (($2121) + 1)|0;
           $iij327 = $2122;
          }
          if ((label|0) == 269) {
           label = 0;
           $2115 = $iij327;
           $2116 = (($j3valid25) + ($2115)|0);
           HEAP8[$2116>>0] = 0;
           $2117 = $iij327;
           $2118 = $2117&255;
           $2119 = (($4) + 545|0);
           $2120 = (($2119) + 1|0);
           HEAP8[$2120>>0] = $2118;
          }
          $2123 = $ij326;
          $2124 = (($j3array22) + ($2123<<3)|0);
          $2125 = +HEAPF64[$2124>>3];
          $2126 = (($4) + 120|0);
          HEAPF64[$2126>>3] = $2125;
          $2127 = $ij326;
          $2128 = (($cj3array23) + ($2127<<3)|0);
          $2129 = +HEAPF64[$2128>>3];
          $2130 = (($4) + 128|0);
          HEAPF64[$2130>>3] = $2129;
          $2131 = $ij326;
          $2132 = (($sj3array24) + ($2131<<3)|0);
          $2133 = +HEAPF64[$2132>>3];
          $2134 = (($4) + 136|0);
          HEAPF64[$2134>>3] = $2133;
          $2135 = (($4) + 120|0);
          $2136 = +HEAPF64[$2135>>3];
          $2137 = (+__Z5IKcosd($2136));
          $x168 = $2137;
          $2138 = (($4) + 120|0);
          $2139 = +HEAPF64[$2138>>3];
          $2140 = (+__Z5IKsind($2139));
          $x169 = $2140;
          $2141 = (($4) + 176|0);
          $2142 = +HEAPF64[$2141>>3];
          $2143 = 1.0 * $2142;
          $x170 = $2143;
          $2144 = (($4) + 168|0);
          $2145 = +HEAPF64[$2144>>3];
          $2146 = 1.0 * $2145;
          $x171 = $2146;
          $2147 = (($4) + 360|0);
          $2148 = +HEAPF64[$2147>>3];
          $2149 = $x169;
          $2150 = $2148 * $2149;
          $x172 = $2150;
          $2151 = (($4) + 288|0);
          $2152 = +HEAPF64[$2151>>3];
          $2153 = $x168;
          $2154 = $2152 * $2153;
          $x173 = $2154;
          $2155 = $x168;
          $2156 = -1.0 * $2155;
          $2157 = $x170;
          $2158 = $2156 * $2157;
          $2159 = (($4) + 288|0);
          $2160 = +HEAPF64[$2159>>3];
          $2161 = $2158 + $2160;
          HEAPF64[$evalcond28>>3] = $2161;
          $2162 = (($4) + 360|0);
          $2163 = +HEAPF64[$2162>>3];
          $2164 = $x169;
          $2165 = -1.0 * $2164;
          $2166 = $x170;
          $2167 = $2165 * $2166;
          $2168 = $2163 + $2167;
          $2169 = (($evalcond28) + 8|0);
          HEAPF64[$2169>>3] = $2168;
          $2170 = (($4) + 360|0);
          $2171 = +HEAPF64[$2170>>3];
          $2172 = $x168;
          $2173 = $2171 * $2172;
          $2174 = (($4) + 288|0);
          $2175 = +HEAPF64[$2174>>3];
          $2176 = -1.0 * $2175;
          $2177 = $x169;
          $2178 = $2176 * $2177;
          $2179 = $2173 + $2178;
          $2180 = (($evalcond28) + 16|0);
          HEAPF64[$2180>>3] = $2179;
          $2181 = $x170;
          $2182 = -1.0 * $2181;
          $2183 = $x173;
          $2184 = $2182 + $2183;
          $2185 = $x172;
          $2186 = $2184 + $2185;
          $2187 = (($evalcond28) + 24|0);
          HEAPF64[$2187>>3] = $2186;
          $2188 = (($4) + 432|0);
          $2189 = +HEAPF64[$2188>>3];
          $2190 = (($4) + 176|0);
          $2191 = +HEAPF64[$2190>>3];
          $2192 = $2189 * $2191;
          $2193 = $x171;
          $2194 = -1.0 * $2193;
          $2195 = $x173;
          $2196 = $2194 * $2195;
          $2197 = $2192 + $2196;
          $2198 = $x171;
          $2199 = -1.0 * $2198;
          $2200 = $x172;
          $2201 = $2199 * $2200;
          $2202 = $2197 + $2201;
          $2203 = (($evalcond28) + 32|0);
          HEAPF64[$2203>>3] = $2202;
          $2204 = (($4) + 384|0);
          $2205 = +HEAPF64[$2204>>3];
          $2206 = -1.0 * $2205;
          $2207 = $x171;
          $2208 = $2206 * $2207;
          $2209 = (($4) + 240|0);
          $2210 = +HEAPF64[$2209>>3];
          $2211 = -1.0 * $2210;
          $2212 = $x168;
          $2213 = $2211 * $2212;
          $2214 = $x170;
          $2215 = $2213 * $2214;
          $2216 = $2208 + $2215;
          $2217 = (($4) + 312|0);
          $2218 = +HEAPF64[$2217>>3];
          $2219 = -1.0 * $2218;
          $2220 = $x169;
          $2221 = $2219 * $2220;
          $2222 = $x170;
          $2223 = $2221 * $2222;
          $2224 = $2216 + $2223;
          $2225 = (($evalcond28) + 40|0);
          HEAPF64[$2225>>3] = $2224;
          $2226 = (($4) + 408|0);
          $2227 = +HEAPF64[$2226>>3];
          $2228 = -1.0 * $2227;
          $2229 = $x171;
          $2230 = $2228 * $2229;
          $2231 = (($4) + 336|0);
          $2232 = +HEAPF64[$2231>>3];
          $2233 = -1.0 * $2232;
          $2234 = $x169;
          $2235 = $2233 * $2234;
          $2236 = $x170;
          $2237 = $2235 * $2236;
          $2238 = $2230 + $2237;
          $2239 = (($4) + 264|0);
          $2240 = +HEAPF64[$2239>>3];
          $2241 = -1.0 * $2240;
          $2242 = $x168;
          $2243 = $2241 * $2242;
          $2244 = $x170;
          $2245 = $2243 * $2244;
          $2246 = $2238 + $2245;
          $2247 = (($evalcond28) + 48|0);
          HEAPF64[$2247>>3] = $2246;
          $2248 = $x170;
          $2249 = -1.0 * $2248;
          $2250 = $x172;
          $2251 = $2249 * $2250;
          $2252 = 1.0 + $2251;
          $2253 = $x170;
          $2254 = -1.0 * $2253;
          $2255 = $x173;
          $2256 = $2254 * $2255;
          $2257 = $2252 + $2256;
          $2258 = (($4) + 432|0);
          $2259 = +HEAPF64[$2258>>3];
          $2260 = -1.0 * $2259;
          $2261 = $x171;
          $2262 = $2260 * $2261;
          $2263 = $2257 + $2262;
          $2264 = (($evalcond28) + 56|0);
          HEAPF64[$2264>>3] = $2263;
          $2265 = +HEAPF64[$evalcond28>>3];
          $2266 = (+__Z5IKabsd($2265));
          $2267 = $2266 > 5.0000000000000004E-6;
          do {
           if (!($2267)) {
            $2268 = (($evalcond28) + 8|0);
            $2269 = +HEAPF64[$2268>>3];
            $2270 = (+__Z5IKabsd($2269));
            $2271 = $2270 > 5.0000000000000004E-6;
            if ($2271) {
             break;
            }
            $2272 = (($evalcond28) + 16|0);
            $2273 = +HEAPF64[$2272>>3];
            $2274 = (+__Z5IKabsd($2273));
            $2275 = $2274 > 5.0000000000000004E-6;
            if ($2275) {
             break;
            }
            $2276 = (($evalcond28) + 24|0);
            $2277 = +HEAPF64[$2276>>3];
            $2278 = (+__Z5IKabsd($2277));
            $2279 = $2278 > 5.0000000000000004E-6;
            if ($2279) {
             break;
            }
            $2280 = (($evalcond28) + 32|0);
            $2281 = +HEAPF64[$2280>>3];
            $2282 = (+__Z5IKabsd($2281));
            $2283 = $2282 > 5.0000000000000004E-6;
            if ($2283) {
             break;
            }
            $2284 = (($evalcond28) + 40|0);
            $2285 = +HEAPF64[$2284>>3];
            $2286 = (+__Z5IKabsd($2285));
            $2287 = $2286 > 5.0000000000000004E-6;
            if ($2287) {
             break;
            }
            $2288 = (($evalcond28) + 48|0);
            $2289 = +HEAPF64[$2288>>3];
            $2290 = (+__Z5IKabsd($2289));
            $2291 = $2290 > 5.0000000000000004E-6;
            if ($2291) {
             break;
            }
            $2292 = (($evalcond28) + 56|0);
            $2293 = +HEAPF64[$2292>>3];
            $2294 = (+__Z5IKabsd($2293));
            $2295 = $2294 > 5.0000000000000004E-6;
            if ($2295) {
             break;
            }
            $2296 = (($4) + 8|0);
            $2297 = +HEAPF64[$2296>>3];
            $2298 = 1.0 * $2297;
            $x174 = $2298;
            $2299 = (($4) + 344|0);
            $2300 = +HEAPF64[$2299>>3];
            $2301 = (($4) + 16|0);
            $2302 = +HEAPF64[$2301>>3];
            $2303 = $2300 * $2302;
            $x175 = $2303;
            $2304 = (($4) + 320|0);
            $2305 = +HEAPF64[$2304>>3];
            $2306 = (($4) + 16|0);
            $2307 = +HEAPF64[$2306>>3];
            $2308 = $2305 * $2307;
            $x176 = $2308;
            $2309 = (($4) + 88|0);
            $2310 = +HEAPF64[$2309>>3];
            $2311 = 1.0 * $2310;
            $x177 = $2311;
            $2312 = (($4) + 48|0);
            $2313 = +HEAPF64[$2312>>3];
            $2314 = (($4) + 96|0);
            $2315 = +HEAPF64[$2314>>3];
            $2316 = $2313 * $2315;
            $x178 = $2316;
            $2317 = (($4) + 368|0);
            $2318 = +HEAPF64[$2317>>3];
            $2319 = (($4) + 16|0);
            $2320 = +HEAPF64[$2319>>3];
            $2321 = $2318 * $2320;
            $x179 = $2321;
            $2322 = (($4) + 88|0);
            $2323 = +HEAPF64[$2322>>3];
            $2324 = (($4) + 56|0);
            $2325 = +HEAPF64[$2324>>3];
            $2326 = $2323 * $2325;
            $2327 = $x178;
            $2328 = $2326 + $2327;
            $x180 = $2328;
            $2329 = $x116;
            $x181 = $2329;
            $2330 = (($4) + 16|0);
            $2331 = +HEAPF64[$2330>>3];
            $2332 = $x181;
            $2333 = $2331 * $2332;
            $x182 = $2333;
            $2334 = (($4) + 8|0);
            $2335 = +HEAPF64[$2334>>3];
            $2336 = $x180;
            $2337 = $2335 * $2336;
            $x183 = $2337;
            $2338 = (($4) + 8|0);
            $2339 = +HEAPF64[$2338>>3];
            $2340 = $x181;
            $2341 = $2339 * $2340;
            $x184 = $2341;
            $2342 = $x120;
            $x185 = $2342;
            $2343 = $x176;
            $2344 = $x180;
            $2345 = $2343 * $2344;
            $2346 = (($4) + 248|0);
            $2347 = +HEAPF64[$2346>>3];
            $2348 = $x183;
            $2349 = $2347 * $2348;
            $2350 = $2345 + $2349;
            $2351 = (($4) + 392|0);
            $2352 = +HEAPF64[$2351>>3];
            $2353 = $x181;
            $2354 = $2352 * $2353;
            $2355 = $2350 + $2354;
            $2356 = (($4) + 240|0);
            HEAPF64[$2356>>3] = $2355;
            $2357 = (($4) + 272|0);
            $2358 = +HEAPF64[$2357>>3];
            $2359 = $x183;
            $2360 = $2358 * $2359;
            $2361 = $x175;
            $2362 = $x180;
            $2363 = $2361 * $2362;
            $2364 = $2360 + $2363;
            $2365 = (($4) + 416|0);
            $2366 = +HEAPF64[$2365>>3];
            $2367 = $x181;
            $2368 = $2366 * $2367;
            $2369 = $2364 + $2368;
            $2370 = (($4) + 264|0);
            HEAPF64[$2370>>3] = $2369;
            $2371 = $x179;
            $2372 = $x180;
            $2373 = $2371 * $2372;
            $2374 = (($4) + 296|0);
            $2375 = +HEAPF64[$2374>>3];
            $2376 = $x183;
            $2377 = $2375 * $2376;
            $2378 = $2373 + $2377;
            $2379 = (($4) + 440|0);
            $2380 = +HEAPF64[$2379>>3];
            $2381 = $x181;
            $2382 = $2380 * $2381;
            $2383 = $2378 + $2382;
            $2384 = (($4) + 288|0);
            HEAPF64[$2384>>3] = $2383;
            $2385 = (($4) + 248|0);
            $2386 = +HEAPF64[$2385>>3];
            $2387 = (($4) + 16|0);
            $2388 = +HEAPF64[$2387>>3];
            $2389 = $2386 * $2388;
            $2390 = (($4) + 320|0);
            $2391 = +HEAPF64[$2390>>3];
            $2392 = -1.0 * $2391;
            $2393 = $x174;
            $2394 = $2392 * $2393;
            $2395 = $2389 + $2394;
            $2396 = (($4) + 312|0);
            HEAPF64[$2396>>3] = $2395;
            $2397 = (($4) + 344|0);
            $2398 = +HEAPF64[$2397>>3];
            $2399 = -1.0 * $2398;
            $2400 = $x174;
            $2401 = $2399 * $2400;
            $2402 = (($4) + 272|0);
            $2403 = +HEAPF64[$2402>>3];
            $2404 = (($4) + 16|0);
            $2405 = +HEAPF64[$2404>>3];
            $2406 = $2403 * $2405;
            $2407 = $2401 + $2406;
            $2408 = (($4) + 336|0);
            HEAPF64[$2408>>3] = $2407;
            $2409 = (($4) + 296|0);
            $2410 = +HEAPF64[$2409>>3];
            $2411 = (($4) + 16|0);
            $2412 = +HEAPF64[$2411>>3];
            $2413 = $2410 * $2412;
            $2414 = (($4) + 368|0);
            $2415 = +HEAPF64[$2414>>3];
            $2416 = -1.0 * $2415;
            $2417 = $x174;
            $2418 = $2416 * $2417;
            $2419 = $2413 + $2418;
            $2420 = (($4) + 360|0);
            HEAPF64[$2420>>3] = $2419;
            $2421 = $x176;
            $2422 = $x181;
            $2423 = $2421 * $2422;
            $2424 = (($4) + 248|0);
            $2425 = +HEAPF64[$2424>>3];
            $2426 = $x184;
            $2427 = $2425 * $2426;
            $2428 = $2423 + $2427;
            $2429 = (($4) + 392|0);
            $2430 = +HEAPF64[$2429>>3];
            $2431 = $x185;
            $2432 = $2430 * $2431;
            $2433 = $2428 + $2432;
            $2434 = (($4) + 384|0);
            HEAPF64[$2434>>3] = $2433;
            $2435 = (($4) + 272|0);
            $2436 = +HEAPF64[$2435>>3];
            $2437 = $x184;
            $2438 = $2436 * $2437;
            $2439 = $x175;
            $2440 = $x181;
            $2441 = $2439 * $2440;
            $2442 = $2438 + $2441;
            $2443 = (($4) + 416|0);
            $2444 = +HEAPF64[$2443>>3];
            $2445 = $x185;
            $2446 = $2444 * $2445;
            $2447 = $2442 + $2446;
            $2448 = (($4) + 408|0);
            HEAPF64[$2448>>3] = $2447;
            $2449 = $x179;
            $2450 = $x181;
            $2451 = $2449 * $2450;
            $2452 = (($4) + 296|0);
            $2453 = +HEAPF64[$2452>>3];
            $2454 = $x184;
            $2455 = $2453 * $2454;
            $2456 = $2451 + $2455;
            $2457 = (($4) + 440|0);
            $2458 = +HEAPF64[$2457>>3];
            $2459 = $x185;
            $2460 = $2458 * $2459;
            $2461 = $2456 + $2460;
            $2462 = (($4) + 432|0);
            HEAPF64[$2462>>3] = $2461;
            $2463 = (($4) + 176|0);
            $2464 = +HEAPF64[$2463>>3];
            HEAPF64[$j5eval>>3] = $2464;
            $2465 = (($4) + 176|0);
            $2466 = +HEAPF64[$2465>>3];
            $2467 = (+__Z6IKsignd($2466));
            $2468 = (($j5eval) + 8|0);
            HEAPF64[$2468>>3] = $2467;
            $2469 = +HEAPF64[$j5eval>>3];
            $2470 = (+__Z5IKabsd($2469));
            $2471 = $2470 < 9.9999999999999995E-7;
            do {
             if ($2471) {
              label = 283;
             } else {
              $2472 = (($j5eval) + 8|0);
              $2473 = +HEAPF64[$2472>>3];
              $2474 = (+__Z5IKabsd($2473));
              $2475 = $2474 < 9.9999999999999995E-7;
              if ($2475) {
               label = 283;
               break;
              }
              ;HEAP8[$j5valid134+0>>0]=0|0;
              $8544 = (($4) + 553|0);
              HEAP8[$8544>>0] = 1;
              $8545 = (($4) + 176|0);
              $8546 = +HEAPF64[$8545>>3];
              $8547 = (+__Z6IKsignd($8546));
              __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x308,$8547,-1);
              $8548 = (($x308) + 8|0);
              $8549 = HEAP8[$8548>>0]|0;
              $8550 = $8549&1;
              if (!($8550)) {
               break L1376;
              }
              $8551 = (($4) + 408|0);
              $8552 = +HEAPF64[$8551>>3];
              $8553 = (($4) + 384|0);
              $8554 = +HEAPF64[$8553>>3];
              $8555 = -1.0 * $8554;
              __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x309,$8552,$8555,1.9999999999999999E-6);
              $8556 = (($x309) + 8|0);
              $8557 = HEAP8[$8556>>0]|0;
              $8558 = $8557&1;
              if (!($8558)) {
               break L1376;
              }
              $8559 = +HEAPF64[$x308>>3];
              $8560 = 1.5707963267949001 * $8559;
              $8561 = -1.5707963267949001 + $8560;
              $8562 = +HEAPF64[$x309>>3];
              $8563 = $8561 + $8562;
              HEAPF64[$j5array131>>3] = $8563;
              $8564 = +HEAPF64[$j5array131>>3];
              $8565 = (+__Z5IKsind($8564));
              HEAPF64[$sj5array133>>3] = $8565;
              $8566 = +HEAPF64[$j5array131>>3];
              $8567 = (+__Z5IKcosd($8566));
              HEAPF64[$cj5array132>>3] = $8567;
              $8568 = +HEAPF64[$j5array131>>3];
              $8569 = $8568 > 3.14159265358979;
              if ($8569) {
               $8570 = +HEAPF64[$j5array131>>3];
               $8571 = $8570 - 6.2831853071795898;
               HEAPF64[$j5array131>>3] = $8571;
              } else {
               $8572 = +HEAPF64[$j5array131>>3];
               $8573 = $8572 < -3.14159265358979;
               if ($8573) {
                $8574 = +HEAPF64[$j5array131>>3];
                $8575 = $8574 + 6.2831853071795898;
                HEAPF64[$j5array131>>3] = $8575;
               }
              }
              HEAP8[$j5valid134>>0] = 1;
              $ij5135 = 0;
              while(1) {
               $8576 = $ij5135;
               $8577 = ($8576|0)<(1);
               if (!($8577)) {
                break;
               }
               $8578 = $ij5135;
               $8579 = (($j5valid134) + ($8578)|0);
               $8580 = HEAP8[$8579>>0]|0;
               $8581 = $8580&1;
               L1418: do {
                if ($8581) {
                 $8582 = $ij5135;
                 $8583 = $8582&255;
                 $8584 = (($4) + 551|0);
                 HEAP8[$8584>>0] = $8583;
                 $8585 = (($4) + 551|0);
                 $8586 = (($8585) + 1|0);
                 HEAP8[$8586>>0] = -1;
                 $8587 = $ij5135;
                 $8588 = (($8587) + 1)|0;
                 $iij5136 = $8588;
                 L1421: while(1) {
                  $8589 = $iij5136;
                  $8590 = ($8589|0)<(1);
                  if (!($8590)) {
                   break;
                  }
                  $8591 = $iij5136;
                  $8592 = (($j5valid134) + ($8591)|0);
                  $8593 = HEAP8[$8592>>0]|0;
                  $8594 = $8593&1;
                  do {
                   if ($8594) {
                    $8595 = $ij5135;
                    $8596 = (($cj5array132) + ($8595<<3)|0);
                    $8597 = +HEAPF64[$8596>>3];
                    $8598 = $iij5136;
                    $8599 = (($cj5array132) + ($8598<<3)|0);
                    $8600 = +HEAPF64[$8599>>3];
                    $8601 = $8597 - $8600;
                    $8602 = (+__Z5IKabsd($8601));
                    $8603 = $8602 < 9.9999999999999995E-7;
                    if (!($8603)) {
                     break;
                    }
                    $8604 = $ij5135;
                    $8605 = (($sj5array133) + ($8604<<3)|0);
                    $8606 = +HEAPF64[$8605>>3];
                    $8607 = $iij5136;
                    $8608 = (($sj5array133) + ($8607<<3)|0);
                    $8609 = +HEAPF64[$8608>>3];
                    $8610 = $8606 - $8609;
                    $8611 = (+__Z5IKabsd($8610));
                    $8612 = $8611 < 9.9999999999999995E-7;
                    if ($8612) {
                     label = 1157;
                     break L1421;
                    }
                   }
                  } while(0);
                  $8619 = $iij5136;
                  $8620 = (($8619) + 1)|0;
                  $iij5136 = $8620;
                 }
                 if ((label|0) == 1157) {
                  label = 0;
                  $8613 = $iij5136;
                  $8614 = (($j5valid134) + ($8613)|0);
                  HEAP8[$8614>>0] = 0;
                  $8615 = $iij5136;
                  $8616 = $8615&255;
                  $8617 = (($4) + 551|0);
                  $8618 = (($8617) + 1|0);
                  HEAP8[$8618>>0] = $8616;
                 }
                 $8621 = $ij5135;
                 $8622 = (($j5array131) + ($8621<<3)|0);
                 $8623 = +HEAPF64[$8622>>3];
                 $8624 = (($4) + 200|0);
                 HEAPF64[$8624>>3] = $8623;
                 $8625 = $ij5135;
                 $8626 = (($cj5array132) + ($8625<<3)|0);
                 $8627 = +HEAPF64[$8626>>3];
                 $8628 = (($4) + 208|0);
                 HEAPF64[$8628>>3] = $8627;
                 $8629 = $ij5135;
                 $8630 = (($sj5array133) + ($8629<<3)|0);
                 $8631 = +HEAPF64[$8630>>3];
                 $8632 = (($4) + 216|0);
                 HEAPF64[$8632>>3] = $8631;
                 $8633 = (($4) + 200|0);
                 $8634 = +HEAPF64[$8633>>3];
                 $8635 = (+__Z5IKsind($8634));
                 $x310 = $8635;
                 $8636 = (($4) + 200|0);
                 $8637 = +HEAPF64[$8636>>3];
                 $8638 = (+__Z5IKcosd($8637));
                 $x311 = $8638;
                 $8639 = (($4) + 128|0);
                 $8640 = +HEAPF64[$8639>>3];
                 $8641 = (($4) + 240|0);
                 $8642 = +HEAPF64[$8641>>3];
                 $8643 = $8640 * $8642;
                 $x312 = $8643;
                 $8644 = (($4) + 128|0);
                 $8645 = +HEAPF64[$8644>>3];
                 $8646 = (($4) + 168|0);
                 $8647 = +HEAPF64[$8646>>3];
                 $8648 = $8645 * $8647;
                 $x313 = $8648;
                 $8649 = (($4) + 136|0);
                 $8650 = +HEAPF64[$8649>>3];
                 $8651 = 1.0 * $8650;
                 $x314 = $8651;
                 $8652 = $x310;
                 $8653 = 1.0 * $8652;
                 $x315 = $8653;
                 $8654 = (($4) + 136|0);
                 $8655 = +HEAPF64[$8654>>3];
                 $8656 = $x310;
                 $8657 = $8655 * $8656;
                 $x316 = $8657;
                 $8658 = $x311;
                 $8659 = 1.0 * $8658;
                 $x317 = $8659;
                 $8660 = (($4) + 176|0);
                 $8661 = +HEAPF64[$8660>>3];
                 $8662 = $x311;
                 $8663 = $8661 * $8662;
                 $8664 = (($4) + 384|0);
                 $8665 = +HEAPF64[$8664>>3];
                 $8666 = $8663 + $8665;
                 HEAPF64[$evalcond137>>3] = $8666;
                 $8667 = (($4) + 176|0);
                 $8668 = +HEAPF64[$8667>>3];
                 $8669 = -1.0 * $8668;
                 $8670 = $x315;
                 $8671 = $8669 * $8670;
                 $8672 = (($4) + 408|0);
                 $8673 = +HEAPF64[$8672>>3];
                 $8674 = $8671 + $8673;
                 $8675 = (($evalcond137) + 8|0);
                 HEAPF64[$8675>>3] = $8674;
                 $8676 = (($4) + 168|0);
                 $8677 = +HEAPF64[$8676>>3];
                 $8678 = $x310;
                 $8679 = $8677 * $8678;
                 $8680 = (($4) + 336|0);
                 $8681 = +HEAPF64[$8680>>3];
                 $8682 = (($4) + 136|0);
                 $8683 = +HEAPF64[$8682>>3];
                 $8684 = $8681 * $8683;
                 $8685 = $8679 + $8684;
                 $8686 = (($4) + 128|0);
                 $8687 = +HEAPF64[$8686>>3];
                 $8688 = (($4) + 264|0);
                 $8689 = +HEAPF64[$8688>>3];
                 $8690 = $8687 * $8689;
                 $8691 = $8685 + $8690;
                 $8692 = (($evalcond137) + 16|0);
                 HEAPF64[$8692>>3] = $8691;
                 $8693 = (($4) + 240|0);
                 $8694 = +HEAPF64[$8693>>3];
                 $8695 = -1.0 * $8694;
                 $8696 = $x314;
                 $8697 = $8695 * $8696;
                 $8698 = $x315;
                 $8699 = -1.0 * $8698;
                 $8700 = $8697 + $8699;
                 $8701 = (($4) + 128|0);
                 $8702 = +HEAPF64[$8701>>3];
                 $8703 = (($4) + 312|0);
                 $8704 = +HEAPF64[$8703>>3];
                 $8705 = $8702 * $8704;
                 $8706 = $8700 + $8705;
                 $8707 = (($evalcond137) + 24|0);
                 HEAPF64[$8707>>3] = $8706;
                 $8708 = $x317;
                 $8709 = -1.0 * $8708;
                 $8710 = (($4) + 128|0);
                 $8711 = +HEAPF64[$8710>>3];
                 $8712 = (($4) + 336|0);
                 $8713 = +HEAPF64[$8712>>3];
                 $8714 = $8711 * $8713;
                 $8715 = $8709 + $8714;
                 $8716 = (($4) + 264|0);
                 $8717 = +HEAPF64[$8716>>3];
                 $8718 = -1.0 * $8717;
                 $8719 = $x314;
                 $8720 = $8718 * $8719;
                 $8721 = $8715 + $8720;
                 $8722 = (($evalcond137) + 32|0);
                 HEAPF64[$8722>>3] = $8721;
                 $8723 = $x310;
                 $8724 = $x313;
                 $8725 = $8723 * $8724;
                 $8726 = (($4) + 264|0);
                 $8727 = +HEAPF64[$8726>>3];
                 $8728 = $8725 + $8727;
                 $8729 = (($4) + 136|0);
                 $8730 = +HEAPF64[$8729>>3];
                 $8731 = $x311;
                 $8732 = $8730 * $8731;
                 $8733 = $8728 + $8732;
                 $8734 = (($evalcond137) + 40|0);
                 HEAPF64[$8734>>3] = $8733;
                 $8735 = (($4) + 312|0);
                 $8736 = +HEAPF64[$8735>>3];
                 $8737 = (($4) + 136|0);
                 $8738 = +HEAPF64[$8737>>3];
                 $8739 = $8736 * $8738;
                 $8740 = (($4) + 168|0);
                 $8741 = +HEAPF64[$8740>>3];
                 $8742 = -1.0 * $8741;
                 $8743 = $x317;
                 $8744 = $8742 * $8743;
                 $8745 = $8739 + $8744;
                 $8746 = $x312;
                 $8747 = $8745 + $8746;
                 $8748 = (($evalcond137) + 48|0);
                 HEAPF64[$8748>>3] = $8747;
                 $8749 = $x313;
                 $8750 = -1.0 * $8749;
                 $8751 = $x317;
                 $8752 = $8750 * $8751;
                 $8753 = $x316;
                 $8754 = $8752 + $8753;
                 $8755 = (($4) + 240|0);
                 $8756 = +HEAPF64[$8755>>3];
                 $8757 = $8754 + $8756;
                 $8758 = (($evalcond137) + 56|0);
                 HEAPF64[$8758>>3] = $8757;
                 $8759 = (($4) + 168|0);
                 $8760 = +HEAPF64[$8759>>3];
                 $8761 = $x316;
                 $8762 = $8760 * $8761;
                 $8763 = (($4) + 336|0);
                 $8764 = +HEAPF64[$8763>>3];
                 $8765 = $8762 + $8764;
                 $8766 = (($4) + 128|0);
                 $8767 = +HEAPF64[$8766>>3];
                 $8768 = -1.0 * $8767;
                 $8769 = $x317;
                 $8770 = $8768 * $8769;
                 $8771 = $8765 + $8770;
                 $8772 = (($evalcond137) + 64|0);
                 HEAPF64[$8772>>3] = $8771;
                 $8773 = (($4) + 168|0);
                 $8774 = +HEAPF64[$8773>>3];
                 $8775 = -1.0 * $8774;
                 $8776 = $x311;
                 $8777 = $8775 * $8776;
                 $8778 = $x314;
                 $8779 = $8777 * $8778;
                 $8780 = (($4) + 312|0);
                 $8781 = +HEAPF64[$8780>>3];
                 $8782 = $8779 + $8781;
                 $8783 = (($4) + 128|0);
                 $8784 = +HEAPF64[$8783>>3];
                 $8785 = -1.0 * $8784;
                 $8786 = $x315;
                 $8787 = $8785 * $8786;
                 $8788 = $8782 + $8787;
                 $8789 = (($evalcond137) + 72|0);
                 HEAPF64[$8789>>3] = $8788;
                 $8790 = (($4) + 168|0);
                 $8791 = +HEAPF64[$8790>>3];
                 $8792 = -1.0 * $8791;
                 $8793 = (($4) + 312|0);
                 $8794 = +HEAPF64[$8793>>3];
                 $8795 = $8792 * $8794;
                 $8796 = $x314;
                 $8797 = $8795 * $8796;
                 $8798 = (($4) + 384|0);
                 $8799 = +HEAPF64[$8798>>3];
                 $8800 = (($4) + 176|0);
                 $8801 = +HEAPF64[$8800>>3];
                 $8802 = $8799 * $8801;
                 $8803 = $8797 + $8802;
                 $8804 = $x311;
                 $8805 = $8803 + $8804;
                 $8806 = (($4) + 168|0);
                 $8807 = +HEAPF64[$8806>>3];
                 $8808 = -1.0 * $8807;
                 $8809 = $x312;
                 $8810 = $8808 * $8809;
                 $8811 = $8805 + $8810;
                 $8812 = (($evalcond137) + 80|0);
                 HEAPF64[$8812>>3] = $8811;
                 $8813 = (($4) + 264|0);
                 $8814 = +HEAPF64[$8813>>3];
                 $8815 = -1.0 * $8814;
                 $8816 = $x313;
                 $8817 = $8815 * $8816;
                 $8818 = (($4) + 168|0);
                 $8819 = +HEAPF64[$8818>>3];
                 $8820 = -1.0 * $8819;
                 $8821 = (($4) + 336|0);
                 $8822 = +HEAPF64[$8821>>3];
                 $8823 = $8820 * $8822;
                 $8824 = $x314;
                 $8825 = $8823 * $8824;
                 $8826 = $8817 + $8825;
                 $8827 = $x315;
                 $8828 = -1.0 * $8827;
                 $8829 = $8826 + $8828;
                 $8830 = (($4) + 408|0);
                 $8831 = +HEAPF64[$8830>>3];
                 $8832 = (($4) + 176|0);
                 $8833 = +HEAPF64[$8832>>3];
                 $8834 = $8831 * $8833;
                 $8835 = $8829 + $8834;
                 $8836 = (($evalcond137) + 88|0);
                 HEAPF64[$8836>>3] = $8835;
                 $8837 = +HEAPF64[$evalcond137>>3];
                 $8838 = (+__Z5IKabsd($8837));
                 $8839 = $8838 > 5.0000000000000004E-6;
                 do {
                  if (!($8839)) {
                   $8840 = (($evalcond137) + 8|0);
                   $8841 = +HEAPF64[$8840>>3];
                   $8842 = (+__Z5IKabsd($8841));
                   $8843 = $8842 > 5.0000000000000004E-6;
                   if ($8843) {
                    break;
                   }
                   $8844 = (($evalcond137) + 16|0);
                   $8845 = +HEAPF64[$8844>>3];
                   $8846 = (+__Z5IKabsd($8845));
                   $8847 = $8846 > 5.0000000000000004E-6;
                   if ($8847) {
                    break;
                   }
                   $8848 = (($evalcond137) + 24|0);
                   $8849 = +HEAPF64[$8848>>3];
                   $8850 = (+__Z5IKabsd($8849));
                   $8851 = $8850 > 5.0000000000000004E-6;
                   if ($8851) {
                    break;
                   }
                   $8852 = (($evalcond137) + 32|0);
                   $8853 = +HEAPF64[$8852>>3];
                   $8854 = (+__Z5IKabsd($8853));
                   $8855 = $8854 > 5.0000000000000004E-6;
                   if ($8855) {
                    break;
                   }
                   $8856 = (($evalcond137) + 40|0);
                   $8857 = +HEAPF64[$8856>>3];
                   $8858 = (+__Z5IKabsd($8857));
                   $8859 = $8858 > 5.0000000000000004E-6;
                   if ($8859) {
                    break;
                   }
                   $8860 = (($evalcond137) + 48|0);
                   $8861 = +HEAPF64[$8860>>3];
                   $8862 = (+__Z5IKabsd($8861));
                   $8863 = $8862 > 5.0000000000000004E-6;
                   if ($8863) {
                    break;
                   }
                   $8864 = (($evalcond137) + 56|0);
                   $8865 = +HEAPF64[$8864>>3];
                   $8866 = (+__Z5IKabsd($8865));
                   $8867 = $8866 > 5.0000000000000004E-6;
                   if ($8867) {
                    break;
                   }
                   $8868 = (($evalcond137) + 64|0);
                   $8869 = +HEAPF64[$8868>>3];
                   $8870 = (+__Z5IKabsd($8869));
                   $8871 = $8870 > 5.0000000000000004E-6;
                   if ($8871) {
                    break;
                   }
                   $8872 = (($evalcond137) + 72|0);
                   $8873 = +HEAPF64[$8872>>3];
                   $8874 = (+__Z5IKabsd($8873));
                   $8875 = $8874 > 5.0000000000000004E-6;
                   if ($8875) {
                    break;
                   }
                   $8876 = (($evalcond137) + 80|0);
                   $8877 = +HEAPF64[$8876>>3];
                   $8878 = (+__Z5IKabsd($8877));
                   $8879 = $8878 > 5.0000000000000004E-6;
                   if ($8879) {
                    break;
                   }
                   $8880 = (($evalcond137) + 88|0);
                   $8881 = +HEAPF64[$8880>>3];
                   $8882 = (+__Z5IKabsd($8881));
                   $8883 = $8882 > 5.0000000000000004E-6;
                   if ($8883) {
                    break;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos138,6);
                   __THREW__ = 0;
                   $8884 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8885 = __THREW__; __THREW__ = 0;
                   $8886 = $8885&1;
                   if ($8886) {
                    label = 1208;
                    break L1;
                   }
                   $8887 = (($8884) + 17|0);
                   HEAP8[$8887>>0] = 1;
                   $8888 = +HEAPF64[$4>>3];
                   __THREW__ = 0;
                   $8889 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8890 = __THREW__; __THREW__ = 0;
                   $8891 = $8890&1;
                   if ($8891) {
                    label = 1208;
                    break L1;
                   }
                   $8892 = (($8889) + 8|0);
                   HEAPF64[$8892>>3] = $8888;
                   $8893 = (($4) + 536|0);
                   $8894 = HEAP8[$8893>>0]|0;
                   __THREW__ = 0;
                   $8895 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8896 = __THREW__; __THREW__ = 0;
                   $8897 = $8896&1;
                   if ($8897) {
                    label = 1208;
                    break L1;
                   }
                   $8898 = (($8895) + 19|0);
                   HEAP8[$8898>>0] = $8894;
                   $8899 = (($4) + 536|0);
                   $8900 = (($8899) + 1|0);
                   $8901 = HEAP8[$8900>>0]|0;
                   __THREW__ = 0;
                   $8902 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8903 = __THREW__; __THREW__ = 0;
                   $8904 = $8903&1;
                   if ($8904) {
                    label = 1208;
                    break L1;
                   }
                   $8905 = (($8902) + 19|0);
                   $8906 = (($8905) + 1|0);
                   HEAP8[$8906>>0] = $8901;
                   $8907 = (($4) + 538|0);
                   $8908 = HEAP8[$8907>>0]|0;
                   __THREW__ = 0;
                   $8909 = (invoke_iii(381,($vinfos138|0),0)|0);
                   $8910 = __THREW__; __THREW__ = 0;
                   $8911 = $8910&1;
                   if ($8911) {
                    label = 1208;
                    break L1;
                   }
                   $8912 = (($8909) + 18|0);
                   HEAP8[$8912>>0] = $8908;
                   __THREW__ = 0;
                   $8913 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8914 = __THREW__; __THREW__ = 0;
                   $8915 = $8914&1;
                   if ($8915) {
                    label = 1208;
                    break L1;
                   }
                   $8916 = (($8913) + 17|0);
                   HEAP8[$8916>>0] = 1;
                   $8917 = (($4) + 40|0);
                   $8918 = +HEAPF64[$8917>>3];
                   __THREW__ = 0;
                   $8919 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8920 = __THREW__; __THREW__ = 0;
                   $8921 = $8920&1;
                   if ($8921) {
                    label = 1208;
                    break L1;
                   }
                   $8922 = (($8919) + 8|0);
                   HEAPF64[$8922>>3] = $8918;
                   $8923 = (($4) + 539|0);
                   $8924 = HEAP8[$8923>>0]|0;
                   __THREW__ = 0;
                   $8925 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8926 = __THREW__; __THREW__ = 0;
                   $8927 = $8926&1;
                   if ($8927) {
                    label = 1208;
                    break L1;
                   }
                   $8928 = (($8925) + 19|0);
                   HEAP8[$8928>>0] = $8924;
                   $8929 = (($4) + 539|0);
                   $8930 = (($8929) + 1|0);
                   $8931 = HEAP8[$8930>>0]|0;
                   __THREW__ = 0;
                   $8932 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8933 = __THREW__; __THREW__ = 0;
                   $8934 = $8933&1;
                   if ($8934) {
                    label = 1208;
                    break L1;
                   }
                   $8935 = (($8932) + 19|0);
                   $8936 = (($8935) + 1|0);
                   HEAP8[$8936>>0] = $8931;
                   $8937 = (($4) + 541|0);
                   $8938 = HEAP8[$8937>>0]|0;
                   __THREW__ = 0;
                   $8939 = (invoke_iii(381,($vinfos138|0),1)|0);
                   $8940 = __THREW__; __THREW__ = 0;
                   $8941 = $8940&1;
                   if ($8941) {
                    label = 1208;
                    break L1;
                   }
                   $8942 = (($8939) + 18|0);
                   HEAP8[$8942>>0] = $8938;
                   __THREW__ = 0;
                   $8943 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8944 = __THREW__; __THREW__ = 0;
                   $8945 = $8944&1;
                   if ($8945) {
                    label = 1208;
                    break L1;
                   }
                   $8946 = (($8943) + 17|0);
                   HEAP8[$8946>>0] = 1;
                   $8947 = (($4) + 80|0);
                   $8948 = +HEAPF64[$8947>>3];
                   __THREW__ = 0;
                   $8949 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8950 = __THREW__; __THREW__ = 0;
                   $8951 = $8950&1;
                   if ($8951) {
                    label = 1208;
                    break L1;
                   }
                   $8952 = (($8949) + 8|0);
                   HEAPF64[$8952>>3] = $8948;
                   $8953 = (($4) + 542|0);
                   $8954 = HEAP8[$8953>>0]|0;
                   __THREW__ = 0;
                   $8955 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8956 = __THREW__; __THREW__ = 0;
                   $8957 = $8956&1;
                   if ($8957) {
                    label = 1208;
                    break L1;
                   }
                   $8958 = (($8955) + 19|0);
                   HEAP8[$8958>>0] = $8954;
                   $8959 = (($4) + 542|0);
                   $8960 = (($8959) + 1|0);
                   $8961 = HEAP8[$8960>>0]|0;
                   __THREW__ = 0;
                   $8962 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8963 = __THREW__; __THREW__ = 0;
                   $8964 = $8963&1;
                   if ($8964) {
                    label = 1208;
                    break L1;
                   }
                   $8965 = (($8962) + 19|0);
                   $8966 = (($8965) + 1|0);
                   HEAP8[$8966>>0] = $8961;
                   $8967 = (($4) + 544|0);
                   $8968 = HEAP8[$8967>>0]|0;
                   __THREW__ = 0;
                   $8969 = (invoke_iii(381,($vinfos138|0),2)|0);
                   $8970 = __THREW__; __THREW__ = 0;
                   $8971 = $8970&1;
                   if ($8971) {
                    label = 1208;
                    break L1;
                   }
                   $8972 = (($8969) + 18|0);
                   HEAP8[$8972>>0] = $8968;
                   __THREW__ = 0;
                   $8973 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8974 = __THREW__; __THREW__ = 0;
                   $8975 = $8974&1;
                   if ($8975) {
                    label = 1208;
                    break L1;
                   }
                   $8976 = (($8973) + 17|0);
                   HEAP8[$8976>>0] = 1;
                   $8977 = (($4) + 120|0);
                   $8978 = +HEAPF64[$8977>>3];
                   __THREW__ = 0;
                   $8979 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8980 = __THREW__; __THREW__ = 0;
                   $8981 = $8980&1;
                   if ($8981) {
                    label = 1208;
                    break L1;
                   }
                   $8982 = (($8979) + 8|0);
                   HEAPF64[$8982>>3] = $8978;
                   $8983 = (($4) + 545|0);
                   $8984 = HEAP8[$8983>>0]|0;
                   __THREW__ = 0;
                   $8985 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8986 = __THREW__; __THREW__ = 0;
                   $8987 = $8986&1;
                   if ($8987) {
                    label = 1208;
                    break L1;
                   }
                   $8988 = (($8985) + 19|0);
                   HEAP8[$8988>>0] = $8984;
                   $8989 = (($4) + 545|0);
                   $8990 = (($8989) + 1|0);
                   $8991 = HEAP8[$8990>>0]|0;
                   __THREW__ = 0;
                   $8992 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $8993 = __THREW__; __THREW__ = 0;
                   $8994 = $8993&1;
                   if ($8994) {
                    label = 1208;
                    break L1;
                   }
                   $8995 = (($8992) + 19|0);
                   $8996 = (($8995) + 1|0);
                   HEAP8[$8996>>0] = $8991;
                   $8997 = (($4) + 547|0);
                   $8998 = HEAP8[$8997>>0]|0;
                   __THREW__ = 0;
                   $8999 = (invoke_iii(381,($vinfos138|0),3)|0);
                   $9000 = __THREW__; __THREW__ = 0;
                   $9001 = $9000&1;
                   if ($9001) {
                    label = 1208;
                    break L1;
                   }
                   $9002 = (($8999) + 18|0);
                   HEAP8[$9002>>0] = $8998;
                   __THREW__ = 0;
                   $9003 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9004 = __THREW__; __THREW__ = 0;
                   $9005 = $9004&1;
                   if ($9005) {
                    label = 1208;
                    break L1;
                   }
                   $9006 = (($9003) + 17|0);
                   HEAP8[$9006>>0] = 1;
                   $9007 = (($4) + 160|0);
                   $9008 = +HEAPF64[$9007>>3];
                   __THREW__ = 0;
                   $9009 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9010 = __THREW__; __THREW__ = 0;
                   $9011 = $9010&1;
                   if ($9011) {
                    label = 1208;
                    break L1;
                   }
                   $9012 = (($9009) + 8|0);
                   HEAPF64[$9012>>3] = $9008;
                   $9013 = (($4) + 548|0);
                   $9014 = HEAP8[$9013>>0]|0;
                   __THREW__ = 0;
                   $9015 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9016 = __THREW__; __THREW__ = 0;
                   $9017 = $9016&1;
                   if ($9017) {
                    label = 1208;
                    break L1;
                   }
                   $9018 = (($9015) + 19|0);
                   HEAP8[$9018>>0] = $9014;
                   $9019 = (($4) + 548|0);
                   $9020 = (($9019) + 1|0);
                   $9021 = HEAP8[$9020>>0]|0;
                   __THREW__ = 0;
                   $9022 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9023 = __THREW__; __THREW__ = 0;
                   $9024 = $9023&1;
                   if ($9024) {
                    label = 1208;
                    break L1;
                   }
                   $9025 = (($9022) + 19|0);
                   $9026 = (($9025) + 1|0);
                   HEAP8[$9026>>0] = $9021;
                   $9027 = (($4) + 550|0);
                   $9028 = HEAP8[$9027>>0]|0;
                   __THREW__ = 0;
                   $9029 = (invoke_iii(381,($vinfos138|0),4)|0);
                   $9030 = __THREW__; __THREW__ = 0;
                   $9031 = $9030&1;
                   if ($9031) {
                    label = 1208;
                    break L1;
                   }
                   $9032 = (($9029) + 18|0);
                   HEAP8[$9032>>0] = $9028;
                   __THREW__ = 0;
                   $9033 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9034 = __THREW__; __THREW__ = 0;
                   $9035 = $9034&1;
                   if ($9035) {
                    label = 1208;
                    break L1;
                   }
                   $9036 = (($9033) + 17|0);
                   HEAP8[$9036>>0] = 1;
                   $9037 = (($4) + 200|0);
                   $9038 = +HEAPF64[$9037>>3];
                   __THREW__ = 0;
                   $9039 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9040 = __THREW__; __THREW__ = 0;
                   $9041 = $9040&1;
                   if ($9041) {
                    label = 1208;
                    break L1;
                   }
                   $9042 = (($9039) + 8|0);
                   HEAPF64[$9042>>3] = $9038;
                   $9043 = (($4) + 551|0);
                   $9044 = HEAP8[$9043>>0]|0;
                   __THREW__ = 0;
                   $9045 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9046 = __THREW__; __THREW__ = 0;
                   $9047 = $9046&1;
                   if ($9047) {
                    label = 1208;
                    break L1;
                   }
                   $9048 = (($9045) + 19|0);
                   HEAP8[$9048>>0] = $9044;
                   $9049 = (($4) + 551|0);
                   $9050 = (($9049) + 1|0);
                   $9051 = HEAP8[$9050>>0]|0;
                   __THREW__ = 0;
                   $9052 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9053 = __THREW__; __THREW__ = 0;
                   $9054 = $9053&1;
                   if ($9054) {
                    label = 1208;
                    break L1;
                   }
                   $9055 = (($9052) + 19|0);
                   $9056 = (($9055) + 1|0);
                   HEAP8[$9056>>0] = $9051;
                   $9057 = (($4) + 553|0);
                   $9058 = HEAP8[$9057>>0]|0;
                   __THREW__ = 0;
                   $9059 = (invoke_iii(381,($vinfos138|0),5)|0);
                   $9060 = __THREW__; __THREW__ = 0;
                   $9061 = $9060&1;
                   if ($9061) {
                    label = 1208;
                    break L1;
                   }
                   $9062 = (($9059) + 18|0);
                   HEAP8[$9062>>0] = $9058;
                   __THREW__ = 0;
                   invoke_vii(382,($vfree139|0),0);
                   $9063 = __THREW__; __THREW__ = 0;
                   $9064 = $9063&1;
                   if ($9064) {
                    label = 1208;
                    break L1;
                   }
                   $9065 = $1;
                   $9066 = HEAP32[$9065>>2]|0;
                   $9067 = (($9066) + 8|0);
                   $9068 = HEAP32[$9067>>2]|0;
                   __THREW__ = 0;
                   (invoke_iiii($9068|0,($9065|0),($vinfos138|0),($vfree139|0))|0);
                   $9069 = __THREW__; __THREW__ = 0;
                   $9070 = $9069&1;
                   if ($9070) {
                    label = 1209;
                    break L1;
                   }
                   __THREW__ = 0;
                   invoke_vi(366,($vfree139|0));
                   $9071 = __THREW__; __THREW__ = 0;
                   $9072 = $9071&1;
                   if ($9072) {
                    label = 1208;
                    break L1;
                   }
                   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos138);
                   break L1418;
                  }
                 } while(0);
                } else {
                }
               } while(0);
               $9073 = $ij5135;
               $9074 = (($9073) + 1)|0;
               $ij5135 = $9074;
              }
             }
            } while(0);
            if ((label|0) == 283) {
             label = 0;
             $2476 = (($4) + 8|0);
             $2477 = +HEAPF64[$2476>>3];
             $2478 = 1.0 * $2477;
             $x186 = $2478;
             $2479 = (($4) + 344|0);
             $2480 = +HEAPF64[$2479>>3];
             $2481 = (($4) + 16|0);
             $2482 = +HEAPF64[$2481>>3];
             $2483 = $2480 * $2482;
             $x187 = $2483;
             $2484 = (($4) + 320|0);
             $2485 = +HEAPF64[$2484>>3];
             $2486 = (($4) + 16|0);
             $2487 = +HEAPF64[$2486>>3];
             $2488 = $2485 * $2487;
             $x188 = $2488;
             $2489 = (($4) + 88|0);
             $2490 = +HEAPF64[$2489>>3];
             $2491 = 1.0 * $2490;
             $x189 = $2491;
             $2492 = (($4) + 48|0);
             $2493 = +HEAPF64[$2492>>3];
             $2494 = (($4) + 96|0);
             $2495 = +HEAPF64[$2494>>3];
             $2496 = $2493 * $2495;
             $x190 = $2496;
             $2497 = (($4) + 368|0);
             $2498 = +HEAPF64[$2497>>3];
             $2499 = (($4) + 16|0);
             $2500 = +HEAPF64[$2499>>3];
             $2501 = $2498 * $2500;
             $x191 = $2501;
             $2502 = (($4) + 88|0);
             $2503 = +HEAPF64[$2502>>3];
             $2504 = (($4) + 56|0);
             $2505 = +HEAPF64[$2504>>3];
             $2506 = $2503 * $2505;
             $2507 = $x190;
             $2508 = $2506 + $2507;
             $x192 = $2508;
             $2509 = $x116;
             $x193 = $2509;
             $2510 = (($4) + 16|0);
             $2511 = +HEAPF64[$2510>>3];
             $2512 = $x193;
             $2513 = $2511 * $2512;
             $x194 = $2513;
             $2514 = (($4) + 8|0);
             $2515 = +HEAPF64[$2514>>3];
             $2516 = $x192;
             $2517 = $2515 * $2516;
             $x195 = $2517;
             $2518 = (($4) + 8|0);
             $2519 = +HEAPF64[$2518>>3];
             $2520 = $x193;
             $2521 = $2519 * $2520;
             $x196 = $2521;
             $2522 = $x120;
             $x197 = $2522;
             $2523 = (($4) + 248|0);
             $2524 = +HEAPF64[$2523>>3];
             $2525 = $x195;
             $2526 = $2524 * $2525;
             $2527 = $x188;
             $2528 = $x192;
             $2529 = $2527 * $2528;
             $2530 = $2526 + $2529;
             $2531 = (($4) + 392|0);
             $2532 = +HEAPF64[$2531>>3];
             $2533 = $x193;
             $2534 = $2532 * $2533;
             $2535 = $2530 + $2534;
             $2536 = (($4) + 240|0);
             HEAPF64[$2536>>3] = $2535;
             $2537 = $x187;
             $2538 = $x192;
             $2539 = $2537 * $2538;
             $2540 = (($4) + 272|0);
             $2541 = +HEAPF64[$2540>>3];
             $2542 = $x195;
             $2543 = $2541 * $2542;
             $2544 = $2539 + $2543;
             $2545 = (($4) + 416|0);
             $2546 = +HEAPF64[$2545>>3];
             $2547 = $x193;
             $2548 = $2546 * $2547;
             $2549 = $2544 + $2548;
             $2550 = (($4) + 264|0);
             HEAPF64[$2550>>3] = $2549;
             $2551 = $x191;
             $2552 = $x192;
             $2553 = $2551 * $2552;
             $2554 = (($4) + 440|0);
             $2555 = +HEAPF64[$2554>>3];
             $2556 = $x193;
             $2557 = $2555 * $2556;
             $2558 = $2553 + $2557;
             $2559 = (($4) + 296|0);
             $2560 = +HEAPF64[$2559>>3];
             $2561 = $x195;
             $2562 = $2560 * $2561;
             $2563 = $2558 + $2562;
             $2564 = (($4) + 288|0);
             HEAPF64[$2564>>3] = $2563;
             $2565 = (($4) + 248|0);
             $2566 = +HEAPF64[$2565>>3];
             $2567 = (($4) + 16|0);
             $2568 = +HEAPF64[$2567>>3];
             $2569 = $2566 * $2568;
             $2570 = (($4) + 320|0);
             $2571 = +HEAPF64[$2570>>3];
             $2572 = -1.0 * $2571;
             $2573 = $x186;
             $2574 = $2572 * $2573;
             $2575 = $2569 + $2574;
             $2576 = (($4) + 312|0);
             HEAPF64[$2576>>3] = $2575;
             $2577 = (($4) + 344|0);
             $2578 = +HEAPF64[$2577>>3];
             $2579 = -1.0 * $2578;
             $2580 = $x186;
             $2581 = $2579 * $2580;
             $2582 = (($4) + 272|0);
             $2583 = +HEAPF64[$2582>>3];
             $2584 = (($4) + 16|0);
             $2585 = +HEAPF64[$2584>>3];
             $2586 = $2583 * $2585;
             $2587 = $2581 + $2586;
             $2588 = (($4) + 336|0);
             HEAPF64[$2588>>3] = $2587;
             $2589 = (($4) + 368|0);
             $2590 = +HEAPF64[$2589>>3];
             $2591 = -1.0 * $2590;
             $2592 = $x186;
             $2593 = $2591 * $2592;
             $2594 = (($4) + 296|0);
             $2595 = +HEAPF64[$2594>>3];
             $2596 = (($4) + 16|0);
             $2597 = +HEAPF64[$2596>>3];
             $2598 = $2595 * $2597;
             $2599 = $2593 + $2598;
             $2600 = (($4) + 360|0);
             HEAPF64[$2600>>3] = $2599;
             $2601 = (($4) + 248|0);
             $2602 = +HEAPF64[$2601>>3];
             $2603 = $x196;
             $2604 = $2602 * $2603;
             $2605 = $x188;
             $2606 = $x193;
             $2607 = $2605 * $2606;
             $2608 = $2604 + $2607;
             $2609 = (($4) + 392|0);
             $2610 = +HEAPF64[$2609>>3];
             $2611 = $x197;
             $2612 = $2610 * $2611;
             $2613 = $2608 + $2612;
             $2614 = (($4) + 384|0);
             HEAPF64[$2614>>3] = $2613;
             $2615 = $x187;
             $2616 = $x193;
             $2617 = $2615 * $2616;
             $2618 = (($4) + 272|0);
             $2619 = +HEAPF64[$2618>>3];
             $2620 = $x196;
             $2621 = $2619 * $2620;
             $2622 = $2617 + $2621;
             $2623 = (($4) + 416|0);
             $2624 = +HEAPF64[$2623>>3];
             $2625 = $x197;
             $2626 = $2624 * $2625;
             $2627 = $2622 + $2626;
             $2628 = (($4) + 408|0);
             HEAPF64[$2628>>3] = $2627;
             $2629 = $x191;
             $2630 = $x193;
             $2631 = $2629 * $2630;
             $2632 = (($4) + 440|0);
             $2633 = +HEAPF64[$2632>>3];
             $2634 = $x197;
             $2635 = $2633 * $2634;
             $2636 = $2631 + $2635;
             $2637 = (($4) + 296|0);
             $2638 = +HEAPF64[$2637>>3];
             $2639 = $x196;
             $2640 = $2638 * $2639;
             $2641 = $2636 + $2640;
             $2642 = (($4) + 432|0);
             HEAPF64[$2642>>3] = $2641;
             $2643 = (($4) + 136|0);
             $2644 = +HEAPF64[$2643>>3];
             HEAPF64[$j5eval29>>3] = $2644;
             $2645 = (($4) + 176|0);
             $2646 = +HEAPF64[$2645>>3];
             $2647 = (($j5eval29) + 8|0);
             HEAPF64[$2647>>3] = $2646;
             $2648 = +HEAPF64[$j5eval29>>3];
             $2649 = (+__Z5IKabsd($2648));
             $2650 = $2649 < 9.9999999999999995E-7;
             do {
              if ($2650) {
               label = 285;
              } else {
               $2651 = (($j5eval29) + 8|0);
               $2652 = +HEAPF64[$2651>>3];
               $2653 = (+__Z5IKabsd($2652));
               $2654 = $2653 < 9.9999999999999995E-7;
               if ($2654) {
                label = 285;
                break;
               }
               ;HEAP8[$j5valid125+0>>0]=0|0;
               $7927 = (($4) + 553|0);
               HEAP8[$7927>>0] = 1;
               $7928 = (($4) + 176|0);
               $7929 = +HEAPF64[$7928>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x298,$7929,-1);
               $7930 = (($x298) + 8|0);
               $7931 = HEAP8[$7930>>0]|0;
               $7932 = $7931&1;
               if (!($7932)) {
                break L1376;
               }
               $7933 = +HEAPF64[$x298>>3];
               $x297 = $7933;
               $7934 = (($4) + 136|0);
               $7935 = +HEAPF64[$7934>>3];
               __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x299,$7935,-1);
               $7936 = (($x299) + 8|0);
               $7937 = HEAP8[$7936>>0]|0;
               $7938 = $7937&1;
               if (!($7938)) {
                break L1376;
               }
               $7939 = $x297;
               $7940 = +HEAPF64[$x299>>3];
               $7941 = $7939 * $7940;
               $7942 = (($4) + 128|0);
               $7943 = +HEAPF64[$7942>>3];
               $7944 = -1.0 * $7943;
               $7945 = (($4) + 168|0);
               $7946 = +HEAPF64[$7945>>3];
               $7947 = $7944 * $7946;
               $7948 = (($4) + 384|0);
               $7949 = +HEAPF64[$7948>>3];
               $7950 = $7947 * $7949;
               $7951 = (($4) + 240|0);
               $7952 = +HEAPF64[$7951>>3];
               $7953 = -1.0 * $7952;
               $7954 = (($4) + 176|0);
               $7955 = +HEAPF64[$7954>>3];
               $7956 = $7953 * $7955;
               $7957 = $7950 + $7956;
               $7958 = $7941 * $7957;
               $7959 = (+__Z5IKabsd($7958));
               $7960 = $7959 < 1.9999999999999999E-6;
               do {
                if ($7960) {
                 $7961 = (($4) + 384|0);
                 $7962 = +HEAPF64[$7961>>3];
                 $7963 = -1.0 * $7962;
                 $7964 = $x297;
                 $7965 = $7963 * $7964;
                 $7966 = (+__Z5IKabsd($7965));
                 $7967 = $7966 < 1.9999999999999999E-6;
                 if (!($7967)) {
                  break;
                 }
                 $7968 = $x297;
                 $7969 = +HEAPF64[$x299>>3];
                 $7970 = $7968 * $7969;
                 $7971 = (($4) + 128|0);
                 $7972 = +HEAPF64[$7971>>3];
                 $7973 = -1.0 * $7972;
                 $7974 = (($4) + 168|0);
                 $7975 = +HEAPF64[$7974>>3];
                 $7976 = $7973 * $7975;
                 $7977 = (($4) + 384|0);
                 $7978 = +HEAPF64[$7977>>3];
                 $7979 = $7976 * $7978;
                 $7980 = (($4) + 240|0);
                 $7981 = +HEAPF64[$7980>>3];
                 $7982 = -1.0 * $7981;
                 $7983 = (($4) + 176|0);
                 $7984 = +HEAPF64[$7983>>3];
                 $7985 = $7982 * $7984;
                 $7986 = $7979 + $7985;
                 $7987 = $7970 * $7986;
                 $7988 = (+__Z5IKsqrd($7987));
                 $7989 = (($4) + 384|0);
                 $7990 = +HEAPF64[$7989>>3];
                 $7991 = -1.0 * $7990;
                 $7992 = $x297;
                 $7993 = $7991 * $7992;
                 $7994 = (+__Z5IKsqrd($7993));
                 $7995 = $7988 + $7994;
                 $7996 = $7995 - 1.0;
                 $7997 = (+__Z5IKabsd($7996));
                 $7998 = $7997 <= 1.9999999999999999E-6;
                 if (!($7998)) {
                  break;
                 }
                 break L1376;
                }
               } while(0);
               $7999 = $x297;
               $8000 = +HEAPF64[$x299>>3];
               $8001 = $7999 * $8000;
               $8002 = (($4) + 128|0);
               $8003 = +HEAPF64[$8002>>3];
               $8004 = -1.0 * $8003;
               $8005 = (($4) + 168|0);
               $8006 = +HEAPF64[$8005>>3];
               $8007 = $8004 * $8006;
               $8008 = (($4) + 384|0);
               $8009 = +HEAPF64[$8008>>3];
               $8010 = $8007 * $8009;
               $8011 = (($4) + 240|0);
               $8012 = +HEAPF64[$8011>>3];
               $8013 = -1.0 * $8012;
               $8014 = (($4) + 176|0);
               $8015 = +HEAPF64[$8014>>3];
               $8016 = $8013 * $8015;
               $8017 = $8010 + $8016;
               $8018 = $8001 * $8017;
               $8019 = (($4) + 384|0);
               $8020 = +HEAPF64[$8019>>3];
               $8021 = -1.0 * $8020;
               $8022 = $x297;
               $8023 = $8021 * $8022;
               $8024 = (+__Z7IKatan2dd($8018,$8023));
               HEAPF64[$j5array122>>3] = $8024;
               $8025 = +HEAPF64[$j5array122>>3];
               $8026 = (+__Z5IKsind($8025));
               HEAPF64[$sj5array124>>3] = $8026;
               $8027 = +HEAPF64[$j5array122>>3];
               $8028 = (+__Z5IKcosd($8027));
               HEAPF64[$cj5array123>>3] = $8028;
               $8029 = +HEAPF64[$j5array122>>3];
               $8030 = $8029 > 3.14159265358979;
               if ($8030) {
                $8031 = +HEAPF64[$j5array122>>3];
                $8032 = $8031 - 6.2831853071795898;
                HEAPF64[$j5array122>>3] = $8032;
               } else {
                $8033 = +HEAPF64[$j5array122>>3];
                $8034 = $8033 < -3.14159265358979;
                if ($8034) {
                 $8035 = +HEAPF64[$j5array122>>3];
                 $8036 = $8035 + 6.2831853071795898;
                 HEAPF64[$j5array122>>3] = $8036;
                }
               }
               HEAP8[$j5valid125>>0] = 1;
               $ij5126 = 0;
               while(1) {
                $8037 = $ij5126;
                $8038 = ($8037|0)<(1);
                if (!($8038)) {
                 break;
                }
                $8039 = $ij5126;
                $8040 = (($j5valid125) + ($8039)|0);
                $8041 = HEAP8[$8040>>0]|0;
                $8042 = $8041&1;
                L1507: do {
                 if ($8042) {
                  $8043 = $ij5126;
                  $8044 = $8043&255;
                  $8045 = (($4) + 551|0);
                  HEAP8[$8045>>0] = $8044;
                  $8046 = (($4) + 551|0);
                  $8047 = (($8046) + 1|0);
                  HEAP8[$8047>>0] = -1;
                  $8048 = $ij5126;
                  $8049 = (($8048) + 1)|0;
                  $iij5127 = $8049;
                  L1510: while(1) {
                   $8050 = $iij5127;
                   $8051 = ($8050|0)<(1);
                   if (!($8051)) {
                    break;
                   }
                   $8052 = $iij5127;
                   $8053 = (($j5valid125) + ($8052)|0);
                   $8054 = HEAP8[$8053>>0]|0;
                   $8055 = $8054&1;
                   do {
                    if ($8055) {
                     $8056 = $ij5126;
                     $8057 = (($cj5array123) + ($8056<<3)|0);
                     $8058 = +HEAPF64[$8057>>3];
                     $8059 = $iij5127;
                     $8060 = (($cj5array123) + ($8059<<3)|0);
                     $8061 = +HEAPF64[$8060>>3];
                     $8062 = $8058 - $8061;
                     $8063 = (+__Z5IKabsd($8062));
                     $8064 = $8063 < 9.9999999999999995E-7;
                     if (!($8064)) {
                      break;
                     }
                     $8065 = $ij5126;
                     $8066 = (($sj5array124) + ($8065<<3)|0);
                     $8067 = +HEAPF64[$8066>>3];
                     $8068 = $iij5127;
                     $8069 = (($sj5array124) + ($8068<<3)|0);
                     $8070 = +HEAPF64[$8069>>3];
                     $8071 = $8067 - $8070;
                     $8072 = (+__Z5IKabsd($8071));
                     $8073 = $8072 < 9.9999999999999995E-7;
                     if ($8073) {
                      label = 1081;
                      break L1510;
                     }
                    }
                   } while(0);
                   $8080 = $iij5127;
                   $8081 = (($8080) + 1)|0;
                   $iij5127 = $8081;
                  }
                  if ((label|0) == 1081) {
                   label = 0;
                   $8074 = $iij5127;
                   $8075 = (($j5valid125) + ($8074)|0);
                   HEAP8[$8075>>0] = 0;
                   $8076 = $iij5127;
                   $8077 = $8076&255;
                   $8078 = (($4) + 551|0);
                   $8079 = (($8078) + 1|0);
                   HEAP8[$8079>>0] = $8077;
                  }
                  $8082 = $ij5126;
                  $8083 = (($j5array122) + ($8082<<3)|0);
                  $8084 = +HEAPF64[$8083>>3];
                  $8085 = (($4) + 200|0);
                  HEAPF64[$8085>>3] = $8084;
                  $8086 = $ij5126;
                  $8087 = (($cj5array123) + ($8086<<3)|0);
                  $8088 = +HEAPF64[$8087>>3];
                  $8089 = (($4) + 208|0);
                  HEAPF64[$8089>>3] = $8088;
                  $8090 = $ij5126;
                  $8091 = (($sj5array124) + ($8090<<3)|0);
                  $8092 = +HEAPF64[$8091>>3];
                  $8093 = (($4) + 216|0);
                  HEAPF64[$8093>>3] = $8092;
                  $8094 = (($4) + 200|0);
                  $8095 = +HEAPF64[$8094>>3];
                  $8096 = (+__Z5IKsind($8095));
                  $x300 = $8096;
                  $8097 = (($4) + 200|0);
                  $8098 = +HEAPF64[$8097>>3];
                  $8099 = (+__Z5IKcosd($8098));
                  $x301 = $8099;
                  $8100 = (($4) + 128|0);
                  $8101 = +HEAPF64[$8100>>3];
                  $8102 = (($4) + 240|0);
                  $8103 = +HEAPF64[$8102>>3];
                  $8104 = $8101 * $8103;
                  $x302 = $8104;
                  $8105 = (($4) + 128|0);
                  $8106 = +HEAPF64[$8105>>3];
                  $8107 = (($4) + 168|0);
                  $8108 = +HEAPF64[$8107>>3];
                  $8109 = $8106 * $8108;
                  $x303 = $8109;
                  $8110 = (($4) + 136|0);
                  $8111 = +HEAPF64[$8110>>3];
                  $8112 = 1.0 * $8111;
                  $x304 = $8112;
                  $8113 = $x300;
                  $8114 = 1.0 * $8113;
                  $x305 = $8114;
                  $8115 = (($4) + 136|0);
                  $8116 = +HEAPF64[$8115>>3];
                  $8117 = $x300;
                  $8118 = $8116 * $8117;
                  $x306 = $8118;
                  $8119 = $x301;
                  $8120 = 1.0 * $8119;
                  $x307 = $8120;
                  $8121 = (($4) + 176|0);
                  $8122 = +HEAPF64[$8121>>3];
                  $8123 = $x301;
                  $8124 = $8122 * $8123;
                  $8125 = (($4) + 384|0);
                  $8126 = +HEAPF64[$8125>>3];
                  $8127 = $8124 + $8126;
                  HEAPF64[$evalcond128>>3] = $8127;
                  $8128 = (($4) + 176|0);
                  $8129 = +HEAPF64[$8128>>3];
                  $8130 = -1.0 * $8129;
                  $8131 = $x305;
                  $8132 = $8130 * $8131;
                  $8133 = (($4) + 408|0);
                  $8134 = +HEAPF64[$8133>>3];
                  $8135 = $8132 + $8134;
                  $8136 = (($evalcond128) + 8|0);
                  HEAPF64[$8136>>3] = $8135;
                  $8137 = (($4) + 336|0);
                  $8138 = +HEAPF64[$8137>>3];
                  $8139 = (($4) + 136|0);
                  $8140 = +HEAPF64[$8139>>3];
                  $8141 = $8138 * $8140;
                  $8142 = (($4) + 128|0);
                  $8143 = +HEAPF64[$8142>>3];
                  $8144 = (($4) + 264|0);
                  $8145 = +HEAPF64[$8144>>3];
                  $8146 = $8143 * $8145;
                  $8147 = $8141 + $8146;
                  $8148 = (($4) + 168|0);
                  $8149 = +HEAPF64[$8148>>3];
                  $8150 = $x300;
                  $8151 = $8149 * $8150;
                  $8152 = $8147 + $8151;
                  $8153 = (($evalcond128) + 16|0);
                  HEAPF64[$8153>>3] = $8152;
                  $8154 = (($4) + 128|0);
                  $8155 = +HEAPF64[$8154>>3];
                  $8156 = (($4) + 312|0);
                  $8157 = +HEAPF64[$8156>>3];
                  $8158 = $8155 * $8157;
                  $8159 = (($4) + 240|0);
                  $8160 = +HEAPF64[$8159>>3];
                  $8161 = -1.0 * $8160;
                  $8162 = $x304;
                  $8163 = $8161 * $8162;
                  $8164 = $8158 + $8163;
                  $8165 = $x305;
                  $8166 = -1.0 * $8165;
                  $8167 = $8164 + $8166;
                  $8168 = (($evalcond128) + 24|0);
                  HEAPF64[$8168>>3] = $8167;
                  $8169 = (($4) + 264|0);
                  $8170 = +HEAPF64[$8169>>3];
                  $8171 = -1.0 * $8170;
                  $8172 = $x304;
                  $8173 = $8171 * $8172;
                  $8174 = (($4) + 128|0);
                  $8175 = +HEAPF64[$8174>>3];
                  $8176 = (($4) + 336|0);
                  $8177 = +HEAPF64[$8176>>3];
                  $8178 = $8175 * $8177;
                  $8179 = $8173 + $8178;
                  $8180 = $x307;
                  $8181 = -1.0 * $8180;
                  $8182 = $8179 + $8181;
                  $8183 = (($evalcond128) + 32|0);
                  HEAPF64[$8183>>3] = $8182;
                  $8184 = (($4) + 136|0);
                  $8185 = +HEAPF64[$8184>>3];
                  $8186 = $x301;
                  $8187 = $8185 * $8186;
                  $8188 = (($4) + 264|0);
                  $8189 = +HEAPF64[$8188>>3];
                  $8190 = $8187 + $8189;
                  $8191 = $x300;
                  $8192 = $x303;
                  $8193 = $8191 * $8192;
                  $8194 = $8190 + $8193;
                  $8195 = (($evalcond128) + 40|0);
                  HEAPF64[$8195>>3] = $8194;
                  $8196 = (($4) + 312|0);
                  $8197 = +HEAPF64[$8196>>3];
                  $8198 = (($4) + 136|0);
                  $8199 = +HEAPF64[$8198>>3];
                  $8200 = $8197 * $8199;
                  $8201 = (($4) + 168|0);
                  $8202 = +HEAPF64[$8201>>3];
                  $8203 = -1.0 * $8202;
                  $8204 = $x307;
                  $8205 = $8203 * $8204;
                  $8206 = $8200 + $8205;
                  $8207 = $x302;
                  $8208 = $8206 + $8207;
                  $8209 = (($evalcond128) + 48|0);
                  HEAPF64[$8209>>3] = $8208;
                  $8210 = $x303;
                  $8211 = -1.0 * $8210;
                  $8212 = $x307;
                  $8213 = $8211 * $8212;
                  $8214 = $x306;
                  $8215 = $8213 + $8214;
                  $8216 = (($4) + 240|0);
                  $8217 = +HEAPF64[$8216>>3];
                  $8218 = $8215 + $8217;
                  $8219 = (($evalcond128) + 56|0);
                  HEAPF64[$8219>>3] = $8218;
                  $8220 = (($4) + 128|0);
                  $8221 = +HEAPF64[$8220>>3];
                  $8222 = -1.0 * $8221;
                  $8223 = $x307;
                  $8224 = $8222 * $8223;
                  $8225 = (($4) + 336|0);
                  $8226 = +HEAPF64[$8225>>3];
                  $8227 = $8224 + $8226;
                  $8228 = (($4) + 168|0);
                  $8229 = +HEAPF64[$8228>>3];
                  $8230 = $x306;
                  $8231 = $8229 * $8230;
                  $8232 = $8227 + $8231;
                  $8233 = (($evalcond128) + 64|0);
                  HEAPF64[$8233>>3] = $8232;
                  $8234 = (($4) + 128|0);
                  $8235 = +HEAPF64[$8234>>3];
                  $8236 = -1.0 * $8235;
                  $8237 = $x305;
                  $8238 = $8236 * $8237;
                  $8239 = (($4) + 168|0);
                  $8240 = +HEAPF64[$8239>>3];
                  $8241 = -1.0 * $8240;
                  $8242 = $x301;
                  $8243 = $8241 * $8242;
                  $8244 = $x304;
                  $8245 = $8243 * $8244;
                  $8246 = $8238 + $8245;
                  $8247 = (($4) + 312|0);
                  $8248 = +HEAPF64[$8247>>3];
                  $8249 = $8246 + $8248;
                  $8250 = (($evalcond128) + 72|0);
                  HEAPF64[$8250>>3] = $8249;
                  $8251 = (($4) + 384|0);
                  $8252 = +HEAPF64[$8251>>3];
                  $8253 = (($4) + 176|0);
                  $8254 = +HEAPF64[$8253>>3];
                  $8255 = $8252 * $8254;
                  $8256 = $x301;
                  $8257 = $8255 + $8256;
                  $8258 = (($4) + 168|0);
                  $8259 = +HEAPF64[$8258>>3];
                  $8260 = -1.0 * $8259;
                  $8261 = $x302;
                  $8262 = $8260 * $8261;
                  $8263 = $8257 + $8262;
                  $8264 = (($4) + 168|0);
                  $8265 = +HEAPF64[$8264>>3];
                  $8266 = -1.0 * $8265;
                  $8267 = (($4) + 312|0);
                  $8268 = +HEAPF64[$8267>>3];
                  $8269 = $8266 * $8268;
                  $8270 = $x304;
                  $8271 = $8269 * $8270;
                  $8272 = $8263 + $8271;
                  $8273 = (($evalcond128) + 80|0);
                  HEAPF64[$8273>>3] = $8272;
                  $8274 = (($4) + 264|0);
                  $8275 = +HEAPF64[$8274>>3];
                  $8276 = -1.0 * $8275;
                  $8277 = $x303;
                  $8278 = $8276 * $8277;
                  $8279 = (($4) + 168|0);
                  $8280 = +HEAPF64[$8279>>3];
                  $8281 = -1.0 * $8280;
                  $8282 = (($4) + 336|0);
                  $8283 = +HEAPF64[$8282>>3];
                  $8284 = $8281 * $8283;
                  $8285 = $x304;
                  $8286 = $8284 * $8285;
                  $8287 = $8278 + $8286;
                  $8288 = (($4) + 408|0);
                  $8289 = +HEAPF64[$8288>>3];
                  $8290 = (($4) + 176|0);
                  $8291 = +HEAPF64[$8290>>3];
                  $8292 = $8289 * $8291;
                  $8293 = $8287 + $8292;
                  $8294 = $x305;
                  $8295 = -1.0 * $8294;
                  $8296 = $8293 + $8295;
                  $8297 = (($evalcond128) + 88|0);
                  HEAPF64[$8297>>3] = $8296;
                  $8298 = +HEAPF64[$evalcond128>>3];
                  $8299 = (+__Z5IKabsd($8298));
                  $8300 = $8299 > 5.0000000000000004E-6;
                  do {
                   if (!($8300)) {
                    $8301 = (($evalcond128) + 8|0);
                    $8302 = +HEAPF64[$8301>>3];
                    $8303 = (+__Z5IKabsd($8302));
                    $8304 = $8303 > 5.0000000000000004E-6;
                    if ($8304) {
                     break;
                    }
                    $8305 = (($evalcond128) + 16|0);
                    $8306 = +HEAPF64[$8305>>3];
                    $8307 = (+__Z5IKabsd($8306));
                    $8308 = $8307 > 5.0000000000000004E-6;
                    if ($8308) {
                     break;
                    }
                    $8309 = (($evalcond128) + 24|0);
                    $8310 = +HEAPF64[$8309>>3];
                    $8311 = (+__Z5IKabsd($8310));
                    $8312 = $8311 > 5.0000000000000004E-6;
                    if ($8312) {
                     break;
                    }
                    $8313 = (($evalcond128) + 32|0);
                    $8314 = +HEAPF64[$8313>>3];
                    $8315 = (+__Z5IKabsd($8314));
                    $8316 = $8315 > 5.0000000000000004E-6;
                    if ($8316) {
                     break;
                    }
                    $8317 = (($evalcond128) + 40|0);
                    $8318 = +HEAPF64[$8317>>3];
                    $8319 = (+__Z5IKabsd($8318));
                    $8320 = $8319 > 5.0000000000000004E-6;
                    if ($8320) {
                     break;
                    }
                    $8321 = (($evalcond128) + 48|0);
                    $8322 = +HEAPF64[$8321>>3];
                    $8323 = (+__Z5IKabsd($8322));
                    $8324 = $8323 > 5.0000000000000004E-6;
                    if ($8324) {
                     break;
                    }
                    $8325 = (($evalcond128) + 56|0);
                    $8326 = +HEAPF64[$8325>>3];
                    $8327 = (+__Z5IKabsd($8326));
                    $8328 = $8327 > 5.0000000000000004E-6;
                    if ($8328) {
                     break;
                    }
                    $8329 = (($evalcond128) + 64|0);
                    $8330 = +HEAPF64[$8329>>3];
                    $8331 = (+__Z5IKabsd($8330));
                    $8332 = $8331 > 5.0000000000000004E-6;
                    if ($8332) {
                     break;
                    }
                    $8333 = (($evalcond128) + 72|0);
                    $8334 = +HEAPF64[$8333>>3];
                    $8335 = (+__Z5IKabsd($8334));
                    $8336 = $8335 > 5.0000000000000004E-6;
                    if ($8336) {
                     break;
                    }
                    $8337 = (($evalcond128) + 80|0);
                    $8338 = +HEAPF64[$8337>>3];
                    $8339 = (+__Z5IKabsd($8338));
                    $8340 = $8339 > 5.0000000000000004E-6;
                    if ($8340) {
                     break;
                    }
                    $8341 = (($evalcond128) + 88|0);
                    $8342 = +HEAPF64[$8341>>3];
                    $8343 = (+__Z5IKabsd($8342));
                    $8344 = $8343 > 5.0000000000000004E-6;
                    if ($8344) {
                     break;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos129,6);
                    __THREW__ = 0;
                    $8345 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8346 = __THREW__; __THREW__ = 0;
                    $8347 = $8346&1;
                    if ($8347) {
                     label = 1132;
                     break L1;
                    }
                    $8348 = (($8345) + 17|0);
                    HEAP8[$8348>>0] = 1;
                    $8349 = +HEAPF64[$4>>3];
                    __THREW__ = 0;
                    $8350 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8351 = __THREW__; __THREW__ = 0;
                    $8352 = $8351&1;
                    if ($8352) {
                     label = 1132;
                     break L1;
                    }
                    $8353 = (($8350) + 8|0);
                    HEAPF64[$8353>>3] = $8349;
                    $8354 = (($4) + 536|0);
                    $8355 = HEAP8[$8354>>0]|0;
                    __THREW__ = 0;
                    $8356 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8357 = __THREW__; __THREW__ = 0;
                    $8358 = $8357&1;
                    if ($8358) {
                     label = 1132;
                     break L1;
                    }
                    $8359 = (($8356) + 19|0);
                    HEAP8[$8359>>0] = $8355;
                    $8360 = (($4) + 536|0);
                    $8361 = (($8360) + 1|0);
                    $8362 = HEAP8[$8361>>0]|0;
                    __THREW__ = 0;
                    $8363 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8364 = __THREW__; __THREW__ = 0;
                    $8365 = $8364&1;
                    if ($8365) {
                     label = 1132;
                     break L1;
                    }
                    $8366 = (($8363) + 19|0);
                    $8367 = (($8366) + 1|0);
                    HEAP8[$8367>>0] = $8362;
                    $8368 = (($4) + 538|0);
                    $8369 = HEAP8[$8368>>0]|0;
                    __THREW__ = 0;
                    $8370 = (invoke_iii(381,($vinfos129|0),0)|0);
                    $8371 = __THREW__; __THREW__ = 0;
                    $8372 = $8371&1;
                    if ($8372) {
                     label = 1132;
                     break L1;
                    }
                    $8373 = (($8370) + 18|0);
                    HEAP8[$8373>>0] = $8369;
                    __THREW__ = 0;
                    $8374 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8375 = __THREW__; __THREW__ = 0;
                    $8376 = $8375&1;
                    if ($8376) {
                     label = 1132;
                     break L1;
                    }
                    $8377 = (($8374) + 17|0);
                    HEAP8[$8377>>0] = 1;
                    $8378 = (($4) + 40|0);
                    $8379 = +HEAPF64[$8378>>3];
                    __THREW__ = 0;
                    $8380 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8381 = __THREW__; __THREW__ = 0;
                    $8382 = $8381&1;
                    if ($8382) {
                     label = 1132;
                     break L1;
                    }
                    $8383 = (($8380) + 8|0);
                    HEAPF64[$8383>>3] = $8379;
                    $8384 = (($4) + 539|0);
                    $8385 = HEAP8[$8384>>0]|0;
                    __THREW__ = 0;
                    $8386 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8387 = __THREW__; __THREW__ = 0;
                    $8388 = $8387&1;
                    if ($8388) {
                     label = 1132;
                     break L1;
                    }
                    $8389 = (($8386) + 19|0);
                    HEAP8[$8389>>0] = $8385;
                    $8390 = (($4) + 539|0);
                    $8391 = (($8390) + 1|0);
                    $8392 = HEAP8[$8391>>0]|0;
                    __THREW__ = 0;
                    $8393 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8394 = __THREW__; __THREW__ = 0;
                    $8395 = $8394&1;
                    if ($8395) {
                     label = 1132;
                     break L1;
                    }
                    $8396 = (($8393) + 19|0);
                    $8397 = (($8396) + 1|0);
                    HEAP8[$8397>>0] = $8392;
                    $8398 = (($4) + 541|0);
                    $8399 = HEAP8[$8398>>0]|0;
                    __THREW__ = 0;
                    $8400 = (invoke_iii(381,($vinfos129|0),1)|0);
                    $8401 = __THREW__; __THREW__ = 0;
                    $8402 = $8401&1;
                    if ($8402) {
                     label = 1132;
                     break L1;
                    }
                    $8403 = (($8400) + 18|0);
                    HEAP8[$8403>>0] = $8399;
                    __THREW__ = 0;
                    $8404 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8405 = __THREW__; __THREW__ = 0;
                    $8406 = $8405&1;
                    if ($8406) {
                     label = 1132;
                     break L1;
                    }
                    $8407 = (($8404) + 17|0);
                    HEAP8[$8407>>0] = 1;
                    $8408 = (($4) + 80|0);
                    $8409 = +HEAPF64[$8408>>3];
                    __THREW__ = 0;
                    $8410 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8411 = __THREW__; __THREW__ = 0;
                    $8412 = $8411&1;
                    if ($8412) {
                     label = 1132;
                     break L1;
                    }
                    $8413 = (($8410) + 8|0);
                    HEAPF64[$8413>>3] = $8409;
                    $8414 = (($4) + 542|0);
                    $8415 = HEAP8[$8414>>0]|0;
                    __THREW__ = 0;
                    $8416 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8417 = __THREW__; __THREW__ = 0;
                    $8418 = $8417&1;
                    if ($8418) {
                     label = 1132;
                     break L1;
                    }
                    $8419 = (($8416) + 19|0);
                    HEAP8[$8419>>0] = $8415;
                    $8420 = (($4) + 542|0);
                    $8421 = (($8420) + 1|0);
                    $8422 = HEAP8[$8421>>0]|0;
                    __THREW__ = 0;
                    $8423 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8424 = __THREW__; __THREW__ = 0;
                    $8425 = $8424&1;
                    if ($8425) {
                     label = 1132;
                     break L1;
                    }
                    $8426 = (($8423) + 19|0);
                    $8427 = (($8426) + 1|0);
                    HEAP8[$8427>>0] = $8422;
                    $8428 = (($4) + 544|0);
                    $8429 = HEAP8[$8428>>0]|0;
                    __THREW__ = 0;
                    $8430 = (invoke_iii(381,($vinfos129|0),2)|0);
                    $8431 = __THREW__; __THREW__ = 0;
                    $8432 = $8431&1;
                    if ($8432) {
                     label = 1132;
                     break L1;
                    }
                    $8433 = (($8430) + 18|0);
                    HEAP8[$8433>>0] = $8429;
                    __THREW__ = 0;
                    $8434 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8435 = __THREW__; __THREW__ = 0;
                    $8436 = $8435&1;
                    if ($8436) {
                     label = 1132;
                     break L1;
                    }
                    $8437 = (($8434) + 17|0);
                    HEAP8[$8437>>0] = 1;
                    $8438 = (($4) + 120|0);
                    $8439 = +HEAPF64[$8438>>3];
                    __THREW__ = 0;
                    $8440 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8441 = __THREW__; __THREW__ = 0;
                    $8442 = $8441&1;
                    if ($8442) {
                     label = 1132;
                     break L1;
                    }
                    $8443 = (($8440) + 8|0);
                    HEAPF64[$8443>>3] = $8439;
                    $8444 = (($4) + 545|0);
                    $8445 = HEAP8[$8444>>0]|0;
                    __THREW__ = 0;
                    $8446 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8447 = __THREW__; __THREW__ = 0;
                    $8448 = $8447&1;
                    if ($8448) {
                     label = 1132;
                     break L1;
                    }
                    $8449 = (($8446) + 19|0);
                    HEAP8[$8449>>0] = $8445;
                    $8450 = (($4) + 545|0);
                    $8451 = (($8450) + 1|0);
                    $8452 = HEAP8[$8451>>0]|0;
                    __THREW__ = 0;
                    $8453 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8454 = __THREW__; __THREW__ = 0;
                    $8455 = $8454&1;
                    if ($8455) {
                     label = 1132;
                     break L1;
                    }
                    $8456 = (($8453) + 19|0);
                    $8457 = (($8456) + 1|0);
                    HEAP8[$8457>>0] = $8452;
                    $8458 = (($4) + 547|0);
                    $8459 = HEAP8[$8458>>0]|0;
                    __THREW__ = 0;
                    $8460 = (invoke_iii(381,($vinfos129|0),3)|0);
                    $8461 = __THREW__; __THREW__ = 0;
                    $8462 = $8461&1;
                    if ($8462) {
                     label = 1132;
                     break L1;
                    }
                    $8463 = (($8460) + 18|0);
                    HEAP8[$8463>>0] = $8459;
                    __THREW__ = 0;
                    $8464 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8465 = __THREW__; __THREW__ = 0;
                    $8466 = $8465&1;
                    if ($8466) {
                     label = 1132;
                     break L1;
                    }
                    $8467 = (($8464) + 17|0);
                    HEAP8[$8467>>0] = 1;
                    $8468 = (($4) + 160|0);
                    $8469 = +HEAPF64[$8468>>3];
                    __THREW__ = 0;
                    $8470 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8471 = __THREW__; __THREW__ = 0;
                    $8472 = $8471&1;
                    if ($8472) {
                     label = 1132;
                     break L1;
                    }
                    $8473 = (($8470) + 8|0);
                    HEAPF64[$8473>>3] = $8469;
                    $8474 = (($4) + 548|0);
                    $8475 = HEAP8[$8474>>0]|0;
                    __THREW__ = 0;
                    $8476 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8477 = __THREW__; __THREW__ = 0;
                    $8478 = $8477&1;
                    if ($8478) {
                     label = 1132;
                     break L1;
                    }
                    $8479 = (($8476) + 19|0);
                    HEAP8[$8479>>0] = $8475;
                    $8480 = (($4) + 548|0);
                    $8481 = (($8480) + 1|0);
                    $8482 = HEAP8[$8481>>0]|0;
                    __THREW__ = 0;
                    $8483 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8484 = __THREW__; __THREW__ = 0;
                    $8485 = $8484&1;
                    if ($8485) {
                     label = 1132;
                     break L1;
                    }
                    $8486 = (($8483) + 19|0);
                    $8487 = (($8486) + 1|0);
                    HEAP8[$8487>>0] = $8482;
                    $8488 = (($4) + 550|0);
                    $8489 = HEAP8[$8488>>0]|0;
                    __THREW__ = 0;
                    $8490 = (invoke_iii(381,($vinfos129|0),4)|0);
                    $8491 = __THREW__; __THREW__ = 0;
                    $8492 = $8491&1;
                    if ($8492) {
                     label = 1132;
                     break L1;
                    }
                    $8493 = (($8490) + 18|0);
                    HEAP8[$8493>>0] = $8489;
                    __THREW__ = 0;
                    $8494 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8495 = __THREW__; __THREW__ = 0;
                    $8496 = $8495&1;
                    if ($8496) {
                     label = 1132;
                     break L1;
                    }
                    $8497 = (($8494) + 17|0);
                    HEAP8[$8497>>0] = 1;
                    $8498 = (($4) + 200|0);
                    $8499 = +HEAPF64[$8498>>3];
                    __THREW__ = 0;
                    $8500 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8501 = __THREW__; __THREW__ = 0;
                    $8502 = $8501&1;
                    if ($8502) {
                     label = 1132;
                     break L1;
                    }
                    $8503 = (($8500) + 8|0);
                    HEAPF64[$8503>>3] = $8499;
                    $8504 = (($4) + 551|0);
                    $8505 = HEAP8[$8504>>0]|0;
                    __THREW__ = 0;
                    $8506 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8507 = __THREW__; __THREW__ = 0;
                    $8508 = $8507&1;
                    if ($8508) {
                     label = 1132;
                     break L1;
                    }
                    $8509 = (($8506) + 19|0);
                    HEAP8[$8509>>0] = $8505;
                    $8510 = (($4) + 551|0);
                    $8511 = (($8510) + 1|0);
                    $8512 = HEAP8[$8511>>0]|0;
                    __THREW__ = 0;
                    $8513 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8514 = __THREW__; __THREW__ = 0;
                    $8515 = $8514&1;
                    if ($8515) {
                     label = 1132;
                     break L1;
                    }
                    $8516 = (($8513) + 19|0);
                    $8517 = (($8516) + 1|0);
                    HEAP8[$8517>>0] = $8512;
                    $8518 = (($4) + 553|0);
                    $8519 = HEAP8[$8518>>0]|0;
                    __THREW__ = 0;
                    $8520 = (invoke_iii(381,($vinfos129|0),5)|0);
                    $8521 = __THREW__; __THREW__ = 0;
                    $8522 = $8521&1;
                    if ($8522) {
                     label = 1132;
                     break L1;
                    }
                    $8523 = (($8520) + 18|0);
                    HEAP8[$8523>>0] = $8519;
                    __THREW__ = 0;
                    invoke_vii(382,($vfree130|0),0);
                    $8524 = __THREW__; __THREW__ = 0;
                    $8525 = $8524&1;
                    if ($8525) {
                     label = 1132;
                     break L1;
                    }
                    $8526 = $1;
                    $8527 = HEAP32[$8526>>2]|0;
                    $8528 = (($8527) + 8|0);
                    $8529 = HEAP32[$8528>>2]|0;
                    __THREW__ = 0;
                    (invoke_iiii($8529|0,($8526|0),($vinfos129|0),($vfree130|0))|0);
                    $8530 = __THREW__; __THREW__ = 0;
                    $8531 = $8530&1;
                    if ($8531) {
                     label = 1133;
                     break L1;
                    }
                    __THREW__ = 0;
                    invoke_vi(366,($vfree130|0));
                    $8532 = __THREW__; __THREW__ = 0;
                    $8533 = $8532&1;
                    if ($8533) {
                     label = 1132;
                     break L1;
                    }
                    __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos129);
                    break L1507;
                   }
                  } while(0);
                 } else {
                 }
                } while(0);
                $8534 = $ij5126;
                $8535 = (($8534) + 1)|0;
                $ij5126 = $8535;
               }
              }
             } while(0);
             if ((label|0) == 285) {
              label = 0;
              $2655 = (($4) + 8|0);
              $2656 = +HEAPF64[$2655>>3];
              $2657 = 1.0 * $2656;
              $x198 = $2657;
              $2658 = (($4) + 344|0);
              $2659 = +HEAPF64[$2658>>3];
              $2660 = (($4) + 16|0);
              $2661 = +HEAPF64[$2660>>3];
              $2662 = $2659 * $2661;
              $x199 = $2662;
              $2663 = (($4) + 320|0);
              $2664 = +HEAPF64[$2663>>3];
              $2665 = (($4) + 16|0);
              $2666 = +HEAPF64[$2665>>3];
              $2667 = $2664 * $2666;
              $x200 = $2667;
              $2668 = (($4) + 88|0);
              $2669 = +HEAPF64[$2668>>3];
              $2670 = 1.0 * $2669;
              $x201 = $2670;
              $2671 = (($4) + 48|0);
              $2672 = +HEAPF64[$2671>>3];
              $2673 = (($4) + 96|0);
              $2674 = +HEAPF64[$2673>>3];
              $2675 = $2672 * $2674;
              $x202 = $2675;
              $2676 = (($4) + 368|0);
              $2677 = +HEAPF64[$2676>>3];
              $2678 = (($4) + 16|0);
              $2679 = +HEAPF64[$2678>>3];
              $2680 = $2677 * $2679;
              $x203 = $2680;
              $2681 = (($4) + 88|0);
              $2682 = +HEAPF64[$2681>>3];
              $2683 = (($4) + 56|0);
              $2684 = +HEAPF64[$2683>>3];
              $2685 = $2682 * $2684;
              $2686 = $x202;
              $2687 = $2685 + $2686;
              $x204 = $2687;
              $2688 = $x116;
              $x205 = $2688;
              $2689 = (($4) + 16|0);
              $2690 = +HEAPF64[$2689>>3];
              $2691 = $x205;
              $2692 = $2690 * $2691;
              $x206 = $2692;
              $2693 = (($4) + 8|0);
              $2694 = +HEAPF64[$2693>>3];
              $2695 = $x204;
              $2696 = $2694 * $2695;
              $x207 = $2696;
              $2697 = (($4) + 8|0);
              $2698 = +HEAPF64[$2697>>3];
              $2699 = $x205;
              $2700 = $2698 * $2699;
              $x208 = $2700;
              $2701 = $x120;
              $x209 = $2701;
              $2702 = $x200;
              $2703 = $x204;
              $2704 = $2702 * $2703;
              $2705 = (($4) + 248|0);
              $2706 = +HEAPF64[$2705>>3];
              $2707 = $x207;
              $2708 = $2706 * $2707;
              $2709 = $2704 + $2708;
              $2710 = (($4) + 392|0);
              $2711 = +HEAPF64[$2710>>3];
              $2712 = $x205;
              $2713 = $2711 * $2712;
              $2714 = $2709 + $2713;
              $2715 = (($4) + 240|0);
              HEAPF64[$2715>>3] = $2714;
              $2716 = (($4) + 272|0);
              $2717 = +HEAPF64[$2716>>3];
              $2718 = $x207;
              $2719 = $2717 * $2718;
              $2720 = (($4) + 416|0);
              $2721 = +HEAPF64[$2720>>3];
              $2722 = $x205;
              $2723 = $2721 * $2722;
              $2724 = $2719 + $2723;
              $2725 = $x199;
              $2726 = $x204;
              $2727 = $2725 * $2726;
              $2728 = $2724 + $2727;
              $2729 = (($4) + 264|0);
              HEAPF64[$2729>>3] = $2728;
              $2730 = (($4) + 440|0);
              $2731 = +HEAPF64[$2730>>3];
              $2732 = $x205;
              $2733 = $2731 * $2732;
              $2734 = $x203;
              $2735 = $x204;
              $2736 = $2734 * $2735;
              $2737 = $2733 + $2736;
              $2738 = (($4) + 296|0);
              $2739 = +HEAPF64[$2738>>3];
              $2740 = $x207;
              $2741 = $2739 * $2740;
              $2742 = $2737 + $2741;
              $2743 = (($4) + 288|0);
              HEAPF64[$2743>>3] = $2742;
              $2744 = (($4) + 248|0);
              $2745 = +HEAPF64[$2744>>3];
              $2746 = (($4) + 16|0);
              $2747 = +HEAPF64[$2746>>3];
              $2748 = $2745 * $2747;
              $2749 = (($4) + 320|0);
              $2750 = +HEAPF64[$2749>>3];
              $2751 = -1.0 * $2750;
              $2752 = $x198;
              $2753 = $2751 * $2752;
              $2754 = $2748 + $2753;
              $2755 = (($4) + 312|0);
              HEAPF64[$2755>>3] = $2754;
              $2756 = (($4) + 272|0);
              $2757 = +HEAPF64[$2756>>3];
              $2758 = (($4) + 16|0);
              $2759 = +HEAPF64[$2758>>3];
              $2760 = $2757 * $2759;
              $2761 = (($4) + 344|0);
              $2762 = +HEAPF64[$2761>>3];
              $2763 = -1.0 * $2762;
              $2764 = $x198;
              $2765 = $2763 * $2764;
              $2766 = $2760 + $2765;
              $2767 = (($4) + 336|0);
              HEAPF64[$2767>>3] = $2766;
              $2768 = (($4) + 368|0);
              $2769 = +HEAPF64[$2768>>3];
              $2770 = -1.0 * $2769;
              $2771 = $x198;
              $2772 = $2770 * $2771;
              $2773 = (($4) + 296|0);
              $2774 = +HEAPF64[$2773>>3];
              $2775 = (($4) + 16|0);
              $2776 = +HEAPF64[$2775>>3];
              $2777 = $2774 * $2776;
              $2778 = $2772 + $2777;
              $2779 = (($4) + 360|0);
              HEAPF64[$2779>>3] = $2778;
              $2780 = $x200;
              $2781 = $x205;
              $2782 = $2780 * $2781;
              $2783 = (($4) + 248|0);
              $2784 = +HEAPF64[$2783>>3];
              $2785 = $x208;
              $2786 = $2784 * $2785;
              $2787 = $2782 + $2786;
              $2788 = (($4) + 392|0);
              $2789 = +HEAPF64[$2788>>3];
              $2790 = $x209;
              $2791 = $2789 * $2790;
              $2792 = $2787 + $2791;
              $2793 = (($4) + 384|0);
              HEAPF64[$2793>>3] = $2792;
              $2794 = (($4) + 272|0);
              $2795 = +HEAPF64[$2794>>3];
              $2796 = $x208;
              $2797 = $2795 * $2796;
              $2798 = (($4) + 416|0);
              $2799 = +HEAPF64[$2798>>3];
              $2800 = $x209;
              $2801 = $2799 * $2800;
              $2802 = $2797 + $2801;
              $2803 = $x199;
              $2804 = $x205;
              $2805 = $2803 * $2804;
              $2806 = $2802 + $2805;
              $2807 = (($4) + 408|0);
              HEAPF64[$2807>>3] = $2806;
              $2808 = (($4) + 440|0);
              $2809 = +HEAPF64[$2808>>3];
              $2810 = $x209;
              $2811 = $2809 * $2810;
              $2812 = $x203;
              $2813 = $x205;
              $2814 = $2812 * $2813;
              $2815 = $2811 + $2814;
              $2816 = (($4) + 296|0);
              $2817 = +HEAPF64[$2816>>3];
              $2818 = $x208;
              $2819 = $2817 * $2818;
              $2820 = $2815 + $2819;
              $2821 = (($4) + 432|0);
              HEAPF64[$2821>>3] = $2820;
              $2822 = (($4) + 128|0);
              $2823 = +HEAPF64[$2822>>3];
              HEAPF64[$j5eval30>>3] = $2823;
              $2824 = (($4) + 168|0);
              $2825 = +HEAPF64[$2824>>3];
              $2826 = (($j5eval30) + 8|0);
              HEAPF64[$2826>>3] = $2825;
              $2827 = (($4) + 176|0);
              $2828 = +HEAPF64[$2827>>3];
              $2829 = (($j5eval30) + 16|0);
              HEAPF64[$2829>>3] = $2828;
              $2830 = +HEAPF64[$j5eval30>>3];
              $2831 = (+__Z5IKabsd($2830));
              $2832 = $2831 < 9.9999999999999995E-7;
              do {
               if ($2832) {
                label = 288;
               } else {
                $2833 = (($j5eval30) + 8|0);
                $2834 = +HEAPF64[$2833>>3];
                $2835 = (+__Z5IKabsd($2834));
                $2836 = $2835 < 9.9999999999999995E-7;
                if ($2836) {
                 label = 288;
                 break;
                }
                $2837 = (($j5eval30) + 16|0);
                $2838 = +HEAPF64[$2837>>3];
                $2839 = (+__Z5IKabsd($2838));
                $2840 = $2839 < 9.9999999999999995E-7;
                if ($2840) {
                 label = 288;
                 break;
                }
                ;HEAP8[$j5valid116+0>>0]=0|0;
                $7311 = (($4) + 553|0);
                HEAP8[$7311>>0] = 1;
                $7312 = (($4) + 176|0);
                $7313 = +HEAPF64[$7312>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x286,$7313,-1);
                $7314 = (($x286) + 8|0);
                $7315 = HEAP8[$7314>>0]|0;
                $7316 = $7315&1;
                if (!($7316)) {
                 break L1376;
                }
                $7317 = +HEAPF64[$x286>>3];
                $x285 = $7317;
                $7318 = (($4) + 128|0);
                $7319 = +HEAPF64[$7318>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x287,$7319,-1);
                $7320 = (($x287) + 8|0);
                $7321 = HEAP8[$7320>>0]|0;
                $7322 = $7321&1;
                if (!($7322)) {
                 break L1376;
                }
                $7323 = (($4) + 168|0);
                $7324 = +HEAPF64[$7323>>3];
                __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x288,$7324,-1);
                $7325 = (($x288) + 8|0);
                $7326 = HEAP8[$7325>>0]|0;
                $7327 = $7326&1;
                if (!($7327)) {
                 break L1376;
                }
                $7328 = $x285;
                $7329 = +HEAPF64[$x287>>3];
                $7330 = $7328 * $7329;
                $7331 = +HEAPF64[$x288>>3];
                $7332 = $7330 * $7331;
                $7333 = (($4) + 384|0);
                $7334 = +HEAPF64[$7333>>3];
                $7335 = (($4) + 136|0);
                $7336 = +HEAPF64[$7335>>3];
                $7337 = $7334 * $7336;
                $7338 = (($4) + 264|0);
                $7339 = +HEAPF64[$7338>>3];
                $7340 = -1.0 * $7339;
                $7341 = (($4) + 176|0);
                $7342 = +HEAPF64[$7341>>3];
                $7343 = $7340 * $7342;
                $7344 = $7337 + $7343;
                $7345 = $7332 * $7344;
                $7346 = (+__Z5IKabsd($7345));
                $7347 = $7346 < 1.9999999999999999E-6;
                do {
                 if ($7347) {
                  $7348 = (($4) + 384|0);
                  $7349 = +HEAPF64[$7348>>3];
                  $7350 = -1.0 * $7349;
                  $7351 = $x285;
                  $7352 = $7350 * $7351;
                  $7353 = (+__Z5IKabsd($7352));
                  $7354 = $7353 < 1.9999999999999999E-6;
                  if (!($7354)) {
                   break;
                  }
                  $7355 = $x285;
                  $7356 = +HEAPF64[$x287>>3];
                  $7357 = $7355 * $7356;
                  $7358 = +HEAPF64[$x288>>3];
                  $7359 = $7357 * $7358;
                  $7360 = (($4) + 384|0);
                  $7361 = +HEAPF64[$7360>>3];
                  $7362 = (($4) + 136|0);
                  $7363 = +HEAPF64[$7362>>3];
                  $7364 = $7361 * $7363;
                  $7365 = (($4) + 264|0);
                  $7366 = +HEAPF64[$7365>>3];
                  $7367 = -1.0 * $7366;
                  $7368 = (($4) + 176|0);
                  $7369 = +HEAPF64[$7368>>3];
                  $7370 = $7367 * $7369;
                  $7371 = $7364 + $7370;
                  $7372 = $7359 * $7371;
                  $7373 = (+__Z5IKsqrd($7372));
                  $7374 = (($4) + 384|0);
                  $7375 = +HEAPF64[$7374>>3];
                  $7376 = -1.0 * $7375;
                  $7377 = $x285;
                  $7378 = $7376 * $7377;
                  $7379 = (+__Z5IKsqrd($7378));
                  $7380 = $7373 + $7379;
                  $7381 = $7380 - 1.0;
                  $7382 = (+__Z5IKabsd($7381));
                  $7383 = $7382 <= 1.9999999999999999E-6;
                  if (!($7383)) {
                   break;
                  }
                  break L1376;
                 }
                } while(0);
                $7384 = $x285;
                $7385 = +HEAPF64[$x287>>3];
                $7386 = $7384 * $7385;
                $7387 = +HEAPF64[$x288>>3];
                $7388 = $7386 * $7387;
                $7389 = (($4) + 384|0);
                $7390 = +HEAPF64[$7389>>3];
                $7391 = (($4) + 136|0);
                $7392 = +HEAPF64[$7391>>3];
                $7393 = $7390 * $7392;
                $7394 = (($4) + 264|0);
                $7395 = +HEAPF64[$7394>>3];
                $7396 = -1.0 * $7395;
                $7397 = (($4) + 176|0);
                $7398 = +HEAPF64[$7397>>3];
                $7399 = $7396 * $7398;
                $7400 = $7393 + $7399;
                $7401 = $7388 * $7400;
                $7402 = (($4) + 384|0);
                $7403 = +HEAPF64[$7402>>3];
                $7404 = -1.0 * $7403;
                $7405 = $x285;
                $7406 = $7404 * $7405;
                $7407 = (+__Z7IKatan2dd($7401,$7406));
                HEAPF64[$j5array113>>3] = $7407;
                $7408 = +HEAPF64[$j5array113>>3];
                $7409 = (+__Z5IKsind($7408));
                HEAPF64[$sj5array115>>3] = $7409;
                $7410 = +HEAPF64[$j5array113>>3];
                $7411 = (+__Z5IKcosd($7410));
                HEAPF64[$cj5array114>>3] = $7411;
                $7412 = +HEAPF64[$j5array113>>3];
                $7413 = $7412 > 3.14159265358979;
                if ($7413) {
                 $7414 = +HEAPF64[$j5array113>>3];
                 $7415 = $7414 - 6.2831853071795898;
                 HEAPF64[$j5array113>>3] = $7415;
                } else {
                 $7416 = +HEAPF64[$j5array113>>3];
                 $7417 = $7416 < -3.14159265358979;
                 if ($7417) {
                  $7418 = +HEAPF64[$j5array113>>3];
                  $7419 = $7418 + 6.2831853071795898;
                  HEAPF64[$j5array113>>3] = $7419;
                 }
                }
                HEAP8[$j5valid116>>0] = 1;
                $ij5117 = 0;
                while(1) {
                 $7420 = $ij5117;
                 $7421 = ($7420|0)<(1);
                 if (!($7421)) {
                  break;
                 }
                 $7422 = $ij5117;
                 $7423 = (($j5valid116) + ($7422)|0);
                 $7424 = HEAP8[$7423>>0]|0;
                 $7425 = $7424&1;
                 L1600: do {
                  if ($7425) {
                   $7426 = $ij5117;
                   $7427 = $7426&255;
                   $7428 = (($4) + 551|0);
                   HEAP8[$7428>>0] = $7427;
                   $7429 = (($4) + 551|0);
                   $7430 = (($7429) + 1|0);
                   HEAP8[$7430>>0] = -1;
                   $7431 = $ij5117;
                   $7432 = (($7431) + 1)|0;
                   $iij5118 = $7432;
                   L1603: while(1) {
                    $7433 = $iij5118;
                    $7434 = ($7433|0)<(1);
                    if (!($7434)) {
                     break;
                    }
                    $7435 = $iij5118;
                    $7436 = (($j5valid116) + ($7435)|0);
                    $7437 = HEAP8[$7436>>0]|0;
                    $7438 = $7437&1;
                    do {
                     if ($7438) {
                      $7439 = $ij5117;
                      $7440 = (($cj5array114) + ($7439<<3)|0);
                      $7441 = +HEAPF64[$7440>>3];
                      $7442 = $iij5118;
                      $7443 = (($cj5array114) + ($7442<<3)|0);
                      $7444 = +HEAPF64[$7443>>3];
                      $7445 = $7441 - $7444;
                      $7446 = (+__Z5IKabsd($7445));
                      $7447 = $7446 < 9.9999999999999995E-7;
                      if (!($7447)) {
                       break;
                      }
                      $7448 = $ij5117;
                      $7449 = (($sj5array115) + ($7448<<3)|0);
                      $7450 = +HEAPF64[$7449>>3];
                      $7451 = $iij5118;
                      $7452 = (($sj5array115) + ($7451<<3)|0);
                      $7453 = +HEAPF64[$7452>>3];
                      $7454 = $7450 - $7453;
                      $7455 = (+__Z5IKabsd($7454));
                      $7456 = $7455 < 9.9999999999999995E-7;
                      if ($7456) {
                       label = 1001;
                       break L1603;
                      }
                     }
                    } while(0);
                    $7463 = $iij5118;
                    $7464 = (($7463) + 1)|0;
                    $iij5118 = $7464;
                   }
                   if ((label|0) == 1001) {
                    label = 0;
                    $7457 = $iij5118;
                    $7458 = (($j5valid116) + ($7457)|0);
                    HEAP8[$7458>>0] = 0;
                    $7459 = $iij5118;
                    $7460 = $7459&255;
                    $7461 = (($4) + 551|0);
                    $7462 = (($7461) + 1|0);
                    HEAP8[$7462>>0] = $7460;
                   }
                   $7465 = $ij5117;
                   $7466 = (($j5array113) + ($7465<<3)|0);
                   $7467 = +HEAPF64[$7466>>3];
                   $7468 = (($4) + 200|0);
                   HEAPF64[$7468>>3] = $7467;
                   $7469 = $ij5117;
                   $7470 = (($cj5array114) + ($7469<<3)|0);
                   $7471 = +HEAPF64[$7470>>3];
                   $7472 = (($4) + 208|0);
                   HEAPF64[$7472>>3] = $7471;
                   $7473 = $ij5117;
                   $7474 = (($sj5array115) + ($7473<<3)|0);
                   $7475 = +HEAPF64[$7474>>3];
                   $7476 = (($4) + 216|0);
                   HEAPF64[$7476>>3] = $7475;
                   $7477 = (($4) + 200|0);
                   $7478 = +HEAPF64[$7477>>3];
                   $7479 = (+__Z5IKsind($7478));
                   $x289 = $7479;
                   $7480 = (($4) + 200|0);
                   $7481 = +HEAPF64[$7480>>3];
                   $7482 = (+__Z5IKcosd($7481));
                   $x290 = $7482;
                   $7483 = (($4) + 128|0);
                   $7484 = +HEAPF64[$7483>>3];
                   $7485 = (($4) + 240|0);
                   $7486 = +HEAPF64[$7485>>3];
                   $7487 = $7484 * $7486;
                   $x291 = $7487;
                   $7488 = (($4) + 128|0);
                   $7489 = +HEAPF64[$7488>>3];
                   $7490 = (($4) + 168|0);
                   $7491 = +HEAPF64[$7490>>3];
                   $7492 = $7489 * $7491;
                   $x292 = $7492;
                   $7493 = (($4) + 136|0);
                   $7494 = +HEAPF64[$7493>>3];
                   $7495 = 1.0 * $7494;
                   $x293 = $7495;
                   $7496 = $x289;
                   $7497 = 1.0 * $7496;
                   $x294 = $7497;
                   $7498 = (($4) + 136|0);
                   $7499 = +HEAPF64[$7498>>3];
                   $7500 = $x289;
                   $7501 = $7499 * $7500;
                   $x295 = $7501;
                   $7502 = $x290;
                   $7503 = 1.0 * $7502;
                   $x296 = $7503;
                   $7504 = (($4) + 176|0);
                   $7505 = +HEAPF64[$7504>>3];
                   $7506 = $x290;
                   $7507 = $7505 * $7506;
                   $7508 = (($4) + 384|0);
                   $7509 = +HEAPF64[$7508>>3];
                   $7510 = $7507 + $7509;
                   HEAPF64[$evalcond119>>3] = $7510;
                   $7511 = (($4) + 408|0);
                   $7512 = +HEAPF64[$7511>>3];
                   $7513 = (($4) + 176|0);
                   $7514 = +HEAPF64[$7513>>3];
                   $7515 = -1.0 * $7514;
                   $7516 = $x294;
                   $7517 = $7515 * $7516;
                   $7518 = $7512 + $7517;
                   $7519 = (($evalcond119) + 8|0);
                   HEAPF64[$7519>>3] = $7518;
                   $7520 = (($4) + 336|0);
                   $7521 = +HEAPF64[$7520>>3];
                   $7522 = (($4) + 136|0);
                   $7523 = +HEAPF64[$7522>>3];
                   $7524 = $7521 * $7523;
                   $7525 = (($4) + 128|0);
                   $7526 = +HEAPF64[$7525>>3];
                   $7527 = (($4) + 264|0);
                   $7528 = +HEAPF64[$7527>>3];
                   $7529 = $7526 * $7528;
                   $7530 = $7524 + $7529;
                   $7531 = (($4) + 168|0);
                   $7532 = +HEAPF64[$7531>>3];
                   $7533 = $x289;
                   $7534 = $7532 * $7533;
                   $7535 = $7530 + $7534;
                   $7536 = (($evalcond119) + 16|0);
                   HEAPF64[$7536>>3] = $7535;
                   $7537 = $x294;
                   $7538 = -1.0 * $7537;
                   $7539 = (($4) + 128|0);
                   $7540 = +HEAPF64[$7539>>3];
                   $7541 = (($4) + 312|0);
                   $7542 = +HEAPF64[$7541>>3];
                   $7543 = $7540 * $7542;
                   $7544 = $7538 + $7543;
                   $7545 = (($4) + 240|0);
                   $7546 = +HEAPF64[$7545>>3];
                   $7547 = -1.0 * $7546;
                   $7548 = $x293;
                   $7549 = $7547 * $7548;
                   $7550 = $7544 + $7549;
                   $7551 = (($evalcond119) + 24|0);
                   HEAPF64[$7551>>3] = $7550;
                   $7552 = (($4) + 264|0);
                   $7553 = +HEAPF64[$7552>>3];
                   $7554 = -1.0 * $7553;
                   $7555 = $x293;
                   $7556 = $7554 * $7555;
                   $7557 = $x296;
                   $7558 = -1.0 * $7557;
                   $7559 = $7556 + $7558;
                   $7560 = (($4) + 128|0);
                   $7561 = +HEAPF64[$7560>>3];
                   $7562 = (($4) + 336|0);
                   $7563 = +HEAPF64[$7562>>3];
                   $7564 = $7561 * $7563;
                   $7565 = $7559 + $7564;
                   $7566 = (($evalcond119) + 32|0);
                   HEAPF64[$7566>>3] = $7565;
                   $7567 = $x289;
                   $7568 = $x292;
                   $7569 = $7567 * $7568;
                   $7570 = (($4) + 264|0);
                   $7571 = +HEAPF64[$7570>>3];
                   $7572 = $7569 + $7571;
                   $7573 = (($4) + 136|0);
                   $7574 = +HEAPF64[$7573>>3];
                   $7575 = $x290;
                   $7576 = $7574 * $7575;
                   $7577 = $7572 + $7576;
                   $7578 = (($evalcond119) + 40|0);
                   HEAPF64[$7578>>3] = $7577;
                   $7579 = (($4) + 312|0);
                   $7580 = +HEAPF64[$7579>>3];
                   $7581 = (($4) + 136|0);
                   $7582 = +HEAPF64[$7581>>3];
                   $7583 = $7580 * $7582;
                   $7584 = (($4) + 168|0);
                   $7585 = +HEAPF64[$7584>>3];
                   $7586 = -1.0 * $7585;
                   $7587 = $x296;
                   $7588 = $7586 * $7587;
                   $7589 = $7583 + $7588;
                   $7590 = $x291;
                   $7591 = $7589 + $7590;
                   $7592 = (($evalcond119) + 48|0);
                   HEAPF64[$7592>>3] = $7591;
                   $7593 = $x295;
                   $7594 = (($4) + 240|0);
                   $7595 = +HEAPF64[$7594>>3];
                   $7596 = $7593 + $7595;
                   $7597 = $x292;
                   $7598 = -1.0 * $7597;
                   $7599 = $x296;
                   $7600 = $7598 * $7599;
                   $7601 = $7596 + $7600;
                   $7602 = (($evalcond119) + 56|0);
                   HEAPF64[$7602>>3] = $7601;
                   $7603 = (($4) + 168|0);
                   $7604 = +HEAPF64[$7603>>3];
                   $7605 = $x295;
                   $7606 = $7604 * $7605;
                   $7607 = (($4) + 128|0);
                   $7608 = +HEAPF64[$7607>>3];
                   $7609 = -1.0 * $7608;
                   $7610 = $x296;
                   $7611 = $7609 * $7610;
                   $7612 = $7606 + $7611;
                   $7613 = (($4) + 336|0);
                   $7614 = +HEAPF64[$7613>>3];
                   $7615 = $7612 + $7614;
                   $7616 = (($evalcond119) + 64|0);
                   HEAPF64[$7616>>3] = $7615;
                   $7617 = (($4) + 128|0);
                   $7618 = +HEAPF64[$7617>>3];
                   $7619 = -1.0 * $7618;
                   $7620 = $x294;
                   $7621 = $7619 * $7620;
                   $7622 = (($4) + 312|0);
                   $7623 = +HEAPF64[$7622>>3];
                   $7624 = $7621 + $7623;
                   $7625 = (($4) + 168|0);
                   $7626 = +HEAPF64[$7625>>3];
                   $7627 = -1.0 * $7626;
                   $7628 = $x290;
                   $7629 = $7627 * $7628;
                   $7630 = $x293;
                   $7631 = $7629 * $7630;
                   $7632 = $7624 + $7631;
                   $7633 = (($evalcond119) + 72|0);
                   HEAPF64[$7633>>3] = $7632;
                   $7634 = (($4) + 384|0);
                   $7635 = +HEAPF64[$7634>>3];
                   $7636 = (($4) + 176|0);
                   $7637 = +HEAPF64[$7636>>3];
                   $7638 = $7635 * $7637;
                   $7639 = (($4) + 168|0);
                   $7640 = +HEAPF64[$7639>>3];
                   $7641 = -1.0 * $7640;
                   $7642 = $x291;
                   $7643 = $7641 * $7642;
                   $7644 = $7638 + $7643;
                   $7645 = (($4) + 168|0);
                   $7646 = +HEAPF64[$7645>>3];
                   $7647 = -1.0 * $7646;
                   $7648 = (($4) + 312|0);
                   $7649 = +HEAPF64[$7648>>3];
                   $7650 = $7647 * $7649;
                   $7651 = $x293;
                   $7652 = $7650 * $7651;
                   $7653 = $7644 + $7652;
                   $7654 = $x290;
                   $7655 = $7653 + $7654;
                   $7656 = (($evalcond119) + 80|0);
                   HEAPF64[$7656>>3] = $7655;
                   $7657 = (($4) + 264|0);
                   $7658 = +HEAPF64[$7657>>3];
                   $7659 = -1.0 * $7658;
                   $7660 = $x292;
                   $7661 = $7659 * $7660;
                   $7662 = $x294;
                   $7663 = -1.0 * $7662;
                   $7664 = $7661 + $7663;
                   $7665 = (($4) + 168|0);
                   $7666 = +HEAPF64[$7665>>3];
                   $7667 = -1.0 * $7666;
                   $7668 = (($4) + 336|0);
                   $7669 = +HEAPF64[$7668>>3];
                   $7670 = $7667 * $7669;
                   $7671 = $x293;
                   $7672 = $7670 * $7671;
                   $7673 = $7664 + $7672;
                   $7674 = (($4) + 408|0);
                   $7675 = +HEAPF64[$7674>>3];
                   $7676 = (($4) + 176|0);
                   $7677 = +HEAPF64[$7676>>3];
                   $7678 = $7675 * $7677;
                   $7679 = $7673 + $7678;
                   $7680 = (($evalcond119) + 88|0);
                   HEAPF64[$7680>>3] = $7679;
                   $7681 = +HEAPF64[$evalcond119>>3];
                   $7682 = (+__Z5IKabsd($7681));
                   $7683 = $7682 > 5.0000000000000004E-6;
                   do {
                    if (!($7683)) {
                     $7684 = (($evalcond119) + 8|0);
                     $7685 = +HEAPF64[$7684>>3];
                     $7686 = (+__Z5IKabsd($7685));
                     $7687 = $7686 > 5.0000000000000004E-6;
                     if ($7687) {
                      break;
                     }
                     $7688 = (($evalcond119) + 16|0);
                     $7689 = +HEAPF64[$7688>>3];
                     $7690 = (+__Z5IKabsd($7689));
                     $7691 = $7690 > 5.0000000000000004E-6;
                     if ($7691) {
                      break;
                     }
                     $7692 = (($evalcond119) + 24|0);
                     $7693 = +HEAPF64[$7692>>3];
                     $7694 = (+__Z5IKabsd($7693));
                     $7695 = $7694 > 5.0000000000000004E-6;
                     if ($7695) {
                      break;
                     }
                     $7696 = (($evalcond119) + 32|0);
                     $7697 = +HEAPF64[$7696>>3];
                     $7698 = (+__Z5IKabsd($7697));
                     $7699 = $7698 > 5.0000000000000004E-6;
                     if ($7699) {
                      break;
                     }
                     $7700 = (($evalcond119) + 40|0);
                     $7701 = +HEAPF64[$7700>>3];
                     $7702 = (+__Z5IKabsd($7701));
                     $7703 = $7702 > 5.0000000000000004E-6;
                     if ($7703) {
                      break;
                     }
                     $7704 = (($evalcond119) + 48|0);
                     $7705 = +HEAPF64[$7704>>3];
                     $7706 = (+__Z5IKabsd($7705));
                     $7707 = $7706 > 5.0000000000000004E-6;
                     if ($7707) {
                      break;
                     }
                     $7708 = (($evalcond119) + 56|0);
                     $7709 = +HEAPF64[$7708>>3];
                     $7710 = (+__Z5IKabsd($7709));
                     $7711 = $7710 > 5.0000000000000004E-6;
                     if ($7711) {
                      break;
                     }
                     $7712 = (($evalcond119) + 64|0);
                     $7713 = +HEAPF64[$7712>>3];
                     $7714 = (+__Z5IKabsd($7713));
                     $7715 = $7714 > 5.0000000000000004E-6;
                     if ($7715) {
                      break;
                     }
                     $7716 = (($evalcond119) + 72|0);
                     $7717 = +HEAPF64[$7716>>3];
                     $7718 = (+__Z5IKabsd($7717));
                     $7719 = $7718 > 5.0000000000000004E-6;
                     if ($7719) {
                      break;
                     }
                     $7720 = (($evalcond119) + 80|0);
                     $7721 = +HEAPF64[$7720>>3];
                     $7722 = (+__Z5IKabsd($7721));
                     $7723 = $7722 > 5.0000000000000004E-6;
                     if ($7723) {
                      break;
                     }
                     $7724 = (($evalcond119) + 88|0);
                     $7725 = +HEAPF64[$7724>>3];
                     $7726 = (+__Z5IKabsd($7725));
                     $7727 = $7726 > 5.0000000000000004E-6;
                     if ($7727) {
                      break;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos120,6);
                     __THREW__ = 0;
                     $7728 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7729 = __THREW__; __THREW__ = 0;
                     $7730 = $7729&1;
                     if ($7730) {
                      label = 1052;
                      break L1;
                     }
                     $7731 = (($7728) + 17|0);
                     HEAP8[$7731>>0] = 1;
                     $7732 = +HEAPF64[$4>>3];
                     __THREW__ = 0;
                     $7733 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7734 = __THREW__; __THREW__ = 0;
                     $7735 = $7734&1;
                     if ($7735) {
                      label = 1052;
                      break L1;
                     }
                     $7736 = (($7733) + 8|0);
                     HEAPF64[$7736>>3] = $7732;
                     $7737 = (($4) + 536|0);
                     $7738 = HEAP8[$7737>>0]|0;
                     __THREW__ = 0;
                     $7739 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7740 = __THREW__; __THREW__ = 0;
                     $7741 = $7740&1;
                     if ($7741) {
                      label = 1052;
                      break L1;
                     }
                     $7742 = (($7739) + 19|0);
                     HEAP8[$7742>>0] = $7738;
                     $7743 = (($4) + 536|0);
                     $7744 = (($7743) + 1|0);
                     $7745 = HEAP8[$7744>>0]|0;
                     __THREW__ = 0;
                     $7746 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7747 = __THREW__; __THREW__ = 0;
                     $7748 = $7747&1;
                     if ($7748) {
                      label = 1052;
                      break L1;
                     }
                     $7749 = (($7746) + 19|0);
                     $7750 = (($7749) + 1|0);
                     HEAP8[$7750>>0] = $7745;
                     $7751 = (($4) + 538|0);
                     $7752 = HEAP8[$7751>>0]|0;
                     __THREW__ = 0;
                     $7753 = (invoke_iii(381,($vinfos120|0),0)|0);
                     $7754 = __THREW__; __THREW__ = 0;
                     $7755 = $7754&1;
                     if ($7755) {
                      label = 1052;
                      break L1;
                     }
                     $7756 = (($7753) + 18|0);
                     HEAP8[$7756>>0] = $7752;
                     __THREW__ = 0;
                     $7757 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7758 = __THREW__; __THREW__ = 0;
                     $7759 = $7758&1;
                     if ($7759) {
                      label = 1052;
                      break L1;
                     }
                     $7760 = (($7757) + 17|0);
                     HEAP8[$7760>>0] = 1;
                     $7761 = (($4) + 40|0);
                     $7762 = +HEAPF64[$7761>>3];
                     __THREW__ = 0;
                     $7763 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7764 = __THREW__; __THREW__ = 0;
                     $7765 = $7764&1;
                     if ($7765) {
                      label = 1052;
                      break L1;
                     }
                     $7766 = (($7763) + 8|0);
                     HEAPF64[$7766>>3] = $7762;
                     $7767 = (($4) + 539|0);
                     $7768 = HEAP8[$7767>>0]|0;
                     __THREW__ = 0;
                     $7769 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7770 = __THREW__; __THREW__ = 0;
                     $7771 = $7770&1;
                     if ($7771) {
                      label = 1052;
                      break L1;
                     }
                     $7772 = (($7769) + 19|0);
                     HEAP8[$7772>>0] = $7768;
                     $7773 = (($4) + 539|0);
                     $7774 = (($7773) + 1|0);
                     $7775 = HEAP8[$7774>>0]|0;
                     __THREW__ = 0;
                     $7776 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7777 = __THREW__; __THREW__ = 0;
                     $7778 = $7777&1;
                     if ($7778) {
                      label = 1052;
                      break L1;
                     }
                     $7779 = (($7776) + 19|0);
                     $7780 = (($7779) + 1|0);
                     HEAP8[$7780>>0] = $7775;
                     $7781 = (($4) + 541|0);
                     $7782 = HEAP8[$7781>>0]|0;
                     __THREW__ = 0;
                     $7783 = (invoke_iii(381,($vinfos120|0),1)|0);
                     $7784 = __THREW__; __THREW__ = 0;
                     $7785 = $7784&1;
                     if ($7785) {
                      label = 1052;
                      break L1;
                     }
                     $7786 = (($7783) + 18|0);
                     HEAP8[$7786>>0] = $7782;
                     __THREW__ = 0;
                     $7787 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7788 = __THREW__; __THREW__ = 0;
                     $7789 = $7788&1;
                     if ($7789) {
                      label = 1052;
                      break L1;
                     }
                     $7790 = (($7787) + 17|0);
                     HEAP8[$7790>>0] = 1;
                     $7791 = (($4) + 80|0);
                     $7792 = +HEAPF64[$7791>>3];
                     __THREW__ = 0;
                     $7793 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7794 = __THREW__; __THREW__ = 0;
                     $7795 = $7794&1;
                     if ($7795) {
                      label = 1052;
                      break L1;
                     }
                     $7796 = (($7793) + 8|0);
                     HEAPF64[$7796>>3] = $7792;
                     $7797 = (($4) + 542|0);
                     $7798 = HEAP8[$7797>>0]|0;
                     __THREW__ = 0;
                     $7799 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7800 = __THREW__; __THREW__ = 0;
                     $7801 = $7800&1;
                     if ($7801) {
                      label = 1052;
                      break L1;
                     }
                     $7802 = (($7799) + 19|0);
                     HEAP8[$7802>>0] = $7798;
                     $7803 = (($4) + 542|0);
                     $7804 = (($7803) + 1|0);
                     $7805 = HEAP8[$7804>>0]|0;
                     __THREW__ = 0;
                     $7806 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7807 = __THREW__; __THREW__ = 0;
                     $7808 = $7807&1;
                     if ($7808) {
                      label = 1052;
                      break L1;
                     }
                     $7809 = (($7806) + 19|0);
                     $7810 = (($7809) + 1|0);
                     HEAP8[$7810>>0] = $7805;
                     $7811 = (($4) + 544|0);
                     $7812 = HEAP8[$7811>>0]|0;
                     __THREW__ = 0;
                     $7813 = (invoke_iii(381,($vinfos120|0),2)|0);
                     $7814 = __THREW__; __THREW__ = 0;
                     $7815 = $7814&1;
                     if ($7815) {
                      label = 1052;
                      break L1;
                     }
                     $7816 = (($7813) + 18|0);
                     HEAP8[$7816>>0] = $7812;
                     __THREW__ = 0;
                     $7817 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7818 = __THREW__; __THREW__ = 0;
                     $7819 = $7818&1;
                     if ($7819) {
                      label = 1052;
                      break L1;
                     }
                     $7820 = (($7817) + 17|0);
                     HEAP8[$7820>>0] = 1;
                     $7821 = (($4) + 120|0);
                     $7822 = +HEAPF64[$7821>>3];
                     __THREW__ = 0;
                     $7823 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7824 = __THREW__; __THREW__ = 0;
                     $7825 = $7824&1;
                     if ($7825) {
                      label = 1052;
                      break L1;
                     }
                     $7826 = (($7823) + 8|0);
                     HEAPF64[$7826>>3] = $7822;
                     $7827 = (($4) + 545|0);
                     $7828 = HEAP8[$7827>>0]|0;
                     __THREW__ = 0;
                     $7829 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7830 = __THREW__; __THREW__ = 0;
                     $7831 = $7830&1;
                     if ($7831) {
                      label = 1052;
                      break L1;
                     }
                     $7832 = (($7829) + 19|0);
                     HEAP8[$7832>>0] = $7828;
                     $7833 = (($4) + 545|0);
                     $7834 = (($7833) + 1|0);
                     $7835 = HEAP8[$7834>>0]|0;
                     __THREW__ = 0;
                     $7836 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7837 = __THREW__; __THREW__ = 0;
                     $7838 = $7837&1;
                     if ($7838) {
                      label = 1052;
                      break L1;
                     }
                     $7839 = (($7836) + 19|0);
                     $7840 = (($7839) + 1|0);
                     HEAP8[$7840>>0] = $7835;
                     $7841 = (($4) + 547|0);
                     $7842 = HEAP8[$7841>>0]|0;
                     __THREW__ = 0;
                     $7843 = (invoke_iii(381,($vinfos120|0),3)|0);
                     $7844 = __THREW__; __THREW__ = 0;
                     $7845 = $7844&1;
                     if ($7845) {
                      label = 1052;
                      break L1;
                     }
                     $7846 = (($7843) + 18|0);
                     HEAP8[$7846>>0] = $7842;
                     __THREW__ = 0;
                     $7847 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7848 = __THREW__; __THREW__ = 0;
                     $7849 = $7848&1;
                     if ($7849) {
                      label = 1052;
                      break L1;
                     }
                     $7850 = (($7847) + 17|0);
                     HEAP8[$7850>>0] = 1;
                     $7851 = (($4) + 160|0);
                     $7852 = +HEAPF64[$7851>>3];
                     __THREW__ = 0;
                     $7853 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7854 = __THREW__; __THREW__ = 0;
                     $7855 = $7854&1;
                     if ($7855) {
                      label = 1052;
                      break L1;
                     }
                     $7856 = (($7853) + 8|0);
                     HEAPF64[$7856>>3] = $7852;
                     $7857 = (($4) + 548|0);
                     $7858 = HEAP8[$7857>>0]|0;
                     __THREW__ = 0;
                     $7859 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7860 = __THREW__; __THREW__ = 0;
                     $7861 = $7860&1;
                     if ($7861) {
                      label = 1052;
                      break L1;
                     }
                     $7862 = (($7859) + 19|0);
                     HEAP8[$7862>>0] = $7858;
                     $7863 = (($4) + 548|0);
                     $7864 = (($7863) + 1|0);
                     $7865 = HEAP8[$7864>>0]|0;
                     __THREW__ = 0;
                     $7866 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7867 = __THREW__; __THREW__ = 0;
                     $7868 = $7867&1;
                     if ($7868) {
                      label = 1052;
                      break L1;
                     }
                     $7869 = (($7866) + 19|0);
                     $7870 = (($7869) + 1|0);
                     HEAP8[$7870>>0] = $7865;
                     $7871 = (($4) + 550|0);
                     $7872 = HEAP8[$7871>>0]|0;
                     __THREW__ = 0;
                     $7873 = (invoke_iii(381,($vinfos120|0),4)|0);
                     $7874 = __THREW__; __THREW__ = 0;
                     $7875 = $7874&1;
                     if ($7875) {
                      label = 1052;
                      break L1;
                     }
                     $7876 = (($7873) + 18|0);
                     HEAP8[$7876>>0] = $7872;
                     __THREW__ = 0;
                     $7877 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7878 = __THREW__; __THREW__ = 0;
                     $7879 = $7878&1;
                     if ($7879) {
                      label = 1052;
                      break L1;
                     }
                     $7880 = (($7877) + 17|0);
                     HEAP8[$7880>>0] = 1;
                     $7881 = (($4) + 200|0);
                     $7882 = +HEAPF64[$7881>>3];
                     __THREW__ = 0;
                     $7883 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7884 = __THREW__; __THREW__ = 0;
                     $7885 = $7884&1;
                     if ($7885) {
                      label = 1052;
                      break L1;
                     }
                     $7886 = (($7883) + 8|0);
                     HEAPF64[$7886>>3] = $7882;
                     $7887 = (($4) + 551|0);
                     $7888 = HEAP8[$7887>>0]|0;
                     __THREW__ = 0;
                     $7889 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7890 = __THREW__; __THREW__ = 0;
                     $7891 = $7890&1;
                     if ($7891) {
                      label = 1052;
                      break L1;
                     }
                     $7892 = (($7889) + 19|0);
                     HEAP8[$7892>>0] = $7888;
                     $7893 = (($4) + 551|0);
                     $7894 = (($7893) + 1|0);
                     $7895 = HEAP8[$7894>>0]|0;
                     __THREW__ = 0;
                     $7896 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7897 = __THREW__; __THREW__ = 0;
                     $7898 = $7897&1;
                     if ($7898) {
                      label = 1052;
                      break L1;
                     }
                     $7899 = (($7896) + 19|0);
                     $7900 = (($7899) + 1|0);
                     HEAP8[$7900>>0] = $7895;
                     $7901 = (($4) + 553|0);
                     $7902 = HEAP8[$7901>>0]|0;
                     __THREW__ = 0;
                     $7903 = (invoke_iii(381,($vinfos120|0),5)|0);
                     $7904 = __THREW__; __THREW__ = 0;
                     $7905 = $7904&1;
                     if ($7905) {
                      label = 1052;
                      break L1;
                     }
                     $7906 = (($7903) + 18|0);
                     HEAP8[$7906>>0] = $7902;
                     __THREW__ = 0;
                     invoke_vii(382,($vfree121|0),0);
                     $7907 = __THREW__; __THREW__ = 0;
                     $7908 = $7907&1;
                     if ($7908) {
                      label = 1052;
                      break L1;
                     }
                     $7909 = $1;
                     $7910 = HEAP32[$7909>>2]|0;
                     $7911 = (($7910) + 8|0);
                     $7912 = HEAP32[$7911>>2]|0;
                     __THREW__ = 0;
                     (invoke_iiii($7912|0,($7909|0),($vinfos120|0),($vfree121|0))|0);
                     $7913 = __THREW__; __THREW__ = 0;
                     $7914 = $7913&1;
                     if ($7914) {
                      label = 1053;
                      break L1;
                     }
                     __THREW__ = 0;
                     invoke_vi(366,($vfree121|0));
                     $7915 = __THREW__; __THREW__ = 0;
                     $7916 = $7915&1;
                     if ($7916) {
                      label = 1052;
                      break L1;
                     }
                     __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos120);
                     break L1600;
                    }
                   } while(0);
                  } else {
                  }
                 } while(0);
                 $7917 = $ij5117;
                 $7918 = (($7917) + 1)|0;
                 $ij5117 = $7918;
                }
               }
              } while(0);
              if ((label|0) == 288) {
               label = 0;
               $bgotonextstatement32 = 1;
               $2841 = (($4) + 432|0);
               $2842 = +HEAPF64[$2841>>3];
               $2843 = (($4) + 168|0);
               $2844 = +HEAPF64[$2843>>3];
               $2845 = -1.0 * $2844;
               $2846 = $2842 + $2845;
               $x210 = $2846;
               $2847 = (($4) + 176|0);
               $2848 = +HEAPF64[$2847>>3];
               $2849 = -1.0 * $2848;
               $2850 = (($4) + 360|0);
               $2851 = +HEAPF64[$2850>>3];
               $2852 = $2849 + $2851;
               $x211 = $2852;
               $2853 = (($4) + 168|0);
               $2854 = +HEAPF64[$2853>>3];
               $2855 = 1.0 * $2854;
               $x212 = $2855;
               $2856 = (($4) + 176|0);
               $2857 = +HEAPF64[$2856>>3];
               $2858 = 1.0 * $2857;
               $x213 = $2858;
               $2859 = (($4) + 120|0);
               $2860 = +HEAPF64[$2859>>3];
               $2861 = -1.5707963267949001 + $2860;
               $2862 = (+__Z5IKabsd($2861));
               $2863 = 3.14159265358979 + $2862;
               $2864 = (+__Z6IKfmoddd($2863,6.2831853071795898));
               $2865 = -3.14159265358979 + $2864;
               HEAPF64[$evalcond31>>3] = $2865;
               $2866 = $x210;
               $2867 = (($evalcond31) + 8|0);
               HEAPF64[$2867>>3] = $2866;
               $2868 = $x210;
               $2869 = (($evalcond31) + 16|0);
               HEAPF64[$2869>>3] = $2868;
               $2870 = (($4) + 288|0);
               $2871 = +HEAPF64[$2870>>3];
               $2872 = (($evalcond31) + 24|0);
               HEAPF64[$2872>>3] = $2871;
               $2873 = $x211;
               $2874 = (($evalcond31) + 32|0);
               HEAPF64[$2874>>3] = $2873;
               $2875 = $x211;
               $2876 = (($evalcond31) + 40|0);
               HEAPF64[$2876>>3] = $2875;
               $2877 = (($4) + 360|0);
               $2878 = +HEAPF64[$2877>>3];
               $2879 = -1.0 * $2878;
               $2880 = $x212;
               $2881 = $2879 * $2880;
               $2882 = (($4) + 432|0);
               $2883 = +HEAPF64[$2882>>3];
               $2884 = (($4) + 176|0);
               $2885 = +HEAPF64[$2884>>3];
               $2886 = $2883 * $2885;
               $2887 = $2881 + $2886;
               $2888 = (($evalcond31) + 48|0);
               HEAPF64[$2888>>3] = $2887;
               $2889 = (($4) + 312|0);
               $2890 = +HEAPF64[$2889>>3];
               $2891 = -1.0 * $2890;
               $2892 = $x213;
               $2893 = $2891 * $2892;
               $2894 = (($4) + 384|0);
               $2895 = +HEAPF64[$2894>>3];
               $2896 = -1.0 * $2895;
               $2897 = $x212;
               $2898 = $2896 * $2897;
               $2899 = $2893 + $2898;
               $2900 = (($evalcond31) + 56|0);
               HEAPF64[$2900>>3] = $2899;
               $2901 = (($4) + 336|0);
               $2902 = +HEAPF64[$2901>>3];
               $2903 = -1.0 * $2902;
               $2904 = $x213;
               $2905 = $2903 * $2904;
               $2906 = (($4) + 408|0);
               $2907 = +HEAPF64[$2906>>3];
               $2908 = -1.0 * $2907;
               $2909 = $x212;
               $2910 = $2908 * $2909;
               $2911 = $2905 + $2910;
               $2912 = (($evalcond31) + 64|0);
               HEAPF64[$2912>>3] = $2911;
               $2913 = (($4) + 360|0);
               $2914 = +HEAPF64[$2913>>3];
               $2915 = -1.0 * $2914;
               $2916 = $x213;
               $2917 = $2915 * $2916;
               $2918 = 1.0 + $2917;
               $2919 = (($4) + 432|0);
               $2920 = +HEAPF64[$2919>>3];
               $2921 = -1.0 * $2920;
               $2922 = $x212;
               $2923 = $2921 * $2922;
               $2924 = $2918 + $2923;
               $2925 = (($evalcond31) + 72|0);
               HEAPF64[$2925>>3] = $2924;
               $2926 = +HEAPF64[$evalcond31>>3];
               $2927 = (+__Z5IKabsd($2926));
               $2928 = $2927 < 9.9999999999999995E-7;
               do {
                if ($2928) {
                 $2929 = (($evalcond31) + 8|0);
                 $2930 = +HEAPF64[$2929>>3];
                 $2931 = (+__Z5IKabsd($2930));
                 $2932 = $2931 < 9.9999999999999995E-7;
                 if (!($2932)) {
                  label = 370;
                  break;
                 }
                 $2933 = (($evalcond31) + 16|0);
                 $2934 = +HEAPF64[$2933>>3];
                 $2935 = (+__Z5IKabsd($2934));
                 $2936 = $2935 < 9.9999999999999995E-7;
                 if (!($2936)) {
                  label = 370;
                  break;
                 }
                 $2937 = (($evalcond31) + 24|0);
                 $2938 = +HEAPF64[$2937>>3];
                 $2939 = (+__Z5IKabsd($2938));
                 $2940 = $2939 < 9.9999999999999995E-7;
                 if (!($2940)) {
                  label = 370;
                  break;
                 }
                 $2941 = (($evalcond31) + 32|0);
                 $2942 = +HEAPF64[$2941>>3];
                 $2943 = (+__Z5IKabsd($2942));
                 $2944 = $2943 < 9.9999999999999995E-7;
                 if (!($2944)) {
                  label = 370;
                  break;
                 }
                 $2945 = (($evalcond31) + 40|0);
                 $2946 = +HEAPF64[$2945>>3];
                 $2947 = (+__Z5IKabsd($2946));
                 $2948 = $2947 < 9.9999999999999995E-7;
                 if (!($2948)) {
                  label = 370;
                  break;
                 }
                 $2949 = (($evalcond31) + 48|0);
                 $2950 = +HEAPF64[$2949>>3];
                 $2951 = (+__Z5IKabsd($2950));
                 $2952 = $2951 < 9.9999999999999995E-7;
                 if (!($2952)) {
                  label = 370;
                  break;
                 }
                 $2953 = (($evalcond31) + 56|0);
                 $2954 = +HEAPF64[$2953>>3];
                 $2955 = (+__Z5IKabsd($2954));
                 $2956 = $2955 < 9.9999999999999995E-7;
                 if (!($2956)) {
                  label = 370;
                  break;
                 }
                 $2957 = (($evalcond31) + 64|0);
                 $2958 = +HEAPF64[$2957>>3];
                 $2959 = (+__Z5IKabsd($2958));
                 $2960 = $2959 < 9.9999999999999995E-7;
                 if (!($2960)) {
                  label = 370;
                  break;
                 }
                 $2961 = (($evalcond31) + 72|0);
                 $2962 = +HEAPF64[$2961>>3];
                 $2963 = (+__Z5IKabsd($2962));
                 $2964 = $2963 < 9.9999999999999995E-7;
                 if (!($2964)) {
                  label = 370;
                  break;
                 }
                 $bgotonextstatement32 = 0;
                 ;HEAP8[$j5valid36+0>>0]=0|0;
                 $2965 = (($4) + 553|0);
                 HEAP8[$2965>>0] = 1;
                 $2966 = (($4) + 408|0);
                 $2967 = +HEAPF64[$2966>>3];
                 $2968 = (($4) + 384|0);
                 $2969 = +HEAPF64[$2968>>3];
                 $2970 = -1.0 * $2969;
                 __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x214,$2967,$2970,1.9999999999999999E-6);
                 $2971 = (($x214) + 8|0);
                 $2972 = HEAP8[$2971>>0]|0;
                 $2973 = $2972&1;
                 if (!($2973)) {
                  break;
                 }
                 $2974 = (($4) + 360|0);
                 $2975 = +HEAPF64[$2974>>3];
                 $2976 = (+__Z6IKsignd($2975));
                 __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x215,$2976,-1);
                 $2977 = (($x215) + 8|0);
                 $2978 = HEAP8[$2977>>0]|0;
                 $2979 = $2978&1;
                 if (!($2979)) {
                  break;
                 }
                 $2980 = +HEAPF64[$x214>>3];
                 $2981 = -1.5707963267949001 + $2980;
                 $2982 = +HEAPF64[$x215>>3];
                 $2983 = 1.5707963267949001 * $2982;
                 $2984 = $2981 + $2983;
                 HEAPF64[$j5array33>>3] = $2984;
                 $2985 = +HEAPF64[$j5array33>>3];
                 $2986 = (+__Z5IKsind($2985));
                 HEAPF64[$sj5array35>>3] = $2986;
                 $2987 = +HEAPF64[$j5array33>>3];
                 $2988 = (+__Z5IKcosd($2987));
                 HEAPF64[$cj5array34>>3] = $2988;
                 $2989 = +HEAPF64[$j5array33>>3];
                 $2990 = $2989 > 3.14159265358979;
                 if ($2990) {
                  $2991 = +HEAPF64[$j5array33>>3];
                  $2992 = $2991 - 6.2831853071795898;
                  HEAPF64[$j5array33>>3] = $2992;
                 } else {
                  $2993 = +HEAPF64[$j5array33>>3];
                  $2994 = $2993 < -3.14159265358979;
                  if ($2994) {
                   $2995 = +HEAPF64[$j5array33>>3];
                   $2996 = $2995 + 6.2831853071795898;
                   HEAPF64[$j5array33>>3] = $2996;
                  }
                 }
                 HEAP8[$j5valid36>>0] = 1;
                 $ij537 = 0;
                 while(1) {
                  $2997 = $ij537;
                  $2998 = ($2997|0)<(1);
                  if (!($2998)) {
                   break;
                  }
                  $2999 = $ij537;
                  $3000 = (($j5valid36) + ($2999)|0);
                  $3001 = HEAP8[$3000>>0]|0;
                  $3002 = $3001&1;
                  L1693: do {
                   if ($3002) {
                    $3003 = $ij537;
                    $3004 = $3003&255;
                    $3005 = (($4) + 551|0);
                    HEAP8[$3005>>0] = $3004;
                    $3006 = (($4) + 551|0);
                    $3007 = (($3006) + 1|0);
                    HEAP8[$3007>>0] = -1;
                    $3008 = $ij537;
                    $3009 = (($3008) + 1)|0;
                    $iij538 = $3009;
                    L1696: while(1) {
                     $3010 = $iij538;
                     $3011 = ($3010|0)<(1);
                     if (!($3011)) {
                      break;
                     }
                     $3012 = $iij538;
                     $3013 = (($j5valid36) + ($3012)|0);
                     $3014 = HEAP8[$3013>>0]|0;
                     $3015 = $3014&1;
                     do {
                      if ($3015) {
                       $3016 = $ij537;
                       $3017 = (($cj5array34) + ($3016<<3)|0);
                       $3018 = +HEAPF64[$3017>>3];
                       $3019 = $iij538;
                       $3020 = (($cj5array34) + ($3019<<3)|0);
                       $3021 = +HEAPF64[$3020>>3];
                       $3022 = $3018 - $3021;
                       $3023 = (+__Z5IKabsd($3022));
                       $3024 = $3023 < 9.9999999999999995E-7;
                       if (!($3024)) {
                        break;
                       }
                       $3025 = $ij537;
                       $3026 = (($sj5array35) + ($3025<<3)|0);
                       $3027 = +HEAPF64[$3026>>3];
                       $3028 = $iij538;
                       $3029 = (($sj5array35) + ($3028<<3)|0);
                       $3030 = +HEAPF64[$3029>>3];
                       $3031 = $3027 - $3030;
                       $3032 = (+__Z5IKabsd($3031));
                       $3033 = $3032 < 9.9999999999999995E-7;
                       if ($3033) {
                        label = 317;
                        break L1696;
                       }
                      }
                     } while(0);
                     $3040 = $iij538;
                     $3041 = (($3040) + 1)|0;
                     $iij538 = $3041;
                    }
                    if ((label|0) == 317) {
                     label = 0;
                     $3034 = $iij538;
                     $3035 = (($j5valid36) + ($3034)|0);
                     HEAP8[$3035>>0] = 0;
                     $3036 = $iij538;
                     $3037 = $3036&255;
                     $3038 = (($4) + 551|0);
                     $3039 = (($3038) + 1|0);
                     HEAP8[$3039>>0] = $3037;
                    }
                    $3042 = $ij537;
                    $3043 = (($j5array33) + ($3042<<3)|0);
                    $3044 = +HEAPF64[$3043>>3];
                    $3045 = (($4) + 200|0);
                    HEAPF64[$3045>>3] = $3044;
                    $3046 = $ij537;
                    $3047 = (($cj5array34) + ($3046<<3)|0);
                    $3048 = +HEAPF64[$3047>>3];
                    $3049 = (($4) + 208|0);
                    HEAPF64[$3049>>3] = $3048;
                    $3050 = $ij537;
                    $3051 = (($sj5array35) + ($3050<<3)|0);
                    $3052 = +HEAPF64[$3051>>3];
                    $3053 = (($4) + 216|0);
                    HEAPF64[$3053>>3] = $3052;
                    $3054 = (($4) + 200|0);
                    $3055 = +HEAPF64[$3054>>3];
                    $3056 = (+__Z5IKsind($3055));
                    $x216 = $3056;
                    $3057 = (($4) + 200|0);
                    $3058 = +HEAPF64[$3057>>3];
                    $3059 = (+__Z5IKcosd($3058));
                    $x217 = $3059;
                    $3060 = (($4) + 432|0);
                    $3061 = +HEAPF64[$3060>>3];
                    $3062 = 1.0 * $3061;
                    $x218 = $3062;
                    $3063 = $x216;
                    $3064 = 1.0 * $3063;
                    $x219 = $3064;
                    $3065 = $x217;
                    $3066 = 1.0 * $3065;
                    $x220 = $3066;
                    $3067 = (($4) + 384|0);
                    $3068 = +HEAPF64[$3067>>3];
                    $3069 = (($4) + 360|0);
                    $3070 = +HEAPF64[$3069>>3];
                    $3071 = $x217;
                    $3072 = $3070 * $3071;
                    $3073 = $3068 + $3072;
                    HEAPF64[$evalcond39>>3] = $3073;
                    $3074 = (($4) + 432|0);
                    $3075 = +HEAPF64[$3074>>3];
                    $3076 = $x216;
                    $3077 = $3075 * $3076;
                    $3078 = (($4) + 336|0);
                    $3079 = +HEAPF64[$3078>>3];
                    $3080 = $3077 + $3079;
                    $3081 = (($evalcond39) + 8|0);
                    HEAPF64[$3081>>3] = $3080;
                    $3082 = (($4) + 360|0);
                    $3083 = +HEAPF64[$3082>>3];
                    $3084 = -1.0 * $3083;
                    $3085 = $x219;
                    $3086 = $3084 * $3085;
                    $3087 = (($4) + 408|0);
                    $3088 = +HEAPF64[$3087>>3];
                    $3089 = $3086 + $3088;
                    $3090 = (($evalcond39) + 16|0);
                    HEAPF64[$3090>>3] = $3089;
                    $3091 = $x217;
                    $3092 = -1.0 * $3091;
                    $3093 = $x218;
                    $3094 = $3092 * $3093;
                    $3095 = (($4) + 312|0);
                    $3096 = +HEAPF64[$3095>>3];
                    $3097 = $3094 + $3096;
                    $3098 = (($evalcond39) + 24|0);
                    HEAPF64[$3098>>3] = $3097;
                    $3099 = (($4) + 240|0);
                    $3100 = +HEAPF64[$3099>>3];
                    $3101 = -1.0 * $3100;
                    $3102 = $x219;
                    $3103 = -1.0 * $3102;
                    $3104 = $3101 + $3103;
                    $3105 = (($evalcond39) + 32|0);
                    HEAPF64[$3105>>3] = $3104;
                    $3106 = (($4) + 264|0);
                    $3107 = +HEAPF64[$3106>>3];
                    $3108 = -1.0 * $3107;
                    $3109 = $x220;
                    $3110 = -1.0 * $3109;
                    $3111 = $3108 + $3110;
                    $3112 = (($evalcond39) + 40|0);
                    HEAPF64[$3112>>3] = $3111;
                    $3113 = (($4) + 312|0);
                    $3114 = +HEAPF64[$3113>>3];
                    $3115 = -1.0 * $3114;
                    $3116 = $x218;
                    $3117 = $3115 * $3116;
                    $3118 = (($4) + 360|0);
                    $3119 = +HEAPF64[$3118>>3];
                    $3120 = (($4) + 384|0);
                    $3121 = +HEAPF64[$3120>>3];
                    $3122 = $3119 * $3121;
                    $3123 = $3117 + $3122;
                    $3124 = $x217;
                    $3125 = $3123 + $3124;
                    $3126 = (($evalcond39) + 48|0);
                    HEAPF64[$3126>>3] = $3125;
                    $3127 = (($4) + 336|0);
                    $3128 = +HEAPF64[$3127>>3];
                    $3129 = -1.0 * $3128;
                    $3130 = $x218;
                    $3131 = $3129 * $3130;
                    $3132 = (($4) + 360|0);
                    $3133 = +HEAPF64[$3132>>3];
                    $3134 = (($4) + 408|0);
                    $3135 = +HEAPF64[$3134>>3];
                    $3136 = $3133 * $3135;
                    $3137 = $3131 + $3136;
                    $3138 = $x219;
                    $3139 = -1.0 * $3138;
                    $3140 = $3137 + $3139;
                    $3141 = (($evalcond39) + 56|0);
                    HEAPF64[$3141>>3] = $3140;
                    $3142 = +HEAPF64[$evalcond39>>3];
                    $3143 = (+__Z5IKabsd($3142));
                    $3144 = $3143 > 5.0000000000000004E-6;
                    do {
                     if (!($3144)) {
                      $3145 = (($evalcond39) + 8|0);
                      $3146 = +HEAPF64[$3145>>3];
                      $3147 = (+__Z5IKabsd($3146));
                      $3148 = $3147 > 5.0000000000000004E-6;
                      if ($3148) {
                       break;
                      }
                      $3149 = (($evalcond39) + 16|0);
                      $3150 = +HEAPF64[$3149>>3];
                      $3151 = (+__Z5IKabsd($3150));
                      $3152 = $3151 > 5.0000000000000004E-6;
                      if ($3152) {
                       break;
                      }
                      $3153 = (($evalcond39) + 24|0);
                      $3154 = +HEAPF64[$3153>>3];
                      $3155 = (+__Z5IKabsd($3154));
                      $3156 = $3155 > 5.0000000000000004E-6;
                      if ($3156) {
                       break;
                      }
                      $3157 = (($evalcond39) + 32|0);
                      $3158 = +HEAPF64[$3157>>3];
                      $3159 = (+__Z5IKabsd($3158));
                      $3160 = $3159 > 5.0000000000000004E-6;
                      if ($3160) {
                       break;
                      }
                      $3161 = (($evalcond39) + 40|0);
                      $3162 = +HEAPF64[$3161>>3];
                      $3163 = (+__Z5IKabsd($3162));
                      $3164 = $3163 > 5.0000000000000004E-6;
                      if ($3164) {
                       break;
                      }
                      $3165 = (($evalcond39) + 48|0);
                      $3166 = +HEAPF64[$3165>>3];
                      $3167 = (+__Z5IKabsd($3166));
                      $3168 = $3167 > 5.0000000000000004E-6;
                      if ($3168) {
                       break;
                      }
                      $3169 = (($evalcond39) + 56|0);
                      $3170 = +HEAPF64[$3169>>3];
                      $3171 = (+__Z5IKabsd($3170));
                      $3172 = $3171 > 5.0000000000000004E-6;
                      if ($3172) {
                       break;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos40,6);
                      __THREW__ = 0;
                      $3173 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3174 = __THREW__; __THREW__ = 0;
                      $3175 = $3174&1;
                      if ($3175) {
                       label = 364;
                       break L1;
                      }
                      $3176 = (($3173) + 17|0);
                      HEAP8[$3176>>0] = 1;
                      $3177 = +HEAPF64[$4>>3];
                      __THREW__ = 0;
                      $3178 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3179 = __THREW__; __THREW__ = 0;
                      $3180 = $3179&1;
                      if ($3180) {
                       label = 364;
                       break L1;
                      }
                      $3181 = (($3178) + 8|0);
                      HEAPF64[$3181>>3] = $3177;
                      $3182 = (($4) + 536|0);
                      $3183 = HEAP8[$3182>>0]|0;
                      __THREW__ = 0;
                      $3184 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3185 = __THREW__; __THREW__ = 0;
                      $3186 = $3185&1;
                      if ($3186) {
                       label = 364;
                       break L1;
                      }
                      $3187 = (($3184) + 19|0);
                      HEAP8[$3187>>0] = $3183;
                      $3188 = (($4) + 536|0);
                      $3189 = (($3188) + 1|0);
                      $3190 = HEAP8[$3189>>0]|0;
                      __THREW__ = 0;
                      $3191 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3192 = __THREW__; __THREW__ = 0;
                      $3193 = $3192&1;
                      if ($3193) {
                       label = 364;
                       break L1;
                      }
                      $3194 = (($3191) + 19|0);
                      $3195 = (($3194) + 1|0);
                      HEAP8[$3195>>0] = $3190;
                      $3196 = (($4) + 538|0);
                      $3197 = HEAP8[$3196>>0]|0;
                      __THREW__ = 0;
                      $3198 = (invoke_iii(381,($vinfos40|0),0)|0);
                      $3199 = __THREW__; __THREW__ = 0;
                      $3200 = $3199&1;
                      if ($3200) {
                       label = 364;
                       break L1;
                      }
                      $3201 = (($3198) + 18|0);
                      HEAP8[$3201>>0] = $3197;
                      __THREW__ = 0;
                      $3202 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3203 = __THREW__; __THREW__ = 0;
                      $3204 = $3203&1;
                      if ($3204) {
                       label = 364;
                       break L1;
                      }
                      $3205 = (($3202) + 17|0);
                      HEAP8[$3205>>0] = 1;
                      $3206 = (($4) + 40|0);
                      $3207 = +HEAPF64[$3206>>3];
                      __THREW__ = 0;
                      $3208 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3209 = __THREW__; __THREW__ = 0;
                      $3210 = $3209&1;
                      if ($3210) {
                       label = 364;
                       break L1;
                      }
                      $3211 = (($3208) + 8|0);
                      HEAPF64[$3211>>3] = $3207;
                      $3212 = (($4) + 539|0);
                      $3213 = HEAP8[$3212>>0]|0;
                      __THREW__ = 0;
                      $3214 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3215 = __THREW__; __THREW__ = 0;
                      $3216 = $3215&1;
                      if ($3216) {
                       label = 364;
                       break L1;
                      }
                      $3217 = (($3214) + 19|0);
                      HEAP8[$3217>>0] = $3213;
                      $3218 = (($4) + 539|0);
                      $3219 = (($3218) + 1|0);
                      $3220 = HEAP8[$3219>>0]|0;
                      __THREW__ = 0;
                      $3221 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3222 = __THREW__; __THREW__ = 0;
                      $3223 = $3222&1;
                      if ($3223) {
                       label = 364;
                       break L1;
                      }
                      $3224 = (($3221) + 19|0);
                      $3225 = (($3224) + 1|0);
                      HEAP8[$3225>>0] = $3220;
                      $3226 = (($4) + 541|0);
                      $3227 = HEAP8[$3226>>0]|0;
                      __THREW__ = 0;
                      $3228 = (invoke_iii(381,($vinfos40|0),1)|0);
                      $3229 = __THREW__; __THREW__ = 0;
                      $3230 = $3229&1;
                      if ($3230) {
                       label = 364;
                       break L1;
                      }
                      $3231 = (($3228) + 18|0);
                      HEAP8[$3231>>0] = $3227;
                      __THREW__ = 0;
                      $3232 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3233 = __THREW__; __THREW__ = 0;
                      $3234 = $3233&1;
                      if ($3234) {
                       label = 364;
                       break L1;
                      }
                      $3235 = (($3232) + 17|0);
                      HEAP8[$3235>>0] = 1;
                      $3236 = (($4) + 80|0);
                      $3237 = +HEAPF64[$3236>>3];
                      __THREW__ = 0;
                      $3238 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3239 = __THREW__; __THREW__ = 0;
                      $3240 = $3239&1;
                      if ($3240) {
                       label = 364;
                       break L1;
                      }
                      $3241 = (($3238) + 8|0);
                      HEAPF64[$3241>>3] = $3237;
                      $3242 = (($4) + 542|0);
                      $3243 = HEAP8[$3242>>0]|0;
                      __THREW__ = 0;
                      $3244 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3245 = __THREW__; __THREW__ = 0;
                      $3246 = $3245&1;
                      if ($3246) {
                       label = 364;
                       break L1;
                      }
                      $3247 = (($3244) + 19|0);
                      HEAP8[$3247>>0] = $3243;
                      $3248 = (($4) + 542|0);
                      $3249 = (($3248) + 1|0);
                      $3250 = HEAP8[$3249>>0]|0;
                      __THREW__ = 0;
                      $3251 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3252 = __THREW__; __THREW__ = 0;
                      $3253 = $3252&1;
                      if ($3253) {
                       label = 364;
                       break L1;
                      }
                      $3254 = (($3251) + 19|0);
                      $3255 = (($3254) + 1|0);
                      HEAP8[$3255>>0] = $3250;
                      $3256 = (($4) + 544|0);
                      $3257 = HEAP8[$3256>>0]|0;
                      __THREW__ = 0;
                      $3258 = (invoke_iii(381,($vinfos40|0),2)|0);
                      $3259 = __THREW__; __THREW__ = 0;
                      $3260 = $3259&1;
                      if ($3260) {
                       label = 364;
                       break L1;
                      }
                      $3261 = (($3258) + 18|0);
                      HEAP8[$3261>>0] = $3257;
                      __THREW__ = 0;
                      $3262 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3263 = __THREW__; __THREW__ = 0;
                      $3264 = $3263&1;
                      if ($3264) {
                       label = 364;
                       break L1;
                      }
                      $3265 = (($3262) + 17|0);
                      HEAP8[$3265>>0] = 1;
                      $3266 = (($4) + 120|0);
                      $3267 = +HEAPF64[$3266>>3];
                      __THREW__ = 0;
                      $3268 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3269 = __THREW__; __THREW__ = 0;
                      $3270 = $3269&1;
                      if ($3270) {
                       label = 364;
                       break L1;
                      }
                      $3271 = (($3268) + 8|0);
                      HEAPF64[$3271>>3] = $3267;
                      $3272 = (($4) + 545|0);
                      $3273 = HEAP8[$3272>>0]|0;
                      __THREW__ = 0;
                      $3274 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3275 = __THREW__; __THREW__ = 0;
                      $3276 = $3275&1;
                      if ($3276) {
                       label = 364;
                       break L1;
                      }
                      $3277 = (($3274) + 19|0);
                      HEAP8[$3277>>0] = $3273;
                      $3278 = (($4) + 545|0);
                      $3279 = (($3278) + 1|0);
                      $3280 = HEAP8[$3279>>0]|0;
                      __THREW__ = 0;
                      $3281 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3282 = __THREW__; __THREW__ = 0;
                      $3283 = $3282&1;
                      if ($3283) {
                       label = 364;
                       break L1;
                      }
                      $3284 = (($3281) + 19|0);
                      $3285 = (($3284) + 1|0);
                      HEAP8[$3285>>0] = $3280;
                      $3286 = (($4) + 547|0);
                      $3287 = HEAP8[$3286>>0]|0;
                      __THREW__ = 0;
                      $3288 = (invoke_iii(381,($vinfos40|0),3)|0);
                      $3289 = __THREW__; __THREW__ = 0;
                      $3290 = $3289&1;
                      if ($3290) {
                       label = 364;
                       break L1;
                      }
                      $3291 = (($3288) + 18|0);
                      HEAP8[$3291>>0] = $3287;
                      __THREW__ = 0;
                      $3292 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3293 = __THREW__; __THREW__ = 0;
                      $3294 = $3293&1;
                      if ($3294) {
                       label = 364;
                       break L1;
                      }
                      $3295 = (($3292) + 17|0);
                      HEAP8[$3295>>0] = 1;
                      $3296 = (($4) + 160|0);
                      $3297 = +HEAPF64[$3296>>3];
                      __THREW__ = 0;
                      $3298 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3299 = __THREW__; __THREW__ = 0;
                      $3300 = $3299&1;
                      if ($3300) {
                       label = 364;
                       break L1;
                      }
                      $3301 = (($3298) + 8|0);
                      HEAPF64[$3301>>3] = $3297;
                      $3302 = (($4) + 548|0);
                      $3303 = HEAP8[$3302>>0]|0;
                      __THREW__ = 0;
                      $3304 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3305 = __THREW__; __THREW__ = 0;
                      $3306 = $3305&1;
                      if ($3306) {
                       label = 364;
                       break L1;
                      }
                      $3307 = (($3304) + 19|0);
                      HEAP8[$3307>>0] = $3303;
                      $3308 = (($4) + 548|0);
                      $3309 = (($3308) + 1|0);
                      $3310 = HEAP8[$3309>>0]|0;
                      __THREW__ = 0;
                      $3311 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3312 = __THREW__; __THREW__ = 0;
                      $3313 = $3312&1;
                      if ($3313) {
                       label = 364;
                       break L1;
                      }
                      $3314 = (($3311) + 19|0);
                      $3315 = (($3314) + 1|0);
                      HEAP8[$3315>>0] = $3310;
                      $3316 = (($4) + 550|0);
                      $3317 = HEAP8[$3316>>0]|0;
                      __THREW__ = 0;
                      $3318 = (invoke_iii(381,($vinfos40|0),4)|0);
                      $3319 = __THREW__; __THREW__ = 0;
                      $3320 = $3319&1;
                      if ($3320) {
                       label = 364;
                       break L1;
                      }
                      $3321 = (($3318) + 18|0);
                      HEAP8[$3321>>0] = $3317;
                      __THREW__ = 0;
                      $3322 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3323 = __THREW__; __THREW__ = 0;
                      $3324 = $3323&1;
                      if ($3324) {
                       label = 364;
                       break L1;
                      }
                      $3325 = (($3322) + 17|0);
                      HEAP8[$3325>>0] = 1;
                      $3326 = (($4) + 200|0);
                      $3327 = +HEAPF64[$3326>>3];
                      __THREW__ = 0;
                      $3328 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3329 = __THREW__; __THREW__ = 0;
                      $3330 = $3329&1;
                      if ($3330) {
                       label = 364;
                       break L1;
                      }
                      $3331 = (($3328) + 8|0);
                      HEAPF64[$3331>>3] = $3327;
                      $3332 = (($4) + 551|0);
                      $3333 = HEAP8[$3332>>0]|0;
                      __THREW__ = 0;
                      $3334 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3335 = __THREW__; __THREW__ = 0;
                      $3336 = $3335&1;
                      if ($3336) {
                       label = 364;
                       break L1;
                      }
                      $3337 = (($3334) + 19|0);
                      HEAP8[$3337>>0] = $3333;
                      $3338 = (($4) + 551|0);
                      $3339 = (($3338) + 1|0);
                      $3340 = HEAP8[$3339>>0]|0;
                      __THREW__ = 0;
                      $3341 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3342 = __THREW__; __THREW__ = 0;
                      $3343 = $3342&1;
                      if ($3343) {
                       label = 364;
                       break L1;
                      }
                      $3344 = (($3341) + 19|0);
                      $3345 = (($3344) + 1|0);
                      HEAP8[$3345>>0] = $3340;
                      $3346 = (($4) + 553|0);
                      $3347 = HEAP8[$3346>>0]|0;
                      __THREW__ = 0;
                      $3348 = (invoke_iii(381,($vinfos40|0),5)|0);
                      $3349 = __THREW__; __THREW__ = 0;
                      $3350 = $3349&1;
                      if ($3350) {
                       label = 364;
                       break L1;
                      }
                      $3351 = (($3348) + 18|0);
                      HEAP8[$3351>>0] = $3347;
                      __THREW__ = 0;
                      invoke_vii(382,($vfree41|0),0);
                      $3352 = __THREW__; __THREW__ = 0;
                      $3353 = $3352&1;
                      if ($3353) {
                       label = 364;
                       break L1;
                      }
                      $3354 = $1;
                      $3355 = HEAP32[$3354>>2]|0;
                      $3356 = (($3355) + 8|0);
                      $3357 = HEAP32[$3356>>2]|0;
                      __THREW__ = 0;
                      (invoke_iiii($3357|0,($3354|0),($vinfos40|0),($vfree41|0))|0);
                      $3358 = __THREW__; __THREW__ = 0;
                      $3359 = $3358&1;
                      if ($3359) {
                       label = 365;
                       break L1;
                      }
                      __THREW__ = 0;
                      invoke_vi(366,($vfree41|0));
                      $3360 = __THREW__; __THREW__ = 0;
                      $3361 = $3360&1;
                      if ($3361) {
                       label = 364;
                       break L1;
                      }
                      __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos40);
                      break L1693;
                     }
                    } while(0);
                   } else {
                   }
                  } while(0);
                  $3362 = $ij537;
                  $3363 = (($3362) + 1)|0;
                  $ij537 = $3363;
                 }
                 label = 370;
                } else {
                 label = 370;
                }
               } while(0);
               if ((label|0) == 370) {
                label = 0;
               }
               $3372 = $bgotonextstatement32;
               $3373 = $3372&1;
               if ($3373) {
                $bgotonextstatement42 = 1;
                $3374 = (($4) + 432|0);
                $3375 = +HEAPF64[$3374>>3];
                $3376 = (($4) + 168|0);
                $3377 = +HEAPF64[$3376>>3];
                $3378 = -1.0 * $3377;
                $3379 = $3375 + $3378;
                $x221 = $3379;
                $3380 = (($4) + 168|0);
                $3381 = +HEAPF64[$3380>>3];
                $3382 = 1.0 * $3381;
                $x222 = $3382;
                $3383 = (($4) + 120|0);
                $3384 = +HEAPF64[$3383>>3];
                $3385 = 1.5707963267949001 + $3384;
                $3386 = (+__Z5IKabsd($3385));
                $3387 = 3.14159265358979 + $3386;
                $3388 = (+__Z6IKfmoddd($3387,6.2831853071795898));
                $3389 = -3.14159265358979 + $3388;
                HEAPF64[$evalcond31>>3] = $3389;
                $3390 = $x221;
                $3391 = (($evalcond31) + 8|0);
                HEAPF64[$3391>>3] = $3390;
                $3392 = $x221;
                $3393 = (($evalcond31) + 16|0);
                HEAPF64[$3393>>3] = $3392;
                $3394 = (($4) + 288|0);
                $3395 = +HEAPF64[$3394>>3];
                $3396 = (($evalcond31) + 24|0);
                HEAPF64[$3396>>3] = $3395;
                $3397 = (($4) + 176|0);
                $3398 = +HEAPF64[$3397>>3];
                $3399 = (($4) + 360|0);
                $3400 = +HEAPF64[$3399>>3];
                $3401 = $3398 + $3400;
                $3402 = (($evalcond31) + 32|0);
                HEAPF64[$3402>>3] = $3401;
                $3403 = (($4) + 176|0);
                $3404 = +HEAPF64[$3403>>3];
                $3405 = -1.0 * $3404;
                $3406 = (($4) + 360|0);
                $3407 = +HEAPF64[$3406>>3];
                $3408 = -1.0 * $3407;
                $3409 = $3405 + $3408;
                $3410 = (($evalcond31) + 40|0);
                HEAPF64[$3410>>3] = $3409;
                $3411 = (($4) + 168|0);
                $3412 = +HEAPF64[$3411>>3];
                $3413 = (($4) + 360|0);
                $3414 = +HEAPF64[$3413>>3];
                $3415 = $3412 * $3414;
                $3416 = (($4) + 432|0);
                $3417 = +HEAPF64[$3416>>3];
                $3418 = (($4) + 176|0);
                $3419 = +HEAPF64[$3418>>3];
                $3420 = $3417 * $3419;
                $3421 = $3415 + $3420;
                $3422 = (($evalcond31) + 48|0);
                HEAPF64[$3422>>3] = $3421;
                $3423 = (($4) + 312|0);
                $3424 = +HEAPF64[$3423>>3];
                $3425 = (($4) + 176|0);
                $3426 = +HEAPF64[$3425>>3];
                $3427 = $3424 * $3426;
                $3428 = (($4) + 384|0);
                $3429 = +HEAPF64[$3428>>3];
                $3430 = -1.0 * $3429;
                $3431 = $x222;
                $3432 = $3430 * $3431;
                $3433 = $3427 + $3432;
                $3434 = (($evalcond31) + 56|0);
                HEAPF64[$3434>>3] = $3433;
                $3435 = (($4) + 336|0);
                $3436 = +HEAPF64[$3435>>3];
                $3437 = (($4) + 176|0);
                $3438 = +HEAPF64[$3437>>3];
                $3439 = $3436 * $3438;
                $3440 = (($4) + 408|0);
                $3441 = +HEAPF64[$3440>>3];
                $3442 = -1.0 * $3441;
                $3443 = $x222;
                $3444 = $3442 * $3443;
                $3445 = $3439 + $3444;
                $3446 = (($evalcond31) + 64|0);
                HEAPF64[$3446>>3] = $3445;
                $3447 = (($4) + 360|0);
                $3448 = +HEAPF64[$3447>>3];
                $3449 = (($4) + 176|0);
                $3450 = +HEAPF64[$3449>>3];
                $3451 = $3448 * $3450;
                $3452 = 1.0 + $3451;
                $3453 = (($4) + 432|0);
                $3454 = +HEAPF64[$3453>>3];
                $3455 = -1.0 * $3454;
                $3456 = $x222;
                $3457 = $3455 * $3456;
                $3458 = $3452 + $3457;
                $3459 = (($evalcond31) + 72|0);
                HEAPF64[$3459>>3] = $3458;
                $3460 = +HEAPF64[$evalcond31>>3];
                $3461 = (+__Z5IKabsd($3460));
                $3462 = $3461 < 9.9999999999999995E-7;
                L1758: do {
                 if ($3462) {
                  $3463 = (($evalcond31) + 8|0);
                  $3464 = +HEAPF64[$3463>>3];
                  $3465 = (+__Z5IKabsd($3464));
                  $3466 = $3465 < 9.9999999999999995E-7;
                  if (!($3466)) {
                   label = 454;
                   break;
                  }
                  $3467 = (($evalcond31) + 16|0);
                  $3468 = +HEAPF64[$3467>>3];
                  $3469 = (+__Z5IKabsd($3468));
                  $3470 = $3469 < 9.9999999999999995E-7;
                  if (!($3470)) {
                   label = 454;
                   break;
                  }
                  $3471 = (($evalcond31) + 24|0);
                  $3472 = +HEAPF64[$3471>>3];
                  $3473 = (+__Z5IKabsd($3472));
                  $3474 = $3473 < 9.9999999999999995E-7;
                  if (!($3474)) {
                   label = 454;
                   break;
                  }
                  $3475 = (($evalcond31) + 32|0);
                  $3476 = +HEAPF64[$3475>>3];
                  $3477 = (+__Z5IKabsd($3476));
                  $3478 = $3477 < 9.9999999999999995E-7;
                  if (!($3478)) {
                   label = 454;
                   break;
                  }
                  $3479 = (($evalcond31) + 40|0);
                  $3480 = +HEAPF64[$3479>>3];
                  $3481 = (+__Z5IKabsd($3480));
                  $3482 = $3481 < 9.9999999999999995E-7;
                  if (!($3482)) {
                   label = 454;
                   break;
                  }
                  $3483 = (($evalcond31) + 48|0);
                  $3484 = +HEAPF64[$3483>>3];
                  $3485 = (+__Z5IKabsd($3484));
                  $3486 = $3485 < 9.9999999999999995E-7;
                  if (!($3486)) {
                   label = 454;
                   break;
                  }
                  $3487 = (($evalcond31) + 56|0);
                  $3488 = +HEAPF64[$3487>>3];
                  $3489 = (+__Z5IKabsd($3488));
                  $3490 = $3489 < 9.9999999999999995E-7;
                  if (!($3490)) {
                   label = 454;
                   break;
                  }
                  $3491 = (($evalcond31) + 64|0);
                  $3492 = +HEAPF64[$3491>>3];
                  $3493 = (+__Z5IKabsd($3492));
                  $3494 = $3493 < 9.9999999999999995E-7;
                  if (!($3494)) {
                   label = 454;
                   break;
                  }
                  $3495 = (($evalcond31) + 72|0);
                  $3496 = +HEAPF64[$3495>>3];
                  $3497 = (+__Z5IKabsd($3496));
                  $3498 = $3497 < 9.9999999999999995E-7;
                  if (!($3498)) {
                   label = 454;
                   break;
                  }
                  $bgotonextstatement42 = 0;
                  ;HEAP8[$j5valid46+0>>0]=0|0;
                  $3499 = (($4) + 553|0);
                  HEAP8[$3499>>0] = 1;
                  $3500 = (($4) + 240|0);
                  $3501 = +HEAPF64[$3500>>3];
                  $3502 = (+__Z5IKabsd($3501));
                  $3503 = $3502 < 1.9999999999999999E-6;
                  do {
                   if ($3503) {
                    $3504 = (($4) + 264|0);
                    $3505 = +HEAPF64[$3504>>3];
                    $3506 = (+__Z5IKabsd($3505));
                    $3507 = $3506 < 1.9999999999999999E-6;
                    if (!($3507)) {
                     break;
                    }
                    $3508 = (($4) + 240|0);
                    $3509 = +HEAPF64[$3508>>3];
                    $3510 = (+__Z5IKsqrd($3509));
                    $3511 = (($4) + 264|0);
                    $3512 = +HEAPF64[$3511>>3];
                    $3513 = (+__Z5IKsqrd($3512));
                    $3514 = $3510 + $3513;
                    $3515 = $3514 - 1.0;
                    $3516 = (+__Z5IKabsd($3515));
                    $3517 = $3516 <= 1.9999999999999999E-6;
                    if (!($3517)) {
                     break;
                    }
                    break L1758;
                   }
                  } while(0);
                  $3518 = (($4) + 240|0);
                  $3519 = +HEAPF64[$3518>>3];
                  $3520 = (($4) + 264|0);
                  $3521 = +HEAPF64[$3520>>3];
                  $3522 = (+__Z7IKatan2dd($3519,$3521));
                  HEAPF64[$j5array43>>3] = $3522;
                  $3523 = +HEAPF64[$j5array43>>3];
                  $3524 = (+__Z5IKsind($3523));
                  HEAPF64[$sj5array45>>3] = $3524;
                  $3525 = +HEAPF64[$j5array43>>3];
                  $3526 = (+__Z5IKcosd($3525));
                  HEAPF64[$cj5array44>>3] = $3526;
                  $3527 = +HEAPF64[$j5array43>>3];
                  $3528 = $3527 > 3.14159265358979;
                  if ($3528) {
                   $3529 = +HEAPF64[$j5array43>>3];
                   $3530 = $3529 - 6.2831853071795898;
                   HEAPF64[$j5array43>>3] = $3530;
                  } else {
                   $3531 = +HEAPF64[$j5array43>>3];
                   $3532 = $3531 < -3.14159265358979;
                   if ($3532) {
                    $3533 = +HEAPF64[$j5array43>>3];
                    $3534 = $3533 + 6.2831853071795898;
                    HEAPF64[$j5array43>>3] = $3534;
                   }
                  }
                  HEAP8[$j5valid46>>0] = 1;
                  $ij547 = 0;
                  while(1) {
                   $3535 = $ij547;
                   $3536 = ($3535|0)<(1);
                   if (!($3536)) {
                    break;
                   }
                   $3537 = $ij547;
                   $3538 = (($j5valid46) + ($3537)|0);
                   $3539 = HEAP8[$3538>>0]|0;
                   $3540 = $3539&1;
                   L1784: do {
                    if ($3540) {
                     $3541 = $ij547;
                     $3542 = $3541&255;
                     $3543 = (($4) + 551|0);
                     HEAP8[$3543>>0] = $3542;
                     $3544 = (($4) + 551|0);
                     $3545 = (($3544) + 1|0);
                     HEAP8[$3545>>0] = -1;
                     $3546 = $ij547;
                     $3547 = (($3546) + 1)|0;
                     $iij548 = $3547;
                     L1787: while(1) {
                      $3548 = $iij548;
                      $3549 = ($3548|0)<(1);
                      if (!($3549)) {
                       break;
                      }
                      $3550 = $iij548;
                      $3551 = (($j5valid46) + ($3550)|0);
                      $3552 = HEAP8[$3551>>0]|0;
                      $3553 = $3552&1;
                      do {
                       if ($3553) {
                        $3554 = $ij547;
                        $3555 = (($cj5array44) + ($3554<<3)|0);
                        $3556 = +HEAPF64[$3555>>3];
                        $3557 = $iij548;
                        $3558 = (($cj5array44) + ($3557<<3)|0);
                        $3559 = +HEAPF64[$3558>>3];
                        $3560 = $3556 - $3559;
                        $3561 = (+__Z5IKabsd($3560));
                        $3562 = $3561 < 9.9999999999999995E-7;
                        if (!($3562)) {
                         break;
                        }
                        $3563 = $ij547;
                        $3564 = (($sj5array45) + ($3563<<3)|0);
                        $3565 = +HEAPF64[$3564>>3];
                        $3566 = $iij548;
                        $3567 = (($sj5array45) + ($3566<<3)|0);
                        $3568 = +HEAPF64[$3567>>3];
                        $3569 = $3565 - $3568;
                        $3570 = (+__Z5IKabsd($3569));
                        $3571 = $3570 < 9.9999999999999995E-7;
                        if ($3571) {
                         label = 401;
                         break L1787;
                        }
                       }
                      } while(0);
                      $3578 = $iij548;
                      $3579 = (($3578) + 1)|0;
                      $iij548 = $3579;
                     }
                     if ((label|0) == 401) {
                      label = 0;
                      $3572 = $iij548;
                      $3573 = (($j5valid46) + ($3572)|0);
                      HEAP8[$3573>>0] = 0;
                      $3574 = $iij548;
                      $3575 = $3574&255;
                      $3576 = (($4) + 551|0);
                      $3577 = (($3576) + 1|0);
                      HEAP8[$3577>>0] = $3575;
                     }
                     $3580 = $ij547;
                     $3581 = (($j5array43) + ($3580<<3)|0);
                     $3582 = +HEAPF64[$3581>>3];
                     $3583 = (($4) + 200|0);
                     HEAPF64[$3583>>3] = $3582;
                     $3584 = $ij547;
                     $3585 = (($cj5array44) + ($3584<<3)|0);
                     $3586 = +HEAPF64[$3585>>3];
                     $3587 = (($4) + 208|0);
                     HEAPF64[$3587>>3] = $3586;
                     $3588 = $ij547;
                     $3589 = (($sj5array45) + ($3588<<3)|0);
                     $3590 = +HEAPF64[$3589>>3];
                     $3591 = (($4) + 216|0);
                     HEAPF64[$3591>>3] = $3590;
                     $3592 = (($4) + 200|0);
                     $3593 = +HEAPF64[$3592>>3];
                     $3594 = (+__Z5IKsind($3593));
                     $x223 = $3594;
                     $3595 = (($4) + 200|0);
                     $3596 = +HEAPF64[$3595>>3];
                     $3597 = (+__Z5IKcosd($3596));
                     $x224 = $3597;
                     $3598 = (($4) + 360|0);
                     $3599 = +HEAPF64[$3598>>3];
                     $3600 = 1.0 * $3599;
                     $x225 = $3600;
                     $3601 = $x223;
                     $3602 = 1.0 * $3601;
                     $x226 = $3602;
                     $3603 = $x224;
                     $3604 = 1.0 * $3603;
                     $x227 = $3604;
                     $3605 = (($4) + 360|0);
                     $3606 = +HEAPF64[$3605>>3];
                     $3607 = $x223;
                     $3608 = $3606 * $3607;
                     $3609 = (($4) + 408|0);
                     $3610 = +HEAPF64[$3609>>3];
                     $3611 = $3608 + $3610;
                     HEAPF64[$evalcond49>>3] = $3611;
                     $3612 = (($4) + 240|0);
                     $3613 = +HEAPF64[$3612>>3];
                     $3614 = $x226;
                     $3615 = -1.0 * $3614;
                     $3616 = $3613 + $3615;
                     $3617 = (($evalcond49) + 8|0);
                     HEAPF64[$3617>>3] = $3616;
                     $3618 = (($4) + 264|0);
                     $3619 = +HEAPF64[$3618>>3];
                     $3620 = $x227;
                     $3621 = -1.0 * $3620;
                     $3622 = $3619 + $3621;
                     $3623 = (($evalcond49) + 16|0);
                     HEAPF64[$3623>>3] = $3622;
                     $3624 = $x224;
                     $3625 = -1.0 * $3624;
                     $3626 = $x225;
                     $3627 = $3625 * $3626;
                     $3628 = (($4) + 384|0);
                     $3629 = +HEAPF64[$3628>>3];
                     $3630 = $3627 + $3629;
                     $3631 = (($evalcond49) + 24|0);
                     HEAPF64[$3631>>3] = $3630;
                     $3632 = (($4) + 432|0);
                     $3633 = +HEAPF64[$3632>>3];
                     $3634 = $x223;
                     $3635 = $3633 * $3634;
                     $3636 = (($4) + 336|0);
                     $3637 = +HEAPF64[$3636>>3];
                     $3638 = -1.0 * $3637;
                     $3639 = $3635 + $3638;
                     $3640 = (($evalcond49) + 32|0);
                     HEAPF64[$3640>>3] = $3639;
                     $3641 = (($4) + 312|0);
                     $3642 = +HEAPF64[$3641>>3];
                     $3643 = -1.0 * $3642;
                     $3644 = (($4) + 432|0);
                     $3645 = +HEAPF64[$3644>>3];
                     $3646 = -1.0 * $3645;
                     $3647 = $x227;
                     $3648 = $3646 * $3647;
                     $3649 = $3643 + $3648;
                     $3650 = (($evalcond49) + 40|0);
                     HEAPF64[$3650>>3] = $3649;
                     $3651 = $x224;
                     $3652 = (($4) + 312|0);
                     $3653 = +HEAPF64[$3652>>3];
                     $3654 = (($4) + 432|0);
                     $3655 = +HEAPF64[$3654>>3];
                     $3656 = $3653 * $3655;
                     $3657 = $3651 + $3656;
                     $3658 = (($4) + 384|0);
                     $3659 = +HEAPF64[$3658>>3];
                     $3660 = -1.0 * $3659;
                     $3661 = $x225;
                     $3662 = $3660 * $3661;
                     $3663 = $3657 + $3662;
                     $3664 = (($evalcond49) + 48|0);
                     HEAPF64[$3664>>3] = $3663;
                     $3665 = (($4) + 336|0);
                     $3666 = +HEAPF64[$3665>>3];
                     $3667 = (($4) + 432|0);
                     $3668 = +HEAPF64[$3667>>3];
                     $3669 = $3666 * $3668;
                     $3670 = (($4) + 408|0);
                     $3671 = +HEAPF64[$3670>>3];
                     $3672 = -1.0 * $3671;
                     $3673 = $x225;
                     $3674 = $3672 * $3673;
                     $3675 = $3669 + $3674;
                     $3676 = $x226;
                     $3677 = -1.0 * $3676;
                     $3678 = $3675 + $3677;
                     $3679 = (($evalcond49) + 56|0);
                     HEAPF64[$3679>>3] = $3678;
                     $3680 = +HEAPF64[$evalcond49>>3];
                     $3681 = (+__Z5IKabsd($3680));
                     $3682 = $3681 > 5.0000000000000004E-6;
                     do {
                      if (!($3682)) {
                       $3683 = (($evalcond49) + 8|0);
                       $3684 = +HEAPF64[$3683>>3];
                       $3685 = (+__Z5IKabsd($3684));
                       $3686 = $3685 > 5.0000000000000004E-6;
                       if ($3686) {
                        break;
                       }
                       $3687 = (($evalcond49) + 16|0);
                       $3688 = +HEAPF64[$3687>>3];
                       $3689 = (+__Z5IKabsd($3688));
                       $3690 = $3689 > 5.0000000000000004E-6;
                       if ($3690) {
                        break;
                       }
                       $3691 = (($evalcond49) + 24|0);
                       $3692 = +HEAPF64[$3691>>3];
                       $3693 = (+__Z5IKabsd($3692));
                       $3694 = $3693 > 5.0000000000000004E-6;
                       if ($3694) {
                        break;
                       }
                       $3695 = (($evalcond49) + 32|0);
                       $3696 = +HEAPF64[$3695>>3];
                       $3697 = (+__Z5IKabsd($3696));
                       $3698 = $3697 > 5.0000000000000004E-6;
                       if ($3698) {
                        break;
                       }
                       $3699 = (($evalcond49) + 40|0);
                       $3700 = +HEAPF64[$3699>>3];
                       $3701 = (+__Z5IKabsd($3700));
                       $3702 = $3701 > 5.0000000000000004E-6;
                       if ($3702) {
                        break;
                       }
                       $3703 = (($evalcond49) + 48|0);
                       $3704 = +HEAPF64[$3703>>3];
                       $3705 = (+__Z5IKabsd($3704));
                       $3706 = $3705 > 5.0000000000000004E-6;
                       if ($3706) {
                        break;
                       }
                       $3707 = (($evalcond49) + 56|0);
                       $3708 = +HEAPF64[$3707>>3];
                       $3709 = (+__Z5IKabsd($3708));
                       $3710 = $3709 > 5.0000000000000004E-6;
                       if ($3710) {
                        break;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos50,6);
                       __THREW__ = 0;
                       $3711 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3712 = __THREW__; __THREW__ = 0;
                       $3713 = $3712&1;
                       if ($3713) {
                        label = 448;
                        break L1;
                       }
                       $3714 = (($3711) + 17|0);
                       HEAP8[$3714>>0] = 1;
                       $3715 = +HEAPF64[$4>>3];
                       __THREW__ = 0;
                       $3716 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3717 = __THREW__; __THREW__ = 0;
                       $3718 = $3717&1;
                       if ($3718) {
                        label = 448;
                        break L1;
                       }
                       $3719 = (($3716) + 8|0);
                       HEAPF64[$3719>>3] = $3715;
                       $3720 = (($4) + 536|0);
                       $3721 = HEAP8[$3720>>0]|0;
                       __THREW__ = 0;
                       $3722 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3723 = __THREW__; __THREW__ = 0;
                       $3724 = $3723&1;
                       if ($3724) {
                        label = 448;
                        break L1;
                       }
                       $3725 = (($3722) + 19|0);
                       HEAP8[$3725>>0] = $3721;
                       $3726 = (($4) + 536|0);
                       $3727 = (($3726) + 1|0);
                       $3728 = HEAP8[$3727>>0]|0;
                       __THREW__ = 0;
                       $3729 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3730 = __THREW__; __THREW__ = 0;
                       $3731 = $3730&1;
                       if ($3731) {
                        label = 448;
                        break L1;
                       }
                       $3732 = (($3729) + 19|0);
                       $3733 = (($3732) + 1|0);
                       HEAP8[$3733>>0] = $3728;
                       $3734 = (($4) + 538|0);
                       $3735 = HEAP8[$3734>>0]|0;
                       __THREW__ = 0;
                       $3736 = (invoke_iii(381,($vinfos50|0),0)|0);
                       $3737 = __THREW__; __THREW__ = 0;
                       $3738 = $3737&1;
                       if ($3738) {
                        label = 448;
                        break L1;
                       }
                       $3739 = (($3736) + 18|0);
                       HEAP8[$3739>>0] = $3735;
                       __THREW__ = 0;
                       $3740 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3741 = __THREW__; __THREW__ = 0;
                       $3742 = $3741&1;
                       if ($3742) {
                        label = 448;
                        break L1;
                       }
                       $3743 = (($3740) + 17|0);
                       HEAP8[$3743>>0] = 1;
                       $3744 = (($4) + 40|0);
                       $3745 = +HEAPF64[$3744>>3];
                       __THREW__ = 0;
                       $3746 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3747 = __THREW__; __THREW__ = 0;
                       $3748 = $3747&1;
                       if ($3748) {
                        label = 448;
                        break L1;
                       }
                       $3749 = (($3746) + 8|0);
                       HEAPF64[$3749>>3] = $3745;
                       $3750 = (($4) + 539|0);
                       $3751 = HEAP8[$3750>>0]|0;
                       __THREW__ = 0;
                       $3752 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3753 = __THREW__; __THREW__ = 0;
                       $3754 = $3753&1;
                       if ($3754) {
                        label = 448;
                        break L1;
                       }
                       $3755 = (($3752) + 19|0);
                       HEAP8[$3755>>0] = $3751;
                       $3756 = (($4) + 539|0);
                       $3757 = (($3756) + 1|0);
                       $3758 = HEAP8[$3757>>0]|0;
                       __THREW__ = 0;
                       $3759 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3760 = __THREW__; __THREW__ = 0;
                       $3761 = $3760&1;
                       if ($3761) {
                        label = 448;
                        break L1;
                       }
                       $3762 = (($3759) + 19|0);
                       $3763 = (($3762) + 1|0);
                       HEAP8[$3763>>0] = $3758;
                       $3764 = (($4) + 541|0);
                       $3765 = HEAP8[$3764>>0]|0;
                       __THREW__ = 0;
                       $3766 = (invoke_iii(381,($vinfos50|0),1)|0);
                       $3767 = __THREW__; __THREW__ = 0;
                       $3768 = $3767&1;
                       if ($3768) {
                        label = 448;
                        break L1;
                       }
                       $3769 = (($3766) + 18|0);
                       HEAP8[$3769>>0] = $3765;
                       __THREW__ = 0;
                       $3770 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3771 = __THREW__; __THREW__ = 0;
                       $3772 = $3771&1;
                       if ($3772) {
                        label = 448;
                        break L1;
                       }
                       $3773 = (($3770) + 17|0);
                       HEAP8[$3773>>0] = 1;
                       $3774 = (($4) + 80|0);
                       $3775 = +HEAPF64[$3774>>3];
                       __THREW__ = 0;
                       $3776 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3777 = __THREW__; __THREW__ = 0;
                       $3778 = $3777&1;
                       if ($3778) {
                        label = 448;
                        break L1;
                       }
                       $3779 = (($3776) + 8|0);
                       HEAPF64[$3779>>3] = $3775;
                       $3780 = (($4) + 542|0);
                       $3781 = HEAP8[$3780>>0]|0;
                       __THREW__ = 0;
                       $3782 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3783 = __THREW__; __THREW__ = 0;
                       $3784 = $3783&1;
                       if ($3784) {
                        label = 448;
                        break L1;
                       }
                       $3785 = (($3782) + 19|0);
                       HEAP8[$3785>>0] = $3781;
                       $3786 = (($4) + 542|0);
                       $3787 = (($3786) + 1|0);
                       $3788 = HEAP8[$3787>>0]|0;
                       __THREW__ = 0;
                       $3789 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3790 = __THREW__; __THREW__ = 0;
                       $3791 = $3790&1;
                       if ($3791) {
                        label = 448;
                        break L1;
                       }
                       $3792 = (($3789) + 19|0);
                       $3793 = (($3792) + 1|0);
                       HEAP8[$3793>>0] = $3788;
                       $3794 = (($4) + 544|0);
                       $3795 = HEAP8[$3794>>0]|0;
                       __THREW__ = 0;
                       $3796 = (invoke_iii(381,($vinfos50|0),2)|0);
                       $3797 = __THREW__; __THREW__ = 0;
                       $3798 = $3797&1;
                       if ($3798) {
                        label = 448;
                        break L1;
                       }
                       $3799 = (($3796) + 18|0);
                       HEAP8[$3799>>0] = $3795;
                       __THREW__ = 0;
                       $3800 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3801 = __THREW__; __THREW__ = 0;
                       $3802 = $3801&1;
                       if ($3802) {
                        label = 448;
                        break L1;
                       }
                       $3803 = (($3800) + 17|0);
                       HEAP8[$3803>>0] = 1;
                       $3804 = (($4) + 120|0);
                       $3805 = +HEAPF64[$3804>>3];
                       __THREW__ = 0;
                       $3806 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3807 = __THREW__; __THREW__ = 0;
                       $3808 = $3807&1;
                       if ($3808) {
                        label = 448;
                        break L1;
                       }
                       $3809 = (($3806) + 8|0);
                       HEAPF64[$3809>>3] = $3805;
                       $3810 = (($4) + 545|0);
                       $3811 = HEAP8[$3810>>0]|0;
                       __THREW__ = 0;
                       $3812 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3813 = __THREW__; __THREW__ = 0;
                       $3814 = $3813&1;
                       if ($3814) {
                        label = 448;
                        break L1;
                       }
                       $3815 = (($3812) + 19|0);
                       HEAP8[$3815>>0] = $3811;
                       $3816 = (($4) + 545|0);
                       $3817 = (($3816) + 1|0);
                       $3818 = HEAP8[$3817>>0]|0;
                       __THREW__ = 0;
                       $3819 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3820 = __THREW__; __THREW__ = 0;
                       $3821 = $3820&1;
                       if ($3821) {
                        label = 448;
                        break L1;
                       }
                       $3822 = (($3819) + 19|0);
                       $3823 = (($3822) + 1|0);
                       HEAP8[$3823>>0] = $3818;
                       $3824 = (($4) + 547|0);
                       $3825 = HEAP8[$3824>>0]|0;
                       __THREW__ = 0;
                       $3826 = (invoke_iii(381,($vinfos50|0),3)|0);
                       $3827 = __THREW__; __THREW__ = 0;
                       $3828 = $3827&1;
                       if ($3828) {
                        label = 448;
                        break L1;
                       }
                       $3829 = (($3826) + 18|0);
                       HEAP8[$3829>>0] = $3825;
                       __THREW__ = 0;
                       $3830 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3831 = __THREW__; __THREW__ = 0;
                       $3832 = $3831&1;
                       if ($3832) {
                        label = 448;
                        break L1;
                       }
                       $3833 = (($3830) + 17|0);
                       HEAP8[$3833>>0] = 1;
                       $3834 = (($4) + 160|0);
                       $3835 = +HEAPF64[$3834>>3];
                       __THREW__ = 0;
                       $3836 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3837 = __THREW__; __THREW__ = 0;
                       $3838 = $3837&1;
                       if ($3838) {
                        label = 448;
                        break L1;
                       }
                       $3839 = (($3836) + 8|0);
                       HEAPF64[$3839>>3] = $3835;
                       $3840 = (($4) + 548|0);
                       $3841 = HEAP8[$3840>>0]|0;
                       __THREW__ = 0;
                       $3842 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3843 = __THREW__; __THREW__ = 0;
                       $3844 = $3843&1;
                       if ($3844) {
                        label = 448;
                        break L1;
                       }
                       $3845 = (($3842) + 19|0);
                       HEAP8[$3845>>0] = $3841;
                       $3846 = (($4) + 548|0);
                       $3847 = (($3846) + 1|0);
                       $3848 = HEAP8[$3847>>0]|0;
                       __THREW__ = 0;
                       $3849 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3850 = __THREW__; __THREW__ = 0;
                       $3851 = $3850&1;
                       if ($3851) {
                        label = 448;
                        break L1;
                       }
                       $3852 = (($3849) + 19|0);
                       $3853 = (($3852) + 1|0);
                       HEAP8[$3853>>0] = $3848;
                       $3854 = (($4) + 550|0);
                       $3855 = HEAP8[$3854>>0]|0;
                       __THREW__ = 0;
                       $3856 = (invoke_iii(381,($vinfos50|0),4)|0);
                       $3857 = __THREW__; __THREW__ = 0;
                       $3858 = $3857&1;
                       if ($3858) {
                        label = 448;
                        break L1;
                       }
                       $3859 = (($3856) + 18|0);
                       HEAP8[$3859>>0] = $3855;
                       __THREW__ = 0;
                       $3860 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $3861 = __THREW__; __THREW__ = 0;
                       $3862 = $3861&1;
                       if ($3862) {
                        label = 448;
                        break L1;
                       }
                       $3863 = (($3860) + 17|0);
                       HEAP8[$3863>>0] = 1;
                       $3864 = (($4) + 200|0);
                       $3865 = +HEAPF64[$3864>>3];
                       __THREW__ = 0;
                       $3866 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $3867 = __THREW__; __THREW__ = 0;
                       $3868 = $3867&1;
                       if ($3868) {
                        label = 448;
                        break L1;
                       }
                       $3869 = (($3866) + 8|0);
                       HEAPF64[$3869>>3] = $3865;
                       $3870 = (($4) + 551|0);
                       $3871 = HEAP8[$3870>>0]|0;
                       __THREW__ = 0;
                       $3872 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $3873 = __THREW__; __THREW__ = 0;
                       $3874 = $3873&1;
                       if ($3874) {
                        label = 448;
                        break L1;
                       }
                       $3875 = (($3872) + 19|0);
                       HEAP8[$3875>>0] = $3871;
                       $3876 = (($4) + 551|0);
                       $3877 = (($3876) + 1|0);
                       $3878 = HEAP8[$3877>>0]|0;
                       __THREW__ = 0;
                       $3879 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $3880 = __THREW__; __THREW__ = 0;
                       $3881 = $3880&1;
                       if ($3881) {
                        label = 448;
                        break L1;
                       }
                       $3882 = (($3879) + 19|0);
                       $3883 = (($3882) + 1|0);
                       HEAP8[$3883>>0] = $3878;
                       $3884 = (($4) + 553|0);
                       $3885 = HEAP8[$3884>>0]|0;
                       __THREW__ = 0;
                       $3886 = (invoke_iii(381,($vinfos50|0),5)|0);
                       $3887 = __THREW__; __THREW__ = 0;
                       $3888 = $3887&1;
                       if ($3888) {
                        label = 448;
                        break L1;
                       }
                       $3889 = (($3886) + 18|0);
                       HEAP8[$3889>>0] = $3885;
                       __THREW__ = 0;
                       invoke_vii(382,($vfree51|0),0);
                       $3890 = __THREW__; __THREW__ = 0;
                       $3891 = $3890&1;
                       if ($3891) {
                        label = 448;
                        break L1;
                       }
                       $3892 = $1;
                       $3893 = HEAP32[$3892>>2]|0;
                       $3894 = (($3893) + 8|0);
                       $3895 = HEAP32[$3894>>2]|0;
                       __THREW__ = 0;
                       (invoke_iiii($3895|0,($3892|0),($vinfos50|0),($vfree51|0))|0);
                       $3896 = __THREW__; __THREW__ = 0;
                       $3897 = $3896&1;
                       if ($3897) {
                        label = 449;
                        break L1;
                       }
                       __THREW__ = 0;
                       invoke_vi(366,($vfree51|0));
                       $3898 = __THREW__; __THREW__ = 0;
                       $3899 = $3898&1;
                       if ($3899) {
                        label = 448;
                        break L1;
                       }
                       __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos50);
                       break L1784;
                      }
                     } while(0);
                    } else {
                    }
                   } while(0);
                   $3900 = $ij547;
                   $3901 = (($3900) + 1)|0;
                   $ij547 = $3901;
                  }
                  label = 454;
                 } else {
                  label = 454;
                 }
                } while(0);
                if ((label|0) == 454) {
                 label = 0;
                }
                $3910 = $bgotonextstatement42;
                $3911 = $3910&1;
                if ($3911) {
                 $bgotonextstatement52 = 1;
                 $3912 = (($4) + 360|0);
                 $3913 = +HEAPF64[$3912>>3];
                 $3914 = (($4) + 136|0);
                 $3915 = +HEAPF64[$3914>>3];
                 $3916 = $3913 * $3915;
                 $x228 = $3916;
                 $3917 = (($4) + 336|0);
                 $3918 = +HEAPF64[$3917>>3];
                 $3919 = (($4) + 136|0);
                 $3920 = +HEAPF64[$3919>>3];
                 $3921 = $3918 * $3920;
                 $x229 = $3921;
                 $3922 = (($4) + 136|0);
                 $3923 = +HEAPF64[$3922>>3];
                 $3924 = 1.0 * $3923;
                 $x230 = $3924;
                 $3925 = (($4) + 128|0);
                 $3926 = +HEAPF64[$3925>>3];
                 $3927 = 1.0 * $3926;
                 $x231 = $3927;
                 $3928 = (($4) + 288|0);
                 $3929 = +HEAPF64[$3928>>3];
                 $3930 = -1.0 * $3929;
                 $3931 = $x230;
                 $3932 = $3930 * $3931;
                 $3933 = (($4) + 128|0);
                 $3934 = +HEAPF64[$3933>>3];
                 $3935 = (($4) + 360|0);
                 $3936 = +HEAPF64[$3935>>3];
                 $3937 = $3934 * $3936;
                 $3938 = $3932 + $3937;
                 $x232 = $3938;
                 $3939 = (($4) + 160|0);
                 $3940 = +HEAPF64[$3939>>3];
                 $3941 = -1.5707963267949001 + $3940;
                 $3942 = (+__Z5IKabsd($3941));
                 $3943 = 3.14159265358979 + $3942;
                 $3944 = (+__Z6IKfmoddd($3943,6.2831853071795898));
                 $3945 = -3.14159265358979 + $3944;
                 HEAPF64[$evalcond31>>3] = $3945;
                 $3946 = (($4) + 432|0);
                 $3947 = +HEAPF64[$3946>>3];
                 $3948 = (($evalcond31) + 8|0);
                 HEAPF64[$3948>>3] = $3947;
                 $3949 = $x231;
                 $3950 = -1.0 * $3949;
                 $3951 = (($4) + 288|0);
                 $3952 = +HEAPF64[$3951>>3];
                 $3953 = $3950 + $3952;
                 $3954 = (($evalcond31) + 16|0);
                 HEAPF64[$3954>>3] = $3953;
                 $3955 = $x230;
                 $3956 = -1.0 * $3955;
                 $3957 = (($4) + 360|0);
                 $3958 = +HEAPF64[$3957>>3];
                 $3959 = $3956 + $3958;
                 $3960 = (($evalcond31) + 24|0);
                 HEAPF64[$3960>>3] = $3959;
                 $3961 = $x232;
                 $3962 = (($evalcond31) + 32|0);
                 HEAPF64[$3962>>3] = $3961;
                 $3963 = $x232;
                 $3964 = (($evalcond31) + 40|0);
                 HEAPF64[$3964>>3] = $3963;
                 $3965 = $x228;
                 $3966 = -1.0 + $3965;
                 $3967 = (($4) + 128|0);
                 $3968 = +HEAPF64[$3967>>3];
                 $3969 = (($4) + 288|0);
                 $3970 = +HEAPF64[$3969>>3];
                 $3971 = $3968 * $3970;
                 $3972 = $3966 + $3971;
                 $3973 = (($evalcond31) + 48|0);
                 HEAPF64[$3973>>3] = $3972;
                 $3974 = $x229;
                 $3975 = (($4) + 128|0);
                 $3976 = +HEAPF64[$3975>>3];
                 $3977 = (($4) + 264|0);
                 $3978 = +HEAPF64[$3977>>3];
                 $3979 = $3976 * $3978;
                 $3980 = $3974 + $3979;
                 $3981 = (($evalcond31) + 56|0);
                 HEAPF64[$3981>>3] = $3980;
                 $3982 = (($4) + 312|0);
                 $3983 = +HEAPF64[$3982>>3];
                 $3984 = (($4) + 136|0);
                 $3985 = +HEAPF64[$3984>>3];
                 $3986 = $3983 * $3985;
                 $3987 = (($4) + 128|0);
                 $3988 = +HEAPF64[$3987>>3];
                 $3989 = (($4) + 240|0);
                 $3990 = +HEAPF64[$3989>>3];
                 $3991 = $3988 * $3990;
                 $3992 = $3986 + $3991;
                 $3993 = (($evalcond31) + 64|0);
                 HEAPF64[$3993>>3] = $3992;
                 $3994 = (($4) + 312|0);
                 $3995 = +HEAPF64[$3994>>3];
                 $3996 = -1.0 * $3995;
                 $3997 = $x230;
                 $3998 = $3996 * $3997;
                 $3999 = (($4) + 240|0);
                 $4000 = +HEAPF64[$3999>>3];
                 $4001 = -1.0 * $4000;
                 $4002 = $x231;
                 $4003 = $4001 * $4002;
                 $4004 = $3998 + $4003;
                 $4005 = (($evalcond31) + 72|0);
                 HEAPF64[$4005>>3] = $4004;
                 $4006 = (($4) + 264|0);
                 $4007 = +HEAPF64[$4006>>3];
                 $4008 = -1.0 * $4007;
                 $4009 = $x231;
                 $4010 = $4008 * $4009;
                 $4011 = $x229;
                 $4012 = -1.0 * $4011;
                 $4013 = $4010 + $4012;
                 $4014 = (($evalcond31) + 80|0);
                 HEAPF64[$4014>>3] = $4013;
                 $4015 = (($4) + 288|0);
                 $4016 = +HEAPF64[$4015>>3];
                 $4017 = -1.0 * $4016;
                 $4018 = $x231;
                 $4019 = $4017 * $4018;
                 $4020 = 1.0 + $4019;
                 $4021 = $x228;
                 $4022 = -1.0 * $4021;
                 $4023 = $4020 + $4022;
                 $4024 = (($evalcond31) + 88|0);
                 HEAPF64[$4024>>3] = $4023;
                 $4025 = +HEAPF64[$evalcond31>>3];
                 $4026 = (+__Z5IKabsd($4025));
                 $4027 = $4026 < 9.9999999999999995E-7;
                 L1849: do {
                  if ($4027) {
                   $4028 = (($evalcond31) + 8|0);
                   $4029 = +HEAPF64[$4028>>3];
                   $4030 = (+__Z5IKabsd($4029));
                   $4031 = $4030 < 9.9999999999999995E-7;
                   if (!($4031)) {
                    label = 540;
                    break;
                   }
                   $4032 = (($evalcond31) + 16|0);
                   $4033 = +HEAPF64[$4032>>3];
                   $4034 = (+__Z5IKabsd($4033));
                   $4035 = $4034 < 9.9999999999999995E-7;
                   if (!($4035)) {
                    label = 540;
                    break;
                   }
                   $4036 = (($evalcond31) + 24|0);
                   $4037 = +HEAPF64[$4036>>3];
                   $4038 = (+__Z5IKabsd($4037));
                   $4039 = $4038 < 9.9999999999999995E-7;
                   if (!($4039)) {
                    label = 540;
                    break;
                   }
                   $4040 = (($evalcond31) + 32|0);
                   $4041 = +HEAPF64[$4040>>3];
                   $4042 = (+__Z5IKabsd($4041));
                   $4043 = $4042 < 9.9999999999999995E-7;
                   if (!($4043)) {
                    label = 540;
                    break;
                   }
                   $4044 = (($evalcond31) + 40|0);
                   $4045 = +HEAPF64[$4044>>3];
                   $4046 = (+__Z5IKabsd($4045));
                   $4047 = $4046 < 9.9999999999999995E-7;
                   if (!($4047)) {
                    label = 540;
                    break;
                   }
                   $4048 = (($evalcond31) + 48|0);
                   $4049 = +HEAPF64[$4048>>3];
                   $4050 = (+__Z5IKabsd($4049));
                   $4051 = $4050 < 9.9999999999999995E-7;
                   if (!($4051)) {
                    label = 540;
                    break;
                   }
                   $4052 = (($evalcond31) + 56|0);
                   $4053 = +HEAPF64[$4052>>3];
                   $4054 = (+__Z5IKabsd($4053));
                   $4055 = $4054 < 9.9999999999999995E-7;
                   if (!($4055)) {
                    label = 540;
                    break;
                   }
                   $4056 = (($evalcond31) + 64|0);
                   $4057 = +HEAPF64[$4056>>3];
                   $4058 = (+__Z5IKabsd($4057));
                   $4059 = $4058 < 9.9999999999999995E-7;
                   if (!($4059)) {
                    label = 540;
                    break;
                   }
                   $4060 = (($evalcond31) + 72|0);
                   $4061 = +HEAPF64[$4060>>3];
                   $4062 = (+__Z5IKabsd($4061));
                   $4063 = $4062 < 9.9999999999999995E-7;
                   if (!($4063)) {
                    label = 540;
                    break;
                   }
                   $4064 = (($evalcond31) + 80|0);
                   $4065 = +HEAPF64[$4064>>3];
                   $4066 = (+__Z5IKabsd($4065));
                   $4067 = $4066 < 9.9999999999999995E-7;
                   if (!($4067)) {
                    label = 540;
                    break;
                   }
                   $4068 = (($evalcond31) + 88|0);
                   $4069 = +HEAPF64[$4068>>3];
                   $4070 = (+__Z5IKabsd($4069));
                   $4071 = $4070 < 9.9999999999999995E-7;
                   if (!($4071)) {
                    label = 540;
                    break;
                   }
                   $bgotonextstatement52 = 0;
                   ;HEAP8[$j5valid56+0>>0]=0|0;
                   $4072 = (($4) + 553|0);
                   HEAP8[$4072>>0] = 1;
                   $4073 = (($4) + 408|0);
                   $4074 = +HEAPF64[$4073>>3];
                   $4075 = (+__Z5IKabsd($4074));
                   $4076 = $4075 < 1.9999999999999999E-6;
                   do {
                    if ($4076) {
                     $4077 = (($4) + 384|0);
                     $4078 = +HEAPF64[$4077>>3];
                     $4079 = -1.0 * $4078;
                     $4080 = (+__Z5IKabsd($4079));
                     $4081 = $4080 < 1.9999999999999999E-6;
                     if (!($4081)) {
                      break;
                     }
                     $4082 = (($4) + 408|0);
                     $4083 = +HEAPF64[$4082>>3];
                     $4084 = (+__Z5IKsqrd($4083));
                     $4085 = (($4) + 384|0);
                     $4086 = +HEAPF64[$4085>>3];
                     $4087 = -1.0 * $4086;
                     $4088 = (+__Z5IKsqrd($4087));
                     $4089 = $4084 + $4088;
                     $4090 = $4089 - 1.0;
                     $4091 = (+__Z5IKabsd($4090));
                     $4092 = $4091 <= 1.9999999999999999E-6;
                     if (!($4092)) {
                      break;
                     }
                     break L1849;
                    }
                   } while(0);
                   $4093 = (($4) + 408|0);
                   $4094 = +HEAPF64[$4093>>3];
                   $4095 = (($4) + 384|0);
                   $4096 = +HEAPF64[$4095>>3];
                   $4097 = -1.0 * $4096;
                   $4098 = (+__Z7IKatan2dd($4094,$4097));
                   HEAPF64[$j5array53>>3] = $4098;
                   $4099 = +HEAPF64[$j5array53>>3];
                   $4100 = (+__Z5IKsind($4099));
                   HEAPF64[$sj5array55>>3] = $4100;
                   $4101 = +HEAPF64[$j5array53>>3];
                   $4102 = (+__Z5IKcosd($4101));
                   HEAPF64[$cj5array54>>3] = $4102;
                   $4103 = +HEAPF64[$j5array53>>3];
                   $4104 = $4103 > 3.14159265358979;
                   if ($4104) {
                    $4105 = +HEAPF64[$j5array53>>3];
                    $4106 = $4105 - 6.2831853071795898;
                    HEAPF64[$j5array53>>3] = $4106;
                   } else {
                    $4107 = +HEAPF64[$j5array53>>3];
                    $4108 = $4107 < -3.14159265358979;
                    if ($4108) {
                     $4109 = +HEAPF64[$j5array53>>3];
                     $4110 = $4109 + 6.2831853071795898;
                     HEAPF64[$j5array53>>3] = $4110;
                    }
                   }
                   HEAP8[$j5valid56>>0] = 1;
                   $ij557 = 0;
                   while(1) {
                    $4111 = $ij557;
                    $4112 = ($4111|0)<(1);
                    if (!($4112)) {
                     break;
                    }
                    $4113 = $ij557;
                    $4114 = (($j5valid56) + ($4113)|0);
                    $4115 = HEAP8[$4114>>0]|0;
                    $4116 = $4115&1;
                    L1877: do {
                     if ($4116) {
                      $4117 = $ij557;
                      $4118 = $4117&255;
                      $4119 = (($4) + 551|0);
                      HEAP8[$4119>>0] = $4118;
                      $4120 = (($4) + 551|0);
                      $4121 = (($4120) + 1|0);
                      HEAP8[$4121>>0] = -1;
                      $4122 = $ij557;
                      $4123 = (($4122) + 1)|0;
                      $iij558 = $4123;
                      L1880: while(1) {
                       $4124 = $iij558;
                       $4125 = ($4124|0)<(1);
                       if (!($4125)) {
                        break;
                       }
                       $4126 = $iij558;
                       $4127 = (($j5valid56) + ($4126)|0);
                       $4128 = HEAP8[$4127>>0]|0;
                       $4129 = $4128&1;
                       do {
                        if ($4129) {
                         $4130 = $ij557;
                         $4131 = (($cj5array54) + ($4130<<3)|0);
                         $4132 = +HEAPF64[$4131>>3];
                         $4133 = $iij558;
                         $4134 = (($cj5array54) + ($4133<<3)|0);
                         $4135 = +HEAPF64[$4134>>3];
                         $4136 = $4132 - $4135;
                         $4137 = (+__Z5IKabsd($4136));
                         $4138 = $4137 < 9.9999999999999995E-7;
                         if (!($4138)) {
                          break;
                         }
                         $4139 = $ij557;
                         $4140 = (($sj5array55) + ($4139<<3)|0);
                         $4141 = +HEAPF64[$4140>>3];
                         $4142 = $iij558;
                         $4143 = (($sj5array55) + ($4142<<3)|0);
                         $4144 = +HEAPF64[$4143>>3];
                         $4145 = $4141 - $4144;
                         $4146 = (+__Z5IKabsd($4145));
                         $4147 = $4146 < 9.9999999999999995E-7;
                         if ($4147) {
                          label = 487;
                          break L1880;
                         }
                        }
                       } while(0);
                       $4154 = $iij558;
                       $4155 = (($4154) + 1)|0;
                       $iij558 = $4155;
                      }
                      if ((label|0) == 487) {
                       label = 0;
                       $4148 = $iij558;
                       $4149 = (($j5valid56) + ($4148)|0);
                       HEAP8[$4149>>0] = 0;
                       $4150 = $iij558;
                       $4151 = $4150&255;
                       $4152 = (($4) + 551|0);
                       $4153 = (($4152) + 1|0);
                       HEAP8[$4153>>0] = $4151;
                      }
                      $4156 = $ij557;
                      $4157 = (($j5array53) + ($4156<<3)|0);
                      $4158 = +HEAPF64[$4157>>3];
                      $4159 = (($4) + 200|0);
                      HEAPF64[$4159>>3] = $4158;
                      $4160 = $ij557;
                      $4161 = (($cj5array54) + ($4160<<3)|0);
                      $4162 = +HEAPF64[$4161>>3];
                      $4163 = (($4) + 208|0);
                      HEAPF64[$4163>>3] = $4162;
                      $4164 = $ij557;
                      $4165 = (($sj5array55) + ($4164<<3)|0);
                      $4166 = +HEAPF64[$4165>>3];
                      $4167 = (($4) + 216|0);
                      HEAPF64[$4167>>3] = $4166;
                      $4168 = (($4) + 200|0);
                      $4169 = +HEAPF64[$4168>>3];
                      $4170 = (+__Z5IKcosd($4169));
                      $x233 = $4170;
                      $4171 = (($4) + 200|0);
                      $4172 = +HEAPF64[$4171>>3];
                      $4173 = (+__Z5IKsind($4172));
                      $x234 = $4173;
                      $4174 = (($4) + 360|0);
                      $4175 = +HEAPF64[$4174>>3];
                      $4176 = 1.0 * $4175;
                      $x235 = $4176;
                      $4177 = $x234;
                      $4178 = 1.0 * $4177;
                      $x236 = $4178;
                      $4179 = $x233;
                      $4180 = 1.0 * $4179;
                      $x237 = $4180;
                      $4181 = $x233;
                      $4182 = (($4) + 384|0);
                      $4183 = +HEAPF64[$4182>>3];
                      $4184 = $4181 + $4183;
                      HEAPF64[$evalcond59>>3] = $4184;
                      $4185 = $x236;
                      $4186 = -1.0 * $4185;
                      $4187 = (($4) + 408|0);
                      $4188 = +HEAPF64[$4187>>3];
                      $4189 = $4186 + $4188;
                      $4190 = (($evalcond59) + 8|0);
                      HEAPF64[$4190>>3] = $4189;
                      $4191 = (($4) + 360|0);
                      $4192 = +HEAPF64[$4191>>3];
                      $4193 = $x233;
                      $4194 = $4192 * $4193;
                      $4195 = (($4) + 264|0);
                      $4196 = +HEAPF64[$4195>>3];
                      $4197 = $4194 + $4196;
                      $4198 = (($evalcond59) + 16|0);
                      HEAPF64[$4198>>3] = $4197;
                      $4199 = (($4) + 360|0);
                      $4200 = +HEAPF64[$4199>>3];
                      $4201 = $x234;
                      $4202 = $4200 * $4201;
                      $4203 = (($4) + 240|0);
                      $4204 = +HEAPF64[$4203>>3];
                      $4205 = $4202 + $4204;
                      $4206 = (($evalcond59) + 24|0);
                      HEAPF64[$4206>>3] = $4205;
                      $4207 = (($4) + 288|0);
                      $4208 = +HEAPF64[$4207>>3];
                      $4209 = -1.0 * $4208;
                      $4210 = $x237;
                      $4211 = $4209 * $4210;
                      $4212 = (($4) + 336|0);
                      $4213 = +HEAPF64[$4212>>3];
                      $4214 = $4211 + $4213;
                      $4215 = (($evalcond59) + 32|0);
                      HEAPF64[$4215>>3] = $4214;
                      $4216 = (($4) + 288|0);
                      $4217 = +HEAPF64[$4216>>3];
                      $4218 = -1.0 * $4217;
                      $4219 = $x236;
                      $4220 = $4218 * $4219;
                      $4221 = (($4) + 312|0);
                      $4222 = +HEAPF64[$4221>>3];
                      $4223 = $4220 + $4222;
                      $4224 = (($evalcond59) + 40|0);
                      HEAPF64[$4224>>3] = $4223;
                      $4225 = $x236;
                      $4226 = -1.0 * $4225;
                      $4227 = (($4) + 288|0);
                      $4228 = +HEAPF64[$4227>>3];
                      $4229 = (($4) + 312|0);
                      $4230 = +HEAPF64[$4229>>3];
                      $4231 = $4228 * $4230;
                      $4232 = $4226 + $4231;
                      $4233 = (($4) + 240|0);
                      $4234 = +HEAPF64[$4233>>3];
                      $4235 = -1.0 * $4234;
                      $4236 = $x235;
                      $4237 = $4235 * $4236;
                      $4238 = $4232 + $4237;
                      $4239 = (($evalcond59) + 48|0);
                      HEAPF64[$4239>>3] = $4238;
                      $4240 = $x237;
                      $4241 = -1.0 * $4240;
                      $4242 = (($4) + 288|0);
                      $4243 = +HEAPF64[$4242>>3];
                      $4244 = (($4) + 336|0);
                      $4245 = +HEAPF64[$4244>>3];
                      $4246 = $4243 * $4245;
                      $4247 = $4241 + $4246;
                      $4248 = (($4) + 264|0);
                      $4249 = +HEAPF64[$4248>>3];
                      $4250 = -1.0 * $4249;
                      $4251 = $x235;
                      $4252 = $4250 * $4251;
                      $4253 = $4247 + $4252;
                      $4254 = (($evalcond59) + 56|0);
                      HEAPF64[$4254>>3] = $4253;
                      $4255 = +HEAPF64[$evalcond59>>3];
                      $4256 = (+__Z5IKabsd($4255));
                      $4257 = $4256 > 5.0000000000000004E-6;
                      do {
                       if (!($4257)) {
                        $4258 = (($evalcond59) + 8|0);
                        $4259 = +HEAPF64[$4258>>3];
                        $4260 = (+__Z5IKabsd($4259));
                        $4261 = $4260 > 5.0000000000000004E-6;
                        if ($4261) {
                         break;
                        }
                        $4262 = (($evalcond59) + 16|0);
                        $4263 = +HEAPF64[$4262>>3];
                        $4264 = (+__Z5IKabsd($4263));
                        $4265 = $4264 > 5.0000000000000004E-6;
                        if ($4265) {
                         break;
                        }
                        $4266 = (($evalcond59) + 24|0);
                        $4267 = +HEAPF64[$4266>>3];
                        $4268 = (+__Z5IKabsd($4267));
                        $4269 = $4268 > 5.0000000000000004E-6;
                        if ($4269) {
                         break;
                        }
                        $4270 = (($evalcond59) + 32|0);
                        $4271 = +HEAPF64[$4270>>3];
                        $4272 = (+__Z5IKabsd($4271));
                        $4273 = $4272 > 5.0000000000000004E-6;
                        if ($4273) {
                         break;
                        }
                        $4274 = (($evalcond59) + 40|0);
                        $4275 = +HEAPF64[$4274>>3];
                        $4276 = (+__Z5IKabsd($4275));
                        $4277 = $4276 > 5.0000000000000004E-6;
                        if ($4277) {
                         break;
                        }
                        $4278 = (($evalcond59) + 48|0);
                        $4279 = +HEAPF64[$4278>>3];
                        $4280 = (+__Z5IKabsd($4279));
                        $4281 = $4280 > 5.0000000000000004E-6;
                        if ($4281) {
                         break;
                        }
                        $4282 = (($evalcond59) + 56|0);
                        $4283 = +HEAPF64[$4282>>3];
                        $4284 = (+__Z5IKabsd($4283));
                        $4285 = $4284 > 5.0000000000000004E-6;
                        if ($4285) {
                         break;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos60,6);
                        __THREW__ = 0;
                        $4286 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4287 = __THREW__; __THREW__ = 0;
                        $4288 = $4287&1;
                        if ($4288) {
                         label = 534;
                         break L1;
                        }
                        $4289 = (($4286) + 17|0);
                        HEAP8[$4289>>0] = 1;
                        $4290 = +HEAPF64[$4>>3];
                        __THREW__ = 0;
                        $4291 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4292 = __THREW__; __THREW__ = 0;
                        $4293 = $4292&1;
                        if ($4293) {
                         label = 534;
                         break L1;
                        }
                        $4294 = (($4291) + 8|0);
                        HEAPF64[$4294>>3] = $4290;
                        $4295 = (($4) + 536|0);
                        $4296 = HEAP8[$4295>>0]|0;
                        __THREW__ = 0;
                        $4297 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4298 = __THREW__; __THREW__ = 0;
                        $4299 = $4298&1;
                        if ($4299) {
                         label = 534;
                         break L1;
                        }
                        $4300 = (($4297) + 19|0);
                        HEAP8[$4300>>0] = $4296;
                        $4301 = (($4) + 536|0);
                        $4302 = (($4301) + 1|0);
                        $4303 = HEAP8[$4302>>0]|0;
                        __THREW__ = 0;
                        $4304 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4305 = __THREW__; __THREW__ = 0;
                        $4306 = $4305&1;
                        if ($4306) {
                         label = 534;
                         break L1;
                        }
                        $4307 = (($4304) + 19|0);
                        $4308 = (($4307) + 1|0);
                        HEAP8[$4308>>0] = $4303;
                        $4309 = (($4) + 538|0);
                        $4310 = HEAP8[$4309>>0]|0;
                        __THREW__ = 0;
                        $4311 = (invoke_iii(381,($vinfos60|0),0)|0);
                        $4312 = __THREW__; __THREW__ = 0;
                        $4313 = $4312&1;
                        if ($4313) {
                         label = 534;
                         break L1;
                        }
                        $4314 = (($4311) + 18|0);
                        HEAP8[$4314>>0] = $4310;
                        __THREW__ = 0;
                        $4315 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4316 = __THREW__; __THREW__ = 0;
                        $4317 = $4316&1;
                        if ($4317) {
                         label = 534;
                         break L1;
                        }
                        $4318 = (($4315) + 17|0);
                        HEAP8[$4318>>0] = 1;
                        $4319 = (($4) + 40|0);
                        $4320 = +HEAPF64[$4319>>3];
                        __THREW__ = 0;
                        $4321 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4322 = __THREW__; __THREW__ = 0;
                        $4323 = $4322&1;
                        if ($4323) {
                         label = 534;
                         break L1;
                        }
                        $4324 = (($4321) + 8|0);
                        HEAPF64[$4324>>3] = $4320;
                        $4325 = (($4) + 539|0);
                        $4326 = HEAP8[$4325>>0]|0;
                        __THREW__ = 0;
                        $4327 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4328 = __THREW__; __THREW__ = 0;
                        $4329 = $4328&1;
                        if ($4329) {
                         label = 534;
                         break L1;
                        }
                        $4330 = (($4327) + 19|0);
                        HEAP8[$4330>>0] = $4326;
                        $4331 = (($4) + 539|0);
                        $4332 = (($4331) + 1|0);
                        $4333 = HEAP8[$4332>>0]|0;
                        __THREW__ = 0;
                        $4334 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4335 = __THREW__; __THREW__ = 0;
                        $4336 = $4335&1;
                        if ($4336) {
                         label = 534;
                         break L1;
                        }
                        $4337 = (($4334) + 19|0);
                        $4338 = (($4337) + 1|0);
                        HEAP8[$4338>>0] = $4333;
                        $4339 = (($4) + 541|0);
                        $4340 = HEAP8[$4339>>0]|0;
                        __THREW__ = 0;
                        $4341 = (invoke_iii(381,($vinfos60|0),1)|0);
                        $4342 = __THREW__; __THREW__ = 0;
                        $4343 = $4342&1;
                        if ($4343) {
                         label = 534;
                         break L1;
                        }
                        $4344 = (($4341) + 18|0);
                        HEAP8[$4344>>0] = $4340;
                        __THREW__ = 0;
                        $4345 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4346 = __THREW__; __THREW__ = 0;
                        $4347 = $4346&1;
                        if ($4347) {
                         label = 534;
                         break L1;
                        }
                        $4348 = (($4345) + 17|0);
                        HEAP8[$4348>>0] = 1;
                        $4349 = (($4) + 80|0);
                        $4350 = +HEAPF64[$4349>>3];
                        __THREW__ = 0;
                        $4351 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4352 = __THREW__; __THREW__ = 0;
                        $4353 = $4352&1;
                        if ($4353) {
                         label = 534;
                         break L1;
                        }
                        $4354 = (($4351) + 8|0);
                        HEAPF64[$4354>>3] = $4350;
                        $4355 = (($4) + 542|0);
                        $4356 = HEAP8[$4355>>0]|0;
                        __THREW__ = 0;
                        $4357 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4358 = __THREW__; __THREW__ = 0;
                        $4359 = $4358&1;
                        if ($4359) {
                         label = 534;
                         break L1;
                        }
                        $4360 = (($4357) + 19|0);
                        HEAP8[$4360>>0] = $4356;
                        $4361 = (($4) + 542|0);
                        $4362 = (($4361) + 1|0);
                        $4363 = HEAP8[$4362>>0]|0;
                        __THREW__ = 0;
                        $4364 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4365 = __THREW__; __THREW__ = 0;
                        $4366 = $4365&1;
                        if ($4366) {
                         label = 534;
                         break L1;
                        }
                        $4367 = (($4364) + 19|0);
                        $4368 = (($4367) + 1|0);
                        HEAP8[$4368>>0] = $4363;
                        $4369 = (($4) + 544|0);
                        $4370 = HEAP8[$4369>>0]|0;
                        __THREW__ = 0;
                        $4371 = (invoke_iii(381,($vinfos60|0),2)|0);
                        $4372 = __THREW__; __THREW__ = 0;
                        $4373 = $4372&1;
                        if ($4373) {
                         label = 534;
                         break L1;
                        }
                        $4374 = (($4371) + 18|0);
                        HEAP8[$4374>>0] = $4370;
                        __THREW__ = 0;
                        $4375 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4376 = __THREW__; __THREW__ = 0;
                        $4377 = $4376&1;
                        if ($4377) {
                         label = 534;
                         break L1;
                        }
                        $4378 = (($4375) + 17|0);
                        HEAP8[$4378>>0] = 1;
                        $4379 = (($4) + 120|0);
                        $4380 = +HEAPF64[$4379>>3];
                        __THREW__ = 0;
                        $4381 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4382 = __THREW__; __THREW__ = 0;
                        $4383 = $4382&1;
                        if ($4383) {
                         label = 534;
                         break L1;
                        }
                        $4384 = (($4381) + 8|0);
                        HEAPF64[$4384>>3] = $4380;
                        $4385 = (($4) + 545|0);
                        $4386 = HEAP8[$4385>>0]|0;
                        __THREW__ = 0;
                        $4387 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4388 = __THREW__; __THREW__ = 0;
                        $4389 = $4388&1;
                        if ($4389) {
                         label = 534;
                         break L1;
                        }
                        $4390 = (($4387) + 19|0);
                        HEAP8[$4390>>0] = $4386;
                        $4391 = (($4) + 545|0);
                        $4392 = (($4391) + 1|0);
                        $4393 = HEAP8[$4392>>0]|0;
                        __THREW__ = 0;
                        $4394 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4395 = __THREW__; __THREW__ = 0;
                        $4396 = $4395&1;
                        if ($4396) {
                         label = 534;
                         break L1;
                        }
                        $4397 = (($4394) + 19|0);
                        $4398 = (($4397) + 1|0);
                        HEAP8[$4398>>0] = $4393;
                        $4399 = (($4) + 547|0);
                        $4400 = HEAP8[$4399>>0]|0;
                        __THREW__ = 0;
                        $4401 = (invoke_iii(381,($vinfos60|0),3)|0);
                        $4402 = __THREW__; __THREW__ = 0;
                        $4403 = $4402&1;
                        if ($4403) {
                         label = 534;
                         break L1;
                        }
                        $4404 = (($4401) + 18|0);
                        HEAP8[$4404>>0] = $4400;
                        __THREW__ = 0;
                        $4405 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4406 = __THREW__; __THREW__ = 0;
                        $4407 = $4406&1;
                        if ($4407) {
                         label = 534;
                         break L1;
                        }
                        $4408 = (($4405) + 17|0);
                        HEAP8[$4408>>0] = 1;
                        $4409 = (($4) + 160|0);
                        $4410 = +HEAPF64[$4409>>3];
                        __THREW__ = 0;
                        $4411 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4412 = __THREW__; __THREW__ = 0;
                        $4413 = $4412&1;
                        if ($4413) {
                         label = 534;
                         break L1;
                        }
                        $4414 = (($4411) + 8|0);
                        HEAPF64[$4414>>3] = $4410;
                        $4415 = (($4) + 548|0);
                        $4416 = HEAP8[$4415>>0]|0;
                        __THREW__ = 0;
                        $4417 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4418 = __THREW__; __THREW__ = 0;
                        $4419 = $4418&1;
                        if ($4419) {
                         label = 534;
                         break L1;
                        }
                        $4420 = (($4417) + 19|0);
                        HEAP8[$4420>>0] = $4416;
                        $4421 = (($4) + 548|0);
                        $4422 = (($4421) + 1|0);
                        $4423 = HEAP8[$4422>>0]|0;
                        __THREW__ = 0;
                        $4424 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4425 = __THREW__; __THREW__ = 0;
                        $4426 = $4425&1;
                        if ($4426) {
                         label = 534;
                         break L1;
                        }
                        $4427 = (($4424) + 19|0);
                        $4428 = (($4427) + 1|0);
                        HEAP8[$4428>>0] = $4423;
                        $4429 = (($4) + 550|0);
                        $4430 = HEAP8[$4429>>0]|0;
                        __THREW__ = 0;
                        $4431 = (invoke_iii(381,($vinfos60|0),4)|0);
                        $4432 = __THREW__; __THREW__ = 0;
                        $4433 = $4432&1;
                        if ($4433) {
                         label = 534;
                         break L1;
                        }
                        $4434 = (($4431) + 18|0);
                        HEAP8[$4434>>0] = $4430;
                        __THREW__ = 0;
                        $4435 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4436 = __THREW__; __THREW__ = 0;
                        $4437 = $4436&1;
                        if ($4437) {
                         label = 534;
                         break L1;
                        }
                        $4438 = (($4435) + 17|0);
                        HEAP8[$4438>>0] = 1;
                        $4439 = (($4) + 200|0);
                        $4440 = +HEAPF64[$4439>>3];
                        __THREW__ = 0;
                        $4441 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4442 = __THREW__; __THREW__ = 0;
                        $4443 = $4442&1;
                        if ($4443) {
                         label = 534;
                         break L1;
                        }
                        $4444 = (($4441) + 8|0);
                        HEAPF64[$4444>>3] = $4440;
                        $4445 = (($4) + 551|0);
                        $4446 = HEAP8[$4445>>0]|0;
                        __THREW__ = 0;
                        $4447 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4448 = __THREW__; __THREW__ = 0;
                        $4449 = $4448&1;
                        if ($4449) {
                         label = 534;
                         break L1;
                        }
                        $4450 = (($4447) + 19|0);
                        HEAP8[$4450>>0] = $4446;
                        $4451 = (($4) + 551|0);
                        $4452 = (($4451) + 1|0);
                        $4453 = HEAP8[$4452>>0]|0;
                        __THREW__ = 0;
                        $4454 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4455 = __THREW__; __THREW__ = 0;
                        $4456 = $4455&1;
                        if ($4456) {
                         label = 534;
                         break L1;
                        }
                        $4457 = (($4454) + 19|0);
                        $4458 = (($4457) + 1|0);
                        HEAP8[$4458>>0] = $4453;
                        $4459 = (($4) + 553|0);
                        $4460 = HEAP8[$4459>>0]|0;
                        __THREW__ = 0;
                        $4461 = (invoke_iii(381,($vinfos60|0),5)|0);
                        $4462 = __THREW__; __THREW__ = 0;
                        $4463 = $4462&1;
                        if ($4463) {
                         label = 534;
                         break L1;
                        }
                        $4464 = (($4461) + 18|0);
                        HEAP8[$4464>>0] = $4460;
                        __THREW__ = 0;
                        invoke_vii(382,($vfree61|0),0);
                        $4465 = __THREW__; __THREW__ = 0;
                        $4466 = $4465&1;
                        if ($4466) {
                         label = 534;
                         break L1;
                        }
                        $4467 = $1;
                        $4468 = HEAP32[$4467>>2]|0;
                        $4469 = (($4468) + 8|0);
                        $4470 = HEAP32[$4469>>2]|0;
                        __THREW__ = 0;
                        (invoke_iiii($4470|0,($4467|0),($vinfos60|0),($vfree61|0))|0);
                        $4471 = __THREW__; __THREW__ = 0;
                        $4472 = $4471&1;
                        if ($4472) {
                         label = 535;
                         break L1;
                        }
                        __THREW__ = 0;
                        invoke_vi(366,($vfree61|0));
                        $4473 = __THREW__; __THREW__ = 0;
                        $4474 = $4473&1;
                        if ($4474) {
                         label = 534;
                         break L1;
                        }
                        __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos60);
                        break L1877;
                       }
                      } while(0);
                     } else {
                     }
                    } while(0);
                    $4475 = $ij557;
                    $4476 = (($4475) + 1)|0;
                    $ij557 = $4476;
                   }
                   label = 540;
                  } else {
                   label = 540;
                  }
                 } while(0);
                 if ((label|0) == 540) {
                  label = 0;
                 }
                 $4485 = $bgotonextstatement52;
                 $4486 = $4485&1;
                 if ($4486) {
                  $bgotonextstatement62 = 1;
                  $4487 = (($4) + 288|0);
                  $4488 = +HEAPF64[$4487>>3];
                  $4489 = -1.0 * $4488;
                  $4490 = (($4) + 136|0);
                  $4491 = +HEAPF64[$4490>>3];
                  $4492 = $4489 * $4491;
                  $4493 = (($4) + 128|0);
                  $4494 = +HEAPF64[$4493>>3];
                  $4495 = (($4) + 360|0);
                  $4496 = +HEAPF64[$4495>>3];
                  $4497 = $4494 * $4496;
                  $4498 = $4492 + $4497;
                  $x238 = $4498;
                  $4499 = (($4) + 312|0);
                  $4500 = +HEAPF64[$4499>>3];
                  $4501 = (($4) + 136|0);
                  $4502 = +HEAPF64[$4501>>3];
                  $4503 = $4500 * $4502;
                  $4504 = (($4) + 128|0);
                  $4505 = +HEAPF64[$4504>>3];
                  $4506 = (($4) + 240|0);
                  $4507 = +HEAPF64[$4506>>3];
                  $4508 = $4505 * $4507;
                  $4509 = $4503 + $4508;
                  $x239 = $4509;
                  $4510 = (($4) + 336|0);
                  $4511 = +HEAPF64[$4510>>3];
                  $4512 = (($4) + 136|0);
                  $4513 = +HEAPF64[$4512>>3];
                  $4514 = $4511 * $4513;
                  $4515 = (($4) + 128|0);
                  $4516 = +HEAPF64[$4515>>3];
                  $4517 = (($4) + 264|0);
                  $4518 = +HEAPF64[$4517>>3];
                  $4519 = $4516 * $4518;
                  $4520 = $4514 + $4519;
                  $x240 = $4520;
                  $4521 = (($4) + 360|0);
                  $4522 = +HEAPF64[$4521>>3];
                  $4523 = (($4) + 136|0);
                  $4524 = +HEAPF64[$4523>>3];
                  $4525 = $4522 * $4524;
                  $4526 = 1.0 + $4525;
                  $4527 = (($4) + 128|0);
                  $4528 = +HEAPF64[$4527>>3];
                  $4529 = (($4) + 288|0);
                  $4530 = +HEAPF64[$4529>>3];
                  $4531 = $4528 * $4530;
                  $4532 = $4526 + $4531;
                  $x241 = $4532;
                  $4533 = (($4) + 160|0);
                  $4534 = +HEAPF64[$4533>>3];
                  $4535 = 1.5707963267949001 + $4534;
                  $4536 = (+__Z5IKabsd($4535));
                  $4537 = 3.14159265358979 + $4536;
                  $4538 = (+__Z6IKfmoddd($4537,6.2831853071795898));
                  $4539 = -3.14159265358979 + $4538;
                  HEAPF64[$evalcond31>>3] = $4539;
                  $4540 = (($4) + 432|0);
                  $4541 = +HEAPF64[$4540>>3];
                  $4542 = (($evalcond31) + 8|0);
                  HEAPF64[$4542>>3] = $4541;
                  $4543 = (($4) + 128|0);
                  $4544 = +HEAPF64[$4543>>3];
                  $4545 = (($4) + 288|0);
                  $4546 = +HEAPF64[$4545>>3];
                  $4547 = $4544 + $4546;
                  $4548 = (($evalcond31) + 16|0);
                  HEAPF64[$4548>>3] = $4547;
                  $4549 = (($4) + 136|0);
                  $4550 = +HEAPF64[$4549>>3];
                  $4551 = (($4) + 360|0);
                  $4552 = +HEAPF64[$4551>>3];
                  $4553 = $4550 + $4552;
                  $4554 = (($evalcond31) + 24|0);
                  HEAPF64[$4554>>3] = $4553;
                  $4555 = $x238;
                  $4556 = (($evalcond31) + 32|0);
                  HEAPF64[$4556>>3] = $4555;
                  $4557 = $x238;
                  $4558 = (($evalcond31) + 40|0);
                  HEAPF64[$4558>>3] = $4557;
                  $4559 = $x241;
                  $4560 = (($evalcond31) + 48|0);
                  HEAPF64[$4560>>3] = $4559;
                  $4561 = $x240;
                  $4562 = (($evalcond31) + 56|0);
                  HEAPF64[$4562>>3] = $4561;
                  $4563 = $x239;
                  $4564 = (($evalcond31) + 64|0);
                  HEAPF64[$4564>>3] = $4563;
                  $4565 = $x239;
                  $4566 = (($evalcond31) + 72|0);
                  HEAPF64[$4566>>3] = $4565;
                  $4567 = $x240;
                  $4568 = (($evalcond31) + 80|0);
                  HEAPF64[$4568>>3] = $4567;
                  $4569 = $x241;
                  $4570 = (($evalcond31) + 88|0);
                  HEAPF64[$4570>>3] = $4569;
                  $4571 = +HEAPF64[$evalcond31>>3];
                  $4572 = (+__Z5IKabsd($4571));
                  $4573 = $4572 < 9.9999999999999995E-7;
                  L1942: do {
                   if ($4573) {
                    $4574 = (($evalcond31) + 8|0);
                    $4575 = +HEAPF64[$4574>>3];
                    $4576 = (+__Z5IKabsd($4575));
                    $4577 = $4576 < 9.9999999999999995E-7;
                    if (!($4577)) {
                     label = 626;
                     break;
                    }
                    $4578 = (($evalcond31) + 16|0);
                    $4579 = +HEAPF64[$4578>>3];
                    $4580 = (+__Z5IKabsd($4579));
                    $4581 = $4580 < 9.9999999999999995E-7;
                    if (!($4581)) {
                     label = 626;
                     break;
                    }
                    $4582 = (($evalcond31) + 24|0);
                    $4583 = +HEAPF64[$4582>>3];
                    $4584 = (+__Z5IKabsd($4583));
                    $4585 = $4584 < 9.9999999999999995E-7;
                    if (!($4585)) {
                     label = 626;
                     break;
                    }
                    $4586 = (($evalcond31) + 32|0);
                    $4587 = +HEAPF64[$4586>>3];
                    $4588 = (+__Z5IKabsd($4587));
                    $4589 = $4588 < 9.9999999999999995E-7;
                    if (!($4589)) {
                     label = 626;
                     break;
                    }
                    $4590 = (($evalcond31) + 40|0);
                    $4591 = +HEAPF64[$4590>>3];
                    $4592 = (+__Z5IKabsd($4591));
                    $4593 = $4592 < 9.9999999999999995E-7;
                    if (!($4593)) {
                     label = 626;
                     break;
                    }
                    $4594 = (($evalcond31) + 48|0);
                    $4595 = +HEAPF64[$4594>>3];
                    $4596 = (+__Z5IKabsd($4595));
                    $4597 = $4596 < 9.9999999999999995E-7;
                    if (!($4597)) {
                     label = 626;
                     break;
                    }
                    $4598 = (($evalcond31) + 56|0);
                    $4599 = +HEAPF64[$4598>>3];
                    $4600 = (+__Z5IKabsd($4599));
                    $4601 = $4600 < 9.9999999999999995E-7;
                    if (!($4601)) {
                     label = 626;
                     break;
                    }
                    $4602 = (($evalcond31) + 64|0);
                    $4603 = +HEAPF64[$4602>>3];
                    $4604 = (+__Z5IKabsd($4603));
                    $4605 = $4604 < 9.9999999999999995E-7;
                    if (!($4605)) {
                     label = 626;
                     break;
                    }
                    $4606 = (($evalcond31) + 72|0);
                    $4607 = +HEAPF64[$4606>>3];
                    $4608 = (+__Z5IKabsd($4607));
                    $4609 = $4608 < 9.9999999999999995E-7;
                    if (!($4609)) {
                     label = 626;
                     break;
                    }
                    $4610 = (($evalcond31) + 80|0);
                    $4611 = +HEAPF64[$4610>>3];
                    $4612 = (+__Z5IKabsd($4611));
                    $4613 = $4612 < 9.9999999999999995E-7;
                    if (!($4613)) {
                     label = 626;
                     break;
                    }
                    $4614 = (($evalcond31) + 88|0);
                    $4615 = +HEAPF64[$4614>>3];
                    $4616 = (+__Z5IKabsd($4615));
                    $4617 = $4616 < 9.9999999999999995E-7;
                    if (!($4617)) {
                     label = 626;
                     break;
                    }
                    $bgotonextstatement62 = 0;
                    ;HEAP8[$j5valid66+0>>0]=0|0;
                    $4618 = (($4) + 553|0);
                    HEAP8[$4618>>0] = 1;
                    $4619 = (($4) + 408|0);
                    $4620 = +HEAPF64[$4619>>3];
                    $4621 = -1.0 * $4620;
                    $4622 = (+__Z5IKabsd($4621));
                    $4623 = $4622 < 1.9999999999999999E-6;
                    do {
                     if ($4623) {
                      $4624 = (($4) + 384|0);
                      $4625 = +HEAPF64[$4624>>3];
                      $4626 = (+__Z5IKabsd($4625));
                      $4627 = $4626 < 1.9999999999999999E-6;
                      if (!($4627)) {
                       break;
                      }
                      $4628 = (($4) + 408|0);
                      $4629 = +HEAPF64[$4628>>3];
                      $4630 = -1.0 * $4629;
                      $4631 = (+__Z5IKsqrd($4630));
                      $4632 = (($4) + 384|0);
                      $4633 = +HEAPF64[$4632>>3];
                      $4634 = (+__Z5IKsqrd($4633));
                      $4635 = $4631 + $4634;
                      $4636 = $4635 - 1.0;
                      $4637 = (+__Z5IKabsd($4636));
                      $4638 = $4637 <= 1.9999999999999999E-6;
                      if (!($4638)) {
                       break;
                      }
                      break L1942;
                     }
                    } while(0);
                    $4639 = (($4) + 408|0);
                    $4640 = +HEAPF64[$4639>>3];
                    $4641 = -1.0 * $4640;
                    $4642 = (($4) + 384|0);
                    $4643 = +HEAPF64[$4642>>3];
                    $4644 = (+__Z7IKatan2dd($4641,$4643));
                    HEAPF64[$j5array63>>3] = $4644;
                    $4645 = +HEAPF64[$j5array63>>3];
                    $4646 = (+__Z5IKsind($4645));
                    HEAPF64[$sj5array65>>3] = $4646;
                    $4647 = +HEAPF64[$j5array63>>3];
                    $4648 = (+__Z5IKcosd($4647));
                    HEAPF64[$cj5array64>>3] = $4648;
                    $4649 = +HEAPF64[$j5array63>>3];
                    $4650 = $4649 > 3.14159265358979;
                    if ($4650) {
                     $4651 = +HEAPF64[$j5array63>>3];
                     $4652 = $4651 - 6.2831853071795898;
                     HEAPF64[$j5array63>>3] = $4652;
                    } else {
                     $4653 = +HEAPF64[$j5array63>>3];
                     $4654 = $4653 < -3.14159265358979;
                     if ($4654) {
                      $4655 = +HEAPF64[$j5array63>>3];
                      $4656 = $4655 + 6.2831853071795898;
                      HEAPF64[$j5array63>>3] = $4656;
                     }
                    }
                    HEAP8[$j5valid66>>0] = 1;
                    $ij567 = 0;
                    while(1) {
                     $4657 = $ij567;
                     $4658 = ($4657|0)<(1);
                     if (!($4658)) {
                      break;
                     }
                     $4659 = $ij567;
                     $4660 = (($j5valid66) + ($4659)|0);
                     $4661 = HEAP8[$4660>>0]|0;
                     $4662 = $4661&1;
                     L1970: do {
                      if ($4662) {
                       $4663 = $ij567;
                       $4664 = $4663&255;
                       $4665 = (($4) + 551|0);
                       HEAP8[$4665>>0] = $4664;
                       $4666 = (($4) + 551|0);
                       $4667 = (($4666) + 1|0);
                       HEAP8[$4667>>0] = -1;
                       $4668 = $ij567;
                       $4669 = (($4668) + 1)|0;
                       $iij568 = $4669;
                       L1973: while(1) {
                        $4670 = $iij568;
                        $4671 = ($4670|0)<(1);
                        if (!($4671)) {
                         break;
                        }
                        $4672 = $iij568;
                        $4673 = (($j5valid66) + ($4672)|0);
                        $4674 = HEAP8[$4673>>0]|0;
                        $4675 = $4674&1;
                        do {
                         if ($4675) {
                          $4676 = $ij567;
                          $4677 = (($cj5array64) + ($4676<<3)|0);
                          $4678 = +HEAPF64[$4677>>3];
                          $4679 = $iij568;
                          $4680 = (($cj5array64) + ($4679<<3)|0);
                          $4681 = +HEAPF64[$4680>>3];
                          $4682 = $4678 - $4681;
                          $4683 = (+__Z5IKabsd($4682));
                          $4684 = $4683 < 9.9999999999999995E-7;
                          if (!($4684)) {
                           break;
                          }
                          $4685 = $ij567;
                          $4686 = (($sj5array65) + ($4685<<3)|0);
                          $4687 = +HEAPF64[$4686>>3];
                          $4688 = $iij568;
                          $4689 = (($sj5array65) + ($4688<<3)|0);
                          $4690 = +HEAPF64[$4689>>3];
                          $4691 = $4687 - $4690;
                          $4692 = (+__Z5IKabsd($4691));
                          $4693 = $4692 < 9.9999999999999995E-7;
                          if ($4693) {
                           label = 573;
                           break L1973;
                          }
                         }
                        } while(0);
                        $4700 = $iij568;
                        $4701 = (($4700) + 1)|0;
                        $iij568 = $4701;
                       }
                       if ((label|0) == 573) {
                        label = 0;
                        $4694 = $iij568;
                        $4695 = (($j5valid66) + ($4694)|0);
                        HEAP8[$4695>>0] = 0;
                        $4696 = $iij568;
                        $4697 = $4696&255;
                        $4698 = (($4) + 551|0);
                        $4699 = (($4698) + 1|0);
                        HEAP8[$4699>>0] = $4697;
                       }
                       $4702 = $ij567;
                       $4703 = (($j5array63) + ($4702<<3)|0);
                       $4704 = +HEAPF64[$4703>>3];
                       $4705 = (($4) + 200|0);
                       HEAPF64[$4705>>3] = $4704;
                       $4706 = $ij567;
                       $4707 = (($cj5array64) + ($4706<<3)|0);
                       $4708 = +HEAPF64[$4707>>3];
                       $4709 = (($4) + 208|0);
                       HEAPF64[$4709>>3] = $4708;
                       $4710 = $ij567;
                       $4711 = (($sj5array65) + ($4710<<3)|0);
                       $4712 = +HEAPF64[$4711>>3];
                       $4713 = (($4) + 216|0);
                       HEAPF64[$4713>>3] = $4712;
                       $4714 = (($4) + 200|0);
                       $4715 = +HEAPF64[$4714>>3];
                       $4716 = (+__Z5IKcosd($4715));
                       $x242 = $4716;
                       $4717 = (($4) + 200|0);
                       $4718 = +HEAPF64[$4717>>3];
                       $4719 = (+__Z5IKsind($4718));
                       $x243 = $4719;
                       $4720 = (($4) + 288|0);
                       $4721 = +HEAPF64[$4720>>3];
                       $4722 = 1.0 * $4721;
                       $x244 = $4722;
                       $4723 = $x242;
                       $4724 = 1.0 * $4723;
                       $x245 = $4724;
                       $4725 = $x243;
                       $4726 = 1.0 * $4725;
                       $x246 = $4726;
                       $4727 = $x243;
                       $4728 = (($4) + 408|0);
                       $4729 = +HEAPF64[$4728>>3];
                       $4730 = $4727 + $4729;
                       HEAPF64[$evalcond69>>3] = $4730;
                       $4731 = $x245;
                       $4732 = -1.0 * $4731;
                       $4733 = (($4) + 384|0);
                       $4734 = +HEAPF64[$4733>>3];
                       $4735 = $4732 + $4734;
                       $4736 = (($evalcond69) + 8|0);
                       HEAPF64[$4736>>3] = $4735;
                       $4737 = (($4) + 336|0);
                       $4738 = +HEAPF64[$4737>>3];
                       $4739 = (($4) + 288|0);
                       $4740 = +HEAPF64[$4739>>3];
                       $4741 = $x242;
                       $4742 = $4740 * $4741;
                       $4743 = $4738 + $4742;
                       $4744 = (($evalcond69) + 16|0);
                       HEAPF64[$4744>>3] = $4743;
                       $4745 = (($4) + 312|0);
                       $4746 = +HEAPF64[$4745>>3];
                       $4747 = (($4) + 288|0);
                       $4748 = +HEAPF64[$4747>>3];
                       $4749 = $x243;
                       $4750 = $4748 * $4749;
                       $4751 = $4746 + $4750;
                       $4752 = (($evalcond69) + 24|0);
                       HEAPF64[$4752>>3] = $4751;
                       $4753 = (($4) + 360|0);
                       $4754 = +HEAPF64[$4753>>3];
                       $4755 = -1.0 * $4754;
                       $4756 = $x245;
                       $4757 = $4755 * $4756;
                       $4758 = (($4) + 264|0);
                       $4759 = +HEAPF64[$4758>>3];
                       $4760 = $4757 + $4759;
                       $4761 = (($evalcond69) + 32|0);
                       HEAPF64[$4761>>3] = $4760;
                       $4762 = (($4) + 360|0);
                       $4763 = +HEAPF64[$4762>>3];
                       $4764 = -1.0 * $4763;
                       $4765 = $x246;
                       $4766 = $4764 * $4765;
                       $4767 = (($4) + 240|0);
                       $4768 = +HEAPF64[$4767>>3];
                       $4769 = $4766 + $4768;
                       $4770 = (($evalcond69) + 40|0);
                       HEAPF64[$4770>>3] = $4769;
                       $4771 = (($4) + 240|0);
                       $4772 = +HEAPF64[$4771>>3];
                       $4773 = (($4) + 360|0);
                       $4774 = +HEAPF64[$4773>>3];
                       $4775 = $4772 * $4774;
                       $4776 = (($4) + 312|0);
                       $4777 = +HEAPF64[$4776>>3];
                       $4778 = -1.0 * $4777;
                       $4779 = $x244;
                       $4780 = $4778 * $4779;
                       $4781 = $4775 + $4780;
                       $4782 = $x246;
                       $4783 = -1.0 * $4782;
                       $4784 = $4781 + $4783;
                       $4785 = (($evalcond69) + 48|0);
                       HEAPF64[$4785>>3] = $4784;
                       $4786 = (($4) + 264|0);
                       $4787 = +HEAPF64[$4786>>3];
                       $4788 = (($4) + 360|0);
                       $4789 = +HEAPF64[$4788>>3];
                       $4790 = $4787 * $4789;
                       $4791 = (($4) + 336|0);
                       $4792 = +HEAPF64[$4791>>3];
                       $4793 = -1.0 * $4792;
                       $4794 = $x244;
                       $4795 = $4793 * $4794;
                       $4796 = $4790 + $4795;
                       $4797 = $x245;
                       $4798 = -1.0 * $4797;
                       $4799 = $4796 + $4798;
                       $4800 = (($evalcond69) + 56|0);
                       HEAPF64[$4800>>3] = $4799;
                       $4801 = +HEAPF64[$evalcond69>>3];
                       $4802 = (+__Z5IKabsd($4801));
                       $4803 = $4802 > 5.0000000000000004E-6;
                       do {
                        if (!($4803)) {
                         $4804 = (($evalcond69) + 8|0);
                         $4805 = +HEAPF64[$4804>>3];
                         $4806 = (+__Z5IKabsd($4805));
                         $4807 = $4806 > 5.0000000000000004E-6;
                         if ($4807) {
                          break;
                         }
                         $4808 = (($evalcond69) + 16|0);
                         $4809 = +HEAPF64[$4808>>3];
                         $4810 = (+__Z5IKabsd($4809));
                         $4811 = $4810 > 5.0000000000000004E-6;
                         if ($4811) {
                          break;
                         }
                         $4812 = (($evalcond69) + 24|0);
                         $4813 = +HEAPF64[$4812>>3];
                         $4814 = (+__Z5IKabsd($4813));
                         $4815 = $4814 > 5.0000000000000004E-6;
                         if ($4815) {
                          break;
                         }
                         $4816 = (($evalcond69) + 32|0);
                         $4817 = +HEAPF64[$4816>>3];
                         $4818 = (+__Z5IKabsd($4817));
                         $4819 = $4818 > 5.0000000000000004E-6;
                         if ($4819) {
                          break;
                         }
                         $4820 = (($evalcond69) + 40|0);
                         $4821 = +HEAPF64[$4820>>3];
                         $4822 = (+__Z5IKabsd($4821));
                         $4823 = $4822 > 5.0000000000000004E-6;
                         if ($4823) {
                          break;
                         }
                         $4824 = (($evalcond69) + 48|0);
                         $4825 = +HEAPF64[$4824>>3];
                         $4826 = (+__Z5IKabsd($4825));
                         $4827 = $4826 > 5.0000000000000004E-6;
                         if ($4827) {
                          break;
                         }
                         $4828 = (($evalcond69) + 56|0);
                         $4829 = +HEAPF64[$4828>>3];
                         $4830 = (+__Z5IKabsd($4829));
                         $4831 = $4830 > 5.0000000000000004E-6;
                         if ($4831) {
                          break;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos70,6);
                         __THREW__ = 0;
                         $4832 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4833 = __THREW__; __THREW__ = 0;
                         $4834 = $4833&1;
                         if ($4834) {
                          label = 620;
                          break L1;
                         }
                         $4835 = (($4832) + 17|0);
                         HEAP8[$4835>>0] = 1;
                         $4836 = +HEAPF64[$4>>3];
                         __THREW__ = 0;
                         $4837 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4838 = __THREW__; __THREW__ = 0;
                         $4839 = $4838&1;
                         if ($4839) {
                          label = 620;
                          break L1;
                         }
                         $4840 = (($4837) + 8|0);
                         HEAPF64[$4840>>3] = $4836;
                         $4841 = (($4) + 536|0);
                         $4842 = HEAP8[$4841>>0]|0;
                         __THREW__ = 0;
                         $4843 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4844 = __THREW__; __THREW__ = 0;
                         $4845 = $4844&1;
                         if ($4845) {
                          label = 620;
                          break L1;
                         }
                         $4846 = (($4843) + 19|0);
                         HEAP8[$4846>>0] = $4842;
                         $4847 = (($4) + 536|0);
                         $4848 = (($4847) + 1|0);
                         $4849 = HEAP8[$4848>>0]|0;
                         __THREW__ = 0;
                         $4850 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4851 = __THREW__; __THREW__ = 0;
                         $4852 = $4851&1;
                         if ($4852) {
                          label = 620;
                          break L1;
                         }
                         $4853 = (($4850) + 19|0);
                         $4854 = (($4853) + 1|0);
                         HEAP8[$4854>>0] = $4849;
                         $4855 = (($4) + 538|0);
                         $4856 = HEAP8[$4855>>0]|0;
                         __THREW__ = 0;
                         $4857 = (invoke_iii(381,($vinfos70|0),0)|0);
                         $4858 = __THREW__; __THREW__ = 0;
                         $4859 = $4858&1;
                         if ($4859) {
                          label = 620;
                          break L1;
                         }
                         $4860 = (($4857) + 18|0);
                         HEAP8[$4860>>0] = $4856;
                         __THREW__ = 0;
                         $4861 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4862 = __THREW__; __THREW__ = 0;
                         $4863 = $4862&1;
                         if ($4863) {
                          label = 620;
                          break L1;
                         }
                         $4864 = (($4861) + 17|0);
                         HEAP8[$4864>>0] = 1;
                         $4865 = (($4) + 40|0);
                         $4866 = +HEAPF64[$4865>>3];
                         __THREW__ = 0;
                         $4867 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4868 = __THREW__; __THREW__ = 0;
                         $4869 = $4868&1;
                         if ($4869) {
                          label = 620;
                          break L1;
                         }
                         $4870 = (($4867) + 8|0);
                         HEAPF64[$4870>>3] = $4866;
                         $4871 = (($4) + 539|0);
                         $4872 = HEAP8[$4871>>0]|0;
                         __THREW__ = 0;
                         $4873 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4874 = __THREW__; __THREW__ = 0;
                         $4875 = $4874&1;
                         if ($4875) {
                          label = 620;
                          break L1;
                         }
                         $4876 = (($4873) + 19|0);
                         HEAP8[$4876>>0] = $4872;
                         $4877 = (($4) + 539|0);
                         $4878 = (($4877) + 1|0);
                         $4879 = HEAP8[$4878>>0]|0;
                         __THREW__ = 0;
                         $4880 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4881 = __THREW__; __THREW__ = 0;
                         $4882 = $4881&1;
                         if ($4882) {
                          label = 620;
                          break L1;
                         }
                         $4883 = (($4880) + 19|0);
                         $4884 = (($4883) + 1|0);
                         HEAP8[$4884>>0] = $4879;
                         $4885 = (($4) + 541|0);
                         $4886 = HEAP8[$4885>>0]|0;
                         __THREW__ = 0;
                         $4887 = (invoke_iii(381,($vinfos70|0),1)|0);
                         $4888 = __THREW__; __THREW__ = 0;
                         $4889 = $4888&1;
                         if ($4889) {
                          label = 620;
                          break L1;
                         }
                         $4890 = (($4887) + 18|0);
                         HEAP8[$4890>>0] = $4886;
                         __THREW__ = 0;
                         $4891 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4892 = __THREW__; __THREW__ = 0;
                         $4893 = $4892&1;
                         if ($4893) {
                          label = 620;
                          break L1;
                         }
                         $4894 = (($4891) + 17|0);
                         HEAP8[$4894>>0] = 1;
                         $4895 = (($4) + 80|0);
                         $4896 = +HEAPF64[$4895>>3];
                         __THREW__ = 0;
                         $4897 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4898 = __THREW__; __THREW__ = 0;
                         $4899 = $4898&1;
                         if ($4899) {
                          label = 620;
                          break L1;
                         }
                         $4900 = (($4897) + 8|0);
                         HEAPF64[$4900>>3] = $4896;
                         $4901 = (($4) + 542|0);
                         $4902 = HEAP8[$4901>>0]|0;
                         __THREW__ = 0;
                         $4903 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4904 = __THREW__; __THREW__ = 0;
                         $4905 = $4904&1;
                         if ($4905) {
                          label = 620;
                          break L1;
                         }
                         $4906 = (($4903) + 19|0);
                         HEAP8[$4906>>0] = $4902;
                         $4907 = (($4) + 542|0);
                         $4908 = (($4907) + 1|0);
                         $4909 = HEAP8[$4908>>0]|0;
                         __THREW__ = 0;
                         $4910 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4911 = __THREW__; __THREW__ = 0;
                         $4912 = $4911&1;
                         if ($4912) {
                          label = 620;
                          break L1;
                         }
                         $4913 = (($4910) + 19|0);
                         $4914 = (($4913) + 1|0);
                         HEAP8[$4914>>0] = $4909;
                         $4915 = (($4) + 544|0);
                         $4916 = HEAP8[$4915>>0]|0;
                         __THREW__ = 0;
                         $4917 = (invoke_iii(381,($vinfos70|0),2)|0);
                         $4918 = __THREW__; __THREW__ = 0;
                         $4919 = $4918&1;
                         if ($4919) {
                          label = 620;
                          break L1;
                         }
                         $4920 = (($4917) + 18|0);
                         HEAP8[$4920>>0] = $4916;
                         __THREW__ = 0;
                         $4921 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $4922 = __THREW__; __THREW__ = 0;
                         $4923 = $4922&1;
                         if ($4923) {
                          label = 620;
                          break L1;
                         }
                         $4924 = (($4921) + 17|0);
                         HEAP8[$4924>>0] = 1;
                         $4925 = (($4) + 120|0);
                         $4926 = +HEAPF64[$4925>>3];
                         __THREW__ = 0;
                         $4927 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $4928 = __THREW__; __THREW__ = 0;
                         $4929 = $4928&1;
                         if ($4929) {
                          label = 620;
                          break L1;
                         }
                         $4930 = (($4927) + 8|0);
                         HEAPF64[$4930>>3] = $4926;
                         $4931 = (($4) + 545|0);
                         $4932 = HEAP8[$4931>>0]|0;
                         __THREW__ = 0;
                         $4933 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $4934 = __THREW__; __THREW__ = 0;
                         $4935 = $4934&1;
                         if ($4935) {
                          label = 620;
                          break L1;
                         }
                         $4936 = (($4933) + 19|0);
                         HEAP8[$4936>>0] = $4932;
                         $4937 = (($4) + 545|0);
                         $4938 = (($4937) + 1|0);
                         $4939 = HEAP8[$4938>>0]|0;
                         __THREW__ = 0;
                         $4940 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $4941 = __THREW__; __THREW__ = 0;
                         $4942 = $4941&1;
                         if ($4942) {
                          label = 620;
                          break L1;
                         }
                         $4943 = (($4940) + 19|0);
                         $4944 = (($4943) + 1|0);
                         HEAP8[$4944>>0] = $4939;
                         $4945 = (($4) + 547|0);
                         $4946 = HEAP8[$4945>>0]|0;
                         __THREW__ = 0;
                         $4947 = (invoke_iii(381,($vinfos70|0),3)|0);
                         $4948 = __THREW__; __THREW__ = 0;
                         $4949 = $4948&1;
                         if ($4949) {
                          label = 620;
                          break L1;
                         }
                         $4950 = (($4947) + 18|0);
                         HEAP8[$4950>>0] = $4946;
                         __THREW__ = 0;
                         $4951 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $4952 = __THREW__; __THREW__ = 0;
                         $4953 = $4952&1;
                         if ($4953) {
                          label = 620;
                          break L1;
                         }
                         $4954 = (($4951) + 17|0);
                         HEAP8[$4954>>0] = 1;
                         $4955 = (($4) + 160|0);
                         $4956 = +HEAPF64[$4955>>3];
                         __THREW__ = 0;
                         $4957 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $4958 = __THREW__; __THREW__ = 0;
                         $4959 = $4958&1;
                         if ($4959) {
                          label = 620;
                          break L1;
                         }
                         $4960 = (($4957) + 8|0);
                         HEAPF64[$4960>>3] = $4956;
                         $4961 = (($4) + 548|0);
                         $4962 = HEAP8[$4961>>0]|0;
                         __THREW__ = 0;
                         $4963 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $4964 = __THREW__; __THREW__ = 0;
                         $4965 = $4964&1;
                         if ($4965) {
                          label = 620;
                          break L1;
                         }
                         $4966 = (($4963) + 19|0);
                         HEAP8[$4966>>0] = $4962;
                         $4967 = (($4) + 548|0);
                         $4968 = (($4967) + 1|0);
                         $4969 = HEAP8[$4968>>0]|0;
                         __THREW__ = 0;
                         $4970 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $4971 = __THREW__; __THREW__ = 0;
                         $4972 = $4971&1;
                         if ($4972) {
                          label = 620;
                          break L1;
                         }
                         $4973 = (($4970) + 19|0);
                         $4974 = (($4973) + 1|0);
                         HEAP8[$4974>>0] = $4969;
                         $4975 = (($4) + 550|0);
                         $4976 = HEAP8[$4975>>0]|0;
                         __THREW__ = 0;
                         $4977 = (invoke_iii(381,($vinfos70|0),4)|0);
                         $4978 = __THREW__; __THREW__ = 0;
                         $4979 = $4978&1;
                         if ($4979) {
                          label = 620;
                          break L1;
                         }
                         $4980 = (($4977) + 18|0);
                         HEAP8[$4980>>0] = $4976;
                         __THREW__ = 0;
                         $4981 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $4982 = __THREW__; __THREW__ = 0;
                         $4983 = $4982&1;
                         if ($4983) {
                          label = 620;
                          break L1;
                         }
                         $4984 = (($4981) + 17|0);
                         HEAP8[$4984>>0] = 1;
                         $4985 = (($4) + 200|0);
                         $4986 = +HEAPF64[$4985>>3];
                         __THREW__ = 0;
                         $4987 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $4988 = __THREW__; __THREW__ = 0;
                         $4989 = $4988&1;
                         if ($4989) {
                          label = 620;
                          break L1;
                         }
                         $4990 = (($4987) + 8|0);
                         HEAPF64[$4990>>3] = $4986;
                         $4991 = (($4) + 551|0);
                         $4992 = HEAP8[$4991>>0]|0;
                         __THREW__ = 0;
                         $4993 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $4994 = __THREW__; __THREW__ = 0;
                         $4995 = $4994&1;
                         if ($4995) {
                          label = 620;
                          break L1;
                         }
                         $4996 = (($4993) + 19|0);
                         HEAP8[$4996>>0] = $4992;
                         $4997 = (($4) + 551|0);
                         $4998 = (($4997) + 1|0);
                         $4999 = HEAP8[$4998>>0]|0;
                         __THREW__ = 0;
                         $5000 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5001 = __THREW__; __THREW__ = 0;
                         $5002 = $5001&1;
                         if ($5002) {
                          label = 620;
                          break L1;
                         }
                         $5003 = (($5000) + 19|0);
                         $5004 = (($5003) + 1|0);
                         HEAP8[$5004>>0] = $4999;
                         $5005 = (($4) + 553|0);
                         $5006 = HEAP8[$5005>>0]|0;
                         __THREW__ = 0;
                         $5007 = (invoke_iii(381,($vinfos70|0),5)|0);
                         $5008 = __THREW__; __THREW__ = 0;
                         $5009 = $5008&1;
                         if ($5009) {
                          label = 620;
                          break L1;
                         }
                         $5010 = (($5007) + 18|0);
                         HEAP8[$5010>>0] = $5006;
                         __THREW__ = 0;
                         invoke_vii(382,($vfree71|0),0);
                         $5011 = __THREW__; __THREW__ = 0;
                         $5012 = $5011&1;
                         if ($5012) {
                          label = 620;
                          break L1;
                         }
                         $5013 = $1;
                         $5014 = HEAP32[$5013>>2]|0;
                         $5015 = (($5014) + 8|0);
                         $5016 = HEAP32[$5015>>2]|0;
                         __THREW__ = 0;
                         (invoke_iiii($5016|0,($5013|0),($vinfos70|0),($vfree71|0))|0);
                         $5017 = __THREW__; __THREW__ = 0;
                         $5018 = $5017&1;
                         if ($5018) {
                          label = 621;
                          break L1;
                         }
                         __THREW__ = 0;
                         invoke_vi(366,($vfree71|0));
                         $5019 = __THREW__; __THREW__ = 0;
                         $5020 = $5019&1;
                         if ($5020) {
                          label = 620;
                          break L1;
                         }
                         __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos70);
                         break L1970;
                        }
                       } while(0);
                      } else {
                      }
                     } while(0);
                     $5021 = $ij567;
                     $5022 = (($5021) + 1)|0;
                     $ij567 = $5022;
                    }
                    label = 626;
                   } else {
                    label = 626;
                   }
                  } while(0);
                  if ((label|0) == 626) {
                   label = 0;
                  }
                  $5031 = $bgotonextstatement62;
                  $5032 = $5031&1;
                  if ($5032) {
                   $bgotonextstatement72 = 1;
                   $5033 = (($4) + 360|0);
                   $5034 = +HEAPF64[$5033>>3];
                   $5035 = (($4) + 136|0);
                   $5036 = +HEAPF64[$5035>>3];
                   $5037 = $5034 * $5036;
                   $x247 = $5037;
                   $5038 = (($4) + 288|0);
                   $5039 = +HEAPF64[$5038>>3];
                   $5040 = 1.0 * $5039;
                   $x248 = $5040;
                   $5041 = (($4) + 136|0);
                   $5042 = +HEAPF64[$5041>>3];
                   $5043 = -1.0 * $5042;
                   $5044 = $x248;
                   $5045 = $5043 * $5044;
                   $5046 = (($4) + 128|0);
                   $5047 = +HEAPF64[$5046>>3];
                   $5048 = (($4) + 360|0);
                   $5049 = +HEAPF64[$5048>>3];
                   $5050 = $5047 * $5049;
                   $5051 = $5045 + $5050;
                   $x249 = $5051;
                   $5052 = (($4) + 160|0);
                   $5053 = +HEAPF64[$5052>>3];
                   $5054 = (+__Z5IKabsd($5053));
                   $5055 = 3.14159265358979 + $5054;
                   $5056 = (+__Z6IKfmoddd($5055,6.2831853071795898));
                   $5057 = -3.14159265358979 + $5056;
                   HEAPF64[$evalcond31>>3] = $5057;
                   $5058 = (($4) + 432|0);
                   $5059 = +HEAPF64[$5058>>3];
                   $5060 = -1.0 + $5059;
                   $5061 = (($evalcond31) + 8|0);
                   HEAPF64[$5061>>3] = $5060;
                   $5062 = (($4) + 384|0);
                   $5063 = +HEAPF64[$5062>>3];
                   $5064 = (($evalcond31) + 16|0);
                   HEAPF64[$5064>>3] = $5063;
                   $5065 = (($4) + 288|0);
                   $5066 = +HEAPF64[$5065>>3];
                   $5067 = (($evalcond31) + 24|0);
                   HEAPF64[$5067>>3] = $5066;
                   $5068 = (($4) + 360|0);
                   $5069 = +HEAPF64[$5068>>3];
                   $5070 = (($evalcond31) + 32|0);
                   HEAPF64[$5070>>3] = $5069;
                   $5071 = (($4) + 408|0);
                   $5072 = +HEAPF64[$5071>>3];
                   $5073 = (($evalcond31) + 40|0);
                   HEAPF64[$5073>>3] = $5072;
                   $5074 = $x249;
                   $5075 = (($evalcond31) + 48|0);
                   HEAPF64[$5075>>3] = $5074;
                   $5076 = $x249;
                   $5077 = (($evalcond31) + 56|0);
                   HEAPF64[$5077>>3] = $5076;
                   $5078 = $x247;
                   $5079 = (($4) + 128|0);
                   $5080 = +HEAPF64[$5079>>3];
                   $5081 = (($4) + 288|0);
                   $5082 = +HEAPF64[$5081>>3];
                   $5083 = $5080 * $5082;
                   $5084 = $5078 + $5083;
                   $5085 = (($evalcond31) + 64|0);
                   HEAPF64[$5085>>3] = $5084;
                   $5086 = $x247;
                   $5087 = -1.0 * $5086;
                   $5088 = (($4) + 128|0);
                   $5089 = +HEAPF64[$5088>>3];
                   $5090 = -1.0 * $5089;
                   $5091 = $x248;
                   $5092 = $5090 * $5091;
                   $5093 = $5087 + $5092;
                   $5094 = (($evalcond31) + 72|0);
                   HEAPF64[$5094>>3] = $5093;
                   $5095 = +HEAPF64[$evalcond31>>3];
                   $5096 = (+__Z5IKabsd($5095));
                   $5097 = $5096 < 9.9999999999999995E-7;
                   L2035: do {
                    if ($5097) {
                     $5098 = (($evalcond31) + 8|0);
                     $5099 = +HEAPF64[$5098>>3];
                     $5100 = (+__Z5IKabsd($5099));
                     $5101 = $5100 < 9.9999999999999995E-7;
                     if (!($5101)) {
                      label = 710;
                      break;
                     }
                     $5102 = (($evalcond31) + 16|0);
                     $5103 = +HEAPF64[$5102>>3];
                     $5104 = (+__Z5IKabsd($5103));
                     $5105 = $5104 < 9.9999999999999995E-7;
                     if (!($5105)) {
                      label = 710;
                      break;
                     }
                     $5106 = (($evalcond31) + 24|0);
                     $5107 = +HEAPF64[$5106>>3];
                     $5108 = (+__Z5IKabsd($5107));
                     $5109 = $5108 < 9.9999999999999995E-7;
                     if (!($5109)) {
                      label = 710;
                      break;
                     }
                     $5110 = (($evalcond31) + 32|0);
                     $5111 = +HEAPF64[$5110>>3];
                     $5112 = (+__Z5IKabsd($5111));
                     $5113 = $5112 < 9.9999999999999995E-7;
                     if (!($5113)) {
                      label = 710;
                      break;
                     }
                     $5114 = (($evalcond31) + 40|0);
                     $5115 = +HEAPF64[$5114>>3];
                     $5116 = (+__Z5IKabsd($5115));
                     $5117 = $5116 < 9.9999999999999995E-7;
                     if (!($5117)) {
                      label = 710;
                      break;
                     }
                     $5118 = (($evalcond31) + 48|0);
                     $5119 = +HEAPF64[$5118>>3];
                     $5120 = (+__Z5IKabsd($5119));
                     $5121 = $5120 < 9.9999999999999995E-7;
                     if (!($5121)) {
                      label = 710;
                      break;
                     }
                     $5122 = (($evalcond31) + 56|0);
                     $5123 = +HEAPF64[$5122>>3];
                     $5124 = (+__Z5IKabsd($5123));
                     $5125 = $5124 < 9.9999999999999995E-7;
                     if (!($5125)) {
                      label = 710;
                      break;
                     }
                     $5126 = (($evalcond31) + 64|0);
                     $5127 = +HEAPF64[$5126>>3];
                     $5128 = (+__Z5IKabsd($5127));
                     $5129 = $5128 < 9.9999999999999995E-7;
                     if (!($5129)) {
                      label = 710;
                      break;
                     }
                     $5130 = (($evalcond31) + 72|0);
                     $5131 = +HEAPF64[$5130>>3];
                     $5132 = (+__Z5IKabsd($5131));
                     $5133 = $5132 < 9.9999999999999995E-7;
                     if (!($5133)) {
                      label = 710;
                      break;
                     }
                     $bgotonextstatement72 = 0;
                     ;HEAP8[$j5valid76+0>>0]=0|0;
                     $5134 = (($4) + 553|0);
                     HEAP8[$5134>>0] = 1;
                     $5135 = (($4) + 264|0);
                     $5136 = +HEAPF64[$5135>>3];
                     $5137 = 1.0 * $5136;
                     $x250 = $5137;
                     $5138 = (($4) + 128|0);
                     $5139 = +HEAPF64[$5138>>3];
                     $5140 = -1.0 * $5139;
                     $5141 = $x250;
                     $5142 = $5140 * $5141;
                     $5143 = (($4) + 240|0);
                     $5144 = +HEAPF64[$5143>>3];
                     $5145 = -1.0 * $5144;
                     $5146 = (($4) + 136|0);
                     $5147 = +HEAPF64[$5146>>3];
                     $5148 = $5145 * $5147;
                     $5149 = $5142 + $5148;
                     $5150 = (+__Z5IKabsd($5149));
                     $5151 = $5150 < 1.9999999999999999E-6;
                     do {
                      if ($5151) {
                       $5152 = (($4) + 136|0);
                       $5153 = +HEAPF64[$5152>>3];
                       $5154 = -1.0 * $5153;
                       $5155 = $x250;
                       $5156 = $5154 * $5155;
                       $5157 = (($4) + 128|0);
                       $5158 = +HEAPF64[$5157>>3];
                       $5159 = (($4) + 240|0);
                       $5160 = +HEAPF64[$5159>>3];
                       $5161 = $5158 * $5160;
                       $5162 = $5156 + $5161;
                       $5163 = (+__Z5IKabsd($5162));
                       $5164 = $5163 < 1.9999999999999999E-6;
                       if (!($5164)) {
                        break;
                       }
                       $5165 = (($4) + 128|0);
                       $5166 = +HEAPF64[$5165>>3];
                       $5167 = -1.0 * $5166;
                       $5168 = $x250;
                       $5169 = $5167 * $5168;
                       $5170 = (($4) + 240|0);
                       $5171 = +HEAPF64[$5170>>3];
                       $5172 = -1.0 * $5171;
                       $5173 = (($4) + 136|0);
                       $5174 = +HEAPF64[$5173>>3];
                       $5175 = $5172 * $5174;
                       $5176 = $5169 + $5175;
                       $5177 = (+__Z5IKsqrd($5176));
                       $5178 = (($4) + 136|0);
                       $5179 = +HEAPF64[$5178>>3];
                       $5180 = -1.0 * $5179;
                       $5181 = $x250;
                       $5182 = $5180 * $5181;
                       $5183 = (($4) + 128|0);
                       $5184 = +HEAPF64[$5183>>3];
                       $5185 = (($4) + 240|0);
                       $5186 = +HEAPF64[$5185>>3];
                       $5187 = $5184 * $5186;
                       $5188 = $5182 + $5187;
                       $5189 = (+__Z5IKsqrd($5188));
                       $5190 = $5177 + $5189;
                       $5191 = $5190 - 1.0;
                       $5192 = (+__Z5IKabsd($5191));
                       $5193 = $5192 <= 1.9999999999999999E-6;
                       if (!($5193)) {
                        break;
                       }
                       break L2035;
                      }
                     } while(0);
                     $5194 = (($4) + 128|0);
                     $5195 = +HEAPF64[$5194>>3];
                     $5196 = -1.0 * $5195;
                     $5197 = $x250;
                     $5198 = $5196 * $5197;
                     $5199 = (($4) + 240|0);
                     $5200 = +HEAPF64[$5199>>3];
                     $5201 = -1.0 * $5200;
                     $5202 = (($4) + 136|0);
                     $5203 = +HEAPF64[$5202>>3];
                     $5204 = $5201 * $5203;
                     $5205 = $5198 + $5204;
                     $5206 = (($4) + 136|0);
                     $5207 = +HEAPF64[$5206>>3];
                     $5208 = -1.0 * $5207;
                     $5209 = $x250;
                     $5210 = $5208 * $5209;
                     $5211 = (($4) + 128|0);
                     $5212 = +HEAPF64[$5211>>3];
                     $5213 = (($4) + 240|0);
                     $5214 = +HEAPF64[$5213>>3];
                     $5215 = $5212 * $5214;
                     $5216 = $5210 + $5215;
                     $5217 = (+__Z7IKatan2dd($5205,$5216));
                     HEAPF64[$j5array73>>3] = $5217;
                     $5218 = +HEAPF64[$j5array73>>3];
                     $5219 = (+__Z5IKsind($5218));
                     HEAPF64[$sj5array75>>3] = $5219;
                     $5220 = +HEAPF64[$j5array73>>3];
                     $5221 = (+__Z5IKcosd($5220));
                     HEAPF64[$cj5array74>>3] = $5221;
                     $5222 = +HEAPF64[$j5array73>>3];
                     $5223 = $5222 > 3.14159265358979;
                     if ($5223) {
                      $5224 = +HEAPF64[$j5array73>>3];
                      $5225 = $5224 - 6.2831853071795898;
                      HEAPF64[$j5array73>>3] = $5225;
                     } else {
                      $5226 = +HEAPF64[$j5array73>>3];
                      $5227 = $5226 < -3.14159265358979;
                      if ($5227) {
                       $5228 = +HEAPF64[$j5array73>>3];
                       $5229 = $5228 + 6.2831853071795898;
                       HEAPF64[$j5array73>>3] = $5229;
                      }
                     }
                     HEAP8[$j5valid76>>0] = 1;
                     $ij577 = 0;
                     while(1) {
                      $5230 = $ij577;
                      $5231 = ($5230|0)<(1);
                      if (!($5231)) {
                       break;
                      }
                      $5232 = $ij577;
                      $5233 = (($j5valid76) + ($5232)|0);
                      $5234 = HEAP8[$5233>>0]|0;
                      $5235 = $5234&1;
                      L2061: do {
                       if ($5235) {
                        $5236 = $ij577;
                        $5237 = $5236&255;
                        $5238 = (($4) + 551|0);
                        HEAP8[$5238>>0] = $5237;
                        $5239 = (($4) + 551|0);
                        $5240 = (($5239) + 1|0);
                        HEAP8[$5240>>0] = -1;
                        $5241 = $ij577;
                        $5242 = (($5241) + 1)|0;
                        $iij578 = $5242;
                        L2064: while(1) {
                         $5243 = $iij578;
                         $5244 = ($5243|0)<(1);
                         if (!($5244)) {
                          break;
                         }
                         $5245 = $iij578;
                         $5246 = (($j5valid76) + ($5245)|0);
                         $5247 = HEAP8[$5246>>0]|0;
                         $5248 = $5247&1;
                         do {
                          if ($5248) {
                           $5249 = $ij577;
                           $5250 = (($cj5array74) + ($5249<<3)|0);
                           $5251 = +HEAPF64[$5250>>3];
                           $5252 = $iij578;
                           $5253 = (($cj5array74) + ($5252<<3)|0);
                           $5254 = +HEAPF64[$5253>>3];
                           $5255 = $5251 - $5254;
                           $5256 = (+__Z5IKabsd($5255));
                           $5257 = $5256 < 9.9999999999999995E-7;
                           if (!($5257)) {
                            break;
                           }
                           $5258 = $ij577;
                           $5259 = (($sj5array75) + ($5258<<3)|0);
                           $5260 = +HEAPF64[$5259>>3];
                           $5261 = $iij578;
                           $5262 = (($sj5array75) + ($5261<<3)|0);
                           $5263 = +HEAPF64[$5262>>3];
                           $5264 = $5260 - $5263;
                           $5265 = (+__Z5IKabsd($5264));
                           $5266 = $5265 < 9.9999999999999995E-7;
                           if ($5266) {
                            label = 657;
                            break L2064;
                           }
                          }
                         } while(0);
                         $5273 = $iij578;
                         $5274 = (($5273) + 1)|0;
                         $iij578 = $5274;
                        }
                        if ((label|0) == 657) {
                         label = 0;
                         $5267 = $iij578;
                         $5268 = (($j5valid76) + ($5267)|0);
                         HEAP8[$5268>>0] = 0;
                         $5269 = $iij578;
                         $5270 = $5269&255;
                         $5271 = (($4) + 551|0);
                         $5272 = (($5271) + 1|0);
                         HEAP8[$5272>>0] = $5270;
                        }
                        $5275 = $ij577;
                        $5276 = (($j5array73) + ($5275<<3)|0);
                        $5277 = +HEAPF64[$5276>>3];
                        $5278 = (($4) + 200|0);
                        HEAPF64[$5278>>3] = $5277;
                        $5279 = $ij577;
                        $5280 = (($cj5array74) + ($5279<<3)|0);
                        $5281 = +HEAPF64[$5280>>3];
                        $5282 = (($4) + 208|0);
                        HEAPF64[$5282>>3] = $5281;
                        $5283 = $ij577;
                        $5284 = (($sj5array75) + ($5283<<3)|0);
                        $5285 = +HEAPF64[$5284>>3];
                        $5286 = (($4) + 216|0);
                        HEAPF64[$5286>>3] = $5285;
                        $5287 = (($4) + 200|0);
                        $5288 = +HEAPF64[$5287>>3];
                        $5289 = (+__Z5IKsind($5288));
                        $x251 = $5289;
                        $5290 = (($4) + 200|0);
                        $5291 = +HEAPF64[$5290>>3];
                        $5292 = (+__Z5IKcosd($5291));
                        $x252 = $5292;
                        $5293 = (($4) + 136|0);
                        $5294 = +HEAPF64[$5293>>3];
                        $5295 = 1.0 * $5294;
                        $x253 = $5295;
                        $5296 = $x252;
                        $5297 = 1.0 * $5296;
                        $x254 = $5297;
                        $5298 = (($4) + 136|0);
                        $5299 = +HEAPF64[$5298>>3];
                        $5300 = $x251;
                        $5301 = $5299 * $5300;
                        $x255 = $5301;
                        $5302 = $x251;
                        $5303 = 1.0 * $5302;
                        $x256 = $5303;
                        $5304 = (($4) + 128|0);
                        $5305 = +HEAPF64[$5304>>3];
                        $5306 = $x254;
                        $5307 = $5305 * $5306;
                        $x257 = $5307;
                        $5308 = (($4) + 336|0);
                        $5309 = +HEAPF64[$5308>>3];
                        $5310 = (($4) + 136|0);
                        $5311 = +HEAPF64[$5310>>3];
                        $5312 = $5309 * $5311;
                        $5313 = $x251;
                        $5314 = $5312 + $5313;
                        $5315 = (($4) + 128|0);
                        $5316 = +HEAPF64[$5315>>3];
                        $5317 = (($4) + 264|0);
                        $5318 = +HEAPF64[$5317>>3];
                        $5319 = $5316 * $5318;
                        $5320 = $5314 + $5319;
                        HEAPF64[$evalcond79>>3] = $5320;
                        $5321 = (($4) + 128|0);
                        $5322 = +HEAPF64[$5321>>3];
                        $5323 = $x251;
                        $5324 = $5322 * $5323;
                        $5325 = (($4) + 136|0);
                        $5326 = +HEAPF64[$5325>>3];
                        $5327 = $x252;
                        $5328 = $5326 * $5327;
                        $5329 = $5324 + $5328;
                        $5330 = (($4) + 264|0);
                        $5331 = +HEAPF64[$5330>>3];
                        $5332 = $5329 + $5331;
                        $5333 = (($evalcond79) + 8|0);
                        HEAPF64[$5333>>3] = $5332;
                        $5334 = (($4) + 312|0);
                        $5335 = +HEAPF64[$5334>>3];
                        $5336 = (($4) + 136|0);
                        $5337 = +HEAPF64[$5336>>3];
                        $5338 = $5335 * $5337;
                        $5339 = (($4) + 128|0);
                        $5340 = +HEAPF64[$5339>>3];
                        $5341 = (($4) + 240|0);
                        $5342 = +HEAPF64[$5341>>3];
                        $5343 = $5340 * $5342;
                        $5344 = $5338 + $5343;
                        $5345 = $x254;
                        $5346 = -1.0 * $5345;
                        $5347 = $5344 + $5346;
                        $5348 = (($evalcond79) + 16|0);
                        HEAPF64[$5348>>3] = $5347;
                        $5349 = (($4) + 128|0);
                        $5350 = +HEAPF64[$5349>>3];
                        $5351 = (($4) + 312|0);
                        $5352 = +HEAPF64[$5351>>3];
                        $5353 = $5350 * $5352;
                        $5354 = (($4) + 240|0);
                        $5355 = +HEAPF64[$5354>>3];
                        $5356 = -1.0 * $5355;
                        $5357 = $x253;
                        $5358 = $5356 * $5357;
                        $5359 = $5353 + $5358;
                        $5360 = $x256;
                        $5361 = -1.0 * $5360;
                        $5362 = $5359 + $5361;
                        $5363 = (($evalcond79) + 24|0);
                        HEAPF64[$5363>>3] = $5362;
                        $5364 = (($4) + 264|0);
                        $5365 = +HEAPF64[$5364>>3];
                        $5366 = -1.0 * $5365;
                        $5367 = $x253;
                        $5368 = $5366 * $5367;
                        $5369 = (($4) + 128|0);
                        $5370 = +HEAPF64[$5369>>3];
                        $5371 = (($4) + 336|0);
                        $5372 = +HEAPF64[$5371>>3];
                        $5373 = $5370 * $5372;
                        $5374 = $5368 + $5373;
                        $5375 = $x254;
                        $5376 = -1.0 * $5375;
                        $5377 = $5374 + $5376;
                        $5378 = (($evalcond79) + 32|0);
                        HEAPF64[$5378>>3] = $5377;
                        $5379 = $x255;
                        $5380 = (($4) + 240|0);
                        $5381 = +HEAPF64[$5380>>3];
                        $5382 = $5379 + $5381;
                        $5383 = $x257;
                        $5384 = -1.0 * $5383;
                        $5385 = $5382 + $5384;
                        $5386 = (($evalcond79) + 40|0);
                        HEAPF64[$5386>>3] = $5385;
                        $5387 = $x255;
                        $5388 = (($4) + 336|0);
                        $5389 = +HEAPF64[$5388>>3];
                        $5390 = $5387 + $5389;
                        $5391 = $x257;
                        $5392 = -1.0 * $5391;
                        $5393 = $5390 + $5392;
                        $5394 = (($evalcond79) + 48|0);
                        HEAPF64[$5394>>3] = $5393;
                        $5395 = $x252;
                        $5396 = -1.0 * $5395;
                        $5397 = $x253;
                        $5398 = $5396 * $5397;
                        $5399 = (($4) + 128|0);
                        $5400 = +HEAPF64[$5399>>3];
                        $5401 = -1.0 * $5400;
                        $5402 = $x256;
                        $5403 = $5401 * $5402;
                        $5404 = $5398 + $5403;
                        $5405 = (($4) + 312|0);
                        $5406 = +HEAPF64[$5405>>3];
                        $5407 = $5404 + $5406;
                        $5408 = (($evalcond79) + 56|0);
                        HEAPF64[$5408>>3] = $5407;
                        $5409 = +HEAPF64[$evalcond79>>3];
                        $5410 = (+__Z5IKabsd($5409));
                        $5411 = $5410 > 5.0000000000000004E-6;
                        do {
                         if (!($5411)) {
                          $5412 = (($evalcond79) + 8|0);
                          $5413 = +HEAPF64[$5412>>3];
                          $5414 = (+__Z5IKabsd($5413));
                          $5415 = $5414 > 5.0000000000000004E-6;
                          if ($5415) {
                           break;
                          }
                          $5416 = (($evalcond79) + 16|0);
                          $5417 = +HEAPF64[$5416>>3];
                          $5418 = (+__Z5IKabsd($5417));
                          $5419 = $5418 > 5.0000000000000004E-6;
                          if ($5419) {
                           break;
                          }
                          $5420 = (($evalcond79) + 24|0);
                          $5421 = +HEAPF64[$5420>>3];
                          $5422 = (+__Z5IKabsd($5421));
                          $5423 = $5422 > 5.0000000000000004E-6;
                          if ($5423) {
                           break;
                          }
                          $5424 = (($evalcond79) + 32|0);
                          $5425 = +HEAPF64[$5424>>3];
                          $5426 = (+__Z5IKabsd($5425));
                          $5427 = $5426 > 5.0000000000000004E-6;
                          if ($5427) {
                           break;
                          }
                          $5428 = (($evalcond79) + 40|0);
                          $5429 = +HEAPF64[$5428>>3];
                          $5430 = (+__Z5IKabsd($5429));
                          $5431 = $5430 > 5.0000000000000004E-6;
                          if ($5431) {
                           break;
                          }
                          $5432 = (($evalcond79) + 48|0);
                          $5433 = +HEAPF64[$5432>>3];
                          $5434 = (+__Z5IKabsd($5433));
                          $5435 = $5434 > 5.0000000000000004E-6;
                          if ($5435) {
                           break;
                          }
                          $5436 = (($evalcond79) + 56|0);
                          $5437 = +HEAPF64[$5436>>3];
                          $5438 = (+__Z5IKabsd($5437));
                          $5439 = $5438 > 5.0000000000000004E-6;
                          if ($5439) {
                           break;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos80,6);
                          __THREW__ = 0;
                          $5440 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5441 = __THREW__; __THREW__ = 0;
                          $5442 = $5441&1;
                          if ($5442) {
                           label = 704;
                           break L1;
                          }
                          $5443 = (($5440) + 17|0);
                          HEAP8[$5443>>0] = 1;
                          $5444 = +HEAPF64[$4>>3];
                          __THREW__ = 0;
                          $5445 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5446 = __THREW__; __THREW__ = 0;
                          $5447 = $5446&1;
                          if ($5447) {
                           label = 704;
                           break L1;
                          }
                          $5448 = (($5445) + 8|0);
                          HEAPF64[$5448>>3] = $5444;
                          $5449 = (($4) + 536|0);
                          $5450 = HEAP8[$5449>>0]|0;
                          __THREW__ = 0;
                          $5451 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5452 = __THREW__; __THREW__ = 0;
                          $5453 = $5452&1;
                          if ($5453) {
                           label = 704;
                           break L1;
                          }
                          $5454 = (($5451) + 19|0);
                          HEAP8[$5454>>0] = $5450;
                          $5455 = (($4) + 536|0);
                          $5456 = (($5455) + 1|0);
                          $5457 = HEAP8[$5456>>0]|0;
                          __THREW__ = 0;
                          $5458 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5459 = __THREW__; __THREW__ = 0;
                          $5460 = $5459&1;
                          if ($5460) {
                           label = 704;
                           break L1;
                          }
                          $5461 = (($5458) + 19|0);
                          $5462 = (($5461) + 1|0);
                          HEAP8[$5462>>0] = $5457;
                          $5463 = (($4) + 538|0);
                          $5464 = HEAP8[$5463>>0]|0;
                          __THREW__ = 0;
                          $5465 = (invoke_iii(381,($vinfos80|0),0)|0);
                          $5466 = __THREW__; __THREW__ = 0;
                          $5467 = $5466&1;
                          if ($5467) {
                           label = 704;
                           break L1;
                          }
                          $5468 = (($5465) + 18|0);
                          HEAP8[$5468>>0] = $5464;
                          __THREW__ = 0;
                          $5469 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5470 = __THREW__; __THREW__ = 0;
                          $5471 = $5470&1;
                          if ($5471) {
                           label = 704;
                           break L1;
                          }
                          $5472 = (($5469) + 17|0);
                          HEAP8[$5472>>0] = 1;
                          $5473 = (($4) + 40|0);
                          $5474 = +HEAPF64[$5473>>3];
                          __THREW__ = 0;
                          $5475 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5476 = __THREW__; __THREW__ = 0;
                          $5477 = $5476&1;
                          if ($5477) {
                           label = 704;
                           break L1;
                          }
                          $5478 = (($5475) + 8|0);
                          HEAPF64[$5478>>3] = $5474;
                          $5479 = (($4) + 539|0);
                          $5480 = HEAP8[$5479>>0]|0;
                          __THREW__ = 0;
                          $5481 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5482 = __THREW__; __THREW__ = 0;
                          $5483 = $5482&1;
                          if ($5483) {
                           label = 704;
                           break L1;
                          }
                          $5484 = (($5481) + 19|0);
                          HEAP8[$5484>>0] = $5480;
                          $5485 = (($4) + 539|0);
                          $5486 = (($5485) + 1|0);
                          $5487 = HEAP8[$5486>>0]|0;
                          __THREW__ = 0;
                          $5488 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5489 = __THREW__; __THREW__ = 0;
                          $5490 = $5489&1;
                          if ($5490) {
                           label = 704;
                           break L1;
                          }
                          $5491 = (($5488) + 19|0);
                          $5492 = (($5491) + 1|0);
                          HEAP8[$5492>>0] = $5487;
                          $5493 = (($4) + 541|0);
                          $5494 = HEAP8[$5493>>0]|0;
                          __THREW__ = 0;
                          $5495 = (invoke_iii(381,($vinfos80|0),1)|0);
                          $5496 = __THREW__; __THREW__ = 0;
                          $5497 = $5496&1;
                          if ($5497) {
                           label = 704;
                           break L1;
                          }
                          $5498 = (($5495) + 18|0);
                          HEAP8[$5498>>0] = $5494;
                          __THREW__ = 0;
                          $5499 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5500 = __THREW__; __THREW__ = 0;
                          $5501 = $5500&1;
                          if ($5501) {
                           label = 704;
                           break L1;
                          }
                          $5502 = (($5499) + 17|0);
                          HEAP8[$5502>>0] = 1;
                          $5503 = (($4) + 80|0);
                          $5504 = +HEAPF64[$5503>>3];
                          __THREW__ = 0;
                          $5505 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5506 = __THREW__; __THREW__ = 0;
                          $5507 = $5506&1;
                          if ($5507) {
                           label = 704;
                           break L1;
                          }
                          $5508 = (($5505) + 8|0);
                          HEAPF64[$5508>>3] = $5504;
                          $5509 = (($4) + 542|0);
                          $5510 = HEAP8[$5509>>0]|0;
                          __THREW__ = 0;
                          $5511 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5512 = __THREW__; __THREW__ = 0;
                          $5513 = $5512&1;
                          if ($5513) {
                           label = 704;
                           break L1;
                          }
                          $5514 = (($5511) + 19|0);
                          HEAP8[$5514>>0] = $5510;
                          $5515 = (($4) + 542|0);
                          $5516 = (($5515) + 1|0);
                          $5517 = HEAP8[$5516>>0]|0;
                          __THREW__ = 0;
                          $5518 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5519 = __THREW__; __THREW__ = 0;
                          $5520 = $5519&1;
                          if ($5520) {
                           label = 704;
                           break L1;
                          }
                          $5521 = (($5518) + 19|0);
                          $5522 = (($5521) + 1|0);
                          HEAP8[$5522>>0] = $5517;
                          $5523 = (($4) + 544|0);
                          $5524 = HEAP8[$5523>>0]|0;
                          __THREW__ = 0;
                          $5525 = (invoke_iii(381,($vinfos80|0),2)|0);
                          $5526 = __THREW__; __THREW__ = 0;
                          $5527 = $5526&1;
                          if ($5527) {
                           label = 704;
                           break L1;
                          }
                          $5528 = (($5525) + 18|0);
                          HEAP8[$5528>>0] = $5524;
                          __THREW__ = 0;
                          $5529 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5530 = __THREW__; __THREW__ = 0;
                          $5531 = $5530&1;
                          if ($5531) {
                           label = 704;
                           break L1;
                          }
                          $5532 = (($5529) + 17|0);
                          HEAP8[$5532>>0] = 1;
                          $5533 = (($4) + 120|0);
                          $5534 = +HEAPF64[$5533>>3];
                          __THREW__ = 0;
                          $5535 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5536 = __THREW__; __THREW__ = 0;
                          $5537 = $5536&1;
                          if ($5537) {
                           label = 704;
                           break L1;
                          }
                          $5538 = (($5535) + 8|0);
                          HEAPF64[$5538>>3] = $5534;
                          $5539 = (($4) + 545|0);
                          $5540 = HEAP8[$5539>>0]|0;
                          __THREW__ = 0;
                          $5541 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5542 = __THREW__; __THREW__ = 0;
                          $5543 = $5542&1;
                          if ($5543) {
                           label = 704;
                           break L1;
                          }
                          $5544 = (($5541) + 19|0);
                          HEAP8[$5544>>0] = $5540;
                          $5545 = (($4) + 545|0);
                          $5546 = (($5545) + 1|0);
                          $5547 = HEAP8[$5546>>0]|0;
                          __THREW__ = 0;
                          $5548 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5549 = __THREW__; __THREW__ = 0;
                          $5550 = $5549&1;
                          if ($5550) {
                           label = 704;
                           break L1;
                          }
                          $5551 = (($5548) + 19|0);
                          $5552 = (($5551) + 1|0);
                          HEAP8[$5552>>0] = $5547;
                          $5553 = (($4) + 547|0);
                          $5554 = HEAP8[$5553>>0]|0;
                          __THREW__ = 0;
                          $5555 = (invoke_iii(381,($vinfos80|0),3)|0);
                          $5556 = __THREW__; __THREW__ = 0;
                          $5557 = $5556&1;
                          if ($5557) {
                           label = 704;
                           break L1;
                          }
                          $5558 = (($5555) + 18|0);
                          HEAP8[$5558>>0] = $5554;
                          __THREW__ = 0;
                          $5559 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5560 = __THREW__; __THREW__ = 0;
                          $5561 = $5560&1;
                          if ($5561) {
                           label = 704;
                           break L1;
                          }
                          $5562 = (($5559) + 17|0);
                          HEAP8[$5562>>0] = 1;
                          $5563 = (($4) + 160|0);
                          $5564 = +HEAPF64[$5563>>3];
                          __THREW__ = 0;
                          $5565 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5566 = __THREW__; __THREW__ = 0;
                          $5567 = $5566&1;
                          if ($5567) {
                           label = 704;
                           break L1;
                          }
                          $5568 = (($5565) + 8|0);
                          HEAPF64[$5568>>3] = $5564;
                          $5569 = (($4) + 548|0);
                          $5570 = HEAP8[$5569>>0]|0;
                          __THREW__ = 0;
                          $5571 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5572 = __THREW__; __THREW__ = 0;
                          $5573 = $5572&1;
                          if ($5573) {
                           label = 704;
                           break L1;
                          }
                          $5574 = (($5571) + 19|0);
                          HEAP8[$5574>>0] = $5570;
                          $5575 = (($4) + 548|0);
                          $5576 = (($5575) + 1|0);
                          $5577 = HEAP8[$5576>>0]|0;
                          __THREW__ = 0;
                          $5578 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5579 = __THREW__; __THREW__ = 0;
                          $5580 = $5579&1;
                          if ($5580) {
                           label = 704;
                           break L1;
                          }
                          $5581 = (($5578) + 19|0);
                          $5582 = (($5581) + 1|0);
                          HEAP8[$5582>>0] = $5577;
                          $5583 = (($4) + 550|0);
                          $5584 = HEAP8[$5583>>0]|0;
                          __THREW__ = 0;
                          $5585 = (invoke_iii(381,($vinfos80|0),4)|0);
                          $5586 = __THREW__; __THREW__ = 0;
                          $5587 = $5586&1;
                          if ($5587) {
                           label = 704;
                           break L1;
                          }
                          $5588 = (($5585) + 18|0);
                          HEAP8[$5588>>0] = $5584;
                          __THREW__ = 0;
                          $5589 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5590 = __THREW__; __THREW__ = 0;
                          $5591 = $5590&1;
                          if ($5591) {
                           label = 704;
                           break L1;
                          }
                          $5592 = (($5589) + 17|0);
                          HEAP8[$5592>>0] = 1;
                          $5593 = (($4) + 200|0);
                          $5594 = +HEAPF64[$5593>>3];
                          __THREW__ = 0;
                          $5595 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5596 = __THREW__; __THREW__ = 0;
                          $5597 = $5596&1;
                          if ($5597) {
                           label = 704;
                           break L1;
                          }
                          $5598 = (($5595) + 8|0);
                          HEAPF64[$5598>>3] = $5594;
                          $5599 = (($4) + 551|0);
                          $5600 = HEAP8[$5599>>0]|0;
                          __THREW__ = 0;
                          $5601 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5602 = __THREW__; __THREW__ = 0;
                          $5603 = $5602&1;
                          if ($5603) {
                           label = 704;
                           break L1;
                          }
                          $5604 = (($5601) + 19|0);
                          HEAP8[$5604>>0] = $5600;
                          $5605 = (($4) + 551|0);
                          $5606 = (($5605) + 1|0);
                          $5607 = HEAP8[$5606>>0]|0;
                          __THREW__ = 0;
                          $5608 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5609 = __THREW__; __THREW__ = 0;
                          $5610 = $5609&1;
                          if ($5610) {
                           label = 704;
                           break L1;
                          }
                          $5611 = (($5608) + 19|0);
                          $5612 = (($5611) + 1|0);
                          HEAP8[$5612>>0] = $5607;
                          $5613 = (($4) + 553|0);
                          $5614 = HEAP8[$5613>>0]|0;
                          __THREW__ = 0;
                          $5615 = (invoke_iii(381,($vinfos80|0),5)|0);
                          $5616 = __THREW__; __THREW__ = 0;
                          $5617 = $5616&1;
                          if ($5617) {
                           label = 704;
                           break L1;
                          }
                          $5618 = (($5615) + 18|0);
                          HEAP8[$5618>>0] = $5614;
                          __THREW__ = 0;
                          invoke_vii(382,($vfree81|0),0);
                          $5619 = __THREW__; __THREW__ = 0;
                          $5620 = $5619&1;
                          if ($5620) {
                           label = 704;
                           break L1;
                          }
                          $5621 = $1;
                          $5622 = HEAP32[$5621>>2]|0;
                          $5623 = (($5622) + 8|0);
                          $5624 = HEAP32[$5623>>2]|0;
                          __THREW__ = 0;
                          (invoke_iiii($5624|0,($5621|0),($vinfos80|0),($vfree81|0))|0);
                          $5625 = __THREW__; __THREW__ = 0;
                          $5626 = $5625&1;
                          if ($5626) {
                           label = 705;
                           break L1;
                          }
                          __THREW__ = 0;
                          invoke_vi(366,($vfree81|0));
                          $5627 = __THREW__; __THREW__ = 0;
                          $5628 = $5627&1;
                          if ($5628) {
                           label = 704;
                           break L1;
                          }
                          __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos80);
                          break L2061;
                         }
                        } while(0);
                       } else {
                       }
                      } while(0);
                      $5629 = $ij577;
                      $5630 = (($5629) + 1)|0;
                      $ij577 = $5630;
                     }
                     label = 710;
                    } else {
                     label = 710;
                    }
                   } while(0);
                   if ((label|0) == 710) {
                    label = 0;
                   }
                   $5639 = $bgotonextstatement72;
                   $5640 = $5639&1;
                   if ($5640) {
                    $bgotonextstatement82 = 1;
                    $5641 = (($4) + 288|0);
                    $5642 = +HEAPF64[$5641>>3];
                    $5643 = -1.0 * $5642;
                    $5644 = (($4) + 136|0);
                    $5645 = +HEAPF64[$5644>>3];
                    $5646 = $5643 * $5645;
                    $5647 = (($4) + 128|0);
                    $5648 = +HEAPF64[$5647>>3];
                    $5649 = (($4) + 360|0);
                    $5650 = +HEAPF64[$5649>>3];
                    $5651 = $5648 * $5650;
                    $5652 = $5646 + $5651;
                    $x258 = $5652;
                    $5653 = (($4) + 360|0);
                    $5654 = +HEAPF64[$5653>>3];
                    $5655 = (($4) + 136|0);
                    $5656 = +HEAPF64[$5655>>3];
                    $5657 = $5654 * $5656;
                    $5658 = (($4) + 128|0);
                    $5659 = +HEAPF64[$5658>>3];
                    $5660 = (($4) + 288|0);
                    $5661 = +HEAPF64[$5660>>3];
                    $5662 = $5659 * $5661;
                    $5663 = $5657 + $5662;
                    $x259 = $5663;
                    $5664 = (($4) + 160|0);
                    $5665 = +HEAPF64[$5664>>3];
                    $5666 = -3.14159265358979 + $5665;
                    $5667 = (+__Z5IKabsd($5666));
                    $5668 = 3.14159265358979 + $5667;
                    $5669 = (+__Z6IKfmoddd($5668,6.2831853071795898));
                    $5670 = -3.14159265358979 + $5669;
                    HEAPF64[$evalcond31>>3] = $5670;
                    $5671 = (($4) + 432|0);
                    $5672 = +HEAPF64[$5671>>3];
                    $5673 = 1.0 + $5672;
                    $5674 = (($evalcond31) + 8|0);
                    HEAPF64[$5674>>3] = $5673;
                    $5675 = (($4) + 384|0);
                    $5676 = +HEAPF64[$5675>>3];
                    $5677 = (($evalcond31) + 16|0);
                    HEAPF64[$5677>>3] = $5676;
                    $5678 = (($4) + 288|0);
                    $5679 = +HEAPF64[$5678>>3];
                    $5680 = (($evalcond31) + 24|0);
                    HEAPF64[$5680>>3] = $5679;
                    $5681 = (($4) + 360|0);
                    $5682 = +HEAPF64[$5681>>3];
                    $5683 = (($evalcond31) + 32|0);
                    HEAPF64[$5683>>3] = $5682;
                    $5684 = (($4) + 408|0);
                    $5685 = +HEAPF64[$5684>>3];
                    $5686 = (($evalcond31) + 40|0);
                    HEAPF64[$5686>>3] = $5685;
                    $5687 = $x258;
                    $5688 = (($evalcond31) + 48|0);
                    HEAPF64[$5688>>3] = $5687;
                    $5689 = $x258;
                    $5690 = (($evalcond31) + 56|0);
                    HEAPF64[$5690>>3] = $5689;
                    $5691 = $x259;
                    $5692 = (($evalcond31) + 64|0);
                    HEAPF64[$5692>>3] = $5691;
                    $5693 = $x259;
                    $5694 = (($evalcond31) + 72|0);
                    HEAPF64[$5694>>3] = $5693;
                    $5695 = +HEAPF64[$evalcond31>>3];
                    $5696 = (+__Z5IKabsd($5695));
                    $5697 = $5696 < 9.9999999999999995E-7;
                    L2126: do {
                     if ($5697) {
                      $5698 = (($evalcond31) + 8|0);
                      $5699 = +HEAPF64[$5698>>3];
                      $5700 = (+__Z5IKabsd($5699));
                      $5701 = $5700 < 9.9999999999999995E-7;
                      if (!($5701)) {
                       label = 794;
                       break;
                      }
                      $5702 = (($evalcond31) + 16|0);
                      $5703 = +HEAPF64[$5702>>3];
                      $5704 = (+__Z5IKabsd($5703));
                      $5705 = $5704 < 9.9999999999999995E-7;
                      if (!($5705)) {
                       label = 794;
                       break;
                      }
                      $5706 = (($evalcond31) + 24|0);
                      $5707 = +HEAPF64[$5706>>3];
                      $5708 = (+__Z5IKabsd($5707));
                      $5709 = $5708 < 9.9999999999999995E-7;
                      if (!($5709)) {
                       label = 794;
                       break;
                      }
                      $5710 = (($evalcond31) + 32|0);
                      $5711 = +HEAPF64[$5710>>3];
                      $5712 = (+__Z5IKabsd($5711));
                      $5713 = $5712 < 9.9999999999999995E-7;
                      if (!($5713)) {
                       label = 794;
                       break;
                      }
                      $5714 = (($evalcond31) + 40|0);
                      $5715 = +HEAPF64[$5714>>3];
                      $5716 = (+__Z5IKabsd($5715));
                      $5717 = $5716 < 9.9999999999999995E-7;
                      if (!($5717)) {
                       label = 794;
                       break;
                      }
                      $5718 = (($evalcond31) + 48|0);
                      $5719 = +HEAPF64[$5718>>3];
                      $5720 = (+__Z5IKabsd($5719));
                      $5721 = $5720 < 9.9999999999999995E-7;
                      if (!($5721)) {
                       label = 794;
                       break;
                      }
                      $5722 = (($evalcond31) + 56|0);
                      $5723 = +HEAPF64[$5722>>3];
                      $5724 = (+__Z5IKabsd($5723));
                      $5725 = $5724 < 9.9999999999999995E-7;
                      if (!($5725)) {
                       label = 794;
                       break;
                      }
                      $5726 = (($evalcond31) + 64|0);
                      $5727 = +HEAPF64[$5726>>3];
                      $5728 = (+__Z5IKabsd($5727));
                      $5729 = $5728 < 9.9999999999999995E-7;
                      if (!($5729)) {
                       label = 794;
                       break;
                      }
                      $5730 = (($evalcond31) + 72|0);
                      $5731 = +HEAPF64[$5730>>3];
                      $5732 = (+__Z5IKabsd($5731));
                      $5733 = $5732 < 9.9999999999999995E-7;
                      if (!($5733)) {
                       label = 794;
                       break;
                      }
                      $bgotonextstatement82 = 0;
                      ;HEAP8[$j5valid86+0>>0]=0|0;
                      $5734 = (($4) + 553|0);
                      HEAP8[$5734>>0] = 1;
                      $5735 = (($4) + 136|0);
                      $5736 = +HEAPF64[$5735>>3];
                      $5737 = 1.0 * $5736;
                      $x260 = $5737;
                      $5738 = (($4) + 240|0);
                      $5739 = +HEAPF64[$5738>>3];
                      $5740 = -1.0 * $5739;
                      $5741 = $x260;
                      $5742 = $5740 * $5741;
                      $5743 = (($4) + 128|0);
                      $5744 = +HEAPF64[$5743>>3];
                      $5745 = (($4) + 264|0);
                      $5746 = +HEAPF64[$5745>>3];
                      $5747 = $5744 * $5746;
                      $5748 = $5742 + $5747;
                      $5749 = (+__Z5IKabsd($5748));
                      $5750 = $5749 < 1.9999999999999999E-6;
                      do {
                       if ($5750) {
                        $5751 = (($4) + 264|0);
                        $5752 = +HEAPF64[$5751>>3];
                        $5753 = -1.0 * $5752;
                        $5754 = $x260;
                        $5755 = $5753 * $5754;
                        $5756 = (($4) + 128|0);
                        $5757 = +HEAPF64[$5756>>3];
                        $5758 = -1.0 * $5757;
                        $5759 = (($4) + 240|0);
                        $5760 = +HEAPF64[$5759>>3];
                        $5761 = $5758 * $5760;
                        $5762 = $5755 + $5761;
                        $5763 = (+__Z5IKabsd($5762));
                        $5764 = $5763 < 1.9999999999999999E-6;
                        if (!($5764)) {
                         break;
                        }
                        $5765 = (($4) + 240|0);
                        $5766 = +HEAPF64[$5765>>3];
                        $5767 = -1.0 * $5766;
                        $5768 = $x260;
                        $5769 = $5767 * $5768;
                        $5770 = (($4) + 128|0);
                        $5771 = +HEAPF64[$5770>>3];
                        $5772 = (($4) + 264|0);
                        $5773 = +HEAPF64[$5772>>3];
                        $5774 = $5771 * $5773;
                        $5775 = $5769 + $5774;
                        $5776 = (+__Z5IKsqrd($5775));
                        $5777 = (($4) + 264|0);
                        $5778 = +HEAPF64[$5777>>3];
                        $5779 = -1.0 * $5778;
                        $5780 = $x260;
                        $5781 = $5779 * $5780;
                        $5782 = (($4) + 128|0);
                        $5783 = +HEAPF64[$5782>>3];
                        $5784 = -1.0 * $5783;
                        $5785 = (($4) + 240|0);
                        $5786 = +HEAPF64[$5785>>3];
                        $5787 = $5784 * $5786;
                        $5788 = $5781 + $5787;
                        $5789 = (+__Z5IKsqrd($5788));
                        $5790 = $5776 + $5789;
                        $5791 = $5790 - 1.0;
                        $5792 = (+__Z5IKabsd($5791));
                        $5793 = $5792 <= 1.9999999999999999E-6;
                        if (!($5793)) {
                         break;
                        }
                        break L2126;
                       }
                      } while(0);
                      $5794 = (($4) + 240|0);
                      $5795 = +HEAPF64[$5794>>3];
                      $5796 = -1.0 * $5795;
                      $5797 = $x260;
                      $5798 = $5796 * $5797;
                      $5799 = (($4) + 128|0);
                      $5800 = +HEAPF64[$5799>>3];
                      $5801 = (($4) + 264|0);
                      $5802 = +HEAPF64[$5801>>3];
                      $5803 = $5800 * $5802;
                      $5804 = $5798 + $5803;
                      $5805 = (($4) + 264|0);
                      $5806 = +HEAPF64[$5805>>3];
                      $5807 = -1.0 * $5806;
                      $5808 = $x260;
                      $5809 = $5807 * $5808;
                      $5810 = (($4) + 128|0);
                      $5811 = +HEAPF64[$5810>>3];
                      $5812 = -1.0 * $5811;
                      $5813 = (($4) + 240|0);
                      $5814 = +HEAPF64[$5813>>3];
                      $5815 = $5812 * $5814;
                      $5816 = $5809 + $5815;
                      $5817 = (+__Z7IKatan2dd($5804,$5816));
                      HEAPF64[$j5array83>>3] = $5817;
                      $5818 = +HEAPF64[$j5array83>>3];
                      $5819 = (+__Z5IKsind($5818));
                      HEAPF64[$sj5array85>>3] = $5819;
                      $5820 = +HEAPF64[$j5array83>>3];
                      $5821 = (+__Z5IKcosd($5820));
                      HEAPF64[$cj5array84>>3] = $5821;
                      $5822 = +HEAPF64[$j5array83>>3];
                      $5823 = $5822 > 3.14159265358979;
                      if ($5823) {
                       $5824 = +HEAPF64[$j5array83>>3];
                       $5825 = $5824 - 6.2831853071795898;
                       HEAPF64[$j5array83>>3] = $5825;
                      } else {
                       $5826 = +HEAPF64[$j5array83>>3];
                       $5827 = $5826 < -3.14159265358979;
                       if ($5827) {
                        $5828 = +HEAPF64[$j5array83>>3];
                        $5829 = $5828 + 6.2831853071795898;
                        HEAPF64[$j5array83>>3] = $5829;
                       }
                      }
                      HEAP8[$j5valid86>>0] = 1;
                      $ij587 = 0;
                      while(1) {
                       $5830 = $ij587;
                       $5831 = ($5830|0)<(1);
                       if (!($5831)) {
                        break;
                       }
                       $5832 = $ij587;
                       $5833 = (($j5valid86) + ($5832)|0);
                       $5834 = HEAP8[$5833>>0]|0;
                       $5835 = $5834&1;
                       L2152: do {
                        if ($5835) {
                         $5836 = $ij587;
                         $5837 = $5836&255;
                         $5838 = (($4) + 551|0);
                         HEAP8[$5838>>0] = $5837;
                         $5839 = (($4) + 551|0);
                         $5840 = (($5839) + 1|0);
                         HEAP8[$5840>>0] = -1;
                         $5841 = $ij587;
                         $5842 = (($5841) + 1)|0;
                         $iij588 = $5842;
                         L2155: while(1) {
                          $5843 = $iij588;
                          $5844 = ($5843|0)<(1);
                          if (!($5844)) {
                           break;
                          }
                          $5845 = $iij588;
                          $5846 = (($j5valid86) + ($5845)|0);
                          $5847 = HEAP8[$5846>>0]|0;
                          $5848 = $5847&1;
                          do {
                           if ($5848) {
                            $5849 = $ij587;
                            $5850 = (($cj5array84) + ($5849<<3)|0);
                            $5851 = +HEAPF64[$5850>>3];
                            $5852 = $iij588;
                            $5853 = (($cj5array84) + ($5852<<3)|0);
                            $5854 = +HEAPF64[$5853>>3];
                            $5855 = $5851 - $5854;
                            $5856 = (+__Z5IKabsd($5855));
                            $5857 = $5856 < 9.9999999999999995E-7;
                            if (!($5857)) {
                             break;
                            }
                            $5858 = $ij587;
                            $5859 = (($sj5array85) + ($5858<<3)|0);
                            $5860 = +HEAPF64[$5859>>3];
                            $5861 = $iij588;
                            $5862 = (($sj5array85) + ($5861<<3)|0);
                            $5863 = +HEAPF64[$5862>>3];
                            $5864 = $5860 - $5863;
                            $5865 = (+__Z5IKabsd($5864));
                            $5866 = $5865 < 9.9999999999999995E-7;
                            if ($5866) {
                             label = 741;
                             break L2155;
                            }
                           }
                          } while(0);
                          $5873 = $iij588;
                          $5874 = (($5873) + 1)|0;
                          $iij588 = $5874;
                         }
                         if ((label|0) == 741) {
                          label = 0;
                          $5867 = $iij588;
                          $5868 = (($j5valid86) + ($5867)|0);
                          HEAP8[$5868>>0] = 0;
                          $5869 = $iij588;
                          $5870 = $5869&255;
                          $5871 = (($4) + 551|0);
                          $5872 = (($5871) + 1|0);
                          HEAP8[$5872>>0] = $5870;
                         }
                         $5875 = $ij587;
                         $5876 = (($j5array83) + ($5875<<3)|0);
                         $5877 = +HEAPF64[$5876>>3];
                         $5878 = (($4) + 200|0);
                         HEAPF64[$5878>>3] = $5877;
                         $5879 = $ij587;
                         $5880 = (($cj5array84) + ($5879<<3)|0);
                         $5881 = +HEAPF64[$5880>>3];
                         $5882 = (($4) + 208|0);
                         HEAPF64[$5882>>3] = $5881;
                         $5883 = $ij587;
                         $5884 = (($sj5array85) + ($5883<<3)|0);
                         $5885 = +HEAPF64[$5884>>3];
                         $5886 = (($4) + 216|0);
                         HEAPF64[$5886>>3] = $5885;
                         $5887 = (($4) + 200|0);
                         $5888 = +HEAPF64[$5887>>3];
                         $5889 = (+__Z5IKsind($5888));
                         $x261 = $5889;
                         $5890 = (($4) + 200|0);
                         $5891 = +HEAPF64[$5890>>3];
                         $5892 = (+__Z5IKcosd($5891));
                         $x262 = $5892;
                         $5893 = (($4) + 136|0);
                         $5894 = +HEAPF64[$5893>>3];
                         $5895 = 1.0 * $5894;
                         $x263 = $5895;
                         $5896 = $x261;
                         $5897 = 1.0 * $5896;
                         $x264 = $5897;
                         $5898 = (($4) + 136|0);
                         $5899 = +HEAPF64[$5898>>3];
                         $5900 = $x262;
                         $5901 = $5899 * $5900;
                         $x265 = $5901;
                         $5902 = $x262;
                         $5903 = 1.0 * $5902;
                         $x266 = $5903;
                         $5904 = (($4) + 128|0);
                         $5905 = +HEAPF64[$5904>>3];
                         $5906 = $x264;
                         $5907 = $5905 * $5906;
                         $x267 = $5907;
                         $5908 = (($4) + 312|0);
                         $5909 = +HEAPF64[$5908>>3];
                         $5910 = (($4) + 136|0);
                         $5911 = +HEAPF64[$5910>>3];
                         $5912 = $5909 * $5911;
                         $5913 = $x262;
                         $5914 = $5912 + $5913;
                         $5915 = (($4) + 128|0);
                         $5916 = +HEAPF64[$5915>>3];
                         $5917 = (($4) + 240|0);
                         $5918 = +HEAPF64[$5917>>3];
                         $5919 = $5916 * $5918;
                         $5920 = $5914 + $5919;
                         HEAPF64[$evalcond89>>3] = $5920;
                         $5921 = (($4) + 336|0);
                         $5922 = +HEAPF64[$5921>>3];
                         $5923 = (($4) + 136|0);
                         $5924 = +HEAPF64[$5923>>3];
                         $5925 = $5922 * $5924;
                         $5926 = (($4) + 128|0);
                         $5927 = +HEAPF64[$5926>>3];
                         $5928 = (($4) + 264|0);
                         $5929 = +HEAPF64[$5928>>3];
                         $5930 = $5927 * $5929;
                         $5931 = $5925 + $5930;
                         $5932 = $x264;
                         $5933 = -1.0 * $5932;
                         $5934 = $5931 + $5933;
                         $5935 = (($evalcond89) + 8|0);
                         HEAPF64[$5935>>3] = $5934;
                         $5936 = (($4) + 136|0);
                         $5937 = +HEAPF64[$5936>>3];
                         $5938 = $x261;
                         $5939 = $5937 * $5938;
                         $5940 = (($4) + 240|0);
                         $5941 = +HEAPF64[$5940>>3];
                         $5942 = $5939 + $5941;
                         $5943 = (($4) + 128|0);
                         $5944 = +HEAPF64[$5943>>3];
                         $5945 = $x262;
                         $5946 = $5944 * $5945;
                         $5947 = $5942 + $5946;
                         $5948 = (($evalcond89) + 16|0);
                         HEAPF64[$5948>>3] = $5947;
                         $5949 = (($4) + 240|0);
                         $5950 = +HEAPF64[$5949>>3];
                         $5951 = -1.0 * $5950;
                         $5952 = $x263;
                         $5953 = $5951 * $5952;
                         $5954 = (($4) + 128|0);
                         $5955 = +HEAPF64[$5954>>3];
                         $5956 = (($4) + 312|0);
                         $5957 = +HEAPF64[$5956>>3];
                         $5958 = $5955 * $5957;
                         $5959 = $5953 + $5958;
                         $5960 = $x264;
                         $5961 = -1.0 * $5960;
                         $5962 = $5959 + $5961;
                         $5963 = (($evalcond89) + 24|0);
                         HEAPF64[$5963>>3] = $5962;
                         $5964 = (($4) + 264|0);
                         $5965 = +HEAPF64[$5964>>3];
                         $5966 = -1.0 * $5965;
                         $5967 = $x263;
                         $5968 = $5966 * $5967;
                         $5969 = (($4) + 128|0);
                         $5970 = +HEAPF64[$5969>>3];
                         $5971 = (($4) + 336|0);
                         $5972 = +HEAPF64[$5971>>3];
                         $5973 = $5970 * $5972;
                         $5974 = $5968 + $5973;
                         $5975 = $x266;
                         $5976 = -1.0 * $5975;
                         $5977 = $5974 + $5976;
                         $5978 = (($evalcond89) + 32|0);
                         HEAPF64[$5978>>3] = $5977;
                         $5979 = $x265;
                         $5980 = (($4) + 264|0);
                         $5981 = +HEAPF64[$5980>>3];
                         $5982 = $5979 + $5981;
                         $5983 = $x267;
                         $5984 = -1.0 * $5983;
                         $5985 = $5982 + $5984;
                         $5986 = (($evalcond89) + 40|0);
                         HEAPF64[$5986>>3] = $5985;
                         $5987 = $x265;
                         $5988 = (($4) + 312|0);
                         $5989 = +HEAPF64[$5988>>3];
                         $5990 = $5987 + $5989;
                         $5991 = $x267;
                         $5992 = -1.0 * $5991;
                         $5993 = $5990 + $5992;
                         $5994 = (($evalcond89) + 48|0);
                         HEAPF64[$5994>>3] = $5993;
                         $5995 = (($4) + 128|0);
                         $5996 = +HEAPF64[$5995>>3];
                         $5997 = -1.0 * $5996;
                         $5998 = $x266;
                         $5999 = $5997 * $5998;
                         $6000 = $x261;
                         $6001 = -1.0 * $6000;
                         $6002 = $x263;
                         $6003 = $6001 * $6002;
                         $6004 = $5999 + $6003;
                         $6005 = (($4) + 336|0);
                         $6006 = +HEAPF64[$6005>>3];
                         $6007 = $6004 + $6006;
                         $6008 = (($evalcond89) + 56|0);
                         HEAPF64[$6008>>3] = $6007;
                         $6009 = +HEAPF64[$evalcond89>>3];
                         $6010 = (+__Z5IKabsd($6009));
                         $6011 = $6010 > 5.0000000000000004E-6;
                         do {
                          if (!($6011)) {
                           $6012 = (($evalcond89) + 8|0);
                           $6013 = +HEAPF64[$6012>>3];
                           $6014 = (+__Z5IKabsd($6013));
                           $6015 = $6014 > 5.0000000000000004E-6;
                           if ($6015) {
                            break;
                           }
                           $6016 = (($evalcond89) + 16|0);
                           $6017 = +HEAPF64[$6016>>3];
                           $6018 = (+__Z5IKabsd($6017));
                           $6019 = $6018 > 5.0000000000000004E-6;
                           if ($6019) {
                            break;
                           }
                           $6020 = (($evalcond89) + 24|0);
                           $6021 = +HEAPF64[$6020>>3];
                           $6022 = (+__Z5IKabsd($6021));
                           $6023 = $6022 > 5.0000000000000004E-6;
                           if ($6023) {
                            break;
                           }
                           $6024 = (($evalcond89) + 32|0);
                           $6025 = +HEAPF64[$6024>>3];
                           $6026 = (+__Z5IKabsd($6025));
                           $6027 = $6026 > 5.0000000000000004E-6;
                           if ($6027) {
                            break;
                           }
                           $6028 = (($evalcond89) + 40|0);
                           $6029 = +HEAPF64[$6028>>3];
                           $6030 = (+__Z5IKabsd($6029));
                           $6031 = $6030 > 5.0000000000000004E-6;
                           if ($6031) {
                            break;
                           }
                           $6032 = (($evalcond89) + 48|0);
                           $6033 = +HEAPF64[$6032>>3];
                           $6034 = (+__Z5IKabsd($6033));
                           $6035 = $6034 > 5.0000000000000004E-6;
                           if ($6035) {
                            break;
                           }
                           $6036 = (($evalcond89) + 56|0);
                           $6037 = +HEAPF64[$6036>>3];
                           $6038 = (+__Z5IKabsd($6037));
                           $6039 = $6038 > 5.0000000000000004E-6;
                           if ($6039) {
                            break;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos90,6);
                           __THREW__ = 0;
                           $6040 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6041 = __THREW__; __THREW__ = 0;
                           $6042 = $6041&1;
                           if ($6042) {
                            label = 788;
                            break L1;
                           }
                           $6043 = (($6040) + 17|0);
                           HEAP8[$6043>>0] = 1;
                           $6044 = +HEAPF64[$4>>3];
                           __THREW__ = 0;
                           $6045 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6046 = __THREW__; __THREW__ = 0;
                           $6047 = $6046&1;
                           if ($6047) {
                            label = 788;
                            break L1;
                           }
                           $6048 = (($6045) + 8|0);
                           HEAPF64[$6048>>3] = $6044;
                           $6049 = (($4) + 536|0);
                           $6050 = HEAP8[$6049>>0]|0;
                           __THREW__ = 0;
                           $6051 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6052 = __THREW__; __THREW__ = 0;
                           $6053 = $6052&1;
                           if ($6053) {
                            label = 788;
                            break L1;
                           }
                           $6054 = (($6051) + 19|0);
                           HEAP8[$6054>>0] = $6050;
                           $6055 = (($4) + 536|0);
                           $6056 = (($6055) + 1|0);
                           $6057 = HEAP8[$6056>>0]|0;
                           __THREW__ = 0;
                           $6058 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6059 = __THREW__; __THREW__ = 0;
                           $6060 = $6059&1;
                           if ($6060) {
                            label = 788;
                            break L1;
                           }
                           $6061 = (($6058) + 19|0);
                           $6062 = (($6061) + 1|0);
                           HEAP8[$6062>>0] = $6057;
                           $6063 = (($4) + 538|0);
                           $6064 = HEAP8[$6063>>0]|0;
                           __THREW__ = 0;
                           $6065 = (invoke_iii(381,($vinfos90|0),0)|0);
                           $6066 = __THREW__; __THREW__ = 0;
                           $6067 = $6066&1;
                           if ($6067) {
                            label = 788;
                            break L1;
                           }
                           $6068 = (($6065) + 18|0);
                           HEAP8[$6068>>0] = $6064;
                           __THREW__ = 0;
                           $6069 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6070 = __THREW__; __THREW__ = 0;
                           $6071 = $6070&1;
                           if ($6071) {
                            label = 788;
                            break L1;
                           }
                           $6072 = (($6069) + 17|0);
                           HEAP8[$6072>>0] = 1;
                           $6073 = (($4) + 40|0);
                           $6074 = +HEAPF64[$6073>>3];
                           __THREW__ = 0;
                           $6075 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6076 = __THREW__; __THREW__ = 0;
                           $6077 = $6076&1;
                           if ($6077) {
                            label = 788;
                            break L1;
                           }
                           $6078 = (($6075) + 8|0);
                           HEAPF64[$6078>>3] = $6074;
                           $6079 = (($4) + 539|0);
                           $6080 = HEAP8[$6079>>0]|0;
                           __THREW__ = 0;
                           $6081 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6082 = __THREW__; __THREW__ = 0;
                           $6083 = $6082&1;
                           if ($6083) {
                            label = 788;
                            break L1;
                           }
                           $6084 = (($6081) + 19|0);
                           HEAP8[$6084>>0] = $6080;
                           $6085 = (($4) + 539|0);
                           $6086 = (($6085) + 1|0);
                           $6087 = HEAP8[$6086>>0]|0;
                           __THREW__ = 0;
                           $6088 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6089 = __THREW__; __THREW__ = 0;
                           $6090 = $6089&1;
                           if ($6090) {
                            label = 788;
                            break L1;
                           }
                           $6091 = (($6088) + 19|0);
                           $6092 = (($6091) + 1|0);
                           HEAP8[$6092>>0] = $6087;
                           $6093 = (($4) + 541|0);
                           $6094 = HEAP8[$6093>>0]|0;
                           __THREW__ = 0;
                           $6095 = (invoke_iii(381,($vinfos90|0),1)|0);
                           $6096 = __THREW__; __THREW__ = 0;
                           $6097 = $6096&1;
                           if ($6097) {
                            label = 788;
                            break L1;
                           }
                           $6098 = (($6095) + 18|0);
                           HEAP8[$6098>>0] = $6094;
                           __THREW__ = 0;
                           $6099 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6100 = __THREW__; __THREW__ = 0;
                           $6101 = $6100&1;
                           if ($6101) {
                            label = 788;
                            break L1;
                           }
                           $6102 = (($6099) + 17|0);
                           HEAP8[$6102>>0] = 1;
                           $6103 = (($4) + 80|0);
                           $6104 = +HEAPF64[$6103>>3];
                           __THREW__ = 0;
                           $6105 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6106 = __THREW__; __THREW__ = 0;
                           $6107 = $6106&1;
                           if ($6107) {
                            label = 788;
                            break L1;
                           }
                           $6108 = (($6105) + 8|0);
                           HEAPF64[$6108>>3] = $6104;
                           $6109 = (($4) + 542|0);
                           $6110 = HEAP8[$6109>>0]|0;
                           __THREW__ = 0;
                           $6111 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6112 = __THREW__; __THREW__ = 0;
                           $6113 = $6112&1;
                           if ($6113) {
                            label = 788;
                            break L1;
                           }
                           $6114 = (($6111) + 19|0);
                           HEAP8[$6114>>0] = $6110;
                           $6115 = (($4) + 542|0);
                           $6116 = (($6115) + 1|0);
                           $6117 = HEAP8[$6116>>0]|0;
                           __THREW__ = 0;
                           $6118 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6119 = __THREW__; __THREW__ = 0;
                           $6120 = $6119&1;
                           if ($6120) {
                            label = 788;
                            break L1;
                           }
                           $6121 = (($6118) + 19|0);
                           $6122 = (($6121) + 1|0);
                           HEAP8[$6122>>0] = $6117;
                           $6123 = (($4) + 544|0);
                           $6124 = HEAP8[$6123>>0]|0;
                           __THREW__ = 0;
                           $6125 = (invoke_iii(381,($vinfos90|0),2)|0);
                           $6126 = __THREW__; __THREW__ = 0;
                           $6127 = $6126&1;
                           if ($6127) {
                            label = 788;
                            break L1;
                           }
                           $6128 = (($6125) + 18|0);
                           HEAP8[$6128>>0] = $6124;
                           __THREW__ = 0;
                           $6129 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6130 = __THREW__; __THREW__ = 0;
                           $6131 = $6130&1;
                           if ($6131) {
                            label = 788;
                            break L1;
                           }
                           $6132 = (($6129) + 17|0);
                           HEAP8[$6132>>0] = 1;
                           $6133 = (($4) + 120|0);
                           $6134 = +HEAPF64[$6133>>3];
                           __THREW__ = 0;
                           $6135 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6136 = __THREW__; __THREW__ = 0;
                           $6137 = $6136&1;
                           if ($6137) {
                            label = 788;
                            break L1;
                           }
                           $6138 = (($6135) + 8|0);
                           HEAPF64[$6138>>3] = $6134;
                           $6139 = (($4) + 545|0);
                           $6140 = HEAP8[$6139>>0]|0;
                           __THREW__ = 0;
                           $6141 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6142 = __THREW__; __THREW__ = 0;
                           $6143 = $6142&1;
                           if ($6143) {
                            label = 788;
                            break L1;
                           }
                           $6144 = (($6141) + 19|0);
                           HEAP8[$6144>>0] = $6140;
                           $6145 = (($4) + 545|0);
                           $6146 = (($6145) + 1|0);
                           $6147 = HEAP8[$6146>>0]|0;
                           __THREW__ = 0;
                           $6148 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6149 = __THREW__; __THREW__ = 0;
                           $6150 = $6149&1;
                           if ($6150) {
                            label = 788;
                            break L1;
                           }
                           $6151 = (($6148) + 19|0);
                           $6152 = (($6151) + 1|0);
                           HEAP8[$6152>>0] = $6147;
                           $6153 = (($4) + 547|0);
                           $6154 = HEAP8[$6153>>0]|0;
                           __THREW__ = 0;
                           $6155 = (invoke_iii(381,($vinfos90|0),3)|0);
                           $6156 = __THREW__; __THREW__ = 0;
                           $6157 = $6156&1;
                           if ($6157) {
                            label = 788;
                            break L1;
                           }
                           $6158 = (($6155) + 18|0);
                           HEAP8[$6158>>0] = $6154;
                           __THREW__ = 0;
                           $6159 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6160 = __THREW__; __THREW__ = 0;
                           $6161 = $6160&1;
                           if ($6161) {
                            label = 788;
                            break L1;
                           }
                           $6162 = (($6159) + 17|0);
                           HEAP8[$6162>>0] = 1;
                           $6163 = (($4) + 160|0);
                           $6164 = +HEAPF64[$6163>>3];
                           __THREW__ = 0;
                           $6165 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6166 = __THREW__; __THREW__ = 0;
                           $6167 = $6166&1;
                           if ($6167) {
                            label = 788;
                            break L1;
                           }
                           $6168 = (($6165) + 8|0);
                           HEAPF64[$6168>>3] = $6164;
                           $6169 = (($4) + 548|0);
                           $6170 = HEAP8[$6169>>0]|0;
                           __THREW__ = 0;
                           $6171 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6172 = __THREW__; __THREW__ = 0;
                           $6173 = $6172&1;
                           if ($6173) {
                            label = 788;
                            break L1;
                           }
                           $6174 = (($6171) + 19|0);
                           HEAP8[$6174>>0] = $6170;
                           $6175 = (($4) + 548|0);
                           $6176 = (($6175) + 1|0);
                           $6177 = HEAP8[$6176>>0]|0;
                           __THREW__ = 0;
                           $6178 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6179 = __THREW__; __THREW__ = 0;
                           $6180 = $6179&1;
                           if ($6180) {
                            label = 788;
                            break L1;
                           }
                           $6181 = (($6178) + 19|0);
                           $6182 = (($6181) + 1|0);
                           HEAP8[$6182>>0] = $6177;
                           $6183 = (($4) + 550|0);
                           $6184 = HEAP8[$6183>>0]|0;
                           __THREW__ = 0;
                           $6185 = (invoke_iii(381,($vinfos90|0),4)|0);
                           $6186 = __THREW__; __THREW__ = 0;
                           $6187 = $6186&1;
                           if ($6187) {
                            label = 788;
                            break L1;
                           }
                           $6188 = (($6185) + 18|0);
                           HEAP8[$6188>>0] = $6184;
                           __THREW__ = 0;
                           $6189 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6190 = __THREW__; __THREW__ = 0;
                           $6191 = $6190&1;
                           if ($6191) {
                            label = 788;
                            break L1;
                           }
                           $6192 = (($6189) + 17|0);
                           HEAP8[$6192>>0] = 1;
                           $6193 = (($4) + 200|0);
                           $6194 = +HEAPF64[$6193>>3];
                           __THREW__ = 0;
                           $6195 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6196 = __THREW__; __THREW__ = 0;
                           $6197 = $6196&1;
                           if ($6197) {
                            label = 788;
                            break L1;
                           }
                           $6198 = (($6195) + 8|0);
                           HEAPF64[$6198>>3] = $6194;
                           $6199 = (($4) + 551|0);
                           $6200 = HEAP8[$6199>>0]|0;
                           __THREW__ = 0;
                           $6201 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6202 = __THREW__; __THREW__ = 0;
                           $6203 = $6202&1;
                           if ($6203) {
                            label = 788;
                            break L1;
                           }
                           $6204 = (($6201) + 19|0);
                           HEAP8[$6204>>0] = $6200;
                           $6205 = (($4) + 551|0);
                           $6206 = (($6205) + 1|0);
                           $6207 = HEAP8[$6206>>0]|0;
                           __THREW__ = 0;
                           $6208 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6209 = __THREW__; __THREW__ = 0;
                           $6210 = $6209&1;
                           if ($6210) {
                            label = 788;
                            break L1;
                           }
                           $6211 = (($6208) + 19|0);
                           $6212 = (($6211) + 1|0);
                           HEAP8[$6212>>0] = $6207;
                           $6213 = (($4) + 553|0);
                           $6214 = HEAP8[$6213>>0]|0;
                           __THREW__ = 0;
                           $6215 = (invoke_iii(381,($vinfos90|0),5)|0);
                           $6216 = __THREW__; __THREW__ = 0;
                           $6217 = $6216&1;
                           if ($6217) {
                            label = 788;
                            break L1;
                           }
                           $6218 = (($6215) + 18|0);
                           HEAP8[$6218>>0] = $6214;
                           __THREW__ = 0;
                           invoke_vii(382,($vfree91|0),0);
                           $6219 = __THREW__; __THREW__ = 0;
                           $6220 = $6219&1;
                           if ($6220) {
                            label = 788;
                            break L1;
                           }
                           $6221 = $1;
                           $6222 = HEAP32[$6221>>2]|0;
                           $6223 = (($6222) + 8|0);
                           $6224 = HEAP32[$6223>>2]|0;
                           __THREW__ = 0;
                           (invoke_iiii($6224|0,($6221|0),($vinfos90|0),($vfree91|0))|0);
                           $6225 = __THREW__; __THREW__ = 0;
                           $6226 = $6225&1;
                           if ($6226) {
                            label = 789;
                            break L1;
                           }
                           __THREW__ = 0;
                           invoke_vi(366,($vfree91|0));
                           $6227 = __THREW__; __THREW__ = 0;
                           $6228 = $6227&1;
                           if ($6228) {
                            label = 788;
                            break L1;
                           }
                           __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos90);
                           break L2152;
                          }
                         } while(0);
                        } else {
                        }
                       } while(0);
                       $6229 = $ij587;
                       $6230 = (($6229) + 1)|0;
                       $ij587 = $6230;
                      }
                      label = 794;
                     } else {
                      label = 794;
                     }
                    } while(0);
                    if ((label|0) == 794) {
                     label = 0;
                    }
                    $6239 = $bgotonextstatement82;
                    $6240 = $6239&1;
                    if ($6240) {
                     $bgotonextstatement92 = 1;
                     $6241 = (($4) + 432|0);
                     $6242 = +HEAPF64[$6241>>3];
                     $6243 = (($4) + 168|0);
                     $6244 = +HEAPF64[$6243>>3];
                     $6245 = -1.0 * $6244;
                     $6246 = $6242 + $6245;
                     $x268 = $6246;
                     $6247 = (($4) + 176|0);
                     $6248 = +HEAPF64[$6247>>3];
                     $6249 = -1.0 * $6248;
                     $6250 = (($4) + 288|0);
                     $6251 = +HEAPF64[$6250>>3];
                     $6252 = $6249 + $6251;
                     $x269 = $6252;
                     $6253 = (($4) + 168|0);
                     $6254 = +HEAPF64[$6253>>3];
                     $6255 = 1.0 * $6254;
                     $x270 = $6255;
                     $6256 = (($4) + 176|0);
                     $6257 = +HEAPF64[$6256>>3];
                     $6258 = 1.0 * $6257;
                     $x271 = $6258;
                     $6259 = (($4) + 120|0);
                     $6260 = +HEAPF64[$6259>>3];
                     $6261 = (+__Z5IKabsd($6260));
                     $6262 = 3.14159265358979 + $6261;
                     $6263 = (+__Z6IKfmoddd($6262,6.2831853071795898));
                     $6264 = -3.14159265358979 + $6263;
                     HEAPF64[$evalcond31>>3] = $6264;
                     $6265 = $x268;
                     $6266 = (($evalcond31) + 8|0);
                     HEAPF64[$6266>>3] = $6265;
                     $6267 = $x268;
                     $6268 = (($evalcond31) + 16|0);
                     HEAPF64[$6268>>3] = $6267;
                     $6269 = $x269;
                     $6270 = (($evalcond31) + 24|0);
                     HEAPF64[$6270>>3] = $6269;
                     $6271 = (($4) + 360|0);
                     $6272 = +HEAPF64[$6271>>3];
                     $6273 = (($evalcond31) + 32|0);
                     HEAPF64[$6273>>3] = $6272;
                     $6274 = $x269;
                     $6275 = (($evalcond31) + 40|0);
                     HEAPF64[$6275>>3] = $6274;
                     $6276 = (($4) + 432|0);
                     $6277 = +HEAPF64[$6276>>3];
                     $6278 = (($4) + 176|0);
                     $6279 = +HEAPF64[$6278>>3];
                     $6280 = $6277 * $6279;
                     $6281 = (($4) + 288|0);
                     $6282 = +HEAPF64[$6281>>3];
                     $6283 = -1.0 * $6282;
                     $6284 = $x270;
                     $6285 = $6283 * $6284;
                     $6286 = $6280 + $6285;
                     $6287 = (($evalcond31) + 48|0);
                     HEAPF64[$6287>>3] = $6286;
                     $6288 = (($4) + 240|0);
                     $6289 = +HEAPF64[$6288>>3];
                     $6290 = -1.0 * $6289;
                     $6291 = $x271;
                     $6292 = $6290 * $6291;
                     $6293 = (($4) + 384|0);
                     $6294 = +HEAPF64[$6293>>3];
                     $6295 = -1.0 * $6294;
                     $6296 = $x270;
                     $6297 = $6295 * $6296;
                     $6298 = $6292 + $6297;
                     $6299 = (($evalcond31) + 56|0);
                     HEAPF64[$6299>>3] = $6298;
                     $6300 = (($4) + 264|0);
                     $6301 = +HEAPF64[$6300>>3];
                     $6302 = -1.0 * $6301;
                     $6303 = $x271;
                     $6304 = $6302 * $6303;
                     $6305 = (($4) + 408|0);
                     $6306 = +HEAPF64[$6305>>3];
                     $6307 = -1.0 * $6306;
                     $6308 = $x270;
                     $6309 = $6307 * $6308;
                     $6310 = $6304 + $6309;
                     $6311 = (($evalcond31) + 64|0);
                     HEAPF64[$6311>>3] = $6310;
                     $6312 = (($4) + 432|0);
                     $6313 = +HEAPF64[$6312>>3];
                     $6314 = -1.0 * $6313;
                     $6315 = $x270;
                     $6316 = $6314 * $6315;
                     $6317 = 1.0 + $6316;
                     $6318 = (($4) + 288|0);
                     $6319 = +HEAPF64[$6318>>3];
                     $6320 = -1.0 * $6319;
                     $6321 = $x271;
                     $6322 = $6320 * $6321;
                     $6323 = $6317 + $6322;
                     $6324 = (($evalcond31) + 72|0);
                     HEAPF64[$6324>>3] = $6323;
                     $6325 = +HEAPF64[$evalcond31>>3];
                     $6326 = (+__Z5IKabsd($6325));
                     $6327 = $6326 < 9.9999999999999995E-7;
                     L2217: do {
                      if ($6327) {
                       $6328 = (($evalcond31) + 8|0);
                       $6329 = +HEAPF64[$6328>>3];
                       $6330 = (+__Z5IKabsd($6329));
                       $6331 = $6330 < 9.9999999999999995E-7;
                       if (!($6331)) {
                        label = 878;
                        break;
                       }
                       $6332 = (($evalcond31) + 16|0);
                       $6333 = +HEAPF64[$6332>>3];
                       $6334 = (+__Z5IKabsd($6333));
                       $6335 = $6334 < 9.9999999999999995E-7;
                       if (!($6335)) {
                        label = 878;
                        break;
                       }
                       $6336 = (($evalcond31) + 24|0);
                       $6337 = +HEAPF64[$6336>>3];
                       $6338 = (+__Z5IKabsd($6337));
                       $6339 = $6338 < 9.9999999999999995E-7;
                       if (!($6339)) {
                        label = 878;
                        break;
                       }
                       $6340 = (($evalcond31) + 32|0);
                       $6341 = +HEAPF64[$6340>>3];
                       $6342 = (+__Z5IKabsd($6341));
                       $6343 = $6342 < 9.9999999999999995E-7;
                       if (!($6343)) {
                        label = 878;
                        break;
                       }
                       $6344 = (($evalcond31) + 40|0);
                       $6345 = +HEAPF64[$6344>>3];
                       $6346 = (+__Z5IKabsd($6345));
                       $6347 = $6346 < 9.9999999999999995E-7;
                       if (!($6347)) {
                        label = 878;
                        break;
                       }
                       $6348 = (($evalcond31) + 48|0);
                       $6349 = +HEAPF64[$6348>>3];
                       $6350 = (+__Z5IKabsd($6349));
                       $6351 = $6350 < 9.9999999999999995E-7;
                       if (!($6351)) {
                        label = 878;
                        break;
                       }
                       $6352 = (($evalcond31) + 56|0);
                       $6353 = +HEAPF64[$6352>>3];
                       $6354 = (+__Z5IKabsd($6353));
                       $6355 = $6354 < 9.9999999999999995E-7;
                       if (!($6355)) {
                        label = 878;
                        break;
                       }
                       $6356 = (($evalcond31) + 64|0);
                       $6357 = +HEAPF64[$6356>>3];
                       $6358 = (+__Z5IKabsd($6357));
                       $6359 = $6358 < 9.9999999999999995E-7;
                       if (!($6359)) {
                        label = 878;
                        break;
                       }
                       $6360 = (($evalcond31) + 72|0);
                       $6361 = +HEAPF64[$6360>>3];
                       $6362 = (+__Z5IKabsd($6361));
                       $6363 = $6362 < 9.9999999999999995E-7;
                       if (!($6363)) {
                        label = 878;
                        break;
                       }
                       $bgotonextstatement92 = 0;
                       ;HEAP8[$j5valid96+0>>0]=0|0;
                       $6364 = (($4) + 553|0);
                       HEAP8[$6364>>0] = 1;
                       $6365 = (($4) + 312|0);
                       $6366 = +HEAPF64[$6365>>3];
                       $6367 = (+__Z5IKabsd($6366));
                       $6368 = $6367 < 1.9999999999999999E-6;
                       do {
                        if ($6368) {
                         $6369 = (($4) + 336|0);
                         $6370 = +HEAPF64[$6369>>3];
                         $6371 = (+__Z5IKabsd($6370));
                         $6372 = $6371 < 1.9999999999999999E-6;
                         if (!($6372)) {
                          break;
                         }
                         $6373 = (($4) + 312|0);
                         $6374 = +HEAPF64[$6373>>3];
                         $6375 = (+__Z5IKsqrd($6374));
                         $6376 = (($4) + 336|0);
                         $6377 = +HEAPF64[$6376>>3];
                         $6378 = (+__Z5IKsqrd($6377));
                         $6379 = $6375 + $6378;
                         $6380 = $6379 - 1.0;
                         $6381 = (+__Z5IKabsd($6380));
                         $6382 = $6381 <= 1.9999999999999999E-6;
                         if (!($6382)) {
                          break;
                         }
                         break L2217;
                        }
                       } while(0);
                       $6383 = (($4) + 312|0);
                       $6384 = +HEAPF64[$6383>>3];
                       $6385 = (($4) + 336|0);
                       $6386 = +HEAPF64[$6385>>3];
                       $6387 = (+__Z7IKatan2dd($6384,$6386));
                       HEAPF64[$j5array93>>3] = $6387;
                       $6388 = +HEAPF64[$j5array93>>3];
                       $6389 = (+__Z5IKsind($6388));
                       HEAPF64[$sj5array95>>3] = $6389;
                       $6390 = +HEAPF64[$j5array93>>3];
                       $6391 = (+__Z5IKcosd($6390));
                       HEAPF64[$cj5array94>>3] = $6391;
                       $6392 = +HEAPF64[$j5array93>>3];
                       $6393 = $6392 > 3.14159265358979;
                       if ($6393) {
                        $6394 = +HEAPF64[$j5array93>>3];
                        $6395 = $6394 - 6.2831853071795898;
                        HEAPF64[$j5array93>>3] = $6395;
                       } else {
                        $6396 = +HEAPF64[$j5array93>>3];
                        $6397 = $6396 < -3.14159265358979;
                        if ($6397) {
                         $6398 = +HEAPF64[$j5array93>>3];
                         $6399 = $6398 + 6.2831853071795898;
                         HEAPF64[$j5array93>>3] = $6399;
                        }
                       }
                       HEAP8[$j5valid96>>0] = 1;
                       $ij597 = 0;
                       while(1) {
                        $6400 = $ij597;
                        $6401 = ($6400|0)<(1);
                        if (!($6401)) {
                         break;
                        }
                        $6402 = $ij597;
                        $6403 = (($j5valid96) + ($6402)|0);
                        $6404 = HEAP8[$6403>>0]|0;
                        $6405 = $6404&1;
                        L2243: do {
                         if ($6405) {
                          $6406 = $ij597;
                          $6407 = $6406&255;
                          $6408 = (($4) + 551|0);
                          HEAP8[$6408>>0] = $6407;
                          $6409 = (($4) + 551|0);
                          $6410 = (($6409) + 1|0);
                          HEAP8[$6410>>0] = -1;
                          $6411 = $ij597;
                          $6412 = (($6411) + 1)|0;
                          $iij598 = $6412;
                          L2246: while(1) {
                           $6413 = $iij598;
                           $6414 = ($6413|0)<(1);
                           if (!($6414)) {
                            break;
                           }
                           $6415 = $iij598;
                           $6416 = (($j5valid96) + ($6415)|0);
                           $6417 = HEAP8[$6416>>0]|0;
                           $6418 = $6417&1;
                           do {
                            if ($6418) {
                             $6419 = $ij597;
                             $6420 = (($cj5array94) + ($6419<<3)|0);
                             $6421 = +HEAPF64[$6420>>3];
                             $6422 = $iij598;
                             $6423 = (($cj5array94) + ($6422<<3)|0);
                             $6424 = +HEAPF64[$6423>>3];
                             $6425 = $6421 - $6424;
                             $6426 = (+__Z5IKabsd($6425));
                             $6427 = $6426 < 9.9999999999999995E-7;
                             if (!($6427)) {
                              break;
                             }
                             $6428 = $ij597;
                             $6429 = (($sj5array95) + ($6428<<3)|0);
                             $6430 = +HEAPF64[$6429>>3];
                             $6431 = $iij598;
                             $6432 = (($sj5array95) + ($6431<<3)|0);
                             $6433 = +HEAPF64[$6432>>3];
                             $6434 = $6430 - $6433;
                             $6435 = (+__Z5IKabsd($6434));
                             $6436 = $6435 < 9.9999999999999995E-7;
                             if ($6436) {
                              label = 825;
                              break L2246;
                             }
                            }
                           } while(0);
                           $6443 = $iij598;
                           $6444 = (($6443) + 1)|0;
                           $iij598 = $6444;
                          }
                          if ((label|0) == 825) {
                           label = 0;
                           $6437 = $iij598;
                           $6438 = (($j5valid96) + ($6437)|0);
                           HEAP8[$6438>>0] = 0;
                           $6439 = $iij598;
                           $6440 = $6439&255;
                           $6441 = (($4) + 551|0);
                           $6442 = (($6441) + 1|0);
                           HEAP8[$6442>>0] = $6440;
                          }
                          $6445 = $ij597;
                          $6446 = (($j5array93) + ($6445<<3)|0);
                          $6447 = +HEAPF64[$6446>>3];
                          $6448 = (($4) + 200|0);
                          HEAPF64[$6448>>3] = $6447;
                          $6449 = $ij597;
                          $6450 = (($cj5array94) + ($6449<<3)|0);
                          $6451 = +HEAPF64[$6450>>3];
                          $6452 = (($4) + 208|0);
                          HEAPF64[$6452>>3] = $6451;
                          $6453 = $ij597;
                          $6454 = (($sj5array95) + ($6453<<3)|0);
                          $6455 = +HEAPF64[$6454>>3];
                          $6456 = (($4) + 216|0);
                          HEAPF64[$6456>>3] = $6455;
                          $6457 = (($4) + 200|0);
                          $6458 = +HEAPF64[$6457>>3];
                          $6459 = (+__Z5IKcosd($6458));
                          $x272 = $6459;
                          $6460 = (($4) + 200|0);
                          $6461 = +HEAPF64[$6460>>3];
                          $6462 = (+__Z5IKsind($6461));
                          $x273 = $6462;
                          $6463 = (($4) + 432|0);
                          $6464 = +HEAPF64[$6463>>3];
                          $6465 = 1.0 * $6464;
                          $x274 = $6465;
                          $6466 = $x273;
                          $6467 = 1.0 * $6466;
                          $x275 = $6467;
                          $6468 = (($4) + 384|0);
                          $6469 = +HEAPF64[$6468>>3];
                          $6470 = (($4) + 288|0);
                          $6471 = +HEAPF64[$6470>>3];
                          $6472 = $x272;
                          $6473 = $6471 * $6472;
                          $6474 = $6469 + $6473;
                          HEAPF64[$evalcond99>>3] = $6474;
                          $6475 = $x275;
                          $6476 = -1.0 * $6475;
                          $6477 = (($4) + 312|0);
                          $6478 = +HEAPF64[$6477>>3];
                          $6479 = $6476 + $6478;
                          $6480 = (($evalcond99) + 8|0);
                          HEAPF64[$6480>>3] = $6479;
                          $6481 = $x272;
                          $6482 = -1.0 * $6481;
                          $6483 = (($4) + 336|0);
                          $6484 = +HEAPF64[$6483>>3];
                          $6485 = $6482 + $6484;
                          $6486 = (($evalcond99) + 16|0);
                          HEAPF64[$6486>>3] = $6485;
                          $6487 = (($4) + 432|0);
                          $6488 = +HEAPF64[$6487>>3];
                          $6489 = $x273;
                          $6490 = $6488 * $6489;
                          $6491 = (($4) + 264|0);
                          $6492 = +HEAPF64[$6491>>3];
                          $6493 = $6490 + $6492;
                          $6494 = (($evalcond99) + 24|0);
                          HEAPF64[$6494>>3] = $6493;
                          $6495 = (($4) + 288|0);
                          $6496 = +HEAPF64[$6495>>3];
                          $6497 = -1.0 * $6496;
                          $6498 = $x275;
                          $6499 = $6497 * $6498;
                          $6500 = (($4) + 408|0);
                          $6501 = +HEAPF64[$6500>>3];
                          $6502 = $6499 + $6501;
                          $6503 = (($evalcond99) + 32|0);
                          HEAPF64[$6503>>3] = $6502;
                          $6504 = $x272;
                          $6505 = -1.0 * $6504;
                          $6506 = $x274;
                          $6507 = $6505 * $6506;
                          $6508 = (($4) + 240|0);
                          $6509 = +HEAPF64[$6508>>3];
                          $6510 = $6507 + $6509;
                          $6511 = (($evalcond99) + 40|0);
                          HEAPF64[$6511>>3] = $6510;
                          $6512 = (($4) + 240|0);
                          $6513 = +HEAPF64[$6512>>3];
                          $6514 = -1.0 * $6513;
                          $6515 = $x274;
                          $6516 = $6514 * $6515;
                          $6517 = $x272;
                          $6518 = $6516 + $6517;
                          $6519 = (($4) + 288|0);
                          $6520 = +HEAPF64[$6519>>3];
                          $6521 = (($4) + 384|0);
                          $6522 = +HEAPF64[$6521>>3];
                          $6523 = $6520 * $6522;
                          $6524 = $6518 + $6523;
                          $6525 = (($evalcond99) + 48|0);
                          HEAPF64[$6525>>3] = $6524;
                          $6526 = (($4) + 264|0);
                          $6527 = +HEAPF64[$6526>>3];
                          $6528 = -1.0 * $6527;
                          $6529 = $x274;
                          $6530 = $6528 * $6529;
                          $6531 = $x275;
                          $6532 = -1.0 * $6531;
                          $6533 = $6530 + $6532;
                          $6534 = (($4) + 288|0);
                          $6535 = +HEAPF64[$6534>>3];
                          $6536 = (($4) + 408|0);
                          $6537 = +HEAPF64[$6536>>3];
                          $6538 = $6535 * $6537;
                          $6539 = $6533 + $6538;
                          $6540 = (($evalcond99) + 56|0);
                          HEAPF64[$6540>>3] = $6539;
                          $6541 = +HEAPF64[$evalcond99>>3];
                          $6542 = (+__Z5IKabsd($6541));
                          $6543 = $6542 > 5.0000000000000004E-6;
                          do {
                           if (!($6543)) {
                            $6544 = (($evalcond99) + 8|0);
                            $6545 = +HEAPF64[$6544>>3];
                            $6546 = (+__Z5IKabsd($6545));
                            $6547 = $6546 > 5.0000000000000004E-6;
                            if ($6547) {
                             break;
                            }
                            $6548 = (($evalcond99) + 16|0);
                            $6549 = +HEAPF64[$6548>>3];
                            $6550 = (+__Z5IKabsd($6549));
                            $6551 = $6550 > 5.0000000000000004E-6;
                            if ($6551) {
                             break;
                            }
                            $6552 = (($evalcond99) + 24|0);
                            $6553 = +HEAPF64[$6552>>3];
                            $6554 = (+__Z5IKabsd($6553));
                            $6555 = $6554 > 5.0000000000000004E-6;
                            if ($6555) {
                             break;
                            }
                            $6556 = (($evalcond99) + 32|0);
                            $6557 = +HEAPF64[$6556>>3];
                            $6558 = (+__Z5IKabsd($6557));
                            $6559 = $6558 > 5.0000000000000004E-6;
                            if ($6559) {
                             break;
                            }
                            $6560 = (($evalcond99) + 40|0);
                            $6561 = +HEAPF64[$6560>>3];
                            $6562 = (+__Z5IKabsd($6561));
                            $6563 = $6562 > 5.0000000000000004E-6;
                            if ($6563) {
                             break;
                            }
                            $6564 = (($evalcond99) + 48|0);
                            $6565 = +HEAPF64[$6564>>3];
                            $6566 = (+__Z5IKabsd($6565));
                            $6567 = $6566 > 5.0000000000000004E-6;
                            if ($6567) {
                             break;
                            }
                            $6568 = (($evalcond99) + 56|0);
                            $6569 = +HEAPF64[$6568>>3];
                            $6570 = (+__Z5IKabsd($6569));
                            $6571 = $6570 > 5.0000000000000004E-6;
                            if ($6571) {
                             break;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos100,6);
                            __THREW__ = 0;
                            $6572 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6573 = __THREW__; __THREW__ = 0;
                            $6574 = $6573&1;
                            if ($6574) {
                             label = 872;
                             break L1;
                            }
                            $6575 = (($6572) + 17|0);
                            HEAP8[$6575>>0] = 1;
                            $6576 = +HEAPF64[$4>>3];
                            __THREW__ = 0;
                            $6577 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6578 = __THREW__; __THREW__ = 0;
                            $6579 = $6578&1;
                            if ($6579) {
                             label = 872;
                             break L1;
                            }
                            $6580 = (($6577) + 8|0);
                            HEAPF64[$6580>>3] = $6576;
                            $6581 = (($4) + 536|0);
                            $6582 = HEAP8[$6581>>0]|0;
                            __THREW__ = 0;
                            $6583 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6584 = __THREW__; __THREW__ = 0;
                            $6585 = $6584&1;
                            if ($6585) {
                             label = 872;
                             break L1;
                            }
                            $6586 = (($6583) + 19|0);
                            HEAP8[$6586>>0] = $6582;
                            $6587 = (($4) + 536|0);
                            $6588 = (($6587) + 1|0);
                            $6589 = HEAP8[$6588>>0]|0;
                            __THREW__ = 0;
                            $6590 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6591 = __THREW__; __THREW__ = 0;
                            $6592 = $6591&1;
                            if ($6592) {
                             label = 872;
                             break L1;
                            }
                            $6593 = (($6590) + 19|0);
                            $6594 = (($6593) + 1|0);
                            HEAP8[$6594>>0] = $6589;
                            $6595 = (($4) + 538|0);
                            $6596 = HEAP8[$6595>>0]|0;
                            __THREW__ = 0;
                            $6597 = (invoke_iii(381,($vinfos100|0),0)|0);
                            $6598 = __THREW__; __THREW__ = 0;
                            $6599 = $6598&1;
                            if ($6599) {
                             label = 872;
                             break L1;
                            }
                            $6600 = (($6597) + 18|0);
                            HEAP8[$6600>>0] = $6596;
                            __THREW__ = 0;
                            $6601 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6602 = __THREW__; __THREW__ = 0;
                            $6603 = $6602&1;
                            if ($6603) {
                             label = 872;
                             break L1;
                            }
                            $6604 = (($6601) + 17|0);
                            HEAP8[$6604>>0] = 1;
                            $6605 = (($4) + 40|0);
                            $6606 = +HEAPF64[$6605>>3];
                            __THREW__ = 0;
                            $6607 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6608 = __THREW__; __THREW__ = 0;
                            $6609 = $6608&1;
                            if ($6609) {
                             label = 872;
                             break L1;
                            }
                            $6610 = (($6607) + 8|0);
                            HEAPF64[$6610>>3] = $6606;
                            $6611 = (($4) + 539|0);
                            $6612 = HEAP8[$6611>>0]|0;
                            __THREW__ = 0;
                            $6613 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6614 = __THREW__; __THREW__ = 0;
                            $6615 = $6614&1;
                            if ($6615) {
                             label = 872;
                             break L1;
                            }
                            $6616 = (($6613) + 19|0);
                            HEAP8[$6616>>0] = $6612;
                            $6617 = (($4) + 539|0);
                            $6618 = (($6617) + 1|0);
                            $6619 = HEAP8[$6618>>0]|0;
                            __THREW__ = 0;
                            $6620 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6621 = __THREW__; __THREW__ = 0;
                            $6622 = $6621&1;
                            if ($6622) {
                             label = 872;
                             break L1;
                            }
                            $6623 = (($6620) + 19|0);
                            $6624 = (($6623) + 1|0);
                            HEAP8[$6624>>0] = $6619;
                            $6625 = (($4) + 541|0);
                            $6626 = HEAP8[$6625>>0]|0;
                            __THREW__ = 0;
                            $6627 = (invoke_iii(381,($vinfos100|0),1)|0);
                            $6628 = __THREW__; __THREW__ = 0;
                            $6629 = $6628&1;
                            if ($6629) {
                             label = 872;
                             break L1;
                            }
                            $6630 = (($6627) + 18|0);
                            HEAP8[$6630>>0] = $6626;
                            __THREW__ = 0;
                            $6631 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6632 = __THREW__; __THREW__ = 0;
                            $6633 = $6632&1;
                            if ($6633) {
                             label = 872;
                             break L1;
                            }
                            $6634 = (($6631) + 17|0);
                            HEAP8[$6634>>0] = 1;
                            $6635 = (($4) + 80|0);
                            $6636 = +HEAPF64[$6635>>3];
                            __THREW__ = 0;
                            $6637 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6638 = __THREW__; __THREW__ = 0;
                            $6639 = $6638&1;
                            if ($6639) {
                             label = 872;
                             break L1;
                            }
                            $6640 = (($6637) + 8|0);
                            HEAPF64[$6640>>3] = $6636;
                            $6641 = (($4) + 542|0);
                            $6642 = HEAP8[$6641>>0]|0;
                            __THREW__ = 0;
                            $6643 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6644 = __THREW__; __THREW__ = 0;
                            $6645 = $6644&1;
                            if ($6645) {
                             label = 872;
                             break L1;
                            }
                            $6646 = (($6643) + 19|0);
                            HEAP8[$6646>>0] = $6642;
                            $6647 = (($4) + 542|0);
                            $6648 = (($6647) + 1|0);
                            $6649 = HEAP8[$6648>>0]|0;
                            __THREW__ = 0;
                            $6650 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6651 = __THREW__; __THREW__ = 0;
                            $6652 = $6651&1;
                            if ($6652) {
                             label = 872;
                             break L1;
                            }
                            $6653 = (($6650) + 19|0);
                            $6654 = (($6653) + 1|0);
                            HEAP8[$6654>>0] = $6649;
                            $6655 = (($4) + 544|0);
                            $6656 = HEAP8[$6655>>0]|0;
                            __THREW__ = 0;
                            $6657 = (invoke_iii(381,($vinfos100|0),2)|0);
                            $6658 = __THREW__; __THREW__ = 0;
                            $6659 = $6658&1;
                            if ($6659) {
                             label = 872;
                             break L1;
                            }
                            $6660 = (($6657) + 18|0);
                            HEAP8[$6660>>0] = $6656;
                            __THREW__ = 0;
                            $6661 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6662 = __THREW__; __THREW__ = 0;
                            $6663 = $6662&1;
                            if ($6663) {
                             label = 872;
                             break L1;
                            }
                            $6664 = (($6661) + 17|0);
                            HEAP8[$6664>>0] = 1;
                            $6665 = (($4) + 120|0);
                            $6666 = +HEAPF64[$6665>>3];
                            __THREW__ = 0;
                            $6667 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6668 = __THREW__; __THREW__ = 0;
                            $6669 = $6668&1;
                            if ($6669) {
                             label = 872;
                             break L1;
                            }
                            $6670 = (($6667) + 8|0);
                            HEAPF64[$6670>>3] = $6666;
                            $6671 = (($4) + 545|0);
                            $6672 = HEAP8[$6671>>0]|0;
                            __THREW__ = 0;
                            $6673 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6674 = __THREW__; __THREW__ = 0;
                            $6675 = $6674&1;
                            if ($6675) {
                             label = 872;
                             break L1;
                            }
                            $6676 = (($6673) + 19|0);
                            HEAP8[$6676>>0] = $6672;
                            $6677 = (($4) + 545|0);
                            $6678 = (($6677) + 1|0);
                            $6679 = HEAP8[$6678>>0]|0;
                            __THREW__ = 0;
                            $6680 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6681 = __THREW__; __THREW__ = 0;
                            $6682 = $6681&1;
                            if ($6682) {
                             label = 872;
                             break L1;
                            }
                            $6683 = (($6680) + 19|0);
                            $6684 = (($6683) + 1|0);
                            HEAP8[$6684>>0] = $6679;
                            $6685 = (($4) + 547|0);
                            $6686 = HEAP8[$6685>>0]|0;
                            __THREW__ = 0;
                            $6687 = (invoke_iii(381,($vinfos100|0),3)|0);
                            $6688 = __THREW__; __THREW__ = 0;
                            $6689 = $6688&1;
                            if ($6689) {
                             label = 872;
                             break L1;
                            }
                            $6690 = (($6687) + 18|0);
                            HEAP8[$6690>>0] = $6686;
                            __THREW__ = 0;
                            $6691 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6692 = __THREW__; __THREW__ = 0;
                            $6693 = $6692&1;
                            if ($6693) {
                             label = 872;
                             break L1;
                            }
                            $6694 = (($6691) + 17|0);
                            HEAP8[$6694>>0] = 1;
                            $6695 = (($4) + 160|0);
                            $6696 = +HEAPF64[$6695>>3];
                            __THREW__ = 0;
                            $6697 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6698 = __THREW__; __THREW__ = 0;
                            $6699 = $6698&1;
                            if ($6699) {
                             label = 872;
                             break L1;
                            }
                            $6700 = (($6697) + 8|0);
                            HEAPF64[$6700>>3] = $6696;
                            $6701 = (($4) + 548|0);
                            $6702 = HEAP8[$6701>>0]|0;
                            __THREW__ = 0;
                            $6703 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6704 = __THREW__; __THREW__ = 0;
                            $6705 = $6704&1;
                            if ($6705) {
                             label = 872;
                             break L1;
                            }
                            $6706 = (($6703) + 19|0);
                            HEAP8[$6706>>0] = $6702;
                            $6707 = (($4) + 548|0);
                            $6708 = (($6707) + 1|0);
                            $6709 = HEAP8[$6708>>0]|0;
                            __THREW__ = 0;
                            $6710 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6711 = __THREW__; __THREW__ = 0;
                            $6712 = $6711&1;
                            if ($6712) {
                             label = 872;
                             break L1;
                            }
                            $6713 = (($6710) + 19|0);
                            $6714 = (($6713) + 1|0);
                            HEAP8[$6714>>0] = $6709;
                            $6715 = (($4) + 550|0);
                            $6716 = HEAP8[$6715>>0]|0;
                            __THREW__ = 0;
                            $6717 = (invoke_iii(381,($vinfos100|0),4)|0);
                            $6718 = __THREW__; __THREW__ = 0;
                            $6719 = $6718&1;
                            if ($6719) {
                             label = 872;
                             break L1;
                            }
                            $6720 = (($6717) + 18|0);
                            HEAP8[$6720>>0] = $6716;
                            __THREW__ = 0;
                            $6721 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6722 = __THREW__; __THREW__ = 0;
                            $6723 = $6722&1;
                            if ($6723) {
                             label = 872;
                             break L1;
                            }
                            $6724 = (($6721) + 17|0);
                            HEAP8[$6724>>0] = 1;
                            $6725 = (($4) + 200|0);
                            $6726 = +HEAPF64[$6725>>3];
                            __THREW__ = 0;
                            $6727 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6728 = __THREW__; __THREW__ = 0;
                            $6729 = $6728&1;
                            if ($6729) {
                             label = 872;
                             break L1;
                            }
                            $6730 = (($6727) + 8|0);
                            HEAPF64[$6730>>3] = $6726;
                            $6731 = (($4) + 551|0);
                            $6732 = HEAP8[$6731>>0]|0;
                            __THREW__ = 0;
                            $6733 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6734 = __THREW__; __THREW__ = 0;
                            $6735 = $6734&1;
                            if ($6735) {
                             label = 872;
                             break L1;
                            }
                            $6736 = (($6733) + 19|0);
                            HEAP8[$6736>>0] = $6732;
                            $6737 = (($4) + 551|0);
                            $6738 = (($6737) + 1|0);
                            $6739 = HEAP8[$6738>>0]|0;
                            __THREW__ = 0;
                            $6740 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6741 = __THREW__; __THREW__ = 0;
                            $6742 = $6741&1;
                            if ($6742) {
                             label = 872;
                             break L1;
                            }
                            $6743 = (($6740) + 19|0);
                            $6744 = (($6743) + 1|0);
                            HEAP8[$6744>>0] = $6739;
                            $6745 = (($4) + 553|0);
                            $6746 = HEAP8[$6745>>0]|0;
                            __THREW__ = 0;
                            $6747 = (invoke_iii(381,($vinfos100|0),5)|0);
                            $6748 = __THREW__; __THREW__ = 0;
                            $6749 = $6748&1;
                            if ($6749) {
                             label = 872;
                             break L1;
                            }
                            $6750 = (($6747) + 18|0);
                            HEAP8[$6750>>0] = $6746;
                            __THREW__ = 0;
                            invoke_vii(382,($vfree101|0),0);
                            $6751 = __THREW__; __THREW__ = 0;
                            $6752 = $6751&1;
                            if ($6752) {
                             label = 872;
                             break L1;
                            }
                            $6753 = $1;
                            $6754 = HEAP32[$6753>>2]|0;
                            $6755 = (($6754) + 8|0);
                            $6756 = HEAP32[$6755>>2]|0;
                            __THREW__ = 0;
                            (invoke_iiii($6756|0,($6753|0),($vinfos100|0),($vfree101|0))|0);
                            $6757 = __THREW__; __THREW__ = 0;
                            $6758 = $6757&1;
                            if ($6758) {
                             label = 873;
                             break L1;
                            }
                            __THREW__ = 0;
                            invoke_vi(366,($vfree101|0));
                            $6759 = __THREW__; __THREW__ = 0;
                            $6760 = $6759&1;
                            if ($6760) {
                             label = 872;
                             break L1;
                            }
                            __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos100);
                            break L2243;
                           }
                          } while(0);
                         } else {
                         }
                        } while(0);
                        $6761 = $ij597;
                        $6762 = (($6761) + 1)|0;
                        $ij597 = $6762;
                       }
                       label = 878;
                      } else {
                       label = 878;
                      }
                     } while(0);
                     if ((label|0) == 878) {
                      label = 0;
                     }
                     $6771 = $bgotonextstatement92;
                     $6772 = $6771&1;
                     if ($6772) {
                      $bgotonextstatement102 = 1;
                      $6773 = (($4) + 432|0);
                      $6774 = +HEAPF64[$6773>>3];
                      $6775 = (($4) + 168|0);
                      $6776 = +HEAPF64[$6775>>3];
                      $6777 = -1.0 * $6776;
                      $6778 = $6774 + $6777;
                      $x276 = $6778;
                      $6779 = (($4) + 168|0);
                      $6780 = +HEAPF64[$6779>>3];
                      $6781 = 1.0 * $6780;
                      $x277 = $6781;
                      $6782 = (($4) + 120|0);
                      $6783 = +HEAPF64[$6782>>3];
                      $6784 = -3.14159265358979 + $6783;
                      $6785 = (+__Z5IKabsd($6784));
                      $6786 = 3.14159265358979 + $6785;
                      $6787 = (+__Z6IKfmoddd($6786,6.2831853071795898));
                      $6788 = -3.14159265358979 + $6787;
                      HEAPF64[$evalcond31>>3] = $6788;
                      $6789 = $x276;
                      $6790 = (($evalcond31) + 8|0);
                      HEAPF64[$6790>>3] = $6789;
                      $6791 = $x276;
                      $6792 = (($evalcond31) + 16|0);
                      HEAPF64[$6792>>3] = $6791;
                      $6793 = (($4) + 176|0);
                      $6794 = +HEAPF64[$6793>>3];
                      $6795 = (($4) + 288|0);
                      $6796 = +HEAPF64[$6795>>3];
                      $6797 = $6794 + $6796;
                      $6798 = (($evalcond31) + 24|0);
                      HEAPF64[$6798>>3] = $6797;
                      $6799 = (($4) + 360|0);
                      $6800 = +HEAPF64[$6799>>3];
                      $6801 = (($evalcond31) + 32|0);
                      HEAPF64[$6801>>3] = $6800;
                      $6802 = (($4) + 176|0);
                      $6803 = +HEAPF64[$6802>>3];
                      $6804 = -1.0 * $6803;
                      $6805 = (($4) + 288|0);
                      $6806 = +HEAPF64[$6805>>3];
                      $6807 = -1.0 * $6806;
                      $6808 = $6804 + $6807;
                      $6809 = (($evalcond31) + 40|0);
                      HEAPF64[$6809>>3] = $6808;
                      $6810 = (($4) + 168|0);
                      $6811 = +HEAPF64[$6810>>3];
                      $6812 = (($4) + 288|0);
                      $6813 = +HEAPF64[$6812>>3];
                      $6814 = $6811 * $6813;
                      $6815 = (($4) + 432|0);
                      $6816 = +HEAPF64[$6815>>3];
                      $6817 = (($4) + 176|0);
                      $6818 = +HEAPF64[$6817>>3];
                      $6819 = $6816 * $6818;
                      $6820 = $6814 + $6819;
                      $6821 = (($evalcond31) + 48|0);
                      HEAPF64[$6821>>3] = $6820;
                      $6822 = (($4) + 240|0);
                      $6823 = +HEAPF64[$6822>>3];
                      $6824 = (($4) + 176|0);
                      $6825 = +HEAPF64[$6824>>3];
                      $6826 = $6823 * $6825;
                      $6827 = (($4) + 384|0);
                      $6828 = +HEAPF64[$6827>>3];
                      $6829 = -1.0 * $6828;
                      $6830 = $x277;
                      $6831 = $6829 * $6830;
                      $6832 = $6826 + $6831;
                      $6833 = (($evalcond31) + 56|0);
                      HEAPF64[$6833>>3] = $6832;
                      $6834 = (($4) + 264|0);
                      $6835 = +HEAPF64[$6834>>3];
                      $6836 = (($4) + 176|0);
                      $6837 = +HEAPF64[$6836>>3];
                      $6838 = $6835 * $6837;
                      $6839 = (($4) + 408|0);
                      $6840 = +HEAPF64[$6839>>3];
                      $6841 = -1.0 * $6840;
                      $6842 = $x277;
                      $6843 = $6841 * $6842;
                      $6844 = $6838 + $6843;
                      $6845 = (($evalcond31) + 64|0);
                      HEAPF64[$6845>>3] = $6844;
                      $6846 = (($4) + 288|0);
                      $6847 = +HEAPF64[$6846>>3];
                      $6848 = (($4) + 176|0);
                      $6849 = +HEAPF64[$6848>>3];
                      $6850 = $6847 * $6849;
                      $6851 = 1.0 + $6850;
                      $6852 = (($4) + 432|0);
                      $6853 = +HEAPF64[$6852>>3];
                      $6854 = -1.0 * $6853;
                      $6855 = $x277;
                      $6856 = $6854 * $6855;
                      $6857 = $6851 + $6856;
                      $6858 = (($evalcond31) + 72|0);
                      HEAPF64[$6858>>3] = $6857;
                      $6859 = +HEAPF64[$evalcond31>>3];
                      $6860 = (+__Z5IKabsd($6859));
                      $6861 = $6860 < 9.9999999999999995E-7;
                      do {
                       if ($6861) {
                        $6862 = (($evalcond31) + 8|0);
                        $6863 = +HEAPF64[$6862>>3];
                        $6864 = (+__Z5IKabsd($6863));
                        $6865 = $6864 < 9.9999999999999995E-7;
                        if (!($6865)) {
                         label = 962;
                         break;
                        }
                        $6866 = (($evalcond31) + 16|0);
                        $6867 = +HEAPF64[$6866>>3];
                        $6868 = (+__Z5IKabsd($6867));
                        $6869 = $6868 < 9.9999999999999995E-7;
                        if (!($6869)) {
                         label = 962;
                         break;
                        }
                        $6870 = (($evalcond31) + 24|0);
                        $6871 = +HEAPF64[$6870>>3];
                        $6872 = (+__Z5IKabsd($6871));
                        $6873 = $6872 < 9.9999999999999995E-7;
                        if (!($6873)) {
                         label = 962;
                         break;
                        }
                        $6874 = (($evalcond31) + 32|0);
                        $6875 = +HEAPF64[$6874>>3];
                        $6876 = (+__Z5IKabsd($6875));
                        $6877 = $6876 < 9.9999999999999995E-7;
                        if (!($6877)) {
                         label = 962;
                         break;
                        }
                        $6878 = (($evalcond31) + 40|0);
                        $6879 = +HEAPF64[$6878>>3];
                        $6880 = (+__Z5IKabsd($6879));
                        $6881 = $6880 < 9.9999999999999995E-7;
                        if (!($6881)) {
                         label = 962;
                         break;
                        }
                        $6882 = (($evalcond31) + 48|0);
                        $6883 = +HEAPF64[$6882>>3];
                        $6884 = (+__Z5IKabsd($6883));
                        $6885 = $6884 < 9.9999999999999995E-7;
                        if (!($6885)) {
                         label = 962;
                         break;
                        }
                        $6886 = (($evalcond31) + 56|0);
                        $6887 = +HEAPF64[$6886>>3];
                        $6888 = (+__Z5IKabsd($6887));
                        $6889 = $6888 < 9.9999999999999995E-7;
                        if (!($6889)) {
                         label = 962;
                         break;
                        }
                        $6890 = (($evalcond31) + 64|0);
                        $6891 = +HEAPF64[$6890>>3];
                        $6892 = (+__Z5IKabsd($6891));
                        $6893 = $6892 < 9.9999999999999995E-7;
                        if (!($6893)) {
                         label = 962;
                         break;
                        }
                        $6894 = (($evalcond31) + 72|0);
                        $6895 = +HEAPF64[$6894>>3];
                        $6896 = (+__Z5IKabsd($6895));
                        $6897 = $6896 < 9.9999999999999995E-7;
                        if (!($6897)) {
                         label = 962;
                         break;
                        }
                        $bgotonextstatement102 = 0;
                        ;HEAP8[$j5valid106+0>>0]=0|0;
                        $6898 = (($4) + 553|0);
                        HEAP8[$6898>>0] = 1;
                        $6899 = (($4) + 408|0);
                        $6900 = +HEAPF64[$6899>>3];
                        $6901 = -1.0 * $6900;
                        $6902 = (($4) + 384|0);
                        $6903 = +HEAPF64[$6902>>3];
                        __Z16IKatan2WithCheckIdE10CheckValueIT_ES1_S1_S1_($x278,$6901,$6903,1.9999999999999999E-6);
                        $6904 = (($x278) + 8|0);
                        $6905 = HEAP8[$6904>>0]|0;
                        $6906 = $6905&1;
                        if (!($6906)) {
                         break;
                        }
                        $6907 = (($4) + 288|0);
                        $6908 = +HEAPF64[$6907>>3];
                        $6909 = (+__Z6IKsignd($6908));
                        __Z21IKPowWithIntegerCheckIdE10CheckValueIT_ES1_i($x279,$6909,-1);
                        $6910 = (($x279) + 8|0);
                        $6911 = HEAP8[$6910>>0]|0;
                        $6912 = $6911&1;
                        if (!($6912)) {
                         break;
                        }
                        $6913 = +HEAPF64[$x278>>3];
                        $6914 = -1.5707963267949001 + $6913;
                        $6915 = +HEAPF64[$x279>>3];
                        $6916 = 1.5707963267949001 * $6915;
                        $6917 = $6914 + $6916;
                        HEAPF64[$j5array103>>3] = $6917;
                        $6918 = +HEAPF64[$j5array103>>3];
                        $6919 = (+__Z5IKsind($6918));
                        HEAPF64[$sj5array105>>3] = $6919;
                        $6920 = +HEAPF64[$j5array103>>3];
                        $6921 = (+__Z5IKcosd($6920));
                        HEAPF64[$cj5array104>>3] = $6921;
                        $6922 = +HEAPF64[$j5array103>>3];
                        $6923 = $6922 > 3.14159265358979;
                        if ($6923) {
                         $6924 = +HEAPF64[$j5array103>>3];
                         $6925 = $6924 - 6.2831853071795898;
                         HEAPF64[$j5array103>>3] = $6925;
                        } else {
                         $6926 = +HEAPF64[$j5array103>>3];
                         $6927 = $6926 < -3.14159265358979;
                         if ($6927) {
                          $6928 = +HEAPF64[$j5array103>>3];
                          $6929 = $6928 + 6.2831853071795898;
                          HEAPF64[$j5array103>>3] = $6929;
                         }
                        }
                        HEAP8[$j5valid106>>0] = 1;
                        $ij5107 = 0;
                        while(1) {
                         $6930 = $ij5107;
                         $6931 = ($6930|0)<(1);
                         if (!($6931)) {
                          break;
                         }
                         $6932 = $ij5107;
                         $6933 = (($j5valid106) + ($6932)|0);
                         $6934 = HEAP8[$6933>>0]|0;
                         $6935 = $6934&1;
                         L2335: do {
                          if ($6935) {
                           $6936 = $ij5107;
                           $6937 = $6936&255;
                           $6938 = (($4) + 551|0);
                           HEAP8[$6938>>0] = $6937;
                           $6939 = (($4) + 551|0);
                           $6940 = (($6939) + 1|0);
                           HEAP8[$6940>>0] = -1;
                           $6941 = $ij5107;
                           $6942 = (($6941) + 1)|0;
                           $iij5108 = $6942;
                           L2338: while(1) {
                            $6943 = $iij5108;
                            $6944 = ($6943|0)<(1);
                            if (!($6944)) {
                             break;
                            }
                            $6945 = $iij5108;
                            $6946 = (($j5valid106) + ($6945)|0);
                            $6947 = HEAP8[$6946>>0]|0;
                            $6948 = $6947&1;
                            do {
                             if ($6948) {
                              $6949 = $ij5107;
                              $6950 = (($cj5array104) + ($6949<<3)|0);
                              $6951 = +HEAPF64[$6950>>3];
                              $6952 = $iij5108;
                              $6953 = (($cj5array104) + ($6952<<3)|0);
                              $6954 = +HEAPF64[$6953>>3];
                              $6955 = $6951 - $6954;
                              $6956 = (+__Z5IKabsd($6955));
                              $6957 = $6956 < 9.9999999999999995E-7;
                              if (!($6957)) {
                               break;
                              }
                              $6958 = $ij5107;
                              $6959 = (($sj5array105) + ($6958<<3)|0);
                              $6960 = +HEAPF64[$6959>>3];
                              $6961 = $iij5108;
                              $6962 = (($sj5array105) + ($6961<<3)|0);
                              $6963 = +HEAPF64[$6962>>3];
                              $6964 = $6960 - $6963;
                              $6965 = (+__Z5IKabsd($6964));
                              $6966 = $6965 < 9.9999999999999995E-7;
                              if ($6966) {
                               label = 909;
                               break L2338;
                              }
                             }
                            } while(0);
                            $6973 = $iij5108;
                            $6974 = (($6973) + 1)|0;
                            $iij5108 = $6974;
                           }
                           if ((label|0) == 909) {
                            label = 0;
                            $6967 = $iij5108;
                            $6968 = (($j5valid106) + ($6967)|0);
                            HEAP8[$6968>>0] = 0;
                            $6969 = $iij5108;
                            $6970 = $6969&255;
                            $6971 = (($4) + 551|0);
                            $6972 = (($6971) + 1|0);
                            HEAP8[$6972>>0] = $6970;
                           }
                           $6975 = $ij5107;
                           $6976 = (($j5array103) + ($6975<<3)|0);
                           $6977 = +HEAPF64[$6976>>3];
                           $6978 = (($4) + 200|0);
                           HEAPF64[$6978>>3] = $6977;
                           $6979 = $ij5107;
                           $6980 = (($cj5array104) + ($6979<<3)|0);
                           $6981 = +HEAPF64[$6980>>3];
                           $6982 = (($4) + 208|0);
                           HEAPF64[$6982>>3] = $6981;
                           $6983 = $ij5107;
                           $6984 = (($sj5array105) + ($6983<<3)|0);
                           $6985 = +HEAPF64[$6984>>3];
                           $6986 = (($4) + 216|0);
                           HEAPF64[$6986>>3] = $6985;
                           $6987 = (($4) + 200|0);
                           $6988 = +HEAPF64[$6987>>3];
                           $6989 = (+__Z5IKsind($6988));
                           $x280 = $6989;
                           $6990 = (($4) + 200|0);
                           $6991 = +HEAPF64[$6990>>3];
                           $6992 = (+__Z5IKcosd($6991));
                           $x281 = $6992;
                           $6993 = (($4) + 288|0);
                           $6994 = +HEAPF64[$6993>>3];
                           $6995 = 1.0 * $6994;
                           $x282 = $6995;
                           $6996 = $x280;
                           $6997 = 1.0 * $6996;
                           $x283 = $6997;
                           $6998 = $x281;
                           $6999 = 1.0 * $6998;
                           $x284 = $6999;
                           $7000 = (($4) + 288|0);
                           $7001 = +HEAPF64[$7000>>3];
                           $7002 = $x280;
                           $7003 = $7001 * $7002;
                           $7004 = (($4) + 408|0);
                           $7005 = +HEAPF64[$7004>>3];
                           $7006 = $7003 + $7005;
                           HEAPF64[$evalcond109>>3] = $7006;
                           $7007 = $x281;
                           $7008 = -1.0 * $7007;
                           $7009 = $x282;
                           $7010 = $7008 * $7009;
                           $7011 = (($4) + 384|0);
                           $7012 = +HEAPF64[$7011>>3];
                           $7013 = $7010 + $7012;
                           $7014 = (($evalcond109) + 8|0);
                           HEAPF64[$7014>>3] = $7013;
                           $7015 = (($4) + 312|0);
                           $7016 = +HEAPF64[$7015>>3];
                           $7017 = -1.0 * $7016;
                           $7018 = $x283;
                           $7019 = -1.0 * $7018;
                           $7020 = $7017 + $7019;
                           $7021 = (($evalcond109) + 16|0);
                           HEAPF64[$7021>>3] = $7020;
                           $7022 = (($4) + 336|0);
                           $7023 = +HEAPF64[$7022>>3];
                           $7024 = -1.0 * $7023;
                           $7025 = $x284;
                           $7026 = -1.0 * $7025;
                           $7027 = $7024 + $7026;
                           $7028 = (($evalcond109) + 24|0);
                           HEAPF64[$7028>>3] = $7027;
                           $7029 = (($4) + 264|0);
                           $7030 = +HEAPF64[$7029>>3];
                           $7031 = -1.0 * $7030;
                           $7032 = (($4) + 432|0);
                           $7033 = +HEAPF64[$7032>>3];
                           $7034 = $x280;
                           $7035 = $7033 * $7034;
                           $7036 = $7031 + $7035;
                           $7037 = (($evalcond109) + 32|0);
                           HEAPF64[$7037>>3] = $7036;
                           $7038 = (($4) + 432|0);
                           $7039 = +HEAPF64[$7038>>3];
                           $7040 = -1.0 * $7039;
                           $7041 = $x284;
                           $7042 = $7040 * $7041;
                           $7043 = (($4) + 240|0);
                           $7044 = +HEAPF64[$7043>>3];
                           $7045 = -1.0 * $7044;
                           $7046 = $7042 + $7045;
                           $7047 = (($evalcond109) + 40|0);
                           HEAPF64[$7047>>3] = $7046;
                           $7048 = (($4) + 240|0);
                           $7049 = +HEAPF64[$7048>>3];
                           $7050 = (($4) + 432|0);
                           $7051 = +HEAPF64[$7050>>3];
                           $7052 = $7049 * $7051;
                           $7053 = $x281;
                           $7054 = $7052 + $7053;
                           $7055 = (($4) + 384|0);
                           $7056 = +HEAPF64[$7055>>3];
                           $7057 = -1.0 * $7056;
                           $7058 = $x282;
                           $7059 = $7057 * $7058;
                           $7060 = $7054 + $7059;
                           $7061 = (($evalcond109) + 48|0);
                           HEAPF64[$7061>>3] = $7060;
                           $7062 = (($4) + 264|0);
                           $7063 = +HEAPF64[$7062>>3];
                           $7064 = (($4) + 432|0);
                           $7065 = +HEAPF64[$7064>>3];
                           $7066 = $7063 * $7065;
                           $7067 = $x283;
                           $7068 = -1.0 * $7067;
                           $7069 = $7066 + $7068;
                           $7070 = (($4) + 408|0);
                           $7071 = +HEAPF64[$7070>>3];
                           $7072 = -1.0 * $7071;
                           $7073 = $x282;
                           $7074 = $7072 * $7073;
                           $7075 = $7069 + $7074;
                           $7076 = (($evalcond109) + 56|0);
                           HEAPF64[$7076>>3] = $7075;
                           $7077 = +HEAPF64[$evalcond109>>3];
                           $7078 = (+__Z5IKabsd($7077));
                           $7079 = $7078 > 5.0000000000000004E-6;
                           do {
                            if (!($7079)) {
                             $7080 = (($evalcond109) + 8|0);
                             $7081 = +HEAPF64[$7080>>3];
                             $7082 = (+__Z5IKabsd($7081));
                             $7083 = $7082 > 5.0000000000000004E-6;
                             if ($7083) {
                              break;
                             }
                             $7084 = (($evalcond109) + 16|0);
                             $7085 = +HEAPF64[$7084>>3];
                             $7086 = (+__Z5IKabsd($7085));
                             $7087 = $7086 > 5.0000000000000004E-6;
                             if ($7087) {
                              break;
                             }
                             $7088 = (($evalcond109) + 24|0);
                             $7089 = +HEAPF64[$7088>>3];
                             $7090 = (+__Z5IKabsd($7089));
                             $7091 = $7090 > 5.0000000000000004E-6;
                             if ($7091) {
                              break;
                             }
                             $7092 = (($evalcond109) + 32|0);
                             $7093 = +HEAPF64[$7092>>3];
                             $7094 = (+__Z5IKabsd($7093));
                             $7095 = $7094 > 5.0000000000000004E-6;
                             if ($7095) {
                              break;
                             }
                             $7096 = (($evalcond109) + 40|0);
                             $7097 = +HEAPF64[$7096>>3];
                             $7098 = (+__Z5IKabsd($7097));
                             $7099 = $7098 > 5.0000000000000004E-6;
                             if ($7099) {
                              break;
                             }
                             $7100 = (($evalcond109) + 48|0);
                             $7101 = +HEAPF64[$7100>>3];
                             $7102 = (+__Z5IKabsd($7101));
                             $7103 = $7102 > 5.0000000000000004E-6;
                             if ($7103) {
                              break;
                             }
                             $7104 = (($evalcond109) + 56|0);
                             $7105 = +HEAPF64[$7104>>3];
                             $7106 = (+__Z5IKabsd($7105));
                             $7107 = $7106 > 5.0000000000000004E-6;
                             if ($7107) {
                              break;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($vinfos110,6);
                             __THREW__ = 0;
                             $7108 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7109 = __THREW__; __THREW__ = 0;
                             $7110 = $7109&1;
                             if ($7110) {
                              label = 956;
                              break L1;
                             }
                             $7111 = (($7108) + 17|0);
                             HEAP8[$7111>>0] = 1;
                             $7112 = +HEAPF64[$4>>3];
                             __THREW__ = 0;
                             $7113 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7114 = __THREW__; __THREW__ = 0;
                             $7115 = $7114&1;
                             if ($7115) {
                              label = 956;
                              break L1;
                             }
                             $7116 = (($7113) + 8|0);
                             HEAPF64[$7116>>3] = $7112;
                             $7117 = (($4) + 536|0);
                             $7118 = HEAP8[$7117>>0]|0;
                             __THREW__ = 0;
                             $7119 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7120 = __THREW__; __THREW__ = 0;
                             $7121 = $7120&1;
                             if ($7121) {
                              label = 956;
                              break L1;
                             }
                             $7122 = (($7119) + 19|0);
                             HEAP8[$7122>>0] = $7118;
                             $7123 = (($4) + 536|0);
                             $7124 = (($7123) + 1|0);
                             $7125 = HEAP8[$7124>>0]|0;
                             __THREW__ = 0;
                             $7126 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7127 = __THREW__; __THREW__ = 0;
                             $7128 = $7127&1;
                             if ($7128) {
                              label = 956;
                              break L1;
                             }
                             $7129 = (($7126) + 19|0);
                             $7130 = (($7129) + 1|0);
                             HEAP8[$7130>>0] = $7125;
                             $7131 = (($4) + 538|0);
                             $7132 = HEAP8[$7131>>0]|0;
                             __THREW__ = 0;
                             $7133 = (invoke_iii(381,($vinfos110|0),0)|0);
                             $7134 = __THREW__; __THREW__ = 0;
                             $7135 = $7134&1;
                             if ($7135) {
                              label = 956;
                              break L1;
                             }
                             $7136 = (($7133) + 18|0);
                             HEAP8[$7136>>0] = $7132;
                             __THREW__ = 0;
                             $7137 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7138 = __THREW__; __THREW__ = 0;
                             $7139 = $7138&1;
                             if ($7139) {
                              label = 956;
                              break L1;
                             }
                             $7140 = (($7137) + 17|0);
                             HEAP8[$7140>>0] = 1;
                             $7141 = (($4) + 40|0);
                             $7142 = +HEAPF64[$7141>>3];
                             __THREW__ = 0;
                             $7143 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7144 = __THREW__; __THREW__ = 0;
                             $7145 = $7144&1;
                             if ($7145) {
                              label = 956;
                              break L1;
                             }
                             $7146 = (($7143) + 8|0);
                             HEAPF64[$7146>>3] = $7142;
                             $7147 = (($4) + 539|0);
                             $7148 = HEAP8[$7147>>0]|0;
                             __THREW__ = 0;
                             $7149 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7150 = __THREW__; __THREW__ = 0;
                             $7151 = $7150&1;
                             if ($7151) {
                              label = 956;
                              break L1;
                             }
                             $7152 = (($7149) + 19|0);
                             HEAP8[$7152>>0] = $7148;
                             $7153 = (($4) + 539|0);
                             $7154 = (($7153) + 1|0);
                             $7155 = HEAP8[$7154>>0]|0;
                             __THREW__ = 0;
                             $7156 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7157 = __THREW__; __THREW__ = 0;
                             $7158 = $7157&1;
                             if ($7158) {
                              label = 956;
                              break L1;
                             }
                             $7159 = (($7156) + 19|0);
                             $7160 = (($7159) + 1|0);
                             HEAP8[$7160>>0] = $7155;
                             $7161 = (($4) + 541|0);
                             $7162 = HEAP8[$7161>>0]|0;
                             __THREW__ = 0;
                             $7163 = (invoke_iii(381,($vinfos110|0),1)|0);
                             $7164 = __THREW__; __THREW__ = 0;
                             $7165 = $7164&1;
                             if ($7165) {
                              label = 956;
                              break L1;
                             }
                             $7166 = (($7163) + 18|0);
                             HEAP8[$7166>>0] = $7162;
                             __THREW__ = 0;
                             $7167 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7168 = __THREW__; __THREW__ = 0;
                             $7169 = $7168&1;
                             if ($7169) {
                              label = 956;
                              break L1;
                             }
                             $7170 = (($7167) + 17|0);
                             HEAP8[$7170>>0] = 1;
                             $7171 = (($4) + 80|0);
                             $7172 = +HEAPF64[$7171>>3];
                             __THREW__ = 0;
                             $7173 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7174 = __THREW__; __THREW__ = 0;
                             $7175 = $7174&1;
                             if ($7175) {
                              label = 956;
                              break L1;
                             }
                             $7176 = (($7173) + 8|0);
                             HEAPF64[$7176>>3] = $7172;
                             $7177 = (($4) + 542|0);
                             $7178 = HEAP8[$7177>>0]|0;
                             __THREW__ = 0;
                             $7179 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7180 = __THREW__; __THREW__ = 0;
                             $7181 = $7180&1;
                             if ($7181) {
                              label = 956;
                              break L1;
                             }
                             $7182 = (($7179) + 19|0);
                             HEAP8[$7182>>0] = $7178;
                             $7183 = (($4) + 542|0);
                             $7184 = (($7183) + 1|0);
                             $7185 = HEAP8[$7184>>0]|0;
                             __THREW__ = 0;
                             $7186 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7187 = __THREW__; __THREW__ = 0;
                             $7188 = $7187&1;
                             if ($7188) {
                              label = 956;
                              break L1;
                             }
                             $7189 = (($7186) + 19|0);
                             $7190 = (($7189) + 1|0);
                             HEAP8[$7190>>0] = $7185;
                             $7191 = (($4) + 544|0);
                             $7192 = HEAP8[$7191>>0]|0;
                             __THREW__ = 0;
                             $7193 = (invoke_iii(381,($vinfos110|0),2)|0);
                             $7194 = __THREW__; __THREW__ = 0;
                             $7195 = $7194&1;
                             if ($7195) {
                              label = 956;
                              break L1;
                             }
                             $7196 = (($7193) + 18|0);
                             HEAP8[$7196>>0] = $7192;
                             __THREW__ = 0;
                             $7197 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7198 = __THREW__; __THREW__ = 0;
                             $7199 = $7198&1;
                             if ($7199) {
                              label = 956;
                              break L1;
                             }
                             $7200 = (($7197) + 17|0);
                             HEAP8[$7200>>0] = 1;
                             $7201 = (($4) + 120|0);
                             $7202 = +HEAPF64[$7201>>3];
                             __THREW__ = 0;
                             $7203 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7204 = __THREW__; __THREW__ = 0;
                             $7205 = $7204&1;
                             if ($7205) {
                              label = 956;
                              break L1;
                             }
                             $7206 = (($7203) + 8|0);
                             HEAPF64[$7206>>3] = $7202;
                             $7207 = (($4) + 545|0);
                             $7208 = HEAP8[$7207>>0]|0;
                             __THREW__ = 0;
                             $7209 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7210 = __THREW__; __THREW__ = 0;
                             $7211 = $7210&1;
                             if ($7211) {
                              label = 956;
                              break L1;
                             }
                             $7212 = (($7209) + 19|0);
                             HEAP8[$7212>>0] = $7208;
                             $7213 = (($4) + 545|0);
                             $7214 = (($7213) + 1|0);
                             $7215 = HEAP8[$7214>>0]|0;
                             __THREW__ = 0;
                             $7216 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7217 = __THREW__; __THREW__ = 0;
                             $7218 = $7217&1;
                             if ($7218) {
                              label = 956;
                              break L1;
                             }
                             $7219 = (($7216) + 19|0);
                             $7220 = (($7219) + 1|0);
                             HEAP8[$7220>>0] = $7215;
                             $7221 = (($4) + 547|0);
                             $7222 = HEAP8[$7221>>0]|0;
                             __THREW__ = 0;
                             $7223 = (invoke_iii(381,($vinfos110|0),3)|0);
                             $7224 = __THREW__; __THREW__ = 0;
                             $7225 = $7224&1;
                             if ($7225) {
                              label = 956;
                              break L1;
                             }
                             $7226 = (($7223) + 18|0);
                             HEAP8[$7226>>0] = $7222;
                             __THREW__ = 0;
                             $7227 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7228 = __THREW__; __THREW__ = 0;
                             $7229 = $7228&1;
                             if ($7229) {
                              label = 956;
                              break L1;
                             }
                             $7230 = (($7227) + 17|0);
                             HEAP8[$7230>>0] = 1;
                             $7231 = (($4) + 160|0);
                             $7232 = +HEAPF64[$7231>>3];
                             __THREW__ = 0;
                             $7233 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7234 = __THREW__; __THREW__ = 0;
                             $7235 = $7234&1;
                             if ($7235) {
                              label = 956;
                              break L1;
                             }
                             $7236 = (($7233) + 8|0);
                             HEAPF64[$7236>>3] = $7232;
                             $7237 = (($4) + 548|0);
                             $7238 = HEAP8[$7237>>0]|0;
                             __THREW__ = 0;
                             $7239 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7240 = __THREW__; __THREW__ = 0;
                             $7241 = $7240&1;
                             if ($7241) {
                              label = 956;
                              break L1;
                             }
                             $7242 = (($7239) + 19|0);
                             HEAP8[$7242>>0] = $7238;
                             $7243 = (($4) + 548|0);
                             $7244 = (($7243) + 1|0);
                             $7245 = HEAP8[$7244>>0]|0;
                             __THREW__ = 0;
                             $7246 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7247 = __THREW__; __THREW__ = 0;
                             $7248 = $7247&1;
                             if ($7248) {
                              label = 956;
                              break L1;
                             }
                             $7249 = (($7246) + 19|0);
                             $7250 = (($7249) + 1|0);
                             HEAP8[$7250>>0] = $7245;
                             $7251 = (($4) + 550|0);
                             $7252 = HEAP8[$7251>>0]|0;
                             __THREW__ = 0;
                             $7253 = (invoke_iii(381,($vinfos110|0),4)|0);
                             $7254 = __THREW__; __THREW__ = 0;
                             $7255 = $7254&1;
                             if ($7255) {
                              label = 956;
                              break L1;
                             }
                             $7256 = (($7253) + 18|0);
                             HEAP8[$7256>>0] = $7252;
                             __THREW__ = 0;
                             $7257 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7258 = __THREW__; __THREW__ = 0;
                             $7259 = $7258&1;
                             if ($7259) {
                              label = 956;
                              break L1;
                             }
                             $7260 = (($7257) + 17|0);
                             HEAP8[$7260>>0] = 1;
                             $7261 = (($4) + 200|0);
                             $7262 = +HEAPF64[$7261>>3];
                             __THREW__ = 0;
                             $7263 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7264 = __THREW__; __THREW__ = 0;
                             $7265 = $7264&1;
                             if ($7265) {
                              label = 956;
                              break L1;
                             }
                             $7266 = (($7263) + 8|0);
                             HEAPF64[$7266>>3] = $7262;
                             $7267 = (($4) + 551|0);
                             $7268 = HEAP8[$7267>>0]|0;
                             __THREW__ = 0;
                             $7269 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7270 = __THREW__; __THREW__ = 0;
                             $7271 = $7270&1;
                             if ($7271) {
                              label = 956;
                              break L1;
                             }
                             $7272 = (($7269) + 19|0);
                             HEAP8[$7272>>0] = $7268;
                             $7273 = (($4) + 551|0);
                             $7274 = (($7273) + 1|0);
                             $7275 = HEAP8[$7274>>0]|0;
                             __THREW__ = 0;
                             $7276 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7277 = __THREW__; __THREW__ = 0;
                             $7278 = $7277&1;
                             if ($7278) {
                              label = 956;
                              break L1;
                             }
                             $7279 = (($7276) + 19|0);
                             $7280 = (($7279) + 1|0);
                             HEAP8[$7280>>0] = $7275;
                             $7281 = (($4) + 553|0);
                             $7282 = HEAP8[$7281>>0]|0;
                             __THREW__ = 0;
                             $7283 = (invoke_iii(381,($vinfos110|0),5)|0);
                             $7284 = __THREW__; __THREW__ = 0;
                             $7285 = $7284&1;
                             if ($7285) {
                              label = 956;
                              break L1;
                             }
                             $7286 = (($7283) + 18|0);
                             HEAP8[$7286>>0] = $7282;
                             __THREW__ = 0;
                             invoke_vii(382,($vfree111|0),0);
                             $7287 = __THREW__; __THREW__ = 0;
                             $7288 = $7287&1;
                             if ($7288) {
                              label = 956;
                              break L1;
                             }
                             $7289 = $1;
                             $7290 = HEAP32[$7289>>2]|0;
                             $7291 = (($7290) + 8|0);
                             $7292 = HEAP32[$7291>>2]|0;
                             __THREW__ = 0;
                             (invoke_iiii($7292|0,($7289|0),($vinfos110|0),($vfree111|0))|0);
                             $7293 = __THREW__; __THREW__ = 0;
                             $7294 = $7293&1;
                             if ($7294) {
                              label = 957;
                              break L1;
                             }
                             __THREW__ = 0;
                             invoke_vi(366,($vfree111|0));
                             $7295 = __THREW__; __THREW__ = 0;
                             $7296 = $7295&1;
                             if ($7296) {
                              label = 956;
                              break L1;
                             }
                             __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($vinfos110);
                             break L2335;
                            }
                           } while(0);
                          } else {
                          }
                         } while(0);
                         $7297 = $ij5107;
                         $7298 = (($7297) + 1)|0;
                         $ij5107 = $7298;
                        }
                        label = 962;
                       } else {
                        label = 962;
                       }
                      } while(0);
                      if ((label|0) == 962) {
                       label = 0;
                      }
                      $7307 = $bgotonextstatement102;
                      $7308 = $7307&1;
                      if ($7308) {
                       $bgotonextstatement112 = 1;
                       $bgotonextstatement112 = 0;
                       $7309 = $bgotonextstatement112;
                       $7310 = $7309&1;
                       if ($7310) {
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
            break L1376;
           }
          } while(0);
         } else {
         }
        } while(0);
        $9083 = $ij326;
        $9084 = (($9083) + 1)|0;
        $ij326 = $9084;
       }
      }
     }
    } else {
    }
   } while(0);
   $16123 = $ij4;
   $16124 = (($16123) + 1)|0;
   $ij4 = $16124;
  }
  $16125 = $rotationiter;
  $16126 = (($16125) + 1)|0;
  $rotationiter = $16126;
 }
 switch (label|0) {
  case 122: {
   $1286 = ___cxa_find_matching_catch()|0;
   $1287 = tempRet0;
   $2 = $1286;
   $3 = $1287;
   label = 125;
   break;
  }
  case 123: {
   $1288 = ___cxa_find_matching_catch()|0;
   $1289 = tempRet0;
   $2 = $1288;
   $3 = $1289;
   __THREW__ = 0;
   invoke_vi(366,($vfree|0));
   $1290 = __THREW__; __THREW__ = 0;
   $1291 = $1290&1;
   if ($1291) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 125;
    break;
   }
   break;
  }
  case 230: {
   $1963 = ___cxa_find_matching_catch()|0;
   $1964 = tempRet0;
   $2 = $1963;
   $3 = $1964;
   label = 233;
   break;
  }
  case 231: {
   $1965 = ___cxa_find_matching_catch()|0;
   $1966 = tempRet0;
   $2 = $1965;
   $3 = $1966;
   __THREW__ = 0;
   invoke_vi(366,($vfree20|0));
   $1967 = __THREW__; __THREW__ = 0;
   $1968 = $1967&1;
   if ($1968) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 233;
    break;
   }
   break;
  }
  case 364: {
   $3364 = ___cxa_find_matching_catch()|0;
   $3365 = tempRet0;
   $2 = $3364;
   $3 = $3365;
   label = 367;
   break;
  }
  case 365: {
   $3366 = ___cxa_find_matching_catch()|0;
   $3367 = tempRet0;
   $2 = $3366;
   $3 = $3367;
   __THREW__ = 0;
   invoke_vi(366,($vfree41|0));
   $3368 = __THREW__; __THREW__ = 0;
   $3369 = $3368&1;
   if ($3369) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 367;
    break;
   }
   break;
  }
  case 448: {
   $3902 = ___cxa_find_matching_catch()|0;
   $3903 = tempRet0;
   $2 = $3902;
   $3 = $3903;
   label = 451;
   break;
  }
  case 449: {
   $3904 = ___cxa_find_matching_catch()|0;
   $3905 = tempRet0;
   $2 = $3904;
   $3 = $3905;
   __THREW__ = 0;
   invoke_vi(366,($vfree51|0));
   $3906 = __THREW__; __THREW__ = 0;
   $3907 = $3906&1;
   if ($3907) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 451;
    break;
   }
   break;
  }
  case 534: {
   $4477 = ___cxa_find_matching_catch()|0;
   $4478 = tempRet0;
   $2 = $4477;
   $3 = $4478;
   label = 537;
   break;
  }
  case 535: {
   $4479 = ___cxa_find_matching_catch()|0;
   $4480 = tempRet0;
   $2 = $4479;
   $3 = $4480;
   __THREW__ = 0;
   invoke_vi(366,($vfree61|0));
   $4481 = __THREW__; __THREW__ = 0;
   $4482 = $4481&1;
   if ($4482) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 537;
    break;
   }
   break;
  }
  case 620: {
   $5023 = ___cxa_find_matching_catch()|0;
   $5024 = tempRet0;
   $2 = $5023;
   $3 = $5024;
   label = 623;
   break;
  }
  case 621: {
   $5025 = ___cxa_find_matching_catch()|0;
   $5026 = tempRet0;
   $2 = $5025;
   $3 = $5026;
   __THREW__ = 0;
   invoke_vi(366,($vfree71|0));
   $5027 = __THREW__; __THREW__ = 0;
   $5028 = $5027&1;
   if ($5028) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 623;
    break;
   }
   break;
  }
  case 704: {
   $5631 = ___cxa_find_matching_catch()|0;
   $5632 = tempRet0;
   $2 = $5631;
   $3 = $5632;
   label = 707;
   break;
  }
  case 705: {
   $5633 = ___cxa_find_matching_catch()|0;
   $5634 = tempRet0;
   $2 = $5633;
   $3 = $5634;
   __THREW__ = 0;
   invoke_vi(366,($vfree81|0));
   $5635 = __THREW__; __THREW__ = 0;
   $5636 = $5635&1;
   if ($5636) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 707;
    break;
   }
   break;
  }
  case 788: {
   $6231 = ___cxa_find_matching_catch()|0;
   $6232 = tempRet0;
   $2 = $6231;
   $3 = $6232;
   label = 791;
   break;
  }
  case 789: {
   $6233 = ___cxa_find_matching_catch()|0;
   $6234 = tempRet0;
   $2 = $6233;
   $3 = $6234;
   __THREW__ = 0;
   invoke_vi(366,($vfree91|0));
   $6235 = __THREW__; __THREW__ = 0;
   $6236 = $6235&1;
   if ($6236) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 791;
    break;
   }
   break;
  }
  case 872: {
   $6763 = ___cxa_find_matching_catch()|0;
   $6764 = tempRet0;
   $2 = $6763;
   $3 = $6764;
   label = 875;
   break;
  }
  case 873: {
   $6765 = ___cxa_find_matching_catch()|0;
   $6766 = tempRet0;
   $2 = $6765;
   $3 = $6766;
   __THREW__ = 0;
   invoke_vi(366,($vfree101|0));
   $6767 = __THREW__; __THREW__ = 0;
   $6768 = $6767&1;
   if ($6768) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 875;
    break;
   }
   break;
  }
  case 956: {
   $7299 = ___cxa_find_matching_catch()|0;
   $7300 = tempRet0;
   $2 = $7299;
   $3 = $7300;
   label = 959;
   break;
  }
  case 957: {
   $7301 = ___cxa_find_matching_catch()|0;
   $7302 = tempRet0;
   $2 = $7301;
   $3 = $7302;
   __THREW__ = 0;
   invoke_vi(366,($vfree111|0));
   $7303 = __THREW__; __THREW__ = 0;
   $7304 = $7303&1;
   if ($7304) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 959;
    break;
   }
   break;
  }
  case 1052: {
   $7919 = ___cxa_find_matching_catch()|0;
   $7920 = tempRet0;
   $2 = $7919;
   $3 = $7920;
   label = 1055;
   break;
  }
  case 1053: {
   $7921 = ___cxa_find_matching_catch()|0;
   $7922 = tempRet0;
   $2 = $7921;
   $3 = $7922;
   __THREW__ = 0;
   invoke_vi(366,($vfree121|0));
   $7923 = __THREW__; __THREW__ = 0;
   $7924 = $7923&1;
   if ($7924) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1055;
    break;
   }
   break;
  }
  case 1132: {
   $8536 = ___cxa_find_matching_catch()|0;
   $8537 = tempRet0;
   $2 = $8536;
   $3 = $8537;
   label = 1135;
   break;
  }
  case 1133: {
   $8538 = ___cxa_find_matching_catch()|0;
   $8539 = tempRet0;
   $2 = $8538;
   $3 = $8539;
   __THREW__ = 0;
   invoke_vi(366,($vfree130|0));
   $8540 = __THREW__; __THREW__ = 0;
   $8541 = $8540&1;
   if ($8541) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1135;
    break;
   }
   break;
  }
  case 1208: {
   $9075 = ___cxa_find_matching_catch()|0;
   $9076 = tempRet0;
   $2 = $9075;
   $3 = $9076;
   label = 1211;
   break;
  }
  case 1209: {
   $9077 = ___cxa_find_matching_catch()|0;
   $9078 = tempRet0;
   $2 = $9077;
   $3 = $9078;
   __THREW__ = 0;
   invoke_vi(366,($vfree139|0));
   $9079 = __THREW__; __THREW__ = 0;
   $9080 = $9079&1;
   if ($9080) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1211;
    break;
   }
   break;
  }
  case 1331: {
   $10402 = ___cxa_find_matching_catch()|0;
   $10403 = tempRet0;
   $2 = $10402;
   $3 = $10403;
   label = 1334;
   break;
  }
  case 1332: {
   $10404 = ___cxa_find_matching_catch()|0;
   $10405 = tempRet0;
   $2 = $10404;
   $3 = $10405;
   __THREW__ = 0;
   invoke_vi(366,($vfree160|0));
   $10406 = __THREW__; __THREW__ = 0;
   $10407 = $10406&1;
   if ($10407) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1334;
    break;
   }
   break;
  }
  case 1415: {
   $10940 = ___cxa_find_matching_catch()|0;
   $10941 = tempRet0;
   $2 = $10940;
   $3 = $10941;
   label = 1418;
   break;
  }
  case 1416: {
   $10942 = ___cxa_find_matching_catch()|0;
   $10943 = tempRet0;
   $2 = $10942;
   $3 = $10943;
   __THREW__ = 0;
   invoke_vi(366,($vfree170|0));
   $10944 = __THREW__; __THREW__ = 0;
   $10945 = $10944&1;
   if ($10945) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1418;
    break;
   }
   break;
  }
  case 1501: {
   $11515 = ___cxa_find_matching_catch()|0;
   $11516 = tempRet0;
   $2 = $11515;
   $3 = $11516;
   label = 1504;
   break;
  }
  case 1502: {
   $11517 = ___cxa_find_matching_catch()|0;
   $11518 = tempRet0;
   $2 = $11517;
   $3 = $11518;
   __THREW__ = 0;
   invoke_vi(366,($vfree180|0));
   $11519 = __THREW__; __THREW__ = 0;
   $11520 = $11519&1;
   if ($11520) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1504;
    break;
   }
   break;
  }
  case 1587: {
   $12061 = ___cxa_find_matching_catch()|0;
   $12062 = tempRet0;
   $2 = $12061;
   $3 = $12062;
   label = 1590;
   break;
  }
  case 1588: {
   $12063 = ___cxa_find_matching_catch()|0;
   $12064 = tempRet0;
   $2 = $12063;
   $3 = $12064;
   __THREW__ = 0;
   invoke_vi(366,($vfree190|0));
   $12065 = __THREW__; __THREW__ = 0;
   $12066 = $12065&1;
   if ($12066) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1590;
    break;
   }
   break;
  }
  case 1671: {
   $12669 = ___cxa_find_matching_catch()|0;
   $12670 = tempRet0;
   $2 = $12669;
   $3 = $12670;
   label = 1674;
   break;
  }
  case 1672: {
   $12671 = ___cxa_find_matching_catch()|0;
   $12672 = tempRet0;
   $2 = $12671;
   $3 = $12672;
   __THREW__ = 0;
   invoke_vi(366,($vfree200|0));
   $12673 = __THREW__; __THREW__ = 0;
   $12674 = $12673&1;
   if ($12674) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1674;
    break;
   }
   break;
  }
  case 1755: {
   $13269 = ___cxa_find_matching_catch()|0;
   $13270 = tempRet0;
   $2 = $13269;
   $3 = $13270;
   label = 1758;
   break;
  }
  case 1756: {
   $13271 = ___cxa_find_matching_catch()|0;
   $13272 = tempRet0;
   $2 = $13271;
   $3 = $13272;
   __THREW__ = 0;
   invoke_vi(366,($vfree210|0));
   $13273 = __THREW__; __THREW__ = 0;
   $13274 = $13273&1;
   if ($13274) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1758;
    break;
   }
   break;
  }
  case 1839: {
   $13801 = ___cxa_find_matching_catch()|0;
   $13802 = tempRet0;
   $2 = $13801;
   $3 = $13802;
   label = 1842;
   break;
  }
  case 1840: {
   $13803 = ___cxa_find_matching_catch()|0;
   $13804 = tempRet0;
   $2 = $13803;
   $3 = $13804;
   __THREW__ = 0;
   invoke_vi(366,($vfree220|0));
   $13805 = __THREW__; __THREW__ = 0;
   $13806 = $13805&1;
   if ($13806) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1842;
    break;
   }
   break;
  }
  case 1923: {
   $14337 = ___cxa_find_matching_catch()|0;
   $14338 = tempRet0;
   $2 = $14337;
   $3 = $14338;
   label = 1926;
   break;
  }
  case 1924: {
   $14339 = ___cxa_find_matching_catch()|0;
   $14340 = tempRet0;
   $2 = $14339;
   $3 = $14340;
   __THREW__ = 0;
   invoke_vi(366,($vfree230|0));
   $14341 = __THREW__; __THREW__ = 0;
   $14342 = $14341&1;
   if ($14342) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 1926;
    break;
   }
   break;
  }
  case 2019: {
   $14957 = ___cxa_find_matching_catch()|0;
   $14958 = tempRet0;
   $2 = $14957;
   $3 = $14958;
   label = 2022;
   break;
  }
  case 2020: {
   $14959 = ___cxa_find_matching_catch()|0;
   $14960 = tempRet0;
   $2 = $14959;
   $3 = $14960;
   __THREW__ = 0;
   invoke_vi(366,($vfree240|0));
   $14961 = __THREW__; __THREW__ = 0;
   $14962 = $14961&1;
   if ($14962) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 2022;
    break;
   }
   break;
  }
  case 2099: {
   $15574 = ___cxa_find_matching_catch()|0;
   $15575 = tempRet0;
   $2 = $15574;
   $3 = $15575;
   label = 2102;
   break;
  }
  case 2100: {
   $15576 = ___cxa_find_matching_catch()|0;
   $15577 = tempRet0;
   $2 = $15576;
   $3 = $15577;
   __THREW__ = 0;
   invoke_vi(366,($vfree249|0));
   $15578 = __THREW__; __THREW__ = 0;
   $15579 = $15578&1;
   if ($15579) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 2102;
    break;
   }
   break;
  }
  case 2175: {
   $16113 = ___cxa_find_matching_catch()|0;
   $16114 = tempRet0;
   $2 = $16113;
   $3 = $16114;
   label = 2178;
   break;
  }
  case 2176: {
   $16115 = ___cxa_find_matching_catch()|0;
   $16116 = tempRet0;
   $2 = $16115;
   $3 = $16116;
   __THREW__ = 0;
   invoke_vi(366,($vfree258|0));
   $16117 = __THREW__; __THREW__ = 0;
   $16118 = $16117&1;
   if ($16118) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   } else {
    label = 2178;
    break;
   }
   break;
  }
  case 2188: {
   STACKTOP = sp;return;
   break;
  }
 }
 switch (label|0) {
  case 125: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos|0));
   $1292 = __THREW__; __THREW__ = 0;
   $1293 = $1292&1;
   if ($1293) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 233: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos19|0));
   $1969 = __THREW__; __THREW__ = 0;
   $1970 = $1969&1;
   if ($1970) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 367: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos40|0));
   $3370 = __THREW__; __THREW__ = 0;
   $3371 = $3370&1;
   if ($3371) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 451: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos50|0));
   $3908 = __THREW__; __THREW__ = 0;
   $3909 = $3908&1;
   if ($3909) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 537: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos60|0));
   $4483 = __THREW__; __THREW__ = 0;
   $4484 = $4483&1;
   if ($4484) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 623: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos70|0));
   $5029 = __THREW__; __THREW__ = 0;
   $5030 = $5029&1;
   if ($5030) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 707: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos80|0));
   $5637 = __THREW__; __THREW__ = 0;
   $5638 = $5637&1;
   if ($5638) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 791: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos90|0));
   $6237 = __THREW__; __THREW__ = 0;
   $6238 = $6237&1;
   if ($6238) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 875: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos100|0));
   $6769 = __THREW__; __THREW__ = 0;
   $6770 = $6769&1;
   if ($6770) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 959: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos110|0));
   $7305 = __THREW__; __THREW__ = 0;
   $7306 = $7305&1;
   if ($7306) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1055: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos120|0));
   $7925 = __THREW__; __THREW__ = 0;
   $7926 = $7925&1;
   if ($7926) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1135: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos129|0));
   $8542 = __THREW__; __THREW__ = 0;
   $8543 = $8542&1;
   if ($8543) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1211: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos138|0));
   $9081 = __THREW__; __THREW__ = 0;
   $9082 = $9081&1;
   if ($9082) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1334: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos159|0));
   $10408 = __THREW__; __THREW__ = 0;
   $10409 = $10408&1;
   if ($10409) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1418: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos169|0));
   $10946 = __THREW__; __THREW__ = 0;
   $10947 = $10946&1;
   if ($10947) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1504: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos179|0));
   $11521 = __THREW__; __THREW__ = 0;
   $11522 = $11521&1;
   if ($11522) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1590: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos189|0));
   $12067 = __THREW__; __THREW__ = 0;
   $12068 = $12067&1;
   if ($12068) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1674: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos199|0));
   $12675 = __THREW__; __THREW__ = 0;
   $12676 = $12675&1;
   if ($12676) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1758: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos209|0));
   $13275 = __THREW__; __THREW__ = 0;
   $13276 = $13275&1;
   if ($13276) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1842: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos219|0));
   $13807 = __THREW__; __THREW__ = 0;
   $13808 = $13807&1;
   if ($13808) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 1926: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos229|0));
   $14343 = __THREW__; __THREW__ = 0;
   $14344 = $14343&1;
   if ($14344) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 2022: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos239|0));
   $14963 = __THREW__; __THREW__ = 0;
   $14964 = $14963&1;
   if ($14964) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 2102: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos248|0));
   $15580 = __THREW__; __THREW__ = 0;
   $15581 = $15580&1;
   if ($15581) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
  case 2178: {
   __THREW__ = 0;
   invoke_vi(367,($vinfos257|0));
   $16119 = __THREW__; __THREW__ = 0;
   $16120 = $16119&1;
   if ($16120) {
    $16129 = ___cxa_find_matching_catch(0|0)|0;
    $16130 = tempRet0;
    ___clang_call_terminate($16129);
    // unreachable;
   }
   $16127 = $2;
   $16128 = $3;
   ___resumeException($16127|0);
   // unreachable;
   break;
  }
 }
}
function __ZN6ikfast18IkSolutionListBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (832 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($3)|0);
 __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<3)|0);
  $13 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__17advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEdeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast10IkSolutionIdEC2ERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE($this,$vinfos,$vfree) {
 $this = $this|0;
 $vinfos = $vinfos|0;
 $vfree = $vfree|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vinfos;
 $2 = $vfree;
 $5 = $0;
 __ZN6ikfast14IkSolutionBaseIdEC2Ev($5);
 $6 = (528 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 4|0);
 __THREW__ = 0;
 invoke_vi(383,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $21 = ___cxa_find_matching_catch()|0;
   $22 = tempRet0;
   $3 = $21;
   $4 = $22;
  } else {
   $10 = (($5) + 16|0);
   __THREW__ = 0;
   invoke_vi(384,($10|0));
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if ($12) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $3 = $23;
     $4 = $24;
    } else {
     $13 = (($5) + 4|0);
     $14 = $1;
     __THREW__ = 0;
     (invoke_iii(385,($13|0),($14|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      $17 = (($5) + 16|0);
      $18 = $2;
      __THREW__ = 0;
      (invoke_iii(386,($17|0),($18|0))|0);
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if (!($20)) {
       STACKTOP = sp;return;
      }
     }
     $25 = ___cxa_find_matching_catch()|0;
     $26 = tempRet0;
     $3 = $25;
     $4 = $26;
     __THREW__ = 0;
     invoke_vi(366,($10|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $35 = ___cxa_find_matching_catch(0|0)|0;
      $36 = tempRet0;
      ___clang_call_terminate($35);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   __THREW__ = 0;
   invoke_vi(367,($7|0));
   $29 = __THREW__; __THREW__ = 0;
   $30 = $29&1;
   if ($30) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $3;
 $34 = $4;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hold = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 40|0;
 $__hold = sp + 16|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($5)|0);
 $__na = $6;
 $7 = $__na;
 $8 = (__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($7,1)|0);
 $9 = $__na;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($2,$9,1);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($__hold,$8,$$byval_copy);
 $10 = $__na;
 $11 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($__hold)|0);
 $12 = (($11) + 8|0);
 $13 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($12)|0);
 $14 = $1;
 __THREW__ = 0;
 invoke_viii(387,($10|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  $17 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  $18 = (__ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($__hold)|0);
  __THREW__ = 0;
  invoke_viii(388,($5|0),($17|0),($18|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if (!($20)) {
   $21 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($5)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + 1)|0;
   HEAP32[$21>>2] = $23;
   (__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($__hold)|0);
   __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($__hold);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $3 = $24;
 $4 = $25;
 __THREW__ = 0;
 invoke_vi(389,($__hold|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $3;
 $29 = $4;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<3)|0);
  __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE2atEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $5 = ($3>>>0)>=($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($2);
  // unreachable;
 } else {
  $6 = $1;
  $7 = HEAP32[$2>>2]|0;
  $8 = (($7) + ($6<<3)|0);
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __Z8isfiniteIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z17__libcpp_isfiniteIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__sz;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $__cs = $3;
 $4 = $__cs;
 $5 = $1;
 $6 = ($4>>>0)<($5>>>0);
 if ($6) {
  $7 = $1;
  $8 = $__cs;
  $9 = (($7) - ($8))|0;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($2,$9);
  STACKTOP = sp;return;
 }
 $10 = $__cs;
 $11 = $1;
 $12 = ($10>>>0)>($11>>>0);
 if ($12) {
  $13 = HEAP32[$2>>2]|0;
  $14 = $1;
  $15 = (($13) + ($14<<2)|0);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($2,$15);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE9push_backERKj($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)!=($6|0);
 if ($7) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $8 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
  $9 = (($2) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($2) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  STACKTOP = sp;return;
 } else {
  $16 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($2,$16);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + ($3<<2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $vtt;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = (($5) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$4>>2]|0;
 $10 = (($9) + -12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($4) + ($11)|0);
 HEAP32[$12>>2] = $8;
 $13 = (($5) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($4) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = (($4) + 12|0);
 __THREW__ = 0;
 invoke_vi(41,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  STACKTOP = sp;return;
 }
 $19 = ___cxa_find_matching_catch()|0;
 $20 = tempRet0;
 $2 = $19;
 $3 = $20;
 __THREW__ = 0;
 $21 = __THREW__; __THREW__ = 0;
 $22 = $21&1;
 if ($22) {
  $25 = ___cxa_find_matching_catch(0|0)|0;
  $26 = tempRet0;
  ___clang_call_terminate($25);
  // unreachable;
 }
 $23 = $2;
 $24 = $3;
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__14fposI11__mbstate_tEC2Ex($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $2 = $this;
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = $2;
 ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;
 $9 = (($8) + 8|0);
 $10 = $3;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 STACKTOP = sp;return;
}
function __ZNKSt3__14fposI11__mbstate_tEcvxEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 tempRet0 = $8;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__111char_traitsIcE11to_int_typeEc($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE7not_eofEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
 $3 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($1,$2)|0);
 if ($3) {
  $4 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
  $5 = $4 ^ -1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE12to_char_typeEi($__c) {
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c;
 $1 = $0;
 $2 = $1&255;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__111char_traitsIcE2eqEcc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $2 << 24 >> 24;
 $4 = $1;
 $5 = $4 << 24 >> 24;
 $6 = ($3|0)==($5|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__13maxIPcEERKT_S4_S4_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIdLb1EE9quiet_NaNEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return +nan;
}
function __Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0.0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $1 = $0;
 $2 = (__Z14__libcpp_isnanIdEbT_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __Z13IKatan2Simpledd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fy;
 $1 = $fx;
 $2 = $0;
 $3 = $1;
 $4 = (+Math_atan2((+$2),(+$3)));
 STACKTOP = sp;return (+$4);
}
function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wch;
 $4 = $0;
 $5 = (($4) + 64|0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (984 + 12|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 64|0);
 $8 = (984 + 52|0);
 HEAP32[$7>>2] = $8;
 $9 = (($4) + 8|0);
 $10 = (984 + 32|0);
 HEAP32[$9>>2] = $10;
 $11 = (($4) + 12|0);
 __THREW__ = 0;
 $12 = (1048 + 4|0);
 invoke_viii(390,($4|0),($12|0),($11|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 do {
  if ($14) {
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   $2 = $24;
   $3 = $25;
  } else {
   $15 = (984 + 12|0);
   HEAP32[$4>>2] = $15;
   $16 = (($4) + 64|0);
   $17 = (984 + 52|0);
   HEAP32[$16>>2] = $17;
   $18 = (($4) + 8|0);
   $19 = (984 + 32|0);
   HEAP32[$18>>2] = $19;
   $20 = (($4) + 12|0);
   $21 = $1;
   __THREW__ = 0;
   invoke_vii(391,($20|0),($21|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if (!($23)) {
    STACKTOP = sp;return;
   }
   $26 = ___cxa_find_matching_catch()|0;
   $27 = tempRet0;
   $2 = $26;
   $3 = $27;
   __THREW__ = 0;
   $28 = __THREW__; __THREW__ = 0;
   $29 = $28&1;
   if ($29) {
    $35 = ___cxa_find_matching_catch(0|0)|0;
    $36 = tempRet0;
    ___clang_call_terminate($35);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 $30 = (($4) + 64|0);
 __THREW__ = 0;
 invoke_vi(87,($30|0));
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if ($32) {
  $35 = ___cxa_find_matching_catch(0|0)|0;
  $36 = tempRet0;
  ___clang_call_terminate($35);
  // unreachable;
 }
 $33 = $2;
 $34 = $3;
 ___resumeException($33|0);
 // unreachable;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$2);
 STACKTOP = sp;return;
}
function __Z6IKacosd($f) {
 $f = +$f;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0.0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0.0, $9 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 40|0;
 $4 = sp + 16|0;
 $5 = sp + 184|0;
 $1 = $f;
 $6 = $1;
 $7 = $6 > -1.0000020000000001;
 if ($7) {
  $8 = $1;
  $9 = $8 < 1.0000020000000001;
  if ($9) {
   $55 = $1;
   $56 = $55 <= -1.0;
   if ($56) {
    $0 = 3.14159265358979;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $57 = $1;
   $58 = $57 >= 1.0;
   if ($58) {
    $0 = 0.0;
    $61 = $0;
    STACKTOP = sp;return (+$61);
   }
   $59 = $1;
   $60 = (+Math_acos((+$59)));
   $0 = $60;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $10 = (($ss) + 8|0);
 __THREW__ = 0;
 $11 = (invoke_iii(376,($10|0),(864|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  label = 15;
 } else {
  __THREW__ = 0;
  $14 = (invoke_iii(376,($11|0),(888|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 15;
  } else {
   __THREW__ = 0;
   $17 = (invoke_iii(376,($14|0),(920|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 15;
   } else {
    __THREW__ = 0;
    $20 = (invoke_iii(377,($17|0),163)|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     label = 15;
    } else {
     __THREW__ = 0;
     $23 = (invoke_iii(376,($20|0),(14720|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 15;
     } else {
      __THREW__ = 0;
      $26 = (invoke_iii(376,($23|0),(1472|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       label = 15;
      } else {
       __THREW__ = 0;
       $29 = (invoke_iii(376,($26|0),(936|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        label = 15;
       } else {
        __THREW__ = 0;
        $32 = (invoke_iii(376,($29|0),(1480|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($32|0),(968|0))|0);
         $35 = __THREW__; __THREW__ = 0;
         $36 = $35&1;
         if ($36) {
          label = 15;
         } else {
          $37 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$5>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($4|0),($ss|0));
          $38 = __THREW__; __THREW__ = 0;
          $39 = $38&1;
          do {
           if ($39) {
            $46 = ___cxa_find_matching_catch()|0;
            $47 = tempRet0;
            $2 = $46;
            $3 = $47;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($37|0),($4|0));
            $40 = __THREW__; __THREW__ = 0;
            $41 = $40&1;
            if (!($41)) {
             $$expand_i1_val2 = 0;
             HEAP8[$5>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($37|0),(2568|0),(62|0));
             $42 = __THREW__; __THREW__ = 0;
             $43 = $42&1;
             if (!($43)) {
              // unreachable;
             }
            }
            $48 = ___cxa_find_matching_catch()|0;
            $49 = tempRet0;
            $2 = $48;
            $3 = $49;
            __THREW__ = 0;
            invoke_vi(369,($4|0));
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$5>>0]|0;
          $52 = $$pre_trunc&1;
          if ($52) {
           ___cxa_free_exception(($37|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $44 = ___cxa_find_matching_catch()|0;
  $45 = tempRet0;
  $2 = $44;
  $3 = $45;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $2;
 $63 = $3;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __Z6IKfmoddd($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $x;
 $1 = $y;
 while(1) {
  $2 = $0;
  $3 = $2 < 0.0;
  if (!($3)) {
   break;
  }
  $4 = $1;
  $5 = $0;
  $6 = $5 + $4;
  $0 = $6;
 }
 $7 = $0;
 $8 = $1;
 $9 = (+_fmod($7,$8));
 STACKTOP = sp;return (+$9);
}
function __Z5IKsqrd($f) {
 $f = +$f;
 var $0 = 0.0, $1 = 0.0, $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $f;
 $1 = $0;
 $2 = $0;
 $3 = $1 * $2;
 STACKTOP = sp;return (+$3);
}
function __Z7IKatan2dd($fy,$fx) {
 $fy = +$fy;
 $fx = +$fx;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0.0, $1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ss = sp + 48|0;
 $5 = sp + 24|0;
 $6 = sp + 192|0;
 $1 = $fy;
 $2 = $fx;
 $7 = $1;
 $8 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($7)|0);
 if (!($8)) {
  $56 = $2;
  $57 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($56)|0);
  if ($57) {
   $0 = 0.0;
   $61 = $0;
   STACKTOP = sp;return (+$61);
  }
  $58 = $1;
  $59 = $2;
  $60 = (+Math_atan2((+$58),(+$59)));
  $0 = $60;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 $9 = $2;
 $10 = (__Z5isnanIdENSt3__19enable_ifIXsr3std13is_arithmeticIT_EE5valueEbE4typeES2_($9)|0);
 if (!($10)) {
  $0 = 1.5707963267949001;
  $61 = $0;
  STACKTOP = sp;return (+$61);
 }
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Ej($ss,24);
 $11 = (($ss) + 8|0);
 __THREW__ = 0;
 $12 = (invoke_iii(376,($11|0),(864|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  label = 15;
 } else {
  __THREW__ = 0;
  $15 = (invoke_iii(376,($12|0),(888|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   label = 15;
  } else {
   __THREW__ = 0;
   $18 = (invoke_iii(376,($15|0),(920|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    label = 15;
   } else {
    __THREW__ = 0;
    $21 = (invoke_iii(377,($18|0),194)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 15;
    } else {
     __THREW__ = 0;
     $24 = (invoke_iii(376,($21|0),(14720|0))|0);
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      label = 15;
     } else {
      __THREW__ = 0;
      $27 = (invoke_iii(376,($24|0),(928|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       label = 15;
      } else {
       __THREW__ = 0;
       $30 = (invoke_iii(376,($27|0),(936|0))|0);
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        label = 15;
       } else {
        __THREW__ = 0;
        $33 = (invoke_iii(376,($30|0),(952|0))|0);
        $34 = __THREW__; __THREW__ = 0;
        $35 = $34&1;
        if ($35) {
         label = 15;
        } else {
         __THREW__ = 0;
         (invoke_iii(376,($33|0),(968|0))|0);
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if ($37) {
          label = 15;
         } else {
          $38 = (___cxa_allocate_exception(8)|0);
          $$expand_i1_val = 1;
          HEAP8[$6>>0] = $$expand_i1_val;
          __THREW__ = 0;
          invoke_vii(378,($5|0),($ss|0));
          $39 = __THREW__; __THREW__ = 0;
          $40 = $39&1;
          do {
           if ($40) {
            $47 = ___cxa_find_matching_catch()|0;
            $48 = tempRet0;
            $3 = $47;
            $4 = $48;
           } else {
            __THREW__ = 0;
            invoke_vii(379,($38|0),($5|0));
            $41 = __THREW__; __THREW__ = 0;
            $42 = $41&1;
            if (!($42)) {
             $$expand_i1_val2 = 0;
             HEAP8[$6>>0] = $$expand_i1_val2;
             __THREW__ = 0;
             invoke_viii(380,($38|0),(2568|0),(62|0));
             $43 = __THREW__; __THREW__ = 0;
             $44 = $43&1;
             if (!($44)) {
              // unreachable;
             }
            }
            $49 = ___cxa_find_matching_catch()|0;
            $50 = tempRet0;
            $3 = $49;
            $4 = $50;
            __THREW__ = 0;
            invoke_vi(369,($5|0));
            $51 = __THREW__; __THREW__ = 0;
            $52 = $51&1;
            if ($52) {
             $64 = ___cxa_find_matching_catch(0|0)|0;
             $65 = tempRet0;
             ___clang_call_terminate($64);
             // unreachable;
            } else {
             break;
            }
           }
          } while(0);
          $$pre_trunc = HEAP8[$6>>0]|0;
          $53 = $$pre_trunc&1;
          if ($53) {
           ___cxa_free_exception(($38|0));
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 if ((label|0) == 15) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $3 = $45;
  $4 = $46;
 }
 __THREW__ = 0;
 invoke_vi(21,($ss|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $64 = ___cxa_find_matching_catch(0|0)|0;
  $65 = tempRet0;
  ___clang_call_terminate($64);
  // unreachable;
 }
 $62 = $3;
 $63 = $4;
 ___resumeException($62|0);
 // unreachable;
 return +(0.0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(392,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(393,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(394,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + (($3*24)|0)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($4);
 $5 = $1;
 $6 = ($5>>>0)>(0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $1;
 __THREW__ = 0;
 invoke_vii(395,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  $10 = $1;
  __THREW__ = 0;
  invoke_vii(396,($4|0),($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 __THREW__ = 0;
 invoke_vi(397,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $17 = $2;
 $18 = $3;
 ___resumeException($17|0);
 // unreachable;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($1);
 $2 = (($1) + 8|0);
 __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($2,0);
 STACKTOP = sp;return;
}
function __ZNSt3__115__get_nullptr_tEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 __ZNSt3__19nullptr_tC2EMNS0_5__natEi($0,-1);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_IdEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(398,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIdE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIdEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAPF64[$2>>3] = 0.0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($1,$2);
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIdE10deallocateEPdj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5beginEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__19__advanceINS_21__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEEEEvRT_NS_15iterator_traitsIS7_E15difference_typeENS_26bidirectional_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = ($3|0)>=(0);
 if ($4) {
  while(1) {
   $5 = $2;
   $6 = ($5|0)>(0);
   if (!($6)) {
    break;
   }
   $7 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($7)|0);
   $8 = $2;
   $9 = (($8) + -1)|0;
   $2 = $9;
  }
  STACKTOP = sp;return;
 } else {
  while(1) {
   $10 = $2;
   $11 = ($10|0)<(0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   (__ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($12)|0);
   $13 = $2;
   $14 = (($13) + 1)|0;
   $2 = $14;
  }
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($1);
 STACKTOP = sp;return;
}
function __ZN6ikfast14IkSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (800 + 8|0);
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)!=($3|0);
 if (!($4)) {
  STACKTOP = sp;return ($2|0);
 }
 $5 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($2,$5);
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = $1;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($2,$7,$10);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE8allocateERS8_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2ERS8_j($this,$__a,$__s) {
 $this = $this|0;
 $__a = $__a|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__a;
 $2 = $__s;
 $3 = $0;
 $4 = $1;
 HEAP32[$3>>2] = $4;
 $5 = (($3) + 4|0);
 $6 = $2;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2EPS6_SA_($this,$__p,$__d) {
 $this = $this|0;
 $__p = $__p|0;
 $__d = $__d|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__p;
 $3 = $0;
 $4 = (__ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__d)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEptEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 __ZN6ikfast10IkSolutionIdEC2ERKS1_($3,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE3getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_($this,$__f,$__l) {
 $this = $this|0;
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__f;
 $2 = $__l;
 $3 = $0;
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($3)|0);
 $5 = $2;
 $6 = (($5) + 4|0);
 HEAP32[$6>>2] = $4;
 $7 = HEAP32[$3>>2]|0;
 $8 = $1;
 HEAP32[$8>>2] = $7;
 $9 = $1;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 HEAP32[$12>>2] = $9;
 $13 = $2;
 HEAP32[$3>>2] = $13;
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE7releaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $__t = $3;
 $4 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($1)|0);
 HEAP32[$4>>2] = 0;
 $5 = $__t;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($1,0);
 STACKTOP = sp;return;
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__f = 0, $__l = 0, $__n = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($3)|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE12__node_allocEv($3)|0);
 $__na = $5;
 $6 = (($3) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $__f = $7;
 $8 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($3)|0);
 $__l = $8;
 $9 = $__f;
 $10 = $__l;
 $11 = HEAP32[$10>>2]|0;
 __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($9,$11);
 $12 = (__ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($3)|0);
 HEAP32[$12>>2] = 0;
 while(1) {
  $13 = $__f;
  $14 = $__l;
  $15 = ($13|0)!=($14|0);
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $__f;
  $__n = $16;
  $17 = $__f;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $__f = $19;
  $20 = $__na;
  $21 = $__n;
  $22 = (($21) + 8|0);
  $23 = (__ZNSt3__19addressofIN6ikfast10IkSolutionIdEEEEPT_RS4_($22)|0);
  __THREW__ = 0;
  invoke_vii(399,($20|0),($23|0));
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   label = 6;
   break;
  }
  $26 = $__na;
  $27 = $__n;
  __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($26,$27,1);
 }
 if ((label|0) == 6) {
  $28 = ___cxa_find_matching_catch()|0;
  $29 = tempRet0;
  $1 = $28;
  $2 = $29;
  $30 = $1;
  ___cxa_call_unexpected(($30|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $4;
 $5 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 $6 = ($3|0)!=($5|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($2);
 $7 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 8)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(400,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(401,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(402,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(403,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __Z17__libcpp_isfiniteIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(404,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)<(2146435072);
  $10 = ($4>>>0)<(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__n;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $6;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 4)&-1;
 $13 = $1;
 $14 = ($12>>>0)>=($13>>>0);
 if ($14) {
  $15 = $1;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($4,$15);
  STACKTOP = sp;return;
 }
 $16 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $16;
 $17 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $18 = $1;
 $19 = (($17) + ($18))|0;
 $20 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$19)|0);
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $22 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$20,$21,$22);
 $23 = $1;
 __THREW__ = 0;
 invoke_vii(405,($__v|0),($23|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $28 = ___cxa_find_matching_catch()|0;
 $29 = tempRet0;
 $2 = $28;
 $3 = $29;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 }
 $32 = $2;
 $33 = $3;
 ___resumeException($32|0);
 // unreachable;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(408,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__to_raw_pointerIjEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIKjEEvRT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp + 8|0;
 $0 = $this;
 $1 = $__x;
 $4 = $0;
 $5 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
 $__a = $5;
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $7 = (($6) + 1)|0;
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($4,$7)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($4)|0);
 $10 = $__a;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($__v,$8,$9,$10);
 $11 = $__a;
 $12 = (($__v) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
 $15 = $1;
 $16 = (__ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($15)|0);
 __THREW__ = 0;
 invoke_viii(409,($11|0),($14|0),($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  $19 = (($__v) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + 4|0);
  HEAP32[$19>>2] = $21;
  __THREW__ = 0;
  invoke_vii(406,($4|0),($__v|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($__v);
   STACKTOP = sp;return;
  }
 }
 $24 = ___cxa_find_matching_catch()|0;
 $25 = tempRet0;
 $2 = $24;
 $3 = $25;
 __THREW__ = 0;
 invoke_vi(407,($__v|0));
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $30 = ___cxa_find_matching_catch(0|0)|0;
  $31 = tempRet0;
  ___clang_call_terminate($30);
  // unreachable;
 }
 $28 = $2;
 $29 = $3;
 ___resumeException($28|0);
 // unreachable;
}
function __ZNSt3__13maxIPcNS_6__lessIS1_S1_EEEERKT_S6_S6_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIPcS1_EclERKS1_S4_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
  STACKTOP = sp;return ($7|0);
 } else {
  $6 = $0;
  $7 = $6;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function __Z14__libcpp_isnanIdEbT_($__lcpp_x) {
 $__lcpp_x = +$__lcpp_x;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__lcpp_x;
 $3 = $0;
 __THREW__ = 0;
 $4 = (invoke_id(404,(+$3))|0);
 $5 = tempRet0;
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = $5 & 2147483647;
  $9 = ($8>>>0)>(2146435072);
  $10 = ($4>>>0)>(0);
  $11 = ($8|0)==(2146435072);
  $12 = $11 & $10;
  $13 = $9 | $12;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 $16 = $1;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej($this,$__wch) {
 $this = $this|0;
 $__wch = $__wch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp;
 $0 = $this;
 $1 = $__wch;
 $5 = $0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($5);
 $6 = (1320 + 8|0);
 HEAP32[$5>>2] = $6;
 $7 = (($5) + 32|0);
 __THREW__ = 0;
 invoke_vi(410,($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 do {
  if ($9) {
   $19 = ___cxa_find_matching_catch()|0;
   $20 = tempRet0;
   $2 = $19;
   $3 = $20;
  } else {
   $10 = (($5) + 44|0);
   HEAP32[$10>>2] = 0;
   $11 = (($5) + 48|0);
   $12 = $1;
   HEAP32[$11>>2] = $12;
   __THREW__ = 0;
   invoke_vi(410,($4|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 7;
    } else {
     __THREW__ = 0;
     invoke_vii(411,($5|0),($4|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      invoke_vi(369,($4|0));
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 7;
       break;
      }
      STACKTOP = sp;return;
     }
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $2 = $23;
     $3 = $24;
     __THREW__ = 0;
     invoke_vi(369,($4|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      $33 = ___cxa_find_matching_catch(0|0)|0;
      $34 = tempRet0;
      ___clang_call_terminate($33);
      // unreachable;
     } else {
      break;
     }
    }
   } while(0);
   if ((label|0) == 7) {
    $21 = ___cxa_find_matching_catch()|0;
    $22 = tempRet0;
    $2 = $21;
    $3 = $22;
   }
   __THREW__ = 0;
   invoke_vi(369,($7|0));
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $33 = ___cxa_find_matching_catch(0|0)|0;
    $34 = tempRet0;
    ___clang_call_terminate($33);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(89,($5|0));
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $33 = ___cxa_find_matching_catch(0|0)|0;
  $34 = tempRet0;
  ___clang_call_terminate($33);
  // unreachable;
 }
 $31 = $2;
 $32 = $3;
 ___resumeException($31|0);
 // unreachable;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen(($1|0))|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 36|0;
 $__s = sp + 16|0;
 $5 = sp + 4|0;
 $6 = sp;
 $0 = $__os;
 $1 = $__str;
 $2 = $__len;
 $7 = $0;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L1: do {
  if ($9) {
   label = 13;
  } else {
   __THREW__ = 0;
   $10 = (invoke_ii(413,($__s|0))|0);
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   do {
    if (!($12)) {
     if ($10) {
      $13 = $0;
      __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($5,$13);
      $14 = $1;
      $15 = $0;
      $16 = HEAP32[$15>>2]|0;
      $17 = (($16) + -12|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($15) + ($18)|0);
      __THREW__ = 0;
      $20 = (invoke_ii(414,($19|0))|0);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       break;
      }
      $23 = $20 & 176;
      $24 = ($23|0)==(32);
      if ($24) {
       $25 = $1;
       $26 = $2;
       $27 = (($25) + ($26)|0);
       $45 = $27;
      } else {
       $28 = $1;
       $45 = $28;
      }
      $29 = $1;
      $30 = $2;
      $31 = (($29) + ($30)|0);
      $32 = $0;
      $33 = HEAP32[$32>>2]|0;
      $34 = (($33) + -12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + ($35)|0);
      $37 = $0;
      $38 = HEAP32[$37>>2]|0;
      $39 = (($38) + -12|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = (($37) + ($40)|0);
      __THREW__ = 0;
      $42 = (invoke_ii(415,($41|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break;
      }
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$5+0>>2]|0;
      invoke_viiiiiii(416,($6|0),($$byval_copy|0),($14|0),($45|0),($31|0),($36|0),($42|0));
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
      $48 = (__ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($6)|0);
      if ($48) {
       $49 = $0;
       $50 = HEAP32[$49>>2]|0;
       $51 = (($50) + -12|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = (($49) + ($52)|0);
       __THREW__ = 0;
       invoke_vii(417,($53|0),5);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
      }
     }
     __THREW__ = 0;
     invoke_vi(418,($__s|0));
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 13;
      break L1;
     }
     $72 = $0;
     STACKTOP = sp;return ($72|0);
    }
   } while(0);
   $58 = ___cxa_find_matching_catch(0|0)|0;
   $59 = tempRet0;
   $3 = $58;
   $4 = $59;
   __THREW__ = 0;
   invoke_vi(418,($__s|0));
   $60 = __THREW__; __THREW__ = 0;
   $61 = $60&1;
   if ($61) {
    $79 = ___cxa_find_matching_catch(0|0)|0;
    $80 = tempRet0;
    ___clang_call_terminate($79);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 if ((label|0) == 13) {
  $56 = ___cxa_find_matching_catch(0|0)|0;
  $57 = tempRet0;
  $3 = $56;
  $4 = $57;
 }
 $64 = $3;
 (___cxa_begin_catch(($64|0))|0);
 $65 = $0;
 $66 = HEAP32[$65>>2]|0;
 $67 = (($66) + -12|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = (($65) + ($68)|0);
 __THREW__ = 0;
 invoke_vi(419,($69|0));
 $70 = __THREW__; __THREW__ = 0;
 $71 = $70&1;
 if (!($71)) {
  ___cxa_end_catch();
  $72 = $0;
  STACKTOP = sp;return ($72|0);
 }
 $73 = ___cxa_find_matching_catch()|0;
 $74 = tempRet0;
 $3 = $73;
 $4 = $74;
 __THREW__ = 0;
 invoke_v(420);
 $75 = __THREW__; __THREW__ = 0;
 $76 = $75&1;
 if ($76) {
  $79 = ___cxa_find_matching_catch(0|0)|0;
  $80 = tempRet0;
  ___clang_call_terminate($79);
  // unreachable;
 }
 $77 = $3;
 $78 = $4;
 ___resumeException($77|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 6|0;
 $2 = sp + 5|0;
 $3 = sp + 4|0;
 $0 = $this;
 $4 = $0;
 $5 = (($4) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 16;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = (($4) + 44|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
  $12 = ($10>>>0)<($11>>>0);
  if ($12) {
   $13 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($4)|0);
   $14 = (($4) + 44|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($4)|0);
  $16 = (($4) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$15,$17,$1);
  STACKTOP = sp;return;
 }
 $18 = (($4) + 48|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 8;
 $21 = ($20|0)!=(0);
 if ($21) {
  $22 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($4)|0);
  $23 = (__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($4)|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($agg$result,$22,$23,$2);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + (($11*24)|0)|0);
  $13 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 24|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 $0 = $this;
 $4 = $0;
 $5 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$1>>2] = $5;
 $6 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($1)|0);
 HEAP32[$4>>2] = $6;
 $7 = (($4) + 4|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$7>>2] = $9;
 $10 = (($4) + 8|0);
 $11 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $11;
 $12 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($10,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($2)|0);
 $5 = ($3>>>0)>($4>>>0);
 if ($5) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($2);
  // unreachable;
 } else {
  $6 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
  $7 = $1;
  $8 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($6,$7)|0);
  $9 = (($2) + 4|0);
  HEAP32[$9>>2] = $8;
  HEAP32[$2>>2] = $8;
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = (($10) + ($11<<2)|0);
  $13 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($2)|0);
  HEAP32[$13>>2] = $12;
  __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($2,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$1>>2] = $2;
 $3 = (($1) + 4|0);
 $4 = (__ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($1)|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($2,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__19nullptr_tC2EMNS0_5__natEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIdEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(421,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114numeric_limitsIjE3maxEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv()|0);
 return ($0|0);
}
function __ZNSt3__13minIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIdE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<3;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIdNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -8|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(422,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIdE10deallocateEPdj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEC2EPNS_11__list_nodeIS3_S4_EE($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = $1;
 HEAP32[$2>>2] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEppEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$1>>2] = $4;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__121__list_const_iteratorIN6ikfast10IkSolutionIdEEPvEmmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 HEAP32[$1>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__c;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__growing = 0, $__m = 0, $__mid = 0, $__new_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mid = sp + 4|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (__ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($4,$5)|0);
 $__new_size = $6;
 $7 = $__new_size;
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($3)|0);
 $9 = ($7>>>0)<=($8>>>0);
 if (!($9)) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($3);
  $25 = $__new_size;
  $26 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($3,$25)|0);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj($3,$26);
  $27 = $1;
  $28 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$27,$28);
  STACKTOP = sp;return;
 }
 $10 = $2;
 HEAP32[$__mid>>2] = $10;
 $__growing = 0;
 $11 = $__new_size;
 $12 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $13 = ($11>>>0)>($12>>>0);
 if ($13) {
  $__growing = 1;
  $14 = $1;
  HEAP32[$__mid>>2] = $14;
  $15 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
  __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__mid,$15);
 }
 $16 = $1;
 $17 = HEAP32[$__mid>>2]|0;
 $18 = HEAP32[$3>>2]|0;
 $19 = (__ZNSt3__14copyIPiS1_EET0_T_S3_S2_($16,$17,$18)|0);
 $__m = $19;
 $20 = $__growing;
 $21 = $20&1;
 if ($21) {
  $22 = HEAP32[$__mid>>2]|0;
  $23 = $2;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($3,$22,$23);
 } else {
  $24 = $__m;
  __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($3,$24);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*36)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__14moveIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_S9_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__14moveINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_SC_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $1 = sp + 8|0;
 $2 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN6ikfast10IkSolutionIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($5,$6);
 $7 = (528 + 8|0);
 HEAP32[$5>>2] = $7;
 $8 = (($5) + 4|0);
 $9 = $2;
 $10 = (($9) + 4|0);
 __THREW__ = 0;
 invoke_vii(424,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 do {
  if ($12) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $3 = $18;
   $4 = $19;
  } else {
   $13 = (($5) + 16|0);
   $14 = $2;
   $15 = (($14) + 16|0);
   __THREW__ = 0;
   invoke_vii(425,($13|0),($15|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    STACKTOP = sp;return;
   }
   $20 = ___cxa_find_matching_catch()|0;
   $21 = tempRet0;
   $3 = $20;
   $4 = $21;
   __THREW__ = 0;
   invoke_vi(367,($8|0));
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    break;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(15,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__116__list_node_baseIN6ikfast10IkSolutionIdEEPvE6__selfEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5resetEPS6_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 $4 = HEAP32[$3>>2]|0;
 $__tmp = $4;
 $5 = $1;
 $6 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE5firstEv($2)|0);
 HEAP32[$6>>2] = $5;
 $7 = $__tmp;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = (__ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($2)|0);
 $10 = $__tmp;
 __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($9,$10);
 STACKTOP = sp;return;
}
function __ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE5emptyEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE4__szEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114pointer_traitsIPNS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEE10pointer_toERS6_($__r) {
 $__r = $__r|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__r;
 $1 = $0;
 $2 = (__ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__list_impIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE14__unlink_nodesEPNS_11__list_nodeIS3_PvEESA_($__f,$__l) {
 $__f = $__f|0;
 $__l = $__l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__f;
 $1 = $__l;
 $2 = $1;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 4|0);
 HEAP32[$7>>2] = $4;
 $8 = $0;
 $9 = HEAP32[$8>>2]|0;
 $10 = $1;
 $11 = (($10) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IiEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIiE10deallocateEPij($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($1,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIdEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IdEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<3)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<3)|0);
 $27 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9constructIdEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 8|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPdEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPdEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIdNS_9allocatorIdEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPdEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10deallocateERS2_Pdj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<3)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<3)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __Z13__DOUBLE_BITSd($__f) {
 $__f = +$__f;
 var $0 = 0.0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__u = sp;
 $0 = $__f;
 $1 = $0;
 HEAPF64[$__u>>3] = $1;
 $2 = $__u;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 tempRet0 = $7;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 12|0;
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$2,1);
  $4 = $__a;
  $5 = (($2) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  __ZNSt3__16vectorIjNS_9allocatorIjEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEEC2EjjS3_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 4|0;
 $5 = sp;
 $0 = $this;
 $1 = $__cap;
 $2 = $__start;
 $3 = $__a;
 $6 = $0;
 $7 = (($6) + 12|0);
 $8 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $8;
 $9 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($4)|0);
 $10 = $3;
 __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($7,$9,$10);
 $11 = $1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($6)|0);
  $14 = $1;
  $15 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($13,$14)|0);
  $18 = $15;
 } else {
  $16 = (__ZNSt3__115__get_nullptr_tEv()|0);
  HEAP32[$5>>2] = $16;
  $17 = (__ZNKSt3__19nullptr_tcvPT_IjEEv($5)|0);
  $18 = $17;
 }
 HEAP32[$6>>2] = $18;
 $19 = HEAP32[$6>>2]|0;
 $20 = $2;
 $21 = (($19) + ($20<<2)|0);
 $22 = (($6) + 8|0);
 HEAP32[$22>>2] = $21;
 $23 = (($6) + 4|0);
 HEAP32[$23>>2] = $21;
 $24 = HEAP32[$6>>2]|0;
 $25 = $1;
 $26 = (($24) + ($25<<2)|0);
 $27 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($6)|0);
 HEAP32[$27>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__n;
 $2 = $0;
 $3 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($2)|0);
 $__a = $3;
 while(1) {
  $4 = $__a;
  $5 = (($2) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($6)|0);
  __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($4,$7);
  $8 = (($2) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = $1;
  $12 = (($11) + -1)|0;
  $1 = $12;
  $13 = $1;
  $14 = ($13>>>0)>(0);
  if (!($14)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__v;
 $2 = $0;
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($2);
 $3 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($2)|0);
 $4 = HEAP32[$2>>2]|0;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = (($7) + 4|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($3,$4,$6,$8);
 $9 = $1;
 $10 = (($9) + 4|0);
 __ZNSt3__14swapIPjEEvRT_S3_($2,$10);
 $11 = (($2) + 4|0);
 $12 = $1;
 $13 = (($12) + 8|0);
 __ZNSt3__14swapIPjEEvRT_S3_($11,$13);
 $14 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($2)|0);
 $15 = $1;
 $16 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($15)|0);
 __ZNSt3__14swapIPjEEvRT_S3_($14,$16);
 $17 = $1;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $1;
 HEAP32[$20>>2] = $19;
 $21 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($2,$21);
 __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($1);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($1)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($1)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($4,$5,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIjNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(426,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17forwardIKjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__16__lessIPcS1_EclERKS1_S4_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $2 = $0;
 $3 = (($2) + 32|0);
 $4 = $1;
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3,$4)|0);
 $5 = (($2) + 44|0);
 HEAP32[$5>>2] = 0;
 $6 = (($2) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)!=(0);
 if ($9) {
  $10 = (($2) + 32|0);
  $11 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($10)|0);
  $12 = (($2) + 32|0);
  $13 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($12)|0);
  $14 = (($11) + ($13)|0);
  $15 = (($2) + 44|0);
  HEAP32[$15>>2] = $14;
  $16 = (($2) + 32|0);
  $17 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($16)|0);
  $18 = (($2) + 32|0);
  $19 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($18)|0);
  $20 = (($2) + 44|0);
  $21 = HEAP32[$20>>2]|0;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($2,$17,$19,$21);
 }
 $22 = (($2) + 48|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 16;
 $25 = ($24|0)!=(0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $26 = (($2) + 32|0);
 $27 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($26)|0);
 $__sz = $27;
 $28 = (($2) + 32|0);
 $29 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($28)|0);
 $30 = $__sz;
 $31 = (($29) + ($30)|0);
 $32 = (($2) + 44|0);
 HEAP32[$32>>2] = $31;
 $33 = (($2) + 32|0);
 $34 = (($2) + 32|0);
 $35 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($34)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($33,$35);
 $36 = (($2) + 32|0);
 $37 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($36)|0);
 $38 = (($2) + 32|0);
 $39 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($38)|0);
 $40 = (($2) + 32|0);
 $41 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($40)|0);
 $42 = (($39) + ($41)|0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($2,$37,$42);
 $43 = (($2) + 48|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = $44 & 3;
 $46 = ($45|0)!=(0);
 if ($46) {
  $47 = $__sz;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($2,$47);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2ERNS_13basic_ostreamIcS2_EE($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__s;
 $4 = $0;
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + -12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($5) + ($8)|0);
 __THREW__ = 0;
 $10 = (invoke_ii(427,($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  HEAP32[$4>>2] = $10;
  STACKTOP = sp;return;
 }
 $13 = ___cxa_find_matching_catch()|0;
 $14 = tempRet0;
 $2 = $13;
 $3 = $14;
 $15 = $2;
 ___cxa_call_unexpected(($15|0));
 // unreachable;
}
function __ZNKSt3__18ios_base5flagsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $__np = 0, $__ns = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 48|0;
 $6 = sp + 32|0;
 $__sp = sp + 20|0;
 $9 = sp + 8|0;
 $11 = sp;
 $0 = $__ob;
 $1 = $__op;
 $2 = $__oe;
 $3 = $__iob;
 $4 = $__fl;
 $12 = HEAP32[$__s>>2]|0;
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$5>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($5)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
  STACKTOP = sp;return;
 }
 $16 = $2;
 $17 = $0;
 $18 = $16;
 $19 = $17;
 $20 = (($18) - ($19))|0;
 $__sz = $20;
 $21 = $3;
 $22 = (__ZNKSt3__18ios_base5widthEv($21)|0);
 $__ns = $22;
 $23 = $__ns;
 $24 = $__sz;
 $25 = ($23|0)>($24|0);
 if ($25) {
  $26 = $__sz;
  $27 = $__ns;
  $28 = (($27) - ($26))|0;
  $__ns = $28;
 } else {
  $__ns = 0;
 }
 $29 = $1;
 $30 = $0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $__np = $33;
 $34 = $__np;
 $35 = ($34|0)>(0);
 do {
  if ($35) {
   $36 = HEAP32[$__s>>2]|0;
   $37 = $0;
   $38 = $__np;
   $39 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($36,$37,$38)|0);
   $40 = $__np;
   $41 = ($39|0)!=($40|0);
   if (!($41)) {
    break;
   }
   $42 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$6>>2] = $42;
   $43 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($6)|0);
   HEAP32[$__s>>2] = $43;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $44 = $__ns;
 $45 = ($44|0)>(0);
 L16: do {
  if ($45) {
   $46 = $__ns;
   $47 = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($__sp,$46,$47);
   $48 = HEAP32[$__s>>2]|0;
   $49 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($__sp)|0);
   $50 = $__ns;
   __THREW__ = 0;
   $51 = (invoke_iiii(428,($48|0),($49|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   do {
    if (!($53)) {
     $54 = $__ns;
     $55 = ($51|0)!=($54|0);
     if ($55) {
      __THREW__ = 0;
      $56 = (invoke_i(429)|0);
      $57 = __THREW__; __THREW__ = 0;
      $58 = $57&1;
      if ($58) {
       break;
      }
      HEAP32[$9>>2] = $56;
      __THREW__ = 0;
      $59 = (invoke_ii(430,($9|0))|0);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if ($61) {
       break;
      }
      HEAP32[$__s>>2] = $59;
      ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
      $10 = 1;
     } else {
      $10 = 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
     $cleanup$dest = $10;
     if ((($cleanup$dest|0) == 0)) {
      break L16;
     } else if ((($cleanup$dest|0) == 1)) {
      STACKTOP = sp;return;
     } else {
      // unreachable;
     }
    }
   } while(0);
   $62 = ___cxa_find_matching_catch()|0;
   $63 = tempRet0;
   $7 = $62;
   $8 = $63;
   __THREW__ = 0;
   invoke_vi(369,($__sp|0));
   $64 = __THREW__; __THREW__ = 0;
   $65 = $64&1;
   if ($65) {
    $84 = ___cxa_find_matching_catch(0|0)|0;
    $85 = tempRet0;
    ___clang_call_terminate($84);
    // unreachable;
   }
   $82 = $7;
   $83 = $8;
   ___resumeException($82|0);
   // unreachable;
  }
 } while(0);
 $66 = $2;
 $67 = $1;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $__np = $70;
 $71 = $__np;
 $72 = ($71|0)>(0);
 do {
  if ($72) {
   $73 = HEAP32[$__s>>2]|0;
   $74 = $1;
   $75 = $__np;
   $76 = (__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($73,$74,$75)|0);
   $77 = $__np;
   $78 = ($76|0)!=($77|0);
   if (!($78)) {
    break;
   }
   $79 = (__ZNSt3__115__get_nullptr_tEv()|0);
   HEAP32[$11>>2] = $79;
   $80 = (__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($11)|0);
   HEAP32[$__s>>2] = $80;
   ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
   STACKTOP = sp;return;
  }
 } while(0);
 $81 = $3;
 (__ZNSt3__18ios_base5widthEi($81,0)|0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$__s+0>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IPcEET_S8_RKS4_($this,$__first,$__last,$__a) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 17|0;
 $4 = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $__a;
 $5 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$4+0>>0]|0;
 __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($5,$$byval_copy);
 $6 = $1;
 $7 = $2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($5,$6,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(398,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8allocateERS5_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if ($3) {
  STACKTOP = sp;return;
 }
 __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($2,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(398,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIiE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__116__to_raw_pointerIiEEPT_S2_($__p) {
 $__p = $__p|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__p;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EEC2Ej($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIjEERT_RNS_16remove_referenceIS1_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIdE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__123__libcpp_numeric_limitsIjLb1EE3maxEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__13minIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $1;
 $3 = $0;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__allocateEj($__size) {
 $__size = $__size|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__size;
 $1 = $0;
 $2 = (__Znwj($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPdNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__112__deallocateEPv($__ptr) {
 $__ptr = $__ptr|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__ptr;
 $1 = $0;
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE19__copy_assign_allocERKS6_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPN6ikfast23IkSingleDOFSolutionBaseIdEES4_EET0_T_S6_S5_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($7)|0);
 $9 = (__ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotatorC2ERKS6_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 24|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 24|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(432,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10deallocateERS5_PS4_j($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(432,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__copy_assign_allocERKS3_NS_17integral_constantIbLb0EEE($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $this;
 $3 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__17advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeE($__i,$__n) {
 $__i = $__i|0;
 $__n = $__n|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__i;
 $1 = $__n;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__14copyIPiS1_EET0_T_S3_S2_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $0;
 $4 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($3)|0);
 $5 = $1;
 $6 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($5)|0);
 $7 = $2;
 $8 = (__ZNSt3__113__unwrap_iterIPiEET_S2_($7)|0);
 $9 = (__ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($4,$6,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__annotator = sp + 16|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $3 = $0;
 $4 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($3)|0);
 $__a = $4;
 while(1) {
  $5 = $1;
  $6 = $2;
  $7 = ($5|0)!=($6|0);
  if (!($7)) {
   break;
  }
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotatorC2ERKS3_j($__annotator,$3,1);
  $8 = $__a;
  $9 = (($3) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($10)|0);
  $12 = $1;
  __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($8,$11,$12);
  __ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $13 = (($3) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 4|0);
  HEAP32[$13>>2] = $15;
  $16 = $1;
  $17 = (($16) + 4|0);
  $1 = $17;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($4)|0);
 $__old_size = $5;
 $6 = $1;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($4,$6);
 $7 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($4|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $2 = $10;
 $3 = $11;
 $12 = $2;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 4|0;
 $4 = sp;
 $0 = $this;
 $5 = $0;
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 $7 = (invoke_i(429)|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if (!($9)) {
  HEAP32[$3>>2] = $7;
  __THREW__ = 0;
  $10 = (invoke_ii(434,($3|0))|0);
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ($6|0)!=($10|0);
   if (!($13)) {
    STACKTOP = sp;return;
   }
   __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($5);
   $14 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($5)|0);
   $15 = HEAP32[$5>>2]|0;
   $16 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($5)|0);
   __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pij($14,$15,$16);
   __THREW__ = 0;
   $17 = (invoke_i(429)|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    HEAP32[$4>>2] = $17;
    __THREW__ = 0;
    $20 = (invoke_ii(434,($4|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($5)|0);
     HEAP32[$23>>2] = $20;
     $24 = (($5) + 4|0);
     HEAP32[$24>>2] = $20;
     HEAP32[$5>>2] = $20;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch()|0;
 $26 = tempRet0;
 $1 = $25;
 $2 = $26;
 $27 = $1;
 ___cxa_call_unexpected(($27|0));
 // unreachable;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEj($this,$__new_size) {
 $this = $this|0;
 $__new_size = $__new_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__cap = 0, $__ms = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = sp;
 $1 = $this;
 HEAP32[$2>>2] = $__new_size;
 $4 = $1;
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv($4)|0);
 $__ms = $5;
 $6 = HEAP32[$2>>2]|0;
 $7 = $__ms;
 $8 = ($6>>>0)>($7>>>0);
 if ($8) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($4)|0);
 $__cap = $9;
 $10 = $__cap;
 $11 = $__ms;
 $12 = (($11>>>0) / 2)&-1;
 $13 = ($10>>>0)>=($12>>>0);
 if ($13) {
  $14 = $__ms;
  $0 = $14;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $15 = $__cap;
  $16 = $15<<1;
  HEAP32[$3>>2] = $16;
  $17 = (__ZNSt3__13maxIjEERKT_S3_S3_($3,$2)|0);
  $18 = HEAP32[$17>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EEC2ES7_SB_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 $3 = (__ZNSt3__17forwardIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEERT_RNS_16remove_referenceIS8_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 $5 = (($2) + 4|0);
 $6 = (__ZNSt3__17forwardINS_22__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEEEERT_RNS_16remove_referenceISB_E4typeE($__t2)|0);
 ;HEAP32[$5+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZN6ikfast14IkSolutionBaseIdEC2ERKS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = (800 + 8|0);
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($2,$7);
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(392,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(435,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(394,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 20|0;
 $0 = $this;
 $1 = $__x;
 $5 = $0;
 $6 = $1;
 $7 = (__ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($6)|0);
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($2,$7);
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($5,$2);
 $8 = $1;
 $9 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($8)|0);
 $__n = $9;
 $10 = $__n;
 $11 = ($10>>>0)>(0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $__n;
 __THREW__ = 0;
 invoke_vii(395,($5|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = $1;
  $16 = HEAP32[$15>>2]|0;
  $17 = $1;
  $18 = (($17) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  __THREW__ = 0;
  invoke_viii(436,($5|0),($16|0),($19|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   STACKTOP = sp;return;
  }
 }
 $22 = ___cxa_find_matching_catch()|0;
 $23 = tempRet0;
 $3 = $22;
 $4 = $23;
 __THREW__ = 0;
 invoke_vi(397,($5|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 }
 $26 = $3;
 $27 = $4;
 ___resumeException($26|0);
 // unreachable;
}
function __ZNSt3__128__libcpp_compressed_pair_impIjNS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__117__compressed_pairIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__122__allocator_destructorINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEEclEPS7_($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__p;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = (($2) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE10deallocateERS8_PS7_j($3,$4,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__19addressofINS_16__list_node_baseIN6ikfast10IkSolutionIdEEPvEEEEPT_RS7_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__x;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9__destroyIS5_EEvNS_17integral_constantIbLb0EEERS8_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vi[$6 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEE10deallocateEPS6_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -4|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($12)|0);
  __THREW__ = 0;
  invoke_vii(437,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIiE10deallocateEPij($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__destruct_at_endEPS3_($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__new_last;
 $4 = $0;
 while(1) {
  $5 = $1;
  $6 = (($4) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5|0)!=($7|0);
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = (__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($4)|0);
  $10 = (($4) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -24|0);
  HEAP32[$10>>2] = $12;
  $13 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($12)|0);
  __THREW__ = 0;
  invoke_vii(438,($9|0),($13|0));
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch()|0;
 $17 = tempRet0;
 $2 = $16;
 $3 = $17;
 $18 = $2;
 ___cxa_call_unexpected(($18|0));
 // unreachable;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE10deallocateEPS3_j($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__13maxIjEERKT_S3_S3_($__a,$__b) {
 $__a = $__a|0;
 $__b = $__b|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__b;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<3)|0);
 $6 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<3)|0);
 $9 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIdNS_9allocatorIdEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<3)|0);
 __ZNKSt3__16vectorIdNS_9allocatorIdEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE20__construct_backwardIdEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 8)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<3)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<3;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPdEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPdEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPdEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPdEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIdNS_9allocatorIdEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 8)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  HEAP32[$2>>2] = 0;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $0 = $this;
 $5 = $0;
 $6 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($5)|0);
 $7 = (__ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($6)|0);
 HEAP32[$1>>2] = $7;
 $8 = (__ZNSt3__114numeric_limitsIjE3maxEv()|0);
 $9 = (($8>>>0) / 2)&-1;
 HEAP32[$2>>2] = $9;
 __THREW__ = 0;
 $10 = (invoke_iii(398,($1|0),($2|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  $13 = HEAP32[$10>>2]|0;
  STACKTOP = sp;return ($13|0);
 }
 $14 = ___cxa_find_matching_catch()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 $16 = $3;
 ___cxa_call_unexpected(($16|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__19nullptr_tcvPT_IjEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $2;
 $7 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($6)|0);
 __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIjE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $5 = (($3) + ($4<<2)|0);
 $6 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4sizeEv($1)|0);
 $8 = (($6) + ($7<<2)|0);
 $9 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($1)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($1)|0);
 $11 = (($9) + ($10<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($1,$2,$5,$8,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE20__construct_backwardIjEENS_9enable_ifIXaaoosr7is_sameIS2_NS1_IT_EEEE5valuentsr15__has_constructIS2_PS6_S6_EE5valuesr31is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_($__a,$__begin1,$__end1,$__end2) {
 $__a = $__a|0;
 $__begin1 = $__begin1|0;
 $__end1 = $__end1|0;
 $__end2 = $__end2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $_Np = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__begin1;
 $2 = $__end1;
 $3 = $__end2;
 $4 = $2;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = (($8|0) / 4)&-1;
 $_Np = $9;
 $10 = $_Np;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $13 = (0 - ($10))|0;
 $14 = (($12) + ($13<<2)|0);
 HEAP32[$11>>2] = $14;
 $15 = $3;
 $16 = HEAP32[$15>>2]|0;
 $17 = $1;
 $18 = $_Np;
 $19 = $18<<2;
 _memcpy(($16|0),($17|0),($19|0))|0;
 STACKTOP = sp;return;
}
function __ZNSt3__14swapIPjEEvRT_S3_($__x,$__y) {
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t = sp;
 $0 = $__x;
 $1 = $__y;
 $2 = $0;
 $3 = (__ZNSt3__14moveIPjEERT_S3_($2)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$__t>>2] = $4;
 $5 = $1;
 $6 = (__ZNSt3__14moveIPjEERT_S3_($5)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $0;
 HEAP32[$8>>2] = $7;
 $9 = (__ZNSt3__14moveIPjEERT_S3_($__t)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $1;
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__current_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $8 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE8capacityEv($2)|0);
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($2)|0);
 $11 = $1;
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIjNS_9allocatorIjEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($1,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10deallocateERS2_Pjj($__a,$__p,$__n) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZNSt3__19allocatorIjE10deallocateEPjj($3,$4,$5);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIjNS_9allocatorIjEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return (0|0);
}
function __ZNKSt3__18ios_base5widthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__18ios_base5widthEi($this,$__wide) {
 $this = $this|0;
 $__wide = $__wide|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $__r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__wide;
 $2 = $0;
 $3 = (($2) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $__r = $4;
 $5 = $1;
 $6 = (($2) + 12|0);
 HEAP32[$6>>2] = $5;
 $7 = $__r;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $this;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($2,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap = 0, $__p = 0, $__sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 24|0;
 $0 = $this;
 $1 = $__first;
 $2 = $__last;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = (__ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($5,$6)|0);
 $__sz = $7;
 $8 = $__sz;
 $9 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($4)|0);
 $10 = ($8>>>0)>($9>>>0);
 if ($10) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($4);
  // unreachable;
 }
 $11 = $__sz;
 $12 = ($11>>>0)<(11);
 if ($12) {
  $13 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($4,$13);
  $14 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($4)|0);
  $__p = $14;
 } else {
  $15 = $__sz;
  $16 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($15)|0);
  $__cap = $16;
  $17 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($4)|0);
  $18 = $__cap;
  $19 = (($18) + 1)|0;
  $20 = (__ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($17,$19)|0);
  $__p = $20;
  $21 = $__p;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($4,$21);
  $22 = $__cap;
  $23 = (($22) + 1)|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($4,$23);
  $24 = $__sz;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($4,$24);
 }
 while(1) {
  $25 = $1;
  $26 = $2;
  $27 = ($25|0)!=($26|0);
  if (!($27)) {
   break;
  }
  $28 = $__p;
  $29 = $1;
  __ZNSt3__111char_traitsIcE6assignERcRKc($28,$29);
  $30 = $1;
  $31 = (($30) + 1|0);
  $1 = $31;
  $32 = $__p;
  $33 = (($32) + 1|0);
  $__p = $33;
 }
 $34 = $__p;
 HEAP8[$3>>0] = 0;
 __ZNSt3__111char_traitsIcE6assignERcRKc($34,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE8max_sizeERKS5_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(439,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = ($4*24)|0;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIN6ikfast23IkSingleDOFSolutionBaseIdEEEEPT_S5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZN6ikfast23IkSingleDOFSolutionBaseIdEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 HEAPF64[$1>>3] = 0.0;
 $2 = (($1) + 8|0);
 HEAPF64[$2>>3] = 0.0;
 $3 = (($1) + 16|0);
 HEAP8[$3>>0] = -1;
 $4 = (($1) + 18|0);
 HEAP8[$4>>0] = 1;
 $5 = (($1) + 19|0);
 $6 = (($5) + 4|0);
 HEAP8[$6>>0] = -1;
 $7 = (($1) + 19|0);
 $8 = (($7) + 3|0);
 HEAP8[$8>>0] = -1;
 $9 = (($1) + 19|0);
 $10 = (($9) + 2|0);
 HEAP8[$10>>0] = -1;
 $11 = (($1) + 19|0);
 $12 = (($11) + 1|0);
 HEAP8[$12>>0] = -1;
 $13 = (($1) + 19|0);
 HEAP8[$13>>0] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_($this,$__t1) {
 $this = $this|0;
 $__t1 = $__t1|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 __ZNSt3__19allocatorIiEC2Ev($2);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(440,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19allocatorIiE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__116__to_raw_pointerIiEEPT_S2_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIdE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 536870911;
}
function __ZNKSt3__16__lessIjjEclERKjS3_($this,$__x,$__y) {
 $this = $this|0;
 $__x = $__x|0;
 $__y = $__y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__x;
 $2 = $__y;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIdEEE9__destroyIdEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdNS_9allocatorIdEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__110__distanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEENS_15iterator_traitsIT_E15difference_typeES6_S6_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPN6ikfast23IkSingleDOFSolutionBaseIdEEEEvRT_NS_15iterator_traitsIS5_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + (($3*24)|0)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPN6ikfast23IkSingleDOFSolutionBaseIdEEEET_S5_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIN6ikfast23IkSingleDOFSolutionBaseIdEES3_EENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS9_EE5valueEPS9_E4typeEPS6_SD_SA_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 24)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = ($11*24)|0;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + (($14*24)|0)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9constructIS4_S4_EEvRS5_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 ;HEAP32[$3+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$5+8>>2]|0;HEAP32[$3+12>>2]=HEAP32[$5+12>>2]|0;HEAP32[$3+16>>2]=HEAP32[$5+16>>2]|0;HEAP32[$3+20>>2]=HEAP32[$5+20>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8capacityEv($2)|0);
 $6 = (($4) + (($5*24)|0)|0);
 $7 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + (($8*24)|0)|0);
 $10 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($2)|0);
 $12 = (($10) + (($11*24)|0)|0);
 __ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE31__annotate_contiguous_containerEPKvS8_S8_S8_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(431,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(441,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__110__distanceIPiEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__19__advanceIPiEEvRT_NS_15iterator_traitsIS2_E15difference_typeENS_26random_access_iterator_tagE($__i,$__n,$0) {
 $__i = $__i|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__i;
 $2 = $__n;
 $3 = $2;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($3<<2)|0);
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNSt3__113__unwrap_iterIPiEET_S2_($__i) {
 $__i = $__i|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__i;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16__copyIiiEENS_9enable_ifIXaasr7is_sameINS_12remove_constIT_E4typeET0_EE5valuesr28is_trivially_copy_assignableIS6_EE5valueEPS6_E4typeEPS3_SA_S7_($__first,$__last,$__result) {
 $__first = $__first|0;
 $__last = $__last|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__first;
 $1 = $__last;
 $2 = $__result;
 $3 = $1;
 $4 = $0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 $__n = $8;
 $9 = $2;
 $10 = $0;
 $11 = $__n;
 $12 = $11<<2;
 _memmove(($9|0),($10|0),($12|0))|0;
 $13 = $2;
 $14 = $__n;
 $15 = (($13) + ($14<<2)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiiEEvRS2_PT_RKT0_($__a,$__p,$__a0) {
 $__a = $__a|0;
 $__p = $__p|0;
 $__a0 = $__a0|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__p;
 $2 = $__a0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$3>>2] = $6;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__old_size;
 $2 = $0;
 $3 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $5 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv($2)|0);
 $6 = (($4) + ($5<<2)|0);
 $7 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $8 = $1;
 $9 = (($7) + ($8<<2)|0);
 $10 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv($2)|0);
 $11 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($2)|0);
 $12 = (($10) + ($11<<2)|0);
 __ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_($2,$3,$6,$9,$12);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__old_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv($3)|0);
 $__old_size = $4;
 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv($3);
 $5 = $__old_size;
 __THREW__ = 0;
 invoke_vii(433,($3|0),($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(442,($3|0));
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   STACKTOP = sp;return;
  }
 }
 $10 = ___cxa_find_matching_catch()|0;
 $11 = tempRet0;
 $1 = $10;
 $2 = $11;
 $12 = $1;
 ___cxa_call_unexpected(($12|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionERKS5_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS5_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_($agg$result,$__a) {
 $agg$result = $agg$result|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 5|0;
 $1 = sp + 4|0;
 $0 = $__a;
 $2 = $0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$$byval_copy,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 21|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = sp + 20|0;
 $0 = $this;
 $1 = $__a;
 $6 = $0;
 $7 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$2>>2] = $7;
 $8 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($2)|0);
 HEAP32[$6>>2] = $8;
 $9 = (($6) + 4|0);
 $10 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$3>>2] = $10;
 $11 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($3)|0);
 HEAP32[$9>>2] = $11;
 $12 = (($6) + 8|0);
 $13 = (__ZNSt3__115__get_nullptr_tEv()|0);
 HEAP32[$4>>2] = $13;
 $14 = (__ZNKSt3__19nullptr_tcvPT_IiEEv($4)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$5+0>>0]|0;
 __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($12,$14,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPNS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_($__a,$__p) {
 $__a = $__a|0;
 $__p = $__p|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__a;
 $1 = $__p;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($$byval_copy,$3,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__13maxIjNS_6__lessIjjEEEERKT_S5_S5_T0_($__a,$__b,$__comp) {
 $__a = $__a|0;
 $__b = $__b|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__b;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNKSt3__16__lessIjjEclERKjS3_($__comp,$2,$3)|0);
 if ($4) {
  $5 = $1;
  $7 = $5;
 } else {
  $6 = $0;
  $7 = $6;
 }
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPdEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIdEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPdEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPd($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIdRNS_9allocatorIdEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE7__allocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE8max_sizeERKS2_($__a) {
 $__a = $__a|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 13|0;
 $1 = sp + 12|0;
 $0 = $__a;
 $4 = $0;
 __THREW__ = 0;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$1+0>>0]|0;
 $5 = (invoke_iii(443,($$byval_copy|0),($4|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  STACKTOP = sp;return ($5|0);
 }
 $8 = ___cxa_find_matching_catch()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 $10 = $2;
 ___cxa_call_unexpected(($10|0));
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($7|0) / 4)&-1;
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EEC2ES1_S4_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 4|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $__t2;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPjEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = (($3) + 4|0);
 $7 = $2;
 $8 = (__ZNSt3__17forwardIRNS_9allocatorIjEEEERT_RNS_16remove_referenceIS4_E4typeE($7)|0);
 HEAP32[$6>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__19allocatorIjE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4<<2;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__14moveIPjEERT_S3_($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPj($this,$__new_last) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $this;
 $1 = $__new_last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($3,$4,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNKSt3__114__split_bufferIjRNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 12|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__19allocatorIjE10deallocateEPjj($this,$__p,$0) {
 $this = $this|0;
 $__p = $__p|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__p;
 $3 = $0;
 $6 = $2;
 __THREW__ = 0;
 invoke_vi(423,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ___cxa_find_matching_catch()|0;
 $10 = tempRet0;
 $4 = $9;
 $5 = $10;
 $11 = $4;
 ___cxa_call_unexpected(($11|0));
 // unreachable;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE9__destroyIjEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2ES5_($this,$__t2) {
 $this = $this|0;
 $__t2 = $__t2|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 (__ZNSt3__17forwardINS_9allocatorIcEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__18distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_($__first,$__last) {
 $__first = $__first|0;
 $__last = $__last|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $2 = sp + 8|0;
 $0 = $__first;
 $1 = $__last;
 $3 = $0;
 $4 = $1;
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 $5 = (__ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($3,$4,$$byval_copy)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateERS2_j($__a,$__n) {
 $__a = $__a|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__a;
 $1 = $__n;
 $2 = $0;
 $3 = $1;
 $4 = (__ZNSt3__19allocatorIcE8allocateEjPKv($2,$3,0)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $0;
 HEAP8[$4>>0] = $3;
 STACKTOP = sp;return;
}
function __ZNSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__19allocatorIiEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIiE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS5_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_($agg$result,$0,$__a) {
 $agg$result = $agg$result|0;
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 STACKTOP = sp;return;
}
function __ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 9|0;
 $1 = sp;
 $2 = sp + 8|0;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $3 = $0;
 $4 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $5 = HEAP32[$4>>2]|0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 ;HEAP8[$$byval_copy+0>>0]=HEAP8[$2+0>>0]|0;
 __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($3,$5,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb0EEERS2_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb0EEERS5_PT_($0,$1,$__p) {
 $0 = $0|0;
 $1 = $1|0;
 $__p = $__p|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = $1;
 $3 = $__p;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE17__destruct_at_endEPdNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -8|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIdEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(422,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPdRNS_9allocatorIdEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_($0,$__a) {
 $0 = $0|0;
 $__a = $__a|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__a;
 $2 = $1;
 $3 = (__ZNKSt3__19allocatorIjE8max_sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNKSt3__113__vector_baseIjNS_9allocatorIjEEE9__end_capEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 8|0);
 $3 = (__ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE17__destruct_at_endEPjNS_17integral_constantIbLb0EEE($this,$__new_last,$0) {
 $this = $this|0;
 $__new_last = $__new_last|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__new_last;
 $5 = $1;
 while(1) {
  $6 = $2;
  $7 = (($5) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)!=($8|0);
  if (!($9)) {
   label = 7;
   break;
  }
  $10 = (__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE7__allocEv($5)|0);
  $11 = (($5) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -4|0);
  HEAP32[$11>>2] = $13;
  $14 = (__ZNSt3__116__to_raw_pointerIjEEPT_S2_($13)|0);
  __THREW__ = 0;
  invoke_vii(426,($10|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
 $17 = ___cxa_find_matching_catch()|0;
 $18 = tempRet0;
 $3 = $17;
 $4 = $18;
 $19 = $3;
 ___cxa_call_unexpected(($19|0));
 // unreachable;
}
function __ZNKSt3__117__compressed_pairIPjRNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__110__distanceIPcEENS_15iterator_traitsIT_E15difference_typeES3_S3_NS_26random_access_iterator_tagE($__first,$__last,$0) {
 $__first = $__first|0;
 $__last = $__last|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__first;
 $2 = $__last;
 $3 = $2;
 $4 = $1;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__19allocatorIcE8allocateEjPKv($this,$__n,$0) {
 $this = $this|0;
 $__n = $__n|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $__n;
 $3 = $0;
 $4 = $2;
 $5 = $4;
 $6 = (__ZNSt3__110__allocateEj($5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 178956970;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIiE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EELj2EEC2ES4_S6_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEEERT_RNS_16remove_referenceIS6_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPN6ikfast23IkSingleDOFSolutionBaseIdEEEERT_RNS_16remove_referenceIS5_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t) {
 $__t = $__t|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__t;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_($this,$__t1,$__t2) {
 $this = $this|0;
 $__t1 = $__t1|0;
 $__t2 = $__t2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $0 = $this;
 HEAP32[$1>>2] = $__t1;
 $2 = $0;
 (__ZNSt3__17forwardINS_9allocatorIiEEEERT_RNS_16remove_referenceIS3_E4typeE($__t2)|0);
 $3 = (__ZNSt3__17forwardIPiEERT_RNS_16remove_referenceIS2_E4typeE($1)|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$2>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPdRNS_9allocatorIdEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE6secondEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__19allocatorIjE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1073741823;
}
function __ZNKSt3__117__compressed_pairIPjNS_9allocatorIjEEE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjRNS_9allocatorIjEELj0EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__128__libcpp_compressed_pair_impIPjNS_9allocatorIjEELj2EE5firstEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = $1;
 return ($0|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 1760;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$lcssa = 0, $$lcssa22 = 0, $$lcssa24 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$04 = 0, $c$1 = 0, $c$2 = 0, $s$05 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$st = $1 ? 1768 : $st;
 $2 = HEAP32[$$st>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = (($src) + 1|0);
      $17 = (1552 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $20 = ($19|0)==(0);
      if ($20) {
       $c$2 = $18;
       break;
      } else {
       $$023 = $19;$c$04 = $18;$s$05 = $16;
       label = 11;
       break;
      }
     }
    } else {
     $$023 = $n;$c$04 = $2;$s$05 = $src;
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $21 = HEAP8[$s$05>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$04 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     }
     $$1 = $$023;$32 = $21;$c$1 = $c$04;$s$1 = $s$05;
     while(1) {
      $29 = $c$1 << 6;
      $30 = (($s$1) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       $$lcssa = $34;$$lcssa24 = $35;
       label = 14;
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $$lcssa22 = $34;
       label = 17;
       break;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       label = 19;
       break;
      }
     }
     if ((label|0) == 14) {
      HEAP32[$$st>>2] = 0;
      HEAP32[$11>>2] = $$lcssa;
      $37 = (($n) - ($$lcssa24))|0;
      $$0 = $37;
      STACKTOP = sp;return ($$0|0);
     }
     else if ((label|0) == 17) {
      $c$2 = $$lcssa22;
      break;
     }
     else if ((label|0) == 19) {
      break L1;
     }
    }
   } while(0);
   HEAP32[$$st>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$st>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$ = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0;
 var $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$0$lcssa = 0, $ws$0$lcssa$ph = 0, $ws$030 = 0, $ws$1 = 0, $ws$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $2 = ($0|0)!=(0|0);
 $3 = ($wn$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $wn$;$$031 = $n;$32 = $0;$cnt$029 = 0;$ws$030 = $wcs$;
   while(1) {
    $4 = $$031 >>> 2;
    $5 = ($4>>>0)>=($$01428>>>0);
    $6 = ($$031>>>0)>(131);
    $or$cond13 = $6 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $32;$cnt$0$lcssa$ph = $cnt$029;$ws$0$lcssa$ph = $ws$030;
     label = 8;
     break;
    }
    $$014$ = $5 ? $$01428 : $4;
    $7 = (($$031) - ($$014$))|0;
    $8 = (_mbsrtowcs($ws$030,$s,$$014$,$st)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     label = 17;
     break;
    }
    $10 = ($ws$030|0)==($wbuf|0);
    if ($10) {
     $$115 = $$01428;$ws$1 = $wbuf;
    } else {
     $11 = (($ws$030) + ($8<<2)|0);
     $12 = (($$01428) - ($8))|0;
     $$115 = $12;$ws$1 = $11;
    }
    $13 = (($8) + ($cnt$029))|0;
    $14 = HEAP32[$s>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$115|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $7;$32 = $14;$cnt$029 = $13;$ws$030 = $ws$1;
    } else {
     $$0$lcssa$ph = $7;$$014$lcssa$ph = $$115;$$ph = $14;$cnt$0$lcssa$ph = $13;$ws$0$lcssa$ph = $ws$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$17 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$ws$0$lcssa = $ws$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 17) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $n;$$014$lcssa = $wn$;$17 = $0;$cnt$0$lcssa = 0;$ws$0$lcssa = $wcs$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $18 = ($17|0)!=(0|0);
   $19 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $19 & $18;
   $20 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $20 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $17;$cnt$2 = $cnt$0$lcssa;$ws$2 = $ws$0$lcssa;
    while(1) {
     $22 = (_mbrtowc($ws$2,$21,$$2,$st)|0);
     $23 = (($22) + 2)|0;
     $24 = ($23>>>0)<(3);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $25 = HEAP32[$s>>2]|0;
     $26 = (($25) + ($22)|0);
     HEAP32[$s>>2] = $26;
     $27 = (($$2) - ($22))|0;
     $28 = (($ws$2) + 4|0);
     $29 = (($$3) + -1)|0;
     $30 = (($cnt$2) + 1)|0;
     $$old4 = ($29|0)!=(0);
     $$old7 = ($$2|0)!=($22|0);
     $or$cond10 = $$old4 & $$old7;
     if ($or$cond10) {
      $$2 = $27;$$3 = $29;$21 = $26;$cnt$2 = $30;$ws$2 = $28;
     } else {
      $$lcssa61 = $30;
      label = 16;
      break;
     }
    }
    if ((label|0) == 16) {
     $cnt$3 = $$lcssa61;
     break;
    }
    if ((($$lcssa|0) == -1)) {
     $cnt$3 = -1;
     break;
    } else if ((($$lcssa|0) == 0)) {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    } else {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
     break;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $31 = HEAP32[$s>>2]|0;
 HEAP32[$src>>2] = $31;
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$03$ph = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0;
 var $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa59 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa67 = 0, $$lcssa69 = 0, $$old1 = 0, $$pre$pre = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$0$ph = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0;
 var $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 20;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 43;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03$ph = $wn;$s$0$ph = $0;
   label = 6;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 7;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $$03 = $$03$ph;$s$0 = $s$0$ph;
   while(1) {
    $7 = HEAP8[$s$0>>0]|0;
    $8 = $7&255;
    $9 = (($8) + -1)|0;
    $10 = ($9>>>0)<(127);
    if ($10) {
     $11 = $s$0;
     $12 = $11 & 3;
     $13 = ($12|0)==(0);
     if ($13) {
      $14 = HEAP32[$s$0>>2]|0;
      $15 = (($14) + -16843009)|0;
      $16 = $15 | $14;
      $17 = $16 & -2139062144;
      $18 = ($17|0)==(0);
      if ($18) {
       $$1415 = $$03;$s$116 = $s$0;
       while(1) {
        $19 = (($s$116) + 4|0);
        $20 = (($$1415) + -4)|0;
        $21 = HEAP32[$19>>2]|0;
        $22 = (($21) + -16843009)|0;
        $23 = $22 | $21;
        $24 = $23 & -2139062144;
        $25 = ($24|0)==(0);
        if ($25) {
         $$1415 = $20;$s$116 = $19;
        } else {
         $$lcssa = $19;$$lcssa53 = $20;$$lcssa54 = $21;
         break;
        }
       }
       $$14$lcssa = $$lcssa53;$$in = $$lcssa54;$s$1$lcssa = $$lcssa;
      } else {
       $$14$lcssa = $$03;$$in = $14;$s$1$lcssa = $s$0;
      }
      $26 = $$in&255;
      $$25 = $$14$lcssa;$28 = $26;$s$2 = $s$1$lcssa;
     } else {
      $$25 = $$03;$28 = $7;$s$2 = $s$0;
     }
    } else {
     $$25 = $$03;$28 = $7;$s$2 = $s$0;
    }
    $27 = $28&255;
    $29 = (($27) + -1)|0;
    $30 = ($29>>>0)<(127);
    if (!($30)) {
     $$25$lcssa = $$25;$$lcssa55 = $27;$s$2$lcssa = $s$2;
     break;
    }
    $31 = (($s$2) + 1|0);
    $32 = (($$25) + -1)|0;
    $$03 = $32;$s$0 = $31;
   }
   $33 = (($$lcssa55) + -194)|0;
   $34 = ($33>>>0)>(50);
   if ($34) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 54;
    break;
   }
   $35 = (($s$2$lcssa) + 1|0);
   $36 = (1552 + ($33<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $37;$s$3 = $35;
   label = 20;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 31;
    break;
   }
   $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   while(1) {
    $63 = HEAP8[$s$520>>0]|0;
    $64 = $63&255;
    $65 = (($64) + -1)|0;
    $66 = ($65>>>0)<(127);
    do {
     if ($66) {
      $67 = $s$520;
      $68 = $67 & 3;
      $69 = ($68|0)==(0);
      $70 = ($$4718>>>0)>(4);
      $or$cond = $70 & $69;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $71 = HEAP32[$s$6>>2]|0;
        $72 = (($71) + -16843009)|0;
        $73 = $72 | $71;
        $74 = $73 & -2139062144;
        $75 = ($74|0)==(0);
        if (!($75)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa59 = $71;$s$6$lcssa = $s$6;
         label = 38;
         break;
        }
        $76 = (($s$6) + 1|0);
        $77 = $71 & 255;
        $78 = (($$1) + 4|0);
        HEAP32[$$1>>2] = $77;
        $79 = (($s$6) + 2|0);
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $82 = (($$1) + 8|0);
        HEAP32[$78>>2] = $81;
        $83 = (($s$6) + 3|0);
        $84 = HEAP8[$79>>0]|0;
        $85 = $84&255;
        $86 = (($$1) + 12|0);
        HEAP32[$82>>2] = $85;
        $87 = (($s$6) + 4|0);
        $88 = HEAP8[$83>>0]|0;
        $89 = $88&255;
        $90 = (($$1) + 16|0);
        HEAP32[$86>>2] = $89;
        $91 = (($$5) + -4)|0;
        $$old1 = ($91>>>0)>(4);
        if ($$old1) {
         $$1 = $90;$$5 = $91;$s$6 = $87;
        } else {
         $$lcssa61 = $87;$$lcssa62 = $90;$$lcssa63 = $91;
         label = 37;
         break;
        }
       }
       if ((label|0) == 37) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa61>>0]|0;
        $$2 = $$lcssa62;$$6 = $$lcssa63;$94 = $$pre$pre;$s$7 = $$lcssa61;
        break;
       }
       else if ((label|0) == 38) {
        label = 0;
        $92 = $$lcssa59&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$94 = $92;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$94 = $63;$s$7 = $s$520;
     }
    } while(0);
    $93 = $94&255;
    $95 = (($93) + -1)|0;
    $96 = ($95>>>0)<(127);
    if (!($96)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa67 = $93;$s$7$lcssa = $s$7;
     break;
    }
    $97 = (($s$7) + 1|0);
    $98 = (($$2) + 4|0);
    HEAP32[$$2>>2] = $93;
    $99 = (($$6) + -1)|0;
    $100 = ($99|0)==(0);
    if ($100) {
     $$lcssa69 = $97;
     label = 30;
     break L7;
    } else {
     $$0219 = $98;$$4718 = $99;$s$520 = $97;
    }
   }
   $101 = (($$lcssa67) + -194)|0;
   $102 = ($101>>>0)>(50);
   if ($102) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 54;
    break;
   }
   $103 = (($s$7$lcssa) + 1|0);
   $104 = (1552 + ($101<<2)|0);
   $105 = HEAP32[$104>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $105;$s$8 = $103;
   label = 43;
   continue;
  }
  else if ((label|0) == 20) {
   label = 0;
   $38 = HEAP8[$s$3>>0]|0;
   $39 = $38&255;
   $40 = $39 >>> 3;
   $41 = (($40) + -16)|0;
   $42 = $c$2 >> 26;
   $43 = (($40) + ($42))|0;
   $44 = $41 | $43;
   $45 = ($44>>>0)>(7);
   if ($45) {
    label = 21;
    break;
   }
   $47 = (($s$3) + 1|0);
   $48 = $c$2 & 33554432;
   $49 = ($48|0)==(0);
   if ($49) {
    $s$4 = $47;
   } else {
    $50 = HEAP8[$47>>0]|0;
    $51 = $50 & -64;
    $52 = ($51<<24>>24)==(-128);
    if (!($52)) {
     label = 24;
     break;
    }
    $54 = (($s$3) + 2|0);
    $55 = $c$2 & 524288;
    $56 = ($55|0)==(0);
    if ($56) {
     $s$4 = $54;
    } else {
     $57 = HEAP8[$54>>0]|0;
     $58 = $57 & -64;
     $59 = ($58<<24>>24)==(-128);
     if (!($59)) {
      label = 27;
      break;
     }
     $61 = (($s$3) + 3|0);
     $s$4 = $61;
    }
   }
   $62 = (($$36) + -1)|0;
   $$03$ph = $62;$s$0$ph = $s$4;
   label = 6;
   continue;
  }
  else if ((label|0) == 43) {
   label = 0;
   $106 = HEAP8[$s$8>>0]|0;
   $107 = $106&255;
   $108 = $107 >>> 3;
   $109 = (($108) + -16)|0;
   $110 = $c$4 >> 26;
   $111 = (($108) + ($110))|0;
   $112 = $109 | $111;
   $113 = ($112>>>0)>(7);
   if ($113) {
    label = 44;
    break;
   }
   $115 = $c$4 << 6;
   $116 = (($s$8) + 1|0);
   $117 = (($107) + -128)|0;
   $118 = $117 | $115;
   $119 = ($118|0)<(0);
   if ($119) {
    $120 = HEAP8[$116>>0]|0;
    $121 = $120&255;
    $122 = $121 & 192;
    $123 = ($122|0)==(128);
    if (!($123)) {
     label = 47;
     break;
    }
    $125 = $118 << 6;
    $126 = (($s$8) + 2|0);
    $127 = (($121) + -128)|0;
    $128 = $127 | $125;
    $129 = ($128|0)<(0);
    if ($129) {
     $130 = HEAP8[$126>>0]|0;
     $131 = $130&255;
     $132 = $131 & 192;
     $133 = ($132|0)==(128);
     if (!($133)) {
      label = 50;
      break;
     }
     $135 = $128 << 6;
     $136 = (($s$8) + 3|0);
     $137 = (($131) + -128)|0;
     $138 = $137 | $135;
     $c$5 = $138;$s$9 = $136;
    } else {
     $c$5 = $128;$s$9 = $126;
    }
   } else {
    $c$5 = $118;$s$9 = $116;
   }
   $139 = (($$3) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $140 = (($$7) + -1)|0;
   $$02$ph = $139;$$47$ph = $140;$s$5$ph = $s$9;
   label = 7;
   continue;
  }
 }
 if ((label|0) == 21) {
  $46 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $46;
  label = 53;
 }
 else if ((label|0) == 24) {
  $53 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $53;
  label = 53;
 }
 else if ((label|0) == 27) {
  $60 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $60;
  label = 53;
 }
 else if ((label|0) == 30) {
  $s$5$lcssa = $$lcssa69;
  label = 31;
 }
 else if ((label|0) == 44) {
  $114 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $114;
  label = 53;
 }
 else if ((label|0) == 47) {
  $124 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $124;
 }
 else if ((label|0) == 50) {
  $134 = (($s$8) + -1|0);
  $$48 = $$3;$s$109 = $134;
 }
 if ((label|0) == 31) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  return ($$0|0);
 }
 else if ((label|0) == 53) {
  $141 = ($c$6|0)==(0);
  if ($141) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 54;
  } else {
   $$48 = $$4;$s$109 = $s$10;
  }
 }
 if ((label|0) == 54) {
  $142 = HEAP8[$s$1035>>0]|0;
  $143 = ($142<<24>>24)==(0);
  if ($143) {
   $144 = ($$434|0)==(0|0);
   if (!($144)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $145 = (($wn) - ($$833))|0;
   $$0 = $145;
   return ($$0|0);
  } else {
   $$48 = $$434;$s$109 = $s$1035;
  }
 }
 $146 = (___errno_location()|0);
 HEAP32[$146>>2] = 84;
 $147 = ($$48|0)==(0|0);
 if ($147) {
  $$0 = -1;
  return ($$0|0);
 }
 HEAP32[$src>>2] = $s$109;
 $$0 = -1;
 return ($$0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($src|0)==(0|0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = ($n|0)==(0);
 do {
  if (!($2)) {
   $3 = ($wc|0)==(0|0);
   if ($3) {
    HEAP32[$0>>2] = $0;
    $7 = $0;
   } else {
    $7 = $wc;
   }
   $4 = HEAP8[$src>>0]|0;
   $5 = $4&255;
   $6 = ($4<<24>>24)>(-1);
   if ($6) {
    HEAP32[$7>>2] = $5;
    $8 = ($4<<24>>24)!=(0);
    $9 = $8&1;
    $$0 = $9;
    STACKTOP = sp;return ($$0|0);
   }
   $10 = (($5) + -194)|0;
   $11 = ($10>>>0)>(50);
   if (!($11)) {
    $12 = (($src) + 1|0);
    $13 = (1552 + ($10<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($n>>>0)<(4);
    if ($15) {
     $16 = ($n*6)|0;
     $17 = (($16) + -6)|0;
     $18 = -2147483648 >>> $17;
     $19 = $14 & $18;
     $20 = ($19|0)==(0);
     if (!($20)) {
      break;
     }
    }
    $21 = HEAP8[$12>>0]|0;
    $22 = $21&255;
    $23 = $22 >>> 3;
    $24 = (($23) + -16)|0;
    $25 = $14 >> 26;
    $26 = (($23) + ($25))|0;
    $27 = $24 | $26;
    $28 = ($27>>>0)>(7);
    if (!($28)) {
     $29 = $14 << 6;
     $30 = (($22) + -128)|0;
     $31 = $30 | $29;
     $32 = ($31|0)<(0);
     if (!($32)) {
      HEAP32[$7>>2] = $31;
      $$0 = 2;
      STACKTOP = sp;return ($$0|0);
     }
     $33 = (($src) + 2|0);
     $34 = HEAP8[$33>>0]|0;
     $35 = $34&255;
     $36 = $35 & 192;
     $37 = ($36|0)==(128);
     if ($37) {
      $38 = $31 << 6;
      $39 = (($35) + -128)|0;
      $40 = $39 | $38;
      $41 = ($40|0)<(0);
      if (!($41)) {
       HEAP32[$7>>2] = $40;
       $$0 = 3;
       STACKTOP = sp;return ($$0|0);
      }
      $42 = (($src) + 3|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = $43&255;
      $45 = $44 & 192;
      $46 = ($45|0)==(128);
      if ($46) {
       $47 = $40 << 6;
       $48 = (($44) + -128)|0;
       $49 = $48 | $47;
       HEAP32[$7>>2] = $49;
       $$0 = 4;
       STACKTOP = sp;return ($$0|0);
      }
     }
    }
   }
  }
 } while(0);
 $50 = (___errno_location()|0);
 HEAP32[$50>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$0$lcssa = 0, $$0$lcssa$ph = 0, $$014$$0 = 0, $$014$lcssa = 0, $$014$lcssa$ph = 0, $$01428 = 0, $$031 = 0, $$115 = 0, $$2 = 0, $$3 = 0, $$lcssa = 0, $$lcssa61 = 0, $$old4 = 0, $$old7 = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$0$lcssa = 0, $cnt$0$lcssa$ph = 0, $cnt$029 = 0, $cnt$2 = 0, $cnt$2$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0, $or$cond10 = 0;
 var $or$cond13 = 0, $or$cond27 = 0, $or$cond5 = 0, $or$cond8 = 0, $s$0$lcssa = 0, $s$0$lcssa$ph = 0, $s$030 = 0, $s$1 = 0, $s$2 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $2 = ($0|0)!=(0|0);
 $3 = ($n$|0)!=(0);
 $or$cond27 = $3 & $2;
 do {
  if ($or$cond27) {
   $$01428 = $n$;$$031 = $wn;$33 = $0;$cnt$029 = 0;$s$030 = $dst$;
   while(1) {
    $4 = ($$031>>>0)>=($$01428>>>0);
    $5 = ($$031>>>0)>(32);
    $or$cond13 = $4 | $5;
    if (!($or$cond13)) {
     $$0$lcssa$ph = $$031;$$014$lcssa$ph = $$01428;$$ph = $33;$cnt$0$lcssa$ph = $cnt$029;$s$0$lcssa$ph = $s$030;
     label = 8;
     break;
    }
    $$014$$0 = $4 ? $$01428 : $$031;
    $6 = (($$031) - ($$014$$0))|0;
    $7 = (_wcsrtombs($s$030,$ws,$$014$$0,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     label = 16;
     break;
    }
    $9 = ($s$030|0)==($buf|0);
    if ($9) {
     $$115 = $$01428;$s$1 = $buf;
    } else {
     $10 = (($s$030) + ($7)|0);
     $11 = (($$01428) - ($7))|0;
     $$115 = $11;$s$1 = $10;
    }
    $12 = (($7) + ($cnt$029))|0;
    $13 = HEAP32[$ws>>2]|0;
    $14 = ($13|0)!=(0|0);
    $15 = ($$115|0)!=(0);
    $or$cond = $15 & $14;
    if ($or$cond) {
     $$01428 = $$115;$$031 = $6;$33 = $13;$cnt$029 = $12;$s$030 = $s$1;
    } else {
     $$0$lcssa$ph = $6;$$014$lcssa$ph = $$115;$$ph = $13;$cnt$0$lcssa$ph = $12;$s$0$lcssa$ph = $s$1;
     label = 8;
     break;
    }
   }
   if ((label|0) == 8) {
    $$0$lcssa = $$0$lcssa$ph;$$014$lcssa = $$014$lcssa$ph;$16 = $$ph;$cnt$0$lcssa = $cnt$0$lcssa$ph;$s$0$lcssa = $s$0$lcssa$ph;
    label = 9;
    break;
   }
   else if ((label|0) == 16) {
    $cnt$3 = -1;
    break;
   }
  } else {
   $$0$lcssa = $wn;$$014$lcssa = $n$;$16 = $0;$cnt$0$lcssa = 0;$s$0$lcssa = $dst$;
   label = 9;
  }
 } while(0);
 do {
  if ((label|0) == 9) {
   $17 = ($16|0)!=(0|0);
   $18 = ($$014$lcssa|0)!=(0);
   $or$cond5 = $18 & $17;
   $19 = ($$0$lcssa|0)!=(0);
   $or$cond8 = $19 & $or$cond5;
   if ($or$cond8) {
    $$2 = $$0$lcssa;$$3 = $$014$lcssa;$21 = $16;$cnt$2 = $cnt$0$lcssa;$s$2 = $s$0$lcssa;
    while(1) {
     $20 = HEAP32[$21>>2]|0;
     $22 = (_wcrtomb($s$2,$20,0)|0);
     $23 = (($22) + 1)|0;
     $24 = ($23>>>0)<(2);
     if ($24) {
      $$lcssa = $22;$cnt$2$lcssa = $cnt$2;
      break;
     }
     $26 = HEAP32[$ws>>2]|0;
     $27 = (($26) + 4|0);
     HEAP32[$ws>>2] = $27;
     $28 = (($$2) + -1)|0;
     $29 = (($s$2) + ($22)|0);
     $30 = (($$3) - ($22))|0;
     $31 = (($cnt$2) + 1)|0;
     $$old4 = ($$3|0)!=($22|0);
     $$old7 = ($28|0)!=(0);
     $or$cond10 = $$old7 & $$old4;
     if ($or$cond10) {
      $$2 = $28;$$3 = $30;$21 = $27;$cnt$2 = $31;$s$2 = $29;
     } else {
      $$lcssa61 = $31;
      label = 15;
      break;
     }
    }
    if ((label|0) == 15) {
     $cnt$3 = $$lcssa61;
     break;
    }
    $25 = ($$lcssa|0)==(0);
    if ($25) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$2$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$0$lcssa;
   }
  }
 } while(0);
 if (!($1)) {
  STACKTOP = sp;return ($cnt$3|0);
 }
 $32 = HEAP32[$ws>>2]|0;
 HEAP32[$wcs>>2] = $32;
 STACKTOP = sp;return ($cnt$3|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$0$ph = 0, $$0$ph58 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$1$lcssa = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$35$lcssa = 0, $$422 = 0, $$422$lcssa = 0;
 var $$422$lcssa63 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $$0218 = 0;$5 = $3;$ws2$019 = $2;
  while(1) {
   $6 = ($5>>>0)>(127);
   if ($6) {
    $7 = (_wcrtomb($buf,$5,0)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0$ph = -1;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$0218))|0;
   $9 = (($ws2$019) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0$ph = $$13;
    break;
   } else {
    $$0218 = $$13;$5 = $10;$ws2$019 = $9;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = ($n>>>0)>(3);
 do {
  if ($1) {
   $$pre = HEAP32[$ws>>2]|0;
   $$0129 = $s;$$2428 = $n;$14 = $$pre;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
      label = 14;
      break;
     }
     $19 = (_wcrtomb($$0129,$13,0)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      label = 30;
      break;
     }
     $21 = (($$0129) + ($19)|0);
     $22 = (($$2428) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = (($$0129) + 1|0);
     HEAP8[$$0129>>0] = $23;
     $25 = (($$2428) + -1)|0;
     $$pre43 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre43;
    }
    $26 = (($27) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0129 = $$1;$$2428 = $$35;$14 = $26;
    } else {
     $$1$lcssa = $$1;$$35$lcssa = $$35;
     label = 9;
     break;
    }
   }
   if ((label|0) == 9) {
    $$01$lcssa = $$1$lcssa;$$24$lcssa = $$35$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    HEAP8[$$0129$lcssa>>0] = 0;
    HEAP32[$ws>>2] = 0;
    $18 = (($n) - ($$2428$lcssa))|0;
    $$0 = $18;
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 30) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre44 = HEAP32[$ws>>2]|0;
 $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre44;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    $$223$lcssa = $$223;$$422$lcssa = $$422;
    label = 21;
    break;
   }
   $35 = (_wcrtomb($buf,$29,0)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0$ph58 = -1;
    label = 29;
    break;
   }
   $37 = ($$422>>>0)<($35>>>0);
   if ($37) {
    $$422$lcssa63 = $$422;
    label = 24;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$223,$39,0)|0);
   $40 = (($$223) + ($35)|0);
   $41 = (($$422) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = (($$223) + 1|0);
   HEAP8[$$223>>0] = $42;
   $44 = (($$422) + -1)|0;
   $$pre45 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre45;
  }
  $45 = (($46) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0$ph58 = $n;
   label = 29;
   break;
  } else {
   $$223 = $$3;$$422 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 21) {
  HEAP8[$$223$lcssa>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$422$lcssa))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 24) {
  $38 = (($n) - ($$422$lcssa63))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 29) {
  $$0 = $$0$ph58;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $k$0 = $2;
 } else {
  $5 = $3;
  $6 = $1;
  $7 = (($5) - ($6))|0;
  $k$0 = $7;
 }
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = (($f) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = (($f) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _MUSL_vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$8 = 0, $$lcssa = 0, $$lcssa317 = 0, $$lcssa318 = 0, $$lcssa319 = 0, $$lcssa320 = 0, $$lcssa366 = 0, $$lcssa39 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi223Z2D = 0, $$pre209 = 0, $$pre211 = 0, $$pre215 = 0;
 var $$pre217 = 0, $$pre218 = 0, $$pre220 = 0, $$pre221 = 0, $$pre222 = 0, $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0.0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0.0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0$lcssa = 0, $alloc$0$lcssa381 = 0, $alloc$0$lcssa382 = 0, $alloc$0$lcssa383 = 0, $alloc$0$lcssa385 = 0, $alloc$0$lcssa386 = 0, $alloc$0$lcssa387 = 0, $alloc$0204 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0;
 var $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0, $c$0101 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor17 = 0, $i$0$i = 0, $i$0$ph = 0;
 var $i$0$ph$lcssa = 0, $i$0$ph$lcssa333 = 0, $i$0$ph21 = 0, $i$0$ph21$lcssa = 0, $i$0$ph21$lcssa336 = 0, $i$0$ph21$us106 = 0, $i$0$ph21$us106$lcssa = 0, $i$1$lcssa = 0, $i$2 = 0, $i$2$lcssa = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$3$lcssa = 0, $i$4 = 0, $invert$0 = 0, $isdigit = 0, $isdigit7 = 0, $isdigit796 = 0, $isdigittmp = 0;
 var $isdigittmp6 = 0, $isdigittmp695 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0111 = 0, $matches$0111$lcssa = 0, $matches$0111$lcssa338 = 0, $matches$0111$lcssa339 = 0, $matches$0111$lcssa340 = 0, $matches$0111$lcssa341 = 0, $matches$0111$lcssa342 = 0, $matches$0111$lcssa343 = 0, $matches$0111$lcssa344 = 0, $matches$0111$lcssa345 = 0, $matches$0111347 = 0, $matches$1 = 0, $matches$1$lcssa = 0, $matches$2 = 0, $matches$3 = 0;
 var $not$ = 0, $or$cond$us = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond9 = 0, $p$0117 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$397 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$lcssa = 0, $p$7$ph = 0, $p$8 = 0;
 var $p$9 = 0, $pos$0116 = 0, $pos$1 = 0, $pos$2 = 0, $s$0109 = 0, $s$0109$lcssa = 0, $s$1 = 0, $s$1$lcssa368 = 0, $s$2$ph = 0, $s$2$ph$lcssa = 0, $s$2$ph$lcssa323 = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$6$ph = 0, $s$7 = 0, $s$8 = 0, $s$8$ph = 0, $scanset = 0;
 var $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0110 = 0, $wcs$0110$lcssa = 0, $wcs$1 = 0, $wcs$1$lcssa375 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$3$ph$lcssa$lcssa = 0, $wcs$3$ph$lcssa326 = 0, $wcs$3$ph$lcssa327 = 0, $wcs$3$ph$lcssa330 = 0, $wcs$3$ph139 = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0;
 var $wcs$7$ph = 0, $wcs$8 = 0, $wcs$9 = 0, $wcs$9$ph = 0, $width$0$lcssa = 0, $width$098 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = HEAP8[$fmt>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $matches$3 = 0;
  STACKTOP = sp;return ($matches$3|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 $5 = (($f) + 108|0);
 $6 = (($f) + 8|0);
 $7 = (($scanset) + 10|0);
 $8 = (($scanset) + 33|0);
 $9 = (($st) + 4|0);
 $10 = (($scanset) + 46|0);
 $11 = (($scanset) + 94|0);
 $13 = $1;$matches$0111 = 0;$p$0117 = $fmt;$pos$0116 = 0;$s$0109 = 0;$wcs$0110 = 0;
 L4: while(1) {
  $12 = $13&255;
  $14 = (_isspace($12)|0);
  $15 = ($14|0)==(0);
  L6: do {
   if ($15) {
    $42 = HEAP8[$p$0117>>0]|0;
    $43 = ($42<<24>>24)==(37);
    L22: do {
     if ($43) {
      $44 = (($p$0117) + 1|0);
      $45 = HEAP8[$44>>0]|0;
      do {
       if ((($45<<24>>24) == 37)) {
        break L22;
       } else if ((($45<<24>>24) == 42)) {
        $66 = (($p$0117) + 2|0);
        $dest$0 = 0;$p$2 = $66;
       } else {
        $67 = $45&255;
        $isdigittmp = (($67) + -48)|0;
        $isdigit = ($isdigittmp>>>0)<(10);
        if ($isdigit) {
         $68 = (($p$0117) + 2|0);
         $69 = HEAP8[$68>>0]|0;
         $70 = ($69<<24>>24)==(36);
         if ($70) {
          $vacopy_currentptr = HEAP32[$ap>>2]|0;
          HEAP32[$ap2$i>>2] = $vacopy_currentptr;
          $i$0$i = $isdigittmp;
          while(1) {
           $71 = ($i$0$i>>>0)>(1);
           $arglist_current = HEAP32[$ap2$i>>2]|0;
           $72 = $arglist_current;
           $73 = (0 + 4|0);
           $expanded4 = $73;
           $expanded = (($expanded4) - 1)|0;
           $74 = (($72) + ($expanded))|0;
           $75 = (0 + 4|0);
           $expanded8 = $75;
           $expanded7 = (($expanded8) - 1)|0;
           $expanded6 = $expanded7 ^ -1;
           $76 = $74 & $expanded6;
           $77 = $76;
           $78 = HEAP32[$77>>2]|0;
           $arglist_next = (($77) + 4|0);
           HEAP32[$ap2$i>>2] = $arglist_next;
           $79 = (($i$0$i) + -1)|0;
           if ($71) {
            $i$0$i = $79;
           } else {
            $$lcssa = $78;
            break;
           }
          }
          $80 = (($p$0117) + 3|0);
          $dest$0 = $$lcssa;$p$2 = $80;
          break;
         }
        }
        $arglist_current2 = HEAP32[$ap>>2]|0;
        $81 = $arglist_current2;
        $82 = (0 + 4|0);
        $expanded11 = $82;
        $expanded10 = (($expanded11) - 1)|0;
        $83 = (($81) + ($expanded10))|0;
        $84 = (0 + 4|0);
        $expanded15 = $84;
        $expanded14 = (($expanded15) - 1)|0;
        $expanded13 = $expanded14 ^ -1;
        $85 = $83 & $expanded13;
        $86 = $85;
        $87 = HEAP32[$86>>2]|0;
        $arglist_next3 = (($86) + 4|0);
        HEAP32[$ap>>2] = $arglist_next3;
        $dest$0 = $87;$p$2 = $44;
       }
      } while(0);
      $88 = HEAP8[$p$2>>0]|0;
      $89 = $88&255;
      $isdigittmp695 = (($89) + -48)|0;
      $isdigit796 = ($isdigittmp695>>>0)<(10);
      if ($isdigit796) {
       $93 = $89;$p$397 = $p$2;$width$098 = 0;
       while(1) {
        $90 = ($width$098*10)|0;
        $91 = (($90) + -48)|0;
        $92 = (($91) + ($93))|0;
        $94 = (($p$397) + 1|0);
        $95 = HEAP8[$94>>0]|0;
        $96 = $95&255;
        $isdigittmp6 = (($96) + -48)|0;
        $isdigit7 = ($isdigittmp6>>>0)<(10);
        if ($isdigit7) {
         $93 = $96;$p$397 = $94;$width$098 = $92;
        } else {
         $$lcssa317 = $92;$$lcssa318 = $94;$$lcssa319 = $95;
         break;
        }
       }
       $$lcssa39 = $$lcssa319;$p$3$lcssa = $$lcssa318;$width$0$lcssa = $$lcssa317;
      } else {
       $$lcssa39 = $88;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
      }
      $97 = ($$lcssa39<<24>>24)==(109);
      if ($97) {
       $98 = ($dest$0|0)!=(0|0);
       $99 = $98&1;
       $100 = (($p$3$lcssa) + 1|0);
       $$pre = HEAP8[$100>>0]|0;
       $103 = $$pre;$alloc$0 = $99;$p$4 = $100;$s$1 = 0;$wcs$1 = 0;
      } else {
       $103 = $$lcssa39;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0109;$wcs$1 = $wcs$0110;
      }
      $101 = (($p$4) + 1|0);
      $102 = $103&255;
      switch ($102|0) {
      case 104:  {
       $104 = HEAP8[$101>>0]|0;
       $105 = ($104<<24>>24)==(104);
       $106 = (($p$4) + 2|0);
       $$10 = $105 ? $106 : $101;
       $$11 = $105 ? -2 : -1;
       $p$5 = $$10;$size$0 = $$11;
       break;
      }
      case 108:  {
       $107 = HEAP8[$101>>0]|0;
       $108 = ($107<<24>>24)==(108);
       $109 = (($p$4) + 2|0);
       $$12 = $108 ? $109 : $101;
       $$13 = $108 ? 3 : 1;
       $p$5 = $$12;$size$0 = $$13;
       break;
      }
      case 116: case 122:  {
       $p$5 = $101;$size$0 = 1;
       break;
      }
      case 76:  {
       $p$5 = $101;$size$0 = 2;
       break;
      }
      case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
       $p$5 = $p$4;$size$0 = 0;
       break;
      }
      case 106:  {
       $p$5 = $101;$size$0 = 3;
       break;
      }
      default: {
       $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
       label = 188;
       break L4;
      }
      }
      $110 = HEAP8[$p$5>>0]|0;
      $111 = $110&255;
      $112 = $111 & 47;
      $113 = ($112|0)==(3);
      $114 = $111 | 32;
      $$ = $113 ? $114 : $111;
      $$size$0 = $113 ? 1 : $size$0;
      if ((($$|0) == 110)) {
       $116 = ($pos$0116|0)<(0);
       $117 = $116 << 31 >> 31;
       $118 = ($dest$0|0)==(0|0);
       if ($118) {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       switch ($$size$0|0) {
       case -2:  {
        $119 = $pos$0116&255;
        HEAP8[$dest$0>>0] = $119;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case -1:  {
        $120 = $pos$0116&65535;
        HEAP16[$dest$0>>1] = $120;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 0:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 1:  {
        HEAP32[$dest$0>>2] = $pos$0116;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       case 3:  {
        $121 = $dest$0;
        $122 = $121;
        HEAP32[$122>>2] = $pos$0116;
        $123 = (($121) + 4)|0;
        $124 = $123;
        HEAP32[$124>>2] = $117;
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
        break;
       }
       default: {
        $matches$1 = $matches$0111;$p$11 = $p$5;$pos$2 = $pos$0116;$s$5 = $s$1;$wcs$6 = $wcs$1;
        break L6;
       }
       }
      } else if ((($$|0) == 99)) {
       $115 = ($width$0$lcssa|0)<(1);
       $$width$0 = $115 ? 1 : $width$0$lcssa;
       $pos$1 = $pos$0116;$width$1 = $$width$0;
      } else if ((($$|0) == 91)) {
       $pos$1 = $pos$0116;$width$1 = $width$0$lcssa;
      } else {
       ___shlim($f,0);
       while(1) {
        $125 = HEAP32[$3>>2]|0;
        $126 = HEAP32[$4>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = (($125) + 1|0);
         HEAP32[$3>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $132 = $130;
        } else {
         $131 = (___shgetc($f)|0);
         $132 = $131;
        }
        $133 = (_isspace($132)|0);
        $134 = ($133|0)==(0);
        if ($134) {
         break;
        }
       }
       $135 = HEAP32[$4>>2]|0;
       $136 = ($135|0)==(0|0);
       $$pre209 = HEAP32[$3>>2]|0;
       if ($136) {
        $140 = $$pre209;
       } else {
        $137 = (($$pre209) + -1|0);
        HEAP32[$3>>2] = $137;
        $140 = $137;
       }
       $138 = HEAP32[$5>>2]|0;
       $139 = HEAP32[$6>>2]|0;
       $141 = $140;
       $142 = $139;
       $143 = (($138) + ($pos$0116))|0;
       $144 = (($143) + ($141))|0;
       $145 = (($144) - ($142))|0;
       $pos$1 = $145;$width$1 = $width$0$lcssa;
      }
      ___shlim($f,$width$1);
      $146 = HEAP32[$3>>2]|0;
      $147 = HEAP32[$4>>2]|0;
      $148 = ($146>>>0)<($147>>>0);
      if ($148) {
       $149 = (($146) + 1|0);
       HEAP32[$3>>2] = $149;
       $152 = $147;
      } else {
       $150 = (___shgetc($f)|0);
       $151 = ($150|0)<(0);
       if ($151) {
        $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = $s$1;$wcs$7$ph = $wcs$1;
        label = 188;
        break L4;
       }
       $$pre211 = HEAP32[$4>>2]|0;
       $152 = $$pre211;
      }
      $153 = ($152|0)==(0|0);
      if (!($153)) {
       $154 = HEAP32[$3>>2]|0;
       $155 = (($154) + -1|0);
       HEAP32[$3>>2] = $155;
      }
      L81: do {
       switch ($$|0) {
       case 111:  {
        $base$0 = 8;
        label = 164;
        break;
       }
       case 117: case 100:  {
        $base$0 = 10;
        label = 164;
        break;
       }
       case 105:  {
        $base$0 = 0;
        label = 164;
        break;
       }
       case 120: case 88: case 112:  {
        $base$0 = 16;
        label = 164;
        break;
       }
       case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
        $337 = (+___floatscan($f,$$size$0,0));
        $338 = HEAP32[$5>>2]|0;
        $339 = HEAP32[$3>>2]|0;
        $340 = HEAP32[$6>>2]|0;
        $341 = $339;
        $342 = $340;
        $343 = (($342) - ($341))|0;
        $344 = ($338|0)==($343|0);
        if ($344) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $345 = ($dest$0|0)==(0|0);
        if ($345) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         if ((($$size$0|0) == 1)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 2)) {
          HEAPF64[$dest$0>>3] = $337;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else if ((($$size$0|0) == 0)) {
          $346 = $337;
          HEAPF32[$dest$0>>2] = $346;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         } else {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L81;
         }
        }
        break;
       }
       case 91: case 99: case 115:  {
        $156 = ($$|0)==(99);
        $157 = $$ & 239;
        $158 = ($157|0)==(99);
        if ($158) {
         $159 = ($$|0)==(115);
         _memset(($scanset|0),-1,257)|0;
         HEAP8[$scanset>>0] = 0;
         if ($159) {
          HEAP8[$8>>0] = 0;
          ;HEAP8[$7+0>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;HEAP8[$7+4>>0]=0|0;
          $p$9 = $p$5;
         } else {
          $p$9 = $p$5;
         }
        } else {
         $160 = (($p$5) + 1|0);
         $161 = HEAP8[$160>>0]|0;
         $162 = ($161<<24>>24)==(94);
         $163 = (($p$5) + 2|0);
         $invert$0 = $162&1;
         $164 = $162 ? $160 : $p$5;
         $p$6 = $162 ? $163 : $160;
         $165 = $162&1;
         _memset(($scanset|0),($165|0),257)|0;
         HEAP8[$scanset>>0] = 0;
         $166 = HEAP8[$p$6>>0]|0;
         if ((($166<<24>>24) == 45)) {
          $167 = (($164) + 2|0);
          $168 = $invert$0 ^ 1;
          $169 = $168&255;
          HEAP8[$10>>0] = $169;
          $$pre$phi223Z2D = $169;$p$7$ph = $167;
         } else if ((($166<<24>>24) == 93)) {
          $170 = (($164) + 2|0);
          $171 = $invert$0 ^ 1;
          $172 = $171&255;
          HEAP8[$11>>0] = $172;
          $$pre$phi223Z2D = $172;$p$7$ph = $170;
         } else {
          $$pre221 = $invert$0 ^ 1;
          $$pre222 = $$pre221&255;
          $$pre$phi223Z2D = $$pre222;$p$7$ph = $p$6;
         }
         $p$7 = $p$7$ph;
         while(1) {
          $173 = HEAP8[$p$7>>0]|0;
          if ((($173<<24>>24) == 0)) {
           $alloc$0$lcssa382 = $alloc$0;$matches$0111$lcssa340 = $matches$0111;$s$1$lcssa368 = $s$1;$wcs$1$lcssa375 = $wcs$1;
           label = 187;
           break L4;
          } else if ((($173<<24>>24) == 93)) {
           $p$7$lcssa = $p$7;
           break;
          } else if ((($173<<24>>24) == 45)) {
           $174 = (($p$7) + 1|0);
           $175 = HEAP8[$174>>0]|0;
           if ((($175<<24>>24) == 93) | (($175<<24>>24) == 0)) {
            $186 = 45;$p$8 = $p$7;
           } else {
            $176 = (($p$7) + -1|0);
            $177 = HEAP8[$176>>0]|0;
            $178 = ($177&255)<($175&255);
            if ($178) {
             $179 = $177&255;
             $c$0101 = $179;
             while(1) {
              $180 = (($c$0101) + 1)|0;
              $181 = (($scanset) + ($180)|0);
              HEAP8[$181>>0] = $$pre$phi223Z2D;
              $182 = HEAP8[$174>>0]|0;
              $183 = $182&255;
              $184 = ($180|0)<($183|0);
              if ($184) {
               $c$0101 = $180;
              } else {
               $$lcssa320 = $182;
               break;
              }
             }
             $186 = $$lcssa320;$p$8 = $174;
            } else {
             $186 = $175;$p$8 = $174;
            }
           }
          } else {
           $186 = $173;$p$8 = $p$7;
          }
          $185 = $186&255;
          $187 = (($185) + 1)|0;
          $188 = (($scanset) + ($187)|0);
          HEAP8[$188>>0] = $$pre$phi223Z2D;
          $189 = (($p$8) + 1|0);
          $p$7 = $189;
         }
         $p$9 = $p$7$lcssa;
        }
        $190 = (($width$1) + 1)|0;
        $$8 = $156 ? $190 : 31;
        $191 = ($$size$0|0)==(1);
        $192 = ($alloc$0|0)!=(0);
        do {
         if ($191) {
          if ($192) {
           $193 = $$8 << 2;
           $194 = (_malloc($193)|0);
           $195 = ($194|0)==(0|0);
           if ($195) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $194;
            label = 188;
            break L4;
           } else {
            $wcs$2 = $194;
           }
          } else {
           $wcs$2 = $dest$0;
          }
          HEAP32[$st>>2] = 0;
          HEAP32[$9>>2] = 0;
          $i$0$ph = 0;$k$0$ph = $$8;$wcs$3$ph = $wcs$2;
          L120: while(1) {
           $196 = ($wcs$3$ph|0)==(0|0);
           if ($196) {
            while(1) {
             $199 = HEAP32[$3>>2]|0;
             $210 = HEAP32[$4>>2]|0;
             $211 = ($199>>>0)<($210>>>0);
             if ($211) {
              $198 = (($199) + 1|0);
              HEAP32[$3>>2] = $198;
              $200 = HEAP8[$199>>0]|0;
              $201 = $200&255;
              $203 = $201;
             } else {
              $197 = (___shgetc($f)|0);
              $203 = $197;
             }
             $202 = (($203) + 1)|0;
             $204 = (($scanset) + ($202)|0);
             $205 = HEAP8[$204>>0]|0;
             $206 = ($205<<24>>24)==(0);
             if ($206) {
              $i$0$ph$lcssa333 = $i$0$ph;
              label = 120;
              break L120;
             }
             $207 = $203&255;
             HEAP8[$0>>0] = $207;
             $208 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($208|0) == -1)) {
              $alloc$0$lcssa386 = $alloc$0;$matches$0111$lcssa344 = $matches$0111;
              label = 184;
              break L4;
             } else if (!((($208|0) == -2))) {
              $209 = ($i$0$ph|0)==($k$0$ph|0);
              $or$cond$us = $192 & $209;
              if ($or$cond$us) {
               break;
              }
             }
            }
            $i$1$lcssa = $i$0$ph;
           } else {
            if (!($192)) {
             $i$0$ph$lcssa = $i$0$ph;$wcs$3$ph$lcssa = $wcs$3$ph;
             label = 91;
             break;
            }
            $i$0$ph21$us106 = $i$0$ph;
            while(1) {
             while(1) {
              $214 = HEAP32[$3>>2]|0;
              $228 = HEAP32[$4>>2]|0;
              $229 = ($214>>>0)<($228>>>0);
              if ($229) {
               $213 = (($214) + 1|0);
               HEAP32[$3>>2] = $213;
               $215 = HEAP8[$214>>0]|0;
               $216 = $215&255;
               $218 = $216;
              } else {
               $212 = (___shgetc($f)|0);
               $218 = $212;
              }
              $217 = (($218) + 1)|0;
              $219 = (($scanset) + ($217)|0);
              $220 = HEAP8[$219>>0]|0;
              $221 = ($220<<24>>24)==(0);
              if ($221) {
               $i$0$ph21$us106$lcssa = $i$0$ph21$us106;$wcs$3$ph$lcssa326 = $wcs$3$ph;
               label = 118;
               break L120;
              }
              $222 = $218&255;
              HEAP8[$0>>0] = $222;
              $223 = (_mbrtowc($wc,$0,1,$st)|0);
              if ((($223|0) == -1)) {
               $alloc$0$lcssa385 = $alloc$0;$matches$0111$lcssa343 = $matches$0111;$wcs$3$ph$lcssa327 = $wcs$3$ph;
               label = 182;
               break L4;
              } else if (!((($223|0) == -2))) {
               break;
              }
             }
             $224 = HEAP32[$wc>>2]|0;
             $225 = (($i$0$ph21$us106) + 1)|0;
             $226 = (($wcs$3$ph) + ($i$0$ph21$us106<<2)|0);
             HEAP32[$226>>2] = $224;
             $227 = ($225|0)==($k$0$ph|0);
             if ($227) {
              break;
             } else {
              $i$0$ph21$us106 = $225;
             }
            }
            $i$1$lcssa = $k$0$ph;
           }
           $factor = $k$0$ph << 1;
           $247 = $factor | 1;
           $248 = $247 << 2;
           $249 = (_realloc($wcs$3$ph,$248)|0);
           $250 = ($249|0)==(0|0);
           if ($250) {
            $alloc$0$lcssa387 = $alloc$0;$matches$0111$lcssa345 = $matches$0111;$wcs$3$ph$lcssa330 = $wcs$3$ph;
            label = 185;
            break L4;
           }
           $i$0$ph = $i$1$lcssa;$k$0$ph = $247;$wcs$3$ph = $249;
          }
          if ((label|0) == 91) {
           label = 0;
           $i$0$ph21 = $i$0$ph$lcssa;
           L154: while(1) {
            while(1) {
             $230 = HEAP32[$3>>2]|0;
             $231 = HEAP32[$4>>2]|0;
             $232 = ($230>>>0)<($231>>>0);
             if ($232) {
              $233 = (($230) + 1|0);
              HEAP32[$3>>2] = $233;
              $234 = HEAP8[$230>>0]|0;
              $235 = $234&255;
              $238 = $235;
             } else {
              $236 = (___shgetc($f)|0);
              $238 = $236;
             }
             $237 = (($238) + 1)|0;
             $239 = (($scanset) + ($237)|0);
             $240 = HEAP8[$239>>0]|0;
             $241 = ($240<<24>>24)==(0);
             if ($241) {
              $i$0$ph21$lcssa336 = $i$0$ph21;
              break L154;
             }
             $242 = $238&255;
             HEAP8[$0>>0] = $242;
             $243 = (_mbrtowc($wc,$0,1,$st)|0);
             if ((($243|0) == -1)) {
              $matches$0111$lcssa342 = $matches$0111;$wcs$3$ph$lcssa$lcssa = $wcs$3$ph$lcssa;
              label = 183;
              break L4;
             } else if (!((($243|0) == -2))) {
              break;
             }
            }
            $244 = HEAP32[$wc>>2]|0;
            $245 = (($i$0$ph21) + 1)|0;
            $246 = (($wcs$3$ph$lcssa) + ($i$0$ph21<<2)|0);
            HEAP32[$246>>2] = $244;
            $i$0$ph21 = $245;
           }
           $i$0$ph21$lcssa = $i$0$ph21$lcssa336;$wcs$3$ph139 = $wcs$3$ph$lcssa;
          }
          else if ((label|0) == 118) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph21$us106$lcssa;$wcs$3$ph139 = $wcs$3$ph$lcssa326;
          }
          else if ((label|0) == 120) {
           label = 0;
           $i$0$ph21$lcssa = $i$0$ph$lcssa333;$wcs$3$ph139 = 0;
          }
          $251 = (_mbsinit($st)|0);
          $252 = ($251|0)==(0);
          if ($252) {
           $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = $wcs$3$ph139;
           label = 188;
           break L4;
          } else {
           $i$4 = $i$0$ph21$lcssa;$s$3 = 0;$wcs$4 = $wcs$3$ph139;
          }
         } else {
          if ($192) {
           $253 = (_malloc($$8)|0);
           $254 = ($253|0)==(0|0);
           if ($254) {
            $alloc$0$lcssa = $alloc$0;$matches$0111$lcssa338 = $matches$0111;$s$6$ph = 0;$wcs$7$ph = 0;
            label = 188;
            break L4;
           }
           $i$2$ph = 0;$k$1$ph = $$8;$s$2$ph = $253;
           L170: while(1) {
            $i$2 = $i$2$ph;
            while(1) {
             $255 = HEAP32[$3>>2]|0;
             $256 = HEAP32[$4>>2]|0;
             $257 = ($255>>>0)<($256>>>0);
             if ($257) {
              $258 = (($255) + 1|0);
              HEAP32[$3>>2] = $258;
              $259 = HEAP8[$255>>0]|0;
              $260 = $259&255;
              $263 = $260;
             } else {
              $261 = (___shgetc($f)|0);
              $263 = $261;
             }
             $262 = (($263) + 1)|0;
             $264 = (($scanset) + ($262)|0);
             $265 = HEAP8[$264>>0]|0;
             $266 = ($265<<24>>24)==(0);
             if ($266) {
              $i$2$lcssa = $i$2;$s$2$ph$lcssa = $s$2$ph;
              break L170;
             }
             $267 = $263&255;
             $268 = (($i$2) + 1)|0;
             $269 = (($s$2$ph) + ($i$2)|0);
             HEAP8[$269>>0] = $267;
             $270 = ($268|0)==($k$1$ph|0);
             if ($270) {
              break;
             } else {
              $i$2 = $268;
             }
            }
            $factor17 = $k$1$ph << 1;
            $271 = $factor17 | 1;
            $272 = (_realloc($s$2$ph,$271)|0);
            $273 = ($272|0)==(0|0);
            if ($273) {
             $alloc$0$lcssa383 = $alloc$0;$matches$0111$lcssa341 = $matches$0111;$s$2$ph$lcssa323 = $s$2$ph;
             label = 186;
             break L4;
            } else {
             $i$2$ph$phi = $k$1$ph;$k$1$ph = $271;$s$2$ph = $272;$i$2$ph = $i$2$ph$phi;
            }
           }
           $i$4 = $i$2$lcssa;$s$3 = $s$2$ph$lcssa;$wcs$4 = 0;
           break;
          }
          $274 = ($dest$0|0)==(0|0);
          if ($274) {
           $292 = $152;
           while(1) {
            $290 = HEAP32[$3>>2]|0;
            $291 = ($290>>>0)<($292>>>0);
            if ($291) {
             $293 = (($290) + 1|0);
             HEAP32[$3>>2] = $293;
             $294 = HEAP8[$290>>0]|0;
             $295 = $294&255;
             $298 = $295;
            } else {
             $296 = (___shgetc($f)|0);
             $298 = $296;
            }
            $297 = (($298) + 1)|0;
            $299 = (($scanset) + ($297)|0);
            $300 = HEAP8[$299>>0]|0;
            $301 = ($300<<24>>24)==(0);
            if ($301) {
             break;
            }
            $$pre217 = HEAP32[$4>>2]|0;
            $292 = $$pre217;
           }
           $i$4 = 0;$s$3 = 0;$wcs$4 = 0;
           break;
          } else {
           $277 = $152;$i$3 = 0;
           while(1) {
            $275 = HEAP32[$3>>2]|0;
            $276 = ($275>>>0)<($277>>>0);
            if ($276) {
             $278 = (($275) + 1|0);
             HEAP32[$3>>2] = $278;
             $279 = HEAP8[$275>>0]|0;
             $280 = $279&255;
             $283 = $280;
            } else {
             $281 = (___shgetc($f)|0);
             $283 = $281;
            }
            $282 = (($283) + 1)|0;
            $284 = (($scanset) + ($282)|0);
            $285 = HEAP8[$284>>0]|0;
            $286 = ($285<<24>>24)==(0);
            if ($286) {
             $i$3$lcssa = $i$3;
             break;
            }
            $287 = $283&255;
            $288 = (($i$3) + 1)|0;
            $289 = (($dest$0) + ($i$3)|0);
            HEAP8[$289>>0] = $287;
            $$pre218 = HEAP32[$4>>2]|0;
            $277 = $$pre218;$i$3 = $288;
           }
           $i$4 = $i$3$lcssa;$s$3 = $dest$0;$wcs$4 = 0;
           break;
          }
         }
        } while(0);
        $302 = HEAP32[$4>>2]|0;
        $303 = ($302|0)==(0|0);
        $$pre215 = HEAP32[$3>>2]|0;
        if ($303) {
         $307 = $$pre215;
        } else {
         $304 = (($$pre215) + -1|0);
         HEAP32[$3>>2] = $304;
         $307 = $304;
        }
        $305 = HEAP32[$5>>2]|0;
        $306 = HEAP32[$6>>2]|0;
        $308 = $307;
        $309 = $306;
        $310 = (($308) - ($309))|0;
        $311 = (($310) + ($305))|0;
        $312 = ($311|0)==(0);
        if ($312) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        $$not = $156 ^ 1;
        $313 = ($311|0)==($width$1|0);
        $or$cond9 = $313 | $$not;
        if (!($or$cond9)) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$3;$wcs$9$ph = $wcs$4;
         label = 191;
         break L4;
        }
        do {
         if ($192) {
          if ($191) {
           HEAP32[$dest$0>>2] = $wcs$4;
           break;
          } else {
           HEAP32[$dest$0>>2] = $s$3;
           break;
          }
         }
        } while(0);
        if ($156) {
         $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
        } else {
         $314 = ($wcs$4|0)==(0|0);
         if (!($314)) {
          $315 = (($wcs$4) + ($i$4<<2)|0);
          HEAP32[$315>>2] = 0;
         }
         $316 = ($s$3|0)==(0|0);
         if ($316) {
          $p$10 = $p$9;$s$4 = 0;$wcs$5 = $wcs$4;
         } else {
          $317 = (($s$3) + ($i$4)|0);
          HEAP8[$317>>0] = 0;
          $p$10 = $p$9;$s$4 = $s$3;$wcs$5 = $wcs$4;
         }
        }
        break;
       }
       default: {
        $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
       }
       }
      } while(0);
      L218: do {
       if ((label|0) == 164) {
        label = 0;
        $318 = (___intscan($f,$base$0,0,-1,-1)|0);
        $319 = tempRet0;
        $320 = HEAP32[$5>>2]|0;
        $321 = HEAP32[$3>>2]|0;
        $322 = HEAP32[$6>>2]|0;
        $323 = $321;
        $324 = $322;
        $325 = (($324) - ($323))|0;
        $326 = ($320|0)==($325|0);
        if ($326) {
         $alloc$0$lcssa381 = $alloc$0;$matches$0111$lcssa339 = $matches$0111;$s$8$ph = $s$1;$wcs$9$ph = $wcs$1;
         label = 191;
         break L4;
        }
        $327 = ($$|0)==(112);
        $328 = ($dest$0|0)!=(0|0);
        $or$cond3 = $328 & $327;
        if ($or$cond3) {
         $329 = $318;
         HEAP32[$dest$0>>2] = $329;
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
         break;
        }
        $330 = ($dest$0|0)==(0|0);
        if ($330) {
         $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
        } else {
         switch ($$size$0|0) {
         case -2:  {
          $331 = $318&255;
          HEAP8[$dest$0>>0] = $331;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case -1:  {
          $332 = $318&65535;
          HEAP16[$dest$0>>1] = $332;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $318;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         case 3:  {
          $333 = $dest$0;
          $334 = $333;
          HEAP32[$334>>2] = $318;
          $335 = (($333) + 4)|0;
          $336 = $335;
          HEAP32[$336>>2] = $319;
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
          break;
         }
         default: {
          $p$10 = $p$5;$s$4 = $s$1;$wcs$5 = $wcs$1;
          break L218;
         }
         }
        }
       }
      } while(0);
      $347 = HEAP32[$5>>2]|0;
      $348 = HEAP32[$3>>2]|0;
      $349 = HEAP32[$6>>2]|0;
      $350 = $348;
      $351 = $349;
      $352 = (($347) + ($pos$1))|0;
      $353 = (($352) + ($350))|0;
      $354 = (($353) - ($351))|0;
      $not$ = ($dest$0|0)!=(0|0);
      $355 = $not$&1;
      $matches$0$ = (($355) + ($matches$0111))|0;
      $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $354;$s$5 = $s$4;$wcs$6 = $wcs$5;
      break L6;
     }
    } while(0);
    $46 = $43&1;
    $47 = (($p$0117) + ($46)|0);
    ___shlim($f,0);
    $48 = HEAP32[$3>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ($48>>>0)<($49>>>0);
    if ($50) {
     $51 = (($48) + 1|0);
     HEAP32[$3>>2] = $51;
     $52 = HEAP8[$48>>0]|0;
     $53 = $52&255;
     $57 = $53;
    } else {
     $54 = (___shgetc($f)|0);
     $57 = $54;
    }
    $55 = HEAP8[$47>>0]|0;
    $56 = $55&255;
    $58 = ($57|0)==($56|0);
    if (!($58)) {
     $$lcssa366 = $57;$matches$0111$lcssa = $matches$0111;$s$0109$lcssa = $s$0109;$wcs$0110$lcssa = $wcs$0110;
     label = 20;
     break L4;
    }
    $65 = (($pos$0116) + 1)|0;
    $matches$1 = $matches$0111;$p$11 = $47;$pos$2 = $65;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   } else {
    $p$1 = $p$0117;
    while(1) {
     $16 = (($p$1) + 1|0);
     $17 = HEAP8[$16>>0]|0;
     $18 = $17&255;
     $19 = (_isspace($18)|0);
     $20 = ($19|0)==(0);
     if ($20) {
      $p$1$lcssa = $p$1;
      break;
     } else {
      $p$1 = $16;
     }
    }
    ___shlim($f,0);
    while(1) {
     $21 = HEAP32[$3>>2]|0;
     $22 = HEAP32[$4>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = (($21) + 1|0);
      HEAP32[$3>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $28 = $26;
     } else {
      $27 = (___shgetc($f)|0);
      $28 = $27;
     }
     $29 = (_isspace($28)|0);
     $30 = ($29|0)==(0);
     if ($30) {
      break;
     }
    }
    $31 = HEAP32[$4>>2]|0;
    $32 = ($31|0)==(0|0);
    $$pre220 = HEAP32[$3>>2]|0;
    if ($32) {
     $36 = $$pre220;
    } else {
     $33 = (($$pre220) + -1|0);
     HEAP32[$3>>2] = $33;
     $36 = $33;
    }
    $34 = HEAP32[$5>>2]|0;
    $35 = HEAP32[$6>>2]|0;
    $37 = $36;
    $38 = $35;
    $39 = (($34) + ($pos$0116))|0;
    $40 = (($39) + ($37))|0;
    $41 = (($40) - ($38))|0;
    $matches$1 = $matches$0111;$p$11 = $p$1$lcssa;$pos$2 = $41;$s$5 = $s$0109;$wcs$6 = $wcs$0110;
   }
  } while(0);
  $356 = (($p$11) + 1|0);
  $357 = HEAP8[$356>>0]|0;
  $358 = ($357<<24>>24)==(0);
  if ($358) {
   $matches$1$lcssa = $matches$1;
   label = 194;
   break;
  } else {
   $13 = $357;$matches$0111 = $matches$1;$p$0117 = $356;$pos$0116 = $pos$2;$s$0109 = $s$5;$wcs$0110 = $wcs$6;
  }
 }
 switch (label|0) {
  case 20: {
   $59 = HEAP32[$4>>2]|0;
   $60 = ($59|0)==(0|0);
   if (!($60)) {
    $61 = HEAP32[$3>>2]|0;
    $62 = (($61) + -1|0);
    HEAP32[$3>>2] = $62;
   }
   $63 = ($$lcssa366|0)>(-1);
   $64 = ($matches$0111$lcssa|0)!=(0);
   $or$cond5 = $64 | $63;
   if ($or$cond5) {
    $matches$3 = $matches$0111$lcssa;
    STACKTOP = sp;return ($matches$3|0);
   } else {
    $alloc$1 = 0;$s$7 = $s$0109$lcssa;$wcs$8 = $wcs$0110$lcssa;
    label = 190;
   }
   break;
  }
  case 182: {
   $alloc$0204 = $alloc$0$lcssa385;$matches$0111347 = $matches$0111$lcssa343;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa327;
   label = 189;
   break;
  }
  case 183: {
   $alloc$0204 = 0;$matches$0111347 = $matches$0111$lcssa342;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa$lcssa;
   label = 189;
   break;
  }
  case 184: {
   $alloc$0204 = $alloc$0$lcssa386;$matches$0111347 = $matches$0111$lcssa344;$s$6 = 0;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 185: {
   $alloc$0204 = $alloc$0$lcssa387;$matches$0111347 = $matches$0111$lcssa345;$s$6 = 0;$wcs$7 = $wcs$3$ph$lcssa330;
   label = 189;
   break;
  }
  case 186: {
   $alloc$0204 = $alloc$0$lcssa383;$matches$0111347 = $matches$0111$lcssa341;$s$6 = $s$2$ph$lcssa323;$wcs$7 = 0;
   label = 189;
   break;
  }
  case 187: {
   $alloc$0204 = $alloc$0$lcssa382;$matches$0111347 = $matches$0111$lcssa340;$s$6 = $s$1$lcssa368;$wcs$7 = $wcs$1$lcssa375;
   label = 189;
   break;
  }
  case 188: {
   $alloc$0204 = $alloc$0$lcssa;$matches$0111347 = $matches$0111$lcssa338;$s$6 = $s$6$ph;$wcs$7 = $wcs$7$ph;
   label = 189;
   break;
  }
  case 191: {
   $alloc$2 = $alloc$0$lcssa381;$matches$2 = $matches$0111$lcssa339;$s$8 = $s$8$ph;$wcs$9 = $wcs$9$ph;
   break;
  }
  case 194: {
   $matches$3 = $matches$1$lcssa;
   STACKTOP = sp;return ($matches$3|0);
   break;
  }
 }
 if ((label|0) == 189) {
  $$old4 = ($matches$0111347|0)==(0);
  if ($$old4) {
   $alloc$1 = $alloc$0204;$s$7 = $s$6;$wcs$8 = $wcs$7;
   label = 190;
  } else {
   $alloc$2 = $alloc$0204;$matches$2 = $matches$0111347;$s$8 = $s$6;$wcs$9 = $wcs$7;
  }
 }
 if ((label|0) == 190) {
  $alloc$2 = $alloc$1;$matches$2 = -1;$s$8 = $s$7;$wcs$9 = $wcs$8;
 }
 $359 = ($alloc$2|0)==(0);
 if ($359) {
  $matches$3 = $matches$2;
  STACKTOP = sp;return ($matches$3|0);
 }
 _free($s$8);
 _free($wcs$9);
 $matches$3 = $matches$2;
 STACKTOP = sp;return ($matches$3|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f) + 32|0);
 HEAP32[$0>>2] = 444;
 $1 = (($f) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = (($f) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = (($f) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_MUSL_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$014 = $n;$$023 = $s;$$05 = $d;
 while(1) {
  $1 = (($$014) + -1)|0;
  $2 = (($$023) + 4|0);
  $3 = HEAP32[$$023>>2]|0;
  $4 = (($$05) + 4|0);
  HEAP32[$$05>>2] = $3;
  $5 = ($1|0)==(0);
  if ($5) {
   break;
  } else {
   $$014 = $1;$$023 = $2;$$05 = $4;
  }
 }
 return ($d|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   return ($d|0);
  }
  $$in = $n;
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  return ($d|0);
 } else {
  if ($5) {
   return ($d|0);
  }
  $$025 = $s;$$07 = $d;$$16 = $n;
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = (($$025) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = (($$07) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  return ($d|0);
 }
 return (0)|0;
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  return ($d|0);
 }
 $$012 = $n;$$03 = $d;
 while(1) {
  $1 = (($$012) + -1)|0;
  $2 = (($$03) + 4|0);
  HEAP32[$$03>>2] = $c;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012 = $1;$$03 = $2;
  }
 }
 return ($d|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((1960|0),(445|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[1952>>2]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(1968,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 while(1) {
  $1 = (_malloc($$size)|0);
  $2 = ($1|0)==(0|0);
  if (!($2)) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = (__ZSt15get_new_handlerv()|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 1023]();
 }
 if ((label|0) == 5) {
  $5 = (___cxa_allocate_exception(4)|0);
  HEAP32[$5>>2] = ((2136 + 8|0));
  ___cxa_throw(($5|0),(2192|0),(56|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($$lcssa|0);
 }
 return (0)|0;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2136 + 8|0));
 return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2160|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($func|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  invoke_vii(446,(2208|0),($vararg_buffer|0));
  $2 = __THREW__; __THREW__ = 0;
  $3 = $2&1;
  if (!($3)) {
   // unreachable;
  }
 }
 $4 = ___cxa_find_matching_catch(0|0)|0;
 $5 = tempRet0;
 (___cxa_begin_catch(($4|0))|0);
 __THREW__ = 0;
 invoke_vii(446,(2248|0),($vararg_buffer1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  // unreachable;
 }
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 __THREW__ = 0;
 invoke_v(420);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $12 = ___cxa_find_matching_catch(0|0)|0;
  $13 = tempRet0;
  ___clang_call_terminate($12);
  // unreachable;
 } else {
  ___clang_call_terminate($8);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(447)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $21 = ___cxa_find_matching_catch(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = (($4) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = (($4) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = HEAP32[444]|0;HEAP32[444] = (($19+0)|0);
 $20 = $19;
 __ZSt11__terminatePFvvE($20);
 // unreachable;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2304>>2]|0;HEAP32[2304>>2] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2336 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2360 + 8|0));
 $0 = (($this) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2584 + 8|0));
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2608|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$1 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2720,2776,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$1 = 0;
   } else {
    dest=$info+0|0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = (($info) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = (($info) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = (($info) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = (($7) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 127]($2,$info,$10,1);
    $11 = (($info) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = (($info) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$1 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = (($info) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = (($info) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = (($info) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = (($info) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = (($info) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = (($info) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 127]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 127]($8,$info,$12,$15);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = (($this) + 16|0);
  $4 = (($this) + 12|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($this) + ($5<<3)|0) + 16|0);
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
  $7 = ($5|0)>(1);
  if ($7) {
   $8 = (($this) + 24|0);
   $9 = (($info) + 54|0);
   $p$0 = $8;
   while(1) {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     break;
    }
    $12 = (($p$0) + 8|0);
    $13 = ($12>>>0)<($6>>>0);
    if ($13) {
     $p$0 = $12;
    } else {
     break;
    }
   }
  }
 }
 return;
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = (($0) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = (($0) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = (($info) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = (($info) + 8|0);
 HEAP32[$8>>2] = $static_type;
 $9 = (($info) + 12|0);
 HEAP32[$9>>2] = $src2dst_offset;
 $10 = (($info) + 16|0);
 $11 = (($info) + 20|0);
 $12 = (($info) + 24|0);
 $13 = (($info) + 28|0);
 $14 = (($info) + 32|0);
 $15 = (($info) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$10+0|0; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$10+36>>1]=0|0;HEAP8[$10+38>>0]=0|0;
 do {
  if ($16) {
   $17 = (($info) + 48|0);
   HEAP32[$17>>2] = 1;
   $18 = HEAP32[$dst_type>>2]|0;
   $19 = (($18) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_viiiiii[$20 & 511]($dst_type,$info,$4,$4,1,0);
   $21 = HEAP32[$12>>2]|0;
   $22 = ($21|0)==(1);
   $$ = $22 ? $4 : 0;
   $dst_ptr$0 = $$;
  } else {
   $23 = (($info) + 36|0);
   $24 = HEAP32[$6>>2]|0;
   $25 = (($24) + 24|0);
   $26 = HEAP32[$25>>2]|0;
   FUNCTION_TABLE_viiiii[$26 & 127]($6,$info,$4,1,0);
   $27 = HEAP32[$23>>2]|0;
   if ((($27|0) == 0)) {
    $28 = HEAP32[$15>>2]|0;
    $29 = ($28|0)==(1);
    $30 = HEAP32[$13>>2]|0;
    $31 = ($30|0)==(1);
    $or$cond = $29 & $31;
    $32 = HEAP32[$14>>2]|0;
    $33 = ($32|0)==(1);
    $or$cond3 = $or$cond & $33;
    $34 = HEAP32[$11>>2]|0;
    $$8 = $or$cond3 ? $34 : 0;
    $dst_ptr$0 = $$8;
    break;
   } else if (!((($27|0) == 1))) {
    $dst_ptr$0 = 0;
    break;
   }
   $35 = HEAP32[$12>>2]|0;
   $36 = ($35|0)==(1);
   if (!($36)) {
    $37 = HEAP32[$15>>2]|0;
    $38 = ($37|0)==(0);
    $39 = HEAP32[$13>>2]|0;
    $40 = ($39|0)==(1);
    $or$cond5 = $38 & $40;
    $41 = HEAP32[$14>>2]|0;
    $42 = ($41|0)==(1);
    $or$cond7 = $or$cond5 & $42;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $43 = HEAP32[$10>>2]|0;
   $dst_ptr$0 = $43;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = (($info) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = (($info) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = (($info) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = (($info) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = (($info) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = (($info) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = (($info) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = (($info) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = (($info) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = (($info) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = (($info) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = (($info) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0;
 var $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $56 = (($this) + 16|0);
    $57 = (($this) + 12|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ((($this) + ($58<<3)|0) + 16|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($56,$info,$current_ptr,$path_below,$use_strcmp);
    $60 = (($this) + 24|0);
    $61 = ($58|0)>(1);
    if (!($61)) {
     break;
    }
    $62 = (($this) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = $63 & 2;
    $65 = ($64|0)==(0);
    if ($65) {
     $66 = (($info) + 36|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ($67|0)==(1);
     if (!($68)) {
      $74 = $63 & 1;
      $75 = ($74|0)==(0);
      if ($75) {
       $78 = (($info) + 54|0);
       $p2$2 = $60;
       while(1) {
        $87 = HEAP8[$78>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if (!($88)) {
         break;
        }
        $89 = HEAP32[$66>>2]|0;
        $90 = ($89|0)==(1);
        if ($90) {
         break;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $91 = (($p2$2) + 8|0);
        $92 = ($91>>>0)<($59>>>0);
        if ($92) {
         $p2$2 = $91;
        } else {
         break;
        }
       }
       break;
      }
      $76 = (($info) + 24|0);
      $77 = (($info) + 54|0);
      $p2$1 = $60;
      while(1) {
       $79 = HEAP8[$77>>0]|0;
       $80 = ($79<<24>>24)==(0);
       if (!($80)) {
        break;
       }
       $81 = HEAP32[$66>>2]|0;
       $82 = ($81|0)==(1);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ($83|0)==(1);
        if ($84) {
         break;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $85 = (($p2$1) + 8|0);
       $86 = ($85>>>0)<($59>>>0);
       if ($86) {
        $p2$1 = $85;
       } else {
        break;
       }
      }
      break;
     }
    }
    $69 = (($info) + 54|0);
    $p2$0 = $60;
    while(1) {
     $70 = HEAP8[$69>>0]|0;
     $71 = ($70<<24>>24)==(0);
     if (!($71)) {
      break;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $72 = (($p2$0) + 8|0);
     $73 = ($72>>>0)<($59>>>0);
     if ($73) {
      $p2$0 = $72;
     } else {
      break;
     }
    }
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($this) + 16|0);
     $24 = (($this) + 12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($this) + ($25<<3)|0) + 16|0);
     $27 = (($info) + 52|0);
     $28 = (($info) + 53|0);
     $29 = (($info) + 54|0);
     $30 = (($this) + 8|0);
     $31 = (($info) + 24|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type$0$off0 = 0;$p$0 = $23;
     L34: while(1) {
      $32 = ($p$0>>>0)<($26>>>0);
      if (!($32)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      HEAP8[$27>>0] = 0;
      HEAP8[$28>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $33 = HEAP8[$29>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      $35 = HEAP8[$28>>0]|0;
      $36 = ($35<<24>>24)==(0);
      do {
       if ($36) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
       } else {
        $37 = HEAP8[$27>>0]|0;
        $38 = ($37<<24>>24)==(0);
        if ($38) {
         $44 = HEAP32[$30>>2]|0;
         $45 = $44 & 1;
         $46 = ($45|0)==(0);
         if ($46) {
          $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = 1;
          label = 20;
          break L34;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = 1;
          break;
         }
        }
        $39 = HEAP32[$31>>2]|0;
        $40 = ($39|0)==(1);
        if ($40) {
         label = 25;
         break L34;
        }
        $41 = HEAP32[$30>>2]|0;
        $42 = $41 & 2;
        $43 = ($42|0)==(0);
        if ($43) {
         label = 25;
         break L34;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
        }
       }
      } while(0);
      $47 = (($p$0) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;$p$0 = $47;
     }
     do {
      if ((label|0) == 20) {
       if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
        label = 24;
       } else {
        HEAP32[$14>>2] = $current_ptr;
        $48 = (($info) + 40|0);
        $49 = HEAP32[$48>>2]|0;
        $50 = (($49) + 1)|0;
        HEAP32[$48>>2] = $50;
        $51 = (($info) + 36|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = ($52|0)==(1);
        if ($53) {
         $54 = HEAP32[$31>>2]|0;
         $55 = ($54|0)==(2);
         if ($55) {
          HEAP8[$29>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           break;
          }
         } else {
          label = 24;
         }
        } else {
         label = 24;
        }
       }
       if ((label|0) == 24) {
        if ($is_dst_type_derived_from_static_type$2$off0) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
      else if ((label|0) == 25) {
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 511]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 127]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $43 = (($this) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 127]($44,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = (($info) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = (($info) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = (($info) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = (($info) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = (($info) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = (($info) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 511]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off01 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off01 = 1;
       label = 13;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = (($info) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = (($info) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = (($info) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = (($info) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off01) {
          break;
         }
        } else {
         label = 16;
        }
       } else {
        label = 16;
       }
       if ((label|0) == 16) {
        if ($is_dst_type_derived_from_static_type$0$off01) {
         break;
        }
       }
       HEAP32[$20>>2] = 4;
       break L1;
      }
     } while(0);
     HEAP32[$20>>2] = 3;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = (($info) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = (($info) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = (($info) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = (($info) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = (($info) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = (($info) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = (($info) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = (($info) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = (($info) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = (($info) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = (($info) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = (($info) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($info) + 52|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = (($info) + 53|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = (($this) + 16|0);
  $8 = (($this) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($this) + ($9<<3)|0) + 16|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$5>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $11 = ($9|0)>(1);
  if ($11) {
   $12 = (($this) + 24|0);
   $13 = (($info) + 24|0);
   $14 = (($this) + 8|0);
   $15 = (($info) + 54|0);
   $p$0 = $12;
   while(1) {
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==(0);
    if (!($17)) {
     break;
    }
    $18 = HEAP8[$3>>0]|0;
    $19 = ($18<<24>>24)==(0);
    if ($19) {
     $25 = HEAP8[$5>>0]|0;
     $26 = ($25<<24>>24)==(0);
     if (!($26)) {
      $27 = HEAP32[$14>>2]|0;
      $28 = $27 & 1;
      $29 = ($28|0)==(0);
      if ($29) {
       break;
      }
     }
    } else {
     $20 = HEAP32[$13>>2]|0;
     $21 = ($20|0)==(1);
     if ($21) {
      break;
     }
     $22 = HEAP32[$14>>2]|0;
     $23 = $22 & 2;
     $24 = ($23|0)==(0);
     if ($24) {
      break;
     }
    }
    HEAP8[$3>>0] = 0;
    HEAP8[$5>>0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
    $30 = (($p$0) + 8|0);
    $31 = ($30>>>0)<($10>>>0);
    if ($31) {
     $p$0 = $30;
    } else {
     break;
    }
   }
  }
  HEAP8[$3>>0] = $4;
  HEAP8[$5>>0] = $6;
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 511]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = (($1) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2720,2888,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(2192|0),(56|0));
 // unreachable;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = (($2) + 80|0);
   $5 = (($2) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    HEAP32[$vararg_buffer7>>2] = 1784;
    _abort_message(1896,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = (($2) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = (($22) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[2328>>2]|0;
   $26 = (($25) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](2328,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = (($30) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = 1784;
    $vararg_ptr1 = (($vararg_buffer) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = (($vararg_buffer) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $33;
    _abort_message(1800,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 1784;
    $vararg_ptr6 = (($vararg_buffer3) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(1848,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(1936,$vararg_buffer10);
 // unreachable;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((1952|0),(448|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2024,$vararg_buffer);
  // unreachable;
 }
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[1952>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(2080,$vararg_buffer);
  // unreachable;
 }
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0;
 var $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre108 = 0, $$pre58$i$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i12$i = 0, $$sum$i13$i = 0, $$sum$i16$i = 0, $$sum$i19$i = 0, $$sum$i2337 = 0;
 var $$sum$i32 = 0, $$sum$i38 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum110$i = 0, $$sum111$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0;
 var $$sum116$i = 0, $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum14$pre$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i15$i = 0, $$sum2$i17$i = 0, $$sum2$i21$i = 0, $$sum2$pre$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum26$pre$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0;
 var $$sum3$i = 0, $$sum3$i27 = 0, $$sum3$pre$i$i = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0;
 var $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum8$pre = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0;
 var $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0;
 var $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i26$i = 0;
 var $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond24$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond55$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0;
 var $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0;
 var $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   if ($1) {
    $5 = 16;
   } else {
    $2 = (($bytes) + 11)|0;
    $3 = $2 & -8;
    $5 = $3;
   }
   $4 = $5 >>> 3;
   $6 = HEAP32[3136>>2]|0;
   $7 = $6 >>> $4;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($4))|0;
    $13 = $12 << 1;
    $14 = ((3136 + ($13<<2)|0) + 40|0);
    $$sum10 = (($13) + 2)|0;
    $15 = ((3136 + ($$sum10<<2)|0) + 40|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($16) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[3136>>2] = $22;
     } else {
      $23 = HEAP32[((3136 + 16|0))>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = (($18) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = (($16) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[((3136 + 8|0))>>2]|0;
   $35 = ($5>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $4;
     $38 = 2 << $4;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = ((3136 + ($65<<2)|0) + 40|0);
     $$sum4 = (($65) + 2)|0;
     $67 = ((3136 + ($$sum4<<2)|0) + 40|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[3136>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[((3136 + 16|0))>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = (($70) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[((3136 + 8|0))>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($5))|0;
     $82 = $5 | 3;
     $83 = (($68) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($5)|0);
     $85 = $81 | 1;
     $$sum56 = $5 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[((3136 + 20|0))>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = ((3136 + ($92<<2)|0) + 40|0);
      $94 = HEAP32[3136>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[3136>>2] = $98;
       $$sum8$pre = (($92) + 2)|0;
       $$pre108 = ((3136 + ($$sum8$pre<<2)|0) + 40|0);
       $$pre$phiZ2D = $$pre108;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = ((3136 + ($$sum9<<2)|0) + 40|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[((3136 + 16|0))>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = (($F4$0) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = (($90) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = (($90) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[((3136 + 8|0))>>2] = $81;
     HEAP32[((3136 + 20|0))>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[((3136 + 4|0))>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $5;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = ((3136 + ($130<<2)|0) + 304|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (($132) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($5))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = (($t$0$i) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = (($t$0$i) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = (($144) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($5))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[((3136 + 16|0))>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($5)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = (($v$0$i$lcssa) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (($v$0$i$lcssa) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = (($v$0$i$lcssa) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = (($v$0$i$lcssa) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i$ph = $171;$RP$0$i$ph = $170;
        }
       } else {
        $R$0$i$ph = $168;$RP$0$i$ph = $167;
       }
       $R$0$i = $R$0$i$ph;$RP$0$i = $RP$0$i$ph;
       while(1) {
        $173 = (($R$0$i) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if ($175) {
         $176 = (($R$0$i) + 16|0);
         $177 = HEAP32[$176>>2]|0;
         $178 = ($177|0)==(0|0);
         if ($178) {
          $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
          break;
         } else {
          $R$0$i$be = $177;$RP$0$i$be = $176;
         }
        } else {
         $R$0$i$be = $174;$RP$0$i$be = $173;
        }
        $R$0$i = $R$0$i$be;$RP$0$i = $RP$0$i$be;
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = (($v$0$i$lcssa) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = (($159) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = (($156) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = (($v$0$i$lcssa) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ((3136 + ($182<<2)|0) + 304|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[((3136 + 4|0))>>2]|0;
         $189 = $188 & $187;
         HEAP32[((3136 + 4|0))>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[((3136 + 16|0))>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = (($154) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = (($154) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[((3136 + 16|0))>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = (($R$1$i) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = (($v$0$i$lcssa) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = (($R$1$i) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = (($201) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = (($v$0$i$lcssa) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[((3136 + 16|0))>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = (($R$1$i) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = (($207) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($5))|0;
      $215 = $214 | 3;
      $216 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $5 | 3;
      $221 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i38 = $5 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i38)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($5))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[((3136 + 8|0))>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[((3136 + 20|0))>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = ((3136 + ($229<<2)|0) + 40|0);
       $231 = HEAP32[3136>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[3136>>2] = $235;
        $$sum2$pre$i = (($229) + 2)|0;
        $$pre$i = ((3136 + ($$sum2$pre$i<<2)|0) + 40|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = ((3136 + ($$sum3$i<<2)|0) + 40|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[((3136 + 16|0))>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = (($F1$0$i) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = (($227) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = (($227) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[((3136 + 8|0))>>2] = $rsize$0$i$lcssa;
      HEAP32[((3136 + 20|0))>>2] = $151;
     }
     $243 = (($v$0$i$lcssa) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $5;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[((3136 + 4|0))>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = ((3136 + ($idx$0$i<<2)|0) + 304|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 93;
      } else {
       $278 = ($idx$0$i|0)==(31);
       if ($278) {
        $282 = 0;
       } else {
        $279 = $idx$0$i >>> 1;
        $280 = (25 - ($279))|0;
        $282 = $280;
       }
       $281 = $246 << $282;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $281;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = (($t$0$i14) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $$lcssa174 = $286;$t$0$i14$lcssa = $t$0$i14;
          label = 97;
          break;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = (($t$0$i14) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ((($t$0$i14) + ($291<<2)|0) + 16|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$1$i$lcssa = $rsize$1$i;$rst$1$i$lcssa = $rst$1$i;$v$1$i$lcssa = $v$1$i;
         label = 92;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
       if ((label|0) == 92) {
        $rsize$2$i = $rsize$1$i$lcssa;$t$1$i = $rst$1$i$lcssa;$v$2$i = $v$1$i$lcssa;
        label = 93;
        break;
       }
       else if ((label|0) == 97) {
        $rsize$331$i$ph = $$lcssa174;$t$230$i$ph = $t$0$i14$lcssa;$v$332$i$ph = $t$0$i14$lcssa;
        label = 98;
        break;
       }
      }
     } while(0);
     if ((label|0) == 93) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = ((3136 + ($327<<2)|0) + 304|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;
      } else {
       $t$2$ph$i = $t$1$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$2$i;
      } else {
       $rsize$331$i$ph = $rsize$2$i;$t$230$i$ph = $t$2$ph$i;$v$332$i$ph = $v$2$i;
       label = 98;
      }
     }
     if ((label|0) == 98) {
      $rsize$331$i = $rsize$331$i$ph;$t$230$i = $t$230$i$ph;$v$332$i = $v$332$i$ph;
      while(1) {
       $331 = (($t$230$i) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = (($t$230$i) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if ($338) {
        $339 = (($t$230$i) + 20|0);
        $340 = HEAP32[$339>>2]|0;
        $341 = ($340|0)==(0|0);
        if ($341) {
         $$rsize$3$i$lcssa = $$rsize$3$i;$t$2$v$3$i$lcssa = $t$2$v$3$i;
         break;
        } else {
         $t$230$i$be = $340;
        }
       } else {
        $t$230$i$be = $337;
       }
       $rsize$331$i = $$rsize$3$i;$t$230$i = $t$230$i$be;$v$332$i = $t$2$v$3$i;
      }
      $rsize$3$lcssa$i = $$rsize$3$i$lcssa;$v$3$lcssa$i = $t$2$v$3$i$lcssa;
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[((3136 + 8|0))>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[((3136 + 16|0))>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = (($v$3$lcssa$i) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = (($v$3$lcssa$i) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = (($v$3$lcssa$i) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = (($v$3$lcssa$i) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18$ph = $368;$RP$0$i17$ph = $367;
          }
         } else {
          $R$0$i18$ph = $365;$RP$0$i17$ph = $364;
         }
         $R$0$i18 = $R$0$i18$ph;$RP$0$i17 = $RP$0$i17$ph;
         while(1) {
          $370 = (($R$0$i18) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if ($372) {
           $373 = (($R$0$i18) + 16|0);
           $374 = HEAP32[$373>>2]|0;
           $375 = ($374|0)==(0|0);
           if ($375) {
            $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
            break;
           } else {
            $R$0$i18$be = $374;$RP$0$i17$be = $373;
           }
          } else {
           $R$0$i18$be = $371;$RP$0$i17$be = $370;
          }
          $R$0$i18 = $R$0$i18$be;$RP$0$i17 = $RP$0$i17$be;
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = (($v$3$lcssa$i) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = (($356) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = (($353) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = (($v$3$lcssa$i) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = ((3136 + ($379<<2)|0) + 304|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[((3136 + 4|0))>>2]|0;
           $386 = $385 & $384;
           HEAP32[((3136 + 4|0))>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[((3136 + 16|0))>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = (($351) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = (($351) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[((3136 + 16|0))>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = (($R$1$i20) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = (($v$3$lcssa$i) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = (($R$1$i20) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = (($398) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = (($v$3$lcssa$i) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[((3136 + 16|0))>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = (($R$1$i20) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = (($404) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L218: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2337 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2337)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = ((3136 + ($424<<2)|0) + 40|0);
          $426 = HEAP32[3136>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[3136>>2] = $430;
           $$sum14$pre$i = (($424) + 2)|0;
           $$pre$i25 = ((3136 + ($$sum14$pre$i<<2)|0) + 40|0);
           $$pre$phi$i26Z2D = $$pre$i25;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = ((3136 + ($$sum17$i<<2)|0) + 40|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[((3136 + 16|0))>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = (($F5$0$i) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = ((3136 + ($I7$0$i<<2)|0) + 304|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[((3136 + 4|0))>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[((3136 + 4|0))>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ($I7$0$i|0)==(31);
         if ($476) {
          $484 = 0;
         } else {
          $477 = $I7$0$i >>> 1;
          $478 = (25 - ($477))|0;
          $484 = $478;
         }
         $479 = (($475) + 4|0);
         $480 = HEAP32[$479>>2]|0;
         $481 = $480 & -8;
         $482 = ($481|0)==($rsize$3$lcssa$i|0);
         do {
          if ($482) {
           $T$0$lcssa$i = $475;
          } else {
           $483 = $rsize$3$lcssa$i << $484;
           $K12$029$i = $483;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = ((($T$028$i) + ($491<<2)|0) + 16|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa169 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = (($487) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $$lcssa172 = $487;
             label = 164;
             break;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           if ((label|0) == 164) {
            $T$0$lcssa$i = $$lcssa172;
            break;
           }
           $494 = HEAP32[((3136 + 16|0))>>2]|0;
           $495 = ($$lcssa169>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa169>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L218;
           }
          }
         } while(0);
         $499 = (($T$0$lcssa$i) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[((3136 + 16|0))>>2]|0;
         $502 = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = ($500>>>0)>=($501>>>0);
         $or$cond24$i = $502 & $503;
         if ($or$cond24$i) {
          $504 = (($500) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = (($v$3$lcssa$i) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[((3136 + 8|0))>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[((3136 + 20|0))>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[((3136 + 20|0))>>2] = $514;
   HEAP32[((3136 + 8|0))>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = (($512) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[((3136 + 8|0))>>2] = 0;
   HEAP32[((3136 + 20|0))>>2] = 0;
   $520 = $509 | 3;
   $521 = (($512) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = (($512) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[((3136 + 12|0))>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[((3136 + 12|0))>>2] = $528;
  $529 = HEAP32[((3136 + 24|0))>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[((3136 + 24|0))>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = (($529) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = (($529) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[3608>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[((3608 + 8|0))>>2] = $538;
    HEAP32[((3608 + 4|0))>>2] = $538;
    HEAP32[((3608 + 12|0))>>2] = -1;
    HEAP32[((3608 + 16|0))>>2] = -1;
    HEAP32[((3608 + 20|0))>>2] = 0;
    HEAP32[((3136 + 444|0))>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[3608>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[((3608 + 8|0))>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[((3136 + 440|0))>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[((3136 + 432|0))>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[((3136 + 444|0))>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L282: do {
  if ($560) {
   $561 = HEAP32[((3136 + 24|0))>>2]|0;
   $562 = ($561|0)==(0|0);
   do {
    if ($562) {
     label = 191;
    } else {
     $sp$0$i$i = ((3136 + 448|0));
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = (($sp$0$i$i) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa165 = $sp$0$i$i;$$lcssa167 = $565;
        break;
       }
      }
      $569 = (($sp$0$i$i) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 190;
       break;
      } else {
       $sp$0$i$i = $570;
      }
     }
     if ((label|0) == 190) {
      label = 191;
      break;
     }
     $594 = HEAP32[((3136 + 12|0))>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa165>>2]|0;
      $600 = HEAP32[$$lcssa167>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0313843$i = $596;
       } else {
        $tbase$253$i = $598;$tsize$252$i = $596;
        label = 211;
        break L282;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;
       label = 201;
      }
     } else {
      $tsize$0313843$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 191) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0313843$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[((3608 + 4|0))>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[((3136 + 432|0))>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[((3136 + 440|0))>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0313843$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       if ($593) {
        $tbase$253$i = $572;$tsize$252$i = $ssize$0$i;
        label = 211;
        break L282;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;
        label = 201;
       }
      } else {
       $tsize$0313843$i = 0;
      }
     }
    }
   } while(0);
   L306: do {
    if ((label|0) == 201) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond4$i = $607 & $or$cond5$i;
     do {
      if ($or$cond4$i) {
       $608 = HEAP32[((3608 + 8|0))>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0313843$i = 0;
         break L306;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0313843$i = 0;
     } else {
      $tbase$253$i = $br$0$ph$i;$tsize$252$i = $ssize$2$i;
      label = 211;
      break L282;
     }
    }
   } while(0);
   $618 = HEAP32[((3136 + 444|0))>>2]|0;
   $619 = $618 | 4;
   HEAP32[((3136 + 444|0))>>2] = $619;
   $tsize$1$i = $tsize$0313843$i;
   label = 208;
  } else {
   $tsize$1$i = 0;
   label = 208;
  }
 } while(0);
 if ((label|0) == 208) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond6$i = $625 & $or$cond3$i;
   if ($or$cond6$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$253$i = $621;$tsize$252$i = $$tsize$1$i;
     label = 211;
    }
   }
  }
 }
 if ((label|0) == 211) {
  $631 = HEAP32[((3136 + 432|0))>>2]|0;
  $632 = (($631) + ($tsize$252$i))|0;
  HEAP32[((3136 + 432|0))>>2] = $632;
  $633 = HEAP32[((3136 + 436|0))>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[((3136 + 436|0))>>2] = $632;
  }
  $635 = HEAP32[((3136 + 24|0))>>2]|0;
  $636 = ($635|0)==(0|0);
  L325: do {
   if ($636) {
    $637 = HEAP32[((3136 + 16|0))>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$253$i>>>0)<($637>>>0);
    $or$cond8$i = $638 | $639;
    if ($or$cond8$i) {
     HEAP32[((3136 + 16|0))>>2] = $tbase$253$i;
    }
    HEAP32[((3136 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3136 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3136 + 460|0))>>2] = 0;
    $640 = HEAP32[3608>>2]|0;
    HEAP32[((3136 + 36|0))>>2] = $640;
    HEAP32[((3136 + 32|0))>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = ((3136 + ($641<<2)|0) + 40|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = ((3136 + ($$sum$i$i<<2)|0) + 40|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = ((3136 + ($$sum1$i$i<<2)|0) + 40|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$252$i) + -40)|0;
    $647 = (($tbase$253$i) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    if ($650) {
     $654 = 0;
    } else {
     $651 = (0 - ($648))|0;
     $652 = $651 & 7;
     $654 = $652;
    }
    $653 = (($tbase$253$i) + ($654)|0);
    $655 = (($646) - ($654))|0;
    HEAP32[((3136 + 24|0))>>2] = $653;
    HEAP32[((3136 + 12|0))>>2] = $655;
    $656 = $655 | 1;
    $$sum$i12$i = (($654) + 4)|0;
    $657 = (($tbase$253$i) + ($$sum$i12$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$252$i) + -36)|0;
    $658 = (($tbase$253$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[((3608 + 16|0))>>2]|0;
    HEAP32[((3136 + 28|0))>>2] = $659;
   } else {
    $sp$082$i = ((3136 + 448|0));
    while(1) {
     $660 = HEAP32[$sp$082$i>>2]|0;
     $661 = (($sp$082$i) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$253$i|0)==($663|0);
     if ($664) {
      $$lcssa159 = $660;$$lcssa161 = $661;$$lcssa163 = $662;$sp$082$i$lcssa = $sp$082$i;
      label = 224;
      break;
     }
     $665 = (($sp$082$i) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      label = 229;
      break;
     } else {
      $sp$082$i = $666;
     }
    }
    if ((label|0) == 224) {
     $668 = (($sp$082$i$lcssa) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa159>>>0);
      $673 = ($635>>>0)<($tbase$253$i>>>0);
      $or$cond55$i = $673 & $672;
      if ($or$cond55$i) {
       $674 = (($$lcssa163) + ($tsize$252$i))|0;
       HEAP32[$$lcssa161>>2] = $674;
       $675 = HEAP32[((3136 + 12|0))>>2]|0;
       $676 = (($675) + ($tsize$252$i))|0;
       $677 = (($635) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       if ($680) {
        $684 = 0;
       } else {
        $681 = (0 - ($678))|0;
        $682 = $681 & 7;
        $684 = $682;
       }
       $683 = (($635) + ($684)|0);
       $685 = (($676) - ($684))|0;
       HEAP32[((3136 + 24|0))>>2] = $683;
       HEAP32[((3136 + 12|0))>>2] = $685;
       $686 = $685 | 1;
       $$sum$i16$i = (($684) + 4)|0;
       $687 = (($635) + ($$sum$i16$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i17$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i17$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[((3608 + 16|0))>>2]|0;
       HEAP32[((3136 + 28|0))>>2] = $689;
       break;
      }
     }
    }
    else if ((label|0) == 229) {
    }
    $690 = HEAP32[((3136 + 16|0))>>2]|0;
    $691 = ($tbase$253$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[((3136 + 16|0))>>2] = $tbase$253$i;
     $755 = $tbase$253$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$253$i) + ($tsize$252$i)|0);
    $sp$181$i = ((3136 + 448|0));
    while(1) {
     $693 = HEAP32[$sp$181$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa156 = $sp$181$i;$sp$181$i$lcssa = $sp$181$i;
      label = 235;
      break;
     }
     $695 = (($sp$181$i) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      label = 236;
      break;
     } else {
      $sp$181$i = $696;
     }
    }
    if ((label|0) == 235) {
     $698 = (($sp$181$i$lcssa) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa156>>2] = $tbase$253$i;
      $702 = (($sp$181$i$lcssa) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$252$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = (($tbase$253$i) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      if ($708) {
       $712 = 0;
      } else {
       $709 = (0 - ($706))|0;
       $710 = $709 & 7;
       $712 = $710;
      }
      $711 = (($tbase$253$i) + ($712)|0);
      $$sum110$i = (($tsize$252$i) + 8)|0;
      $713 = (($tbase$253$i) + ($$sum110$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      if ($716) {
       $719 = 0;
      } else {
       $717 = (0 - ($714))|0;
       $718 = $717 & 7;
       $719 = $718;
      }
      $$sum111$i = (($719) + ($tsize$252$i))|0;
      $720 = (($tbase$253$i) + ($$sum111$i)|0);
      $721 = $720;
      $722 = $711;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($712) + ($nb$0))|0;
      $724 = (($tbase$253$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($712) + 4)|0;
      $727 = (($tbase$253$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L354: do {
       if ($728) {
        $729 = HEAP32[((3136 + 12|0))>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[((3136 + 12|0))>>2] = $730;
        HEAP32[((3136 + 24|0))>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$253$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[((3136 + 20|0))>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[((3136 + 8|0))>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[((3136 + 8|0))>>2] = $736;
         HEAP32[((3136 + 20|0))>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$253$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$253$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$252$i) + 4)|0;
        $$sum112$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$253$i) + ($$sum112$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L362: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum122$i = (($$sum3738$i$i) + ($tsize$252$i))|0;
           $747 = (($tbase$253$i) + ($$sum122$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$252$i) + 12)|0;
           $$sum123$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$253$i) + ($$sum123$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = ((3136 + ($751<<2)|0) + 40|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = (($748) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[3136>>2]|0;
            $763 = $762 & $761;
            HEAP32[3136>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre58$i$i = (($750) + 8|0);
             $$pre$phi59$i$iZ2D = $$pre58$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = (($750) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi59$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = (($748) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi59$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum113$i = (($$sum34$i$i) + ($tsize$252$i))|0;
           $770 = (($tbase$253$i) + ($$sum113$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$252$i) + 12)|0;
           $$sum114$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$253$i) + ($$sum114$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum120$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$253$i) + ($$sum120$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum121$i = (($$sum67$i$i) + ($tsize$252$i))|0;
              $787 = (($tbase$253$i) + ($$sum121$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i$ph = $788;$RP$0$i$i$ph = $787;
              }
             } else {
              $R$0$i$i$ph = $785;$RP$0$i$i$ph = $784;
             }
             $R$0$i$i = $R$0$i$i$ph;$RP$0$i$i = $RP$0$i$i$ph;
             while(1) {
              $790 = (($R$0$i$i) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               $793 = (($R$0$i$i) + 16|0);
               $794 = HEAP32[$793>>2]|0;
               $795 = ($794|0)==(0|0);
               if ($795) {
                $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
                break;
               } else {
                $R$0$i$i$be = $794;$RP$0$i$i$be = $793;
               }
              } else {
               $R$0$i$i$be = $791;$RP$0$i$i$be = $790;
              }
              $R$0$i$i = $R$0$i$i$be;$RP$0$i$i = $RP$0$i$i$be;
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum115$i = (($$sum3536$i$i) + ($tsize$252$i))|0;
             $775 = (($tbase$253$i) + ($$sum115$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = (($776) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = (($773) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$252$i) + 28)|0;
           $$sum116$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$253$i) + ($$sum116$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = ((3136 + ($799<<2)|0) + 304|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[((3136 + 4|0))>>2]|0;
             $806 = $805 & $804;
             HEAP32[((3136 + 4|0))>>2] = $806;
             break L362;
            } else {
             $807 = HEAP32[((3136 + 16|0))>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = (($771) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = (($771) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L362;
             }
            }
           } while(0);
           $814 = HEAP32[((3136 + 16|0))>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = (($R$1$i$i) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum117$i = (($$sum3132$i$i) + ($tsize$252$i))|0;
           $817 = (($tbase$253$i) + ($$sum117$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = (($R$1$i$i) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = (($818) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum118$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$253$i) + ($$sum118$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[((3136 + 16|0))>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = (($R$1$i$i) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = (($824) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum119$i = (($$sum9$i$i) + ($tsize$252$i))|0;
         $830 = (($tbase$253$i) + ($$sum119$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = (($oldfirst$0$i$i) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$253$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$253$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = ((3136 + ($840<<2)|0) + 40|0);
         $842 = HEAP32[3136>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[3136>>2] = $846;
           $$sum26$pre$i$i = (($840) + 2)|0;
           $$pre$i22$i = ((3136 + ($$sum26$pre$i$i<<2)|0) + 40|0);
           $$pre$phi$i23$iZ2D = $$pre$i22$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = ((3136 + ($$sum29$i$i<<2)|0) + 40|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[((3136 + 16|0))>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = (($F4$0$i$i) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$253$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$253$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = ((3136 + ($I7$0$i$i<<2)|0) + 304|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$253$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$253$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$253$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[((3136 + 4|0))>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[((3136 + 4|0))>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$253$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$253$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$253$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ($I7$0$i$i|0)==(31);
        if ($892) {
         $900 = 0;
        } else {
         $893 = $I7$0$i$i >>> 1;
         $894 = (25 - ($893))|0;
         $900 = $894;
        }
        $895 = (($891) + 4|0);
        $896 = HEAP32[$895>>2]|0;
        $897 = $896 & -8;
        $898 = ($897|0)==($qsize$0$i$i|0);
        do {
         if ($898) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $899 = $qsize$0$i$i << $900;
          $K8$053$i$i = $899;$T$052$i$i = $891;
          while(1) {
           $907 = $K8$053$i$i >>> 31;
           $908 = ((($T$052$i$i) + ($907<<2)|0) + 16|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$052$i$i$lcssa = $T$052$i$i;
            break;
           }
           $901 = $K8$053$i$i << 1;
           $902 = (($903) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $$lcssa146 = $903;
            label = 316;
            break;
           } else {
            $K8$053$i$i = $901;$T$052$i$i = $903;
           }
          }
          if ((label|0) == 316) {
           $T$0$lcssa$i25$i = $$lcssa146;
           break;
          }
          $910 = HEAP32[((3136 + 16|0))>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$253$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$052$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$253$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$253$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L354;
          }
         }
        } while(0);
        $915 = (($T$0$lcssa$i25$i) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[((3136 + 16|0))>>2]|0;
        $918 = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = ($916>>>0)>=($917>>>0);
        $or$cond$i26$i = $918 & $919;
        if ($or$cond$i26$i) {
         $920 = (($916) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$253$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$253$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$253$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $712 | 8;
      $924 = (($tbase$253$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     }
    }
    else if ((label|0) == 236) {
    }
    $sp$0$i$i$i = ((3136 + 448|0));
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = (($sp$0$i$i$i) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa152 = $925;$$lcssa153 = $928;$$lcssa154 = $929;
       break;
      }
     }
     $931 = (($sp$0$i$i$i) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i13$i = (($$lcssa153) + -47)|0;
    $$sum1$i14$i = (($$lcssa153) + -39)|0;
    $933 = (($$lcssa152) + ($$sum1$i14$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    if ($936) {
     $939 = 0;
    } else {
     $937 = (0 - ($934))|0;
     $938 = $937 & 7;
     $939 = $938;
    }
    $$sum2$i15$i = (($$sum$i13$i) + ($939))|0;
    $940 = (($$lcssa152) + ($$sum2$i15$i)|0);
    $941 = (($635) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = (($943) + 8|0);
    $945 = (($tsize$252$i) + -40)|0;
    $946 = (($tbase$253$i) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    if ($949) {
     $953 = 0;
    } else {
     $950 = (0 - ($947))|0;
     $951 = $950 & 7;
     $953 = $951;
    }
    $952 = (($tbase$253$i) + ($953)|0);
    $954 = (($945) - ($953))|0;
    HEAP32[((3136 + 24|0))>>2] = $952;
    HEAP32[((3136 + 12|0))>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($953) + 4)|0;
    $956 = (($tbase$253$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$252$i) + -36)|0;
    $957 = (($tbase$253$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[((3608 + 16|0))>>2]|0;
    HEAP32[((3136 + 28|0))>>2] = $958;
    $959 = (($943) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944+0>>2]=HEAP32[((3136 + 448|0))+0>>2]|0;HEAP32[$944+4>>2]=HEAP32[((3136 + 448|0))+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[((3136 + 448|0))+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[((3136 + 448|0))+12>>2]|0;
    HEAP32[((3136 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((3136 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((3136 + 460|0))>>2] = 0;
    HEAP32[((3136 + 456|0))>>2] = $944;
    $960 = (($943) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = (($943) + 32|0);
    $962 = ($961>>>0)<($$lcssa154>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = (($964) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = (($964) + 8|0);
      $966 = ($965>>>0)<($$lcssa154>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = (($635) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = ((3136 + ($977<<2)|0) + 40|0);
      $979 = HEAP32[3136>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      do {
       if ($982) {
        $983 = $979 | $980;
        HEAP32[3136>>2] = $983;
        $$sum3$pre$i$i = (($977) + 2)|0;
        $$pre$i$i = ((3136 + ($$sum3$pre$i$i<<2)|0) + 40|0);
        $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $978;
       } else {
        $$sum4$i$i = (($977) + 2)|0;
        $984 = ((3136 + ($$sum4$i$i<<2)|0) + 40|0);
        $985 = HEAP32[$984>>2]|0;
        $986 = HEAP32[((3136 + 16|0))>>2]|0;
        $987 = ($985>>>0)<($986>>>0);
        if (!($987)) {
         $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
         break;
        }
        _abort();
        // unreachable;
       }
      } while(0);
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = (($F$0$i$i) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = (($635) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = (($635) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = ((3136 + ($I1$0$i$i<<2)|0) + 304|0);
     $1017 = (($635) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = (($635) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[((3136 + 4|0))>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[((3136 + 4|0))>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = (($635) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = (($635) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = (($635) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ($I1$0$i$i|0)==(31);
     if ($1028) {
      $1036 = 0;
     } else {
      $1029 = $I1$0$i$i >>> 1;
      $1030 = (25 - ($1029))|0;
      $1036 = $1030;
     }
     $1031 = (($1027) + 4|0);
     $1032 = HEAP32[$1031>>2]|0;
     $1033 = $1032 & -8;
     $1034 = ($1033|0)==($970|0);
     do {
      if ($1034) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1035 = $970 << $1036;
       $K2$08$i$i = $1035;$T$07$i$i = $1027;
       while(1) {
        $1043 = $K2$08$i$i >>> 31;
        $1044 = ((($T$07$i$i) + ($1043<<2)|0) + 16|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa148 = $1044;$T$07$i$i$lcssa = $T$07$i$i;
         break;
        }
        $1037 = $K2$08$i$i << 1;
        $1038 = (($1039) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $$lcssa151 = $1039;
         label = 353;
         break;
        } else {
         $K2$08$i$i = $1037;$T$07$i$i = $1039;
        }
       }
       if ((label|0) == 353) {
        $T$0$lcssa$i$i = $$lcssa151;
        break;
       }
       $1046 = HEAP32[((3136 + 16|0))>>2]|0;
       $1047 = ($$lcssa148>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa148>>2] = $635;
        $1048 = (($635) + 24|0);
        HEAP32[$1048>>2] = $T$07$i$i$lcssa;
        $1049 = (($635) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = (($635) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L325;
       }
      }
     } while(0);
     $1051 = (($T$0$lcssa$i$i) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[((3136 + 16|0))>>2]|0;
     $1054 = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = ($1052>>>0)>=($1053>>>0);
     $or$cond$i$i = $1054 & $1055;
     if ($or$cond$i$i) {
      $1056 = (($1052) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = (($635) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = (($635) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = (($635) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[((3136 + 12|0))>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[((3136 + 12|0))>>2] = $1062;
   $1063 = HEAP32[((3136 + 24|0))>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[((3136 + 24|0))>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = (($1063) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = (($1063) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $$pre61 = 0, $$sum = 0, $$sum10$pre = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0;
 var $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0;
 var $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $cond = 0;
 var $cond48 = 0, $or$cond = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = (($mem) + -8|0);
 $2 = HEAP32[((3136 + 16|0))>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = (($mem) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[((3136 + 20|0))>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[((3136 + 8|0))>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = ((3136 + ($25<<2)|0) + 40|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = (($22) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[3136>>2]|0;
     $36 = $35 & $34;
     HEAP32[3136>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre61 = (($24) + 8|0);
     $$pre$phi62Z2D = $$pre61;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = (($24) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi62Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = (($22) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi62Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $61;$RP$0$ph = $60;
      }
     } else {
      $R$0$ph = $58;$RP$0$ph = $57;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $63 = (($R$0) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if ($65) {
       $66 = (($R$0) + 16|0);
       $67 = HEAP32[$66>>2]|0;
       $68 = ($67|0)==(0|0);
       if ($68) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $67;$RP$0$be = $66;
       }
      } else {
       $R$0$be = $64;$RP$0$be = $63;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = (($49) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = (($46) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((3136 + ($72<<2)|0) + 304|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[((3136 + 4|0))>>2]|0;
      $79 = $78 & $77;
      HEAP32[((3136 + 4|0))>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[((3136 + 16|0))>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = (($44) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = (($44) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[((3136 + 16|0))>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = (($R$1) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = (($R$1) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = (($91) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[((3136 + 16|0))>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = (($R$1) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = (($97) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[((3136 + 24|0))>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[((3136 + 12|0))>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[((3136 + 12|0))>>2] = $120;
   HEAP32[((3136 + 24|0))>>2] = $p$0;
   $121 = $120 | 1;
   $122 = (($p$0) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[((3136 + 20|0))>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[((3136 + 20|0))>>2] = 0;
   HEAP32[((3136 + 8|0))>>2] = 0;
   return;
  }
  $125 = HEAP32[((3136 + 20|0))>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[((3136 + 8|0))>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[((3136 + 8|0))>>2] = $128;
   HEAP32[((3136 + 20|0))>>2] = $p$0;
   $129 = $128 | 1;
   $130 = (($p$0) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = ((3136 + ($140<<2)|0) + 40|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[((3136 + 16|0))>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = (($137) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[3136>>2]|0;
     $152 = $151 & $150;
     HEAP32[3136>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre59 = (($139) + 8|0);
     $$pre$phi60Z2D = $$pre59;
    } else {
     $154 = HEAP32[((3136 + 16|0))>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = (($139) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi60Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = (($137) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi60Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $179;$RP9$0$ph = $178;
       }
      } else {
       $R7$0$ph = $176;$RP9$0$ph = $175;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $181 = (($R7$0) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $184 = (($R7$0) + 16|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if ($186) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $185;$RP9$0$be = $184;
        }
       } else {
        $R7$0$be = $182;$RP9$0$be = $181;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $187 = HEAP32[((3136 + 16|0))>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[((3136 + 16|0))>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = (($166) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = (($163) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((3136 + ($191<<2)|0) + 304|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond48 = ($R7$1|0)==(0|0);
      if ($cond48) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[((3136 + 4|0))>>2]|0;
       $198 = $197 & $196;
       HEAP32[((3136 + 4|0))>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[((3136 + 16|0))>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = (($161) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = (($161) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[((3136 + 16|0))>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = (($R7$1) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = (($R7$1) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = (($210) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[((3136 + 16|0))>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = (($R7$1) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = (($216) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = (($p$0) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[((3136 + 20|0))>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[((3136 + 8|0))>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = (($p$0) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = ((3136 + ($233<<2)|0) + 40|0);
  $235 = HEAP32[3136>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[3136>>2] = $239;
   $$sum10$pre = (($233) + 2)|0;
   $$pre = ((3136 + ($$sum10$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = ((3136 + ($$sum11<<2)|0) + 40|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[((3136 + 16|0))>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = (($F16$0) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = (($p$0) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = (($p$0) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = ((3136 + ($I18$0<<2)|0) + 304|0);
 $273 = (($p$0) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = (($p$0) + 16|0);
 $275 = (($p$0) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[((3136 + 4|0))>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L205: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[((3136 + 4|0))>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = (($p$0) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = (($p$0) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = (($p$0) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ($I18$0|0)==(31);
   if ($285) {
    $293 = 0;
   } else {
    $286 = $I18$0 >>> 1;
    $287 = (25 - ($286))|0;
    $293 = $287;
   }
   $288 = (($284) + 4|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = $289 & -8;
   $291 = ($290|0)==($psize$1|0);
   do {
    if ($291) {
     $T$0$lcssa = $284;
    } else {
     $292 = $psize$1 << $293;
     $K19$054 = $292;$T$053 = $284;
     while(1) {
      $300 = $K19$054 >>> 31;
      $301 = ((($T$053) + ($300<<2)|0) + 16|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$053$lcssa = $T$053;
       break;
      }
      $294 = $K19$054 << 1;
      $295 = (($296) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $$lcssa71 = $296;
       label = 137;
       break;
      } else {
       $K19$054 = $294;$T$053 = $296;
      }
     }
     if ((label|0) == 137) {
      $T$0$lcssa = $$lcssa71;
      break;
     }
     $303 = HEAP32[((3136 + 16|0))>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = (($p$0) + 24|0);
      HEAP32[$305>>2] = $T$053$lcssa;
      $306 = (($p$0) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = (($p$0) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L205;
     }
    }
   } while(0);
   $308 = (($T$0$lcssa) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[((3136 + 16|0))>>2]|0;
   $311 = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = ($309>>>0)>=($310>>>0);
   $or$cond = $311 & $312;
   if ($or$cond) {
    $313 = (($309) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = (($p$0) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = (($p$0) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = (($p$0) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[((3136 + 32|0))>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[((3136 + 32|0))>>2] = $318;
 $319 = ($318|0)==(0);
 if (!($319)) {
  return;
 }
 $sp$0$in$i = ((3136 + 456|0));
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = (($sp$0$i) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[((3136 + 32|0))>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 if ($4) {
  $8 = 16;
 } else {
  $5 = (($bytes) + 11)|0;
  $6 = $5 & -8;
  $8 = $6;
 }
 $7 = (($oldmem) + -8|0);
 $9 = (_try_realloc_chunk($7,$8)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (($9) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = (($oldmem) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 if ($0) {
  $4 = 1;
 } else {
  $1 = (($c) + -9)|0;
  $2 = ($1>>>0)<(5);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
  $3 = $4&1;
  return ($3|0);
 }
 $0 = $c | 32;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(6);
 $4 = $2;
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$1 = 0, $$124 = 0, $$125 = 0, $$22 = 0, $$23 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $$sum = 0, $$sum14 = 0, $$sum1447 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum1867 = 0, $$sum19 = 0, $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond42 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $279 = 0;$280 = 0;
  tempRet0 = $279;
  return ($280|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = (($6) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa122 = $13;
   break;
  }
 }
 $16 = ($$lcssa122|0)==(45);
 do {
  if ((($$lcssa122|0) == 43) | (($$lcssa122|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = (($18) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa122;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = (($29) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$125 = 8;$c$126 = $37;
     label = 48;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = (($39) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (3632 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = (($52) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    if ($51) {
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = (($55) + -1|0);
    HEAP32[$3>>2] = $56;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   } else {
    $$125 = 16;$c$126 = $46;
    label = 48;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (3632 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = (($63) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$084 = 0;
    while(1) {
     $69 = ($x$084*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = (($72) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $$ = $80 & $81;
     if ($$) {
      $71 = $79;$x$084 = $70;
     } else {
      $$lcssa121 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $281 = $$lcssa121;$282 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $281 = 0;$282 = 0;$c$2$lcssa = $c$1;
   }
   $82 = (($c$2$lcssa) + -48)|0;
   $83 = ($82>>>0)<(10);
   if ($83) {
    $84 = $281;$85 = $282;$88 = $82;$c$373 = $c$2$lcssa;
    while(1) {
     $86 = (___muldi3(($84|0),($85|0),10,0)|0);
     $87 = tempRet0;
     $89 = ($88|0)<(0);
     $90 = $89 << 31 >> 31;
     $91 = $88 ^ -1;
     $92 = $90 ^ -1;
     $93 = ($87>>>0)>($92>>>0);
     $94 = ($86>>>0)>($91>>>0);
     $95 = ($87|0)==($92|0);
     $96 = $95 & $94;
     $97 = $93 | $96;
     if ($97) {
      $$lcssa = $88;$283 = $84;$284 = $85;$c$3$lcssa = $c$373;
      break;
     }
     $98 = (_i64Add(($86|0),($87|0),($88|0),($90|0))|0);
     $99 = tempRet0;
     $100 = HEAP32[$3>>2]|0;
     $101 = HEAP32[$4>>2]|0;
     $102 = ($100>>>0)<($101>>>0);
     if ($102) {
      $103 = (($100) + 1|0);
      HEAP32[$3>>2] = $103;
      $104 = HEAP8[$100>>0]|0;
      $105 = $104&255;
      $c$3$be = $105;
     } else {
      $106 = (___shgetc($f)|0);
      $c$3$be = $106;
     }
     $107 = (($c$3$be) + -48)|0;
     $108 = ($107>>>0)<(10);
     $109 = ($99>>>0)<(429496729);
     $110 = ($98>>>0)<(2576980378);
     $111 = ($99|0)==(429496729);
     $112 = $111 & $110;
     $113 = $109 | $112;
     $or$cond7 = $108 & $113;
     if ($or$cond7) {
      $84 = $98;$85 = $99;$88 = $107;$c$373 = $c$3$be;
     } else {
      $$lcssa = $107;$283 = $98;$284 = $99;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $114 = ($$lcssa>>>0)>(9);
    if ($114) {
     $252 = $284;$254 = $283;
    } else {
     $$124 = 10;$285 = $283;$286 = $284;$c$8 = $c$3$lcssa;
     label = 79;
    }
   } else {
    $252 = $282;$254 = $281;
   }
  } else {
   $$125 = $$1;$c$126 = $c$1;
   label = 48;
  }
 }
 do {
  if ((label|0) == 48) {
   $115 = (($$125) + -1)|0;
   $116 = $115 & $$125;
   $117 = ($116|0)==(0);
   if ($117) {
    $122 = ($$125*23)|0;
    $123 = $122 >>> 5;
    $124 = $123 & 7;
    $125 = (3896 + ($124)|0);
    $126 = HEAP8[$125>>0]|0;
    $127 = $126 << 24 >> 24;
    $$sum1447 = (($c$126) + 1)|0;
    $128 = (3632 + ($$sum1447)|0);
    $129 = HEAP8[$128>>0]|0;
    $130 = $129&255;
    $131 = ($130>>>0)<($$125>>>0);
    if ($131) {
     $134 = $130;$x$148 = 0;
     while(1) {
      $132 = $x$148 << $127;
      $133 = $134 | $132;
      $135 = HEAP32[$3>>2]|0;
      $136 = HEAP32[$4>>2]|0;
      $137 = ($135>>>0)<($136>>>0);
      if ($137) {
       $138 = (($135) + 1|0);
       HEAP32[$3>>2] = $138;
       $139 = HEAP8[$135>>0]|0;
       $140 = $139&255;
       $c$4$be = $140;
      } else {
       $141 = (___shgetc($f)|0);
       $c$4$be = $141;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $142 = (3632 + ($$sum14)|0);
      $143 = HEAP8[$142>>0]|0;
      $144 = $143&255;
      $145 = ($144>>>0)<($$125>>>0);
      $146 = ($133>>>0)<(134217728);
      $$22 = $146 & $145;
      if ($$22) {
       $134 = $144;$x$148 = $133;
      } else {
       $$lcssa117 = $133;$$lcssa118 = $143;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $150 = $$lcssa118;$152 = 0;$154 = $$lcssa117;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $150 = $129;$152 = 0;$154 = 0;$c$4$lcssa = $c$126;
    }
    $147 = (_bitshift64Lshr(-1,-1,($127|0))|0);
    $148 = tempRet0;
    $149 = $150&255;
    $151 = ($149>>>0)>=($$125>>>0);
    $153 = ($152>>>0)>($148>>>0);
    $155 = ($154>>>0)>($147>>>0);
    $156 = ($152|0)==($148|0);
    $157 = $156 & $155;
    $158 = $153 | $157;
    $or$cond42 = $151 | $158;
    if ($or$cond42) {
     $$124 = $$125;$285 = $154;$286 = $152;$c$8 = $c$4$lcssa;
     label = 79;
     break;
    }
    $159 = $154;$160 = $152;$164 = $150;
    while(1) {
     $161 = (_bitshift64Shl(($159|0),($160|0),($127|0))|0);
     $162 = tempRet0;
     $163 = $164&255;
     $165 = $163 | $161;
     $166 = HEAP32[$3>>2]|0;
     $167 = HEAP32[$4>>2]|0;
     $168 = ($166>>>0)<($167>>>0);
     if ($168) {
      $169 = (($166) + 1|0);
      HEAP32[$3>>2] = $169;
      $170 = HEAP8[$166>>0]|0;
      $171 = $170&255;
      $c$5$be = $171;
     } else {
      $172 = (___shgetc($f)|0);
      $c$5$be = $172;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $173 = (3632 + ($$sum15)|0);
     $174 = HEAP8[$173>>0]|0;
     $175 = $174&255;
     $176 = ($175>>>0)>=($$125>>>0);
     $177 = ($162>>>0)>($148>>>0);
     $178 = ($165>>>0)>($147>>>0);
     $179 = ($162|0)==($148|0);
     $180 = $179 & $178;
     $181 = $177 | $180;
     $or$cond = $176 | $181;
     if ($or$cond) {
      $289 = $165;$290 = $162;$c$5$be$lcssa = $c$5$be;
      break;
     } else {
      $159 = $165;$160 = $162;$164 = $174;
     }
    }
    $$124 = $$125;$285 = $289;$286 = $290;$c$8 = $c$5$be$lcssa;
    label = 79;
    break;
   }
   $$sum1867 = (($c$126) + 1)|0;
   $118 = (3632 + ($$sum1867)|0);
   $119 = HEAP8[$118>>0]|0;
   $120 = $119&255;
   $121 = ($120>>>0)<($$125>>>0);
   if ($121) {
    $184 = $120;$x$268 = 0;
    while(1) {
     $182 = Math_imul($x$268, $$125)|0;
     $183 = (($184) + ($182))|0;
     $185 = HEAP32[$3>>2]|0;
     $186 = HEAP32[$4>>2]|0;
     $187 = ($185>>>0)<($186>>>0);
     if ($187) {
      $188 = (($185) + 1|0);
      HEAP32[$3>>2] = $188;
      $189 = HEAP8[$185>>0]|0;
      $190 = $189&255;
      $c$6$be = $190;
     } else {
      $191 = (___shgetc($f)|0);
      $c$6$be = $191;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $192 = (3632 + ($$sum18)|0);
     $193 = HEAP8[$192>>0]|0;
     $194 = $193&255;
     $195 = ($194>>>0)<($$125>>>0);
     $196 = ($183>>>0)<(119304647);
     $$23 = $196 & $195;
     if ($$23) {
      $184 = $194;$x$268 = $183;
     } else {
      $$lcssa119 = $183;$$lcssa120 = $193;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $198 = $$lcssa120;$287 = $$lcssa119;$288 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $198 = $119;$287 = 0;$288 = 0;$c$6$lcssa = $c$126;
   }
   $197 = $198&255;
   $199 = ($197>>>0)<($$125>>>0);
   if ($199) {
    $200 = (___udivdi3(-1,-1,($$125|0),0)|0);
    $201 = tempRet0;
    $202 = $288;$204 = $287;$212 = $198;$c$755 = $c$6$lcssa;
    while(1) {
     $203 = ($202>>>0)>($201>>>0);
     $205 = ($204>>>0)>($200>>>0);
     $206 = ($202|0)==($201|0);
     $207 = $206 & $205;
     $208 = $203 | $207;
     if ($208) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $209 = (___muldi3(($204|0),($202|0),($$125|0),0)|0);
     $210 = tempRet0;
     $211 = $212&255;
     $213 = $211 ^ -1;
     $214 = ($210>>>0)>(4294967295);
     $215 = ($209>>>0)>($213>>>0);
     $216 = ($210|0)==(-1);
     $217 = $216 & $215;
     $218 = $214 | $217;
     if ($218) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $219 = (_i64Add(($211|0),0,($209|0),($210|0))|0);
     $220 = tempRet0;
     $221 = HEAP32[$3>>2]|0;
     $222 = HEAP32[$4>>2]|0;
     $223 = ($221>>>0)<($222>>>0);
     if ($223) {
      $224 = (($221) + 1|0);
      HEAP32[$3>>2] = $224;
      $225 = HEAP8[$221>>0]|0;
      $226 = $225&255;
      $c$7$be = $226;
     } else {
      $227 = (___shgetc($f)|0);
      $c$7$be = $227;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $228 = (3632 + ($$sum19)|0);
     $229 = HEAP8[$228>>0]|0;
     $230 = $229&255;
     $231 = ($230>>>0)<($$125>>>0);
     if ($231) {
      $202 = $220;$204 = $219;$212 = $229;$c$755 = $c$7$be;
     } else {
      $291 = $219;$292 = $220;$c$8$ph = $c$7$be;
      break;
     }
    }
    $$124 = $$125;$285 = $291;$286 = $292;$c$8 = $c$8$ph;
    label = 79;
   } else {
    $$124 = $$125;$285 = $287;$286 = $288;$c$8 = $c$6$lcssa;
    label = 79;
   }
  }
 } while(0);
 if ((label|0) == 79) {
  $$sum16 = (($c$8) + 1)|0;
  $232 = (3632 + ($$sum16)|0);
  $233 = HEAP8[$232>>0]|0;
  $234 = $233&255;
  $235 = ($234>>>0)<($$124>>>0);
  if ($235) {
   while(1) {
    $236 = HEAP32[$3>>2]|0;
    $237 = HEAP32[$4>>2]|0;
    $238 = ($236>>>0)<($237>>>0);
    if ($238) {
     $239 = (($236) + 1|0);
     HEAP32[$3>>2] = $239;
     $240 = HEAP8[$236>>0]|0;
     $241 = $240&255;
     $c$9$be = $241;
    } else {
     $242 = (___shgetc($f)|0);
     $c$9$be = $242;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $243 = (3632 + ($$sum17)|0);
    $244 = HEAP8[$243>>0]|0;
    $245 = $244&255;
    $246 = ($245>>>0)<($$124>>>0);
    if (!($246)) {
     break;
    }
   }
   $247 = (___errno_location()|0);
   HEAP32[$247>>2] = 34;
   $252 = $1;$254 = $0;
  } else {
   $252 = $286;$254 = $285;
  }
 }
 $248 = HEAP32[$4>>2]|0;
 $249 = ($248|0)==(0|0);
 if (!($249)) {
  $250 = HEAP32[$3>>2]|0;
  $251 = (($250) + -1|0);
  HEAP32[$3>>2] = $251;
 }
 $253 = ($252>>>0)<($1>>>0);
 $255 = ($254>>>0)<($0>>>0);
 $256 = ($252|0)==($1|0);
 $257 = $256 & $255;
 $258 = $253 | $257;
 if (!($258)) {
  $259 = $0 & 1;
  $260 = ($259|0)!=(0);
  $261 = (0)!=(0);
  $262 = $260 | $261;
  $263 = ($neg$0|0)!=(0);
  $or$cond12 = $262 | $263;
  if (!($or$cond12)) {
   $264 = (___errno_location()|0);
   HEAP32[$264>>2] = 34;
   $265 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $266 = tempRet0;
   $279 = $266;$280 = $265;
   tempRet0 = $279;
   return ($280|0);
  }
  $267 = ($252>>>0)>($1>>>0);
  $268 = ($254>>>0)>($0>>>0);
  $269 = ($252|0)==($1|0);
  $270 = $269 & $268;
  $271 = $267 | $270;
  if ($271) {
   $272 = (___errno_location()|0);
   HEAP32[$272>>2] = 34;
   $279 = $1;$280 = $0;
   tempRet0 = $279;
   return ($280|0);
  }
 }
 $273 = ($neg$0|0)<(0);
 $274 = $273 << 31 >> 31;
 $275 = $254 ^ $neg$0;
 $276 = $252 ^ $274;
 $277 = (_i64Subtract(($275|0),($276|0),($neg$0|0),($274|0))|0);
 $278 = tempRet0;
 $279 = $278;$280 = $277;
 tempRet0 = $279;
 return ($280|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i27 = 0.0, $$012$i = 0, $$012$i$be = 0, $$012$i$lcssa = 0, $$013$i = 0, $$01335$i = 0, $$01336$i = 0, $$07$i = 0, $$0711$i = 0, $$0712$i = 0, $$1$be$i = 0, $$1$be$i$lcssa = 0, $$1$ph$i = 0, $$14$i = 0, $$2$i = 0, $$21$i = 0, $$3$be$i = 0, $$3$be$i$lcssa = 0;
 var $$3$lcssa$i = 0, $$3131$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa190 = 0, $$lcssa191 = 0, $$lcssa201 = 0, $$lcssa202 = 0, $$lcssa205 = 0, $$lcssa207 = 0, $$lcssa207$lcssa = 0, $$lcssa208 = 0, $$lcssa208$lcssa = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa221 = 0, $$lcssa222 = 0, $$lcssa232 = 0;
 var $$lcssa59$i = 0, $$lnz$0$i = 0, $$neg41$i = 0, $$old$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$promoted$i = 0, $$sink$off0$us$i = 0, $$sink$off0$us102$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0.0;
 var $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0.0, $417 = 0.0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0.0, $446 = 0.0, $447 = 0.0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0, $473 = 0.0, $474 = 0.0, $475 = 0, $476 = 0.0, $477 = 0, $478 = 0.0, $479 = 0.0, $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0.0;
 var $484 = 0.0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0.0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0.0, $497 = 0.0, $498 = 0, $499 = 0, $5 = 0, $50 = 0.0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0.0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0;
 var $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0.0, $663 = 0;
 var $664 = 0.0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0.0, $673 = 0, $674 = 0, $675 = 0.0, $676 = 0, $677 = 0.0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0.0, $685 = 0, $686 = 0, $687 = 0, $688 = 0.0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0.0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0.0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0.0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a$0$lcssa186$i = 0, $a$0110$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph47$i = 0, $a$2$ph47$i$lcssa = 0, $a$2$ph47$i$lcssa219 = 0;
 var $a$2$ph47$i$ph = 0, $a$2$ph47$i220 = 0, $a$3$i = 0, $a$3$i$lcssa = 0, $a$3$i$lcssa198 = 0, $a$3$i$lcssa199 = 0, $a$3$i$ph = 0, $a$3$i200 = 0, $a$3$ph$i = 0, $a$487$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i24 = 0.0, $bits$0$ph = 0, $brmerge = 0, $brmerge136 = 0, $c$0 = 0, $c$0$i = 0;
 var $c$0$i$be = 0, $c$0$i$lcssa = 0, $c$0$i$ph = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$186 = 0, $c$2 = 0, $c$2$i = 0, $c$2$i$be = 0, $c$2$i$ph = 0, $c$2$lcssa$i = 0, $c$4 = 0, $c$4$1 = 0, $c$6 = 0, $carry$0112$i = 0, $carry1$0$us$i = 0, $carry1$0$us98$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us$i$lcssa = 0;
 var $carry1$1$us$i$lcssa$lcssa = 0, $carry1$1$us103$i = 0, $carry1$1$us103$i$lcssa = 0, $carry1$1$us103$i$lcssa$lcssa = 0, $carry3$090$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$033$i = 0, $denormal$034$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$ph$i$lcssa = 0, $e2$0$us$i = 0, $e2$0$us93$i = 0, $e2$0$us93$i$lcssa = 0, $e2$1$i = 0, $e2$1$i$lcssa = 0, $e2$1$i$lcssa195 = 0;
 var $e2$1$i$ph = 0, $e2$1$i197 = 0, $e2$1$ph$i = 0, $e2$1$ph$i$ph = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond175$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa = 0, $gotdig$0$i$lcssa193 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa = 0, $gotdig$0$i12$lcssa230 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i$ph = 0;
 var $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3127$i = 0, $gotdig$3127$i$lcssa = 0, $gotdig$4$i = 0, $gotdig$4$i$lcssa = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i$ph = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1128$i = 0, $gotrad$2$i = 0, $gotrad$2$i$lcssa = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0;
 var $i$085 = 0, $i$1 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0130$i = 0, $j$0130$i$lcssa = 0, $j$076$i = 0, $j$077$i = 0, $j$078$i = 0, $j$2$i = 0, $j$2$i$lcssa = 0, $j$3119$i = 0, $k$0$lcssa$i = 0, $k$0129$i = 0, $k$0129$i$lcssa = 0, $k$072$i = 0, $k$073$i = 0, $k$074$i = 0, $k$2$i = 0;
 var $k$2$i$lcssa = 0, $k$3$i = 0, $k$4111$i = 0, $k$5$in$us$i = 0, $k$5$in$us97$i = 0, $k$5$us$i = 0, $k$5$us99$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us105$i = 0, $k$688$i = 0, $lnz$0$lcssa$i = 0, $lnz$0126$i = 0, $lnz$0126$i$lcssa = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$068$i = 0, $lnz$2$i = 0, $lnz$2$i$lcssa = 0, $notlhs = 0, $notrhs = 0;
 var $or$cond = 0, $or$cond$i = 0, $or$cond$i17 = 0, $or$cond11$i = 0, $or$cond11123$i = 0, $or$cond16$i = 0, $or$cond18$i = 0, $or$cond19$i = 0, $or$cond191$i = 0, $or$cond192$i = 0, $or$cond20$us$i = 0, $or$cond20$us104$i = 0, $or$cond22$i = 0, $or$cond23$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond9$i = 0;
 var $or$cond9$i26 = 0, $or$cond9$not = 0, $rp$0$lcssa187$i = 0, $rp$0109$i = 0, $rp$1$i19 = 0, $rp$1$i19$lcssa = 0, $rp$2$ph45$i = 0, $rp$2$ph45$i$lcssa = 0, $rp$2$ph45$i$ph = 0, $rp$3$i$ph = 0, $rp$3$ph43$i = 0, $rp$3$ph43$i$ph = 0, $rp$486$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0;
 var $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$325$i = 0, $x$4$lcssa$i = 0, $x$420$i = 0, $x$5$i = 0, $x$5$i$lcssa = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i23 = 0.0, $y$2$i = 0.0, $y$2$i25 = 0.0;
 var $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$321$i = 0.0, $y$4$i = 0.0, $y$4$i$lcssa = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph46$i = 0, $z$1$ph46$i$lcssa = 0, $z$1$ph46$i$ph = 0, $z$1$us$i = 0, $z$1$us94$i = 0, $z$1$us94$i$lcssa = 0, $z$2$us$i = 0, $z$2$us96$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us$i$lcssa = 0, $z$3$us$i$lcssa$lcssa = 0, $z$3$us106$i = 0;
 var $z$3$us106$i$lcssa = 0, $z$3$us106$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$5$ph$i$lcssa = 0, $z$5$ph$i$lcssa209 = 0, $z$5$ph$i$ph = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = (($f) + 4|0);
 $1 = (($f) + 100|0);
 while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = (($2) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  $10 = (_isspace($9)|0);
  $11 = ($10|0)==(0);
  if ($11) {
   $$lcssa232 = $9;
   break;
  }
 }
 $12 = ($$lcssa232|0)==(45);
 do {
  if ((($$lcssa232|0) == 43) | (($$lcssa232|0) == 45)) {
   $13 = $12&1;
   $14 = $13 << 1;
   $15 = (1 - ($14))|0;
   $16 = HEAP32[$0>>2]|0;
   $17 = HEAP32[$1>>2]|0;
   $18 = ($16>>>0)<($17>>>0);
   if ($18) {
    $19 = (($16) + 1|0);
    HEAP32[$0>>2] = $19;
    $20 = HEAP8[$16>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$sign$0 = $15;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$sign$0 = $15;
    break;
   }
  } else {
   $c$0 = $$lcssa232;$sign$0 = 1;
  }
 } while(0);
 $c$186 = $c$0;$i$085 = 0;
 while(1) {
  $23 = $c$186 | 32;
  $24 = (3912 + ($i$085)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  if (!($27)) {
   $c$1$lcssa = $c$186;$i$0$lcssa = $i$085;
   break;
  }
  $28 = ($i$085>>>0)<(7);
  do {
   if ($28) {
    $29 = HEAP32[$0>>2]|0;
    $30 = HEAP32[$1>>2]|0;
    $31 = ($29>>>0)<($30>>>0);
    if ($31) {
     $32 = (($29) + 1|0);
     HEAP32[$0>>2] = $32;
     $33 = HEAP8[$29>>0]|0;
     $34 = $33&255;
     $c$2 = $34;
     break;
    } else {
     $35 = (___shgetc($f)|0);
     $c$2 = $35;
     break;
    }
   } else {
    $c$2 = $c$186;
   }
  } while(0);
  $36 = (($i$085) + 1)|0;
  $37 = ($36>>>0)<(8);
  if ($37) {
   $c$186 = $c$2;$i$085 = $36;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $36;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $38 = ($i$0$lcssa>>>0)>(3);
   $39 = ($pok|0)!=(0);
   $or$cond5 = $39 & $38;
   if ($or$cond5) {
    $40 = ($i$0$lcssa|0)==(8);
    if ($40) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $51 = ($i$0$lcssa|0)==(0);
   do {
    if ($51) {
     $52 = $c$1$lcssa | 32;
     $53 = ($52|0)==(110);
     if ($53) {
      $54 = HEAP32[$0>>2]|0;
      $55 = HEAP32[$1>>2]|0;
      $56 = ($54>>>0)<($55>>>0);
      if ($56) {
       $57 = (($54) + 1|0);
       HEAP32[$0>>2] = $57;
       $58 = HEAP8[$54>>0]|0;
       $59 = $58&255;
       $c$4 = $59;
      } else {
       $60 = (___shgetc($f)|0);
       $c$4 = $60;
      }
      $61 = $c$4 | 32;
      $62 = ($61|0)==(97);
      if (!($62)) {
       break;
      }
      $710 = HEAP32[$0>>2]|0;
      $711 = HEAP32[$1>>2]|0;
      $712 = ($710>>>0)<($711>>>0);
      if ($712) {
       $714 = (($710) + 1|0);
       HEAP32[$0>>2] = $714;
       $715 = HEAP8[$710>>0]|0;
       $716 = $715&255;
       $c$4$1 = $716;
      } else {
       $713 = (___shgetc($f)|0);
       $c$4$1 = $713;
      }
      $717 = $c$4$1 | 32;
      $718 = ($717|0)==(110);
      if (!($718)) {
       break;
      }
      $63 = HEAP32[$0>>2]|0;
      $64 = HEAP32[$1>>2]|0;
      $65 = ($63>>>0)<($64>>>0);
      if ($65) {
       $66 = (($63) + 1|0);
       HEAP32[$0>>2] = $66;
       $67 = HEAP8[$63>>0]|0;
       $68 = $67&255;
       $70 = $68;
      } else {
       $69 = (___shgetc($f)|0);
       $70 = $69;
      }
      $71 = ($70|0)==(40);
      if (!($71)) {
       $72 = HEAP32[$1>>2]|0;
       $73 = ($72|0)==(0|0);
       if ($73) {
        $$0 = nan;
        STACKTOP = sp;return (+$$0);
       }
       $74 = HEAP32[$0>>2]|0;
       $75 = (($74) + -1|0);
       HEAP32[$0>>2] = $75;
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $i$4 = 1;
      while(1) {
       $76 = HEAP32[$0>>2]|0;
       $77 = HEAP32[$1>>2]|0;
       $78 = ($76>>>0)<($77>>>0);
       if ($78) {
        $79 = (($76) + 1|0);
        HEAP32[$0>>2] = $79;
        $80 = HEAP8[$76>>0]|0;
        $81 = $80&255;
        $84 = $81;
       } else {
        $82 = (___shgetc($f)|0);
        $84 = $82;
       }
       $83 = (($84) + -48)|0;
       $85 = ($83>>>0)<(10);
       $86 = (($84) + -65)|0;
       $87 = ($86>>>0)<(26);
       $or$cond = $85 | $87;
       if (!($or$cond)) {
        $88 = (($84) + -97)|0;
        $89 = ($88>>>0)<(26);
        $90 = ($84|0)==(95);
        $or$cond7 = $90 | $89;
        if (!($or$cond7)) {
         $$lcssa = $84;$i$4$lcssa = $i$4;
         break;
        }
       }
       $102 = (($i$4) + 1)|0;
       $i$4 = $102;
      }
      $91 = ($$lcssa|0)==(41);
      if ($91) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $92 = HEAP32[$1>>2]|0;
      $93 = ($92|0)==(0|0);
      if (!($93)) {
       $94 = HEAP32[$0>>2]|0;
       $95 = (($94) + -1|0);
       HEAP32[$0>>2] = $95;
      }
      if (!($39)) {
       $97 = (___errno_location()|0);
       HEAP32[$97>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       STACKTOP = sp;return (+$$0);
      }
      $96 = ($i$4$lcssa|0)==(0);
      $brmerge136 = $96 | $93;
      if ($brmerge136) {
       $$0 = nan;
       STACKTOP = sp;return (+$$0);
      }
      $$in = $i$4$lcssa;
      while(1) {
       $98 = (($$in) + -1)|0;
       $99 = HEAP32[$0>>2]|0;
       $100 = (($99) + -1|0);
       HEAP32[$0>>2] = $100;
       $101 = ($98|0)==(0);
       if ($101) {
        break;
       } else {
        $$in = $98;
       }
      }
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $108 = ($c$1$lcssa|0)==(48);
     do {
      if ($108) {
       $109 = HEAP32[$0>>2]|0;
       $110 = HEAP32[$1>>2]|0;
       $111 = ($109>>>0)<($110>>>0);
       if ($111) {
        $112 = (($109) + 1|0);
        HEAP32[$0>>2] = $112;
        $113 = HEAP8[$109>>0]|0;
        $114 = $113&255;
        $117 = $114;
       } else {
        $115 = (___shgetc($f)|0);
        $117 = $115;
       }
       $116 = $117 | 32;
       $118 = ($116|0)==(120);
       if (!($118)) {
        $320 = HEAP32[$1>>2]|0;
        $321 = ($320|0)==(0|0);
        if ($321) {
         $c$6 = 48;
         break;
        }
        $322 = HEAP32[$0>>2]|0;
        $323 = (($322) + -1|0);
        HEAP32[$0>>2] = $323;
        $c$6 = 48;
        break;
       }
       $119 = HEAP32[$0>>2]|0;
       $120 = HEAP32[$1>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = (($119) + 1|0);
        HEAP32[$0>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $c$0$i$ph = $124;
       } else {
        $125 = (___shgetc($f)|0);
        $c$0$i$ph = $125;
       }
       $c$0$i = $c$0$i$ph;$gotdig$0$i = 0;
       while(1) {
        if ((($c$0$i|0) == 46)) {
         $gotdig$0$i$lcssa193 = $gotdig$0$i;
         label = 74;
         break;
        } else if (!((($c$0$i|0) == 48))) {
         $c$0$i$lcssa = $c$0$i;$gotdig$0$i$lcssa = $gotdig$0$i;
         label = 84;
         break;
        }
        $126 = HEAP32[$0>>2]|0;
        $127 = HEAP32[$1>>2]|0;
        $128 = ($126>>>0)<($127>>>0);
        if ($128) {
         $129 = (($126) + 1|0);
         HEAP32[$0>>2] = $129;
         $130 = HEAP8[$126>>0]|0;
         $131 = $130&255;
         $c$0$i$be = $131;
        } else {
         $132 = (___shgetc($f)|0);
         $c$0$i$be = $132;
        }
        $c$0$i = $c$0$i$be;$gotdig$0$i = 1;
       }
       if ((label|0) == 74) {
        $133 = HEAP32[$0>>2]|0;
        $134 = HEAP32[$1>>2]|0;
        $135 = ($133>>>0)<($134>>>0);
        if ($135) {
         $136 = (($133) + 1|0);
         HEAP32[$0>>2] = $136;
         $137 = HEAP8[$133>>0]|0;
         $138 = $137&255;
         $c$1$ph$i = $138;
        } else {
         $139 = (___shgetc($f)|0);
         $c$1$ph$i = $139;
        }
        $140 = ($c$1$ph$i|0)==(48);
        if ($140) {
         $148 = 0;$149 = 0;
         while(1) {
          $141 = HEAP32[$0>>2]|0;
          $142 = HEAP32[$1>>2]|0;
          $143 = ($141>>>0)<($142>>>0);
          if ($143) {
           $144 = (($141) + 1|0);
           HEAP32[$0>>2] = $144;
           $145 = HEAP8[$141>>0]|0;
           $146 = $145&255;
           $152 = $146;
          } else {
           $147 = (___shgetc($f)|0);
           $152 = $147;
          }
          $150 = (_i64Add(($148|0),($149|0),-1,-1)|0);
          $151 = tempRet0;
          $153 = ($152|0)==(48);
          if ($153) {
           $148 = $150;$149 = $151;
          } else {
           $$lcssa191 = $152;$721 = $150;$722 = $151;
           break;
          }
         }
         $719 = $721;$720 = $722;$c$2$i$ph = $$lcssa191;$gotdig$2$i$ph = 1;$gotrad$0$i$ph = 1;
        } else {
         $719 = 0;$720 = 0;$c$2$i$ph = $c$1$ph$i;$gotdig$2$i$ph = $gotdig$0$i$lcssa193;$gotrad$0$i$ph = 1;
        }
       }
       else if ((label|0) == 84) {
        $719 = 0;$720 = 0;$c$2$i$ph = $c$0$i$lcssa;$gotdig$2$i$ph = $gotdig$0$i$lcssa;$gotrad$0$i$ph = 0;
       }
       $163 = 0;$165 = 0;$723 = $719;$724 = $720;$c$2$i = $c$2$i$ph;$gotdig$2$i = $gotdig$2$i$ph;$gotrad$0$i = $gotrad$0$i$ph;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
       L124: while(1) {
        $154 = (($c$2$i) + -48)|0;
        $155 = ($154>>>0)<(10);
        do {
         if ($155) {
          $d$0$i = $154;
          label = 91;
         } else {
          $156 = $c$2$i | 32;
          $157 = (($156) + -97)|0;
          $158 = ($157>>>0)<(6);
          $159 = ($c$2$i|0)==(46);
          $or$cond6$i = $159 | $158;
          if (!($or$cond6$i)) {
           $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break L124;
          }
          if ($159) {
           $160 = ($gotrad$0$i|0)==(0);
           if ($160) {
            $725 = $165;$726 = $163;$727 = $165;$728 = $163;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
            break;
           } else {
            $207 = $723;$208 = $165;$210 = $724;$211 = $163;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break L124;
           }
          } else {
           $161 = ($c$2$i|0)>(57);
           $162 = (($156) + -87)|0;
           $$$i = $161 ? $162 : $154;
           $d$0$i = $$$i;
           label = 91;
           break;
          }
         }
        } while(0);
        if ((label|0) == 91) {
         label = 0;
         $164 = ($163|0)<(0);
         $166 = ($165>>>0)<(8);
         $167 = ($163|0)==(0);
         $168 = $167 & $166;
         $169 = $164 | $168;
         do {
          if ($169) {
           $170 = $x$0$i << 4;
           $171 = (($d$0$i) + ($170))|0;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $171;$y$1$i = $y$0$i;
          } else {
           $172 = ($163|0)<(0);
           $173 = ($165>>>0)<(14);
           $174 = ($163|0)==(0);
           $175 = $174 & $173;
           $176 = $172 | $175;
           if ($176) {
            $177 = (+($d$0$i|0));
            $178 = $scale$0$i * 0.0625;
            $179 = $178 * $177;
            $180 = $y$0$i + $179;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $178;$x$1$i = $x$0$i;$y$1$i = $180;
            break;
           }
           $181 = ($d$0$i|0)==(0);
           $182 = ($gottail$0$i|0)!=(0);
           $or$cond$i = $182 | $181;
           if ($or$cond$i) {
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
           } else {
            $183 = $scale$0$i * 0.5;
            $184 = $y$0$i + $183;
            $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $184;
           }
          }
         } while(0);
         $185 = (_i64Add(($165|0),($163|0),1,0)|0);
         $186 = tempRet0;
         $725 = $723;$726 = $724;$727 = $185;$728 = $186;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
        }
        $187 = HEAP32[$0>>2]|0;
        $188 = HEAP32[$1>>2]|0;
        $189 = ($187>>>0)<($188>>>0);
        if ($189) {
         $190 = (($187) + 1|0);
         HEAP32[$0>>2] = $190;
         $191 = HEAP8[$187>>0]|0;
         $192 = $191&255;
         $c$2$i$be = $192;
        } else {
         $193 = (___shgetc($f)|0);
         $c$2$i$be = $193;
        }
        $163 = $728;$165 = $727;$723 = $725;$724 = $726;$c$2$i = $c$2$i$be;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
       }
       $194 = ($gotdig$2$i$lcssa|0)==(0);
       if ($194) {
        $195 = HEAP32[$1>>2]|0;
        $196 = ($195|0)==(0|0);
        if (!($196)) {
         $197 = HEAP32[$0>>2]|0;
         $198 = (($197) + -1|0);
         HEAP32[$0>>2] = $198;
        }
        $199 = ($pok|0)==(0);
        if ($199) {
         ___shlim($f,0);
        } else {
         if (!($196)) {
          $200 = HEAP32[$0>>2]|0;
          $201 = (($200) + -1|0);
          HEAP32[$0>>2] = $201;
          $202 = ($gotrad$0$i$lcssa|0)==(0);
          if (!($202)) {
           $203 = (($200) + -2|0);
           HEAP32[$0>>2] = $203;
          }
         }
        }
        $204 = (+($sign$0|0));
        $205 = $204 * 0.0;
        $$0 = $205;
        STACKTOP = sp;return (+$$0);
       }
       $206 = ($gotrad$0$i$lcssa|0)==(0);
       $209 = $206 ? $208 : $207;
       $212 = $206 ? $211 : $210;
       $213 = ($211|0)<(0);
       $214 = ($208>>>0)<(8);
       $215 = ($211|0)==(0);
       $216 = $215 & $214;
       $217 = $213 | $216;
       if ($217) {
        $219 = $208;$220 = $211;$x$325$i = $x$0$i$lcssa;
        while(1) {
         $218 = $x$325$i << 4;
         $221 = (_i64Add(($219|0),($220|0),1,0)|0);
         $222 = tempRet0;
         $223 = ($222|0)<(0);
         $224 = ($221>>>0)<(8);
         $225 = ($222|0)==(0);
         $226 = $225 & $224;
         $227 = $223 | $226;
         if ($227) {
          $219 = $221;$220 = $222;$x$325$i = $218;
         } else {
          $$lcssa190 = $218;
          break;
         }
        }
        $x$3$lcssa$i = $$lcssa190;
       } else {
        $x$3$lcssa$i = $x$0$i$lcssa;
       }
       $228 = $c$2$lcssa$i | 32;
       $229 = ($228|0)==(112);
       do {
        if ($229) {
         $230 = (_scanexp($f,$pok)|0);
         $231 = tempRet0;
         $232 = ($230|0)==(0);
         $233 = ($231|0)==(-2147483648);
         $234 = $232 & $233;
         if ($234) {
          $235 = ($pok|0)==(0);
          if ($235) {
           ___shlim($f,0);
           $$0 = 0.0;
           STACKTOP = sp;return (+$$0);
          } else {
           $236 = HEAP32[$1>>2]|0;
           $237 = ($236|0)==(0|0);
           if ($237) {
            $248 = 0;$249 = 0;
            break;
           }
           $238 = HEAP32[$0>>2]|0;
           $239 = (($238) + -1|0);
           HEAP32[$0>>2] = $239;
           $248 = 0;$249 = 0;
           break;
          }
         } else {
          $248 = $230;$249 = $231;
         }
        } else {
         $240 = HEAP32[$1>>2]|0;
         $241 = ($240|0)==(0|0);
         if ($241) {
          $248 = 0;$249 = 0;
         } else {
          $242 = HEAP32[$0>>2]|0;
          $243 = (($242) + -1|0);
          HEAP32[$0>>2] = $243;
          $248 = 0;$249 = 0;
         }
        }
       } while(0);
       $244 = (_bitshift64Shl(($209|0),($212|0),2)|0);
       $245 = tempRet0;
       $246 = (_i64Add(($244|0),($245|0),-32,-1)|0);
       $247 = tempRet0;
       $250 = (_i64Add(($246|0),($247|0),($248|0),($249|0))|0);
       $251 = tempRet0;
       $252 = ($x$3$lcssa$i|0)==(0);
       if ($252) {
        $253 = (+($sign$0|0));
        $254 = $253 * 0.0;
        $$0 = $254;
        STACKTOP = sp;return (+$$0);
       }
       $255 = (0 - ($emin$0$ph))|0;
       $256 = ($251|0)>(0);
       $257 = ($250>>>0)>($255>>>0);
       $258 = ($251|0)==(0);
       $259 = $258 & $257;
       $260 = $256 | $259;
       if ($260) {
        $261 = (___errno_location()|0);
        HEAP32[$261>>2] = 34;
        $262 = (+($sign$0|0));
        $263 = $262 * 1.7976931348623157E+308;
        $264 = $263 * 1.7976931348623157E+308;
        $$0 = $264;
        STACKTOP = sp;return (+$$0);
       }
       $265 = (($emin$0$ph) + -106)|0;
       $266 = ($265|0)<(0);
       $267 = $266 << 31 >> 31;
       $268 = ($251|0)<($267|0);
       $269 = ($250>>>0)<($265>>>0);
       $270 = ($251|0)==($267|0);
       $271 = $270 & $269;
       $272 = $268 | $271;
       if ($272) {
        $274 = (___errno_location()|0);
        HEAP32[$274>>2] = 34;
        $275 = (+($sign$0|0));
        $276 = $275 * 2.2250738585072014E-308;
        $277 = $276 * 2.2250738585072014E-308;
        $$0 = $277;
        STACKTOP = sp;return (+$$0);
       }
       $273 = ($x$3$lcssa$i|0)>(-1);
       if ($273) {
        $282 = $250;$283 = $251;$x$420$i = $x$3$lcssa$i;$y$321$i = $y$0$i$lcssa;
        while(1) {
         $278 = !($y$321$i >= 0.5);
         $279 = $x$420$i << 1;
         if ($278) {
          $$pn$i = $y$321$i;$x$5$i = $279;
         } else {
          $280 = $279 | 1;
          $281 = $y$321$i + -1.0;
          $$pn$i = $281;$x$5$i = $280;
         }
         $y$4$i = $y$321$i + $$pn$i;
         $284 = (_i64Add(($282|0),($283|0),-1,-1)|0);
         $285 = tempRet0;
         $286 = ($x$5$i|0)>(-1);
         if ($286) {
          $282 = $284;$283 = $285;$x$420$i = $x$5$i;$y$321$i = $y$4$i;
         } else {
          $729 = $284;$730 = $285;$x$5$i$lcssa = $x$5$i;$y$4$i$lcssa = $y$4$i;
          break;
         }
        }
        $291 = $729;$292 = $730;$x$4$lcssa$i = $x$5$i$lcssa;$y$3$lcssa$i = $y$4$i$lcssa;
       } else {
        $291 = $250;$292 = $251;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
       }
       $287 = ($emin$0$ph|0)<(0);
       $288 = $287 << 31 >> 31;
       $289 = (_i64Subtract(32,0,($emin$0$ph|0),($288|0))|0);
       $290 = tempRet0;
       $293 = (_i64Add(($291|0),($292|0),($289|0),($290|0))|0);
       $294 = tempRet0;
       $295 = (0)>($294|0);
       $296 = ($bits$0$ph>>>0)>($293>>>0);
       $297 = (0)==($294|0);
       $298 = $297 & $296;
       $299 = $295 | $298;
       if ($299) {
        $300 = ($293|0)<(0);
        if ($300) {
         $$0711$i = 0;
         label = 139;
        } else {
         $$07$i = $293;
         label = 137;
        }
       } else {
        $$07$i = $bits$0$ph;
        label = 137;
       }
       do {
        if ((label|0) == 137) {
         $301 = ($$07$i|0)<(53);
         if ($301) {
          $$0711$i = $$07$i;
          label = 139;
          break;
         }
         $$pre$i = (+($sign$0|0));
         $$0712$i = $$07$i;$$pre$phi$iZ2D = $$pre$i;$bias$0$i = 0.0;
        }
       } while(0);
       if ((label|0) == 139) {
        $302 = (84 - ($$0711$i))|0;
        $303 = (+_scalbn(1.0,$302));
        $304 = (+($sign$0|0));
        $305 = (+_copysignl($303,$304));
        $$0712$i = $$0711$i;$$pre$phi$iZ2D = $304;$bias$0$i = $305;
       }
       $306 = ($$0712$i|0)<(32);
       $307 = $y$3$lcssa$i != 0.0;
       $or$cond4$i = $307 & $306;
       $308 = $x$4$lcssa$i & 1;
       $309 = ($308|0)==(0);
       $or$cond9$i = $309 & $or$cond4$i;
       $310 = $or$cond9$i&1;
       $x$6$i = (($310) + ($x$4$lcssa$i))|0;
       $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
       $311 = (+($x$6$i>>>0));
       $312 = $$pre$phi$iZ2D * $311;
       $313 = $bias$0$i + $312;
       $314 = $$pre$phi$iZ2D * $y$5$i;
       $315 = $314 + $313;
       $316 = $315 - $bias$0$i;
       $317 = $316 != 0.0;
       if (!($317)) {
        $318 = (___errno_location()|0);
        HEAP32[$318>>2] = 34;
       }
       $319 = (+_scalbnl($316,$291));
       $$0 = $319;
       STACKTOP = sp;return (+$$0);
      } else {
       $c$6 = $c$1$lcssa;
      }
     } while(0);
     $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
     $324 = (0 - ($sum$i))|0;
     $$012$i = $c$6;$gotdig$0$i12 = 0;
     while(1) {
      if ((($$012$i|0) == 46)) {
       $gotdig$0$i12$lcssa230 = $gotdig$0$i12;
       label = 151;
       break;
      } else if (!((($$012$i|0) == 48))) {
       $$012$i$lcssa = $$012$i;$gotdig$0$i12$lcssa = $gotdig$0$i12;
       label = 161;
       break;
      }
      $325 = HEAP32[$0>>2]|0;
      $326 = HEAP32[$1>>2]|0;
      $327 = ($325>>>0)<($326>>>0);
      if ($327) {
       $328 = (($325) + 1|0);
       HEAP32[$0>>2] = $328;
       $329 = HEAP8[$325>>0]|0;
       $330 = $329&255;
       $$012$i$be = $330;
      } else {
       $331 = (___shgetc($f)|0);
       $$012$i$be = $331;
      }
      $$012$i = $$012$i$be;$gotdig$0$i12 = 1;
     }
     if ((label|0) == 151) {
      $332 = HEAP32[$0>>2]|0;
      $333 = HEAP32[$1>>2]|0;
      $334 = ($332>>>0)<($333>>>0);
      if ($334) {
       $335 = (($332) + 1|0);
       HEAP32[$0>>2] = $335;
       $336 = HEAP8[$332>>0]|0;
       $337 = $336&255;
       $$1$ph$i = $337;
      } else {
       $338 = (___shgetc($f)|0);
       $$1$ph$i = $338;
      }
      $339 = ($$1$ph$i|0)==(48);
      if ($339) {
       $340 = 0;$341 = 0;
       while(1) {
        $342 = (_i64Add(($340|0),($341|0),-1,-1)|0);
        $343 = tempRet0;
        $344 = HEAP32[$0>>2]|0;
        $345 = HEAP32[$1>>2]|0;
        $346 = ($344>>>0)<($345>>>0);
        if ($346) {
         $347 = (($344) + 1|0);
         HEAP32[$0>>2] = $347;
         $348 = HEAP8[$344>>0]|0;
         $349 = $348&255;
         $$1$be$i = $349;
        } else {
         $350 = (___shgetc($f)|0);
         $$1$be$i = $350;
        }
        $351 = ($$1$be$i|0)==(48);
        if ($351) {
         $340 = $342;$341 = $343;
        } else {
         $$1$be$i$lcssa = $$1$be$i;$733 = $342;$734 = $343;
         break;
        }
       }
       $$2$i = $$1$be$i$lcssa;$731 = $733;$732 = $734;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
      } else {
       $$2$i = $$1$ph$i;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa230;$gotrad$0$i14 = 1;
      }
     }
     else if ((label|0) == 161) {
      $$2$i = $$012$i$lcssa;$731 = 0;$732 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa;$gotrad$0$i14 = 0;
     }
     HEAP32[$x$i>>2] = 0;
     $352 = (($$2$i) + -48)|0;
     $353 = ($352>>>0)<(10);
     $354 = ($$2$i|0)==(46);
     $or$cond11123$i = $354 | $353;
     do {
      if ($or$cond11123$i) {
       $355 = (($x$i) + 496|0);
       $$3131$i = $$2$i;$358 = 0;$359 = 0;$735 = $354;$736 = $352;$737 = $731;$738 = $732;$gotdig$3127$i = $gotdig$2$i13;$gotrad$1128$i = $gotrad$0$i14;$j$0130$i = 0;$k$0129$i = 0;$lnz$0126$i = 0;
       L237: while(1) {
        do {
         if ($735) {
          $cond$i = ($gotrad$1128$i|0)==(0);
          if ($cond$i) {
           $739 = $358;$740 = $359;$741 = $358;$742 = $359;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = 1;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
          } else {
           $743 = $737;$744 = $738;$745 = $358;$746 = $359;$gotdig$3127$i$lcssa = $gotdig$3127$i;$j$0130$i$lcssa = $j$0130$i;$k$0129$i$lcssa = $k$0129$i;$lnz$0126$i$lcssa = $lnz$0126$i;
           label = 166;
           break L237;
          }
         } else {
          $357 = ($k$0129$i|0)<(125);
          $360 = (_i64Add(($358|0),($359|0),1,0)|0);
          $361 = tempRet0;
          $362 = ($$3131$i|0)!=(48);
          if (!($357)) {
           if (!($362)) {
            $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
            break;
           }
           $372 = HEAP32[$355>>2]|0;
           $373 = $372 | 1;
           HEAP32[$355>>2] = $373;
           $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = $gotdig$3127$i;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $j$0130$i;$k$2$i = $k$0129$i;$lnz$2$i = $lnz$0126$i;
           break;
          }
          $$lnz$0$i = $362 ? $360 : $lnz$0126$i;
          $363 = ($j$0130$i|0)==(0);
          $364 = (($x$i) + ($k$0129$i<<2)|0);
          if ($363) {
           $storemerge$i = $736;
          } else {
           $365 = HEAP32[$364>>2]|0;
           $366 = ($365*10)|0;
           $367 = (($$3131$i) + -48)|0;
           $368 = (($367) + ($366))|0;
           $storemerge$i = $368;
          }
          HEAP32[$364>>2] = $storemerge$i;
          $369 = (($j$0130$i) + 1)|0;
          $370 = ($369|0)==(9);
          $371 = $370&1;
          $$k$0$i = (($371) + ($k$0129$i))|0;
          $$14$i = $370 ? 0 : $369;
          $739 = $737;$740 = $738;$741 = $360;$742 = $361;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1128$i;$j$2$i = $$14$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
         }
        } while(0);
        $374 = HEAP32[$0>>2]|0;
        $375 = HEAP32[$1>>2]|0;
        $376 = ($374>>>0)<($375>>>0);
        if ($376) {
         $377 = (($374) + 1|0);
         HEAP32[$0>>2] = $377;
         $378 = HEAP8[$374>>0]|0;
         $379 = $378&255;
         $$3$be$i = $379;
        } else {
         $380 = (___shgetc($f)|0);
         $$3$be$i = $380;
        }
        $381 = (($$3$be$i) + -48)|0;
        $382 = ($381>>>0)<(10);
        $383 = ($$3$be$i|0)==(46);
        $or$cond11$i = $383 | $382;
        if ($or$cond11$i) {
         $$3131$i = $$3$be$i;$358 = $741;$359 = $742;$735 = $383;$736 = $381;$737 = $739;$738 = $740;$gotdig$3127$i = $gotdig$4$i;$gotrad$1128$i = $gotrad$2$i;$j$0130$i = $j$2$i;$k$0129$i = $k$2$i;$lnz$0126$i = $lnz$2$i;
        } else {
         $$3$be$i$lcssa = $$3$be$i;$752 = $741;$753 = $742;$754 = $739;$755 = $740;$gotdig$4$i$lcssa = $gotdig$4$i;$gotrad$2$i$lcssa = $gotrad$2$i;$j$2$i$lcssa = $j$2$i;$k$2$i$lcssa = $k$2$i;$lnz$2$i$lcssa = $lnz$2$i;
         label = 177;
         break;
        }
       }
       if ((label|0) == 166) {
        $356 = ($gotdig$3127$i$lcssa|0)!=(0);
        $747 = $745;$748 = $746;$749 = $743;$750 = $744;$751 = $356;$j$078$i = $j$0130$i$lcssa;$k$074$i = $k$0129$i$lcssa;$lnz$068$i = $lnz$0126$i$lcssa;
        label = 186;
        break;
       }
       else if ((label|0) == 177) {
        $$3$lcssa$i = $$3$be$i$lcssa;$385 = $754;$386 = $752;$388 = $755;$389 = $753;$gotdig$3$lcssa$i = $gotdig$4$i$lcssa;$gotrad$1$lcssa$i = $gotrad$2$i$lcssa;$j$0$lcssa$i = $j$2$i$lcssa;$k$0$lcssa$i = $k$2$i$lcssa;$lnz$0$lcssa$i = $lnz$2$i$lcssa;
        label = 178;
        break;
       }
      } else {
       $$3$lcssa$i = $$2$i;$385 = $731;$386 = 0;$388 = $732;$389 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
       label = 178;
      }
     } while(0);
     do {
      if ((label|0) == 178) {
       $384 = ($gotrad$1$lcssa$i|0)==(0);
       $387 = $384 ? $386 : $385;
       $390 = $384 ? $389 : $388;
       $391 = ($gotdig$3$lcssa$i|0)!=(0);
       $392 = $$3$lcssa$i | 32;
       $393 = ($392|0)==(101);
       $or$cond16$i = $393 & $391;
       if (!($or$cond16$i)) {
        $408 = ($$3$lcssa$i|0)>(-1);
        if ($408) {
         $747 = $386;$748 = $389;$749 = $387;$750 = $390;$751 = $391;$j$078$i = $j$0$lcssa$i;$k$074$i = $k$0$lcssa$i;$lnz$068$i = $lnz$0$lcssa$i;
         label = 186;
         break;
        } else {
         $756 = $386;$757 = $389;$758 = $391;$759 = $387;$760 = $390;$j$077$i = $j$0$lcssa$i;$k$073$i = $k$0$lcssa$i;$lnz$067$i = $lnz$0$lcssa$i;
         label = 188;
         break;
        }
       }
       $394 = (_scanexp($f,$pok)|0);
       $395 = tempRet0;
       $396 = ($394|0)==(0);
       $397 = ($395|0)==(-2147483648);
       $398 = $396 & $397;
       if ($398) {
        $399 = ($pok|0)==(0);
        if ($399) {
         ___shlim($f,0);
         $$0$i27 = 0.0;
         break;
        }
        $400 = HEAP32[$1>>2]|0;
        $401 = ($400|0)==(0|0);
        if ($401) {
         $404 = 0;$405 = 0;
        } else {
         $402 = HEAP32[$0>>2]|0;
         $403 = (($402) + -1|0);
         HEAP32[$0>>2] = $403;
         $404 = 0;$405 = 0;
        }
       } else {
        $404 = $394;$405 = $395;
       }
       $406 = (_i64Add(($404|0),($405|0),($387|0),($390|0))|0);
       $407 = tempRet0;
       $418 = $406;$420 = $386;$421 = $407;$423 = $389;$j$076$i = $j$0$lcssa$i;$k$072$i = $k$0$lcssa$i;$lnz$066$i = $lnz$0$lcssa$i;
       label = 190;
      }
     } while(0);
     if ((label|0) == 186) {
      $409 = HEAP32[$1>>2]|0;
      $410 = ($409|0)==(0|0);
      if ($410) {
       $756 = $747;$757 = $748;$758 = $751;$759 = $749;$760 = $750;$j$077$i = $j$078$i;$k$073$i = $k$074$i;$lnz$067$i = $lnz$068$i;
       label = 188;
      } else {
       $411 = HEAP32[$0>>2]|0;
       $412 = (($411) + -1|0);
       HEAP32[$0>>2] = $412;
       if ($751) {
        $418 = $749;$420 = $747;$421 = $750;$423 = $748;$j$076$i = $j$078$i;$k$072$i = $k$074$i;$lnz$066$i = $lnz$068$i;
        label = 190;
       } else {
        label = 189;
       }
      }
     }
     if ((label|0) == 188) {
      if ($758) {
       $418 = $759;$420 = $756;$421 = $760;$423 = $757;$j$076$i = $j$077$i;$k$072$i = $k$073$i;$lnz$066$i = $lnz$067$i;
       label = 190;
      } else {
       label = 189;
      }
     }
     do {
      if ((label|0) == 189) {
       $413 = (___errno_location()|0);
       HEAP32[$413>>2] = 22;
       ___shlim($f,0);
       $$0$i27 = 0.0;
      }
      else if ((label|0) == 190) {
       $414 = HEAP32[$x$i>>2]|0;
       $415 = ($414|0)==(0);
       if ($415) {
        $416 = (+($sign$0|0));
        $417 = $416 * 0.0;
        $$0$i27 = $417;
        break;
       }
       $419 = ($418|0)==($420|0);
       $422 = ($421|0)==($423|0);
       $424 = $419 & $422;
       $425 = ($423|0)<(0);
       $426 = ($420>>>0)<(10);
       $427 = ($423|0)==(0);
       $428 = $427 & $426;
       $429 = $425 | $428;
       $or$cond$i17 = $429 & $424;
       if ($or$cond$i17) {
        $430 = ($bits$0$ph>>>0)>(30);
        $431 = $414 >>> $bits$0$ph;
        $432 = ($431|0)==(0);
        $or$cond18$i = $430 | $432;
        if ($or$cond18$i) {
         $433 = (+($sign$0|0));
         $434 = (+($414>>>0));
         $435 = $433 * $434;
         $$0$i27 = $435;
         break;
        }
       }
       $436 = (($emin$0$ph|0) / -2)&-1;
       $437 = ($436|0)<(0);
       $438 = $437 << 31 >> 31;
       $439 = ($421|0)>($438|0);
       $440 = ($418>>>0)>($436>>>0);
       $441 = ($421|0)==($438|0);
       $442 = $441 & $440;
       $443 = $439 | $442;
       if ($443) {
        $444 = (___errno_location()|0);
        HEAP32[$444>>2] = 34;
        $445 = (+($sign$0|0));
        $446 = $445 * 1.7976931348623157E+308;
        $447 = $446 * 1.7976931348623157E+308;
        $$0$i27 = $447;
        break;
       }
       $448 = (($emin$0$ph) + -106)|0;
       $449 = ($448|0)<(0);
       $450 = $449 << 31 >> 31;
       $451 = ($421|0)<($450|0);
       $452 = ($418>>>0)<($448>>>0);
       $453 = ($421|0)==($450|0);
       $454 = $453 & $452;
       $455 = $451 | $454;
       if ($455) {
        $456 = (___errno_location()|0);
        HEAP32[$456>>2] = 34;
        $457 = (+($sign$0|0));
        $458 = $457 * 2.2250738585072014E-308;
        $459 = $458 * 2.2250738585072014E-308;
        $$0$i27 = $459;
        break;
       }
       $460 = ($j$076$i|0)==(0);
       if ($460) {
        $k$3$i = $k$072$i;
       } else {
        $461 = ($j$076$i|0)<(9);
        if ($461) {
         $462 = (($x$i) + ($k$072$i<<2)|0);
         $$promoted$i = HEAP32[$462>>2]|0;
         $464 = $$promoted$i;$j$3119$i = $j$076$i;
         while(1) {
          $463 = ($464*10)|0;
          $465 = (($j$3119$i) + 1)|0;
          $exitcond175$i = ($j$3119$i|0)==(8);
          if ($exitcond175$i) {
           $$lcssa222 = $463;
           break;
          } else {
           $464 = $463;$j$3119$i = $465;
          }
         }
         HEAP32[$462>>2] = $$lcssa222;
        }
        $466 = (($k$072$i) + 1)|0;
        $k$3$i = $466;
       }
       $467 = ($lnz$066$i|0)<(9);
       if ($467) {
        $468 = ($lnz$066$i|0)<=($418|0);
        $469 = ($418|0)<(18);
        $or$cond3$i = $468 & $469;
        if ($or$cond3$i) {
         $470 = ($418|0)==(9);
         if ($470) {
          $471 = (+($sign$0|0));
          $472 = HEAP32[$x$i>>2]|0;
          $473 = (+($472>>>0));
          $474 = $471 * $473;
          $$0$i27 = $474;
          break;
         }
         $475 = ($418|0)<(9);
         if ($475) {
          $476 = (+($sign$0|0));
          $477 = HEAP32[$x$i>>2]|0;
          $478 = (+($477>>>0));
          $479 = $476 * $478;
          $480 = (8 - ($418))|0;
          $481 = (3928 + ($480<<2)|0);
          $482 = HEAP32[$481>>2]|0;
          $483 = (+($482|0));
          $484 = $479 / $483;
          $$0$i27 = $484;
          break;
         }
         $$neg41$i = (($bits$0$ph) + 27)|0;
         $485 = Math_imul($418, -3)|0;
         $486 = (($$neg41$i) + ($485))|0;
         $487 = ($486|0)>(30);
         $$pre$i18 = HEAP32[$x$i>>2]|0;
         $488 = $$pre$i18 >>> $486;
         $489 = ($488|0)==(0);
         $or$cond191$i = $487 | $489;
         if ($or$cond191$i) {
          $490 = (+($sign$0|0));
          $491 = (+($$pre$i18>>>0));
          $492 = $490 * $491;
          $493 = (($418) + -10)|0;
          $494 = (3928 + ($493<<2)|0);
          $495 = HEAP32[$494>>2]|0;
          $496 = (+($495|0));
          $497 = $492 * $496;
          $$0$i27 = $497;
          break;
         }
        }
       }
       $498 = (($418|0) % 9)&-1;
       $499 = ($498|0)==(0);
       if ($499) {
        $a$2$ph47$i$ph = 0;$rp$2$ph45$i$ph = $418;$z$1$ph46$i$ph = $k$3$i;
       } else {
        $500 = ($418|0)>(-1);
        $501 = (($498) + 9)|0;
        $502 = $500 ? $498 : $501;
        $503 = (8 - ($502))|0;
        $504 = (3928 + ($503<<2)|0);
        $505 = HEAP32[$504>>2]|0;
        $506 = ($k$3$i|0)==(0);
        if ($506) {
         $a$0$lcssa186$i = 0;$rp$0$lcssa187$i = $418;$z$0$i = 0;
        } else {
         $507 = (1000000000 / ($505|0))&-1;
         $a$0110$i = 0;$carry$0112$i = 0;$k$4111$i = 0;$rp$0109$i = $418;
         while(1) {
          $508 = (($x$i) + ($k$4111$i<<2)|0);
          $509 = HEAP32[$508>>2]|0;
          $510 = (($509>>>0) % ($505>>>0))&-1;
          $511 = (($509>>>0) / ($505>>>0))&-1;
          $512 = (($511) + ($carry$0112$i))|0;
          HEAP32[$508>>2] = $512;
          $513 = Math_imul($510, $507)|0;
          $514 = ($k$4111$i|0)==($a$0110$i|0);
          $515 = ($512|0)==(0);
          $or$cond19$i = $514 & $515;
          $516 = (($k$4111$i) + 1)|0;
          if ($or$cond19$i) {
           $517 = $516 & 127;
           $518 = (($rp$0109$i) + -9)|0;
           $a$1$i = $517;$rp$1$i19 = $518;
          } else {
           $a$1$i = $a$0110$i;$rp$1$i19 = $rp$0109$i;
          }
          $519 = ($516|0)==($k$3$i|0);
          if ($519) {
           $$lcssa221 = $513;$a$1$i$lcssa = $a$1$i;$rp$1$i19$lcssa = $rp$1$i19;
           break;
          } else {
           $a$0110$i = $a$1$i;$carry$0112$i = $513;$k$4111$i = $516;$rp$0109$i = $rp$1$i19;
          }
         }
         $520 = ($$lcssa221|0)==(0);
         if ($520) {
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $k$3$i;
         } else {
          $521 = (($k$3$i) + 1)|0;
          $522 = (($x$i) + ($k$3$i<<2)|0);
          HEAP32[$522>>2] = $$lcssa221;
          $a$0$lcssa186$i = $a$1$i$lcssa;$rp$0$lcssa187$i = $rp$1$i19$lcssa;$z$0$i = $521;
         }
        }
        $523 = (9 - ($502))|0;
        $524 = (($523) + ($rp$0$lcssa187$i))|0;
        $a$2$ph47$i$ph = $a$0$lcssa186$i;$rp$2$ph45$i$ph = $524;$z$1$ph46$i$ph = $z$0$i;
       }
       $a$2$ph47$i = $a$2$ph47$i$ph;$e2$0$ph$i = 0;$rp$2$ph45$i = $rp$2$ph45$i$ph;$z$1$ph46$i = $z$1$ph46$i$ph;
       L323: while(1) {
        $525 = ($rp$2$ph45$i|0)<(18);
        $526 = (($x$i) + ($a$2$ph47$i<<2)|0);
        if ($525) {
         $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph46$i;
         while(1) {
          $528 = (($z$1$us$i) + 127)|0;
          $carry1$0$us$i = 0;$k$5$in$us$i = $528;$z$2$us$i = $z$1$us$i;
          while(1) {
           $k$5$us$i = $k$5$in$us$i & 127;
           $529 = (($x$i) + ($k$5$us$i<<2)|0);
           $530 = HEAP32[$529>>2]|0;
           $531 = (_bitshift64Shl(($530|0),0,29)|0);
           $532 = tempRet0;
           $533 = (_i64Add(($531|0),($532|0),($carry1$0$us$i|0),0)|0);
           $534 = tempRet0;
           $535 = ($534>>>0)>(0);
           $536 = ($533>>>0)>(1000000000);
           $537 = ($534|0)==(0);
           $538 = $537 & $536;
           $539 = $535 | $538;
           if ($539) {
            $540 = (___udivdi3(($533|0),($534|0),1000000000,0)|0);
            $541 = tempRet0;
            $542 = (___uremdi3(($533|0),($534|0),1000000000,0)|0);
            $543 = tempRet0;
            $$sink$off0$us$i = $542;$carry1$1$us$i = $540;
           } else {
            $$sink$off0$us$i = $533;$carry1$1$us$i = 0;
           }
           HEAP32[$529>>2] = $$sink$off0$us$i;
           $544 = (($z$2$us$i) + 127)|0;
           $545 = $544 & 127;
           $546 = ($k$5$us$i|0)!=($545|0);
           $547 = ($k$5$us$i|0)==($a$2$ph47$i|0);
           $or$cond20$us$i = $546 | $547;
           if ($or$cond20$us$i) {
            $z$3$us$i = $z$2$us$i;
           } else {
            $548 = ($$sink$off0$us$i|0)==(0);
            $k$5$z$2$us$i = $548 ? $k$5$us$i : $z$2$us$i;
            $z$3$us$i = $k$5$z$2$us$i;
           }
           $549 = (($k$5$us$i) + -1)|0;
           if ($547) {
            $carry1$1$us$i$lcssa = $carry1$1$us$i;$z$3$us$i$lcssa = $z$3$us$i;
            break;
           } else {
            $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $549;$z$2$us$i = $z$3$us$i;
           }
          }
          $550 = (($e2$0$us$i) + -29)|0;
          $551 = ($carry1$1$us$i$lcssa|0)==(0);
          if ($551) {
           $e2$0$us$i = $550;$z$1$us$i = $z$3$us$i$lcssa;
          } else {
           $$lcssa215 = $550;$carry1$1$us$i$lcssa$lcssa = $carry1$1$us$i$lcssa;$z$3$us$i$lcssa$lcssa = $z$3$us$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa215;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us$i$lcssa$lcssa;
        } else {
         $527 = ($rp$2$ph45$i|0)==(18);
         if (!($527)) {
          $a$2$ph47$i$lcssa = $a$2$ph47$i;$e2$0$ph$i$lcssa = $e2$0$ph$i;$rp$2$ph45$i$lcssa = $rp$2$ph45$i;$z$1$ph46$i$lcssa = $z$1$ph46$i;
          label = 236;
          break;
         }
         $e2$0$us93$i = $e2$0$ph$i;$z$1$us94$i = $z$1$ph46$i;
         while(1) {
          $552 = HEAP32[$526>>2]|0;
          $553 = ($552>>>0)<(9007199);
          if (!($553)) {
           $a$2$ph47$i$lcssa219 = $a$2$ph47$i;$e2$0$us93$i$lcssa = $e2$0$us93$i;$z$1$us94$i$lcssa = $z$1$us94$i;
           label = 235;
           break L323;
          }
          $554 = (($z$1$us94$i) + 127)|0;
          $carry1$0$us98$i = 0;$k$5$in$us97$i = $554;$z$2$us96$i = $z$1$us94$i;
          while(1) {
           $k$5$us99$i = $k$5$in$us97$i & 127;
           $555 = (($x$i) + ($k$5$us99$i<<2)|0);
           $556 = HEAP32[$555>>2]|0;
           $557 = (_bitshift64Shl(($556|0),0,29)|0);
           $558 = tempRet0;
           $559 = (_i64Add(($557|0),($558|0),($carry1$0$us98$i|0),0)|0);
           $560 = tempRet0;
           $561 = ($560>>>0)>(0);
           $562 = ($559>>>0)>(1000000000);
           $563 = ($560|0)==(0);
           $564 = $563 & $562;
           $565 = $561 | $564;
           if ($565) {
            $566 = (___udivdi3(($559|0),($560|0),1000000000,0)|0);
            $567 = tempRet0;
            $568 = (___uremdi3(($559|0),($560|0),1000000000,0)|0);
            $569 = tempRet0;
            $$sink$off0$us102$i = $568;$carry1$1$us103$i = $566;
           } else {
            $$sink$off0$us102$i = $559;$carry1$1$us103$i = 0;
           }
           HEAP32[$555>>2] = $$sink$off0$us102$i;
           $570 = (($z$2$us96$i) + 127)|0;
           $571 = $570 & 127;
           $572 = ($k$5$us99$i|0)!=($571|0);
           $573 = ($k$5$us99$i|0)==($a$2$ph47$i|0);
           $or$cond20$us104$i = $572 | $573;
           if ($or$cond20$us104$i) {
            $z$3$us106$i = $z$2$us96$i;
           } else {
            $574 = ($$sink$off0$us102$i|0)==(0);
            $k$5$z$2$us105$i = $574 ? $k$5$us99$i : $z$2$us96$i;
            $z$3$us106$i = $k$5$z$2$us105$i;
           }
           $575 = (($k$5$us99$i) + -1)|0;
           if ($573) {
            $carry1$1$us103$i$lcssa = $carry1$1$us103$i;$z$3$us106$i$lcssa = $z$3$us106$i;
            break;
           } else {
            $carry1$0$us98$i = $carry1$1$us103$i;$k$5$in$us97$i = $575;$z$2$us96$i = $z$3$us106$i;
           }
          }
          $576 = (($e2$0$us93$i) + -29)|0;
          $577 = ($carry1$1$us103$i$lcssa|0)==(0);
          if ($577) {
           $e2$0$us93$i = $576;$z$1$us94$i = $z$3$us106$i$lcssa;
          } else {
           $$lcssa214 = $576;$carry1$1$us103$i$lcssa$lcssa = $carry1$1$us103$i$lcssa;$z$3$us106$i$lcssa$lcssa = $z$3$us106$i$lcssa;
           break;
          }
         }
         $$lcssa59$i = $$lcssa214;$carry1$1$lcssa$lcssa$i = $carry1$1$us103$i$lcssa$lcssa;$z$3$lcssa$lcssa$i = $z$3$us106$i$lcssa$lcssa;
        }
        $578 = (($rp$2$ph45$i) + 9)|0;
        $579 = (($a$2$ph47$i) + 127)|0;
        $580 = $579 & 127;
        $581 = ($580|0)==($z$3$lcssa$lcssa$i|0);
        if ($581) {
         $582 = (($z$3$lcssa$lcssa$i) + 127)|0;
         $583 = $582 & 127;
         $584 = (($x$i) + ($583<<2)|0);
         $585 = HEAP32[$584>>2]|0;
         $586 = (($z$3$lcssa$lcssa$i) + 126)|0;
         $587 = $586 & 127;
         $588 = (($x$i) + ($587<<2)|0);
         $589 = HEAP32[$588>>2]|0;
         $590 = $589 | $585;
         HEAP32[$588>>2] = $590;
         $z$4$i = $583;
        } else {
         $z$4$i = $z$3$lcssa$lcssa$i;
        }
        $591 = (($x$i) + ($580<<2)|0);
        HEAP32[$591>>2] = $carry1$1$lcssa$lcssa$i;
        $a$2$ph47$i = $580;$e2$0$ph$i = $$lcssa59$i;$rp$2$ph45$i = $578;$z$1$ph46$i = $z$4$i;
       }
       if ((label|0) == 235) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa219;$e2$1$ph$i$ph = $e2$0$us93$i$lcssa;$rp$3$ph43$i$ph = 18;$z$5$ph$i$ph = $z$1$us94$i$lcssa;
       }
       else if ((label|0) == 236) {
        $a$2$ph47$i220 = $a$2$ph47$i$lcssa;$e2$1$ph$i$ph = $e2$0$ph$i$lcssa;$rp$3$ph43$i$ph = $rp$2$ph45$i$lcssa;$z$5$ph$i$ph = $z$1$ph46$i$lcssa;
       }
       $a$3$ph$i = $a$2$ph47$i220;$e2$1$ph$i = $e2$1$ph$i$ph;$rp$3$ph43$i = $rp$3$ph43$i$ph;$z$5$ph$i = $z$5$ph$i$ph;
       L362: while(1) {
        $622 = (($z$5$ph$i) + 1)|0;
        $619 = $622 & 127;
        $623 = (($z$5$ph$i) + 127)|0;
        $624 = $623 & 127;
        $625 = (($x$i) + ($624<<2)|0);
        $a$3$i$ph = $a$3$ph$i;$e2$1$i$ph = $e2$1$ph$i;$rp$3$i$ph = $rp$3$ph43$i;
        while(1) {
         $$old$i = ($rp$3$i$ph|0)==(18);
         $626 = ($rp$3$i$ph|0)>(27);
         $$21$i = $626 ? 9 : 1;
         $a$3$i = $a$3$i$ph;$e2$1$i = $e2$1$i$ph;
         while(1) {
          $592 = $a$3$i & 127;
          $593 = ($592|0)==($z$5$ph$i|0);
          do {
           if ($593) {
            label = 254;
           } else {
            $594 = (($x$i) + ($592<<2)|0);
            $595 = HEAP32[$594>>2]|0;
            $596 = ($595>>>0)<(9007199);
            if ($596) {
             label = 254;
             break;
            }
            $597 = ($595>>>0)>(9007199);
            if ($597) {
             break;
            }
            $598 = (($a$3$i) + 1)|0;
            $599 = $598 & 127;
            $600 = ($599|0)==($z$5$ph$i|0);
            if ($600) {
             label = 254;
             break;
            }
            $706 = (($x$i) + ($599<<2)|0);
            $707 = HEAP32[$706>>2]|0;
            $708 = ($707>>>0)<(254740991);
            if ($708) {
             label = 254;
             break;
            }
            $709 = ($707>>>0)<(254740992);
            $or$cond192$i = $$old$i & $709;
            if ($or$cond192$i) {
             $$lcssa201 = $592;$a$3$i$lcssa = $a$3$i;$e2$1$i$lcssa = $e2$1$i;$z$5$ph$i$lcssa = $z$5$ph$i;
             label = 267;
             break L362;
            }
           }
          } while(0);
          if ((label|0) == 254) {
           label = 0;
           if ($$old$i) {
            $$lcssa202 = $592;$$lcssa205 = $593;$$lcssa211 = $619;$a$3$i$lcssa198 = $a$3$i;$e2$1$i$lcssa195 = $e2$1$i;$z$5$ph$i$lcssa209 = $z$5$ph$i;
            label = 255;
            break L362;
           }
          }
          $601 = (($$21$i) + ($e2$1$i))|0;
          $602 = ($a$3$i|0)==($z$5$ph$i|0);
          if ($602) {
           $a$3$i = $z$5$ph$i;$e2$1$i = $601;
          } else {
           $$lcssa207 = $601;$a$3$i$lcssa199 = $a$3$i;
           break;
          }
         }
         $603 = 1 << $$21$i;
         $604 = (($603) + -1)|0;
         $605 = 1000000000 >>> $$21$i;
         $a$487$i = $a$3$i$lcssa199;$carry3$090$i = 0;$k$688$i = $a$3$i$lcssa199;$rp$486$i = $rp$3$i$ph;
         while(1) {
          $606 = (($x$i) + ($k$688$i<<2)|0);
          $607 = HEAP32[$606>>2]|0;
          $608 = $607 & $604;
          $609 = $607 >>> $$21$i;
          $610 = (($609) + ($carry3$090$i))|0;
          HEAP32[$606>>2] = $610;
          $611 = Math_imul($608, $605)|0;
          $612 = ($k$688$i|0)==($a$487$i|0);
          $613 = ($610|0)==(0);
          $or$cond22$i = $612 & $613;
          $614 = (($k$688$i) + 1)|0;
          $615 = $614 & 127;
          $616 = (($rp$486$i) + -9)|0;
          $rp$5$i = $or$cond22$i ? $616 : $rp$486$i;
          $a$5$i = $or$cond22$i ? $615 : $a$487$i;
          $617 = ($615|0)==($z$5$ph$i|0);
          if ($617) {
           $$lcssa208 = $611;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$487$i = $a$5$i;$carry3$090$i = $611;$k$688$i = $615;$rp$486$i = $rp$5$i;
          }
         }
         $618 = ($$lcssa208|0)==(0);
         if (!($618)) {
          $620 = ($619|0)==($a$5$i$lcssa|0);
          if (!($620)) {
           $$lcssa207$lcssa = $$lcssa207;$$lcssa208$lcssa = $$lcssa208;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
           break;
          }
          $627 = HEAP32[$625>>2]|0;
          $628 = $627 | 1;
          HEAP32[$625>>2] = $628;
         }
         $a$3$i$ph = $a$5$i$lcssa;$e2$1$i$ph = $$lcssa207;$rp$3$i$ph = $rp$5$i$lcssa;
        }
        $621 = (($x$i) + ($z$5$ph$i<<2)|0);
        HEAP32[$621>>2] = $$lcssa208$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa207$lcssa;$rp$3$ph43$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $619;
       }
       if ((label|0) == 255) {
        if ($$lcssa205) {
         $629 = (($$lcssa211) + -1)|0;
         $630 = (($x$i) + ($629<<2)|0);
         HEAP32[$630>>2] = 0;
         $632 = $z$5$ph$i$lcssa209;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $$lcssa211;
        } else {
         $632 = $$lcssa202;$a$3$i200 = $a$3$i$lcssa198;$e2$1$i197 = $e2$1$i$lcssa195;$z$7$i = $z$5$ph$i$lcssa209;
        }
       }
       else if ((label|0) == 267) {
        $632 = $$lcssa201;$a$3$i200 = $a$3$i$lcssa;$e2$1$i197 = $e2$1$i$lcssa;$z$7$i = $z$5$ph$i$lcssa;
       }
       $631 = (($x$i) + ($632<<2)|0);
       $633 = HEAP32[$631>>2]|0;
       $634 = (+($633>>>0));
       $635 = (($a$3$i200) + 1)|0;
       $636 = $635 & 127;
       $637 = ($636|0)==($z$7$i|0);
       if ($637) {
        $696 = (($z$7$i) + 1)|0;
        $697 = $696 & 127;
        $698 = (($697) + -1)|0;
        $699 = (($x$i) + ($698<<2)|0);
        HEAP32[$699>>2] = 0;
        $z$7$1$i = $697;
       } else {
        $z$7$1$i = $z$7$i;
       }
       $700 = $634 * 1.0E+9;
       $701 = (($x$i) + ($636<<2)|0);
       $702 = HEAP32[$701>>2]|0;
       $703 = (+($702>>>0));
       $704 = $700 + $703;
       $661 = (+($sign$0|0));
       $643 = $661 * $704;
       $681 = (($e2$1$i197) + 53)|0;
       $638 = (($681) - ($emin$0$ph))|0;
       $705 = ($638|0)<($bits$0$ph|0);
       if ($705) {
        $639 = ($638|0)<(0);
        if ($639) {
         $$01335$i = 0;$denormal$034$i = 1;
         label = 271;
        } else {
         $$013$i = $638;$denormal$0$i = 1;
         label = 270;
        }
       } else {
        $$013$i = $bits$0$ph;$denormal$0$i = 0;
        label = 270;
       }
       if ((label|0) == 270) {
        $640 = ($$013$i|0)<(53);
        if ($640) {
         $$01335$i = $$013$i;$denormal$034$i = $denormal$0$i;
         label = 271;
        } else {
         $$01336$i = $$013$i;$bias$0$i24 = 0.0;$denormal$033$i = $denormal$0$i;$frac$0$i = 0.0;$y$1$i23 = $643;
        }
       }
       if ((label|0) == 271) {
        $641 = (105 - ($$01335$i))|0;
        $642 = (+_scalbn(1.0,$641));
        $644 = (+_copysignl($642,$643));
        $645 = (53 - ($$01335$i))|0;
        $646 = (+_scalbn(1.0,$645));
        $647 = (+_fmodl($643,$646));
        $648 = $643 - $647;
        $649 = $644 + $648;
        $$01336$i = $$01335$i;$bias$0$i24 = $644;$denormal$033$i = $denormal$034$i;$frac$0$i = $647;$y$1$i23 = $649;
       }
       $650 = (($a$3$i200) + 2)|0;
       $651 = $650 & 127;
       $652 = ($651|0)==($z$7$1$i|0);
       do {
        if ($652) {
         $frac$2$i = $frac$0$i;
        } else {
         $653 = (($x$i) + ($651<<2)|0);
         $654 = HEAP32[$653>>2]|0;
         $655 = ($654>>>0)<(500000000);
         do {
          if ($655) {
           $656 = ($654|0)==(0);
           if ($656) {
            $657 = (($a$3$i200) + 3)|0;
            $658 = $657 & 127;
            $659 = ($658|0)==($z$7$1$i|0);
            if ($659) {
             $frac$1$i = $frac$0$i;
             break;
            }
           }
           $660 = $661 * 0.25;
           $662 = $660 + $frac$0$i;
           $frac$1$i = $662;
          } else {
           $663 = ($654>>>0)>(500000000);
           if ($663) {
            $664 = $661 * 0.75;
            $665 = $664 + $frac$0$i;
            $frac$1$i = $665;
            break;
           }
           $666 = (($a$3$i200) + 3)|0;
           $667 = $666 & 127;
           $668 = ($667|0)==($z$7$1$i|0);
           if ($668) {
            $669 = $661 * 0.5;
            $670 = $669 + $frac$0$i;
            $frac$1$i = $670;
            break;
           } else {
            $671 = $661 * 0.75;
            $672 = $671 + $frac$0$i;
            $frac$1$i = $672;
            break;
           }
          }
         } while(0);
         $673 = (53 - ($$01336$i))|0;
         $674 = ($673|0)>(1);
         if (!($674)) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $675 = (+_fmodl($frac$1$i,1.0));
         $676 = $675 != 0.0;
         if ($676) {
          $frac$2$i = $frac$1$i;
          break;
         }
         $677 = $frac$1$i + 1.0;
         $frac$2$i = $677;
        }
       } while(0);
       $678 = $y$1$i23 + $frac$2$i;
       $679 = $678 - $bias$0$i24;
       $680 = $681 & 2147483647;
       $682 = (-2 - ($sum$i))|0;
       $683 = ($680|0)>($682|0);
       do {
        if ($683) {
         $684 = (+Math_abs((+$679)));
         $685 = !($684 >= 9007199254740992.0);
         if ($685) {
          $denormal$2$i = $denormal$033$i;$e2$2$i = $e2$1$i197;$y$2$i25 = $679;
         } else {
          $686 = ($denormal$033$i|0)!=(0);
          $687 = ($$01336$i|0)==($638|0);
          $or$cond23$i = $687 & $686;
          $denormal$1$i = $or$cond23$i ? 0 : $denormal$033$i;
          $688 = $679 * 0.5;
          $689 = (($e2$1$i197) + 1)|0;
          $denormal$2$i = $denormal$1$i;$e2$2$i = $689;$y$2$i25 = $688;
         }
         $690 = (($e2$2$i) + 50)|0;
         $691 = ($690|0)>($324|0);
         if (!($691)) {
          $692 = ($denormal$2$i|0)!=(0);
          $693 = $frac$2$i != 0.0;
          $or$cond9$i26 = $693 & $692;
          if (!($or$cond9$i26)) {
           $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
           break;
          }
         }
         $694 = (___errno_location()|0);
         HEAP32[$694>>2] = 34;
         $e2$3$i = $e2$2$i;$y$3$i = $y$2$i25;
        } else {
         $e2$3$i = $e2$1$i197;$y$3$i = $679;
        }
       } while(0);
       $695 = (+_scalbnl($y$3$i,$e2$3$i));
       $$0$i27 = $695;
      }
     } while(0);
     $$0 = $$0$i27;
     STACKTOP = sp;return (+$$0);
    }
   } while(0);
   $103 = HEAP32[$1>>2]|0;
   $104 = ($103|0)==(0|0);
   if (!($104)) {
    $105 = HEAP32[$0>>2]|0;
    $106 = (($105) + -1|0);
    HEAP32[$0>>2] = $106;
   }
   $107 = (___errno_location()|0);
   HEAP32[$107>>2] = 22;
   ___shlim($f,0);
   $$0 = 0.0;
   STACKTOP = sp;return (+$$0);
  }
 } while(0);
 if ((label|0) == 23) {
  $41 = HEAP32[$1>>2]|0;
  $42 = ($41|0)==(0|0);
  if (!($42)) {
   $43 = HEAP32[$0>>2]|0;
   $44 = (($43) + -1|0);
   HEAP32[$0>>2] = $44;
  }
  $notlhs = ($pok|0)==(0);
  $notrhs = ($i$0$lcssa>>>0)<(4);
  $or$cond9$not = $notrhs | $notlhs;
  $brmerge = $or$cond9$not | $42;
  if (!($brmerge)) {
   $i$1 = $i$0$lcssa;
   while(1) {
    $45 = HEAP32[$0>>2]|0;
    $46 = (($45) + -1|0);
    HEAP32[$0>>2] = $46;
    $47 = (($i$1) + -1)|0;
    $$old8 = ($47>>>0)>(3);
    if ($$old8) {
     $i$1 = $47;
    } else {
     break;
    }
   }
  }
 }
 $48 = (+($sign$0|0));
 $49 = $48 * inf;
 $50 = $49;
 $$0 = $50;
 STACKTOP = sp;return (+$$0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = (($f) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($f) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($f) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if (!($or$cond)) {
  $$sink = $2;
  $12 = (($f) + 100|0);
  HEAP32[$12>>2] = $$sink;
  return;
 }
 $11 = (($4) + ($lim)|0);
 $$sink = $11;
 $12 = (($f) + 100|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert2 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (($f) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = (($f) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($10) {
    label = 8;
   } else {
    $11 = (($f) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $$pre;
    $14 = $12;
    $15 = (($13) - ($14))|0;
    $16 = (($f) + 108|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($9) - ($17))|0;
    $19 = (($18) + -1)|0;
    $20 = ($15|0)>($19|0);
    if ($20) {
     $21 = (($12) + ($19)|0);
     $22 = (($f) + 100|0);
     HEAP32[$22>>2] = $21;
    } else {
     label = 8;
    }
   }
   if ((label|0) == 8) {
    $23 = (($f) + 100|0);
    HEAP32[$23>>2] = $$pre;
   }
   $24 = ($$pre|0)==(0|0);
   $$phi$trans$insert2 = (($f) + 4|0);
   $$pre3 = HEAP32[$$phi$trans$insert2>>2]|0;
   if (!($24)) {
    $25 = $$pre;
    $26 = $$pre3;
    $27 = (($f) + 108|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($25) + 1)|0;
    $30 = (($29) - ($26))|0;
    $31 = (($30) + ($28))|0;
    HEAP32[$27>>2] = $31;
   }
   $32 = (($$pre3) + -1|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33&255;
   $35 = ($34|0)==($6|0);
   if ($35) {
    $$0 = $6;
    return ($$0|0);
   }
   $36 = $6&255;
   HEAP8[$32>>0] = $36;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = (($f) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa49 = 0, $$lcssa51 = 0, $$lcssa53 = 0, $$lcssa54 = 0, $$lcssa55 = 0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond = $21 | $22;
  if (!($or$cond)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    if (!($34)) {
     $$0 = $x;
     return (+$$0);
    }
    $35 = $x * 0.0;
    $$0 = $35;
    return (+$$0);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026 = 0;
     while(1) {
      $44 = (($ex$026) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026 = $44;
      } else {
       $$lcssa55 = $44;
       break;
      }
     }
     $ex$0$lcssa = $$lcssa55;
    } else {
     $ex$0$lcssa = 0;
    }
    $54 = (1 - ($ex$0$lcssa))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1 = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020 = 0;
     while(1) {
      $67 = (($ey$020) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020 = $67;
      } else {
       $$lcssa54 = $67;
       break;
      }
     }
     $ey$0$lcssa = $$lcssa54;
    } else {
     $ey$0$lcssa = 0;
    }
    $77 = (1 - ($ey$0$lcssa))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph = $9;
   }
   $82 = ($ex$1|0)>($ey$1$ph|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   do {
    if ($82) {
     $154 = $93;$155 = $87;$156 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
     while(1) {
      if ($154) {
       $95 = ($94|0)==($85|0);
       $97 = ($96|0)==($86|0);
       $98 = $95 & $97;
       if ($98) {
        break;
       } else {
        $100 = $155;$101 = $156;
       }
      } else {
       $100 = $94;$101 = $96;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212) + -1)|0;
      $105 = ($104|0)>($ey$1$ph|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $154 = $112;$155 = $106;$156 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
      } else {
       $$lcssa51 = $104;$$lcssa53 = $112;$157 = $106;$158 = $107;$159 = $102;$160 = $103;
       label = 27;
       break;
      }
     }
     if ((label|0) == 27) {
      $$lcssa7 = $$lcssa53;$113 = $159;$115 = $160;$152 = $157;$153 = $158;$ex$2$lcssa = $$lcssa51;
      break;
     }
     $99 = $x * 0.0;
     $$0 = $99;
     return (+$$0);
    } else {
     $$lcssa7 = $93;$113 = $83;$115 = $84;$152 = $87;$153 = $88;$ex$2$lcssa = $ex$1;
    }
   } while(0);
   if ($$lcssa7) {
    $114 = ($113|0)==($85|0);
    $116 = ($115|0)==($86|0);
    $117 = $114 & $116;
    if ($117) {
     $125 = $x * 0.0;
     $$0 = $125;
     return (+$$0);
    } else {
     $118 = $153;$120 = $152;
    }
   } else {
    $118 = $115;$120 = $113;
   }
   $119 = ($118>>>0)<(1048576);
   $121 = ($120>>>0)<(0);
   $122 = ($118|0)==(1048576);
   $123 = $122 & $121;
   $124 = $119 | $123;
   if ($124) {
    $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$39) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$39 = $130;
     } else {
      $$lcssa49 = $130;$161 = $128;$162 = $129;
      break;
     }
    }
    $137 = $161;$138 = $162;$ex$3$lcssa = $$lcssa49;
   } else {
    $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
   }
   $136 = ($ex$3$lcssa|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$151 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$151 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
   $$0 = $150;
   return (+$$0);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0 = $24;
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  return (+$$0);
 } else if ((($4|0) == 2047)) {
  $$0 = $x;
  return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  return (+$$0);
 }
 return +(0.0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = (($s) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = (($s) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = (($s) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = (($s) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = (($s) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = (($s) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = (($f) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($f) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = (($f) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = (($f) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = (($f) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = (($f) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = (($f) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = (($f) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = (($f) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = (($f) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($f) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = (($f) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = (($f) + 48|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($13) + ($17)|0);
  $19 = (($f) + 16|0);
  HEAP32[$19>>2] = $18;
  $$0 = 0;
  return ($$0|0);
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
  return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = (($f) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = (($f) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa8 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (___towrite($f)|0);
   $4 = ($3|0)==(0);
   if ($4) {
    $$pre = HEAP32[$0>>2]|0;
    $7 = $$pre;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $7 = $1;
  }
 } while(0);
 $5 = (($f) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $8 = $7;
 $9 = $6;
 $10 = (($8) - ($9))|0;
 $11 = ($10>>>0)<($l>>>0);
 if ($11) {
  $12 = (($f) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
  $$0 = $14;
  return ($$0|0);
 }
 $15 = (($f) + 75|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)>(-1);
 do {
  if ($17) {
   $i$0 = $l;
   while(1) {
    $18 = ($i$0|0)==(0);
    if ($18) {
     label = 12;
     break;
    }
    $19 = (($i$0) + -1)|0;
    $20 = (($s) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(10);
    if ($22) {
     $i$0$lcssa8 = $i$0;
     break;
    } else {
     $i$0 = $19;
    }
   }
   if ((label|0) == 12) {
    $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    break;
   }
   $23 = (($f) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa8)|0);
   $26 = ($25>>>0)<($i$0$lcssa8>>>0);
   if ($26) {
    $$0 = $i$0$lcssa8;
    return ($$0|0);
   } else {
    $27 = (($s) + ($i$0$lcssa8)|0);
    $28 = (($l) - ($i$0$lcssa8))|0;
    $$pre6 = HEAP32[$5>>2]|0;
    $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa8;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
  }
 } while(0);
 _memcpy(($29|0),($$02|0),($$01|0))|0;
 $30 = HEAP32[$5>>2]|0;
 $31 = (($30) + ($$01)|0);
 HEAP32[$5>>2] = $31;
 $32 = (($i$1) + ($$01))|0;
 $$0 = $32;
 return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _MUSL_vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (($f) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $6 = (($f) + 44|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$6>>2] = $internal_buf;
  $8 = (($f) + 28|0);
  HEAP32[$8>>2] = $internal_buf;
  $9 = (($f) + 20|0);
  HEAP32[$9>>2] = $internal_buf;
  HEAP32[$2>>2] = 80;
  $10 = (($internal_buf) + 80|0);
  $11 = (($f) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $13 = ($7|0)==(0|0);
  if ($13) {
   $ret$1 = $12;
  } else {
   $14 = (($f) + 36|0);
   $15 = HEAP32[$14>>2]|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,0,0)|0);
   $16 = HEAP32[$9>>2]|0;
   $17 = ($16|0)==(0|0);
   $$ = $17 ? -1 : $12;
   HEAP32[$6>>2] = $7;
   HEAP32[$2>>2] = 0;
   HEAP32[$11>>2] = 0;
   HEAP32[$8>>2] = 0;
   HEAP32[$9>>2] = 0;
   $ret$1 = $$;
  }
 } else {
  $5 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
  $ret$1 = $5;
 }
 $$0 = $ret$1;
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f+0|0; src=4528+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$01 = $s;$$02 = $n;
 }
 $4 = $$01;
 $5 = (-2 - ($4))|0;
 $6 = ($$02>>>0)>($5>>>0);
 $$$02 = $6 ? $5 : $$02;
 $7 = (($f) + 48|0);
 HEAP32[$7>>2] = $$$02;
 $8 = (($f) + 20|0);
 HEAP32[$8>>2] = $$01;
 $9 = (($f) + 44|0);
 HEAP32[$9>>2] = $$01;
 $10 = (($$01) + ($$$02)|0);
 $11 = (($f) + 16|0);
 HEAP32[$11>>2] = $10;
 $12 = (($f) + 28|0);
 HEAP32[$12>>2] = $10;
 $13 = (_MUSL_vfprintf($f,$fmt,$ap)|0);
 $14 = ($$$02|0)==(0);
 if ($14) {
  $$0 = $13;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = HEAP32[$8>>2]|0;
 $16 = HEAP32[$11>>2]|0;
 $17 = ($15|0)==($16|0);
 $18 = $17 << 31 >> 31;
 $19 = (($15) + ($18)|0);
 HEAP8[$19>>0] = 0;
 $$0 = $13;
 STACKTOP = sp;return ($$0|0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 dest=$f$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i,0);
 $4 = (+___floatscan($f$i,1,1));
 $5 = (($f$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtold_l($s,$p,$loc) {
 $s = $s|0;
 $p = $p|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i$i = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i$i = sp;
 dest=$f$i$i+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i$i) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f$i$i,0);
 $4 = (+___floatscan($f$i$i,2,1));
 $5 = (($f$i$i) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if ($13) {
  STACKTOP = sp;return (+$4);
 }
 $14 = ($12|0)==(0);
 if ($14) {
  $16 = $s;
 } else {
  $15 = (($s) + ($12)|0);
  $16 = $15;
 }
 HEAP32[$p>>2] = $16;
 STACKTOP = sp;return (+$4);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-1,-1)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  tempRet0 = $7;
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 tempRet0 = $7;
 STACKTOP = sp;return ($6|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$019$lcssa = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$24$ph = 0, $$3 = 0, $$3$ph = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa58 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$020$lcssa = 0;
 var $s$15 = 0, $s$15$ph = 0, $s$2 = 0, $s$2$ph = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$019$lcssa = $$019;$s$020$lcssa = $s$020;
     label = 7;
     break;
    }
    $8 = (($s$020) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$lcssa61 = $8;$$lcssa62 = $9;$$lcssa63 = $13;
     label = 5;
     break;
    }
   }
   if ((label|0) == 5) {
    $$0$lcssa = $$lcssa62;$$lcssa = $$lcssa63;$s$0$lcssa = $$lcssa61;
    label = 6;
    break;
   }
   else if ((label|0) == 7) {
    $$0$lcssa44 = $$019$lcssa;$s$0$lcssa43 = $s$020$lcssa;
    break;
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 6;
  }
 } while(0);
 if ((label|0) == 6) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  }
 }
 $14 = HEAP8[$s$0$lcssa43>>0]|0;
 $15 = $c&255;
 $16 = ($14<<24>>24)==($15<<24>>24);
 if ($16) {
  $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
  $35 = ($$3|0)!=(0);
  $36 = $35 ? $s$2 : 0;
  return ($36|0);
 }
 $17 = Math_imul($0, 16843009)|0;
 $18 = ($$0$lcssa44>>>0)>(3);
 do {
  if ($18) {
   $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
   while(1) {
    $19 = HEAP32[$w$011>>2]|0;
    $20 = $19 ^ $17;
    $21 = (($20) + -16843009)|0;
    $22 = $20 & -2139062144;
    $23 = $22 ^ -2139062144;
    $24 = $23 & $21;
    $25 = ($24|0)==(0);
    if (!($25)) {
     $$110$lcssa = $$110;$w$011$lcssa = $w$011;
     label = 12;
     break;
    }
    $26 = (($w$011) + 4|0);
    $27 = (($$110) + -4)|0;
    $28 = ($27>>>0)>(3);
    if ($28) {
     $$110 = $27;$w$011 = $26;
    } else {
     $$lcssa57 = $26;$$lcssa58 = $27;
     label = 14;
     break;
    }
   }
   if ((label|0) == 12) {
    $$24$ph = $$110$lcssa;$s$15$ph = $w$011$lcssa;
    break;
   }
   else if ((label|0) == 14) {
    $$1$lcssa = $$lcssa58;$w$0$lcssa = $$lcssa57;
    label = 15;
    break;
   }
  } else {
   $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $29 = ($$1$lcssa|0)==(0);
  if ($29) {
   $$3 = 0;$s$2 = $w$0$lcssa;
   $35 = ($$3|0)!=(0);
   $36 = $35 ? $s$2 : 0;
   return ($36|0);
  } else {
   $$24$ph = $$1$lcssa;$s$15$ph = $w$0$lcssa;
  }
 }
 $$24 = $$24$ph;$s$15 = $s$15$ph;
 while(1) {
  $30 = HEAP8[$s$15>>0]|0;
  $31 = ($30<<24>>24)==($15<<24>>24);
  if ($31) {
   $$3$ph = $$24;$s$2$ph = $s$15;
   break;
  }
  $32 = (($s$15) + 1|0);
  $33 = (($$24) + -1)|0;
  $34 = ($33|0)==(0);
  if ($34) {
   $$3$ph = 0;$s$2$ph = $32;
   break;
  } else {
   $$24 = $33;$s$15 = $32;
  }
 }
 $$3 = $$3$ph;$s$2 = $s$2$ph;
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $cond = 0, $newp$0 = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[((3136 + 16|0))>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[((3608 + 8|0))>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[((3136 + 24|0))>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[((3136 + 12|0))>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[((3136 + 24|0))>>2] = $36;
  HEAP32[((3136 + 12|0))>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[((3136 + 20|0))>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[((3136 + 8|0))>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[((3136 + 8|0))>>2] = $storemerge21;
  HEAP32[((3136 + 20|0))>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = ((3136 + ($77<<2)|0) + 40|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = (($74) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[3136>>2]|0;
    $88 = $87 & $86;
    HEAP32[3136>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = (($76) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = (($76) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = (($74) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $113;$RP$0$ph = $112;
      }
     } else {
      $R$0$ph = $110;$RP$0$ph = $109;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $115 = (($R$0) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if ($117) {
       $118 = (($R$0) + 16|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119|0)==(0|0);
       if ($120) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $119;$RP$0$be = $118;
       }
      } else {
       $R$0$be = $116;$RP$0$be = $115;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = (($101) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = (($98) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((3136 + ($124<<2)|0) + 304|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[((3136 + 4|0))>>2]|0;
      $131 = $130 & $129;
      HEAP32[((3136 + 4|0))>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[((3136 + 16|0))>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = (($96) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = (($96) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[((3136 + 16|0))>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = (($R$1) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = (($R$1) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = (($143) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[((3136 + 16|0))>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = (($R$1) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = (($149) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $$pre52 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum6$pre = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, $cond = 0, $cond40 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = (($p) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[((3136 + 16|0))>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[((3136 + 20|0))>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[((3136 + 8|0))>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = ((3136 + ($21<<2)|0) + 40|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = (($18) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[3136>>2]|0;
     $32 = $31 & $30;
     HEAP32[3136>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre52 = (($20) + 8|0);
     $$pre$phi53Z2D = $$pre52;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = (($20) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi53Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = (($18) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi53Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $57;$RP$0$ph = $56;
      }
     } else {
      $R$0$ph = $54;$RP$0$ph = $53;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $59 = (($R$0) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if ($61) {
       $62 = (($R$0) + 16|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if ($64) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $63;$RP$0$be = $62;
       }
      } else {
       $R$0$be = $60;$RP$0$be = $59;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = (($45) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = (($42) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ((3136 + ($68<<2)|0) + 304|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[((3136 + 4|0))>>2]|0;
      $75 = $74 & $73;
      HEAP32[((3136 + 4|0))>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[((3136 + 16|0))>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = (($40) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = (($40) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[((3136 + 16|0))>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = (($R$1) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = (($R$1) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = (($87) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[((3136 + 16|0))>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = (($R$1) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = (($93) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[((3136 + 16|0))>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[((3136 + 24|0))>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[((3136 + 12|0))>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[((3136 + 12|0))>>2] = $115;
   HEAP32[((3136 + 24|0))>>2] = $$0;
   $116 = $115 | 1;
   $117 = (($$0) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[((3136 + 20|0))>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[((3136 + 20|0))>>2] = 0;
   HEAP32[((3136 + 8|0))>>2] = 0;
   return;
  }
  $120 = HEAP32[((3136 + 20|0))>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[((3136 + 8|0))>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[((3136 + 8|0))>>2] = $123;
   HEAP32[((3136 + 20|0))>>2] = $$0;
   $124 = $123 | 1;
   $125 = (($$0) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = ((3136 + ($135<<2)|0) + 40|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = (($132) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[3136>>2]|0;
     $146 = $145 & $144;
     HEAP32[3136>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre50 = (($134) + 8|0);
     $$pre$phi51Z2D = $$pre50;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = (($134) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi51Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = (($132) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi51Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $171;$RP9$0$ph = $170;
       }
      } else {
       $R7$0$ph = $168;$RP9$0$ph = $167;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $173 = (($R7$0) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = (($R7$0) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $177;$RP9$0$be = $176;
        }
       } else {
        $R7$0$be = $174;$RP9$0$be = $173;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = (($159) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = (($156) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ((3136 + ($182<<2)|0) + 304|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond40 = ($R7$1|0)==(0|0);
      if ($cond40) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[((3136 + 4|0))>>2]|0;
       $189 = $188 & $187;
       HEAP32[((3136 + 4|0))>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[((3136 + 16|0))>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = (($154) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = (($154) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[((3136 + 16|0))>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = (($R7$1) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = (($R7$1) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = (($201) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[((3136 + 16|0))>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = (($R7$1) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = (($207) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = (($$0) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[((3136 + 20|0))>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[((3136 + 8|0))>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = (($$0) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = ((3136 + ($224<<2)|0) + 40|0);
  $226 = HEAP32[3136>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[3136>>2] = $230;
   $$sum6$pre = (($224) + 2)|0;
   $$pre = ((3136 + ($$sum6$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = ((3136 + ($$sum7<<2)|0) + 40|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[((3136 + 16|0))>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = (($F16$0) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = (($$0) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = (($$0) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = ((3136 + ($I19$0<<2)|0) + 304|0);
 $264 = (($$0) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = (($$0) + 16|0);
 $266 = (($$0) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[((3136 + 4|0))>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[((3136 + 4|0))>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = (($$0) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = (($$0) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = (($$0) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ($I19$0|0)==(31);
 if ($276) {
  $284 = 0;
 } else {
  $277 = $I19$0 >>> 1;
  $278 = (25 - ($277))|0;
  $284 = $278;
 }
 $279 = (($275) + 4|0);
 $280 = HEAP32[$279>>2]|0;
 $281 = $280 & -8;
 $282 = ($281|0)==($$1|0);
 do {
  if ($282) {
   $T$0$lcssa = $275;
  } else {
   $283 = $$1 << $284;
   $K20$045 = $283;$T$044 = $275;
   while(1) {
    $291 = $K20$045 >>> 31;
    $292 = ((($T$044) + ($291<<2)|0) + 16|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$044$lcssa = $T$044;
     break;
    }
    $285 = $K20$045 << 1;
    $286 = (($287) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $$lcssa62 = $287;
     label = 134;
     break;
    } else {
     $K20$045 = $285;$T$044 = $287;
    }
   }
   if ((label|0) == 134) {
    $T$0$lcssa = $$lcssa62;
    break;
   }
   $294 = HEAP32[((3136 + 16|0))>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = (($$0) + 24|0);
   HEAP32[$296>>2] = $T$044$lcssa;
   $297 = (($$0) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = (($$0) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = (($T$0$lcssa) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[((3136 + 16|0))>>2]|0;
 $302 = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = ($300>>>0)>=($301>>>0);
 $or$cond = $302 & $303;
 if (!($or$cond)) {
  _abort();
  // unreachable;
 }
 $304 = (($300) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = (($$0) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = (($$0) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = (($$0) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$ = 0, $$lcssa18 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$111 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $or$cond5 = 0, $x$012 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = (($1) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 if ((($9|0) == 43) | (($9|0) == 45)) {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = (($12) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = (($25) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
 } else {
  $c$0 = $9;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $96 = -2147483648;$97 = 0;
   tempRet0 = $96;
   return ($97|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = (($31) + -1|0);
  HEAP32[$0>>2] = $32;
  $96 = -2147483648;$97 = 0;
  tempRet0 = $96;
  return ($97|0);
 }
 $c$111 = $c$0;$x$012 = 0;
 while(1) {
  $33 = ($x$012*10)|0;
  $34 = (($c$111) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = (($36) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $$ = $44 & $45;
  if ($$) {
   $c$111 = $c$1$be;$x$012 = $35;
  } else {
   $$lcssa18 = $35;$c$1$be$lcssa = $c$1$be;
   break;
  }
 }
 $46 = ($$lcssa18|0)<(0);
 $47 = $46 << 31 >> 31;
 $48 = (($c$1$be$lcssa) + -48)|0;
 $49 = ($48>>>0)<(10);
 if ($49) {
  $52 = $$lcssa18;$53 = $47;$c$27 = $c$1$be$lcssa;
  while(1) {
   $54 = (___muldi3(($52|0),($53|0),10,0)|0);
   $55 = tempRet0;
   $56 = ($c$27|0)<(0);
   $57 = $56 << 31 >> 31;
   $58 = (_i64Add(($c$27|0),($57|0),-48,-1)|0);
   $59 = tempRet0;
   $60 = (_i64Add(($58|0),($59|0),($54|0),($55|0))|0);
   $61 = tempRet0;
   $62 = HEAP32[$0>>2]|0;
   $63 = HEAP32[$2>>2]|0;
   $64 = ($62>>>0)<($63>>>0);
   if ($64) {
    $65 = (($62) + 1|0);
    HEAP32[$0>>2] = $65;
    $66 = HEAP8[$62>>0]|0;
    $67 = $66&255;
    $c$2$be = $67;
   } else {
    $68 = (___shgetc($f)|0);
    $c$2$be = $68;
   }
   $69 = (($c$2$be) + -48)|0;
   $70 = ($69>>>0)<(10);
   $71 = ($61|0)<(21474836);
   $72 = ($60>>>0)<(2061584302);
   $73 = ($61|0)==(21474836);
   $74 = $73 & $72;
   $75 = $71 | $74;
   $or$cond5 = $70 & $75;
   if ($or$cond5) {
    $52 = $60;$53 = $61;$c$27 = $c$2$be;
   } else {
    $98 = $60;$99 = $61;$c$2$be$lcssa = $c$2$be;
    break;
   }
  }
  $90 = $98;$91 = $99;$c$2$lcssa = $c$2$be$lcssa;
 } else {
  $90 = $$lcssa18;$91 = $47;$c$2$lcssa = $c$1$be$lcssa;
 }
 $50 = (($c$2$lcssa) + -48)|0;
 $51 = ($50>>>0)<(10);
 if ($51) {
  while(1) {
   $76 = HEAP32[$0>>2]|0;
   $77 = HEAP32[$2>>2]|0;
   $78 = ($76>>>0)<($77>>>0);
   if ($78) {
    $79 = (($76) + 1|0);
    HEAP32[$0>>2] = $79;
    $80 = HEAP8[$76>>0]|0;
    $81 = $80&255;
    $c$3$be = $81;
   } else {
    $82 = (___shgetc($f)|0);
    $c$3$be = $82;
   }
   $83 = (($c$3$be) + -48)|0;
   $84 = ($83>>>0)<(10);
   if (!($84)) {
    break;
   }
  }
 }
 $85 = HEAP32[$2>>2]|0;
 $86 = ($85|0)==(0|0);
 if (!($86)) {
  $87 = HEAP32[$0>>2]|0;
  $88 = (($87) + -1|0);
  HEAP32[$0>>2] = $88;
 }
 $89 = ($neg$0|0)!=(0);
 $92 = (_i64Subtract(0,0,($90|0),($91|0))|0);
 $93 = tempRet0;
 $94 = $89 ? $92 : $90;
 $95 = $89 ? $93 : $91;
 $96 = $95;$97 = $94;
 tempRet0 = $96;
 return ($97|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$5$i = 0, $$$i = 0, $$$p$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i105$i = 0, $$0$lcssa$i112$i = 0, $$0$lcssa$i136$i = 0, $$0$lcssa$i151$i = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i47$i = 0, $$0$lcssa$i52 = 0, $$0$lcssa$i54 = 0, $$0$lcssa$i54$i = 0, $$0$lcssa$i56$i = 0, $$0$lcssa$i62 = 0, $$0$lcssa$i64$i = 0;
 var $$0$lcssa$i69 = 0, $$0$lcssa$i71$i = 0, $$0$lcssa$i76 = 0, $$0$lcssa$i77$i = 0, $$0$lcssa$i84$i = 0, $$0$lcssa$i86 = 0, $$0$lcssa$i92$i = 0, $$0$ph = 0, $$0$ph340 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i103$i = 0, $$01$i110$i = 0, $$01$i134$i = 0, $$01$i149$i = 0, $$01$i45 = 0, $$01$i45$i = 0, $$01$i52$i = 0, $$01$i60 = 0, $$01$i62$i = 0;
 var $$01$i67 = 0, $$01$i69$i = 0, $$01$i74 = 0, $$01$i75$i = 0, $$01$i82$i = 0, $$01$i84 = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i93$i = 0, $$012$i = 0, $$013$i = 0.0, $$019$i = 0, $$03$i49 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i87$i = 0, $$1$i = 0.0, $$1$lcssa$i$i = 0, $$1$lcssa$i120$i = 0, $$12$i = 0;
 var $$12$i$i = 0, $$12$i118$i = 0, $$12$i127$i = 0, $$12$i142$i = 0, $$12$i142$i$lcssa = 0, $$12$i95$i = 0, $$120$i = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$21 = 0, $$216$$29$i = 0, $$216$$31$i = 0, $$216$i = 0, $$25 = 0, $$26 = 0, $$26$i = 0, $$26$us$i = 0, $$27$i = 0, $$28$i = 0.0;
 var $$29$i = 0, $$3$i = 0.0, $$31$i = 0, $$317$i = 0, $$39$i = 0, $$4$i = 0.0, $$418$lcssa$i = 0, $$418193$i = 0, $$5205$i = 0, $$93 = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us309$i = 0, $$a$3$us310$i = 0, $$a$3$us310$i$lcssa = 0, $$a$3311$i = 0, $$a$3312$i = 0, $$a$3312$i$lcssa = 0, $$be = 0, $$be341 = 0;
 var $$be342 = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa107 = 0, $$lcssa107$ph = 0, $$lcssa283$i = 0, $$lcssa344 = 0, $$lcssa345 = 0, $$lcssa346 = 0, $$lcssa347 = 0, $$lcssa348 = 0, $$lcssa350 = 0, $$lcssa352 = 0, $$lcssa353 = 0, $$lcssa354 = 0, $$lcssa355 = 0, $$lcssa356 = 0, $$lcssa357 = 0, $$lcssa358 = 0;
 var $$lcssa359 = 0, $$lcssa360 = 0, $$lcssa361 = 0, $$lcssa362 = 0, $$lcssa363 = 0, $$lcssa364 = 0, $$lcssa365 = 0, $$lcssa367 = 0, $$lcssa368 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa371 = 0, $$lcssa372 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa375 = 0, $$lcssa376 = 0, $$lcssa377 = 0, $$lcssa378 = 0.0, $$lcssa379 = 0;
 var $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa384 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$mask$i = 0, $$mask$i39 = 0, $$mask1$i = 0, $$mask1$i38 = 0, $$neg159$i = 0, $$neg160$i = 0, $$not$i = 0, $$p$5 = 0, $$p$i = 0, $$ph = 0, $$pn$i = 0, $$pr$i = 0, $$pr154$i = 0, $$pre = 0, $$pre$i = 0;
 var $$pre269 = 0, $$pre308$i = 0, $$sum$i = 0, $$sum21$i = 0, $$sum22$i = 0, $$z$3$i = 0, $$z$4$us$i = 0, $$z$4$us$i$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0;
 var $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0;
 var $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0;
 var $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0;
 var $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0;
 var $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0;
 var $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0;
 var $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0;
 var $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0;
 var $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0.0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0.0, $1168 = 0, $1169 = 0, $117 = 0;
 var $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0;
 var $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $140$phi = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0.0, $433 = 0, $434 = 0.0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0.0, $473 = 0.0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0.0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0.0;
 var $544 = 0.0, $545 = 0.0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0.0, $559 = 0.0, $56 = 0, $560 = 0.0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0.0, $574 = 0.0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0.0, $638 = 0.0, $639 = 0.0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $655$phi = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0.0, $777 = 0.0;
 var $778 = 0, $779 = 0.0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $955$phi = 0, $956 = 0;
 var $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0;
 var $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0;
 var $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1261$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$2$ph$i$lcssa = 0, $a$3$lcssa$i = 0, $a$3248$i = 0, $a$3248$us$i = 0, $a$5$lcssa$i = 0, $a$5223$i = 0, $a$6$i = 0;
 var $a$6$i$lcssa = 0, $a$7$i = 0, $a$8$ph$i = 0, $a$8$ph294$i = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0;
 var $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0, $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0;
 var $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0, $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0254$i = 0, $carry3$0242$i = 0, $carry3$0242$us$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0253$i = 0;
 var $d$0255$i = 0, $d$1241$i = 0, $d$1241$us$i = 0, $d$2$lcssa$i = 0, $d$2222$i = 0, $d$3$i = 0, $d$4199$i = 0, $d$5192$i = 0, $d$6204$i = 0, $e$0237$i = 0, $e$1$i = 0, $e$2218$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1209$i = 0;
 var $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded101 = 0, $expanded102 = 0, $expanded103 = 0, $expanded105 = 0, $expanded106 = 0, $expanded108 = 0, $expanded109 = 0, $expanded110 = 0, $expanded112 = 0, $expanded113 = 0, $expanded115 = 0, $expanded116 = 0, $expanded117 = 0, $expanded119 = 0, $expanded120 = 0, $expanded122 = 0, $expanded123 = 0;
 var $expanded124 = 0, $expanded126 = 0, $expanded127 = 0, $expanded129 = 0, $expanded130 = 0, $expanded131 = 0, $expanded133 = 0, $expanded134 = 0, $expanded136 = 0, $expanded137 = 0, $expanded138 = 0, $expanded140 = 0, $expanded141 = 0, $expanded143 = 0, $expanded144 = 0, $expanded145 = 0, $expanded147 = 0, $expanded148 = 0, $expanded150 = 0, $expanded151 = 0;
 var $expanded152 = 0, $expanded154 = 0, $expanded155 = 0, $expanded157 = 0, $expanded158 = 0, $expanded159 = 0, $expanded161 = 0, $expanded162 = 0, $expanded164 = 0, $expanded165 = 0, $expanded166 = 0, $expanded168 = 0, $expanded169 = 0, $expanded171 = 0, $expanded172 = 0, $expanded173 = 0, $expanded175 = 0, $expanded176 = 0, $expanded178 = 0, $expanded179 = 0;
 var $expanded180 = 0, $expanded182 = 0, $expanded183 = 0, $expanded185 = 0, $expanded186 = 0, $expanded187 = 0, $expanded189 = 0, $expanded190 = 0, $expanded192 = 0, $expanded193 = 0, $expanded194 = 0, $expanded196 = 0, $expanded197 = 0, $expanded199 = 0, $expanded200 = 0, $expanded201 = 0, $expanded203 = 0, $expanded204 = 0, $expanded206 = 0, $expanded207 = 0;
 var $expanded208 = 0, $expanded210 = 0, $expanded211 = 0, $expanded213 = 0, $expanded214 = 0, $expanded215 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded68 = 0, $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded75 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded82 = 0;
 var $expanded84 = 0, $expanded85 = 0, $expanded87 = 0, $expanded88 = 0, $expanded89 = 0, $expanded91 = 0, $expanded92 = 0, $expanded94 = 0, $expanded95 = 0, $expanded96 = 0, $expanded98 = 0, $expanded99 = 0, $fl$0111 = 0, $fl$0111$ph = 0, $fl$0171 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0;
 var $i$0$lcssa = 0, $i$0$lcssa272 = 0, $i$0176 = 0, $i$0236$i = 0, $i$03$i = 0, $i$03$i31 = 0, $i$1$lcssa$i = 0, $i$1187 = 0, $i$1230$i = 0, $i$2163 = 0, $i$2163$lcssa = 0, $i$2217$i = 0, $i$3161 = 0, $i$3213$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i33 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0;
 var $isdigit2$i29 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i32 = 0, $isdigittmp1$i = 0, $isdigittmp1$i28 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i30 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0229$i = 0, $j$0231$i = 0, $j$1214$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$be = 0, $l$0$i = 0, $l$1$i = 0;
 var $l$1175 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$be = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i101$i = 0, $or$cond$i108$i = 0, $or$cond$i43$i = 0, $or$cond$i50$i = 0, $or$cond$i58 = 0, $or$cond$i60$i = 0;
 var $or$cond$i65 = 0, $or$cond$i67$i = 0, $or$cond$i72 = 0, $or$cond$i80 = 0, $or$cond$i80$i = 0, $or$cond$i82 = 0, $or$cond10$i = 0, $or$cond10191$i = 0, $or$cond12$i = 0, $or$cond15 = 0, $or$cond19 = 0, $or$cond23 = 0, $or$cond274 = 0, $or$cond35$i = 0, $or$cond37$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0;
 var $p$4271 = 0, $p$5 = 0, $pad$i = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$1187$i = 0, $round$0186$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0;
 var $s$1$i = 0, $s$1$i$lcssa = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$i$lcssa = 0, $s$1$us$us$i = 0, $s$1$us$us$i$lcssa = 0, $s1$0$i = 0, $s7$0196$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0188$i = 0, $s8$0188$i$ph = 0, $s9$0$i = 0, $s9$1200$i = 0, $s9$2$i = 0, $sext = 0, $sext94 = 0, $small$0$i = 0.0, $small$1$i = 0.0;
 var $st$0 = 0, $st$0$lcssa351 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8109 = 0, $storemerge8109$ph = 0, $storemerge8170 = 0, $t$0 = 0, $t$1 = 0, $uglygep$i = 0, $uglygep296$i = 0, $uglygep300$i = 0, $uglygep300301$i = 0, $umax$i = 0, $umax297$i = 0, $umax297298299$i = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0;
 var $w$25$i = 0, $w$38$i = 0, $wc = 0, $ws$0177 = 0, $ws$1188 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i117$i = 0, $y$03$i126$i = 0, $y$03$i141$i = 0, $y$03$i94$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0$lcssa$ph = 0, $z$0164 = 0, $z$1$lcssa$i = 0, $z$1260$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0;
 var $z$2$i$lcssa$lcssa = 0, $z$3$lcssa$i = 0, $z$3247$i = 0, $z$3247$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$5$i$lcssa = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 836|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 824|0;
 $pad$i = sp + 568|0;
 $buf = sp + 528|0;
 $wc = sp;
 $mb = sp + 520|0;
 $1 = ($f|0)!=(0|0);
 $2 = (($buf) + 40|0);
 $3 = $2;
 $4 = (($buf) + 39|0);
 $5 = (($wc) + 4|0);
 $6 = $wc;
 $7 = (($ebuf0$i) + 12|0);
 $8 = (($ebuf0$i) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = (($big$i) + 288|0);
 $14 = (($buf$i) + 9|0);
 $15 = $14;
 $16 = (($buf$i) + 8|0);
 $1175 = 0;$1176 = 0;$23 = $fmt;$cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$23>>0]|0;
  $24 = ($22<<24>>24)==(0);
  if ($24) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 429;
   break;
  }
  $1177 = $22;$26 = $23;
  while(1) {
   if ((($1177<<24>>24) == 37)) {
    $$lcssa = $26;
    label = 9;
    break;
   } else if ((($1177<<24>>24) == 0)) {
    $$lcssa344 = $26;
    label = 14;
    break;
   }
   $25 = (($26) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $1177 = $$pre;$26 = $25;
  }
  if ((label|0) == 9) {
   label = 0;
   $28 = $$lcssa;$z$0164 = $$lcssa;
   while(1) {
    $27 = (($28) + 1|0);
    $29 = HEAP8[$27>>0]|0;
    $30 = ($29<<24>>24)==(37);
    if (!($30)) {
     $$lcssa107$ph = $28;$z$0$lcssa$ph = $z$0164;
     break;
    }
    $31 = (($z$0164) + 1|0);
    $32 = (($28) + 2|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = ($33<<24>>24)==(37);
    if ($34) {
     $28 = $32;$z$0164 = $31;
    } else {
     $$lcssa107$ph = $32;$z$0$lcssa$ph = $31;
     break;
    }
   }
   $$lcssa107 = $$lcssa107$ph;$z$0$lcssa = $z$0$lcssa$ph;
  }
  else if ((label|0) == 14) {
   label = 0;
   $$lcssa107 = $$lcssa344;$z$0$lcssa = $$lcssa344;
  }
  $35 = $z$0$lcssa;
  $36 = $23;
  $37 = (($35) - ($36))|0;
  if ($1) {
   (___fwritex($23,$37,$f)|0);
  }
  $38 = ($z$0$lcssa|0)==($23|0);
  L24: do {
   if ($38) {
    $39 = (($$lcssa107) + 1|0);
    $40 = HEAP8[$39>>0]|0;
    $41 = $40 << 24 >> 24;
    $isdigittmp = (($41) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $42 = (($$lcssa107) + 2|0);
     $43 = HEAP8[$42>>0]|0;
     $44 = ($43<<24>>24)==(36);
     $45 = (($$lcssa107) + 3|0);
     $$93 = $44 ? $45 : $39;
     $$l10n$0 = $44 ? 1 : $l10n$0;
     $isdigittmp$ = $44 ? $isdigittmp : -1;
     $$pre269 = HEAP8[$$93>>0]|0;
     $47 = $$pre269;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$93;
    } else {
     $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
    }
    $46 = $47 << 24 >> 24;
    $48 = $46 & -32;
    $49 = ($48|0)==(32);
    if ($49) {
     $51 = $46;$56 = $47;$fl$0171 = 0;$storemerge8170 = $storemerge;
     while(1) {
      $50 = (($51) + -32)|0;
      $52 = 1 << $50;
      $53 = $52 & 75913;
      $54 = ($53|0)==(0);
      if ($54) {
       $$ph = $56;$fl$0111$ph = $fl$0171;$storemerge8109$ph = $storemerge8170;
       break;
      }
      $55 = $56 << 24 >> 24;
      $57 = (($55) + -32)|0;
      $58 = 1 << $57;
      $59 = $58 | $fl$0171;
      $60 = (($storemerge8170) + 1|0);
      $61 = HEAP8[$60>>0]|0;
      $62 = $61 << 24 >> 24;
      $63 = $62 & -32;
      $64 = ($63|0)==(32);
      if ($64) {
       $51 = $62;$56 = $61;$fl$0171 = $59;$storemerge8170 = $60;
      } else {
       $$ph = $61;$fl$0111$ph = $59;$storemerge8109$ph = $60;
       break;
      }
     }
     $65 = $$ph;$fl$0111 = $fl$0111$ph;$storemerge8109 = $storemerge8109$ph;
    } else {
     $65 = $47;$fl$0111 = 0;$storemerge8109 = $storemerge;
    }
    $66 = ($65<<24>>24)==(42);
    do {
     if ($66) {
      $67 = (($storemerge8109) + 1|0);
      $68 = HEAP8[$67>>0]|0;
      $69 = $68 << 24 >> 24;
      $isdigittmp11 = (($69) + -48)|0;
      $isdigit12 = ($isdigittmp11>>>0)<(10);
      if ($isdigit12) {
       $70 = (($storemerge8109) + 2|0);
       $71 = HEAP8[$70>>0]|0;
       $72 = ($71<<24>>24)==(36);
       if ($72) {
        $73 = (($nl_type) + ($isdigittmp11<<2)|0);
        HEAP32[$73>>2] = 10;
        $74 = HEAP8[$67>>0]|0;
        $75 = $74 << 24 >> 24;
        $76 = (($75) + -48)|0;
        $77 = (($nl_arg) + ($76<<3)|0);
        $78 = $77;
        $79 = $78;
        $80 = HEAP32[$79>>2]|0;
        $81 = (($78) + 4)|0;
        $82 = $81;
        $83 = HEAP32[$82>>2]|0;
        $84 = (($storemerge8109) + 3|0);
        $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
       } else {
        label = 29;
       }
      } else {
       label = 29;
      }
      if ((label|0) == 29) {
       label = 0;
       $85 = ($l10n$1|0)==(0);
       if (!($85)) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       }
       if (!($1)) {
        $105 = $67;$fl$1 = $fl$0111;$l10n$3 = 0;$w$1 = 0;
        break;
       }
       $arglist_current = HEAP32[$ap>>2]|0;
       $86 = $arglist_current;
       $87 = (0 + 4|0);
       $expanded64 = $87;
       $expanded = (($expanded64) - 1)|0;
       $88 = (($86) + ($expanded))|0;
       $89 = (0 + 4|0);
       $expanded68 = $89;
       $expanded67 = (($expanded68) - 1)|0;
       $expanded66 = $expanded67 ^ -1;
       $90 = $88 & $expanded66;
       $91 = $90;
       $92 = HEAP32[$91>>2]|0;
       $arglist_next = (($91) + 4|0);
       HEAP32[$ap>>2] = $arglist_next;
       $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
      }
      $93 = ($w$0|0)<(0);
      if ($93) {
       $94 = $fl$0111 | 8192;
       $95 = (0 - ($w$0))|0;
       $105 = $storemerge13;$fl$1 = $94;$l10n$3 = $l10n$2;$w$1 = $95;
      } else {
       $105 = $storemerge13;$fl$1 = $fl$0111;$l10n$3 = $l10n$2;$w$1 = $w$0;
      }
     } else {
      $96 = $65 << 24 >> 24;
      $isdigittmp1$i = (($96) + -48)|0;
      $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
      if ($isdigit2$i) {
       $100 = $storemerge8109;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
       while(1) {
        $97 = ($i$03$i*10)|0;
        $98 = (($97) + ($isdigittmp4$i))|0;
        $99 = (($100) + 1|0);
        $101 = HEAP8[$99>>0]|0;
        $102 = $101 << 24 >> 24;
        $isdigittmp$i = (($102) + -48)|0;
        $isdigit$i = ($isdigittmp$i>>>0)<(10);
        if ($isdigit$i) {
         $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
        } else {
         $$lcssa345 = $98;$$lcssa346 = $99;
         break;
        }
       }
       $103 = ($$lcssa345|0)<(0);
       if ($103) {
        $$0$ph340 = -1;
        label = 453;
        break L1;
       } else {
        $105 = $$lcssa346;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = $$lcssa345;
       }
      } else {
       $105 = $storemerge8109;$fl$1 = $fl$0111;$l10n$3 = $l10n$1;$w$1 = 0;
      }
     }
    } while(0);
    $104 = HEAP8[$105>>0]|0;
    $106 = ($104<<24>>24)==(46);
    do {
     if ($106) {
      $107 = (($105) + 1|0);
      $108 = HEAP8[$107>>0]|0;
      $109 = ($108<<24>>24)==(42);
      if (!($109)) {
       $136 = $108 << 24 >> 24;
       $isdigittmp1$i28 = (($136) + -48)|0;
       $isdigit2$i29 = ($isdigittmp1$i28>>>0)<(10);
       if (!($isdigit2$i29)) {
        $1178 = $107;$p$0 = 0;
        break;
       }
       $1179 = $107;$140 = $105;$i$03$i31 = 0;$isdigittmp4$i30 = $isdigittmp1$i28;
       while(1) {
        $137 = ($i$03$i31*10)|0;
        $138 = (($137) + ($isdigittmp4$i30))|0;
        $139 = (($140) + 2|0);
        $141 = HEAP8[$139>>0]|0;
        $142 = $141 << 24 >> 24;
        $isdigittmp$i32 = (($142) + -48)|0;
        $isdigit$i33 = ($isdigittmp$i32>>>0)<(10);
        if ($isdigit$i33) {
         $140$phi = $1179;$1179 = $139;$i$03$i31 = $138;$isdigittmp4$i30 = $isdigittmp$i32;$140 = $140$phi;
        } else {
         $$lcssa347 = $138;$$lcssa348 = $139;
         break;
        }
       }
       $1178 = $$lcssa348;$p$0 = $$lcssa347;
       break;
      }
      $110 = (($105) + 2|0);
      $111 = HEAP8[$110>>0]|0;
      $112 = $111 << 24 >> 24;
      $isdigittmp9 = (($112) + -48)|0;
      $isdigit10 = ($isdigittmp9>>>0)<(10);
      if ($isdigit10) {
       $113 = (($105) + 3|0);
       $114 = HEAP8[$113>>0]|0;
       $115 = ($114<<24>>24)==(36);
       if ($115) {
        $116 = (($nl_type) + ($isdigittmp9<<2)|0);
        HEAP32[$116>>2] = 10;
        $117 = HEAP8[$110>>0]|0;
        $118 = $117 << 24 >> 24;
        $119 = (($118) + -48)|0;
        $120 = (($nl_arg) + ($119<<3)|0);
        $121 = $120;
        $122 = $121;
        $123 = HEAP32[$122>>2]|0;
        $124 = (($121) + 4)|0;
        $125 = $124;
        $126 = HEAP32[$125>>2]|0;
        $127 = (($105) + 4|0);
        $1178 = $127;$p$0 = $123;
        break;
       }
      }
      $128 = ($l10n$3|0)==(0);
      if (!($128)) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      }
      if ($1) {
       $arglist_current2 = HEAP32[$ap>>2]|0;
       $129 = $arglist_current2;
       $130 = (0 + 4|0);
       $expanded71 = $130;
       $expanded70 = (($expanded71) - 1)|0;
       $131 = (($129) + ($expanded70))|0;
       $132 = (0 + 4|0);
       $expanded75 = $132;
       $expanded74 = (($expanded75) - 1)|0;
       $expanded73 = $expanded74 ^ -1;
       $133 = $131 & $expanded73;
       $134 = $133;
       $135 = HEAP32[$134>>2]|0;
       $arglist_next3 = (($134) + 4|0);
       HEAP32[$ap>>2] = $arglist_next3;
       $1178 = $110;$p$0 = $135;
      } else {
       $1178 = $110;$p$0 = 0;
      }
     } else {
      $1178 = $105;$p$0 = -1;
     }
    } while(0);
    $144 = $1178;$st$0 = 0;
    while(1) {
     $143 = HEAP8[$144>>0]|0;
     $145 = $143 << 24 >> 24;
     $146 = (($145) + -65)|0;
     $147 = ($146>>>0)>(57);
     if ($147) {
      label = 452;
      break L1;
     }
     $148 = (($144) + 1|0);
     $149 = ((3960 + (($st$0*58)|0)|0) + ($146)|0);
     $150 = HEAP8[$149>>0]|0;
     $151 = $150&255;
     $152 = (($151) + -1)|0;
     $153 = ($152>>>0)<(8);
     if ($153) {
      $144 = $148;$st$0 = $151;
     } else {
      $$lcssa350 = $144;$$lcssa352 = $148;$$lcssa353 = $150;$$lcssa354 = $151;$st$0$lcssa351 = $st$0;
      break;
     }
    }
    $154 = ($$lcssa353<<24>>24)==(0);
    if ($154) {
     $$0$ph340 = -1;
     label = 453;
     break L1;
    }
    $155 = ($$lcssa353<<24>>24)==(19);
    $156 = ($argpos$0|0)>(-1);
    L74: do {
     if ($155) {
      if ($156) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1180 = $1175;$1181 = $1176;
       label = 71;
      }
     } else {
      if ($156) {
       $157 = (($nl_type) + ($argpos$0<<2)|0);
       HEAP32[$157>>2] = $$lcssa354;
       $158 = (($nl_arg) + ($argpos$0<<3)|0);
       $159 = $158;
       $160 = $159;
       $161 = HEAP32[$160>>2]|0;
       $162 = (($159) + 4)|0;
       $163 = $162;
       $164 = HEAP32[$163>>2]|0;
       $1180 = $164;$1181 = $161;
       label = 71;
       break;
      }
      if (!($1)) {
       $$0$ph340 = 0;
       label = 453;
       break L1;
      }
      $165 = ($$lcssa353&255)>(20);
      if ($165) {
       $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
      } else {
       do {
        switch ($$lcssa354|0) {
        case 13:  {
         $arglist_current17 = HEAP32[$ap>>2]|0;
         $202 = $arglist_current17;
         $203 = (0 + 4|0);
         $expanded106 = $203;
         $expanded105 = (($expanded106) - 1)|0;
         $204 = (($202) + ($expanded105))|0;
         $205 = (0 + 4|0);
         $expanded110 = $205;
         $expanded109 = (($expanded110) - 1)|0;
         $expanded108 = $expanded109 ^ -1;
         $206 = $204 & $expanded108;
         $207 = $206;
         $208 = HEAP32[$207>>2]|0;
         $arglist_next18 = (($207) + 4|0);
         HEAP32[$ap>>2] = $arglist_next18;
         $209 = $208&65535;
         $210 = $209 << 16 >> 16;
         $211 = ($210|0)<(0);
         $212 = $211 << 31 >> 31;
         $sext94 = $208 << 16;
         $213 = $sext94 >> 16;
         $1182 = $$lcssa352;$267 = $213;$294 = $212;
         break L74;
         break;
        }
        case 12:  {
         $arglist_current14 = HEAP32[$ap>>2]|0;
         $190 = $arglist_current14;
         $191 = (0 + 8|0);
         $expanded99 = $191;
         $expanded98 = (($expanded99) - 1)|0;
         $192 = (($190) + ($expanded98))|0;
         $193 = (0 + 8|0);
         $expanded103 = $193;
         $expanded102 = (($expanded103) - 1)|0;
         $expanded101 = $expanded102 ^ -1;
         $194 = $192 & $expanded101;
         $195 = $194;
         $196 = $195;
         $197 = $196;
         $198 = HEAP32[$197>>2]|0;
         $199 = (($196) + 4)|0;
         $200 = $199;
         $201 = HEAP32[$200>>2]|0;
         $arglist_next15 = (($195) + 8|0);
         HEAP32[$ap>>2] = $arglist_next15;
         $1182 = $$lcssa352;$267 = $198;$294 = $201;
         break L74;
         break;
        }
        case 11:  {
         $arglist_current11 = HEAP32[$ap>>2]|0;
         $183 = $arglist_current11;
         $184 = (0 + 4|0);
         $expanded92 = $184;
         $expanded91 = (($expanded92) - 1)|0;
         $185 = (($183) + ($expanded91))|0;
         $186 = (0 + 4|0);
         $expanded96 = $186;
         $expanded95 = (($expanded96) - 1)|0;
         $expanded94 = $expanded95 ^ -1;
         $187 = $185 & $expanded94;
         $188 = $187;
         $189 = HEAP32[$188>>2]|0;
         $arglist_next12 = (($188) + 4|0);
         HEAP32[$ap>>2] = $arglist_next12;
         $1182 = $$lcssa352;$267 = $189;$294 = 0;
         break L74;
         break;
        }
        case 15:  {
         $arglist_current23 = HEAP32[$ap>>2]|0;
         $221 = $arglist_current23;
         $222 = (0 + 4|0);
         $expanded120 = $222;
         $expanded119 = (($expanded120) - 1)|0;
         $223 = (($221) + ($expanded119))|0;
         $224 = (0 + 4|0);
         $expanded124 = $224;
         $expanded123 = (($expanded124) - 1)|0;
         $expanded122 = $expanded123 ^ -1;
         $225 = $223 & $expanded122;
         $226 = $225;
         $227 = HEAP32[$226>>2]|0;
         $arglist_next24 = (($226) + 4|0);
         HEAP32[$ap>>2] = $arglist_next24;
         $228 = $227&255;
         $229 = $228 << 24 >> 24;
         $230 = ($229|0)<(0);
         $231 = $230 << 31 >> 31;
         $sext = $227 << 24;
         $232 = $sext >> 24;
         $1182 = $$lcssa352;$267 = $232;$294 = $231;
         break L74;
         break;
        }
        case 9:  {
         $arglist_current5 = HEAP32[$ap>>2]|0;
         $166 = $arglist_current5;
         $167 = (0 + 4|0);
         $expanded78 = $167;
         $expanded77 = (($expanded78) - 1)|0;
         $168 = (($166) + ($expanded77))|0;
         $169 = (0 + 4|0);
         $expanded82 = $169;
         $expanded81 = (($expanded82) - 1)|0;
         $expanded80 = $expanded81 ^ -1;
         $170 = $168 & $expanded80;
         $171 = $170;
         $172 = HEAP32[$171>>2]|0;
         $arglist_next6 = (($171) + 4|0);
         HEAP32[$ap>>2] = $arglist_next6;
         $173 = $172;
         $1182 = $$lcssa352;$267 = $173;$294 = $1175;
         break L74;
         break;
        }
        case 10:  {
         $arglist_current8 = HEAP32[$ap>>2]|0;
         $174 = $arglist_current8;
         $175 = (0 + 4|0);
         $expanded85 = $175;
         $expanded84 = (($expanded85) - 1)|0;
         $176 = (($174) + ($expanded84))|0;
         $177 = (0 + 4|0);
         $expanded89 = $177;
         $expanded88 = (($expanded89) - 1)|0;
         $expanded87 = $expanded88 ^ -1;
         $178 = $176 & $expanded87;
         $179 = $178;
         $180 = HEAP32[$179>>2]|0;
         $arglist_next9 = (($179) + 4|0);
         HEAP32[$ap>>2] = $arglist_next9;
         $181 = ($180|0)<(0);
         $182 = $181 << 31 >> 31;
         $1182 = $$lcssa352;$267 = $180;$294 = $182;
         break L74;
         break;
        }
        case 18:  {
         $arglist_current32 = HEAP32[$ap>>2]|0;
         $249 = $arglist_current32;
         $250 = (0 + 8|0);
         $expanded141 = $250;
         $expanded140 = (($expanded141) - 1)|0;
         $251 = (($249) + ($expanded140))|0;
         $252 = (0 + 8|0);
         $expanded145 = $252;
         $expanded144 = (($expanded145) - 1)|0;
         $expanded143 = $expanded144 ^ -1;
         $253 = $251 & $expanded143;
         $254 = $253;
         $255 = +HEAPF64[$254>>3];
         $arglist_next33 = (($254) + 8|0);
         HEAP32[$ap>>2] = $arglist_next33;
         HEAPF64[tempDoublePtr>>3] = $255;$256 = HEAP32[tempDoublePtr>>2]|0;
         $257 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $256;$294 = $257;
         break L74;
         break;
        }
        case 14:  {
         $arglist_current20 = HEAP32[$ap>>2]|0;
         $214 = $arglist_current20;
         $215 = (0 + 4|0);
         $expanded113 = $215;
         $expanded112 = (($expanded113) - 1)|0;
         $216 = (($214) + ($expanded112))|0;
         $217 = (0 + 4|0);
         $expanded117 = $217;
         $expanded116 = (($expanded117) - 1)|0;
         $expanded115 = $expanded116 ^ -1;
         $218 = $216 & $expanded115;
         $219 = $218;
         $220 = HEAP32[$219>>2]|0;
         $arglist_next21 = (($219) + 4|0);
         HEAP32[$ap>>2] = $arglist_next21;
         $$mask1$i38 = $220 & 65535;
         $1182 = $$lcssa352;$267 = $$mask1$i38;$294 = 0;
         break L74;
         break;
        }
        case 17:  {
         $arglist_current29 = HEAP32[$ap>>2]|0;
         $240 = $arglist_current29;
         $241 = (0 + 8|0);
         $expanded134 = $241;
         $expanded133 = (($expanded134) - 1)|0;
         $242 = (($240) + ($expanded133))|0;
         $243 = (0 + 8|0);
         $expanded138 = $243;
         $expanded137 = (($expanded138) - 1)|0;
         $expanded136 = $expanded137 ^ -1;
         $244 = $242 & $expanded136;
         $245 = $244;
         $246 = +HEAPF64[$245>>3];
         $arglist_next30 = (($245) + 8|0);
         HEAP32[$ap>>2] = $arglist_next30;
         HEAPF64[tempDoublePtr>>3] = $246;$247 = HEAP32[tempDoublePtr>>2]|0;
         $248 = HEAP32[tempDoublePtr+4>>2]|0;
         $1182 = $$lcssa352;$267 = $247;$294 = $248;
         break L74;
         break;
        }
        case 16:  {
         $arglist_current26 = HEAP32[$ap>>2]|0;
         $233 = $arglist_current26;
         $234 = (0 + 4|0);
         $expanded127 = $234;
         $expanded126 = (($expanded127) - 1)|0;
         $235 = (($233) + ($expanded126))|0;
         $236 = (0 + 4|0);
         $expanded131 = $236;
         $expanded130 = (($expanded131) - 1)|0;
         $expanded129 = $expanded130 ^ -1;
         $237 = $235 & $expanded129;
         $238 = $237;
         $239 = HEAP32[$238>>2]|0;
         $arglist_next27 = (($238) + 4|0);
         HEAP32[$ap>>2] = $arglist_next27;
         $$mask$i39 = $239 & 255;
         $1182 = $$lcssa352;$267 = $$mask$i39;$294 = 0;
         break L74;
         break;
        }
        default: {
         $1182 = $$lcssa352;$267 = $1176;$294 = $1175;
         break L74;
        }
        }
       } while(0);
      }
     }
    } while(0);
    if ((label|0) == 71) {
     label = 0;
     if ($1) {
      $1182 = $$lcssa352;$267 = $1181;$294 = $1180;
     } else {
      $$be = $$lcssa352;$$be341 = $1180;$$be342 = $1181;$l$0$be = $37;$l10n$0$be = $l10n$3;
      break;
     }
    }
    $258 = HEAP8[$$lcssa350>>0]|0;
    $259 = $258 << 24 >> 24;
    $260 = ($st$0$lcssa351|0)!=(0);
    $261 = $259 & 15;
    $262 = ($261|0)==(3);
    $or$cond15 = $260 & $262;
    $263 = $259 & -33;
    $t$0 = $or$cond15 ? $263 : $259;
    $264 = $fl$1 & 8192;
    $265 = ($264|0)==(0);
    $266 = $fl$1 & -65537;
    $fl$1$ = $265 ? $fl$1 : $266;
    L96: do {
     switch ($t$0|0) {
     case 112:  {
      $289 = ($p$0>>>0)>(8);
      $290 = $289 ? $p$0 : 8;
      $291 = $fl$1$ | 8;
      $fl$3 = $291;$p$1 = $290;$t$1 = 120;
      label = 82;
      break;
     }
     case 88: case 120:  {
      $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
      label = 82;
      break;
     }
     case 111:  {
      $315 = ($267|0)==(0);
      $316 = ($294|0)==(0);
      $317 = $315 & $316;
      if ($317) {
       $$0$lcssa$i52 = $2;
      } else {
       $$03$i49 = $2;$319 = $267;$323 = $294;
       while(1) {
        $318 = $319 & 7;
        $320 = $318 | 48;
        $321 = $320&255;
        $322 = (($$03$i49) + -1|0);
        HEAP8[$322>>0] = $321;
        $324 = (_bitshift64Lshr(($319|0),($323|0),3)|0);
        $325 = tempRet0;
        $326 = ($324|0)==(0);
        $327 = ($325|0)==(0);
        $328 = $326 & $327;
        if ($328) {
         $$lcssa385 = $322;
         break;
        } else {
         $$03$i49 = $322;$319 = $324;$323 = $325;
        }
       }
       $$0$lcssa$i52 = $$lcssa385;
      }
      $329 = $fl$1$ & 8;
      $330 = ($329|0)==(0);
      $or$cond19 = $330 | $317;
      $$25 = $or$cond19 ? 4424 : ((4424 + 5|0));
      $331 = $or$cond19&1;
      $$26 = $331 ^ 1;
      $369 = $267;$371 = $294;$a$0 = $$0$lcssa$i52;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$26;$prefix$1 = $$25;
      label = 104;
      break;
     }
     case 99:  {
      $381 = $267&255;
      HEAP8[$4>>0] = $381;
      $1183 = $294;$1184 = $267;$a$2 = $4;$fl$6 = $266;$p$5 = 1;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $2;
      break;
     }
     case 117:  {
      $339 = $294;$341 = $267;$pl$0 = 0;$prefix$0 = 4424;
      label = 96;
      break;
     }
     case 110:  {
      switch ($st$0$lcssa351|0) {
      case 1:  {
       $269 = $267;
       HEAP32[$269>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 2:  {
       $270 = ($cnt$1|0)<(0);
       $271 = $270 << 31 >> 31;
       $272 = $267;
       $273 = $272;
       $274 = $273;
       HEAP32[$274>>2] = $cnt$1;
       $275 = (($273) + 4)|0;
       $276 = $275;
       HEAP32[$276>>2] = $271;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 3:  {
       $277 = $cnt$1&65535;
       $278 = $267;
       HEAP16[$278>>1] = $277;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 4:  {
       $279 = $cnt$1&255;
       $280 = $267;
       HEAP8[$280>>0] = $279;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 6:  {
       $281 = $267;
       HEAP32[$281>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 7:  {
       $282 = ($cnt$1|0)<(0);
       $283 = $282 << 31 >> 31;
       $284 = $267;
       $285 = $284;
       $286 = $285;
       HEAP32[$286>>2] = $cnt$1;
       $287 = (($285) + 4)|0;
       $288 = $287;
       HEAP32[$288>>2] = $283;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      case 0:  {
       $268 = $267;
       HEAP32[$268>>2] = $cnt$1;
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
       break;
      }
      default: {
       $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $37;$l10n$0$be = $l10n$3;
       break L24;
      }
      }
      break;
     }
     case 105: case 100:  {
      $332 = ($294|0)<(0);
      if ($332) {
       $333 = (_i64Subtract(0,0,($267|0),($294|0))|0);
       $334 = tempRet0;
       $339 = $334;$341 = $333;$pl$0 = 1;$prefix$0 = 4424;
       label = 96;
       break L96;
      }
      $335 = $fl$1$ & 2048;
      $336 = ($335|0)==(0);
      if ($336) {
       $337 = $fl$1$ & 1;
       $338 = ($337|0)==(0);
       $$ = $338 ? 4424 : ((4424 + 2|0));
       $339 = $294;$341 = $267;$pl$0 = $337;$prefix$0 = $$;
       label = 96;
      } else {
       $339 = $294;$341 = $267;$pl$0 = 1;$prefix$0 = ((4424 + 1|0));
       label = 96;
      }
      break;
     }
     case 109:  {
      $382 = (___errno_location()|0);
      $383 = HEAP32[$382>>2]|0;
      $384 = (_strerror(($383|0))|0);
      $a$1 = $384;
      label = 109;
      break;
     }
     case 115:  {
      $385 = $267;
      $386 = ($267|0)==(0);
      $$21 = $386 ? 4440 : $385;
      $a$1 = $$21;
      label = 109;
      break;
     }
     case 67:  {
      HEAP32[$wc>>2] = $267;
      HEAP32[$5>>2] = 0;
      $1187 = $wc;$1188 = $6;$p$4271 = -1;
      label = 114;
      break;
     }
     case 83:  {
      $393 = $267;
      $394 = ($p$0|0)==(0);
      if ($394) {
       $1189 = $267;$1190 = $393;$i$0$lcssa272 = 0;
       label = 119;
      } else {
       $1187 = $393;$1188 = $267;$p$4271 = $p$0;
       label = 114;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      HEAP32[tempDoublePtr>>2] = $267;HEAP32[tempDoublePtr+4>>2] = $294;$432 = +HEAPF64[tempDoublePtr>>3];
      HEAP32[$e2$i>>2] = 0;
      $433 = ($294|0)<(0);
      if ($433) {
       $434 = -$432;
       $$013$i = $434;$pl$0$i = 1;$prefix$0$i = 4448;
      } else {
       $435 = $fl$1$ & 2048;
       $436 = ($435|0)==(0);
       if ($436) {
        $437 = $fl$1$ & 1;
        $438 = ($437|0)==(0);
        $$$i = $438 ? ((4448 + 1|0)) : ((4448 + 6|0));
        $$013$i = $432;$pl$0$i = $437;$prefix$0$i = $$$i;
       } else {
        $$013$i = $432;$pl$0$i = 1;$prefix$0$i = ((4448 + 3|0));
       }
      }
      HEAPF64[tempDoublePtr>>3] = $$013$i;$439 = HEAP32[tempDoublePtr>>2]|0;
      $440 = HEAP32[tempDoublePtr+4>>2]|0;
      $441 = $440 & 2146435072;
      $442 = ($441>>>0)<(2146435072);
      $443 = (0)<(0);
      $444 = ($441|0)==(2146435072);
      $445 = $444 & $443;
      $446 = $442 | $445;
      do {
       if ($446) {
        $472 = (+_frexpl($$013$i,$e2$i));
        $473 = $472 * 2.0;
        $474 = $473 != 0.0;
        if ($474) {
         $475 = HEAP32[$e2$i>>2]|0;
         $476 = (($475) + -1)|0;
         HEAP32[$e2$i>>2] = $476;
        }
        $477 = $t$0 | 32;
        $478 = ($477|0)==(97);
        if ($478) {
         $479 = $t$0 & 32;
         $480 = ($479|0)==(0);
         $481 = (($prefix$0$i) + 9|0);
         $prefix$0$$i = $480 ? $prefix$0$i : $481;
         $482 = $pl$0$i | 2;
         $483 = ($p$0>>>0)>(11);
         do {
          if ($483) {
           $$1$i = $473;
          } else {
           $484 = (12 - ($p$0))|0;
           $re$1187$i = $484;$round$0186$i = 8.0;
           while(1) {
            $485 = (($re$1187$i) + -1)|0;
            $486 = $round$0186$i * 16.0;
            $487 = ($485|0)==(0);
            if ($487) {
             $$lcssa378 = $486;
             break;
            } else {
             $re$1187$i = $485;$round$0186$i = $486;
            }
           }
           $488 = HEAP8[$prefix$0$$i>>0]|0;
           $489 = ($488<<24>>24)==(45);
           if ($489) {
            $490 = -$473;
            $491 = $490 - $$lcssa378;
            $492 = $$lcssa378 + $491;
            $493 = -$492;
            $$1$i = $493;
            break;
           } else {
            $494 = $473 + $$lcssa378;
            $495 = $494 - $$lcssa378;
            $$1$i = $495;
            break;
           }
          }
         } while(0);
         $496 = HEAP32[$e2$i>>2]|0;
         $497 = ($496|0)<(0);
         $498 = (0 - ($496))|0;
         $499 = $497 ? $498 : $496;
         $500 = ($499|0)<(0);
         if ($500) {
          $501 = ($499|0)<(0);
          $502 = $501 << 31 >> 31;
          $$05$i$i = $7;$503 = $499;$504 = $502;
          while(1) {
           $505 = (___uremdi3(($503|0),($504|0),10,0)|0);
           $506 = tempRet0;
           $507 = $505 | 48;
           $508 = $507&255;
           $509 = (($$05$i$i) + -1|0);
           HEAP8[$509>>0] = $508;
           $510 = (___udivdi3(($503|0),($504|0),10,0)|0);
           $511 = tempRet0;
           $512 = ($504>>>0)>(9);
           $513 = ($503>>>0)>(4294967295);
           $514 = ($504|0)==(9);
           $515 = $514 & $513;
           $516 = $512 | $515;
           if ($516) {
            $$05$i$i = $509;$503 = $510;$504 = $511;
           } else {
            $$lcssa379 = $509;$1191 = $510;$1192 = $511;
            break;
           }
          }
          $$0$lcssa$i56$i = $$lcssa379;$$01$lcssa$off0$i$i = $1191;
         } else {
          $$0$lcssa$i56$i = $7;$$01$lcssa$off0$i$i = $499;
         }
         $517 = ($$01$lcssa$off0$i$i|0)==(0);
         if ($517) {
          $$1$lcssa$i$i = $$0$lcssa$i56$i;
         } else {
          $$12$i$i = $$0$lcssa$i56$i;$y$03$i$i = $$01$lcssa$off0$i$i;
          while(1) {
           $518 = (($y$03$i$i>>>0) % 10)&-1;
           $519 = $518 | 48;
           $520 = $519&255;
           $521 = (($$12$i$i) + -1|0);
           HEAP8[$521>>0] = $520;
           $522 = (($y$03$i$i>>>0) / 10)&-1;
           $523 = ($y$03$i$i>>>0)<(10);
           if ($523) {
            $$lcssa381 = $521;
            break;
           } else {
            $$12$i$i = $521;$y$03$i$i = $522;
           }
          }
          $$1$lcssa$i$i = $$lcssa381;
         }
         $524 = ($$1$lcssa$i$i|0)==($7|0);
         if ($524) {
          HEAP8[$8>>0] = 48;
          $estr$0$i = $8;
         } else {
          $estr$0$i = $$1$lcssa$i$i;
         }
         $525 = HEAP32[$e2$i>>2]|0;
         $526 = $525 >> 31;
         $527 = $526 & 2;
         $528 = (($527) + 43)|0;
         $529 = $528&255;
         $530 = (($estr$0$i) + -1|0);
         HEAP8[$530>>0] = $529;
         $531 = (($t$0) + 15)|0;
         $532 = $531&255;
         $533 = (($estr$0$i) + -2|0);
         HEAP8[$533>>0] = $532;
         $534 = $fl$1$ & 8;
         $535 = ($534|0)==(0);
         do {
          if ($535) {
           $notrhs$i = ($p$0|0)<(1);
           if ($notrhs$i) {
            $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
            while(1) {
             $536 = (~~(($$2$us$us$i)));
             $537 = (4504 + ($536)|0);
             $538 = HEAP8[$537>>0]|0;
             $539 = $538&255;
             $540 = $539 | $479;
             $541 = $540&255;
             $542 = (($s$0$us$us$i) + 1|0);
             HEAP8[$s$0$us$us$i>>0] = $541;
             $543 = (+($536|0));
             $544 = $$2$us$us$i - $543;
             $545 = $544 * 16.0;
             $546 = $542;
             $547 = (($546) - ($0))|0;
             $548 = ($547|0)!=(1);
             $notlhs$us$us$i = $545 == 0.0;
             $or$cond$i80 = $548 | $notlhs$us$us$i;
             if ($or$cond$i80) {
              $s$1$us$us$i = $542;
             } else {
              $549 = (($s$0$us$us$i) + 2|0);
              HEAP8[$542>>0] = 46;
              $s$1$us$us$i = $549;
             }
             $550 = $545 != 0.0;
             if ($550) {
              $$2$us$us$i = $545;$s$0$us$us$i = $s$1$us$us$i;
             } else {
              $s$1$us$us$i$lcssa = $s$1$us$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$us$i$lcssa;
            break;
           } else {
            $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
            while(1) {
             $551 = (~~(($$2$us$i)));
             $552 = (4504 + ($551)|0);
             $553 = HEAP8[$552>>0]|0;
             $554 = $553&255;
             $555 = $554 | $479;
             $556 = $555&255;
             $557 = (($s$0$us$i) + 1|0);
             HEAP8[$s$0$us$i>>0] = $556;
             $558 = (+($551|0));
             $559 = $$2$us$i - $558;
             $560 = $559 * 16.0;
             $561 = $557;
             $562 = (($561) - ($0))|0;
             $563 = ($562|0)==(1);
             if ($563) {
              $564 = (($s$0$us$i) + 2|0);
              HEAP8[$557>>0] = 46;
              $s$1$us$i = $564;
             } else {
              $s$1$us$i = $557;
             }
             $565 = $560 != 0.0;
             if ($565) {
              $$2$us$i = $560;$s$0$us$i = $s$1$us$i;
             } else {
              $s$1$us$i$lcssa = $s$1$us$i;
              break;
             }
            }
            $s$1$lcssa$i = $s$1$us$i$lcssa;
            break;
           }
          } else {
           $$2$i = $$1$i;$s$0$i = $buf$i;
           while(1) {
            $566 = (~~(($$2$i)));
            $567 = (4504 + ($566)|0);
            $568 = HEAP8[$567>>0]|0;
            $569 = $568&255;
            $570 = $569 | $479;
            $571 = $570&255;
            $572 = (($s$0$i) + 1|0);
            HEAP8[$s$0$i>>0] = $571;
            $573 = (+($566|0));
            $574 = $$2$i - $573;
            $575 = $574 * 16.0;
            $576 = $572;
            $577 = (($576) - ($0))|0;
            $578 = ($577|0)==(1);
            if ($578) {
             $579 = (($s$0$i) + 2|0);
             HEAP8[$572>>0] = 46;
             $s$1$i = $579;
            } else {
             $s$1$i = $572;
            }
            $580 = $575 != 0.0;
            if ($580) {
             $$2$i = $575;$s$0$i = $s$1$i;
            } else {
             $s$1$i$lcssa = $s$1$i;
             break;
            }
           }
           $s$1$lcssa$i = $s$1$i$lcssa;
          }
         } while(0);
         $581 = ($p$0|0)!=(0);
         $$pre308$i = $s$1$lcssa$i;
         $582 = (($11) + ($$pre308$i))|0;
         $583 = ($582|0)<($p$0|0);
         $or$cond274 = $581 & $583;
         $584 = $533;
         if ($or$cond274) {
          $585 = (($12) + ($p$0))|0;
          $586 = (($585) - ($584))|0;
          $l$0$i = $586;
         } else {
          $587 = (($10) - ($584))|0;
          $588 = (($587) + ($$pre308$i))|0;
          $l$0$i = $588;
         }
         $589 = (($l$0$i) + ($482))|0;
         $590 = $fl$1$ & 73728;
         $591 = ($590|0)==(0);
         $592 = ($w$1|0)>($589|0);
         $or$cond$i60$i = $591 & $592;
         if ($or$cond$i60$i) {
          $593 = (($w$1) - ($589))|0;
          $594 = ($593>>>0)>(256);
          $595 = $594 ? 256 : $593;
          _memset(($pad$i|0),32,($595|0))|0;
          $596 = ($593>>>0)>(255);
          if ($596) {
           $$01$i62$i = $593;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $597 = (($$01$i62$i) + -256)|0;
            $598 = ($597>>>0)>(255);
            if ($598) {
             $$01$i62$i = $597;
            } else {
             break;
            }
           }
           $599 = $593 & 255;
           $$0$lcssa$i64$i = $599;
          } else {
           $$0$lcssa$i64$i = $593;
          }
          (___fwritex($pad$i,$$0$lcssa$i64$i,$f)|0);
         }
         (___fwritex($prefix$0$$i,$482,$f)|0);
         $600 = ($590|0)==(65536);
         $or$cond$i67$i = $600 & $592;
         if ($or$cond$i67$i) {
          $601 = (($w$1) - ($589))|0;
          $602 = ($601>>>0)>(256);
          $603 = $602 ? 256 : $601;
          _memset(($pad$i|0),48,($603|0))|0;
          $604 = ($601>>>0)>(255);
          if ($604) {
           $$01$i69$i = $601;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $605 = (($$01$i69$i) + -256)|0;
            $606 = ($605>>>0)>(255);
            if ($606) {
             $$01$i69$i = $605;
            } else {
             break;
            }
           }
           $607 = $601 & 255;
           $$0$lcssa$i71$i = $607;
          } else {
           $$0$lcssa$i71$i = $601;
          }
          (___fwritex($pad$i,$$0$lcssa$i71$i,$f)|0);
         }
         $608 = (($$pre308$i) - ($0))|0;
         (___fwritex($buf$i,$608,$f)|0);
         $609 = $533;
         $610 = (($9) - ($609))|0;
         $611 = (($l$0$i) - ($610))|0;
         $612 = (($611) - ($608))|0;
         $613 = ($612|0)>(0);
         if ($613) {
          $614 = ($612>>>0)>(256);
          $615 = $614 ? 256 : $612;
          _memset(($pad$i|0),48,($615|0))|0;
          $616 = ($612>>>0)>(255);
          if ($616) {
           $$01$i75$i = $612;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $617 = (($$01$i75$i) + -256)|0;
            $618 = ($617>>>0)>(255);
            if ($618) {
             $$01$i75$i = $617;
            } else {
             break;
            }
           }
           $619 = $612 & 255;
           $$0$lcssa$i77$i = $619;
          } else {
           $$0$lcssa$i77$i = $612;
          }
          (___fwritex($pad$i,$$0$lcssa$i77$i,$f)|0);
         }
         (___fwritex($533,$610,$f)|0);
         $620 = ($590|0)==(8192);
         $or$cond$i80$i = $620 & $592;
         if ($or$cond$i80$i) {
          $621 = (($w$1) - ($589))|0;
          $622 = ($621>>>0)>(256);
          $623 = $622 ? 256 : $621;
          _memset(($pad$i|0),32,($623|0))|0;
          $624 = ($621>>>0)>(255);
          if ($624) {
           $$01$i82$i = $621;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $625 = (($$01$i82$i) + -256)|0;
            $626 = ($625>>>0)>(255);
            if ($626) {
             $$01$i82$i = $625;
            } else {
             break;
            }
           }
           $627 = $621 & 255;
           $$0$lcssa$i84$i = $627;
          } else {
           $$0$lcssa$i84$i = $621;
          }
          (___fwritex($pad$i,$$0$lcssa$i84$i,$f)|0);
         }
         $w$25$i = $592 ? $w$1 : $589;
         $$0$i = $w$25$i;
         break;
        }
        $628 = ($p$0|0)<(0);
        $$p$i = $628 ? 6 : $p$0;
        if ($474) {
         $629 = $473 * 268435456.0;
         $630 = HEAP32[$e2$i>>2]|0;
         $631 = (($630) + -28)|0;
         HEAP32[$e2$i>>2] = $631;
         $$3$i = $629;$632 = $631;
        } else {
         $$pre$i = HEAP32[$e2$i>>2]|0;
         $$3$i = $473;$632 = $$pre$i;
        }
        $633 = ($632|0)<(0);
        $$39$i = $633 ? $big$i : $13;
        $634 = $$39$i;
        $$4$i = $$3$i;$z$0$i = $$39$i;
        while(1) {
         $635 = (~~(($$4$i))>>>0);
         HEAP32[$z$0$i>>2] = $635;
         $636 = (($z$0$i) + 4|0);
         $637 = (+($635>>>0));
         $638 = $$4$i - $637;
         $639 = $638 * 1.0E+9;
         $640 = $639 != 0.0;
         if ($640) {
          $$4$i = $639;$z$0$i = $636;
         } else {
          $$lcssa355 = $636;
          break;
         }
        }
        $$pr$i = HEAP32[$e2$i>>2]|0;
        $641 = ($$pr$i|0)>(0);
        if ($641) {
         $642 = $$pr$i;$a$1261$i = $$39$i;$z$1260$i = $$lcssa355;
         while(1) {
          $643 = ($642|0)>(29);
          $644 = $643 ? 29 : $642;
          $d$0253$i = (($z$1260$i) + -4|0);
          $645 = ($d$0253$i>>>0)<($a$1261$i>>>0);
          do {
           if ($645) {
            $a$2$ph$i = $a$1261$i;
           } else {
            $655 = $z$1260$i;$carry$0254$i = 0;$d$0255$i = $d$0253$i;
            while(1) {
             $646 = HEAP32[$d$0255$i>>2]|0;
             $647 = (_bitshift64Shl(($646|0),0,($644|0))|0);
             $648 = tempRet0;
             $649 = (_i64Add(($647|0),($648|0),($carry$0254$i|0),0)|0);
             $650 = tempRet0;
             $651 = (___uremdi3(($649|0),($650|0),1000000000,0)|0);
             $652 = tempRet0;
             HEAP32[$d$0255$i>>2] = $651;
             $653 = (___udivdi3(($649|0),($650|0),1000000000,0)|0);
             $654 = tempRet0;
             $d$0$i = (($655) + -8|0);
             $656 = ($d$0$i>>>0)<($a$1261$i>>>0);
             if ($656) {
              $$lcssa356 = $653;
              break;
             } else {
              $655$phi = $d$0255$i;$carry$0254$i = $653;$d$0255$i = $d$0$i;$655 = $655$phi;
             }
            }
            $657 = ($$lcssa356|0)==(0);
            if ($657) {
             $a$2$ph$i = $a$1261$i;
             break;
            }
            $658 = (($a$1261$i) + -4|0);
            HEAP32[$658>>2] = $$lcssa356;
            $a$2$ph$i = $658;
           }
          } while(0);
          $z$2$i = $z$1260$i;
          while(1) {
           $659 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
           if (!($659)) {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
           $660 = (($z$2$i) + -4|0);
           $661 = HEAP32[$660>>2]|0;
           $662 = ($661|0)==(0);
           if ($662) {
            $z$2$i = $660;
           } else {
            $z$2$i$lcssa = $z$2$i;
            break;
           }
          }
          $663 = HEAP32[$e2$i>>2]|0;
          $664 = (($663) - ($644))|0;
          HEAP32[$e2$i>>2] = $664;
          $665 = ($664|0)>(0);
          if ($665) {
           $642 = $664;$a$1261$i = $a$2$ph$i;$z$1260$i = $z$2$i$lcssa;
          } else {
           $$lcssa357 = $664;$a$2$ph$i$lcssa = $a$2$ph$i;$z$2$i$lcssa$lcssa = $z$2$i$lcssa;
           break;
          }
         }
         $$pr154$i = $$lcssa357;$a$1$lcssa$i = $a$2$ph$i$lcssa;$z$1$lcssa$i = $z$2$i$lcssa$lcssa;
        } else {
         $$pr154$i = $$pr$i;$a$1$lcssa$i = $$39$i;$z$1$lcssa$i = $$lcssa355;
        }
        $666 = ($$pr154$i|0)<(0);
        do {
         if ($666) {
          $667 = (($$p$i) + 25)|0;
          $668 = (($667|0) / 9)&-1;
          $669 = (($668) + 1)|0;
          $670 = ($477|0)==(102);
          if ($670) {
           $671 = (($$39$i) + ($669<<2)|0);
           $672 = $$pr154$i;$a$3248$us$i = $a$1$lcssa$i;$z$3247$us$i = $z$1$lcssa$i;
           while(1) {
            $673 = ($672|0)<(-9);
            $674 = (0 - ($672))|0;
            $$26$us$i = $673 ? 9 : $674;
            $675 = ($a$3248$us$i>>>0)<($z$3247$us$i>>>0);
            do {
             if ($675) {
              $700 = 1 << $$26$us$i;
              $693 = (($700) + -1)|0;
              $697 = 1000000000 >>> $$26$us$i;
              $carry3$0242$us$i = 0;$d$1241$us$i = $a$3248$us$i;
              while(1) {
               $691 = HEAP32[$d$1241$us$i>>2]|0;
               $692 = $691 & $693;
               $694 = $691 >>> $$26$us$i;
               $695 = (($694) + ($carry3$0242$us$i))|0;
               HEAP32[$d$1241$us$i>>2] = $695;
               $696 = Math_imul($692, $697)|0;
               $698 = (($d$1241$us$i) + 4|0);
               $699 = ($698>>>0)<($z$3247$us$i>>>0);
               if ($699) {
                $carry3$0242$us$i = $696;$d$1241$us$i = $698;
               } else {
                $$lcssa359 = $696;
                break;
               }
              }
              $679 = HEAP32[$a$3248$us$i>>2]|0;
              $680 = ($679|0)==(0);
              $681 = (($a$3248$us$i) + 4|0);
              $$a$3$us$i = $680 ? $681 : $a$3248$us$i;
              $682 = ($$lcssa359|0)==(0);
              if ($682) {
               $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $z$3247$us$i;
               break;
              }
              $683 = (($z$3247$us$i) + 4|0);
              HEAP32[$z$3247$us$i>>2] = $$lcssa359;
              $$a$3$us310$i = $$a$3$us$i;$z$4$us$i = $683;
             } else {
              $676 = HEAP32[$a$3248$us$i>>2]|0;
              $677 = ($676|0)==(0);
              $678 = (($a$3248$us$i) + 4|0);
              $$a$3$us309$i = $677 ? $678 : $a$3248$us$i;
              $$a$3$us310$i = $$a$3$us309$i;$z$4$us$i = $z$3247$us$i;
             }
            } while(0);
            $684 = $z$4$us$i;
            $685 = (($684) - ($634))|0;
            $686 = $685 >> 2;
            $687 = ($686|0)>($669|0);
            $$z$4$us$i = $687 ? $671 : $z$4$us$i;
            $688 = HEAP32[$e2$i>>2]|0;
            $689 = (($688) + ($$26$us$i))|0;
            HEAP32[$e2$i>>2] = $689;
            $690 = ($689|0)<(0);
            if ($690) {
             $672 = $689;$a$3248$us$i = $$a$3$us310$i;$z$3247$us$i = $$z$4$us$i;
            } else {
             $$a$3$us310$i$lcssa = $$a$3$us310$i;$$z$4$us$i$lcssa = $$z$4$us$i;
             break;
            }
           }
           $a$3$lcssa$i = $$a$3$us310$i$lcssa;$z$3$lcssa$i = $$z$4$us$i$lcssa;
           break;
          }
          $701 = $$pr154$i;$a$3248$i = $a$1$lcssa$i;$z$3247$i = $z$1$lcssa$i;
          while(1) {
           $702 = ($701|0)<(-9);
           $703 = (0 - ($701))|0;
           $$26$i = $702 ? 9 : $703;
           $704 = ($a$3248$i>>>0)<($z$3247$i>>>0);
           do {
            if ($704) {
             $708 = 1 << $$26$i;
             $709 = (($708) + -1)|0;
             $710 = 1000000000 >>> $$26$i;
             $carry3$0242$i = 0;$d$1241$i = $a$3248$i;
             while(1) {
              $711 = HEAP32[$d$1241$i>>2]|0;
              $712 = $711 & $709;
              $713 = $711 >>> $$26$i;
              $714 = (($713) + ($carry3$0242$i))|0;
              HEAP32[$d$1241$i>>2] = $714;
              $715 = Math_imul($712, $710)|0;
              $716 = (($d$1241$i) + 4|0);
              $717 = ($716>>>0)<($z$3247$i>>>0);
              if ($717) {
               $carry3$0242$i = $715;$d$1241$i = $716;
              } else {
               $$lcssa358 = $715;
               break;
              }
             }
             $718 = HEAP32[$a$3248$i>>2]|0;
             $719 = ($718|0)==(0);
             $720 = (($a$3248$i) + 4|0);
             $$a$3$i = $719 ? $720 : $a$3248$i;
             $721 = ($$lcssa358|0)==(0);
             if ($721) {
              $$a$3312$i = $$a$3$i;$z$4$i = $z$3247$i;
              break;
             }
             $722 = (($z$3247$i) + 4|0);
             HEAP32[$z$3247$i>>2] = $$lcssa358;
             $$a$3312$i = $$a$3$i;$z$4$i = $722;
            } else {
             $705 = HEAP32[$a$3248$i>>2]|0;
             $706 = ($705|0)==(0);
             $707 = (($a$3248$i) + 4|0);
             $$a$3311$i = $706 ? $707 : $a$3248$i;
             $$a$3312$i = $$a$3311$i;$z$4$i = $z$3247$i;
            }
           } while(0);
           $723 = $z$4$i;
           $724 = $$a$3312$i;
           $725 = (($723) - ($724))|0;
           $726 = $725 >> 2;
           $727 = ($726|0)>($669|0);
           if ($727) {
            $728 = (($$a$3312$i) + ($669<<2)|0);
            $z$5$i = $728;
           } else {
            $z$5$i = $z$4$i;
           }
           $729 = HEAP32[$e2$i>>2]|0;
           $730 = (($729) + ($$26$i))|0;
           HEAP32[$e2$i>>2] = $730;
           $731 = ($730|0)<(0);
           if ($731) {
            $701 = $730;$a$3248$i = $$a$3312$i;$z$3247$i = $z$5$i;
           } else {
            $$a$3312$i$lcssa = $$a$3312$i;$z$5$i$lcssa = $z$5$i;
            break;
           }
          }
          $a$3$lcssa$i = $$a$3312$i$lcssa;$z$3$lcssa$i = $z$5$i$lcssa;
         } else {
          $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
         }
        } while(0);
        $732 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
        do {
         if ($732) {
          $733 = $a$3$lcssa$i;
          $734 = (($634) - ($733))|0;
          $735 = $734 >> 2;
          $736 = ($735*9)|0;
          $737 = HEAP32[$a$3$lcssa$i>>2]|0;
          $738 = ($737>>>0)<(10);
          if ($738) {
           $e$1$i = $736;
           break;
          }
          $e$0237$i = $736;$i$0236$i = 10;
          while(1) {
           $739 = ($i$0236$i*10)|0;
           $740 = (($e$0237$i) + 1)|0;
           $741 = ($737>>>0)<($739>>>0);
           if ($741) {
            $$lcssa360 = $740;
            break;
           } else {
            $e$0237$i = $740;$i$0236$i = $739;
           }
          }
          $e$1$i = $$lcssa360;
         } else {
          $e$1$i = 0;
         }
        } while(0);
        $742 = ($477|0)!=(102);
        $743 = $742 ? $e$1$i : 0;
        $744 = (($$p$i) - ($743))|0;
        $745 = ($477|0)==(103);
        $746 = ($$p$i|0)!=(0);
        $$27$i = $746 & $745;
        $$neg159$i = $$27$i << 31 >> 31;
        $747 = (($744) + ($$neg159$i))|0;
        $748 = $z$3$lcssa$i;
        $749 = (($748) - ($634))|0;
        $750 = $749 >> 2;
        $751 = ($750*9)|0;
        $752 = (($751) + -9)|0;
        $753 = ($747|0)<($752|0);
        if ($753) {
         $754 = (($747) + 9216)|0;
         $755 = (($754|0) / 9)&-1;
         $$sum$i = (($755) + -1023)|0;
         $756 = (($$39$i) + ($$sum$i<<2)|0);
         $757 = (($754|0) % 9)&-1;
         $j$0229$i = (($757) + 1)|0;
         $758 = ($j$0229$i|0)<(9);
         if ($758) {
          $i$1230$i = 10;$j$0231$i = $j$0229$i;
          while(1) {
           $759 = ($i$1230$i*10)|0;
           $j$0$i = (($j$0231$i) + 1)|0;
           $exitcond$i = ($j$0231$i|0)==(8);
           if ($exitcond$i) {
            $$lcssa361 = $759;
            break;
           } else {
            $i$1230$i = $759;$j$0231$i = $j$0$i;
           }
          }
          $i$1$lcssa$i = $$lcssa361;
         } else {
          $i$1$lcssa$i = 10;
         }
         $760 = HEAP32[$756>>2]|0;
         $761 = (($760>>>0) % ($i$1$lcssa$i>>>0))&-1;
         $762 = ($761|0)==(0);
         if ($762) {
          $$sum21$i = (($755) + -1022)|0;
          $763 = (($$39$i) + ($$sum21$i<<2)|0);
          $764 = ($763|0)==($z$3$lcssa$i|0);
          if ($764) {
           $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
          } else {
           label = 274;
          }
         } else {
          label = 274;
         }
         do {
          if ((label|0) == 274) {
           label = 0;
           $765 = (($760>>>0) / ($i$1$lcssa$i>>>0))&-1;
           $766 = $765 & 1;
           $767 = ($766|0)==(0);
           $$28$i = $767 ? 9007199254740992.0 : 9007199254740994.0;
           $768 = (($i$1$lcssa$i|0) / 2)&-1;
           $769 = ($761>>>0)<($768>>>0);
           do {
            if ($769) {
             $small$0$i = 0.5;
            } else {
             $770 = ($761|0)==($768|0);
             if ($770) {
              $$sum22$i = (($755) + -1022)|0;
              $771 = (($$39$i) + ($$sum22$i<<2)|0);
              $772 = ($771|0)==($z$3$lcssa$i|0);
              if ($772) {
               $small$0$i = 1.0;
               break;
              }
             }
             $small$0$i = 1.5;
            }
           } while(0);
           $773 = ($pl$0$i|0)==(0);
           do {
            if ($773) {
             $round6$1$i = $$28$i;$small$1$i = $small$0$i;
            } else {
             $774 = HEAP8[$prefix$0$i>>0]|0;
             $775 = ($774<<24>>24)==(45);
             if (!($775)) {
              $round6$1$i = $$28$i;$small$1$i = $small$0$i;
              break;
             }
             $776 = -$$28$i;
             $777 = -$small$0$i;
             $round6$1$i = $776;$small$1$i = $777;
            }
           } while(0);
           $778 = (($760) - ($761))|0;
           HEAP32[$756>>2] = $778;
           $779 = $round6$1$i + $small$1$i;
           $780 = $779 != $round6$1$i;
           if (!($780)) {
            $a$7$i = $a$3$lcssa$i;$d$3$i = $756;$e$3$i = $e$1$i;
            break;
           }
           $781 = (($778) + ($i$1$lcssa$i))|0;
           HEAP32[$756>>2] = $781;
           $782 = ($781>>>0)>(999999999);
           if ($782) {
            $a$5223$i = $a$3$lcssa$i;$d$2222$i = $756;
            while(1) {
             $783 = (($d$2222$i) + -4|0);
             HEAP32[$d$2222$i>>2] = 0;
             $784 = ($783>>>0)<($a$5223$i>>>0);
             if ($784) {
              $785 = (($a$5223$i) + -4|0);
              HEAP32[$785>>2] = 0;
              $a$6$i = $785;
             } else {
              $a$6$i = $a$5223$i;
             }
             $786 = HEAP32[$783>>2]|0;
             $787 = (($786) + 1)|0;
             HEAP32[$783>>2] = $787;
             $788 = ($787>>>0)>(999999999);
             if ($788) {
              $a$5223$i = $a$6$i;$d$2222$i = $783;
             } else {
              $$lcssa362 = $783;$a$6$i$lcssa = $a$6$i;
              break;
             }
            }
            $a$5$lcssa$i = $a$6$i$lcssa;$d$2$lcssa$i = $$lcssa362;
           } else {
            $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $756;
           }
           $789 = $a$5$lcssa$i;
           $790 = (($634) - ($789))|0;
           $791 = $790 >> 2;
           $792 = ($791*9)|0;
           $793 = HEAP32[$a$5$lcssa$i>>2]|0;
           $794 = ($793>>>0)<(10);
           if ($794) {
            $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $792;
            break;
           }
           $e$2218$i = $792;$i$2217$i = 10;
           while(1) {
            $795 = ($i$2217$i*10)|0;
            $796 = (($e$2218$i) + 1)|0;
            $797 = ($793>>>0)<($795>>>0);
            if ($797) {
             $$lcssa363 = $796;
             break;
            } else {
             $e$2218$i = $796;$i$2217$i = $795;
            }
           }
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $$lcssa363;
          }
         } while(0);
         $798 = (($d$3$i) + 4|0);
         $799 = ($z$3$lcssa$i>>>0)>($798>>>0);
         $$z$3$i = $799 ? $798 : $z$3$lcssa$i;
         $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
        } else {
         $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
        }
        $a$8$ph294$i = $a$8$ph$i;
        $800 = (0 - ($e$4$ph$i))|0;
        $z$6$i = $z$6$ph$i;
        while(1) {
         $801 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
         if (!($801)) {
          $$lcssa283$i = 0;$z$6$i$lcssa = $z$6$i;
          break;
         }
         $802 = (($z$6$i) + -4|0);
         $803 = HEAP32[$802>>2]|0;
         $804 = ($803|0)==(0);
         if ($804) {
          $z$6$i = $802;
         } else {
          $$lcssa283$i = 1;$z$6$i$lcssa = $z$6$i;
          break;
         }
        }
        do {
         if ($745) {
          $805 = ($$p$i|0)==(0);
          $806 = $805&1;
          $$$p$i = (($806) + ($$p$i))|0;
          $807 = ($$$p$i|0)>($e$4$ph$i|0);
          $808 = ($e$4$ph$i|0)>(-5);
          $or$cond6$i = $807 & $808;
          if ($or$cond6$i) {
           $809 = (($t$0) + -1)|0;
           $$neg160$i = (($$$p$i) + -1)|0;
           $810 = (($$neg160$i) - ($e$4$ph$i))|0;
           $$019$i = $809;$$216$i = $810;
          } else {
           $811 = (($t$0) + -2)|0;
           $812 = (($$$p$i) + -1)|0;
           $$019$i = $811;$$216$i = $812;
          }
          $813 = $fl$1$ & 8;
          $814 = ($813|0)==(0);
          if (!($814)) {
           $$120$i = $$019$i;$$317$i = $$216$i;
           break;
          }
          do {
           if ($$lcssa283$i) {
            $815 = (($z$6$i$lcssa) + -4|0);
            $816 = HEAP32[$815>>2]|0;
            $817 = ($816|0)==(0);
            if ($817) {
             $j$2$i = 9;
             break;
            }
            $818 = (($816>>>0) % 10)&-1;
            $819 = ($818|0)==(0);
            if (!($819)) {
             $j$2$i = 0;
             break;
            }
            $i$3213$i = 10;$j$1214$i = 0;
            while(1) {
             $820 = ($i$3213$i*10)|0;
             $821 = (($j$1214$i) + 1)|0;
             $822 = (($816>>>0) % ($820>>>0))&-1;
             $823 = ($822|0)==(0);
             if ($823) {
              $i$3213$i = $820;$j$1214$i = $821;
             } else {
              $$lcssa364 = $821;
              break;
             }
            }
            $j$2$i = $$lcssa364;
           } else {
            $j$2$i = 9;
           }
          } while(0);
          $824 = $$019$i | 32;
          $825 = ($824|0)==(102);
          $826 = $z$6$i$lcssa;
          $827 = (($826) - ($634))|0;
          $828 = $827 >> 2;
          $829 = ($828*9)|0;
          $830 = (($829) + -9)|0;
          if ($825) {
           $831 = (($830) - ($j$2$i))|0;
           $832 = ($831|0)<(0);
           $$29$i = $832 ? 0 : $831;
           $833 = ($$216$i|0)<($$29$i|0);
           $$216$$29$i = $833 ? $$216$i : $$29$i;
           $$120$i = $$019$i;$$317$i = $$216$$29$i;
           break;
          } else {
           $834 = (($830) + ($e$4$ph$i))|0;
           $835 = (($834) - ($j$2$i))|0;
           $836 = ($835|0)<(0);
           $$31$i = $836 ? 0 : $835;
           $837 = ($$216$i|0)<($$31$i|0);
           $$216$$31$i = $837 ? $$216$i : $$31$i;
           $$120$i = $$019$i;$$317$i = $$216$$31$i;
           break;
          }
         } else {
          $$120$i = $t$0;$$317$i = $$p$i;
         }
        } while(0);
        $838 = ($$317$i|0)!=(0);
        if ($838) {
         $842 = 1;
        } else {
         $839 = $fl$1$ & 8;
         $840 = ($839|0)!=(0);
         $842 = $840;
        }
        $841 = $842&1;
        $843 = $$120$i | 32;
        $844 = ($843|0)==(102);
        if ($844) {
         $845 = ($e$4$ph$i|0)>(0);
         $846 = $845 ? $e$4$ph$i : 0;
         $$pn$i = $846;$estr$2$i = 0;
        } else {
         $847 = ($e$4$ph$i|0)<(0);
         $848 = $847 ? $800 : $e$4$ph$i;
         $849 = ($848|0)<(0);
         if ($849) {
          $850 = ($848|0)<(0);
          $851 = $850 << 31 >> 31;
          $$05$i87$i = $7;$852 = $848;$853 = $851;
          while(1) {
           $854 = (___uremdi3(($852|0),($853|0),10,0)|0);
           $855 = tempRet0;
           $856 = $854 | 48;
           $857 = $856&255;
           $858 = (($$05$i87$i) + -1|0);
           HEAP8[$858>>0] = $857;
           $859 = (___udivdi3(($852|0),($853|0),10,0)|0);
           $860 = tempRet0;
           $861 = ($853>>>0)>(9);
           $862 = ($852>>>0)>(4294967295);
           $863 = ($853|0)==(9);
           $864 = $863 & $862;
           $865 = $861 | $864;
           if ($865) {
            $$05$i87$i = $858;$852 = $859;$853 = $860;
           } else {
            $$lcssa365 = $858;$1193 = $859;$1194 = $860;
            break;
           }
          }
          $$0$lcssa$i92$i = $$lcssa365;$$01$lcssa$off0$i93$i = $1193;
         } else {
          $$0$lcssa$i92$i = $7;$$01$lcssa$off0$i93$i = $848;
         }
         $866 = ($$01$lcssa$off0$i93$i|0)==(0);
         if ($866) {
          $estr$1$ph$i = $$0$lcssa$i92$i;
         } else {
          $$12$i95$i = $$0$lcssa$i92$i;$y$03$i94$i = $$01$lcssa$off0$i93$i;
          while(1) {
           $867 = (($y$03$i94$i>>>0) % 10)&-1;
           $868 = $867 | 48;
           $869 = $868&255;
           $870 = (($$12$i95$i) + -1|0);
           HEAP8[$870>>0] = $869;
           $871 = (($y$03$i94$i>>>0) / 10)&-1;
           $872 = ($y$03$i94$i>>>0)<(10);
           if ($872) {
            $$lcssa367 = $870;
            break;
           } else {
            $$12$i95$i = $870;$y$03$i94$i = $871;
           }
          }
          $estr$1$ph$i = $$lcssa367;
         }
         $873 = $estr$1$ph$i;
         $874 = (($9) - ($873))|0;
         $875 = ($874|0)<(2);
         if ($875) {
          $estr$1209$i = $estr$1$ph$i;
          while(1) {
           $876 = (($estr$1209$i) + -1|0);
           HEAP8[$876>>0] = 48;
           $877 = $876;
           $878 = (($9) - ($877))|0;
           $879 = ($878|0)<(2);
           if ($879) {
            $estr$1209$i = $876;
           } else {
            $$lcssa368 = $876;
            break;
           }
          }
          $estr$1$lcssa$i = $$lcssa368;
         } else {
          $estr$1$lcssa$i = $estr$1$ph$i;
         }
         $880 = $e$4$ph$i >> 31;
         $881 = $880 & 2;
         $882 = (($881) + 43)|0;
         $883 = $882&255;
         $884 = (($estr$1$lcssa$i) + -1|0);
         HEAP8[$884>>0] = $883;
         $885 = $$120$i&255;
         $886 = (($estr$1$lcssa$i) + -2|0);
         HEAP8[$886>>0] = $885;
         $887 = $886;
         $888 = (($9) - ($887))|0;
         $$pn$i = $888;$estr$2$i = $886;
        }
        $889 = (($pl$0$i) + 1)|0;
        $890 = (($889) + ($$317$i))|0;
        $l$1$i = (($890) + ($841))|0;
        $891 = (($l$1$i) + ($$pn$i))|0;
        $892 = $fl$1$ & 73728;
        $893 = ($892|0)==(0);
        $894 = ($w$1|0)>($891|0);
        $or$cond$i101$i = $893 & $894;
        if ($or$cond$i101$i) {
         $895 = (($w$1) - ($891))|0;
         $896 = ($895>>>0)>(256);
         $897 = $896 ? 256 : $895;
         _memset(($pad$i|0),32,($897|0))|0;
         $898 = ($895>>>0)>(255);
         if ($898) {
          $$01$i103$i = $895;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $899 = (($$01$i103$i) + -256)|0;
           $900 = ($899>>>0)>(255);
           if ($900) {
            $$01$i103$i = $899;
           } else {
            break;
           }
          }
          $901 = $895 & 255;
          $$0$lcssa$i105$i = $901;
         } else {
          $$0$lcssa$i105$i = $895;
         }
         (___fwritex($pad$i,$$0$lcssa$i105$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
        $902 = ($892|0)==(65536);
        $or$cond$i108$i = $902 & $894;
        if ($or$cond$i108$i) {
         $903 = (($w$1) - ($891))|0;
         $904 = ($903>>>0)>(256);
         $905 = $904 ? 256 : $903;
         _memset(($pad$i|0),48,($905|0))|0;
         $906 = ($903>>>0)>(255);
         if ($906) {
          $$01$i110$i = $903;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $907 = (($$01$i110$i) + -256)|0;
           $908 = ($907>>>0)>(255);
           if ($908) {
            $$01$i110$i = $907;
           } else {
            break;
           }
          }
          $909 = $903 & 255;
          $$0$lcssa$i112$i = $909;
         } else {
          $$0$lcssa$i112$i = $903;
         }
         (___fwritex($pad$i,$$0$lcssa$i112$i,$f)|0);
        }
        if ($844) {
         $910 = ($a$8$ph$i>>>0)>($$39$i>>>0);
         $r$0$a$8$i = $910 ? $$39$i : $a$8$ph$i;
         $911 = $634 ^ -1;
         $912 = $a$8$ph294$i ^ -1;
         $913 = ($911>>>0)>($912>>>0);
         $umax$i = $913 ? $911 : $912;
         $914 = (3 - ($umax$i))|0;
         $uglygep$i = (($$39$i) + 1|0);
         $uglygep296$i = $uglygep$i;
         $915 = ($914>>>0)>($uglygep296$i>>>0);
         $umax297$i = $915 ? $914 : $uglygep296$i;
         $umax297298299$i = $umax297$i;
         $uglygep300$i = (($umax297298299$i) + ($umax$i)|0);
         $uglygep300301$i = $uglygep300$i;
         $916 = $umax$i ^ -1;
         $d$4199$i = $r$0$a$8$i;
         while(1) {
          $917 = HEAP32[$d$4199$i>>2]|0;
          $918 = ($917|0)==(0);
          if ($918) {
           $$1$lcssa$i120$i = $14;
          } else {
           $$12$i118$i = $14;$y$03$i117$i = $917;
           while(1) {
            $919 = (($y$03$i117$i>>>0) % 10)&-1;
            $920 = $919 | 48;
            $921 = $920&255;
            $922 = (($$12$i118$i) + -1|0);
            HEAP8[$922>>0] = $921;
            $923 = (($y$03$i117$i>>>0) / 10)&-1;
            $924 = ($y$03$i117$i>>>0)<(10);
            if ($924) {
             $$lcssa372 = $922;
             break;
            } else {
             $$12$i118$i = $922;$y$03$i117$i = $923;
            }
           }
           $$1$lcssa$i120$i = $$lcssa372;
          }
          $925 = ($d$4199$i|0)==($r$0$a$8$i|0);
          do {
           if ($925) {
            $929 = ($$1$lcssa$i120$i|0)==($14|0);
            if (!($929)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            HEAP8[$16>>0] = 48;
            $s7$1$i = $16;
           } else {
            $926 = ($$1$lcssa$i120$i>>>0)>($buf$i>>>0);
            if (!($926)) {
             $s7$1$i = $$1$lcssa$i120$i;
             break;
            }
            $s7$0196$i = $$1$lcssa$i120$i;
            while(1) {
             $927 = (($s7$0196$i) + -1|0);
             HEAP8[$927>>0] = 48;
             $928 = ($927>>>0)>($buf$i>>>0);
             if ($928) {
              $s7$0196$i = $927;
             } else {
              $$lcssa373 = $927;
              break;
             }
            }
            $s7$1$i = $$lcssa373;
           }
          } while(0);
          $930 = $s7$1$i;
          $931 = (($15) - ($930))|0;
          (___fwritex($s7$1$i,$931,$f)|0);
          $932 = (($d$4199$i) + 4|0);
          $933 = ($932>>>0)>($$39$i>>>0);
          if ($933) {
           $$lcssa374 = $932;
           break;
          } else {
           $d$4199$i = $932;
          }
         }
         $934 = $uglygep300301$i & -4;
         $935 = (($934) + ($916))|0;
         $936 = $935;
         $$not$i = $838 ^ 1;
         $937 = $fl$1$ & 8;
         $938 = ($937|0)==(0);
         $or$cond35$i = $938 & $$not$i;
         if (!($or$cond35$i)) {
          (___fwritex(4520,1,$f)|0);
         }
         $939 = ($$lcssa374>>>0)<($z$6$i$lcssa>>>0);
         $940 = ($$317$i|0)>(0);
         $or$cond10191$i = $940 & $939;
         if ($or$cond10191$i) {
          $$418193$i = $$317$i;$955 = $936;$d$5192$i = $$lcssa374;
          while(1) {
           $941 = HEAP32[$d$5192$i>>2]|0;
           $942 = ($941|0)==(0);
           if ($942) {
            $s8$0188$i$ph = $14;
            label = 361;
           } else {
            $$12$i127$i = $14;$y$03$i126$i = $941;
            while(1) {
             $943 = (($y$03$i126$i>>>0) % 10)&-1;
             $944 = $943 | 48;
             $945 = $944&255;
             $946 = (($$12$i127$i) + -1|0);
             HEAP8[$946>>0] = $945;
             $947 = (($y$03$i126$i>>>0) / 10)&-1;
             $948 = ($y$03$i126$i>>>0)<(10);
             if ($948) {
              $$lcssa375 = $946;
              break;
             } else {
              $$12$i127$i = $946;$y$03$i126$i = $947;
             }
            }
            $949 = ($$lcssa375>>>0)>($buf$i>>>0);
            if ($949) {
             $s8$0188$i$ph = $$lcssa375;
             label = 361;
            } else {
             $s8$0$lcssa$i = $$lcssa375;
            }
           }
           if ((label|0) == 361) {
            label = 0;
            $s8$0188$i = $s8$0188$i$ph;
            while(1) {
             $950 = (($s8$0188$i) + -1|0);
             HEAP8[$950>>0] = 48;
             $951 = ($950>>>0)>($buf$i>>>0);
             if ($951) {
              $s8$0188$i = $950;
             } else {
              $$lcssa376 = $950;
              break;
             }
            }
            $s8$0$lcssa$i = $$lcssa376;
           }
           $952 = ($$418193$i|0)>(9);
           $953 = $952 ? 9 : $$418193$i;
           (___fwritex($s8$0$lcssa$i,$953,$f)|0);
           $954 = (($955) + 8|0);
           $956 = (($$418193$i) + -9)|0;
           $957 = ($954>>>0)<($z$6$i$lcssa>>>0);
           $or$cond10$i = $952 & $957;
           if ($or$cond10$i) {
            $955$phi = $d$5192$i;$$418193$i = $956;$d$5192$i = $954;$955 = $955$phi;
           } else {
            $$lcssa377 = $956;
            break;
           }
          }
          $$418$lcssa$i = $$lcssa377;
         } else {
          $$418$lcssa$i = $$317$i;
         }
         $958 = ($$418$lcssa$i|0)>(0);
         if ($958) {
          $959 = ($$418$lcssa$i>>>0)>(256);
          $960 = $959 ? 256 : $$418$lcssa$i;
          _memset(($pad$i|0),48,($960|0))|0;
          $961 = ($$418$lcssa$i>>>0)>(255);
          if ($961) {
           $$01$i134$i = $$418$lcssa$i;
           while(1) {
            (___fwritex($pad$i,256,$f)|0);
            $962 = (($$01$i134$i) + -256)|0;
            $963 = ($962>>>0)>(255);
            if ($963) {
             $$01$i134$i = $962;
            } else {
             break;
            }
           }
           $964 = $$418$lcssa$i & 255;
           $$0$lcssa$i136$i = $964;
          } else {
           $$0$lcssa$i136$i = $$418$lcssa$i;
          }
          (___fwritex($pad$i,$$0$lcssa$i136$i,$f)|0);
         }
        } else {
         $965 = (($a$8$ph$i) + 4|0);
         $z$6$$i = $$lcssa283$i ? $z$6$i$lcssa : $965;
         $966 = ($$317$i|0)>(-1);
         do {
          if ($966) {
           $967 = $fl$1$ & 8;
           $968 = ($967|0)==(0);
           $$5205$i = $$317$i;$d$6204$i = $a$8$ph$i;
           while(1) {
            $969 = HEAP32[$d$6204$i>>2]|0;
            $970 = ($969|0)==(0);
            if ($970) {
             label = 380;
            } else {
             $$12$i142$i = $14;$y$03$i141$i = $969;
             while(1) {
              $971 = (($y$03$i141$i>>>0) % 10)&-1;
              $972 = $971 | 48;
              $973 = $972&255;
              $974 = (($$12$i142$i) + -1|0);
              HEAP8[$974>>0] = $973;
              $975 = (($y$03$i141$i>>>0) / 10)&-1;
              $976 = ($y$03$i141$i>>>0)<(10);
              if ($976) {
               $$12$i142$i$lcssa = $$12$i142$i;$$lcssa369 = $974;
               break;
              } else {
               $$12$i142$i = $974;$y$03$i141$i = $975;
              }
             }
             $977 = ($$lcssa369|0)==($14|0);
             if ($977) {
              label = 380;
             } else {
              $1195 = $$12$i142$i$lcssa;$s9$0$i = $$lcssa369;
             }
            }
            if ((label|0) == 380) {
             label = 0;
             HEAP8[$16>>0] = 48;
             $1195 = $14;$s9$0$i = $16;
            }
            $978 = ($d$6204$i|0)==($a$8$ph$i|0);
            do {
             if ($978) {
              (___fwritex($s9$0$i,1,$f)|0);
              $982 = ($$5205$i|0)<(1);
              $or$cond37$i = $968 & $982;
              if ($or$cond37$i) {
               $s9$2$i = $1195;
               break;
              }
              (___fwritex(4520,1,$f)|0);
              $s9$2$i = $1195;
             } else {
              $979 = ($s9$0$i>>>0)>($buf$i>>>0);
              if (!($979)) {
               $s9$2$i = $s9$0$i;
               break;
              }
              $s9$1200$i = $s9$0$i;
              while(1) {
               $980 = (($s9$1200$i) + -1|0);
               HEAP8[$980>>0] = 48;
               $981 = ($980>>>0)>($buf$i>>>0);
               if ($981) {
                $s9$1200$i = $980;
               } else {
                $$lcssa370 = $980;
                break;
               }
              }
              $s9$2$i = $$lcssa370;
             }
            } while(0);
            $983 = $s9$2$i;
            $984 = (($15) - ($983))|0;
            $985 = ($$5205$i|0)>($984|0);
            $$$5$i = $985 ? $984 : $$5205$i;
            (___fwritex($s9$2$i,$$$5$i,$f)|0);
            $986 = (($$5205$i) - ($984))|0;
            $987 = (($d$6204$i) + 4|0);
            $988 = ($987>>>0)<($z$6$$i>>>0);
            $989 = ($986|0)>(-1);
            $or$cond12$i = $988 & $989;
            if ($or$cond12$i) {
             $$5205$i = $986;$d$6204$i = $987;
            } else {
             $$lcssa371 = $986;
             break;
            }
           }
           $990 = ($$lcssa371|0)>(0);
           if (!($990)) {
            break;
           }
           $991 = ($$lcssa371>>>0)>(256);
           $992 = $991 ? 256 : $$lcssa371;
           _memset(($pad$i|0),48,($992|0))|0;
           $993 = ($$lcssa371>>>0)>(255);
           if ($993) {
            $$01$i149$i = $$lcssa371;
            while(1) {
             (___fwritex($pad$i,256,$f)|0);
             $994 = (($$01$i149$i) + -256)|0;
             $995 = ($994>>>0)>(255);
             if ($995) {
              $$01$i149$i = $994;
             } else {
              break;
             }
            }
            $996 = $$lcssa371 & 255;
            $$0$lcssa$i151$i = $996;
           } else {
            $$0$lcssa$i151$i = $$lcssa371;
           }
           (___fwritex($pad$i,$$0$lcssa$i151$i,$f)|0);
          } else {
          }
         } while(0);
         $997 = $estr$2$i;
         $998 = (($9) - ($997))|0;
         (___fwritex($estr$2$i,$998,$f)|0);
        }
        $999 = ($892|0)==(8192);
        $or$cond$i$i = $999 & $894;
        if ($or$cond$i$i) {
         $1000 = (($w$1) - ($891))|0;
         $1001 = ($1000>>>0)>(256);
         $1002 = $1001 ? 256 : $1000;
         _memset(($pad$i|0),32,($1002|0))|0;
         $1003 = ($1000>>>0)>(255);
         if ($1003) {
          $$01$i$i = $1000;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $1004 = (($$01$i$i) + -256)|0;
           $1005 = ($1004>>>0)>(255);
           if ($1005) {
            $$01$i$i = $1004;
           } else {
            break;
           }
          }
          $1006 = $1000 & 255;
          $$0$lcssa$i$i = $1006;
         } else {
          $$0$lcssa$i$i = $1000;
         }
         (___fwritex($pad$i,$$0$lcssa$i$i,$f)|0);
        }
        $w$38$i = $894 ? $w$1 : $891;
        $$0$i = $w$38$i;
       } else {
        $447 = $t$0 & 32;
        $448 = ($447|0)!=(0);
        $449 = $448 ? 4472 : 4480;
        $450 = ($$013$i != $$013$i) | (0.0 != 0.0);
        if ($450) {
         $451 = $448 ? 4488 : 4496;
         $pl$1$i = 0;$s1$0$i = $451;
        } else {
         $pl$1$i = $pl$0$i;$s1$0$i = $449;
        }
        $452 = (($pl$1$i) + 3)|0;
        $453 = $fl$1$ & 8192;
        $454 = ($453|0)==(0);
        $455 = ($w$1|0)>($452|0);
        $or$cond$i43$i = $454 & $455;
        if ($or$cond$i43$i) {
         $456 = (($w$1) - ($452))|0;
         $457 = ($456>>>0)>(256);
         $458 = $457 ? 256 : $456;
         _memset(($pad$i|0),32,($458|0))|0;
         $459 = ($456>>>0)>(255);
         if ($459) {
          $$01$i45$i = $456;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $460 = (($$01$i45$i) + -256)|0;
           $461 = ($460>>>0)>(255);
           if ($461) {
            $$01$i45$i = $460;
           } else {
            break;
           }
          }
          $462 = $456 & 255;
          $$0$lcssa$i47$i = $462;
         } else {
          $$0$lcssa$i47$i = $456;
         }
         (___fwritex($pad$i,$$0$lcssa$i47$i,$f)|0);
        }
        (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
        (___fwritex($s1$0$i,3,$f)|0);
        $463 = $fl$1$ & 73728;
        $464 = ($463|0)==(8192);
        $or$cond$i50$i = $464 & $455;
        if ($or$cond$i50$i) {
         $465 = (($w$1) - ($452))|0;
         $466 = ($465>>>0)>(256);
         $467 = $466 ? 256 : $465;
         _memset(($pad$i|0),32,($467|0))|0;
         $468 = ($465>>>0)>(255);
         if ($468) {
          $$01$i52$i = $465;
          while(1) {
           (___fwritex($pad$i,256,$f)|0);
           $469 = (($$01$i52$i) + -256)|0;
           $470 = ($469>>>0)>(255);
           if ($470) {
            $$01$i52$i = $469;
           } else {
            break;
           }
          }
          $471 = $465 & 255;
          $$0$lcssa$i54$i = $471;
         } else {
          $$0$lcssa$i54$i = $465;
         }
         (___fwritex($pad$i,$$0$lcssa$i54$i,$f)|0);
        }
        $w$$i = $455 ? $w$1 : $452;
        $$0$i = $w$$i;
       }
      } while(0);
      $$be = $1182;$$be341 = $294;$$be342 = $267;$l$0$be = $$0$i;$l10n$0$be = $l10n$3;
      break L24;
      break;
     }
     default: {
      $1183 = $294;$1184 = $267;$a$2 = $23;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $2;
     }
     }
    } while(0);
    do {
     if ((label|0) == 82) {
      label = 0;
      $292 = $t$1 & 32;
      $293 = ($267|0)==(0);
      $295 = ($294|0)==(0);
      $296 = $293 & $295;
      if ($296) {
       $369 = $267;$371 = $294;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4424;
       label = 104;
      } else {
       $$012$i = $2;$298 = $267;$305 = $294;
       while(1) {
        $297 = $298 & 15;
        $299 = (4504 + ($297)|0);
        $300 = HEAP8[$299>>0]|0;
        $301 = $300&255;
        $302 = $301 | $292;
        $303 = $302&255;
        $304 = (($$012$i) + -1|0);
        HEAP8[$304>>0] = $303;
        $306 = (_bitshift64Lshr(($298|0),($305|0),4)|0);
        $307 = tempRet0;
        $308 = ($306|0)==(0);
        $309 = ($307|0)==(0);
        $310 = $308 & $309;
        if ($310) {
         $$lcssa386 = $304;
         break;
        } else {
         $$012$i = $304;$298 = $306;$305 = $307;
        }
       }
       $311 = $fl$3 & 8;
       $312 = ($311|0)==(0);
       if ($312) {
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 4424;
        label = 104;
       } else {
        $313 = $t$1 >> 4;
        $314 = (4424 + ($313)|0);
        $369 = $267;$371 = $294;$a$0 = $$lcssa386;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $314;
        label = 104;
       }
      }
     }
     else if ((label|0) == 96) {
      label = 0;
      $340 = ($339>>>0)>(0);
      $342 = ($341>>>0)>(4294967295);
      $343 = ($339|0)==(0);
      $344 = $343 & $342;
      $345 = $340 | $344;
      if ($345) {
       $$05$i = $2;$346 = $341;$347 = $339;
       while(1) {
        $348 = (___uremdi3(($346|0),($347|0),10,0)|0);
        $349 = tempRet0;
        $350 = $348 | 48;
        $351 = $350&255;
        $352 = (($$05$i) + -1|0);
        HEAP8[$352>>0] = $351;
        $353 = (___udivdi3(($346|0),($347|0),10,0)|0);
        $354 = tempRet0;
        $355 = ($347>>>0)>(9);
        $356 = ($346>>>0)>(4294967295);
        $357 = ($347|0)==(9);
        $358 = $357 & $356;
        $359 = $355 | $358;
        if ($359) {
         $$05$i = $352;$346 = $353;$347 = $354;
        } else {
         $$lcssa382 = $352;$1185 = $353;$1186 = $354;
         break;
        }
       }
       $$0$lcssa$i54 = $$lcssa382;$$01$lcssa$off0$i = $1185;
      } else {
       $$0$lcssa$i54 = $2;$$01$lcssa$off0$i = $341;
      }
      $360 = ($$01$lcssa$off0$i|0)==(0);
      if ($360) {
       $369 = $341;$371 = $339;$a$0 = $$0$lcssa$i54;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      } else {
       $$12$i = $$0$lcssa$i54;$y$03$i = $$01$lcssa$off0$i;
       while(1) {
        $361 = (($y$03$i>>>0) % 10)&-1;
        $362 = $361 | 48;
        $363 = $362&255;
        $364 = (($$12$i) + -1|0);
        HEAP8[$364>>0] = $363;
        $365 = (($y$03$i>>>0) / 10)&-1;
        $366 = ($y$03$i>>>0)<(10);
        if ($366) {
         $$lcssa384 = $364;
         break;
        } else {
         $$12$i = $364;$y$03$i = $365;
        }
       }
       $369 = $341;$371 = $339;$a$0 = $$lcssa384;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 104;
      }
     }
     else if ((label|0) == 109) {
      label = 0;
      $387 = (_memchr($a$1,0,$p$0)|0);
      $388 = ($387|0)==(0|0);
      if ($388) {
       $389 = (($a$1) + ($p$0)|0);
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $389;
       break;
      } else {
       $390 = $387;
       $391 = $a$1;
       $392 = (($390) - ($391))|0;
       $1183 = $294;$1184 = $267;$a$2 = $a$1;$fl$6 = $266;$p$5 = $392;$pl$2 = 0;$prefix$2 = 4424;$z$2 = $387;
       break;
      }
     }
     else if ((label|0) == 114) {
      label = 0;
      $i$0176 = 0;$l$1175 = 0;$ws$0177 = $1187;
      while(1) {
       $395 = HEAP32[$ws$0177>>2]|0;
       $396 = ($395|0)==(0);
       if ($396) {
        $i$0$lcssa = $i$0176;$l$2 = $l$1175;
        break;
       }
       $397 = (_wctomb($mb,$395)|0);
       $398 = ($397|0)<(0);
       $399 = (($p$4271) - ($i$0176))|0;
       $400 = ($397>>>0)>($399>>>0);
       $or$cond23 = $398 | $400;
       if ($or$cond23) {
        $i$0$lcssa = $i$0176;$l$2 = $397;
        break;
       }
       $401 = (($ws$0177) + 4|0);
       $402 = (($397) + ($i$0176))|0;
       $403 = ($p$4271>>>0)>($402>>>0);
       if ($403) {
        $i$0176 = $402;$l$1175 = $397;$ws$0177 = $401;
       } else {
        $i$0$lcssa = $402;$l$2 = $397;
        break;
       }
      }
      $404 = ($l$2|0)<(0);
      if ($404) {
       $$0$ph340 = -1;
       label = 453;
       break L1;
      } else {
       $1189 = $1188;$1190 = $1187;$i$0$lcssa272 = $i$0$lcssa;
       label = 119;
      }
     }
    } while(0);
    if ((label|0) == 104) {
     label = 0;
     $367 = ($p$2|0)>(-1);
     $368 = $fl$4 & -65537;
     $$fl$4 = $367 ? $368 : $fl$4;
     $370 = ($369|0)!=(0);
     $372 = ($371|0)!=(0);
     $373 = $370 | $372;
     $374 = ($p$2|0)!=(0);
     $or$cond = $373 | $374;
     if ($or$cond) {
      $375 = $a$0;
      $376 = (($3) - ($375))|0;
      $377 = $373&1;
      $378 = $377 ^ 1;
      $379 = (($378) + ($376))|0;
      $380 = ($p$2|0)>($379|0);
      $p$2$ = $380 ? $p$2 : $379;
      $1183 = $371;$1184 = $369;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     } else {
      $1183 = $371;$1184 = $369;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
     }
    }
    else if ((label|0) == 119) {
     label = 0;
     $405 = $fl$1$ & 73728;
     $406 = ($405|0)==(0);
     $407 = ($w$1|0)>($i$0$lcssa272|0);
     $or$cond$i65 = $406 & $407;
     if ($or$cond$i65) {
      $408 = (($w$1) - ($i$0$lcssa272))|0;
      $409 = ($408>>>0)>(256);
      $410 = $409 ? 256 : $408;
      _memset(($pad$i|0),32,($410|0))|0;
      $411 = ($408>>>0)>(255);
      if ($411) {
       $$01$i67 = $408;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $412 = (($$01$i67) + -256)|0;
        $413 = ($412>>>0)>(255);
        if ($413) {
         $$01$i67 = $412;
        } else {
         break;
        }
       }
       $414 = $408 & 255;
       $$0$lcssa$i69 = $414;
      } else {
       $$0$lcssa$i69 = $408;
      }
      (___fwritex($pad$i,$$0$lcssa$i69,$f)|0);
     }
     $415 = ($i$0$lcssa272|0)==(0);
     if (!($415)) {
      $i$1187 = 0;$ws$1188 = $1190;
      while(1) {
       $416 = HEAP32[$ws$1188>>2]|0;
       $417 = ($416|0)==(0);
       if ($417) {
        break;
       }
       $418 = (_wctomb($mb,$416)|0);
       $419 = (($418) + ($i$1187))|0;
       $420 = ($419|0)>($i$0$lcssa272|0);
       if ($420) {
        break;
       }
       $421 = (($ws$1188) + 4|0);
       (___fwritex($mb,$418,$f)|0);
       $422 = ($419>>>0)<($i$0$lcssa272>>>0);
       if ($422) {
        $i$1187 = $419;$ws$1188 = $421;
       } else {
        break;
       }
      }
     }
     $423 = ($405|0)==(8192);
     $or$cond$i72 = $423 & $407;
     if ($or$cond$i72) {
      $424 = (($w$1) - ($i$0$lcssa272))|0;
      $425 = ($424>>>0)>(256);
      $426 = $425 ? 256 : $424;
      _memset(($pad$i|0),32,($426|0))|0;
      $427 = ($424>>>0)>(255);
      if ($427) {
       $$01$i74 = $424;
       while(1) {
        (___fwritex($pad$i,256,$f)|0);
        $428 = (($$01$i74) + -256)|0;
        $429 = ($428>>>0)>(255);
        if ($429) {
         $$01$i74 = $428;
        } else {
         break;
        }
       }
       $430 = $424 & 255;
       $$0$lcssa$i76 = $430;
      } else {
       $$0$lcssa$i76 = $424;
      }
      (___fwritex($pad$i,$$0$lcssa$i76,$f)|0);
     }
     $431 = $407 ? $w$1 : $i$0$lcssa272;
     $$be = $1182;$$be341 = $294;$$be342 = $1189;$l$0$be = $431;$l10n$0$be = $l10n$3;
     break;
    }
    $1007 = $z$2;
    $1008 = $a$2;
    $1009 = (($1007) - ($1008))|0;
    $1010 = ($p$5|0)<($1009|0);
    $$p$5 = $1010 ? $1009 : $p$5;
    $1011 = (($pl$2) + ($$p$5))|0;
    $1012 = ($w$1|0)<($1011|0);
    $w$2 = $1012 ? $1011 : $w$1;
    $1013 = $fl$6 & 73728;
    $1014 = ($1013|0)==(0);
    $1015 = ($w$2|0)>($1011|0);
    $or$cond$i82 = $1014 & $1015;
    if ($or$cond$i82) {
     $1016 = (($w$2) - ($1011))|0;
     $1017 = ($1016>>>0)>(256);
     $1018 = $1017 ? 256 : $1016;
     _memset(($pad$i|0),32,($1018|0))|0;
     $1019 = ($1016>>>0)>(255);
     if ($1019) {
      $$01$i84 = $1016;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1020 = (($$01$i84) + -256)|0;
       $1021 = ($1020>>>0)>(255);
       if ($1021) {
        $$01$i84 = $1020;
       } else {
        break;
       }
      }
      $1022 = $1016 & 255;
      $$0$lcssa$i86 = $1022;
     } else {
      $$0$lcssa$i86 = $1016;
     }
     (___fwritex($pad$i,$$0$lcssa$i86,$f)|0);
    }
    (___fwritex($prefix$2,$pl$2,$f)|0);
    $1023 = ($1013|0)==(65536);
    $or$cond$i58 = $1023 & $1015;
    if ($or$cond$i58) {
     $1024 = (($w$2) - ($1011))|0;
     $1025 = ($1024>>>0)>(256);
     $1026 = $1025 ? 256 : $1024;
     _memset(($pad$i|0),48,($1026|0))|0;
     $1027 = ($1024>>>0)>(255);
     if ($1027) {
      $$01$i60 = $1024;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1028 = (($$01$i60) + -256)|0;
       $1029 = ($1028>>>0)>(255);
       if ($1029) {
        $$01$i60 = $1028;
       } else {
        break;
       }
      }
      $1030 = $1024 & 255;
      $$0$lcssa$i62 = $1030;
     } else {
      $$0$lcssa$i62 = $1024;
     }
     (___fwritex($pad$i,$$0$lcssa$i62,$f)|0);
    }
    $1031 = ($$p$5|0)>($1009|0);
    if ($1031) {
     $1032 = (($$p$5) - ($1009))|0;
     $1033 = ($1032>>>0)>(256);
     $1034 = $1033 ? 256 : $1032;
     _memset(($pad$i|0),48,($1034|0))|0;
     $1035 = ($1032>>>0)>(255);
     if ($1035) {
      $$01$i45 = $1032;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1036 = (($$01$i45) + -256)|0;
       $1037 = ($1036>>>0)>(255);
       if ($1037) {
        $$01$i45 = $1036;
       } else {
        break;
       }
      }
      $1038 = $1032 & 255;
      $$0$lcssa$i47 = $1038;
     } else {
      $$0$lcssa$i47 = $1032;
     }
     (___fwritex($pad$i,$$0$lcssa$i47,$f)|0);
    }
    (___fwritex($a$2,$1009,$f)|0);
    $1039 = ($1013|0)==(8192);
    $or$cond$i = $1039 & $1015;
    if ($or$cond$i) {
     $1040 = (($w$2) - ($1011))|0;
     $1041 = ($1040>>>0)>(256);
     $1042 = $1041 ? 256 : $1040;
     _memset(($pad$i|0),32,($1042|0))|0;
     $1043 = ($1040>>>0)>(255);
     if ($1043) {
      $$01$i = $1040;
      while(1) {
       (___fwritex($pad$i,256,$f)|0);
       $1044 = (($$01$i) + -256)|0;
       $1045 = ($1044>>>0)>(255);
       if ($1045) {
        $$01$i = $1044;
       } else {
        break;
       }
      }
      $1046 = $1040 & 255;
      $$0$lcssa$i = $1046;
     } else {
      $$0$lcssa$i = $1040;
     }
     (___fwritex($pad$i,$$0$lcssa$i,$f)|0);
    }
    $$be = $1182;$$be341 = $1183;$$be342 = $1184;$l$0$be = $w$2;$l10n$0$be = $l10n$3;
   } else {
    $$be = $$lcssa107;$$be341 = $1175;$$be342 = $1176;$l$0$be = $37;$l10n$0$be = $l10n$0;
   }
  } while(0);
  $1175 = $$be341;$1176 = $$be342;$23 = $$be;$cnt$0 = $cnt$1;$l$0 = $l$0$be;$l10n$0 = $l10n$0$be;
 }
 if ((label|0) == 429) {
  $1047 = ($f|0)==(0|0);
  if (!($1047)) {
   $$0 = $cnt$1$lcssa;
   STACKTOP = sp;return ($$0|0);
  }
  $1048 = ($l10n$0$lcssa|0)==(0);
  if ($1048) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $i$2163 = 1;
  while(1) {
   $1049 = (($nl_type) + ($i$2163<<2)|0);
   $1050 = HEAP32[$1049>>2]|0;
   $1051 = ($1050|0)==(0);
   if ($1051) {
    $i$2163$lcssa = $i$2163;
    break;
   }
   $1053 = (($nl_arg) + ($i$2163<<3)|0);
   $1054 = ($1050>>>0)>(20);
   L618: do {
    if (!($1054)) {
     do {
      switch ($1050|0) {
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1102 = $arglist_current47;
       $1103 = (0 + 4|0);
       $expanded176 = $1103;
       $expanded175 = (($expanded176) - 1)|0;
       $1104 = (($1102) + ($expanded175))|0;
       $1105 = (0 + 4|0);
       $expanded180 = $1105;
       $expanded179 = (($expanded180) - 1)|0;
       $expanded178 = $expanded179 ^ -1;
       $1106 = $1104 & $expanded178;
       $1107 = $1106;
       $1108 = HEAP32[$1107>>2]|0;
       $arglist_next48 = (($1107) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1109 = $1108&65535;
       $1110 = $1109 << 16 >> 16;
       $1111 = ($1110|0)<(0);
       $1112 = $1111 << 31 >> 31;
       $1113 = $1053;
       $1114 = $1113;
       HEAP32[$1114>>2] = $1110;
       $1115 = (($1113) + 4)|0;
       $1116 = $1115;
       HEAP32[$1116>>2] = $1112;
       break L618;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1117 = $arglist_current50;
       $1118 = (0 + 4|0);
       $expanded183 = $1118;
       $expanded182 = (($expanded183) - 1)|0;
       $1119 = (($1117) + ($expanded182))|0;
       $1120 = (0 + 4|0);
       $expanded187 = $1120;
       $expanded186 = (($expanded187) - 1)|0;
       $expanded185 = $expanded186 ^ -1;
       $1121 = $1119 & $expanded185;
       $1122 = $1121;
       $1123 = HEAP32[$1122>>2]|0;
       $arglist_next51 = (($1122) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1123 & 65535;
       $1124 = $1053;
       $1125 = $1124;
       HEAP32[$1125>>2] = $$mask1$i;
       $1126 = (($1124) + 4)|0;
       $1127 = $1126;
       HEAP32[$1127>>2] = 0;
       break L618;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1128 = $arglist_current53;
       $1129 = (0 + 4|0);
       $expanded190 = $1129;
       $expanded189 = (($expanded190) - 1)|0;
       $1130 = (($1128) + ($expanded189))|0;
       $1131 = (0 + 4|0);
       $expanded194 = $1131;
       $expanded193 = (($expanded194) - 1)|0;
       $expanded192 = $expanded193 ^ -1;
       $1132 = $1130 & $expanded192;
       $1133 = $1132;
       $1134 = HEAP32[$1133>>2]|0;
       $arglist_next54 = (($1133) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1135 = $1134&255;
       $1136 = $1135 << 24 >> 24;
       $1137 = ($1136|0)<(0);
       $1138 = $1137 << 31 >> 31;
       $1139 = $1053;
       $1140 = $1139;
       HEAP32[$1140>>2] = $1136;
       $1141 = (($1139) + 4)|0;
       $1142 = $1141;
       HEAP32[$1142>>2] = $1138;
       break L618;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1143 = $arglist_current56;
       $1144 = (0 + 4|0);
       $expanded197 = $1144;
       $expanded196 = (($expanded197) - 1)|0;
       $1145 = (($1143) + ($expanded196))|0;
       $1146 = (0 + 4|0);
       $expanded201 = $1146;
       $expanded200 = (($expanded201) - 1)|0;
       $expanded199 = $expanded200 ^ -1;
       $1147 = $1145 & $expanded199;
       $1148 = $1147;
       $1149 = HEAP32[$1148>>2]|0;
       $arglist_next57 = (($1148) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1149 & 255;
       $1150 = $1053;
       $1151 = $1150;
       HEAP32[$1151>>2] = $$mask$i;
       $1152 = (($1150) + 4)|0;
       $1153 = $1152;
       HEAP32[$1153>>2] = 0;
       break L618;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       $1154 = $arglist_current59;
       $1155 = (0 + 8|0);
       $expanded204 = $1155;
       $expanded203 = (($expanded204) - 1)|0;
       $1156 = (($1154) + ($expanded203))|0;
       $1157 = (0 + 8|0);
       $expanded208 = $1157;
       $expanded207 = (($expanded208) - 1)|0;
       $expanded206 = $expanded207 ^ -1;
       $1158 = $1156 & $expanded206;
       $1159 = $1158;
       $1160 = +HEAPF64[$1159>>3];
       $arglist_next60 = (($1159) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$1053>>3] = $1160;
       break L618;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       $1161 = $arglist_current62;
       $1162 = (0 + 8|0);
       $expanded211 = $1162;
       $expanded210 = (($expanded211) - 1)|0;
       $1163 = (($1161) + ($expanded210))|0;
       $1164 = (0 + 8|0);
       $expanded215 = $1164;
       $expanded214 = (($expanded215) - 1)|0;
       $expanded213 = $expanded214 ^ -1;
       $1165 = $1163 & $expanded213;
       $1166 = $1165;
       $1167 = +HEAPF64[$1166>>3];
       $arglist_next63 = (($1166) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$1053>>3] = $1167;
       break L618;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $1062 = $arglist_current38;
       $1063 = (0 + 4|0);
       $expanded155 = $1063;
       $expanded154 = (($expanded155) - 1)|0;
       $1064 = (($1062) + ($expanded154))|0;
       $1065 = (0 + 4|0);
       $expanded159 = $1065;
       $expanded158 = (($expanded159) - 1)|0;
       $expanded157 = $expanded158 ^ -1;
       $1066 = $1064 & $expanded157;
       $1067 = $1066;
       $1068 = HEAP32[$1067>>2]|0;
       $arglist_next39 = (($1067) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $1069 = ($1068|0)<(0);
       $1070 = $1069 << 31 >> 31;
       $1071 = $1053;
       $1072 = $1071;
       HEAP32[$1072>>2] = $1068;
       $1073 = (($1071) + 4)|0;
       $1074 = $1073;
       HEAP32[$1074>>2] = $1070;
       break L618;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1075 = $arglist_current41;
       $1076 = (0 + 4|0);
       $expanded162 = $1076;
       $expanded161 = (($expanded162) - 1)|0;
       $1077 = (($1075) + ($expanded161))|0;
       $1078 = (0 + 4|0);
       $expanded166 = $1078;
       $expanded165 = (($expanded166) - 1)|0;
       $expanded164 = $expanded165 ^ -1;
       $1079 = $1077 & $expanded164;
       $1080 = $1079;
       $1081 = HEAP32[$1080>>2]|0;
       $arglist_next42 = (($1080) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1082 = $1053;
       $1083 = $1082;
       HEAP32[$1083>>2] = $1081;
       $1084 = (($1082) + 4)|0;
       $1085 = $1084;
       HEAP32[$1085>>2] = 0;
       break L618;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1086 = $arglist_current44;
       $1087 = (0 + 8|0);
       $expanded169 = $1087;
       $expanded168 = (($expanded169) - 1)|0;
       $1088 = (($1086) + ($expanded168))|0;
       $1089 = (0 + 8|0);
       $expanded173 = $1089;
       $expanded172 = (($expanded173) - 1)|0;
       $expanded171 = $expanded172 ^ -1;
       $1090 = $1088 & $expanded171;
       $1091 = $1090;
       $1092 = $1091;
       $1093 = $1092;
       $1094 = HEAP32[$1093>>2]|0;
       $1095 = (($1092) + 4)|0;
       $1096 = $1095;
       $1097 = HEAP32[$1096>>2]|0;
       $arglist_next45 = (($1091) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1098 = $1053;
       $1099 = $1098;
       HEAP32[$1099>>2] = $1094;
       $1100 = (($1098) + 4)|0;
       $1101 = $1100;
       HEAP32[$1101>>2] = $1097;
       break L618;
       break;
      }
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $1055 = $arglist_current35;
       $1056 = (0 + 4|0);
       $expanded148 = $1056;
       $expanded147 = (($expanded148) - 1)|0;
       $1057 = (($1055) + ($expanded147))|0;
       $1058 = (0 + 4|0);
       $expanded152 = $1058;
       $expanded151 = (($expanded152) - 1)|0;
       $expanded150 = $expanded151 ^ -1;
       $1059 = $1057 & $expanded150;
       $1060 = $1059;
       $1061 = HEAP32[$1060>>2]|0;
       $arglist_next36 = (($1060) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$1053>>2] = $1061;
       break L618;
       break;
      }
      default: {
       break L618;
      }
      }
     } while(0);
    }
   } while(0);
   $1168 = (($i$2163) + 1)|0;
   $1169 = ($1168|0)<(10);
   if ($1169) {
    $i$2163 = $1168;
   } else {
    label = 451;
    break;
   }
  }
  if ((label|0) == 451) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $1052 = ($i$2163$lcssa|0)<(10);
  if (!($1052)) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $i$3161 = $i$2163$lcssa;
  while(1) {
   $1172 = (($nl_type) + ($i$3161<<2)|0);
   $1173 = HEAP32[$1172>>2]|0;
   $1174 = ($1173|0)==(0);
   $1170 = (($i$3161) + 1)|0;
   if (!($1174)) {
    $$0$ph = -1;
    break;
   }
   $1171 = ($1170|0)<(10);
   if ($1171) {
    $i$3161 = $1170;
   } else {
    $$0$ph = 1;
    break;
   }
  }
  $$0 = $$0$ph;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 452) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 453) {
  $$0 = $$0$ph340;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2336 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2360 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($msg) + 1|0);
  $7 = $6;
 } else {
  $4 = (($msg) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 __THREW__ = 0;
 invoke_vii(449,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((2360 + 8|0));
 $0 = (($this) + 4|0);
 __THREW__ = 0;
 invoke_vii(449,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($msg|0))|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = (($2) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = (($2) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($2) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(4640|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2416 + 8|0));
  ___cxa_throw(($0|0),(2464|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS4_($this,$__a) {
 $this = $this|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $__i$0$i = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i = 0;
 while(1) {
  $exitcond$i = ($__i$0$i|0)==(3);
  if ($exitcond$i) {
   break;
  }
  $0 = (($this) + ($__i$0$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i) + 1)|0;
  $__i$0$i = $1;
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this+0>>2]=HEAP32[$__str+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = (($__str) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__str) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ejc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 return ($7|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = (($this) + 1|0);
  $6 = $5;
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $6 = $4;
 }
 return ($6|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $8 = (($__str) + 1|0);
   $9 = $1&255;
   $10 = $9 >>> 1;
   $11 = $8;$12 = $10;
  } else {
   $4 = (($__str) + 8|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (($__str) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $11 = $5;$12 = $7;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$11,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__s;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 1|0);
 return ($0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s << 1;
 $1 = $0&255;
 HEAP8[$this>>0] = $1;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 1|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -17;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8capacityEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = 10;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp = (($4) + -1)|0;
  $5 = $phitmp;
 }
 return ($5|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = ((($this) + ($__n)|0) + 1|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = (($this) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = (($this) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = (($this) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = (($this) + 1|0);
   $27 = $25;
  } else {
   $23 = (($this) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = (($this) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = (($this) + 1|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = (($20) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(451,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = (($this) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = (($this) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = (($this) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($20) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = (($this) + 4|0);
    HEAP32[$50>>2] = $14;
    $51 = (($this) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $14 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendEj($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__s>>>0)<(11);
 if ($0) {
  $3 = 10;
 } else {
  $1 = (($__s) + 16)|0;
  $2 = $1 & -16;
  $phitmp = (($2) + -1)|0;
  $3 = $phitmp;
 }
 return ($3|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capEj($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__s | 1;
 HEAP32[$this>>2] = $0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerEPc($this,$__p) {
 $this = $this|0;
 $__p = $__p|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__p;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $15 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $15 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($15))|0;
  $34 = (($33) + ($14))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$15,$34,$14,$14,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = (($this) + 1|0);
    $24 = $22;
   } else {
    $20 = (($this) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($14)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($14) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = (($this) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__n_add|0)==(0);
 if (!($20)) {
  $21 = (($17) + ($__n_copy)|0);
  _memcpy(($21|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($19) + ($$sum1)|0);
  _memcpy(($25|0),($26|0),($24|0))|0;
 }
 $27 = ($__old_cap|0)==(10);
 if (!($27)) {
  __ZdlPv($19);
 }
 $28 = (($this) + 8|0);
 HEAP32[$28>>2] = $17;
 $29 = $16 | 1;
 HEAP32[$this>>2] = $29;
 $30 = (($22) + ($__n_add))|0;
 $31 = (($this) + 4|0);
 HEAP32[$31>>2] = $30;
 $32 = (($17) + ($30)|0);
 HEAP8[$32>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = (($__old_sz) - ($__n_del))|0;
 $21 = ($20|0)==($__n_copy|0);
 if (!($21)) {
  $22 = (($20) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $23 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $24 = (($19) + ($$sum1)|0);
  _memcpy(($23|0),($24|0),($22|0))|0;
 }
 $25 = ($__old_cap|0)==(10);
 if (!($25)) {
  __ZdlPv($19);
 }
 $26 = (($this) + 8|0);
 HEAP32[$26>>2] = $17;
 $27 = $16 | 1;
 HEAP32[$this>>2] = $27;
 return;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13get_allocatorEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = (($this) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = (($this) + 4|0);
    $14 = $13;
   } else {
    $11 = (($this) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = (($this) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = (($this) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = (($this) + 4|0);
     $25 = (($this) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = $20 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(451,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = (($this) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = (($this) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = (($this) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($20) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = (($this) + 4|0);
    HEAP32[$51>>2] = $14;
    $52 = (($this) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $14 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy<<2)|0);
  (_wmemcpy($22,$__p_new_stuff,$__n_add)|0);
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $26 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $27 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($26,$27,$25)|0);
 }
 $28 = ($__old_cap|0)==(1);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = (($this) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 $31 = (($23) + ($__n_add))|0;
 $32 = (($this) + 4|0);
 HEAP32[$32>>2] = $31;
 $33 = (($18) + ($31<<2)|0);
 HEAP32[$33>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $20 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  (_wmemcpy($18,$20,$__n_copy)|0);
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $24 = (($18) + ($$sum<<2)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $25 = (($20) + ($$sum1<<2)|0);
  (_wmemcpy($24,$25,$23)|0);
 }
 $26 = ($__old_cap|0)==(1);
 if (!($26)) {
  __ZdlPv($20);
 }
 $27 = (($this) + 8|0);
 HEAP32[$27>>2] = $18;
 $28 = $17 | 1;
 HEAP32[$this>>2] = $28;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = (($this) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = (($this) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = (($this) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $16 = ($$0|0)==($__last|0);
  if ($16) {
   break;
  }
  $17 = HEAP8[$$0>>0]|0;
  HEAP8[$__p$0>>0] = $17;
  $18 = (($$0) + 1|0);
  $19 = (($__p$0) + 1|0);
  $$0 = $18;$__p$0 = $19;
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = (($this) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = (($this) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = (($this) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $19 = ($$0|0)==($__last|0);
  if ($19) {
   break;
  }
  $20 = HEAP32[$$0>>2]|0;
  HEAP32[$__p$0>>2] = $20;
  $21 = (($$0) + 4|0);
  $22 = (($__p$0) + 4|0);
  $$0 = $21;$__p$0 = $22;
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = (($this) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = (($this) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = 1;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = (4792);
 __THREW__ = 0;
 invoke_viii(452,($12|0),(4848|0),($0|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $19 = ___cxa_find_matching_catch()|0;
  $20 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($19|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(4896|0),(96|0));
  // unreachable;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj($this,$__state) {
 $this = $this|0;
 $__state = $__state|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | $__state;
 __ZNSt3__18ios_base5clearEj($this,$2);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4832 + 8|0));
 __THREW__ = 0;
 invoke_vii(453,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = (($this) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = (($this) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = (($this) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = (($this) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = (($this) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 32|0);
 $3 = (($this) + 36|0);
 $i$0 = $1;
 while(1) {
  $4 = ($i$0|0)==(0);
  if ($4) {
   break;
  }
  $5 = (($i$0) + -1)|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = (($6) + ($5<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$3>>2]|0;
  $10 = (($9) + ($5<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
  $i$0 = $5;
 }
 return;
}
function __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = (($this) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(-1);
 do {
  if ($3) {
   $4 = (($this) + 28|0);
   __ZNSt3__16localeC2ERKS0_($0,$4);
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7024|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 28|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    $11 = (invoke_iii($10|0,($5|0),32)|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     __ZNSt3__16localeD2Ev($0);
     $16 = $11 << 24 >> 24;
     HEAP32[$1>>2] = $16;
     $18 = $16;
     break;
    }
   }
   $14 = ___cxa_find_matching_catch()|0;
   $15 = tempRet0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($14|0);
   // unreachable;
  } else {
   $18 = $2;
  }
 } while(0);
 $17 = $18&255;
 STACKTOP = sp;return ($17|0);
}
function __ZNKSt3__18ios_base6getlocEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 __ZNSt3__16localeC2ERKS0_($agg$result,$0);
 return;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4656 + 8|0));
 return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = (($this) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = (($this) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = (($this) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = (($this) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = (($this) + 32|0);
 $8 = (($this) + 28|0);
 dest=$7+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4672 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4672 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputcEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $__c&255;
  $9 = (FUNCTION_TABLE_iii[$7 & 1023]($this,$8)|0);
  $$0 = $9;
 } else {
  $10 = (($1) + 1|0);
  HEAP32[$0>>2] = $10;
  HEAP8[$1>>0] = $__c;
  $11 = $__c&255;
  $$0 = $11;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iiii[$2 & 1023]($this,$__s,$__n)|0);
 return ($3|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((4672 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = (($this) + 8|0);
 ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5ebackEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4gptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5egptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setgEPcS4_S4_($this,$__gbeg,$__gnext,$__gend) {
 $this = $this|0;
 $__gbeg = $__gbeg|0;
 $__gnext = $__gnext|0;
 $__gend = $__gend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 HEAP32[$0>>2] = $__gbeg;
 $1 = (($this) + 12|0);
 HEAP32[$1>>2] = $__gnext;
 $2 = (($this) + 16|0);
 HEAP32[$2>>2] = $__gend;
 return;
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5epptrEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($__n)|0);
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_($this,$__pbeg,$__pend) {
 $this = $this|0;
 $__pbeg = $__pbeg|0;
 $__pend = $__pend|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 HEAP32[$0>>2] = $__pbeg;
 $1 = (($this) + 20|0);
 HEAP32[$1>>2] = $__pbeg;
 $2 = (($this) + 28|0);
 HEAP32[$2>>2] = $__pend;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($agg$result) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($agg$result) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = (($this) + 16|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = (($3) + 1|0);
   HEAP32[$0>>2] = $6;
   $7 = HEAP8[$3>>0]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $13 = $11&255;
   $storemerge = $13;
  }
  HEAP8[$$0>>0] = $storemerge;
  $14 = (($__i$0) + 1)|0;
  $15 = (($$0) + 1|0);
  $$0 = $15;$__i$0 = $14;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = (($this) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = (($this) + 28|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP8[$$0>>0]|0;
   $7 = (($3) + 1|0);
   HEAP32[$0>>2] = $7;
   HEAP8[$3>>0] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP8[$$0>>0]|0;
   $12 = $11&255;
   $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
   $14 = ($13|0)==(-1);
   if ($14) {
    $__i$0$lcssa = $__i$0;
    break;
   }
  }
  $15 = (($$0) + 1|0);
  $16 = (($__i$0) + 1)|0;
  $$0 = $15;$__i$0 = $16;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $$sum = 0, $$sum1 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if (!($5)) {
   __THREW__ = 0;
   invoke_vii(412,($__s|0),($this|0));
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   L3: do {
    if ($7) {
     $31 = ___cxa_find_matching_catch(0|0)|0;
     $32 = tempRet0;
     $$0 = $31;
    } else {
     $8 = HEAP8[$__s>>0]|0;
     $9 = ($8<<24>>24)==(0);
     do {
      if (!($9)) {
       $10 = HEAP32[$this>>2]|0;
       $11 = (($10) + -12|0);
       $12 = HEAP32[$11>>2]|0;
       $$sum1 = (($12) + 24)|0;
       $13 = (($this) + ($$sum1)|0);
       $14 = HEAP32[$13>>2]|0;
       $15 = HEAP32[$14>>2]|0;
       $16 = (($15) + 24|0);
       $17 = HEAP32[$16>>2]|0;
       __THREW__ = 0;
       $18 = (invoke_ii($17|0,($14|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        $21 = ($18|0)==(-1);
        if (!($21)) {
         break;
        }
        $22 = HEAP32[$this>>2]|0;
        $23 = (($22) + -12|0);
        $24 = HEAP32[$23>>2]|0;
        $25 = (($this) + ($24)|0);
        $$sum2 = (($24) + 16)|0;
        $26 = (($this) + ($$sum2)|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = $27 | 1;
        __THREW__ = 0;
        invoke_vii(455,($25|0),($28|0));
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if (!($30)) {
         break;
        }
       }
       $33 = ___cxa_find_matching_catch(0|0)|0;
       $34 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $33;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $35 = HEAP32[$this>>2]|0;
   $36 = (($35) + -12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($this) + ($37)|0);
   __THREW__ = 0;
   invoke_vi(419,($38|0));
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if (!($40)) {
    ___cxa_end_catch();
    break;
   }
   $41 = ___cxa_find_matching_catch()|0;
   $42 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $43 = __THREW__; __THREW__ = 0;
   $44 = $43&1;
   if ($44) {
    $45 = ___cxa_find_matching_catch(0|0)|0;
    $46 = tempRet0;
    ___clang_call_terminate($45);
    // unreachable;
   } else {
    ___resumeException($41|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = (($this) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = (($1) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $$sum = (($3) + 16)|0;
 $4 = (($__os) + ($$sum)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$sum1 = (($3) + 72)|0;
  $7 = (($__os) + ($$sum1)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $$sum1 = (($4) + 16)|0;
   $8 = (($1) + ($$sum1)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0);
   if ($10) {
    $$sum2 = (($4) + 4)|0;
    $11 = (($1) + ($$sum2)|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $12 & 8192;
    $14 = ($13|0)==(0);
    if (!($14)) {
     $15 = (__ZSt18uncaught_exceptionv()|0);
     if (!($15)) {
      $16 = HEAP32[$0>>2]|0;
      $17 = HEAP32[$16>>2]|0;
      $18 = (($17) + -12|0);
      $19 = HEAP32[$18>>2]|0;
      $$sum3 = (($19) + 24)|0;
      $20 = (($16) + ($$sum3)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = HEAP32[$21>>2]|0;
      $23 = (($22) + 24|0);
      $24 = HEAP32[$23>>2]|0;
      __THREW__ = 0;
      $25 = (invoke_ii($24|0,($21|0))|0);
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = ($25|0)==(-1);
       if (!($28)) {
        break;
       }
       $29 = HEAP32[$0>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = (($30) + -12|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = (($29) + ($32)|0);
       $$sum4 = (($32) + 16)|0;
       $34 = (($29) + ($$sum4)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = $35 | 1;
       __THREW__ = 0;
       invoke_vii(455,($33|0),($36|0));
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if (!($38)) {
        break;
       }
      }
      $39 = ___cxa_find_matching_catch(0|0)|0;
      $40 = tempRet0;
      (___cxa_begin_catch(($39|0))|0);
      __THREW__ = 0;
      invoke_v(420);
      $41 = __THREW__; __THREW__ = 0;
      $42 = $41&1;
      if ($42) {
       $43 = ___cxa_find_matching_catch(0|0)|0;
       $44 = tempRet0;
       ___clang_call_terminate($43);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = ($0<<24>>24)!=(0);
 return ($1|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum$i = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $8 = 0, $9 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $0 = sp + 20|0;
 $1 = sp + 16|0;
 $__s = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __THREW__ = 0;
 invoke_vii(412,($__s|0),($this|0));
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 L1: do {
  if ($5) {
   $55 = ___cxa_find_matching_catch(0|0)|0;
   $56 = tempRet0;
   $$1 = $55;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
   label = 18;
  } else {
   $6 = HEAP8[$__s>>0]|0;
   $7 = ($6<<24>>24)==(0);
   do {
    if (!($7)) {
     $8 = HEAP32[$this>>2]|0;
     $9 = (($8) + -12|0);
     $10 = HEAP32[$9>>2]|0;
     $$sum = (($10) + 28)|0;
     $11 = (($this) + ($$sum)|0);
     __ZNSt3__16localeC2ERKS0_($2,$11);
     __THREW__ = 0;
     $12 = (invoke_iii(454,($2|0),(5712|0))|0);
     $13 = __THREW__; __THREW__ = 0;
     $14 = $13&1;
     if ($14) {
      $59 = ___cxa_find_matching_catch(0|0)|0;
      $60 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $$0 = $59;
     } else {
      __ZNSt3__16localeD2Ev($2);
      $15 = HEAP32[$this>>2]|0;
      $16 = (($15) + -12|0);
      $17 = HEAP32[$16>>2]|0;
      $$sum$i = (($17) + 24)|0;
      $18 = (($this) + ($$sum$i)|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($this) + ($17)|0);
      $$sum3 = (($17) + 76)|0;
      $21 = (($this) + ($$sum3)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      do {
       if ($23) {
        $$sum5 = (($17) + 28)|0;
        $24 = (($this) + ($$sum5)|0);
        __ZNSt3__16localeC2ERKS0_($1,$24);
        __THREW__ = 0;
        $25 = (invoke_iii(454,($1|0),(7024|0))|0);
        $26 = __THREW__; __THREW__ = 0;
        $27 = $26&1;
        if (!($27)) {
         $28 = HEAP32[$25>>2]|0;
         $29 = (($28) + 28|0);
         $30 = HEAP32[$29>>2]|0;
         __THREW__ = 0;
         $31 = (invoke_iii($30|0,($25|0),32)|0);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if (!($33)) {
          __ZNSt3__16localeD2Ev($1);
          $36 = $31 << 24 >> 24;
          HEAP32[$21>>2] = $36;
          $38 = $36;
          label = 9;
          break;
         }
        }
        $34 = ___cxa_find_matching_catch(0|0)|0;
        $35 = tempRet0;
        __ZNSt3__16localeD2Ev($1);
        $eh$lpad$body$indexZ2D = $34;
       } else {
        $38 = $22;
        label = 9;
       }
      } while(0);
      if ((label|0) == 9) {
       $37 = $38&255;
       $39 = HEAP32[$12>>2]|0;
       $40 = (($39) + 16|0);
       $41 = HEAP32[$40>>2]|0;
       HEAP32[$0>>2] = $19;
       __THREW__ = 0;
       ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
       invoke_viiiiii($41|0,($3|0),($12|0),($$byval_copy|0),($20|0),($37|0),($__n|0));
       $42 = __THREW__; __THREW__ = 0;
       $43 = $42&1;
       if (!($43)) {
        $44 = HEAP32[$3>>2]|0;
        $45 = ($44|0)==(0|0);
        if (!($45)) {
         break;
        }
        $46 = HEAP32[$this>>2]|0;
        $47 = (($46) + -12|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($this) + ($48)|0);
        $$sum4 = (($48) + 16)|0;
        $50 = (($this) + ($$sum4)|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = $51 | 5;
        __THREW__ = 0;
        invoke_vii(455,($49|0),($52|0));
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if (!($54)) {
         break;
        }
       }
       $57 = ___cxa_find_matching_catch(0|0)|0;
       $58 = tempRet0;
       $eh$lpad$body$indexZ2D = $57;
      }
      $$0 = $eh$lpad$body$indexZ2D;
     }
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$1 = $$0;$$pre$phi7Z2D = $this;$$pre$phiZ2D = $this;
     label = 18;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   (___cxa_begin_catch(($$1|0))|0);
   $61 = HEAP32[$$pre$phiZ2D>>2]|0;
   $62 = (($61) + -12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = (($$pre$phi7Z2D) + ($63)|0);
   __THREW__ = 0;
   invoke_vi(419,($64|0));
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    ___cxa_end_catch();
    break;
   }
   $67 = ___cxa_find_matching_catch()|0;
   $68 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    $71 = ___cxa_find_matching_catch(0|0)|0;
    $72 = tempRet0;
    ___clang_call_terminate($71);
    // unreachable;
   } else {
    ___resumeException($67|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE($this,$vtt,$__sb) {
 $this = $this|0;
 $vtt = $vtt|0;
 $__sb = $__sb|0;
 var $$sum$i = 0, $$sum1$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($vtt) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$this>>2] = $1;
 $2 = (($vtt) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($this) + ($5)|0);
 HEAP32[$6>>2] = $3;
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = 0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (($8) + -12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($this) + ($10)|0);
 __ZNSt3__18ios_base4initEPv($11,$__sb);
 $$sum$i = (($10) + 72)|0;
 $12 = (($this) + ($$sum$i)|0);
 HEAP32[$12>>2] = 0;
 $$sum1$i = (($10) + 76)|0;
 $13 = (($this) + ($$sum1$i)|0);
 HEAP32[$13>>2] = -1;
 $14 = (($this) + 8|0);
 $15 = (($vtt) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$14>>2] = $16;
 $17 = (($vtt) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + -12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($14) + ($20)|0);
 HEAP32[$21>>2] = $18;
 $22 = HEAP32[$vtt>>2]|0;
 HEAP32[$this>>2] = $22;
 $23 = (($vtt) + 20|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (($22) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (($this) + ($26)|0);
 HEAP32[$27>>2] = $24;
 $28 = (($vtt) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$14>>2] = $29;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this,$vtt) {
 $this = $this|0;
 $vtt = $vtt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 $1 = (($0) + 12|0);
 __ZNSt3__18ios_baseD2Ev($1);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 12)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 return;
}
function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + -8|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($0);
 return;
}
function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (4736|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,4752,35);
 }
 return;
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[4800>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((4800|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[4792>>2] = ((5296 + 8|0));
   ___cxa_guard_release((4800|0));
  }
 }
 return (4792|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = ((4808 + 8|0));
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP8[$$02>>0]|0;
  $3 = HEAP8[$$01>>0]|0;
  $4 = ($2<<24>>24)<($3<<24>>24);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3<<24>>24)<($2<<24>>24);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 1|0);
  $7 = (($$01) + 1|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP8[$__p$0>>0]|0;
  $3 = $2 << 24 >> 24;
  $4 = (($3) + ($1))|0;
  $5 = $4 & -268435456;
  $6 = $5 >>> 24;
  $7 = $6 | $5;
  $8 = $7 ^ $4;
  $9 = (($__p$0) + 1|0);
  $__h$0 = $8;$__p$0 = $9;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $2 = HEAP32[$$02>>2]|0;
  $3 = HEAP32[$$01>>2]|0;
  $4 = ($2|0)<($3|0);
  if ($4) {
   $$0$ph = -1;
   label = 8;
   break;
  }
  $5 = ($3|0)<($2|0);
  if ($5) {
   $$0$ph = 1;
   label = 8;
   break;
  }
  $6 = (($$02) + 4|0);
  $7 = (($$01) + 4|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 else if ((label|0) == 8) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP32[$__p$0>>2]|0;
  $3 = (($2) + ($1))|0;
  $4 = $3 & -268435456;
  $5 = $4 >>> 24;
  $6 = $5 | $4;
  $7 = $6 ^ $3;
  $8 = (($__p$0) + 4|0);
  $__h$0 = $7;$__p$0 = $8;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7024|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7168|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(456,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre36 = 0, $$pre38 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0;
 var $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7024|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 32|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5536|0),(((5536 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L17: do {
      if ($23) {
       label = 47;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre38 = (($__buf) + 8|0);
        $$pre$phi37Z2D = $29;$$pre$phi39Z2D = $$pre38;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre36 = (($__buf) + 1|0);
        $$pre$phi37Z2D = $$pre36;$$pre$phi39Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L23: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $45 = 0;
        } else {
         $33 = (($$pre$i$i$i10) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i10) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 46;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $45 = 0;
          } else {
           $45 = $$pre$i$i$i10;
          }
         } else {
          $45 = $$pre$i$i$i10;
         }
        }
        $46 = ($45|0)==(0|0);
        $47 = HEAP32[$__e>>2]|0;
        $48 = ($47|0)==(0|0);
        do {
         if ($48) {
          label = 28;
         } else {
          $49 = (($47) + 12|0);
          $50 = HEAP32[$49>>2]|0;
          $51 = (($47) + 16|0);
          $52 = HEAP32[$51>>2]|0;
          $53 = ($50|0)==($52|0);
          if (!($53)) {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L23;
           }
          }
          $54 = HEAP32[$47>>2]|0;
          $55 = (($54) + 36|0);
          $56 = HEAP32[$55>>2]|0;
          __THREW__ = 0;
          $57 = (invoke_ii($56|0,($47|0))|0);
          $58 = __THREW__; __THREW__ = 0;
          $59 = $58&1;
          if ($59) {
           label = 46;
           break L23;
          }
          $60 = ($57|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 28;
           break;
          } else {
           if ($46) {
            $177 = $47;
            break;
           } else {
            $$lcssa = $45;$$pre$i2$i$i = $47;$__a$2 = $__a$0;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 28) {
         label = 0;
         if ($46) {
          $$lcssa = $45;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $177 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 46;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i26 = (($84) + -1)|0;
          $85 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 46;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi37Z2D;
         } else {
          $91 = HEAP32[$$pre$phi39Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($45) + 12|0);
        $105 = HEAP32[$104>>2]|0;
        $106 = (($45) + 16|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ($105|0)==($107|0);
        if ($108) {
         $109 = HEAP32[$45>>2]|0;
         $110 = (($109) + 36|0);
         $111 = HEAP32[$110>>2]|0;
         __THREW__ = 0;
         $112 = (invoke_ii($111|0,($45|0))|0);
         $113 = __THREW__; __THREW__ = 0;
         $114 = $113&1;
         if ($114) {
          label = 46;
          break;
         } else {
          $$0$i$i = $112;
         }
        } else {
         $115 = HEAP8[$105>>0]|0;
         $116 = $115&255;
         $$0$i$i = $116;
        }
        $117 = $$0$i$i&255;
        $118 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($117,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $119 = ($118|0)==(0);
        if (!($119)) {
         $$lcssa = $45;$$pre$i2$i$i = $177;$__a$2 = $__a$1;
         break;
        }
        $120 = HEAP32[$104>>2]|0;
        $121 = HEAP32[$106>>2]|0;
        $122 = ($120|0)==($121|0);
        if ($122) {
         $123 = HEAP32[$45>>2]|0;
         $124 = (($123) + 40|0);
         $125 = HEAP32[$124>>2]|0;
         __THREW__ = 0;
         (invoke_ii($125|0,($45|0))|0);
         $126 = __THREW__; __THREW__ = 0;
         $127 = $126&1;
         if ($127) {
          label = 46;
          break;
         }
        } else {
         $128 = (($120) + 1|0);
         HEAP32[$104>>2] = $128;
        }
        $$pre$i$i$i10 = $45;$__a$0 = $__a$1;
       }
       if ((label|0) == 46) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $129 = HEAP32[$__a_end>>2]|0;
       $130 = $129;
       $131 = $__a$2;
       $132 = (($130) - ($131))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($132|0),0);
       $133 = __THREW__; __THREW__ = 0;
       $134 = $133&1;
       if ($134) {
        label = 47;
       } else {
        $135 = HEAP8[$__buf>>0]|0;
        $136 = $135 & 1;
        $137 = ($136<<24>>24)==(0);
        if ($137) {
         $142 = $$pre$phi37Z2D;
        } else {
         $138 = HEAP32[$$pre$phi39Z2D>>2]|0;
         $142 = $138;
        }
        __THREW__ = 0;
        $139 = (invoke_i(459)|0);
        $140 = __THREW__; __THREW__ = 0;
        $141 = $140&1;
        if ($141) {
         label = 47;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $143 = (invoke_iiiii(460,($142|0),($139|0),(5576|0),($vararg_buffer|0))|0);
         $144 = __THREW__; __THREW__ = 0;
         $145 = $144&1;
         if ($145) {
          label = 47;
         } else {
          $146 = ($143|0)==(1);
          if (!($146)) {
           HEAP32[$__err>>2] = 4;
          }
          $147 = ($$lcssa|0)==(0|0);
          if ($147) {
           $160 = 0;
          } else {
           $148 = (($$lcssa) + 12|0);
           $149 = HEAP32[$148>>2]|0;
           $150 = (($$lcssa) + 16|0);
           $151 = HEAP32[$150>>2]|0;
           $152 = ($149|0)==($151|0);
           if ($152) {
            $153 = HEAP32[$$lcssa>>2]|0;
            $154 = (($153) + 36|0);
            $155 = HEAP32[$154>>2]|0;
            __THREW__ = 0;
            $156 = (invoke_ii($155|0,($$lcssa|0))|0);
            $157 = __THREW__; __THREW__ = 0;
            $158 = $157&1;
            if ($158) {
             label = 47;
             break;
            }
            $159 = ($156|0)==(-1);
            if ($159) {
             HEAP32[$__b>>2] = 0;
             $160 = 0;
            } else {
             $160 = $$lcssa;
            }
           } else {
            $160 = $$lcssa;
           }
          }
          $161 = ($160|0)==(0|0);
          $162 = ($$pre$i2$i$i|0)==(0|0);
          L89: do {
           if ($162) {
            label = 75;
           } else {
            $163 = (($$pre$i2$i$i) + 12|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = (($$pre$i2$i$i) + 16|0);
            $166 = HEAP32[$165>>2]|0;
            $167 = ($164|0)==($166|0);
            do {
             if ($167) {
              $168 = HEAP32[$$pre$i2$i$i>>2]|0;
              $169 = (($168) + 36|0);
              $170 = HEAP32[$169>>2]|0;
              __THREW__ = 0;
              $171 = (invoke_ii($170|0,($$pre$i2$i$i|0))|0);
              $172 = __THREW__; __THREW__ = 0;
              $173 = $172&1;
              if ($173) {
               label = 47;
               break L17;
              }
              $174 = ($171|0)==(-1);
              if (!($174)) {
               break;
              }
              HEAP32[$__e>>2] = 0;
              label = 75;
              break L89;
             }
            } while(0);
            if (!($161)) {
             label = 76;
            }
           }
          } while(0);
          if ((label|0) == 75) {
           if ($161) {
            label = 76;
           }
          }
          if ((label|0) == 76) {
           $175 = HEAP32[$__err>>2]|0;
           $176 = $175 | 2;
           HEAP32[$__err>>2] = $176;
          }
          HEAP32[$agg$result>>2] = $160;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 47) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = (($__atoms) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 26|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP8[$$0$i>>0]|0;
    $30 = ($29<<24>>24)==($__ct<<24>>24);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 1|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 16)) {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$0 = -1;
       break;
      }
      $42 = (($0) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (5536 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$0 = 0;
      break;
     }
    } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$0 = -1;
      break;
     }
    }
    $48 = (5536 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6920>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6920|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(461,2147483647,(6928|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((6920|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[6912>>2] = $4;
     ___cxa_guard_release((6920|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[6912>>2]|0;
 return ($7|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 60|0;
 $$byval_copy = sp + 56|0;
 $__lv = sp + 52|0;
 $0 = sp + 48|0;
 $1 = sp + 44|0;
 $2 = sp + 40|0;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $__names = sp + 8|0;
 $5 = sp;
 $6 = (($__iob) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 & 1;
 $9 = ($8|0)==(0);
 L1: do {
  if ($9) {
   HEAP32[$__lv>>2] = -1;
   $10 = HEAP32[$this>>2]|0;
   $11 = (($10) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$__b>>2]|0;
   HEAP32[$1>>2] = $13;
   $14 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $14;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$12 & 511]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
   $15 = HEAP32[$0>>2]|0;
   HEAP32[$__b>>2] = $15;
   $16 = HEAP32[$__lv>>2]|0;
   if ((($16|0) == 1)) {
    HEAP8[$__v>>0] = 1;
   } else if ((($16|0) == 0)) {
    HEAP8[$__v>>0] = 0;
   } else {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   HEAP32[$agg$result>>2] = $15;
  } else {
   __ZNKSt3__18ios_base6getlocEv($3,$__iob);
   __THREW__ = 0;
   $17 = (invoke_iii(454,($3|0),(7016|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $45 = ___cxa_find_matching_catch()|0;
     $46 = tempRet0;
     $47 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
     $$0 = $45;$$01 = $46;
    } else {
     $20 = HEAP32[$3>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     __ZNKSt3__18ios_base6getlocEv($4,$__iob);
     __THREW__ = 0;
     $21 = (invoke_iii(454,($4|0),(7176|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $48 = ___cxa_find_matching_catch()|0;
      $49 = tempRet0;
      $50 = HEAP32[$4>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($50)|0);
      $$0 = $48;$$01 = $49;
      break;
     }
     $24 = HEAP32[$4>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($24)|0);
     $25 = HEAP32[$21>>2]|0;
     $26 = (($25) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     __THREW__ = 0;
     invoke_vii($27|0,($__names|0),($21|0));
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      $$02 = $__names;
     } else {
      $30 = (($__names) + 12|0);
      $31 = HEAP32[$21>>2]|0;
      $32 = (($31) + 28|0);
      $33 = HEAP32[$32>>2]|0;
      __THREW__ = 0;
      invoke_vii($33|0,($30|0),($21|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if ($35) {
       $$02 = $30;
      } else {
       $36 = HEAP32[$__e>>2]|0;
       HEAP32[$5>>2] = $36;
       $37 = (($__names) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
       $38 = (invoke_iiiiiiii(462,($__b|0),($$byval_copy2|0),($__names|0),($37|0),($17|0),($__err|0),1)|0);
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if ($40) {
        $57 = ___cxa_find_matching_catch()|0;
        $58 = tempRet0;
        $59 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($59);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$0 = $57;$$01 = $58;
        break;
       } else {
        $41 = ($38|0)==($__names|0);
        $42 = $41&1;
        HEAP8[$__v>>0] = $42;
        $43 = HEAP32[$__b>>2]|0;
        HEAP32[$agg$result>>2] = $43;
        $44 = (($__names) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($44);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        break L1;
       }
      }
     }
     $51 = ___cxa_find_matching_catch()|0;
     $52 = tempRet0;
     $53 = ($__names|0)==($$02|0);
     if ($53) {
      $$0 = $51;$$01 = $52;
     } else {
      $55 = $$02;
      while(1) {
       $54 = (($55) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($54);
       $56 = ($54|0)==($__names|0);
       if ($56) {
        break;
       } else {
        $55 = $54;
       }
      }
      $$0 = $51;$$01 = $52;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $$pre$phi40Z2D = 0, $$pre$phi42Z2D = 0, $$pre39 = 0, $$pre41 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 invoke_vii(457,($0|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $95 = ___cxa_find_matching_catch()|0;
   $96 = tempRet0;
   $$0 = $95;$$01 = $96;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iii(454,($0|0),(7016|0))|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if (!($7)) {
    $8 = HEAP32[$5>>2]|0;
    $9 = (($8) + 48|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($10|0,($5|0),(5536|0),(((5536 + 26|0))|0),($__atoms|0))|0);
    $11 = __THREW__; __THREW__ = 0;
    $12 = $11&1;
    if (!($12)) {
     $13 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($13)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L18: do {
      if ($23) {
       label = 48;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       if ($26) {
        $29 = (($__buf) + 1|0);
        $$pre41 = (($__buf) + 8|0);
        $$pre$phi40Z2D = $29;$$pre$phi42Z2D = $$pre41;$30 = $29;
       } else {
        $27 = (($__buf) + 8|0);
        $28 = HEAP32[$27>>2]|0;
        $$pre39 = (($__buf) + 1|0);
        $$pre$phi40Z2D = $$pre39;$$pre$phi42Z2D = $27;$30 = $28;
       }
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = (($__buf) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L24: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $105 = 0;$177 = 1;
        } else {
         $33 = (($$pre$i$i$i11) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = (($$pre$i$i$i11) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = (($38) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 47;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $105 = 0;$177 = 1;
         } else {
          $105 = $$pre$i$i$i11;$177 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 29;
         } else {
          $48 = (($46) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = (($46) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = (($53) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 47;
            break L24;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 29;
           break;
          } else {
           if ($177) {
            $178 = $46;
            break;
           } else {
            $$lcssa = $105;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L24;
           }
          }
         }
        } while(0);
        if ((label|0) == 29) {
         label = 0;
         if ($177) {
          $$lcssa = $105;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $178 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        if ($64) {
         $66 = $62&255;
         $67 = $66 >>> 1;
         $69 = $67;
        } else {
         $65 = HEAP32[$31>>2]|0;
         $69 = $65;
        }
        $68 = (($__a$0) + ($69)|0);
        $70 = ($61|0)==($68|0);
        if ($70) {
         if ($64) {
          $72 = $62&255;
          $73 = $72 >>> 1;
          $74 = $62&255;
          $75 = $74 >>> 1;
          $77 = $75;$94 = $73;
         } else {
          $71 = HEAP32[$31>>2]|0;
          $77 = $71;$94 = $71;
         }
         $76 = $77 << 1;
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($76|0),0);
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if ($79) {
          label = 47;
          break;
         }
         $80 = HEAP8[$__buf>>0]|0;
         $81 = $80 & 1;
         $82 = ($81<<24>>24)==(0);
         if ($82) {
          $85 = 10;
         } else {
          $83 = HEAP32[$__buf>>2]|0;
          $84 = $83 & -2;
          $phitmp$i30 = (($84) + -1)|0;
          $85 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(458,($__buf|0),($85|0),0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          label = 47;
          break;
         }
         $88 = HEAP8[$__buf>>0]|0;
         $89 = $88 & 1;
         $90 = ($89<<24>>24)==(0);
         if ($90) {
          $93 = $$pre$phi40Z2D;
         } else {
          $91 = HEAP32[$$pre$phi42Z2D>>2]|0;
          $93 = $91;
         }
         $92 = (($93) + ($94)|0);
         HEAP32[$__a_end>>2] = $92;
         $__a$1 = $93;
        } else {
         $__a$1 = $__a$0;
        }
        $104 = (($105) + 12|0);
        $106 = HEAP32[$104>>2]|0;
        $107 = (($105) + 16|0);
        $108 = HEAP32[$107>>2]|0;
        $109 = ($106|0)==($108|0);
        if ($109) {
         $110 = HEAP32[$105>>2]|0;
         $111 = (($110) + 36|0);
         $112 = HEAP32[$111>>2]|0;
         __THREW__ = 0;
         $113 = (invoke_ii($112|0,($105|0))|0);
         $114 = __THREW__; __THREW__ = 0;
         $115 = $114&1;
         if ($115) {
          label = 47;
          break;
         } else {
          $$0$i$i = $113;
         }
        } else {
         $116 = HEAP32[$106>>2]|0;
         $$0$i$i = $116;
        }
        $117 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $118 = ($117|0)==(0);
        if (!($118)) {
         $$lcssa = $105;$$pre$i3$i$i = $178;$__a$2 = $__a$1;
         break;
        }
        $119 = HEAP32[$104>>2]|0;
        $120 = HEAP32[$107>>2]|0;
        $121 = ($119|0)==($120|0);
        if ($121) {
         $122 = HEAP32[$105>>2]|0;
         $123 = (($122) + 40|0);
         $124 = HEAP32[$123>>2]|0;
         __THREW__ = 0;
         (invoke_ii($124|0,($105|0))|0);
         $125 = __THREW__; __THREW__ = 0;
         $126 = $125&1;
         if ($126) {
          label = 47;
          break;
         }
        } else {
         $127 = (($119) + 4|0);
         HEAP32[$104>>2] = $127;
        }
        $$pre$i$i$i11 = $105;$__a$0 = $__a$1;
       }
       if ((label|0) == 47) {
        $100 = ___cxa_find_matching_catch()|0;
        $101 = tempRet0;
        $lpad$phi$index = $100;$lpad$phi$index2 = $101;
        break;
       }
       $128 = HEAP32[$__a_end>>2]|0;
       $129 = $128;
       $130 = $__a$2;
       $131 = (($129) - ($130))|0;
       __THREW__ = 0;
       invoke_viii(458,($__buf|0),($131|0),0);
       $132 = __THREW__; __THREW__ = 0;
       $133 = $132&1;
       if ($133) {
        label = 48;
       } else {
        $134 = HEAP8[$__buf>>0]|0;
        $135 = $134 & 1;
        $136 = ($135<<24>>24)==(0);
        if ($136) {
         $141 = $$pre$phi40Z2D;
        } else {
         $137 = HEAP32[$$pre$phi42Z2D>>2]|0;
         $141 = $137;
        }
        __THREW__ = 0;
        $138 = (invoke_i(459)|0);
        $139 = __THREW__; __THREW__ = 0;
        $140 = $139&1;
        if ($140) {
         label = 48;
        } else {
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $142 = (invoke_iiiii(460,($141|0),($138|0),(5576|0),($vararg_buffer|0))|0);
         $143 = __THREW__; __THREW__ = 0;
         $144 = $143&1;
         if ($144) {
          label = 48;
         } else {
          $145 = ($142|0)==(1);
          if (!($145)) {
           HEAP32[$__err>>2] = 4;
          }
          $146 = ($$lcssa|0)==(0|0);
          if ($146) {
           $176 = 0;$179 = 1;
          } else {
           $147 = (($$lcssa) + 12|0);
           $148 = HEAP32[$147>>2]|0;
           $149 = (($$lcssa) + 16|0);
           $150 = HEAP32[$149>>2]|0;
           $151 = ($148|0)==($150|0);
           if ($151) {
            $152 = HEAP32[$$lcssa>>2]|0;
            $153 = (($152) + 36|0);
            $154 = HEAP32[$153>>2]|0;
            __THREW__ = 0;
            $155 = (invoke_ii($154|0,($$lcssa|0))|0);
            $156 = __THREW__; __THREW__ = 0;
            $157 = $156&1;
            if ($157) {
             label = 48;
             break;
            } else {
             $$0$i$i$i$i = $155;
            }
           } else {
            $158 = HEAP32[$148>>2]|0;
            $$0$i$i$i$i = $158;
           }
           $159 = ($$0$i$i$i$i|0)==(-1);
           if ($159) {
            HEAP32[$__b>>2] = 0;
            $176 = 0;$179 = 1;
           } else {
            $176 = $$lcssa;$179 = 0;
           }
          }
          $160 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($160) {
            label = 77;
           } else {
            $161 = (($$pre$i3$i$i) + 12|0);
            $162 = HEAP32[$161>>2]|0;
            $163 = (($$pre$i3$i$i) + 16|0);
            $164 = HEAP32[$163>>2]|0;
            $165 = ($162|0)==($164|0);
            if ($165) {
             $166 = HEAP32[$$pre$i3$i$i>>2]|0;
             $167 = (($166) + 36|0);
             $168 = HEAP32[$167>>2]|0;
             __THREW__ = 0;
             $169 = (invoke_ii($168|0,($$pre$i3$i$i|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              label = 48;
              break L18;
             } else {
              $$0$i$i1$i$i = $169;
             }
            } else {
             $172 = HEAP32[$162>>2]|0;
             $$0$i$i1$i$i = $172;
            }
            $173 = ($$0$i$i1$i$i|0)==(-1);
            if ($173) {
             HEAP32[$__e>>2] = 0;
             label = 77;
             break;
            } else {
             if ($179) {
              break;
             } else {
              label = 79;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 77) {
           if ($179) {
            label = 79;
           }
          }
          if ((label|0) == 79) {
           $174 = HEAP32[$__err>>2]|0;
           $175 = $174 | 2;
           HEAP32[$__err>>2] = $175;
          }
          HEAP32[$agg$result>>2] = $176;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return;
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 48) {
      $102 = ___cxa_find_matching_catch()|0;
      $103 = tempRet0;
      $lpad$phi$index = $102;$lpad$phi$index2 = $103;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $97 = ___cxa_find_matching_catch()|0;
   $98 = tempRet0;
   $99 = HEAP32[$0>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($99)|0);
   $$0 = $97;$$01 = $98;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = (($__atoms) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = $10&255;
    $16 = $15 >>> 1;
    $17 = $16;
   } else {
    $13 = (($__grouping) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $17 = $14;
   }
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$0 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = (($20) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$0 = 0;
    break;
   }
   $27 = (($__atoms) + 104|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP32[$$0$i>>2]|0;
    $30 = ($29|0)==($__ct|0);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = (($$0$i) + 4|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$0 = -1;
   } else {
    if ((($__base|0) == 10) | (($__base|0) == 8)) {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$0 = -1;
      break;
     }
    } else if ((($__base|0) == 16)) {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$0 = -1;
       break;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$0 = -1;
       break;
      }
      $43 = (($0) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$0 = -1;
       break;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (5536 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = (($0) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$0 = 0;
      break;
     }
    }
    $49 = (5536 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = (($0) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$0 = 0;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5536|0),(((5536 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7168|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__thousands_sep>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5536|0),(((5536 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7168|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP8[$__decimal_point>>0] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP8[$__thousands_sep>>0] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 32|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP8[$$0$i>>0]|0;
    $43 = ($42<<24>>24)==($__ct<<24>>24);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 1|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$0 = -1;
   } else {
    $49 = (5536 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    if ((($47|0) == 23) | (($47|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = (($62) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$0 = 0;
     break;
    } else if ((($47|0) == 24) | (($47|0) == 25)) {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = (($51) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$0 = -1;
       break;
      }
     }
     $61 = (($51) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$0 = 0;
     break;
    } else {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        $78 = $73&255;
        $79 = $78 >>> 1;
        $80 = $79;
       } else {
        $76 = (($__grouping) + 4|0);
        $77 = HEAP32[$76>>2]|0;
        $80 = $77;
       }
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = (($82) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = (($89) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$0 = 0;
      break;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$0 = 0;
     break;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5536|0),(((5536 + 26|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7176|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 16|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__thousands_sep>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     invoke_vii($19|0,($agg$result|0),($8|0));
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      $22 = HEAP32[$__loc>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($22)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch()|0;
 $24 = tempRet0;
 $25 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($25)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $0 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  $3 = HEAP32[$0>>2]|0;
  $4 = (($3) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($5|0,($0|0),(5536|0),(((5536 + 32|0))|0),($__atoms|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if (!($7)) {
   __THREW__ = 0;
   $8 = (invoke_iii(454,($__loc|0),(7176|0))|0);
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $11 = HEAP32[$8>>2]|0;
    $12 = (($11) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    __THREW__ = 0;
    $14 = (invoke_ii($13|0,($8|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     HEAP32[$__decimal_point>>2] = $14;
     $17 = HEAP32[$8>>2]|0;
     $18 = (($17) + 16|0);
     $19 = HEAP32[$18>>2]|0;
     __THREW__ = 0;
     $20 = (invoke_ii($19|0,($8|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      HEAP32[$__thousands_sep>>2] = $20;
      $23 = HEAP32[$8>>2]|0;
      $24 = (($23) + 20|0);
      $25 = HEAP32[$24>>2]|0;
      __THREW__ = 0;
      invoke_vii($25|0,($agg$result|0),($8|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       $28 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($28)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch()|0;
 $30 = tempRet0;
 $31 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($31)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$0 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = (($3) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    if ($7) {
     $10 = $5&255;
     $11 = $10 >>> 1;
     $12 = $11;
    } else {
     $8 = (($__grouping) + 4|0);
     $9 = HEAP32[$8>>2]|0;
     $12 = $9;
    }
    $13 = ($12|0)==(0);
    if ($13) {
     $$0 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = (($14) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$0 = 0;
     } else {
      $$0 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $27 = $22&255;
     $28 = $27 >>> 1;
     $29 = $28;
    } else {
     $25 = (($__grouping) + 4|0);
     $26 = HEAP32[$25>>2]|0;
     $29 = $26;
    }
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$0 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$0 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = (($33) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$0 = 0;
     break;
    }
   }
   $40 = (($__atoms) + 128|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP32[$$0$i>>2]|0;
    $43 = ($42|0)==($__ct|0);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = (($$0$i) + 4|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$0 = -1;
   } else {
    $50 = (5536 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    if ((($48|0) == 23) | (($48|0) == 22)) {
     HEAP8[$__exp>>0] = 80;
    } else if ((($48|0) == 24) | (($48|0) == 25)) {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = (($52) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$0 = -1;
       break;
      }
     }
     $62 = (($52) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$0 = 0;
     break;
    } else {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       if ($74) {
        $77 = $72&255;
        $78 = $77 >>> 1;
        $79 = $78;
       } else {
        $75 = (($__grouping) + 4|0);
        $76 = HEAP32[$75>>2]|0;
        $79 = $76;
       }
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = (($81) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = (($88) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$0 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$0 = 0;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre3 = 0, $$pre5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7168|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $57 = ___cxa_find_matching_catch()|0;
     $58 = tempRet0;
     $59 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($59)|0);
     $$0 = $57;$$01 = $58;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 1|0);
      $$pre5 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $25;$$pre$phi6Z2D = $$pre5;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre3 = (($__nm) + 1|0);
      $$ph = $24;$$pre$phi4Z2D = $$pre3;$$pre$phi6Z2D = $23;
     }
     $26 = (($__nm) + 4|0);
     $28 = $20;$37 = $$ph;
     L14: while(1) {
      $27 = $28 & 1;
      $29 = ($27<<24>>24)==(0);
      if ($29) {
       $32 = $28&255;
       $33 = $32 >>> 1;
       $35 = $$pre$phi4Z2D;$36 = $33;
      } else {
       $30 = HEAP32[$$pre$phi6Z2D>>2]|0;
       $31 = HEAP32[$26>>2]|0;
       $35 = $30;$36 = $31;
      }
      $34 = (($35) + ($36)|0);
      $38 = ($37|0)==($34|0);
      if ($38) {
       label = 24;
       break;
      }
      $39 = HEAP8[$37>>0]|0;
      $40 = HEAP32[$__s>>2]|0;
      $41 = ($40|0)==(0|0);
      do {
       if (!($41)) {
        $42 = (($40) + 24|0);
        $43 = HEAP32[$42>>2]|0;
        $44 = (($40) + 28|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = ($43|0)==($45|0);
        if (!($46)) {
         $47 = (($43) + 1|0);
         HEAP32[$42>>2] = $47;
         HEAP8[$43>>0] = $39;
         break;
        }
        $48 = HEAP32[$40>>2]|0;
        $49 = (($48) + 52|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = $39&255;
        __THREW__ = 0;
        $52 = (invoke_iii($50|0,($40|0),($51|0))|0);
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if ($54) {
         label = 23;
         break L14;
        }
        $55 = ($52|0)==(-1);
        if ($55) {
         HEAP32[$__s>>2] = 0;
        }
       }
      } while(0);
      $56 = (($37) + 1|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $28 = $$pre;$37 = $56;
     }
     if ((label|0) == 23) {
      $60 = ___cxa_find_matching_catch()|0;
      $61 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      $$0 = $60;$$01 = $61;
      break;
     }
     else if ((label|0) == 24) {
      $62 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $62;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5720,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $$1$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $$01 = $__len;$$1 = $$1$ph;
 while(1) {
  $6 = HEAP8[$$01>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $$1$lcssa = $$1;
   break;
  }
  $8 = (($$01) + 1|0);
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = $6;
  $$01 = $8;$$1 = $9;
 }
 $10 = $__flags & 74;
 do {
  if ((($10|0) == 64)) {
   HEAP8[$$1$lcssa>>0] = 111;
  } else if ((($10|0) == 8)) {
   $11 = $__flags & 16384;
   $12 = ($11|0)==(0);
   if ($12) {
    HEAP8[$$1$lcssa>>0] = 120;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break;
   }
  } else {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 do {
  if ((($2|0) == 32)) {
   $$0 = $__ne;
  } else if ((($2|0) == 16)) {
   $3 = HEAP8[$__nb>>0]|0;
   if ((($3<<24>>24) == 43) | (($3<<24>>24) == 45)) {
    $4 = (($__nb) + 1|0);
    $$0 = $4;
    break;
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = (($__nb) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = (($__nb) + 2|0);
     $$0 = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$9 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7024)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$9 = $81 ? $75 : $86;
      $87 = (($$9) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 1|0);
       HEAP32[$__oe>>2] = $92;
       HEAP8[$91>>0] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 28|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 1|0);
     HEAP32[$__oe>>2] = $111;
     HEAP8[$110>>0] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -1|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP8[$$01$i$i>>0]|0;
      $123 = HEAP8[$120>>0]|0;
      HEAP8[$$01$i$i>>0] = $123;
      HEAP8[$120>>0] = $122;
      $124 = (($$01$i$i) + 1|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $126 = HEAP32[$__oe>>2]|0;
   $storemerge = $126;
  } else {
   $127 = $__np;
   $128 = $__nb;
   $129 = (($127) - ($128))|0;
   $130 = (($__ob) + ($129)|0);
   $storemerge = $130;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5728,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5720,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5728,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(463,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 88|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 150|0;
 $__nb = sp + 84|0;
 $__o = sp + 92|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5736,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $40 = $$pre9;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 1;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $72 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $52 = $$pre10;$62 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $72 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $66 = ___cxa_find_matching_catch()|0;
      $67 = tempRet0;
      $68 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($68)|0);
      $$0 = $66;$$01 = $67;$69 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $72 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      _free($62);
      if (!($63)) {
      }
      $65 = ($64|0)==(0|0);
      _free($64);
      if (!($65)) {
      }
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$69 = $72;
  }
  $70 = ($69|0)==(0|0);
  _free($69);
  if (!($70)) {
  }
  $71 = ($64|0)==(0|0);
  _free($64);
  if ($71) {
   $$127 = $$01;$$18 = $$0;
  } else {
   $$127 = $$01;$$18 = $$0;
  }
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = (($$1) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;$$2 = $$2$ph;
 while(1) {
  $11 = HEAP8[$$01>>0]|0;
  $12 = ($11<<24>>24)==(0);
  if ($12) {
   $$2$lcssa = $$2;
   break;
  }
  $13 = (($$01) + 1|0);
  $14 = (($$2) + 1|0);
  HEAP8[$$2>>0] = $11;
  $$01 = $13;$$2 = $14;
 }
 do {
  if ((($6|0) == 256)) {
   $17 = $7 & 1;
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else if ((($6|0) == 4)) {
   $15 = $7 & 1;
   $16 = ($15|0)==(0);
   if ($16) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else {
   $19 = $7 & 1;
   $20 = ($19|0)!=(0);
   if ($8) {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$30 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0;
 var $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa37 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7024)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7168)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 28|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 1|0);
       HEAP32[$__oe>>2] = $40;
       HEAP8[$39>>0] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 28|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 1|0);
       HEAP32[$__oe>>2] = $50;
       HEAP8[$49>>0] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 32|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$30 = $111 ? $105 : $116;
      $117 = (($$30) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 1|0);
       HEAP32[$__oe>>2] = $122;
       HEAP8[$121>>0] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 28|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 1|0);
     HEAP32[$__oe>>2] = $141;
     HEAP8[$140>>0] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -1|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP8[$$01$i$i6>>0]|0;
      $153 = HEAP8[$150>>0]|0;
      HEAP8[$$01$i$i6>>0] = $153;
      HEAP8[$150>>0] = $152;
      $154 = (($$01$i$i6) + 1|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;
    }
   }
   $__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa37 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 28|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 1|0);
    HEAP32[$__oe>>2] = $174;
    HEAP8[$173>>0] = $170;
    $175 = (($__nf$2) + 1|0);
    $__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 1|0);
    HEAP32[$__oe>>2] = $165;
    HEAP8[$164>>0] = $161;
    $166 = (($__nf$2$lcssa37) + 1|0);
    $__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$__oe>>2]|0;
   $177 = HEAP32[$0>>2]|0;
   $178 = (($177) + 32|0);
   $179 = HEAP32[$178>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($179|0,($0|0),($__nf$3|0),($__ne|0),($176|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$127 = 0, $$18 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 80|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 142|0;
 $__nb = sp + 76|0;
 $__o = sp + 84|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5744,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$61 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$61 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$127 = $26;$$18 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $38 = $$pre9;$61 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 1;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $66 = 0;
     label = 19;
    } else {
     $$pre10 = HEAP32[$__nb>>2]|0;
     $50 = $$pre10;$60 = 0;$__ob$0 = 0;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $66 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(466,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $62 = ___cxa_find_matching_catch()|0;
      $63 = tempRet0;
      $64 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($64)|0);
      $$0 = $62;$$01 = $63;$65 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(416,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $66 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$agg$result>>2] = $59;
      _free($60);
      _free($61);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$65 = $66;
  }
  _free($65);
  _free($61);
  $$127 = $$01;$$18 = $$0;
 }
 ___resumeException($$18|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7024|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 32|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = (($6) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   FUNCTION_TABLE_viiiiii[$8 & 511]($agg$result,$this,$$byval_copy,$__iob,$__fl,$10);
  } else {
   __ZNKSt3__18ios_base6getlocEv($1,$__iob);
   __THREW__ = 0;
   $11 = (invoke_iii(454,($1|0),(7176|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   do {
    if ($13) {
     $55 = ___cxa_find_matching_catch()|0;
     $56 = tempRet0;
     $57 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($57)|0);
     $$0 = $55;$$01 = $56;
    } else {
     $14 = HEAP32[$1>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($14)|0);
     $15 = HEAP32[$11>>2]|0;
     if ($__v) {
      $16 = (($15) + 24|0);
      $17 = HEAP32[$16>>2]|0;
      FUNCTION_TABLE_vii[$17 & 1023]($__nm,$11);
     } else {
      $18 = (($15) + 28|0);
      $19 = HEAP32[$18>>2]|0;
      FUNCTION_TABLE_vii[$19 & 1023]($__nm,$11);
     }
     $20 = HEAP8[$__nm>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__nm) + 4|0);
      $$pre3 = (($__nm) + 8|0);
      $$ph = $25;$$pre$phi4Z2D = $$pre3;$$pre$phiZ2D = $25;
     } else {
      $23 = (($__nm) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $$pre2 = (($__nm) + 4|0);
      $$ph = $24;$$pre$phi4Z2D = $23;$$pre$phiZ2D = $$pre2;
     }
     $27 = $20;$36 = $$ph;
     while(1) {
      $26 = $27 & 1;
      $28 = ($26<<24>>24)==(0);
      if ($28) {
       $31 = $27&255;
       $32 = $31 >>> 1;
       $34 = $$pre$phiZ2D;$35 = $32;
      } else {
       $29 = HEAP32[$$pre$phi4Z2D>>2]|0;
       $30 = HEAP32[$$pre$phiZ2D>>2]|0;
       $34 = $29;$35 = $30;
      }
      $33 = (($34) + ($35<<2)|0);
      $37 = ($36|0)==($33|0);
      if ($37) {
       label = 24;
       break;
      }
      $38 = HEAP32[$36>>2]|0;
      $39 = HEAP32[$__s>>2]|0;
      $40 = ($39|0)==(0|0);
      if (!($40)) {
       $41 = (($39) + 24|0);
       $42 = HEAP32[$41>>2]|0;
       $43 = (($39) + 28|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = ($42|0)==($44|0);
       if ($45) {
        $46 = HEAP32[$39>>2]|0;
        $47 = (($46) + 52|0);
        $48 = HEAP32[$47>>2]|0;
        __THREW__ = 0;
        $49 = (invoke_iii($48|0,($39|0),($38|0))|0);
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         label = 23;
         break;
        } else {
         $$0$i$i = $49;
        }
       } else {
        $52 = (($42) + 4|0);
        HEAP32[$41>>2] = $52;
        HEAP32[$42>>2] = $38;
        $$0$i$i = $38;
       }
       $53 = ($$0$i$i|0)==(-1);
       if ($53) {
        HEAP32[$__s>>2] = 0;
       }
      }
      $54 = (($36) + 4|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $27 = $$pre;$36 = $54;
     }
     if ((label|0) == 23) {
      $58 = ___cxa_find_matching_catch()|0;
      $59 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      $$0 = $58;$$01 = $59;
      break;
     }
     else if ((label|0) == 24) {
      $60 = HEAP32[$__s>>2]|0;
      HEAP32[$agg$result>>2] = $60;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      break L1;
     }
    }
   } while(0);
   ___resumeException($$0|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5720,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i5 = 0, $$01$i$i = 0, $$01$i$i4 = 0, $$8 = 0, $$__dg$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0;
 var $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7016)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = $5&255;
  $11 = $10 >>> 1;
  $12 = $11;
 } else {
  $8 = (($__grouping) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $12 = $9;
 }
 $13 = ($12|0)==(0);
 do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = (($14) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $130 = $22;
    label = 40;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = HEAP32[$0>>2]|0;
    $29 = (($28) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
     break;
    }
    $34 = (($__nb) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = (($35) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
   } else {
    $__nf$0 = $__nb;
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   if ($40) {
    $41 = HEAP8[$__nf$0>>0]|0;
    $42 = ($41<<24>>24)==(48);
    if ($42) {
     $43 = (($__nf$0) + 1|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($44<<24>>24) == 88) | (($44<<24>>24) == 120)) {
      $45 = HEAP32[$0>>2]|0;
      $46 = (($45) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 8;
       break;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = (($51) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = (($54) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 8;
       break;
      }
      $60 = (($__nf$0) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = (($61) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
   $63 = ($__nf$1|0)==($__ne|0);
   if (!($63)) {
    $$0$i$i5 = $__ne;$$01$i$i4 = $__nf$1;
    while(1) {
     $64 = (($$0$i$i5) + -1|0);
     $65 = ($$01$i$i4>>>0)<($64>>>0);
     if (!($65)) {
      break;
     }
     $66 = HEAP8[$$01$i$i4>>0]|0;
     $67 = HEAP8[$64>>0]|0;
     HEAP8[$$01$i$i4>>0] = $67;
     HEAP8[$64>>0] = $66;
     $68 = (($$01$i$i4) + 1|0);
     $$0$i$i5 = $64;$$01$i$i4 = $68;
    }
   }
   $69 = HEAP32[$1>>2]|0;
   $70 = (($69) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 8;
   } else {
    $75 = (($__grouping) + 1|0);
    $76 = (($__grouping) + 4|0);
    $77 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $78 = ($__p$0>>>0)<($__ne>>>0);
     if (!($78)) {
      break;
     }
     $79 = HEAP8[$__grouping>>0]|0;
     $80 = $79 & 1;
     $81 = ($80<<24>>24)==(0);
     $82 = HEAP32[$77>>2]|0;
     $$ = $81 ? $75 : $82;
     $83 = (($$) + ($__dg$0)|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     } else {
      $86 = HEAP32[$77>>2]|0;
      $$8 = $81 ? $75 : $86;
      $87 = (($$8) + ($__dg$0)|0);
      $88 = HEAP8[$87>>0]|0;
      $89 = $88 << 24 >> 24;
      $90 = ($__dc$0|0)==($89|0);
      if ($90) {
       $91 = HEAP32[$__oe>>2]|0;
       $92 = (($91) + 4|0);
       HEAP32[$__oe>>2] = $92;
       HEAP32[$91>>2] = $72;
       $93 = HEAP8[$__grouping>>0]|0;
       $94 = $93 & 1;
       $95 = ($94<<24>>24)==(0);
       if ($95) {
        $97 = $93&255;
        $98 = $97 >>> 1;
        $100 = $98;
       } else {
        $96 = HEAP32[$76>>2]|0;
        $100 = $96;
       }
       $99 = (($100) + -1)|0;
       $101 = ($__dg$0>>>0)<($99>>>0);
       $102 = $101&1;
       $$__dg$0 = (($102) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     }
     $103 = HEAP8[$__p$0>>0]|0;
     $104 = HEAP32[$0>>2]|0;
     $105 = (($104) + 44|0);
     $106 = HEAP32[$105>>2]|0;
     __THREW__ = 0;
     $107 = (invoke_iii($106|0,($0|0),($103|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 7;
      break;
     }
     $110 = HEAP32[$__oe>>2]|0;
     $111 = (($110) + 4|0);
     HEAP32[$__oe>>2] = $111;
     HEAP32[$110>>2] = $107;
     $112 = (($__dc$1) + 1)|0;
     $113 = (($__p$0) + 1|0);
     $__dc$0 = $112;$__dg$0 = $__dg$1;$__p$0 = $113;
    }
    if ((label|0) == 7) {
     $23 = ___cxa_find_matching_catch()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $114 = $__nf$1;
    $115 = $__nb;
    $116 = (($114) - ($115))|0;
    $117 = (($__ob) + ($116<<2)|0);
    $118 = HEAP32[$__oe>>2]|0;
    $119 = ($117|0)==($118|0);
    if ($119) {
     $130 = $117;
     label = 40;
    } else {
     $$0$i$i = $118;$$01$i$i = $117;
     while(1) {
      $120 = (($$0$i$i) + -4|0);
      $121 = ($$01$i$i>>>0)<($120>>>0);
      if (!($121)) {
       break;
      }
      $122 = HEAP32[$$01$i$i>>2]|0;
      $123 = HEAP32[$120>>2]|0;
      HEAP32[$$01$i$i>>2] = $123;
      HEAP32[$120>>2] = $122;
      $124 = (($$01$i$i) + 4|0);
      $$0$i$i = $120;$$01$i$i = $124;
     }
     $130 = $118;
     label = 40;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 40) {
  $125 = ($__np|0)==($__ne|0);
  if ($125) {
   $storemerge = $130;
  } else {
   $126 = $__np;
   $127 = $__nb;
   $128 = (($126) - ($127))|0;
   $129 = (($__ob) + ($128<<2)|0);
   $storemerge = $129;
  }
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5728,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5816+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5816+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5816+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5816+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5816+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5816+5>>0]|0;
 $2 = (($__fmt) + 1|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,5720,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 } else {
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$13,$14,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($__fmt) + 1|0);
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,5728,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($2,$__iob);
 __THREW__ = 0;
 invoke_viiiiiii(469,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $25 = ___cxa_find_matching_catch()|0;
  $26 = tempRet0;
  $27 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($27)|0);
  ___resumeException($25|0);
  // unreachable;
 } else {
  $21 = HEAP32[$2>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($21)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$3+0>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$23,$24,$__iob,$__fl);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 316|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 320|0;
 $__nb = sp + 312|0;
 $__o = sp + 84|0;
 $__op = sp + 80|0;
 $__oe = sp + 76|0;
 $0 = sp + 72|0;
 $1 = sp + 68|0;
 $2 = sp + 64|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5736,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     $30 = (($__iob) + 8|0);
     $31 = HEAP32[$30>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $31;
     $vararg_ptr12 = (($vararg_buffer9) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $32 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if (!($34)) {
      $__nc$1 = $32;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $35 = HEAP32[$__nb>>2]|0;
    $36 = ($35|0)==(0|0);
    if (!($36)) {
     $40 = $35;$64 = $35;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $40 = $$pre;$64 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $40 = $$pre7;$64 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $39 = (($40) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($40,$39,$__iob)|0);
  $42 = ($40|0)==($__nar|0);
  if ($42) {
   $52 = $__nar;$62 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $43 = $__nc$2 << 3;
   $44 = (_malloc($43)|0);
   $45 = ($44|0)==(0|0);
   if ($45) {
    __THREW__ = 0;
    invoke_v(465);
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     $70 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $52 = $$pre8;$62 = $44;$__ob$0 = $44;
     label = 20;
    }
   } else {
    $52 = $40;$62 = $44;$__ob$0 = $44;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $70 = $62;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($52|0),($41|0),($39|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $65 = ___cxa_find_matching_catch()|0;
      $66 = tempRet0;
      $67 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($67)|0);
      $$0 = $65;$$01 = $66;$68 = $62;
      break;
     }
     $55 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($55)|0);
     $56 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $56;
     $57 = HEAP32[$__op>>2]|0;
     $58 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($57|0),($58|0),($__iob|0),($__fl|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $70 = $62;
      label = 19;
     } else {
      $61 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $61;
      HEAP32[$agg$result>>2] = $61;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       _free($62);
      }
      _free($64);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $48 = ___cxa_find_matching_catch()|0;
   $49 = tempRet0;
   $$0 = $48;$$01 = $49;$68 = $70;
  }
  $69 = ($68|0)==(0|0);
  if (!($69)) {
   _free($68);
  }
  _free($64);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i7 = 0, $$01$i$i = 0, $$01$i$i6 = 0, $$29 = 0, $$__dg$0 = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa = 0, $__nf$2$lcssa40 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$0$lcssa = 0, $__ns$1 = 0, $__ns$1$lcssa = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0;
 var $lpad$phi$index5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7016)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,7176)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 if ((($5<<24>>24) == 43) | (($5<<24>>24) == 45)) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (($6) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = (($__nb) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = (($13) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
 } else {
  $__nf$0 = $__nb;
  label = 10;
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = (($__nf$0) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
       $33 = HEAP32[$0>>2]|0;
       $34 = (($33) + 44|0);
       $35 = HEAP32[$34>>2]|0;
       __THREW__ = 0;
       $36 = (invoke_iii($35|0,($0|0),48)|0);
       $37 = __THREW__; __THREW__ = 0;
       $38 = $37&1;
       if ($38) {
        label = 8;
        break L4;
       }
       $39 = HEAP32[$__oe>>2]|0;
       $40 = (($39) + 4|0);
       HEAP32[$__oe>>2] = $40;
       HEAP32[$39>>2] = $36;
       $41 = (($__nf$0) + 2|0);
       $42 = HEAP8[$31>>0]|0;
       $43 = HEAP32[$0>>2]|0;
       $44 = (($43) + 44|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 8;
        break L4;
       }
       $49 = HEAP32[$__oe>>2]|0;
       $50 = (($49) + 4|0);
       HEAP32[$__oe>>2] = $50;
       HEAP32[$49>>2] = $46;
       $__ns$0 = $41;
       while(1) {
        $51 = ($__ns$0>>>0)<($__ne>>>0);
        if (!($51)) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $52 = HEAP8[$__ns$0>>0]|0;
        __THREW__ = 0;
        $53 = (invoke_i(459)|0);
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         label = 7;
         break;
        }
        $56 = $52 << 24 >> 24;
        __THREW__ = 0;
        $57 = (invoke_iii(467,($56|0),($53|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         label = 7;
         break;
        }
        $60 = ($57|0)==(0);
        if ($60) {
         $__ns$0$lcssa = $__ns$0;
         label = 28;
         break;
        }
        $61 = (($__ns$0) + 1|0);
        $__ns$0 = $61;
       }
       if ((label|0) == 7) {
        $21 = ___cxa_find_matching_catch()|0;
        $22 = tempRet0;
        $lpad$phi$index = $21;$lpad$phi$index5 = $22;
        break L4;
       }
       else if ((label|0) == 28) {
        $__nf$1 = $41;$__ns$2 = $__ns$0$lcssa;
        break;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } while(0);
   do {
    if ((label|0) == 11) {
     $__ns$1 = $__nf$0;
     while(1) {
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(459)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       label = 6;
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(468,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       label = 6;
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__ns$1$lcssa = $__ns$1;
       label = 27;
       break;
      }
      $72 = (($__ns$1) + 1|0);
      $__ns$1 = $72;
     }
     if ((label|0) == 6) {
      $19 = ___cxa_find_matching_catch()|0;
      $20 = tempRet0;
      $lpad$phi$index = $19;$lpad$phi$index5 = $20;
      break L4;
     }
     else if ((label|0) == 27) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$1$lcssa;
      break;
     }
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   if ($75) {
    $78 = $73&255;
    $79 = $78 >>> 1;
    $80 = $79;
   } else {
    $76 = (($__grouping) + 4|0);
    $77 = HEAP32[$76>>2]|0;
    $80 = $77;
   }
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = HEAP32[$__oe>>2]|0;
    $83 = HEAP32[$0>>2]|0;
    $84 = (($83) + 48|0);
    $85 = HEAP32[$84>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
    $86 = __THREW__; __THREW__ = 0;
    $87 = $86&1;
    if ($87) {
     label = 8;
     break;
    }
    $88 = $__ns$2;
    $89 = $__nf$1;
    $90 = (($88) - ($89))|0;
    $91 = HEAP32[$__oe>>2]|0;
    $92 = (($91) + ($90<<2)|0);
    HEAP32[$__oe>>2] = $92;
    $$pre$phiZ2D = $0;$191 = $92;
   } else {
    $93 = ($__nf$1|0)==($__ns$2|0);
    if (!($93)) {
     $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
     while(1) {
      $94 = (($$0$i$i) + -1|0);
      $95 = ($$01$i$i>>>0)<($94>>>0);
      if (!($95)) {
       break;
      }
      $96 = HEAP8[$$01$i$i>>0]|0;
      $97 = HEAP8[$94>>0]|0;
      HEAP8[$$01$i$i>>0] = $97;
      HEAP8[$94>>0] = $96;
      $98 = (($$01$i$i) + 1|0);
      $$0$i$i = $94;$$01$i$i = $98;
     }
    }
    $99 = HEAP32[$1>>2]|0;
    $100 = (($99) + 16|0);
    $101 = HEAP32[$100>>2]|0;
    __THREW__ = 0;
    $102 = (invoke_ii($101|0,($1|0))|0);
    $103 = __THREW__; __THREW__ = 0;
    $104 = $103&1;
    if ($104) {
     label = 8;
     break;
    }
    $105 = (($__grouping) + 1|0);
    $106 = (($__grouping) + 4|0);
    $107 = (($__grouping) + 8|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $108 = ($__p$0>>>0)<($__ns$2>>>0);
     if (!($108)) {
      break;
     }
     $109 = HEAP8[$__grouping>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)==(0);
     $112 = HEAP32[$107>>2]|0;
     $$ = $111 ? $105 : $112;
     $113 = (($$) + ($__dg$0)|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)>(0);
     if ($115) {
      $116 = HEAP32[$107>>2]|0;
      $$29 = $111 ? $105 : $116;
      $117 = (($$29) + ($__dg$0)|0);
      $118 = HEAP8[$117>>0]|0;
      $119 = $118 << 24 >> 24;
      $120 = ($__dc$0|0)==($119|0);
      if ($120) {
       $121 = HEAP32[$__oe>>2]|0;
       $122 = (($121) + 4|0);
       HEAP32[$__oe>>2] = $122;
       HEAP32[$121>>2] = $102;
       $123 = HEAP8[$__grouping>>0]|0;
       $124 = $123 & 1;
       $125 = ($124<<24>>24)==(0);
       if ($125) {
        $127 = $123&255;
        $128 = $127 >>> 1;
        $130 = $128;
       } else {
        $126 = HEAP32[$106>>2]|0;
        $130 = $126;
       }
       $129 = (($130) + -1)|0;
       $131 = ($__dg$0>>>0)<($129>>>0);
       $132 = $131&1;
       $$__dg$0 = (($132) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $133 = HEAP8[$__p$0>>0]|0;
     $134 = HEAP32[$0>>2]|0;
     $135 = (($134) + 44|0);
     $136 = HEAP32[$135>>2]|0;
     __THREW__ = 0;
     $137 = (invoke_iii($136|0,($0|0),($133|0))|0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if ($139) {
      label = 5;
      break;
     }
     $140 = HEAP32[$__oe>>2]|0;
     $141 = (($140) + 4|0);
     HEAP32[$__oe>>2] = $141;
     HEAP32[$140>>2] = $137;
     $142 = (($__dc$1) + 1)|0;
     $143 = (($__p$0) + 1|0);
     $__dc$0 = $142;$__dg$0 = $__dg$1;$__p$0 = $143;
    }
    if ((label|0) == 5) {
     $17 = ___cxa_find_matching_catch()|0;
     $18 = tempRet0;
     $lpad$phi$index = $17;$lpad$phi$index5 = $18;
     break;
    }
    $144 = $__nf$1;
    $145 = $__nb;
    $146 = (($144) - ($145))|0;
    $147 = (($__ob) + ($146<<2)|0);
    $148 = HEAP32[$__oe>>2]|0;
    $149 = ($147|0)==($148|0);
    if ($149) {
     $$pre$phiZ2D = $0;$191 = $147;
    } else {
     $$0$i$i7 = $148;$$01$i$i6 = $147;
     while(1) {
      $150 = (($$0$i$i7) + -4|0);
      $151 = ($$01$i$i6>>>0)<($150>>>0);
      if (!($151)) {
       break;
      }
      $152 = HEAP32[$$01$i$i6>>2]|0;
      $153 = HEAP32[$150>>2]|0;
      HEAP32[$$01$i$i6>>2] = $153;
      HEAP32[$150>>2] = $152;
      $154 = (($$01$i$i6) + 4|0);
      $$0$i$i7 = $150;$$01$i$i6 = $154;
     }
     $$pre$phiZ2D = $0;$191 = $148;
    }
   }
   $192 = $191;$__nf$2 = $__ns$2;
   while(1) {
    $155 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($155)) {
     $$lcssa = $192;$__nf$2$lcssa = $__nf$2;
     label = 63;
     break;
    }
    $156 = HEAP8[$__nf$2>>0]|0;
    $157 = ($156<<24>>24)==(46);
    if ($157) {
     $__nf$2$lcssa40 = $__nf$2;
     label = 59;
     break;
    }
    $167 = HEAP32[$$pre$phiZ2D>>2]|0;
    $168 = (($167) + 44|0);
    $169 = HEAP32[$168>>2]|0;
    __THREW__ = 0;
    $170 = (invoke_iii($169|0,($0|0),($156|0))|0);
    $171 = __THREW__; __THREW__ = 0;
    $172 = $171&1;
    if ($172) {
     label = 4;
     break;
    }
    $173 = HEAP32[$__oe>>2]|0;
    $174 = (($173) + 4|0);
    HEAP32[$__oe>>2] = $174;
    HEAP32[$173>>2] = $170;
    $175 = (($__nf$2) + 1|0);
    $192 = $174;$__nf$2 = $175;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   else if ((label|0) == 59) {
    $158 = HEAP32[$1>>2]|0;
    $159 = (($158) + 12|0);
    $160 = HEAP32[$159>>2]|0;
    __THREW__ = 0;
    $161 = (invoke_ii($160|0,($1|0))|0);
    $162 = __THREW__; __THREW__ = 0;
    $163 = $162&1;
    if ($163) {
     label = 8;
     break;
    }
    $164 = HEAP32[$__oe>>2]|0;
    $165 = (($164) + 4|0);
    HEAP32[$__oe>>2] = $165;
    HEAP32[$164>>2] = $161;
    $166 = (($__nf$2$lcssa40) + 1|0);
    $179 = $165;$__nf$3 = $166;
   }
   else if ((label|0) == 63) {
    $179 = $$lcssa;$__nf$3 = $__nf$2$lcssa;
   }
   $176 = HEAP32[$0>>2]|0;
   $177 = (($176) + 48|0);
   $178 = HEAP32[$177>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($178|0,($0|0),($__nf$3|0),($__ne|0),($179|0))|0);
   $180 = __THREW__; __THREW__ = 0;
   $181 = $180&1;
   if ($181) {
    label = 8;
   } else {
    $182 = $__nf$3;
    $183 = (($25) - ($182))|0;
    $184 = HEAP32[$__oe>>2]|0;
    $185 = (($184) + ($183<<2)|0);
    HEAP32[$__oe>>2] = $185;
    $186 = ($__np|0)==($__ne|0);
    if ($186) {
     $storemerge = $185;
    } else {
     $187 = $__np;
     $188 = $__nb;
     $189 = (($187) - ($188))|0;
     $190 = (($__ob) + ($189<<2)|0);
     $storemerge = $190;
    }
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$01 = 0, $$125 = 0, $$16 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0;
 var $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 308|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 312|0;
 $__nb = sp + 304|0;
 $__o = sp + 76|0;
 $__op = sp + 72|0;
 $__oe = sp + 68|0;
 $0 = sp + 64|0;
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($7,5744,$9)|0);
 HEAP32[$__nb>>2] = $__nar;
 $11 = (__ZNSt3__16__clocEv()|0);
 if ($10) {
  $12 = (($__iob) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = (($vararg_buffer) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $14;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$11,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $15;
 }
 $16 = ($__nc$0|0)>(29);
 do {
  if ($16) {
   if ($10) {
    __THREW__ = 0;
    $17 = (invoke_i(459)|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     $20 = (($__iob) + 8|0);
     $21 = HEAP32[$20>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $21;
     $vararg_ptr8 = (($vararg_buffer5) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $22 = (invoke_iiiii(464,($__nb|0),($17|0),($__fmt|0),($vararg_buffer5|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      $__nc$1 = $22;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $27 = (invoke_i(459)|0);
    $28 = __THREW__; __THREW__ = 0;
    $29 = $28&1;
    if (!($29)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $30 = (invoke_iiiii(464,($__nb|0),($27|0),($__fmt|0),($vararg_buffer9|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      $__nc$1 = $30;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $33 = HEAP32[$__nb>>2]|0;
    $34 = ($33|0)==(0|0);
    if (!($34)) {
     $38 = $33;$62 = $33;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
    __THREW__ = 0;
    invoke_v(465);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $38 = $$pre;$62 = $$pre;$__nc$2 = $__nc$1;
     label = 15;
     break;
    }
   }
   $25 = ___cxa_find_matching_catch()|0;
   $26 = tempRet0;
   $$125 = $26;$$16 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $38 = $$pre7;$62 = 0;$__nc$2 = $__nc$0;
   label = 15;
  }
 } while(0);
 if ((label|0) == 15) {
  $37 = (($38) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38,$37,$__iob)|0);
  $40 = ($38|0)==($__nar|0);
  if ($40) {
   $50 = $__nar;$60 = 0;$__ob$0 = $__o;
   label = 20;
  } else {
   $41 = $__nc$2 << 3;
   $42 = (_malloc($41)|0);
   $43 = ($42|0)==(0|0);
   if ($43) {
    __THREW__ = 0;
    invoke_v(465);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     $68 = 0;
     label = 19;
    } else {
     $$pre8 = HEAP32[$__nb>>2]|0;
     $50 = $$pre8;$60 = $42;$__ob$0 = $42;
     label = 20;
    }
   } else {
    $50 = $38;$60 = $42;$__ob$0 = $42;
    label = 20;
   }
  }
  do {
   if ((label|0) == 20) {
    __THREW__ = 0;
    invoke_vii(457,($0|0),($__iob|0));
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $68 = $60;
     label = 19;
    } else {
     __THREW__ = 0;
     invoke_viiiiiii(470,($50|0),($39|0),($37|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      $63 = ___cxa_find_matching_catch()|0;
      $64 = tempRet0;
      $65 = HEAP32[$0>>2]|0;
      (__ZNSt3__114__shared_count16__release_sharedEv($65)|0);
      $$0 = $63;$$01 = $64;$66 = $60;
      break;
     }
     $53 = HEAP32[$0>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($53)|0);
     $54 = HEAP32[$__s>>2]|0;
     HEAP32[$2>>2] = $54;
     $55 = HEAP32[$__op>>2]|0;
     $56 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
     invoke_viiiiiii(471,($1|0),($$byval_copy|0),($__ob$0|0),($55|0),($56|0),($__iob|0),($__fl|0));
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      $68 = $60;
      label = 19;
     } else {
      $59 = HEAP32[$1>>2]|0;
      HEAP32[$__s>>2] = $59;
      HEAP32[$agg$result>>2] = $59;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       _free($60);
      }
      _free($62);
      STACKTOP = sp;return;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   $46 = ___cxa_find_matching_catch()|0;
   $47 = tempRet0;
   $$0 = $46;$$01 = $47;$66 = $68;
  }
  $67 = ($66|0)==(0|0);
  if (!($67)) {
   _free($66);
  }
  _free($62);
  $$125 = $$01;$$16 = $$0;
 }
 ___resumeException($$16|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[5824+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[5824+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[5824+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[5824+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[5824+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[5824+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $6 = (invoke_iii(454,($0|0),(7016|0))|0);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $15 = ___cxa_find_matching_catch()|0;
  $16 = tempRet0;
  $17 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  ___resumeException($15|0);
  // unreachable;
 }
 $9 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + 48|0);
 $12 = HEAP32[$11>>2]|0;
 (FUNCTION_TABLE_iiiii[$12 & 1023]($6,$__nar,$4,$__o)|0);
 $13 = (($__o) + ($3<<2)|0);
 $14 = ($5|0)==($4|0);
 if ($14) {
  $__op$0 = $13;
 } else {
  $18 = $__nar;
  $19 = $5;
  $20 = (($19) - ($18))|0;
  $21 = (($__o) + ($20<<2)|0);
  $__op$0 = $21;
 }
 $22 = HEAP32[$__s>>2]|0;
 HEAP32[$1>>2] = $22;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$$byval_copy,$__o,$__op$0,$13,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i25 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa65$lcssa = 0, $$lcssa65$lcssa74 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa71 = 0, $$lcssa72 = 0;
 var $$lcssa73 = 0, $$pre = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i2038 = 0, $$pre$i2$i$i2039 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i23 = 0, $isascii1$i4 = 0, $or$cond = 0, $sext = 0, $tmp$i$i22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7024|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch()|0;
  $39 = tempRet0;
  $40 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($40)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $8 = (($4) + 8|0);
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $9 = ($$0$ph|0)!=($__fmte|0);
  $10 = $$pre;
  while(1) {
   $11 = ($10|0)==(0);
   $or$cond = $9 & $11;
   $12 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $12;
    label = 63;
    break L4;
   }
   $13 = ($12|0)==(0|0);
   if ($13) {
    $24 = 0;
   } else {
    $14 = (($12) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($12) + 16|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($15|0)==($17|0);
    if ($18) {
     $19 = HEAP32[$12>>2]|0;
     $20 = (($19) + 36|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (FUNCTION_TABLE_ii[$21 & 1023]($12)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      HEAP32[$__b>>2] = 0;
      $24 = 0;
     } else {
      $24 = $12;
     }
    } else {
     $24 = $12;
    }
   }
   $25 = ($24|0)==(0|0);
   $26 = HEAP32[$__e>>2]|0;
   $27 = ($26|0)==(0|0);
   do {
    if ($27) {
     label = 14;
    } else {
     $28 = (($26) + 12|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (($26) + 16|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ($29|0)==($31|0);
     if ($32) {
      $33 = HEAP32[$26>>2]|0;
      $34 = (($33) + 36|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (FUNCTION_TABLE_ii[$35 & 1023]($26)|0);
      $37 = ($36|0)==(-1);
      if ($37) {
       HEAP32[$__e>>2] = 0;
       label = 14;
       break;
      }
     }
     if ($25) {
      $190 = $26;
     } else {
      $$lcssa64 = $24;
      label = 15;
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa64 = $24;
     label = 15;
     break L4;
    } else {
     $190 = 0;
    }
   }
   $41 = HEAP8[$$0$ph>>0]|0;
   $42 = HEAP32[$4>>2]|0;
   $43 = (($42) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_iiii[$44 & 1023]($4,$41,0)|0);
   $46 = ($45<<24>>24)==(37);
   if ($46) {
    $$lcssa65 = $24;$$lcssa68 = $190;
    label = 18;
    break;
   }
   $68 = HEAP8[$$0$ph>>0]|0;
   $isascii1$i = ($68<<24>>24)>(-1);
   if ($isascii1$i) {
    $69 = $68 << 24 >> 24;
    $70 = HEAP32[$8>>2]|0;
    $71 = (($70) + ($69<<1)|0);
    $72 = HEAP16[$71>>1]|0;
    $73 = $72 & 8192;
    $74 = ($73<<16>>16)==(0);
    if (!($74)) {
     $$lcssa66 = $24;$$lcssa69 = $190;$$lcssa71 = $70;
     label = 29;
     break;
    }
   }
   $133 = (($24) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (($24) + 16|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = ($134|0)==($136|0);
   if ($137) {
    $138 = HEAP32[$24>>2]|0;
    $139 = (($138) + 36|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = (FUNCTION_TABLE_ii[$140 & 1023]($24)|0);
    $$0$i$i25 = $141;
   } else {
    $142 = HEAP8[$134>>0]|0;
    $143 = $142&255;
    $$0$i$i25 = $143;
   }
   $144 = $$0$i$i25&255;
   $145 = HEAP32[$4>>2]|0;
   $146 = (($145) + 12|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = (FUNCTION_TABLE_iii[$147 & 1023]($4,$144)|0);
   $149 = HEAP8[$$0$ph>>0]|0;
   $150 = HEAP32[$4>>2]|0;
   $151 = (($150) + 12|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (FUNCTION_TABLE_iii[$152 & 1023]($4,$149)|0);
   $154 = ($148<<24>>24)==($153<<24>>24);
   if ($154) {
    $$lcssa67 = $24;$$lcssa72 = $133;$$lcssa73 = $135;
    label = 58;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $10 = 4;
  }
  if ((label|0) == 18) {
   label = 0;
   $47 = (($$0$ph) + 1|0);
   $48 = ($47|0)==($__fmte|0);
   if ($48) {
    $$lcssa65$lcssa = $$lcssa65;
    label = 19;
    break;
   }
   $49 = HEAP8[$47>>0]|0;
   $50 = HEAP32[$4>>2]|0;
   $51 = (($50) + 36|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($4,$49,0)|0);
   if ((($53<<24>>24) == 48) | (($53<<24>>24) == 69)) {
    $54 = (($$0$ph) + 2|0);
    $55 = ($54|0)==($__fmte|0);
    if ($55) {
     $$lcssa65$lcssa74 = $$lcssa65;
     label = 22;
     break;
    }
    $56 = HEAP8[$54>>0]|0;
    $57 = HEAP32[$4>>2]|0;
    $58 = (($57) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($4,$56,0)|0);
    $64 = $$lcssa65;$67 = $47;$__cmd$0 = $60;$__opt$0 = $53;
   } else {
    $64 = $$lcssa65;$67 = $$0$ph;$__cmd$0 = $53;$__opt$0 = 0;
   }
   $61 = HEAP32[$this>>2]|0;
   $62 = (($61) + 36|0);
   $63 = HEAP32[$62>>2]|0;
   HEAP32[$2>>2] = $64;
   HEAP32[$3>>2] = $$lcssa68;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$63 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $65 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $65;
   $66 = (($67) + 2|0);
   $$0$ph$be = $66;
  }
  else if ((label|0) == 29) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 1|0);
    $75 = ($$2|0)==($__fmte|0);
    if ($75) {
     $$2$lcssa = $__fmte;
     break;
    }
    $76 = HEAP8[$$2>>0]|0;
    $isascii1$i4 = ($76<<24>>24)>(-1);
    if (!($isascii1$i4)) {
     $$2$lcssa = $$2;
     break;
    }
    $77 = $76 << 24 >> 24;
    $78 = (($$lcssa71) + ($77<<1)|0);
    $79 = HEAP16[$78>>1]|0;
    $80 = $79 & 8192;
    $81 = ($80<<16>>16)==(0);
    if ($81) {
     $$2$lcssa = $$2;
     break;
    } else {
     $$0$pn = $$2;
    }
   }
   $$pre$i$i$i16 = $$lcssa66;$$pre$i2$i$i20 = $$lcssa69;$95 = $$lcssa69;
   L50: while(1) {
    $82 = ($$pre$i$i$i16|0)==(0|0);
    if ($82) {
     $93 = 0;
    } else {
     $83 = (($$pre$i$i$i16) + 12|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = (($$pre$i$i$i16) + 16|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($84|0)==($86|0);
     if ($87) {
      $88 = HEAP32[$$pre$i$i$i16>>2]|0;
      $89 = (($88) + 36|0);
      $90 = HEAP32[$89>>2]|0;
      $91 = (FUNCTION_TABLE_ii[$90 & 1023]($$pre$i$i$i16)|0);
      $92 = ($91|0)==(-1);
      if ($92) {
       HEAP32[$__b>>2] = 0;
       $93 = 0;
      } else {
       $93 = $$pre$i$i$i16;
      }
     } else {
      $93 = $$pre$i$i$i16;
     }
    }
    $94 = ($93|0)==(0|0);
    $96 = ($95|0)==(0|0);
    do {
     if ($96) {
      $$pre$i2$i$i2039 = $$pre$i2$i$i20;
      label = 43;
     } else {
      $97 = (($95) + 12|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = (($95) + 16|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($98|0)==($100|0);
      if (!($101)) {
       if ($94) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $95;
        break;
       } else {
        break L50;
       }
      }
      $102 = HEAP32[$95>>2]|0;
      $103 = (($102) + 36|0);
      $104 = HEAP32[$103>>2]|0;
      $105 = (FUNCTION_TABLE_ii[$104 & 1023]($95)|0);
      $106 = ($105|0)==(-1);
      if ($106) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i2039 = 0;
       label = 43;
       break;
      } else {
       $107 = ($$pre$i2$i$i20|0)==(0|0);
       $tmp$i$i22 = $94 ^ $107;
       if ($tmp$i$i22) {
        $$pre$i2$i$i2038 = $$pre$i2$i$i20;$191 = $$pre$i2$i$i20;
        break;
       } else {
        break L50;
       }
      }
     }
    } while(0);
    if ((label|0) == 43) {
     label = 0;
     if ($94) {
      break;
     } else {
      $$pre$i2$i$i2038 = $$pre$i2$i$i2039;$191 = 0;
     }
    }
    $108 = (($93) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = (($93) + 16|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = ($109|0)==($111|0);
    if ($112) {
     $113 = HEAP32[$93>>2]|0;
     $114 = (($113) + 36|0);
     $115 = HEAP32[$114>>2]|0;
     $116 = (FUNCTION_TABLE_ii[$115 & 1023]($93)|0);
     $$0$i$i = $116;
    } else {
     $117 = HEAP8[$109>>0]|0;
     $118 = $117&255;
     $$0$i$i = $118;
    }
    $119 = $$0$i$i&255;
    $isascii1$i23 = ($119<<24>>24)>(-1);
    if (!($isascii1$i23)) {
     break;
    }
    $sext = $$0$i$i << 24;
    $120 = $sext >> 24;
    $121 = HEAP32[$8>>2]|0;
    $122 = (($121) + ($120<<1)|0);
    $123 = HEAP16[$122>>1]|0;
    $124 = $123 & 8192;
    $125 = ($124<<16>>16)==(0);
    if ($125) {
     break;
    }
    $126 = HEAP32[$108>>2]|0;
    $127 = HEAP32[$110>>2]|0;
    $128 = ($126|0)==($127|0);
    if ($128) {
     $129 = HEAP32[$93>>2]|0;
     $130 = (($129) + 40|0);
     $131 = HEAP32[$130>>2]|0;
     (FUNCTION_TABLE_ii[$131 & 1023]($93)|0);
    } else {
     $132 = (($126) + 1|0);
     HEAP32[$108>>2] = $132;
    }
    $$pre$i$i$i16 = $93;$$pre$i2$i$i20 = $$pre$i2$i$i2038;$95 = $191;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 58) {
   label = 0;
   $155 = HEAP32[$$lcssa72>>2]|0;
   $156 = HEAP32[$$lcssa73>>2]|0;
   $157 = ($155|0)==($156|0);
   if ($157) {
    $158 = HEAP32[$$lcssa67>>2]|0;
    $159 = (($158) + 40|0);
    $160 = HEAP32[$159>>2]|0;
    (FUNCTION_TABLE_ii[$160 & 1023]($$lcssa67)|0);
   } else {
    $161 = (($155) + 1|0);
    HEAP32[$$lcssa72>>2] = $161;
   }
   $162 = (($$0$ph) + 1|0);
   $$0$ph$be = $162;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 15) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa64;
 }
 else if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa;
 }
 else if ((label|0) == 22) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i7 = $$lcssa65$lcssa74;
 }
 else if ((label|0) == 63) {
  $$pre$i$i$i7 = $$lcssa;
 }
 $163 = ($$pre$i$i$i7|0)==(0|0);
 if ($163) {
  $174 = 0;
 } else {
  $164 = (($$pre$i$i$i7) + 12|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = (($$pre$i$i$i7) + 16|0);
  $167 = HEAP32[$166>>2]|0;
  $168 = ($165|0)==($167|0);
  if ($168) {
   $169 = HEAP32[$$pre$i$i$i7>>2]|0;
   $170 = (($169) + 36|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = (FUNCTION_TABLE_ii[$171 & 1023]($$pre$i$i$i7)|0);
   $173 = ($172|0)==(-1);
   if ($173) {
    HEAP32[$__b>>2] = 0;
    $174 = 0;
   } else {
    $174 = $$pre$i$i$i7;
   }
  } else {
   $174 = $$pre$i$i$i7;
  }
 }
 $175 = ($174|0)==(0|0);
 $176 = HEAP32[$__e>>2]|0;
 $177 = ($176|0)==(0|0);
 do {
  if ($177) {
   label = 73;
  } else {
   $178 = (($176) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = (($176) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$176>>2]|0;
    $184 = (($183) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 1023]($176)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     HEAP32[$__e>>2] = 0;
     label = 73;
     break;
    }
   }
   if (!($175)) {
    label = 74;
   }
  }
 } while(0);
 if ((label|0) == 73) {
  if ($175) {
   label = 74;
  }
 }
 if ((label|0) == 74) {
  $188 = HEAP32[$__err>>2]|0;
  $189 = $188 | 2;
  HEAP32[$__err>>2] = $189;
 }
 HEAP32[$agg$result>>2] = $174;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,5928,((5928 + 8|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 1|0);
  $17 = (($6) + 1|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7024|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7024|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,5968,((5968 + 5|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,5936,((5936 + 8|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 1|0);
    $67 = (($56) + 1|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,5952,((5952 + 11|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 1|0);
    $128 = (($117) + 1|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,5944,((5944 + 8|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,5976,((5976 + 8|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__ct) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = (($1) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (($1) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = (($8) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = (($15) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($15) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = (($22) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = (($27) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = (($27) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = (($33) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = (($46) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = (($46) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = (($52) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
  } else {
   $55 = (($48) + 1|0);
   HEAP32[$47>>2] = $55;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = (($56) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($56) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = (($63) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 33;
  } else {
   $71 = (($$pre$i2$i$i6) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (($$pre$i2$i$i6) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = (($76) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 33;
     break;
    }
   }
   if (!($69)) {
    label = 34;
   }
  }
 } while(0);
 if ((label|0) == 33) {
  if ($69) {
   label = 34;
  }
 }
 if ((label|0) == 34) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = (($41) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = (($48) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (($48) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = (($55) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = (($50) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = (($60) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = (($60) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = (($65) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = (($$pre$i2$i$i611) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = (($$pre$i2$i$i611) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = (($78) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i19 = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$0$i$i1$i$i25 = 0, $$0$i$i16 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa68 = 0, $$lcssa69 = 0, $$lcssa69$lcssa = 0, $$lcssa69$lcssa77 = 0;
 var $$lcssa70 = 0, $$lcssa71 = 0, $$lcssa72 = 0, $$lcssa73 = 0, $$lcssa75 = 0, $$lcssa76 = 0, $$pre = 0, $$pre$i$i$i21 = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i12 = 0, $$pre$i3$i$i1243 = 0, $$pre$i3$i$i1244 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__cmd$0 = 0, $__opt$0 = 0, $or$cond = 0, $phitmp$i4$i$i13 = 0, $tmp$i$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 20|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $1 = sp + 8|0;
 $2 = sp + 4|0;
 $3 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $4 = (invoke_iii(454,($0|0),(7016|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $37 = ___cxa_find_matching_catch()|0;
  $38 = tempRet0;
  $39 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($39)|0);
  ___resumeException($37|0);
  // unreachable;
 }
 $7 = HEAP32[$0>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($7)|0);
 HEAP32[$__err>>2] = 0;
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $8 = ($$0$ph|0)!=($__fmte|0);
  $9 = $$pre;
  while(1) {
   $10 = ($9|0)==(0);
   $or$cond = $8 & $10;
   $11 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$lcssa = $11;
    label = 67;
    break L4;
   }
   $12 = ($11|0)==(0|0);
   if ($12) {
    $127 = 0;$183 = 1;
   } else {
    $13 = (($11) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (($11) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14|0)==($16|0);
    if ($17) {
     $18 = HEAP32[$11>>2]|0;
     $19 = (($18) + 36|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (FUNCTION_TABLE_ii[$20 & 1023]($11)|0);
     $$0$i$i$i$i = $21;
    } else {
     $22 = HEAP32[$14>>2]|0;
     $$0$i$i$i$i = $22;
    }
    $23 = ($$0$i$i$i$i|0)==(-1);
    if ($23) {
     HEAP32[$__b>>2] = 0;
     $127 = 0;$183 = 1;
    } else {
     $127 = $11;$183 = 0;
    }
   }
   $24 = HEAP32[$__e>>2]|0;
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     label = 17;
    } else {
     $26 = (($24) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($24) + 16|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($27|0)==($29|0);
     if ($30) {
      $31 = HEAP32[$24>>2]|0;
      $32 = (($31) + 36|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (FUNCTION_TABLE_ii[$33 & 1023]($24)|0);
      $$0$i$i1$i$i = $34;
     } else {
      $35 = HEAP32[$27>>2]|0;
      $$0$i$i1$i$i = $35;
     }
     $36 = ($$0$i$i1$i$i|0)==(-1);
     if ($36) {
      HEAP32[$__e>>2] = 0;
      label = 17;
      break;
     } else {
      if ($183) {
       $184 = $24;
       break;
      } else {
       $$lcssa68 = $127;
       label = 19;
       break L4;
      }
     }
    }
   } while(0);
   if ((label|0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa68 = $127;
     label = 19;
     break L4;
    } else {
     $184 = 0;
    }
   }
   $40 = HEAP32[$$0$ph>>2]|0;
   $41 = HEAP32[$4>>2]|0;
   $42 = (($41) + 52|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if ($45) {
    $$lcssa69 = $127;$$lcssa72 = $184;
    label = 22;
    break;
   }
   $67 = HEAP32[$$0$ph>>2]|0;
   $68 = HEAP32[$4>>2]|0;
   $69 = (($68) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_iiii[$70 & 1023]($4,8192,$67)|0);
   if ($71) {
    $$lcssa70 = $127;$$lcssa73 = $184;
    label = 32;
    break;
   }
   $126 = (($127) + 12|0);
   $128 = HEAP32[$126>>2]|0;
   $129 = (($127) + 16|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($128|0)==($130|0);
   if ($131) {
    $132 = HEAP32[$127>>2]|0;
    $133 = (($132) + 36|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (FUNCTION_TABLE_ii[$134 & 1023]($127)|0);
    $$0$i$i16 = $135;
   } else {
    $136 = HEAP32[$128>>2]|0;
    $$0$i$i16 = $136;
   }
   $137 = HEAP32[$4>>2]|0;
   $138 = (($137) + 28|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = (FUNCTION_TABLE_iii[$139 & 1023]($4,$$0$i$i16)|0);
   $141 = HEAP32[$$0$ph>>2]|0;
   $142 = HEAP32[$4>>2]|0;
   $143 = (($142) + 28|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = (FUNCTION_TABLE_iii[$144 & 1023]($4,$141)|0);
   $146 = ($140|0)==($145|0);
   if ($146) {
    $$lcssa71 = $127;$$lcssa75 = $126;$$lcssa76 = $129;
    label = 62;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $9 = 4;
  }
  if ((label|0) == 22) {
   label = 0;
   $46 = (($$0$ph) + 4|0);
   $47 = ($46|0)==($__fmte|0);
   if ($47) {
    $$lcssa69$lcssa = $$lcssa69;
    label = 23;
    break;
   }
   $48 = HEAP32[$46>>2]|0;
   $49 = HEAP32[$4>>2]|0;
   $50 = (($49) + 52|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
   if ((($52<<24>>24) == 48) | (($52<<24>>24) == 69)) {
    $53 = (($$0$ph) + 8|0);
    $54 = ($53|0)==($__fmte|0);
    if ($54) {
     $$lcssa69$lcssa77 = $$lcssa69;
     label = 26;
     break;
    }
    $55 = HEAP32[$53>>2]|0;
    $56 = HEAP32[$4>>2]|0;
    $57 = (($56) + 52|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
    $63 = $$lcssa69;$66 = $46;$__cmd$0 = $59;$__opt$0 = $52;
   } else {
    $63 = $$lcssa69;$66 = $$0$ph;$__cmd$0 = $52;$__opt$0 = 0;
   }
   $60 = HEAP32[$this>>2]|0;
   $61 = (($60) + 36|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP32[$2>>2] = $63;
   HEAP32[$3>>2] = $$lcssa72;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   FUNCTION_TABLE_viiiiiiiii[$62 & 255]($1,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
   $64 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $64;
   $65 = (($66) + 8|0);
   $$0$ph$be = $65;
  }
  else if ((label|0) == 32) {
   label = 0;
   $$0$pn = $$0$ph;
   while(1) {
    $$2 = (($$0$pn) + 4|0);
    $72 = ($$2|0)==($__fmte|0);
    if ($72) {
     $$2$lcssa = $__fmte;
     break;
    }
    $73 = HEAP32[$$2>>2]|0;
    $74 = HEAP32[$4>>2]|0;
    $75 = (($74) + 12|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_iiii[$76 & 1023]($4,8192,$73)|0);
    if ($77) {
     $$0$pn = $$2;
    } else {
     $$2$lcssa = $$2;
     break;
    }
   }
   $$pre$i$i$i6 = $$lcssa70;$$pre$i3$i$i12 = $$lcssa73;$90 = $$lcssa73;
   L42: while(1) {
    $78 = ($$pre$i$i$i6|0)==(0|0);
    if ($78) {
     $103 = 1;$105 = 0;
    } else {
     $79 = (($$pre$i$i$i6) + 12|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = (($$pre$i$i$i6) + 16|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = ($80|0)==($82|0);
     if ($83) {
      $84 = HEAP32[$$pre$i$i$i6>>2]|0;
      $85 = (($84) + 36|0);
      $86 = HEAP32[$85>>2]|0;
      $87 = (FUNCTION_TABLE_ii[$86 & 1023]($$pre$i$i$i6)|0);
      $$0$i$i$i$i4 = $87;
     } else {
      $88 = HEAP32[$80>>2]|0;
      $$0$i$i$i$i4 = $88;
     }
     $89 = ($$0$i$i$i$i4|0)==(-1);
     if ($89) {
      HEAP32[$__b>>2] = 0;
      $103 = 1;$105 = 0;
     } else {
      $103 = 0;$105 = $$pre$i$i$i6;
     }
    }
    $91 = ($90|0)==(0|0);
    do {
     if ($91) {
      $$pre$i3$i$i1244 = $$pre$i3$i$i12;
      label = 48;
     } else {
      $92 = (($90) + 12|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = (($90) + 16|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = ($93|0)==($95|0);
      if ($96) {
       $97 = HEAP32[$90>>2]|0;
       $98 = (($97) + 36|0);
       $99 = HEAP32[$98>>2]|0;
       $100 = (FUNCTION_TABLE_ii[$99 & 1023]($90)|0);
       $$0$i$i1$i$i10 = $100;
      } else {
       $101 = HEAP32[$93>>2]|0;
       $$0$i$i1$i$i10 = $101;
      }
      $102 = ($$0$i$i1$i$i10|0)==(-1);
      if ($102) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i1244 = 0;
       label = 48;
       break;
      } else {
       $phitmp$i4$i$i13 = ($$pre$i3$i$i12|0)==(0|0);
       $tmp$i$i15 = $103 ^ $phitmp$i4$i$i13;
       if ($tmp$i$i15) {
        $$pre$i3$i$i1243 = $$pre$i3$i$i12;$185 = $$pre$i3$i$i12;
        break;
       } else {
        break L42;
       }
      }
     }
    } while(0);
    if ((label|0) == 48) {
     label = 0;
     if ($103) {
      break;
     } else {
      $$pre$i3$i$i1243 = $$pre$i3$i$i1244;$185 = 0;
     }
    }
    $104 = (($105) + 12|0);
    $106 = HEAP32[$104>>2]|0;
    $107 = (($105) + 16|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($106|0)==($108|0);
    if ($109) {
     $110 = HEAP32[$105>>2]|0;
     $111 = (($110) + 36|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = (FUNCTION_TABLE_ii[$112 & 1023]($105)|0);
     $$0$i$i = $113;
    } else {
     $114 = HEAP32[$106>>2]|0;
     $$0$i$i = $114;
    }
    $115 = HEAP32[$4>>2]|0;
    $116 = (($115) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($4,8192,$$0$i$i)|0);
    if (!($118)) {
     break;
    }
    $119 = HEAP32[$104>>2]|0;
    $120 = HEAP32[$107>>2]|0;
    $121 = ($119|0)==($120|0);
    if ($121) {
     $122 = HEAP32[$105>>2]|0;
     $123 = (($122) + 40|0);
     $124 = HEAP32[$123>>2]|0;
     (FUNCTION_TABLE_ii[$124 & 1023]($105)|0);
    } else {
     $125 = (($119) + 4|0);
     HEAP32[$104>>2] = $125;
    }
    $$pre$i$i$i6 = $105;$$pre$i3$i$i12 = $$pre$i3$i$i1243;$90 = $185;
   }
   $$0$ph$be = $$2$lcssa;
  }
  else if ((label|0) == 62) {
   label = 0;
   $147 = HEAP32[$$lcssa75>>2]|0;
   $148 = HEAP32[$$lcssa76>>2]|0;
   $149 = ($147|0)==($148|0);
   if ($149) {
    $150 = HEAP32[$$lcssa71>>2]|0;
    $151 = (($150) + 40|0);
    $152 = HEAP32[$151>>2]|0;
    (FUNCTION_TABLE_ii[$152 & 1023]($$lcssa71)|0);
   } else {
    $153 = (($147) + 4|0);
    HEAP32[$$lcssa75>>2] = $153;
   }
   $154 = (($$0$ph) + 4|0);
   $$0$ph$be = $154;
  }
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa68;
 }
 else if ((label|0) == 23) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa;
 }
 else if ((label|0) == 26) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i21 = $$lcssa69$lcssa77;
 }
 else if ((label|0) == 67) {
  $$pre$i$i$i21 = $$lcssa;
 }
 $155 = ($$pre$i$i$i21|0)==(0|0);
 if ($155) {
  $182 = 0;$186 = 1;
 } else {
  $156 = (($$pre$i$i$i21) + 12|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = (($$pre$i$i$i21) + 16|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = ($157|0)==($159|0);
  if ($160) {
   $161 = HEAP32[$$pre$i$i$i21>>2]|0;
   $162 = (($161) + 36|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = (FUNCTION_TABLE_ii[$163 & 1023]($$pre$i$i$i21)|0);
   $$0$i$i$i$i19 = $164;
  } else {
   $165 = HEAP32[$157>>2]|0;
   $$0$i$i$i$i19 = $165;
  }
  $166 = ($$0$i$i$i$i19|0)==(-1);
  if ($166) {
   HEAP32[$__b>>2] = 0;
   $182 = 0;$186 = 1;
  } else {
   $182 = $$pre$i$i$i21;$186 = 0;
  }
 }
 $167 = HEAP32[$__e>>2]|0;
 $168 = ($167|0)==(0|0);
 do {
  if ($168) {
   label = 80;
  } else {
   $169 = (($167) + 12|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (($167) + 16|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170|0)==($172|0);
   if ($173) {
    $174 = HEAP32[$167>>2]|0;
    $175 = (($174) + 36|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = (FUNCTION_TABLE_ii[$176 & 1023]($167)|0);
    $$0$i$i1$i$i25 = $177;
   } else {
    $178 = HEAP32[$170>>2]|0;
    $$0$i$i1$i$i25 = $178;
   }
   $179 = ($$0$i$i1$i$i25|0)==(-1);
   if ($179) {
    HEAP32[$__e>>2] = 0;
    label = 80;
    break;
   } else {
    if ($186) {
     break;
    } else {
     label = 82;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 80) {
  if ($186) {
   label = 82;
  }
 }
 if ((label|0) == 82) {
  $180 = HEAP32[$__err>>2]|0;
  $181 = $180 | 2;
  HEAP32[$__err>>2] = $181;
 }
 HEAP32[$agg$result>>2] = $182;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,6080,((6080 + 32|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $16 = (($6) + 4|0);
  $17 = (($6) + 4|0);
  $18 = $9&255;
  $19 = $18 >>> 1;
  $21 = $17;$22 = $19;$23 = $16;
 } else {
  $12 = (($6) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($6) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $21 = $13;$22 = $15;$23 = $13;
 }
 $20 = (($21) + ($22<<2)|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$1+0>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$23,$20);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = (($4) + 168|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = (($5) + 288|0);
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 __ZNKSt3__18ios_base6getlocEv($0,$__iob);
 __THREW__ = 0;
 $2 = (invoke_iii(454,($0|0),(7016|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($11)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  $5 = HEAP32[$0>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($5)|0);
  $6 = (($__tm) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$2);
  $8 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $8;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 276|0;
 $$byval_copy29 = sp + 272|0;
 $$byval_copy28 = sp + 268|0;
 $$byval_copy27 = sp + 264|0;
 $$byval_copy26 = sp + 260|0;
 $$byval_copy25 = sp + 256|0;
 $$byval_copy24 = sp + 252|0;
 $$byval_copy23 = sp + 248|0;
 $$byval_copy22 = sp + 244|0;
 $$byval_copy21 = sp + 240|0;
 $$byval_copy20 = sp + 236|0;
 $$byval_copy19 = sp + 232|0;
 $$byval_copy18 = sp + 228|0;
 $$byval_copy17 = sp + 224|0;
 $$byval_copy16 = sp + 220|0;
 $$byval_copy15 = sp + 216|0;
 $$byval_copy14 = sp + 212|0;
 $$byval_copy13 = sp + 208|0;
 $$byval_copy12 = sp + 204|0;
 $$byval_copy11 = sp + 200|0;
 $$byval_copy10 = sp + 196|0;
 $$byval_copy9 = sp + 192|0;
 $$byval_copy8 = sp + 188|0;
 $$byval_copy7 = sp + 184|0;
 $$byval_copy6 = sp + 180|0;
 $$byval_copy5 = sp + 176|0;
 $$byval_copy4 = sp + 172|0;
 $$byval_copy3 = sp + 168|0;
 $$byval_copy2 = sp + 164|0;
 $$byval_copy1 = sp + 160|0;
 $$byval_copy = sp + 156|0;
 $1 = sp + 152|0;
 $2 = sp + 148|0;
 $3 = sp + 144|0;
 $4 = sp + 140|0;
 $5 = sp + 136|0;
 $6 = sp + 132|0;
 $7 = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$__err>>2] = 0;
 __ZNKSt3__18ios_base6getlocEv($1,$__iob);
 __THREW__ = 0;
 $40 = (invoke_iii(454,($1|0),(7016|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $45 = ___cxa_find_matching_catch()|0;
  $46 = tempRet0;
  $47 = HEAP32[$1>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($47)|0);
  ___resumeException($45|0);
  // unreachable;
 }
 $43 = HEAP32[$1>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($43)|0);
 $44 = $__fmt << 24 >> 24;
 do {
  switch ($44|0) {
  case 82:  {
   $99 = HEAP32[$__b>>2]|0;
   HEAP32[$25>>2] = $99;
   $100 = HEAP32[$__e>>2]|0;
   HEAP32[$26>>2] = $100;
   ;HEAP32[$$byval_copy18+0>>2]=HEAP32[$25+0>>2]|0;
   ;HEAP32[$$byval_copy19+0>>2]=HEAP32[$26+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($24,$this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,6224,((6224 + 20|0)));
   $101 = HEAP32[$24>>2]|0;
   HEAP32[$__b>>2] = $101;
   label = 34;
   break;
  }
  case 77:  {
   $91 = (($__tm) + 4|0);
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$18>>2] = $92;
   ;HEAP32[$$byval_copy13+0>>2]=HEAP32[$18+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$91,$__b,$$byval_copy13,$__err,$40);
   label = 34;
   break;
  }
  case 68:  {
   $77 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $77;
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $78;
   ;HEAP32[$$byval_copy5+0>>2]=HEAP32[$9+0>>2]|0;
   ;HEAP32[$$byval_copy6+0>>2]=HEAP32[$10+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($8,$this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,6112,((6112 + 32|0)));
   $79 = HEAP32[$8>>2]|0;
   HEAP32[$__b>>2] = $79;
   label = 34;
   break;
  }
  case 101: case 100:  {
   $75 = (($__tm) + 12|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$7>>2] = $76;
   ;HEAP32[$$byval_copy4+0>>2]=HEAP32[$7+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$75,$__b,$$byval_copy4,$__err,$40);
   label = 34;
   break;
  }
  case 72:  {
   $83 = (($__tm) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $84;
   ;HEAP32[$$byval_copy9+0>>2]=HEAP32[$14+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy9,$__err,$40);
   label = 34;
   break;
  }
  case 84:  {
   $103 = HEAP32[$__b>>2]|0;
   HEAP32[$29>>2] = $103;
   $104 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $104;
   ;HEAP32[$$byval_copy21+0>>2]=HEAP32[$29+0>>2]|0;
   ;HEAP32[$$byval_copy22+0>>2]=HEAP32[$30+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($28,$this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,6248,((6248 + 32|0)));
   $105 = HEAP32[$28>>2]|0;
   HEAP32[$__b>>2] = $105;
   label = 34;
   break;
  }
  case 73:  {
   $85 = (($__tm) + 8|0);
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $86;
   ;HEAP32[$$byval_copy10+0>>2]=HEAP32[$15+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$85,$__b,$$byval_copy10,$__err,$40);
   label = 34;
   break;
  }
  case 120:  {
   $108 = HEAP32[$this>>2]|0;
   $109 = (($108) + 20|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = HEAP32[$__b>>2]|0;
   HEAP32[$32>>2] = $111;
   $112 = HEAP32[$__e>>2]|0;
   HEAP32[$33>>2] = $112;
   ;HEAP32[$$byval_copy24+0>>2]=HEAP32[$32+0>>2]|0;
   ;HEAP32[$$byval_copy25+0>>2]=HEAP32[$33+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$110 & 511]($agg$result,$this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm);
   break;
  }
  case 65: case 97:  {
   $48 = (($__tm) + 24|0);
   $49 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $49;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$2+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$48,$__b,$$byval_copy,$__err,$40);
   label = 34;
   break;
  }
  case 106:  {
   $87 = (($__tm) + 28|0);
   $88 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $88;
   ;HEAP32[$$byval_copy11+0>>2]=HEAP32[$16+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$87,$__b,$$byval_copy11,$__err,$40);
   label = 34;
   break;
  }
  case 116: case 110:  {
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $93;
   ;HEAP32[$$byval_copy14+0>>2]=HEAP32[$19+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$40);
   label = 34;
   break;
  }
  case 121:  {
   $136 = (($__tm) + 20|0);
   $137 = HEAP32[$__e>>2]|0;
   HEAP32[$37>>2] = $137;
   ;HEAP32[$$byval_copy28+0>>2]=HEAP32[$37+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$136,$__b,$$byval_copy28,$__err,$40);
   label = 34;
   break;
  }
  case 88:  {
   $113 = (($this) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + 24|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = HEAP32[$__b>>2]|0;
   HEAP32[$35>>2] = $118;
   $119 = HEAP32[$__e>>2]|0;
   HEAP32[$36>>2] = $119;
   $120 = HEAP8[$117>>0]|0;
   $121 = $120 & 1;
   $122 = ($121<<24>>24)==(0);
   if ($122) {
    $127 = (($117) + 4|0);
    $128 = (($117) + 4|0);
    $129 = $120&255;
    $130 = $129 >>> 1;
    $132 = $128;$133 = $130;$134 = $127;
   } else {
    $123 = (($117) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (($117) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $132 = $124;$133 = $126;$134 = $124;
   }
   $131 = (($132) + ($133<<2)|0);
   ;HEAP32[$$byval_copy26+0>>2]=HEAP32[$35+0>>2]|0;
   ;HEAP32[$$byval_copy27+0>>2]=HEAP32[$36+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($34,$this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$134,$131);
   $135 = HEAP32[$34>>2]|0;
   HEAP32[$__b>>2] = $135;
   label = 34;
   break;
  }
  case 99:  {
   $52 = (($this) + 8|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + 12|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (FUNCTION_TABLE_ii[$55 & 1023]($52)|0);
   $57 = HEAP32[$__b>>2]|0;
   HEAP32[$5>>2] = $57;
   $58 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $58;
   $59 = HEAP8[$56>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $66 = (($56) + 4|0);
    $67 = (($56) + 4|0);
    $68 = $59&255;
    $69 = $68 >>> 1;
    $71 = $67;$72 = $69;$73 = $66;
   } else {
    $62 = (($56) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = (($56) + 4|0);
    $65 = HEAP32[$64>>2]|0;
    $71 = $63;$72 = $65;$73 = $63;
   }
   $70 = (($71) + ($72<<2)|0);
   ;HEAP32[$$byval_copy2+0>>2]=HEAP32[$5+0>>2]|0;
   ;HEAP32[$$byval_copy3+0>>2]=HEAP32[$6+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4,$this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$73,$70);
   $74 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $74;
   label = 34;
   break;
  }
  case 104: case 66: case 98:  {
   $50 = (($__tm) + 16|0);
   $51 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $51;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$3+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$50,$__b,$$byval_copy1,$__err,$40);
   label = 34;
   break;
  }
  case 70:  {
   $80 = HEAP32[$__b>>2]|0;
   HEAP32[$12>>2] = $80;
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $81;
   ;HEAP32[$$byval_copy7+0>>2]=HEAP32[$12+0>>2]|0;
   ;HEAP32[$$byval_copy8+0>>2]=HEAP32[$13+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($11,$this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,6144,((6144 + 32|0)));
   $82 = HEAP32[$11>>2]|0;
   HEAP32[$__b>>2] = $82;
   label = 34;
   break;
  }
  case 119:  {
   $106 = (($__tm) + 24|0);
   $107 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $107;
   ;HEAP32[$$byval_copy23+0>>2]=HEAP32[$31+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$106,$__b,$$byval_copy23,$__err,$40);
   label = 34;
   break;
  }
  case 112:  {
   $94 = (($__tm) + 8|0);
   $95 = HEAP32[$__e>>2]|0;
   HEAP32[$20>>2] = $95;
   ;HEAP32[$$byval_copy15+0>>2]=HEAP32[$20+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$94,$__b,$$byval_copy15,$__err,$40);
   label = 34;
   break;
  }
  case 83:  {
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy20+0>>2]=HEAP32[$27+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$40);
   label = 34;
   break;
  }
  case 89:  {
   $138 = (($__tm) + 20|0);
   $139 = HEAP32[$__e>>2]|0;
   HEAP32[$38>>2] = $139;
   ;HEAP32[$$byval_copy29+0>>2]=HEAP32[$38+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$138,$__b,$$byval_copy29,$__err,$40);
   label = 34;
   break;
  }
  case 37:  {
   $140 = HEAP32[$__e>>2]|0;
   HEAP32[$39>>2] = $140;
   ;HEAP32[$$byval_copy30+0>>2]=HEAP32[$39+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$40);
   label = 34;
   break;
  }
  case 109:  {
   $89 = (($__tm) + 16|0);
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $90;
   ;HEAP32[$$byval_copy12+0>>2]=HEAP32[$17+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$89,$__b,$$byval_copy12,$__err,$40);
   label = 34;
   break;
  }
  case 114:  {
   $96 = HEAP32[$__b>>2]|0;
   HEAP32[$22>>2] = $96;
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$23>>2] = $97;
   ;HEAP32[$$byval_copy16+0>>2]=HEAP32[$22+0>>2]|0;
   ;HEAP32[$$byval_copy17+0>>2]=HEAP32[$23+0>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($21,$this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,6176,((6176 + 44|0)));
   $98 = HEAP32[$21>>2]|0;
   HEAP32[$__b>>2] = $98;
   label = 34;
   break;
  }
  default: {
   $141 = HEAP32[$__err>>2]|0;
   $142 = $141 | 4;
   HEAP32[$__err>>2] = $142;
   label = 34;
  }
  }
 } while(0);
 if ((label|0) == 34) {
  $143 = HEAP32[$__b>>2]|0;
  HEAP32[$agg$result>>2] = $143;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = (($0) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = (($0) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = (($7) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = (($13) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($13) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = (($20) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = (($26) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = (($32) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = (($37) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = (($41) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($41) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = (($47) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
  } else {
   $50 = (($43) + 4|0);
   HEAP32[$42>>2] = $50;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = (($51) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (($51) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = (($58) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 38;
  } else {
   $65 = (($$pre$i3$i$i9) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (($$pre$i3$i$i9) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = (($70) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 38;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 40;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($80) {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = (($this) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = (($5) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = (($5) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = (($5) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = (($5) + 24|0);
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = (($46) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = (($53) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = (($48) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = (($58) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = (($58) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = (($63) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = (($$pre$i3$i$i915) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = (($$pre$i3$i$i915) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = (($75) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(459)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP8[$$0$i$i>>0]|0;
  $9 = ($8|0)==(0|0);
  do {
   if ($9) {
    $23 = 0;
   } else {
    $10 = (($8) + 24|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($8) + 28|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($11|0)==($13|0);
    if ($14) {
     $16 = HEAP32[$8>>2]|0;
     $17 = (($16) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $7&255;
     $20 = (FUNCTION_TABLE_iii[$18 & 1023]($8,$19)|0);
     $21 = ($20|0)==(-1);
     $$$i = $21 ? 0 : $8;
     $23 = $$$i;
     break;
    } else {
     $15 = (($11) + 1|0);
     HEAP32[$10>>2] = $15;
     HEAP8[$11>>0] = $7;
     $23 = $8;
     break;
    }
   }
  } while(0);
  $22 = (($$0$i$i) + 1|0);
  $$0$i$i = $22;$8 = $23;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = (($fmt) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = (($fmt) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = (($fmt) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = (($__nar) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$8 = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$lcssa = $8;
   break;
  }
  $7 = HEAP32[$$0$i$i>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $22 = 0;
  } else {
   $10 = (($8) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($8) + 28|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($11|0)==($13|0);
   if ($14) {
    $15 = HEAP32[$8>>2]|0;
    $16 = (($15) + 52|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (FUNCTION_TABLE_iii[$17 & 1023]($8,$7)|0);
    $$0$i$i$i$i = $18;
   } else {
    $19 = (($11) + 4|0);
    HEAP32[$10>>2] = $19;
    HEAP32[$11>>2] = $7;
    $$0$i$i$i$i = $7;
   }
   $20 = ($$0$i$i$i$i|0)==(-1);
   $$$i = $20 ? 0 : $8;
   $22 = $$$i;
  }
  $21 = (($$0$i$i) + 4|0);
  $$0$i$i = $21;$8 = $22;
 }
 HEAP32[$agg$result>>2] = $$lcssa;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $5;
 $7 = $__wb;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = HEAP32[$this>>2]|0;
 $11 = (_uselocale(($10|0))|0);
 __THREW__ = 0;
 $12 = (invoke_iiiii(473,($__wb|0),($__nb|0),($9|0),($mb|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $20 = ___cxa_find_matching_catch()|0;
  $21 = tempRet0;
  $22 = ($11|0)==(0|0);
  if (!($22)) {
   __THREW__ = 0;
   (invoke_ii(474,($11|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    $25 = ___cxa_find_matching_catch(0|0)|0;
    $26 = tempRet0;
    ___clang_call_terminate($25);
    // unreachable;
   }
  }
  ___resumeException($20|0);
  // unreachable;
 }
 $15 = ($11|0)==(0|0);
 if (!($15)) {
  __THREW__ = 0;
  (invoke_ii(474,($11|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   $18 = ___cxa_find_matching_catch(0|0)|0;
   $19 = tempRet0;
   ___clang_call_terminate($18);
   // unreachable;
  }
 }
 $27 = ($12|0)==(-1);
 if ($27) {
  __ZNSt3__121__throw_runtime_errorEPKc(7904);
  // unreachable;
 } else {
  $28 = (($__wb) + ($12<<2)|0);
  HEAP32[$__we>>2] = $28;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre14 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $32 = ___cxa_find_matching_catch()|0;
  $33 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$112 = $32;$$1210 = $33;$104 = 475;$105 = $__wbuf;
  label = 45;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7024|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 32|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6640|0),(((6640 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(98);
      if ($24) {
       $25 = (($23) + 2)|0;
       $26 = (_malloc($25)|0);
       $27 = ($26|0)==(0|0);
       if ($27) {
        __THREW__ = 0;
        invoke_v(465);
        $28 = __THREW__; __THREW__ = 0;
        $29 = $28&1;
        if ($29) {
         $30 = ___cxa_find_matching_catch()|0;
         $31 = tempRet0;
         $$0 = $30;$$01 = $31;
         break;
        } else {
         $38 = 0;$__nc$0 = 0;
        }
       } else {
        $38 = $26;$__nc$0 = $26;
       }
      } else {
       $38 = 0;$__nc$0 = $__nbuf;
      }
      $39 = HEAP8[$__neg>>0]|0;
      $40 = ($39<<24>>24)==(0);
      if ($40) {
       $__nc$1 = $__nc$0;
      } else {
       $41 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $41;
      }
      $42 = (($__atoms) + 10|0);
      $43 = $__atoms;
      $45 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $44 = ($__w$0>>>0)<($45>>>0);
       if (!($44)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $46 = HEAP8[$__w$0>>0]|0;
       $$0$i = $__atoms;
       while(1) {
        $47 = ($$0$i|0)==($42|0);
        if ($47) {
         $$0$lcssa$i = $42;
         break;
        }
        $48 = HEAP8[$$0$i>>0]|0;
        $49 = ($48<<24>>24)==($46<<24>>24);
        if ($49) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $50 = (($$0$i) + 1|0);
        $$0$i = $50;
       }
       $51 = $$0$lcssa$i;
       $52 = (($51) - ($43))|0;
       $53 = (6640 + ($52)|0);
       $54 = HEAP8[$53>>0]|0;
       HEAP8[$__nc$2>>0] = $54;
       $55 = (($__w$0) + 1|0);
       $56 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $45 = $$pre;$__nc$2 = $56;$__w$0 = $55;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $57 = (_sscanf($__nbuf,6656,$vararg_buffer)|0);
      $58 = ($57|0)==(1);
      if (!($58)) {
       __THREW__ = 0;
       invoke_vi(477,(6664|0));
       $59 = __THREW__; __THREW__ = 0;
       $60 = $59&1;
       if ($60) {
        $36 = ___cxa_find_matching_catch()|0;
        $37 = tempRet0;
        _free($38);
        $$0 = $36;$$01 = $37;
        break;
       }
      }
      _free($38);
     }
     $61 = HEAP32[$__b>>2]|0;
     $62 = ($61|0)==(0|0);
     do {
      if ($62) {
       $75 = 0;
      } else {
       $63 = (($61) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($61) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$61>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($61|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         label = 11;
         break L3;
        }
        $74 = ($71|0)==(-1);
        if ($74) {
         HEAP32[$__b>>2] = 0;
         $75 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $75 = $$pre$i$i$i;
         break;
        }
       } else {
        $75 = $61;
       }
      }
     } while(0);
     $76 = ($75|0)==(0|0);
     $77 = HEAP32[$__e>>2]|0;
     $78 = ($77|0)==(0|0);
     do {
      if ($78) {
       label = 37;
      } else {
       $79 = (($77) + 12|0);
       $80 = HEAP32[$79>>2]|0;
       $81 = (($77) + 16|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ($80|0)==($82|0);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = (($84) + 36|0);
        $86 = HEAP32[$85>>2]|0;
        __THREW__ = 0;
        $87 = (invoke_ii($86|0,($77|0))|0);
        $88 = __THREW__; __THREW__ = 0;
        $89 = $88&1;
        if ($89) {
         label = 11;
         break L3;
        }
        $90 = ($87|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         label = 37;
         break;
        }
       }
       if (!($76)) {
        label = 38;
       }
      }
     } while(0);
     if ((label|0) == 37) {
      if ($76) {
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $91 = HEAP32[$__err>>2]|0;
      $92 = $91 | 2;
      HEAP32[$__err>>2] = $92;
     }
     $93 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $93;
     $94 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($94)|0);
     $95 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $96 = ($95|0)==(0|0);
     if (!($96)) {
      $97 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($97|0,($95|0));
      $98 = __THREW__; __THREW__ = 0;
      $99 = $98&1;
      if ($99) {
       $100 = ___cxa_find_matching_catch(0|0)|0;
       $101 = tempRet0;
       ___clang_call_terminate($100);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $$0 = $34;$$01 = $35;
  }
  $102 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($102)|0);
  $$pre7 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $103 = ($$pre7|0)==(0|0);
  if ($103) {
   $$113 = $$0;$$1211 = $$01;
  } else {
   $$pre14 = HEAP32[$1>>2]|0;
   $$112 = $$0;$$1210 = $$01;$104 = $$pre14;$105 = $$pre7;
   label = 45;
  }
 }
 if ((label|0) == 45) {
  __THREW__ = 0;
  invoke_vi($104|0,($105|0));
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  } else {
   $$113 = $$112;$$1211 = $$1210;
  }
 }
 ___resumeException($$113|0);
 // unreachable;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i113 = 0, $$0$i$i120 = 0, $$0$i$i129 = 0, $$0$i$i139 = 0, $$0$i$i156 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i67 = 0, $$0$i$i74 = 0, $$0$i$i93 = 0, $$0$i$i96 = 0, $$290 = 0, $$291 = 0, $$292 = 0, $$293 = 0;
 var $$294 = 0, $$lcssa = 0, $$lcssa322 = 0, $$lcssa324 = 0, $$lcssa326 = 0, $$mask = 0, $$mask280 = 0, $$mask281 = 0, $$mask282 = 0, $$mask283 = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i103 = 0, $$pre$i$i$i143 = 0, $$pre$i$i$i160 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i48 = 0, $$pre$i$i$i79 = 0, $$pre$i2$i$i107 = 0;
 var $$pre$i2$i$i147 = 0, $$pre$i2$i$i164 = 0, $$pre$i2$i$i164269 = 0, $$pre$i2$i$i164270 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52256 = 0, $$pre$i2$i$i52258 = 0, $$pre$i2$i$i83 = 0, $$pre$i2$i$i83274$ph = 0, $$pre$i2$i$i83274287 = 0, $$pre260 = 0, $$pre262 = 0, $$pre263 = 0, $$pre265 = 0, $$pre266 = 0, $$pre267 = 0, $$pre268 = 0, $$pre273 = 0, $$pre277 = 0, $$pre279 = 0;
 var $$sum = 0, $$sum284 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0;
 var $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i17 = 0, $__i$0$i$i21 = 0, $__i$0$i$i26 = 0, $__ng$0 = 0, $__ng$0$lcssa323 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0;
 var $__sym = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i18 = 0, $exitcond$i$i22 = 0, $exitcond$i$i27 = 0, $isascii1$i = 0, $isascii1$i137 = 0, $isascii1$i170 = 0, $isascii1$i61 = 0, $isascii1$i72 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0;
 var $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $sext = 0, $sext209 = 0, $sext210 = 0, $sext211 = 0, $switch = 0, $tmp$i$i149 = 0, $tmp$i$i166 = 0, $tmp$i$i54 = 0, $tmp$i$i85 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i17 = 0;
 while(1) {
  $exitcond$i$i18 = ($__i$0$i$i17|0)==(3);
  if ($exitcond$i$i18) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i17<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i17) + 1)|0;
  $__i$0$i$i17 = $8;
 }
 $__i$0$i$i21 = 0;
 while(1) {
  $exitcond$i$i22 = ($__i$0$i$i21|0)==(3);
  if ($exitcond$i$i22) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i21<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i21) + 1)|0;
  $__i$0$i$i21 = $10;
 }
 $__i$0$i$i26 = 0;
 while(1) {
  $exitcond$i$i27 = ($__i$0$i$i26|0)==(3);
  if ($exitcond$i$i27) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i26<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i26) + 1)|0;
  $__i$0$i$i26 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(478,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $78 = ___cxa_find_matching_catch()|0;
   $79 = tempRet0;
   $lpad$phi$index = $78;$lpad$phi$index7 = $79;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__ct) + 8|0);
   $17 = (($__nsn) + 4|0);
   $18 = (($__nsn) + 8|0);
   $19 = (($__psn) + 4|0);
   $20 = (($__psn) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = (($__sym) + 1|0);
   $24 = (($__sym) + 8|0);
   $25 = (($__sym) + 4|0);
   $26 = (($__spaces) + 1|0);
   $27 = (($__spaces) + 8|0);
   $28 = (($__spaces) + 4|0);
   $29 = (($__pat) + 3|0);
   $30 = (($__grp) + 4|0);
   $896 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L23: while(1) {
    $31 = ($__p$0>>>0)<(4);
    if (!($31)) {
     $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 315;
     break;
    }
    $32 = HEAP32[$__b>>2]|0;
    $33 = ($32|0)==(0|0);
    do {
     if ($33) {
      $46 = 0;
     } else {
      $34 = (($32) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($32) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35|0)==($37|0);
      if ($38) {
       $39 = HEAP32[$32>>2]|0;
       $40 = (($39) + 36|0);
       $41 = HEAP32[$40>>2]|0;
       __THREW__ = 0;
       $42 = (invoke_ii($41|0,($32|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if ($44) {
        label = 40;
        break L23;
       }
       $45 = ($42|0)==(-1);
       if ($45) {
        HEAP32[$__b>>2] = 0;
        $46 = 0;
        break;
       } else {
        $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
        $46 = $$pre$i$i$i32;
        break;
       }
      } else {
       $46 = $32;
      }
     }
    } while(0);
    $47 = ($46|0)==(0|0);
    $48 = HEAP32[$__e>>2]|0;
    $49 = ($48|0)==(0|0);
    do {
     if ($49) {
      label = 31;
     } else {
      $50 = (($48) + 12|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = (($48) + 16|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = ($51|0)==($53|0);
      if (!($54)) {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
      $55 = HEAP32[$48>>2]|0;
      $56 = (($55) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      __THREW__ = 0;
      $58 = (invoke_ii($57|0,($48|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       label = 40;
       break L23;
      }
      $61 = ($58|0)==(-1);
      if ($61) {
       HEAP32[$__e>>2] = 0;
       label = 31;
       break;
      } else {
       if ($47) {
        $897 = $48;
        break;
       } else {
        $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 315;
        break L23;
       }
      }
     }
    } while(0);
    if ((label|0) == 31) {
     label = 0;
     if ($47) {
      $$lcssa326 = $896;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 315;
      break;
     } else {
      $897 = 0;
     }
    }
    $62 = (($__pat) + ($__p$0)|0);
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    L46: do {
     switch ($64|0) {
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $87 = HEAP32[$__b>>2]|0;
       $88 = (($87) + 12|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = (($87) + 16|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ($89|0)==($91|0);
       if ($92) {
        $93 = HEAP32[$87>>2]|0;
        $94 = (($93) + 36|0);
        $95 = HEAP32[$94>>2]|0;
        __THREW__ = 0;
        $96 = (invoke_ii($95|0,($87|0))|0);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         label = 40;
         break L23;
        } else {
         $$0$i$i42 = $96;
        }
       } else {
        $99 = HEAP8[$89>>0]|0;
        $100 = $99&255;
        $$0$i$i42 = $100;
       }
       $101 = $$0$i$i42&255;
       $isascii1$i = ($101<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 56;
        break L23;
       }
       $sext211 = $$0$i$i42 << 24;
       $102 = $sext211 >> 24;
       $103 = HEAP32[$16>>2]|0;
       $104 = (($103) + ($102<<1)|0);
       $105 = HEAP16[$104>>1]|0;
       $106 = $105 & 8192;
       $107 = ($106<<16>>16)==(0);
       if ($107) {
        label = 56;
        break L23;
       }
       $108 = HEAP32[$__b>>2]|0;
       $109 = (($108) + 12|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($108) + 16|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ($110|0)==($112|0);
       if ($113) {
        $114 = HEAP32[$108>>2]|0;
        $115 = (($114) + 40|0);
        $116 = HEAP32[$115>>2]|0;
        __THREW__ = 0;
        $117 = (invoke_ii($116|0,($108|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         label = 40;
         break L23;
        } else {
         $$0$i$i45 = $117;
        }
       } else {
        $120 = (($110) + 1|0);
        HEAP32[$109>>2] = $120;
        $121 = HEAP8[$110>>0]|0;
        $122 = $121&255;
        $$0$i$i45 = $122;
       }
       $123 = $$0$i$i45&255;
       __THREW__ = 0;
       invoke_vii(372,($__spaces|0),($123|0));
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 40;
        break L23;
       } else {
        label = 58;
       }
      }
      break;
     }
     case 4:  {
      $65 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i147 = $897;$562 = $897;$617 = $896;$__ng$0 = 0;
      L60: while(1) {
       $546 = HEAP32[$__b>>2]|0;
       $547 = ($546|0)==(0|0);
       do {
        if ($547) {
         $560 = 0;
        } else {
         $548 = (($546) + 12|0);
         $549 = HEAP32[$548>>2]|0;
         $550 = (($546) + 16|0);
         $551 = HEAP32[$550>>2]|0;
         $552 = ($549|0)==($551|0);
         if ($552) {
          $553 = HEAP32[$546>>2]|0;
          $554 = (($553) + 36|0);
          $555 = HEAP32[$554>>2]|0;
          __THREW__ = 0;
          $556 = (invoke_ii($555|0,($546|0))|0);
          $557 = __THREW__; __THREW__ = 0;
          $558 = $557&1;
          if ($558) {
           label = 39;
           break L23;
          }
          $559 = ($556|0)==(-1);
          if ($559) {
           HEAP32[$__b>>2] = 0;
           $560 = 0;
           break;
          } else {
           $$pre$i$i$i143 = HEAP32[$__b>>2]|0;
           $560 = $$pre$i$i$i143;
           break;
          }
         } else {
          $560 = $546;
         }
        }
       } while(0);
       $561 = ($560|0)==(0|0);
       $563 = ($562|0)==(0|0);
       do {
        if ($563) {
         $905 = $$pre$i2$i$i147;
         label = 229;
        } else {
         $564 = (($562) + 12|0);
         $565 = HEAP32[$564>>2]|0;
         $566 = (($562) + 16|0);
         $567 = HEAP32[$566>>2]|0;
         $568 = ($565|0)==($567|0);
         if (!($568)) {
          if ($561) {
           $906 = $$pre$i2$i$i147;$907 = $562;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L60;
          }
         }
         $569 = HEAP32[$562>>2]|0;
         $570 = (($569) + 36|0);
         $571 = HEAP32[$570>>2]|0;
         __THREW__ = 0;
         $572 = (invoke_ii($571|0,($562|0))|0);
         $573 = __THREW__; __THREW__ = 0;
         $574 = $573&1;
         if ($574) {
          label = 39;
          break L23;
         }
         $575 = ($572|0)==(-1);
         if ($575) {
          HEAP32[$__e>>2] = 0;
          $905 = 0;
          label = 229;
          break;
         } else {
          $576 = ($$pre$i2$i$i147|0)==(0|0);
          $tmp$i$i149 = $561 ^ $576;
          if ($tmp$i$i149) {
           $906 = $$pre$i2$i$i147;$907 = $$pre$i2$i$i147;
           break;
          } else {
           $$lcssa322 = $617;$$pre$i2$i$i107 = $$pre$i2$i$i147;$__ng$0$lcssa323 = $__ng$0;
           break L60;
          }
         }
        }
       } while(0);
       if ((label|0) == 229) {
        label = 0;
        if ($561) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $905;$__ng$0$lcssa323 = $__ng$0;
         break;
        } else {
         $906 = $905;$907 = 0;
        }
       }
       $577 = HEAP32[$__b>>2]|0;
       $578 = (($577) + 12|0);
       $579 = HEAP32[$578>>2]|0;
       $580 = (($577) + 16|0);
       $581 = HEAP32[$580>>2]|0;
       $582 = ($579|0)==($581|0);
       if ($582) {
        $583 = HEAP32[$577>>2]|0;
        $584 = (($583) + 36|0);
        $585 = HEAP32[$584>>2]|0;
        __THREW__ = 0;
        $586 = (invoke_ii($585|0,($577|0))|0);
        $587 = __THREW__; __THREW__ = 0;
        $588 = $587&1;
        if ($588) {
         label = 39;
         break L23;
        } else {
         $$0$i$i139 = $586;
        }
       } else {
        $589 = HEAP8[$579>>0]|0;
        $590 = $589&255;
        $$0$i$i139 = $590;
       }
       $591 = $$0$i$i139&255;
       $isascii1$i137 = ($591<<24>>24)>(-1);
       if ($isascii1$i137) {
        $sext209 = $$0$i$i139 << 24;
        $592 = $sext209 >> 24;
        $593 = HEAP32[$16>>2]|0;
        $594 = (($593) + ($592<<1)|0);
        $595 = HEAP16[$594>>1]|0;
        $596 = $595 & 2048;
        $597 = ($596<<16>>16)==(0);
        if ($597) {
         label = 240;
        } else {
         $598 = HEAP32[$__wn>>2]|0;
         $599 = HEAP32[$0>>2]|0;
         $600 = ($598|0)==($599|0);
         if ($600) {
          __THREW__ = 0;
          invoke_viii(479,($__wb|0),($__wn|0),($0|0));
          $601 = __THREW__; __THREW__ = 0;
          $602 = $601&1;
          if ($602) {
           label = 39;
           break L23;
          }
          $$pre277 = HEAP32[$__wn>>2]|0;
          $604 = $$pre277;
         } else {
          $604 = $598;
         }
         $603 = (($604) + 1|0);
         HEAP32[$__wn>>2] = $603;
         HEAP8[$604>>0] = $591;
         $605 = (($__ng$0) + 1)|0;
         $908 = $617;$__ng$1 = $605;
        }
       } else {
        label = 240;
       }
       if ((label|0) == 240) {
        label = 0;
        $606 = HEAP8[$__grp>>0]|0;
        $607 = $606 & 1;
        $608 = ($607<<24>>24)==(0);
        if ($608) {
         $610 = $606&255;
         $611 = $610 >>> 1;
         $612 = $611;
        } else {
         $609 = HEAP32[$30>>2]|0;
         $612 = $609;
        }
        $613 = ($612|0)!=(0);
        $614 = ($__ng$0|0)!=(0);
        $or$cond7 = $614 & $613;
        $615 = ($591<<24>>24)==($65<<24>>24);
        $or$cond13 = $or$cond7 & $615;
        if (!($or$cond13)) {
         $$lcssa322 = $617;$$pre$i2$i$i107 = $906;$__ng$0$lcssa323 = $__ng$0;
         break;
        }
        $616 = HEAP32[$__ge>>2]|0;
        $618 = ($617|0)==($616|0);
        if ($618) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $619 = __THREW__; __THREW__ = 0;
         $620 = $619&1;
         if ($620) {
          label = 39;
          break L23;
         }
         $$pre279 = HEAP32[$__gn>>2]|0;
         $622 = $$pre279;
        } else {
         $622 = $617;
        }
        $621 = (($622) + 4|0);
        HEAP32[$__gn>>2] = $621;
        HEAP32[$622>>2] = $__ng$0;
        $908 = $621;$__ng$1 = 0;
       }
       $623 = HEAP32[$__b>>2]|0;
       $624 = (($623) + 12|0);
       $625 = HEAP32[$624>>2]|0;
       $626 = (($623) + 16|0);
       $627 = HEAP32[$626>>2]|0;
       $628 = ($625|0)==($627|0);
       if ($628) {
        $629 = HEAP32[$623>>2]|0;
        $630 = (($629) + 40|0);
        $631 = HEAP32[$630>>2]|0;
        __THREW__ = 0;
        (invoke_ii($631|0,($623|0))|0);
        $632 = __THREW__; __THREW__ = 0;
        $633 = $632&1;
        if ($633) {
         label = 39;
         break L23;
        }
       } else {
        $634 = (($625) + 1|0);
        HEAP32[$624>>2] = $634;
       }
       $$pre$i2$i$i147 = $906;$562 = $907;$617 = $908;$__ng$0 = $__ng$1;
      }
      $635 = HEAP32[$__gb>>2]|0;
      $636 = ($635|0)!=($$lcssa322|0);
      $637 = ($__ng$0$lcssa323|0)!=(0);
      $or$cond9 = $637 & $636;
      if ($or$cond9) {
       $638 = HEAP32[$__ge>>2]|0;
       $639 = ($$lcssa322|0)==($638|0);
       if ($639) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $640 = __THREW__; __THREW__ = 0;
        $641 = $640&1;
        if ($641) {
         label = 40;
         break L23;
        }
        $$pre273 = HEAP32[$__gn>>2]|0;
        $643 = $$pre273;
       } else {
        $643 = $$lcssa322;
       }
       $642 = (($643) + 4|0);
       HEAP32[$__gn>>2] = $642;
       HEAP32[$643>>2] = $__ng$0$lcssa323;
       $909 = $642;
      } else {
       $909 = $$lcssa322;
      }
      $644 = HEAP32[$__fd>>2]|0;
      $645 = ($644|0)>(0);
      if ($645) {
       $646 = HEAP32[$__b>>2]|0;
       $647 = ($646|0)==(0|0);
       do {
        if ($647) {
         $660 = 0;
        } else {
         $648 = (($646) + 12|0);
         $649 = HEAP32[$648>>2]|0;
         $650 = (($646) + 16|0);
         $651 = HEAP32[$650>>2]|0;
         $652 = ($649|0)==($651|0);
         if ($652) {
          $653 = HEAP32[$646>>2]|0;
          $654 = (($653) + 36|0);
          $655 = HEAP32[$654>>2]|0;
          __THREW__ = 0;
          $656 = (invoke_ii($655|0,($646|0))|0);
          $657 = __THREW__; __THREW__ = 0;
          $658 = $657&1;
          if ($658) {
           label = 40;
           break L23;
          }
          $659 = ($656|0)==(-1);
          if ($659) {
           HEAP32[$__b>>2] = 0;
           $660 = 0;
           break;
          } else {
           $$pre$i$i$i103 = HEAP32[$__b>>2]|0;
           $660 = $$pre$i$i$i103;
           break;
          }
         } else {
          $660 = $646;
         }
        }
       } while(0);
       $661 = ($660|0)==(0|0);
       $662 = ($$pre$i2$i$i107|0)==(0|0);
       do {
        if ($662) {
         label = 270;
        } else {
         $663 = (($$pre$i2$i$i107) + 12|0);
         $664 = HEAP32[$663>>2]|0;
         $665 = (($$pre$i2$i$i107) + 16|0);
         $666 = HEAP32[$665>>2]|0;
         $667 = ($664|0)==($666|0);
         if ($667) {
          $668 = HEAP32[$$pre$i2$i$i107>>2]|0;
          $669 = (($668) + 36|0);
          $670 = HEAP32[$669>>2]|0;
          __THREW__ = 0;
          $671 = (invoke_ii($670|0,($$pre$i2$i$i107|0))|0);
          $672 = __THREW__; __THREW__ = 0;
          $673 = $672&1;
          if ($673) {
           label = 40;
           break L23;
          }
          $674 = ($671|0)==(-1);
          if ($674) {
           HEAP32[$__e>>2] = 0;
           label = 270;
           break;
          }
         }
         if ($661) {
          $910 = $$pre$i2$i$i107;
         } else {
          label = 275;
          break L23;
         }
        }
       } while(0);
       if ((label|0) == 270) {
        label = 0;
        if ($661) {
         label = 275;
         break L23;
        } else {
         $910 = 0;
        }
       }
       $675 = HEAP32[$__b>>2]|0;
       $676 = (($675) + 12|0);
       $677 = HEAP32[$676>>2]|0;
       $678 = (($675) + 16|0);
       $679 = HEAP32[$678>>2]|0;
       $680 = ($677|0)==($679|0);
       if ($680) {
        $681 = HEAP32[$675>>2]|0;
        $682 = (($681) + 36|0);
        $683 = HEAP32[$682>>2]|0;
        __THREW__ = 0;
        $684 = (invoke_ii($683|0,($675|0))|0);
        $685 = __THREW__; __THREW__ = 0;
        $686 = $685&1;
        if ($686) {
         label = 40;
         break L23;
        } else {
         $$0$i$i96 = $684;
        }
       } else {
        $687 = HEAP8[$677>>0]|0;
        $688 = $687&255;
        $$0$i$i96 = $688;
       }
       $689 = $$0$i$i96&255;
       $690 = HEAP8[$__dp>>0]|0;
       $691 = ($689<<24>>24)==($690<<24>>24);
       if (!($691)) {
        label = 275;
        break L23;
       }
       $694 = HEAP32[$__b>>2]|0;
       $695 = (($694) + 12|0);
       $696 = HEAP32[$695>>2]|0;
       $697 = (($694) + 16|0);
       $698 = HEAP32[$697>>2]|0;
       $699 = ($696|0)==($698|0);
       if ($699) {
        $700 = HEAP32[$694>>2]|0;
        $701 = (($700) + 40|0);
        $702 = HEAP32[$701>>2]|0;
        __THREW__ = 0;
        (invoke_ii($702|0,($694|0))|0);
        $703 = __THREW__; __THREW__ = 0;
        $704 = $703&1;
        if ($704) {
         label = 40;
         break L23;
        }
       } else {
        $705 = (($696) + 1|0);
        HEAP32[$695>>2] = $705;
       }
       $$pre$i2$i$i83 = $910;$706 = $644;$724 = $910;
       while(1) {
        $707 = ($706|0)>(0);
        if (!($707)) {
         break;
        }
        $708 = HEAP32[$__b>>2]|0;
        $709 = ($708|0)==(0|0);
        do {
         if ($709) {
          $722 = 0;
         } else {
          $710 = (($708) + 12|0);
          $711 = HEAP32[$710>>2]|0;
          $712 = (($708) + 16|0);
          $713 = HEAP32[$712>>2]|0;
          $714 = ($711|0)==($713|0);
          if ($714) {
           $715 = HEAP32[$708>>2]|0;
           $716 = (($715) + 36|0);
           $717 = HEAP32[$716>>2]|0;
           __THREW__ = 0;
           $718 = (invoke_ii($717|0,($708|0))|0);
           $719 = __THREW__; __THREW__ = 0;
           $720 = $719&1;
           if ($720) {
            label = 38;
            break L23;
           }
           $721 = ($718|0)==(-1);
           if ($721) {
            HEAP32[$__b>>2] = 0;
            $722 = 0;
            break;
           } else {
            $$pre$i$i$i79 = HEAP32[$__b>>2]|0;
            $722 = $$pre$i$i$i79;
            break;
           }
          } else {
           $722 = $708;
          }
         }
        } while(0);
        $723 = ($722|0)==(0|0);
        $725 = ($724|0)==(0|0);
        do {
         if ($725) {
          $$pre$i2$i$i83274$ph = $$pre$i2$i$i83;
          label = 293;
         } else {
          $726 = (($724) + 12|0);
          $727 = HEAP32[$726>>2]|0;
          $728 = (($724) + 16|0);
          $729 = HEAP32[$728>>2]|0;
          $730 = ($727|0)==($729|0);
          if (!($730)) {
           if ($723) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $724;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
          $731 = HEAP32[$724>>2]|0;
          $732 = (($731) + 36|0);
          $733 = HEAP32[$732>>2]|0;
          __THREW__ = 0;
          $734 = (invoke_ii($733|0,($724|0))|0);
          $735 = __THREW__; __THREW__ = 0;
          $736 = $735&1;
          if ($736) {
           label = 38;
           break L23;
          }
          $737 = ($734|0)==(-1);
          if ($737) {
           HEAP32[$__e>>2] = 0;
           $$pre$i2$i$i83274$ph = 0;
           label = 293;
           break;
          } else {
           $738 = ($$pre$i2$i$i83|0)==(0|0);
           $tmp$i$i85 = $723 ^ $738;
           if ($tmp$i$i85) {
            $$pre$i2$i$i83274287 = $$pre$i2$i$i83;$911 = $$pre$i2$i$i83;
            break;
           } else {
            label = 300;
            break L23;
           }
          }
         }
        } while(0);
        if ((label|0) == 293) {
         label = 0;
         if ($723) {
          label = 300;
          break L23;
         } else {
          $$pre$i2$i$i83274287 = $$pre$i2$i$i83274$ph;$911 = 0;
         }
        }
        $739 = HEAP32[$__b>>2]|0;
        $740 = (($739) + 12|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = (($739) + 16|0);
        $743 = HEAP32[$742>>2]|0;
        $744 = ($741|0)==($743|0);
        if ($744) {
         $745 = HEAP32[$739>>2]|0;
         $746 = (($745) + 36|0);
         $747 = HEAP32[$746>>2]|0;
         __THREW__ = 0;
         $748 = (invoke_ii($747|0,($739|0))|0);
         $749 = __THREW__; __THREW__ = 0;
         $750 = $749&1;
         if ($750) {
          label = 38;
          break L23;
         } else {
          $$0$i$i74 = $748;
         }
        } else {
         $751 = HEAP8[$741>>0]|0;
         $752 = $751&255;
         $$0$i$i74 = $752;
        }
        $753 = $$0$i$i74&255;
        $isascii1$i72 = ($753<<24>>24)>(-1);
        if (!($isascii1$i72)) {
         label = 300;
         break L23;
        }
        $sext = $$0$i$i74 << 24;
        $754 = $sext >> 24;
        $755 = HEAP32[$16>>2]|0;
        $756 = (($755) + ($754<<1)|0);
        $757 = HEAP16[$756>>1]|0;
        $758 = $757 & 2048;
        $759 = ($758<<16>>16)==(0);
        if ($759) {
         label = 300;
         break L23;
        }
        $762 = HEAP32[$__wn>>2]|0;
        $763 = HEAP32[$0>>2]|0;
        $764 = ($762|0)==($763|0);
        if ($764) {
         __THREW__ = 0;
         invoke_viii(479,($__wb|0),($__wn|0),($0|0));
         $765 = __THREW__; __THREW__ = 0;
         $766 = $765&1;
         if ($766) {
          label = 38;
          break L23;
         }
        }
        $767 = HEAP32[$__b>>2]|0;
        $768 = (($767) + 12|0);
        $769 = HEAP32[$768>>2]|0;
        $770 = (($767) + 16|0);
        $771 = HEAP32[$770>>2]|0;
        $772 = ($769|0)==($771|0);
        if ($772) {
         $773 = HEAP32[$767>>2]|0;
         $774 = (($773) + 36|0);
         $775 = HEAP32[$774>>2]|0;
         __THREW__ = 0;
         $776 = (invoke_ii($775|0,($767|0))|0);
         $777 = __THREW__; __THREW__ = 0;
         $778 = $777&1;
         if ($778) {
          label = 38;
          break L23;
         } else {
          $$0$i$i67 = $776;
         }
        } else {
         $779 = HEAP8[$769>>0]|0;
         $780 = $779&255;
         $$0$i$i67 = $780;
        }
        $781 = $$0$i$i67&255;
        $782 = HEAP32[$__wn>>2]|0;
        $783 = (($782) + 1|0);
        HEAP32[$__wn>>2] = $783;
        HEAP8[$782>>0] = $781;
        $784 = (($706) + -1)|0;
        HEAP32[$__fd>>2] = $784;
        $785 = HEAP32[$__b>>2]|0;
        $786 = (($785) + 12|0);
        $787 = HEAP32[$786>>2]|0;
        $788 = (($785) + 16|0);
        $789 = HEAP32[$788>>2]|0;
        $790 = ($787|0)==($789|0);
        if ($790) {
         $791 = HEAP32[$785>>2]|0;
         $792 = (($791) + 40|0);
         $793 = HEAP32[$792>>2]|0;
         __THREW__ = 0;
         (invoke_ii($793|0,($785|0))|0);
         $794 = __THREW__; __THREW__ = 0;
         $795 = $794&1;
         if ($795) {
          label = 38;
          break L23;
         }
        } else {
         $796 = (($787) + 1|0);
         HEAP32[$786>>2] = $796;
        }
        $$pre$i2$i$i83 = $$pre$i2$i$i83274287;$706 = $784;$724 = $911;
       }
      }
      $797 = HEAP32[$__wn>>2]|0;
      $798 = HEAP32[$__wb>>2]|0;
      $799 = ($797|0)==($798|0);
      if ($799) {
       label = 312;
       break L23;
      } else {
       $898 = $909;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 3:  {
      $199 = HEAP16[$__psn>>1]|0;
      $200 = $199&255;
      $201 = $200 & 1;
      $202 = ($201<<24>>24)==(0);
      $203 = ($199&65535) >>> 8;
      $204 = $203&255;
      if ($202) {
       $$mask283 = $199 & 254;
       $206 = $$mask283&65535;
       $207 = $206 >>> 1;
       $219 = $207;
      } else {
       $205 = HEAP32[$19>>2]|0;
       $219 = $205;
      }
      $208 = HEAP16[$__nsn>>1]|0;
      $209 = $208&255;
      $210 = $209 & 1;
      $211 = ($210<<24>>24)==(0);
      $212 = ($208&65535) >>> 8;
      $213 = $212&255;
      if ($211) {
       $$mask282 = $208 & 254;
       $215 = $$mask282&65535;
       $216 = $215 >>> 1;
       $218 = $216;
      } else {
       $214 = HEAP32[$17>>2]|0;
       $218 = $214;
      }
      $217 = (0 - ($218))|0;
      $220 = ($219|0)==($217|0);
      if ($220) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($202) {
        $$mask281 = $199 & 254;
        $222 = $$mask281&65535;
        $223 = $222 >>> 1;
        $224 = $223;
       } else {
        $221 = HEAP32[$19>>2]|0;
        $224 = $221;
       }
       $225 = ($224|0)==(0);
       if (!($225)) {
        if ($211) {
         $$mask280 = $208 & 254;
         $227 = $$mask280&65535;
         $228 = $227 >>> 1;
         $229 = $228;
        } else {
         $226 = HEAP32[$17>>2]|0;
         $229 = $226;
        }
        $230 = ($229|0)==(0);
        if (!($230)) {
         $318 = HEAP32[$__b>>2]|0;
         $319 = (($318) + 12|0);
         $320 = HEAP32[$319>>2]|0;
         $321 = (($318) + 16|0);
         $322 = HEAP32[$321>>2]|0;
         $323 = ($320|0)==($322|0);
         if ($323) {
          $324 = HEAP32[$318>>2]|0;
          $325 = (($324) + 36|0);
          $326 = HEAP32[$325>>2]|0;
          __THREW__ = 0;
          $327 = (invoke_ii($326|0,($318|0))|0);
          $328 = __THREW__; __THREW__ = 0;
          $329 = $328&1;
          if ($329) {
           label = 40;
           break L23;
          }
          $$pre265 = HEAP16[$__psn>>1]|0;
          $330 = $$pre265&255;
          $331 = ($$pre265&65535) >>> 8;
          $332 = $331&255;
          $$0$i$i120 = $327;$337 = $330;$902 = $332;
         } else {
          $333 = HEAP8[$320>>0]|0;
          $334 = $333&255;
          $$0$i$i120 = $334;$337 = $200;$902 = $204;
         }
         $335 = $$0$i$i120&255;
         $336 = $337 & 1;
         $338 = ($336<<24>>24)==(0);
         if ($338) {
          $341 = $902;
         } else {
          $339 = HEAP32[$20>>2]|0;
          $$pre266 = HEAP8[$339>>0]|0;
          $341 = $$pre266;
         }
         $340 = ($335<<24>>24)==($341<<24>>24);
         $342 = HEAP32[$__b>>2]|0;
         $343 = (($342) + 12|0);
         $344 = HEAP32[$343>>2]|0;
         $345 = (($342) + 16|0);
         $346 = HEAP32[$345>>2]|0;
         $347 = ($344|0)==($346|0);
         if ($340) {
          if ($347) {
           $348 = HEAP32[$342>>2]|0;
           $349 = (($348) + 40|0);
           $350 = HEAP32[$349>>2]|0;
           __THREW__ = 0;
           (invoke_ii($350|0,($342|0))|0);
           $351 = __THREW__; __THREW__ = 0;
           $352 = $351&1;
           if ($352) {
            label = 40;
            break L23;
           }
          } else {
           $353 = (($344) + 1|0);
           HEAP32[$343>>2] = $353;
          }
          $354 = HEAP8[$__psn>>0]|0;
          $355 = $354 & 1;
          $356 = ($355<<24>>24)==(0);
          if ($356) {
           $358 = $354&255;
           $359 = $358 >>> 1;
           $360 = $359;
          } else {
           $357 = HEAP32[$19>>2]|0;
           $360 = $357;
          }
          $361 = ($360>>>0)>(1);
          $__psn$__trailing_sign$010 = $361 ? $__psn : $__trailing_sign$0;
          $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L46;
         }
         if ($347) {
          $362 = HEAP32[$342>>2]|0;
          $363 = (($362) + 36|0);
          $364 = HEAP32[$363>>2]|0;
          __THREW__ = 0;
          $365 = (invoke_ii($364|0,($342|0))|0);
          $366 = __THREW__; __THREW__ = 0;
          $367 = $366&1;
          if ($367) {
           label = 40;
           break L23;
          } else {
           $$0$i$i129 = $365;
          }
         } else {
          $368 = HEAP8[$344>>0]|0;
          $369 = $368&255;
          $$0$i$i129 = $369;
         }
         $370 = $$0$i$i129&255;
         $371 = HEAP16[$__nsn>>1]|0;
         $372 = $371 & 1;
         $373 = ($372<<16>>16)==(0);
         if ($373) {
          $375 = ($371&65535) >>> 8;
          $376 = $375&255;
          $378 = $376;
         } else {
          $374 = HEAP32[$18>>2]|0;
          $$pre267 = HEAP8[$374>>0]|0;
          $378 = $$pre267;
         }
         $377 = ($370<<24>>24)==($378<<24>>24);
         if (!($377)) {
          label = 158;
          break L23;
         }
         $379 = HEAP32[$__b>>2]|0;
         $380 = (($379) + 12|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (($379) + 16|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = ($381|0)==($383|0);
         if ($384) {
          $385 = HEAP32[$379>>2]|0;
          $386 = (($385) + 40|0);
          $387 = HEAP32[$386>>2]|0;
          __THREW__ = 0;
          (invoke_ii($387|0,($379|0))|0);
          $388 = __THREW__; __THREW__ = 0;
          $389 = $388&1;
          if ($389) {
           label = 40;
           break L23;
          }
         } else {
          $390 = (($381) + 1|0);
          HEAP32[$380>>2] = $390;
         }
         HEAP8[$__neg>>0] = 1;
         $391 = HEAP8[$__nsn>>0]|0;
         $392 = $391 & 1;
         $393 = ($392<<24>>24)==(0);
         if ($393) {
          $395 = $391&255;
          $396 = $395 >>> 1;
          $397 = $396;
         } else {
          $394 = HEAP32[$17>>2]|0;
          $397 = $394;
         }
         $398 = ($397>>>0)>(1);
         $__nsn$__trailing_sign$011 = $398 ? $__nsn : $__trailing_sign$0;
         $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L46;
        }
       }
       if ($202) {
        $$mask = $199 & 254;
        $232 = $$mask&65535;
        $233 = $232 >>> 1;
        $234 = $233;
       } else {
        $231 = HEAP32[$19>>2]|0;
        $234 = $231;
       }
       $235 = ($234|0)==(0);
       $236 = HEAP32[$__b>>2]|0;
       $237 = (($236) + 12|0);
       $238 = HEAP32[$237>>2]|0;
       $239 = (($236) + 16|0);
       $240 = HEAP32[$239>>2]|0;
       $241 = ($238|0)==($240|0);
       if ($235) {
        if ($241) {
         $280 = HEAP32[$236>>2]|0;
         $281 = (($280) + 36|0);
         $282 = HEAP32[$281>>2]|0;
         __THREW__ = 0;
         $283 = (invoke_ii($282|0,($236|0))|0);
         $284 = __THREW__; __THREW__ = 0;
         $285 = $284&1;
         if ($285) {
          label = 40;
          break L23;
         }
         $$pre = HEAP16[$__nsn>>1]|0;
         $286 = $$pre&255;
         $287 = ($$pre&65535) >>> 8;
         $288 = $287&255;
         $$0$i$i113 = $283;$293 = $286;$901 = $288;
        } else {
         $289 = HEAP8[$238>>0]|0;
         $290 = $289&255;
         $$0$i$i113 = $290;$293 = $209;$901 = $213;
        }
        $291 = $$0$i$i113&255;
        $292 = $293 & 1;
        $294 = ($292<<24>>24)==(0);
        if ($294) {
         $297 = $901;
        } else {
         $295 = HEAP32[$18>>2]|0;
         $$pre260 = HEAP8[$295>>0]|0;
         $297 = $$pre260;
        }
        $296 = ($291<<24>>24)==($297<<24>>24);
        if (!($296)) {
         $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
         break L46;
        }
        $298 = HEAP32[$__b>>2]|0;
        $299 = (($298) + 12|0);
        $300 = HEAP32[$299>>2]|0;
        $301 = (($298) + 16|0);
        $302 = HEAP32[$301>>2]|0;
        $303 = ($300|0)==($302|0);
        if ($303) {
         $304 = HEAP32[$298>>2]|0;
         $305 = (($304) + 40|0);
         $306 = HEAP32[$305>>2]|0;
         __THREW__ = 0;
         (invoke_ii($306|0,($298|0))|0);
         $307 = __THREW__; __THREW__ = 0;
         $308 = $307&1;
         if ($308) {
          label = 40;
          break L23;
         }
        } else {
         $309 = (($300) + 1|0);
         HEAP32[$299>>2] = $309;
        }
        HEAP8[$__neg>>0] = 1;
        $310 = HEAP8[$__nsn>>0]|0;
        $311 = $310 & 1;
        $312 = ($311<<24>>24)==(0);
        if ($312) {
         $314 = $310&255;
         $315 = $314 >>> 1;
         $316 = $315;
        } else {
         $313 = HEAP32[$17>>2]|0;
         $316 = $313;
        }
        $317 = ($316>>>0)>(1);
        $__nsn$__trailing_sign$0 = $317 ? $__nsn : $__trailing_sign$0;
        $898 = $896;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L46;
       }
       if ($241) {
        $242 = HEAP32[$236>>2]|0;
        $243 = (($242) + 36|0);
        $244 = HEAP32[$243>>2]|0;
        __THREW__ = 0;
        $245 = (invoke_ii($244|0,($236|0))|0);
        $246 = __THREW__; __THREW__ = 0;
        $247 = $246&1;
        if ($247) {
         label = 40;
         break L23;
        }
        $$pre262 = HEAP16[$__psn>>1]|0;
        $248 = $$pre262&255;
        $249 = ($$pre262&65535) >>> 8;
        $250 = $249&255;
        $$0$i$i93 = $245;$255 = $248;$900 = $250;
       } else {
        $251 = HEAP8[$238>>0]|0;
        $252 = $251&255;
        $$0$i$i93 = $252;$255 = $200;$900 = $204;
       }
       $253 = $$0$i$i93&255;
       $254 = $255 & 1;
       $256 = ($254<<24>>24)==(0);
       if ($256) {
        $259 = $900;
       } else {
        $257 = HEAP32[$20>>2]|0;
        $$pre263 = HEAP8[$257>>0]|0;
        $259 = $$pre263;
       }
       $258 = ($253<<24>>24)==($259<<24>>24);
       if (!($258)) {
        HEAP8[$__neg>>0] = 1;
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
        break L46;
       }
       $260 = HEAP32[$__b>>2]|0;
       $261 = (($260) + 12|0);
       $262 = HEAP32[$261>>2]|0;
       $263 = (($260) + 16|0);
       $264 = HEAP32[$263>>2]|0;
       $265 = ($262|0)==($264|0);
       if ($265) {
        $266 = HEAP32[$260>>2]|0;
        $267 = (($266) + 40|0);
        $268 = HEAP32[$267>>2]|0;
        __THREW__ = 0;
        (invoke_ii($268|0,($260|0))|0);
        $269 = __THREW__; __THREW__ = 0;
        $270 = $269&1;
        if ($270) {
         label = 40;
         break L23;
        }
       } else {
        $271 = (($262) + 1|0);
        HEAP32[$261>>2] = $271;
       }
       $272 = HEAP8[$__psn>>0]|0;
       $273 = $272 & 1;
       $274 = ($273<<24>>24)==(0);
       if ($274) {
        $276 = $272&255;
        $277 = $276 >>> 1;
        $278 = $277;
       } else {
        $275 = HEAP32[$19>>2]|0;
        $278 = $275;
       }
       $279 = ($278>>>0)>(1);
       $__psn$__trailing_sign$0 = $279 ? $__psn : $__trailing_sign$0;
       $898 = $896;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     case 0:  {
      $128 = ($__p$0|0)==(3);
      if ($128) {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 58;
      }
      break;
     }
     case 2:  {
      $401 = ($__trailing_sign$0|0)!=(0|0);
      $402 = ($__p$0>>>0)<(2);
      $or$cond = $402 | $401;
      if (!($or$cond)) {
       $403 = ($__p$0|0)==(2);
       if ($403) {
        $404 = HEAP8[$29>>0]|0;
        $405 = ($404<<24>>24)!=(0);
        $406 = $405;
       } else {
        $406 = 0;
       }
       $brmerge = $22 | $406;
       if (!($brmerge)) {
        $898 = $896;$__trailing_sign$1 = 0;
        break L46;
       }
      }
      $407 = HEAP8[$__sym>>0]|0;
      $408 = $407 & 1;
      $409 = ($408<<24>>24)==(0);
      $410 = HEAP32[$24>>2]|0;
      $$ = $409 ? $23 : $410;
      $411 = ($__p$0|0)==(0);
      L297: do {
       if ($411) {
        $$ph = $$;
       } else {
        $412 = (($__p$0) + -1)|0;
        $413 = (($__pat) + ($412)|0);
        $414 = HEAP8[$413>>0]|0;
        $switch = ($414&255)<(2);
        if ($switch) {
         $415 = $407&255;
         $416 = $415 >>> 1;
         $417 = HEAP32[$16>>2]|0;
         $418 = HEAP32[$24>>2]|0;
         $419 = HEAP32[$25>>2]|0;
         $421 = $$;
         while(1) {
          $$290 = $409 ? $23 : $418;
          $$291 = $409 ? $416 : $419;
          $420 = (($$290) + ($$291)|0);
          $422 = ($421|0)==($420|0);
          if ($422) {
           $$lcssa = $421;
           break;
          }
          $423 = HEAP8[$421>>0]|0;
          $isascii1$i170 = ($423<<24>>24)>(-1);
          if (!($isascii1$i170)) {
           $$lcssa = $421;
           break;
          }
          $424 = $423 << 24 >> 24;
          $425 = (($417) + ($424<<1)|0);
          $426 = HEAP16[$425>>1]|0;
          $427 = $426 & 8192;
          $428 = ($427<<16>>16)==(0);
          if ($428) {
           $$lcssa = $421;
           break;
          }
          $429 = (($421) + 1|0);
          $421 = $429;
         }
         $$292 = $409 ? $23 : $418;
         $430 = $$lcssa;
         $431 = $$292;
         $432 = (($430) - ($431))|0;
         $433 = HEAP8[$__spaces>>0]|0;
         $434 = $433 & 1;
         $435 = ($434<<24>>24)==(0);
         if ($435) {
          $437 = $433&255;
          $438 = $437 >>> 1;
          $440 = $438;
         } else {
          $436 = HEAP32[$28>>2]|0;
          $440 = $436;
         }
         $439 = ($432>>>0)>($440>>>0);
         do {
          if (!($439)) {
           if ($435) {
            $444 = $433&255;
            $445 = $444 >>> 1;
            $$sum284 = (($445) - ($432))|0;
            $446 = ((($__spaces) + ($$sum284)|0) + 1|0);
            $447 = $433&255;
            $448 = $447 >>> 1;
            $450 = $26;$451 = $448;$903 = $446;
           } else {
            $441 = HEAP32[$27>>2]|0;
            $442 = HEAP32[$28>>2]|0;
            $$sum = (($442) - ($432))|0;
            $443 = (($441) + ($$sum)|0);
            $450 = $441;$451 = $442;$903 = $443;
           }
           $449 = (($450) + ($451)|0);
           $$293 = $409 ? $23 : $418;
           $452 = $903;$456 = $$293;
           while(1) {
            $453 = ($452|0)==($449|0);
            if ($453) {
             label = 183;
             break;
            }
            $454 = HEAP8[$452>>0]|0;
            $455 = HEAP8[$456>>0]|0;
            $457 = ($454<<24>>24)==($455<<24>>24);
            if (!($457)) {
             label = 181;
             break;
            }
            $458 = (($452) + 1|0);
            $459 = (($456) + 1|0);
            $452 = $458;$456 = $459;
           }
           if ((label|0) == 181) {
            label = 0;
            break;
           }
           else if ((label|0) == 183) {
            label = 0;
            $$ph = $$lcssa;
            break L297;
           }
          }
         } while(0);
         $$294 = $409 ? $23 : $418;
         $$ph = $$294;
        } else {
         $$ph = $$;
        }
       }
      } while(0);
      $$pre$i2$i$i164 = $897;$461 = $407;$470 = $$ph;$488 = $897;
      L325: while(1) {
       $460 = $461 & 1;
       $462 = ($460<<24>>24)==(0);
       if ($462) {
        $465 = $461&255;
        $466 = $465 >>> 1;
        $468 = $23;$469 = $466;
       } else {
        $463 = HEAP32[$24>>2]|0;
        $464 = HEAP32[$25>>2]|0;
        $468 = $463;$469 = $464;
       }
       $467 = (($468) + ($469)|0);
       $471 = ($470|0)==($467|0);
       if ($471) {
        $$lcssa324 = $470;
        break;
       }
       $472 = HEAP32[$__b>>2]|0;
       $473 = ($472|0)==(0|0);
       do {
        if ($473) {
         $486 = 0;
        } else {
         $474 = (($472) + 12|0);
         $475 = HEAP32[$474>>2]|0;
         $476 = (($472) + 16|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = ($475|0)==($477|0);
         if ($478) {
          $479 = HEAP32[$472>>2]|0;
          $480 = (($479) + 36|0);
          $481 = HEAP32[$480>>2]|0;
          __THREW__ = 0;
          $482 = (invoke_ii($481|0,($472|0))|0);
          $483 = __THREW__; __THREW__ = 0;
          $484 = $483&1;
          if ($484) {
           label = 37;
           break L23;
          }
          $485 = ($482|0)==(-1);
          if ($485) {
           HEAP32[$__b>>2] = 0;
           $486 = 0;
           break;
          } else {
           $$pre$i$i$i160 = HEAP32[$__b>>2]|0;
           $486 = $$pre$i$i$i160;
           break;
          }
         } else {
          $486 = $472;
         }
        }
       } while(0);
       $487 = ($486|0)==(0|0);
       $489 = ($488|0)==(0|0);
       do {
        if ($489) {
         $$pre$i2$i$i164270 = $$pre$i2$i$i164;
         label = 201;
        } else {
         $490 = (($488) + 12|0);
         $491 = HEAP32[$490>>2]|0;
         $492 = (($488) + 16|0);
         $493 = HEAP32[$492>>2]|0;
         $494 = ($491|0)==($493|0);
         if (!($494)) {
          if ($487) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $488;
           break;
          } else {
           $$lcssa324 = $470;
           break L325;
          }
         }
         $495 = HEAP32[$488>>2]|0;
         $496 = (($495) + 36|0);
         $497 = HEAP32[$496>>2]|0;
         __THREW__ = 0;
         $498 = (invoke_ii($497|0,($488|0))|0);
         $499 = __THREW__; __THREW__ = 0;
         $500 = $499&1;
         if ($500) {
          label = 37;
          break L23;
         }
         $501 = ($498|0)==(-1);
         if ($501) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i164270 = 0;
          label = 201;
          break;
         } else {
          $502 = ($$pre$i2$i$i164|0)==(0|0);
          $tmp$i$i166 = $487 ^ $502;
          if ($tmp$i$i166) {
           $$pre$i2$i$i164269 = $$pre$i2$i$i164;$904 = $$pre$i2$i$i164;
           break;
          } else {
           $$lcssa324 = $470;
           break L325;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($487) {
         $$lcssa324 = $470;
         break;
        } else {
         $$pre$i2$i$i164269 = $$pre$i2$i$i164270;$904 = 0;
        }
       }
       $503 = HEAP32[$__b>>2]|0;
       $504 = (($503) + 12|0);
       $505 = HEAP32[$504>>2]|0;
       $506 = (($503) + 16|0);
       $507 = HEAP32[$506>>2]|0;
       $508 = ($505|0)==($507|0);
       if ($508) {
        $509 = HEAP32[$503>>2]|0;
        $510 = (($509) + 36|0);
        $511 = HEAP32[$510>>2]|0;
        __THREW__ = 0;
        $512 = (invoke_ii($511|0,($503|0))|0);
        $513 = __THREW__; __THREW__ = 0;
        $514 = $513&1;
        if ($514) {
         label = 37;
         break L23;
        } else {
         $$0$i$i156 = $512;
        }
       } else {
        $515 = HEAP8[$505>>0]|0;
        $516 = $515&255;
        $$0$i$i156 = $516;
       }
       $517 = $$0$i$i156&255;
       $518 = HEAP8[$470>>0]|0;
       $519 = ($517<<24>>24)==($518<<24>>24);
       if (!($519)) {
        $$lcssa324 = $470;
        break;
       }
       $520 = HEAP32[$__b>>2]|0;
       $521 = (($520) + 12|0);
       $522 = HEAP32[$521>>2]|0;
       $523 = (($520) + 16|0);
       $524 = HEAP32[$523>>2]|0;
       $525 = ($522|0)==($524|0);
       if ($525) {
        $526 = HEAP32[$520>>2]|0;
        $527 = (($526) + 40|0);
        $528 = HEAP32[$527>>2]|0;
        __THREW__ = 0;
        (invoke_ii($528|0,($520|0))|0);
        $529 = __THREW__; __THREW__ = 0;
        $530 = $529&1;
        if ($530) {
         label = 37;
         break L23;
        }
       } else {
        $531 = (($522) + 1|0);
        HEAP32[$521>>2] = $531;
       }
       $532 = (($470) + 1|0);
       $$pre268 = HEAP8[$__sym>>0]|0;
       $$pre$i2$i$i164 = $$pre$i2$i$i164269;$461 = $$pre268;$470 = $532;$488 = $904;
      }
      if ($22) {
       $533 = HEAP8[$__sym>>0]|0;
       $534 = $533 & 1;
       $535 = ($534<<24>>24)==(0);
       if ($535) {
        $538 = $533&255;
        $539 = $538 >>> 1;
        $541 = $23;$542 = $539;
       } else {
        $536 = HEAP32[$24>>2]|0;
        $537 = HEAP32[$25>>2]|0;
        $541 = $536;$542 = $537;
       }
       $540 = (($541) + ($542)|0);
       $543 = ($$lcssa324|0)==($540|0);
       if ($543) {
        $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L23;
       }
      } else {
       $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     default: {
      $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 58) {
     label = 0;
     $$pre$i2$i$i52 = $897;$145 = $897;
     L369: while(1) {
      $129 = HEAP32[$__b>>2]|0;
      $130 = ($129|0)==(0|0);
      do {
       if ($130) {
        $143 = 0;
       } else {
        $131 = (($129) + 12|0);
        $132 = HEAP32[$131>>2]|0;
        $133 = (($129) + 16|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = ($132|0)==($134|0);
        if ($135) {
         $136 = HEAP32[$129>>2]|0;
         $137 = (($136) + 36|0);
         $138 = HEAP32[$137>>2]|0;
         __THREW__ = 0;
         $139 = (invoke_ii($138|0,($129|0))|0);
         $140 = __THREW__; __THREW__ = 0;
         $141 = $140&1;
         if ($141) {
          label = 36;
          break L23;
         }
         $142 = ($139|0)==(-1);
         if ($142) {
          HEAP32[$__b>>2] = 0;
          $143 = 0;
          break;
         } else {
          $$pre$i$i$i48 = HEAP32[$__b>>2]|0;
          $143 = $$pre$i$i$i48;
          break;
         }
        } else {
         $143 = $129;
        }
       }
      } while(0);
      $144 = ($143|0)==(0|0);
      $146 = ($145|0)==(0|0);
      do {
       if ($146) {
        $$pre$i2$i$i52256 = $$pre$i2$i$i52;
        label = 71;
       } else {
        $147 = (($145) + 12|0);
        $148 = HEAP32[$147>>2]|0;
        $149 = (($145) + 16|0);
        $150 = HEAP32[$149>>2]|0;
        $151 = ($148|0)==($150|0);
        if (!($151)) {
         if ($144) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $145;
          break;
         } else {
          break L369;
         }
        }
        $152 = HEAP32[$145>>2]|0;
        $153 = (($152) + 36|0);
        $154 = HEAP32[$153>>2]|0;
        __THREW__ = 0;
        $155 = (invoke_ii($154|0,($145|0))|0);
        $156 = __THREW__; __THREW__ = 0;
        $157 = $156&1;
        if ($157) {
         label = 36;
         break L23;
        }
        $158 = ($155|0)==(-1);
        if ($158) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i52256 = 0;
         label = 71;
         break;
        } else {
         $159 = ($$pre$i2$i$i52|0)==(0|0);
         $tmp$i$i54 = $144 ^ $159;
         if ($tmp$i$i54) {
          $$pre$i2$i$i52258 = $$pre$i2$i$i52;$899 = $$pre$i2$i$i52;
          break;
         } else {
          break L369;
         }
        }
       }
      } while(0);
      if ((label|0) == 71) {
       label = 0;
       if ($144) {
        break;
       } else {
        $$pre$i2$i$i52258 = $$pre$i2$i$i52256;$899 = 0;
       }
      }
      $160 = HEAP32[$__b>>2]|0;
      $161 = (($160) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = (($160) + 16|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($162|0)==($164|0);
      if ($165) {
       $166 = HEAP32[$160>>2]|0;
       $167 = (($166) + 36|0);
       $168 = HEAP32[$167>>2]|0;
       __THREW__ = 0;
       $169 = (invoke_ii($168|0,($160|0))|0);
       $170 = __THREW__; __THREW__ = 0;
       $171 = $170&1;
       if ($171) {
        label = 36;
        break L23;
       } else {
        $$0$i$i58 = $169;
       }
      } else {
       $172 = HEAP8[$162>>0]|0;
       $173 = $172&255;
       $$0$i$i58 = $173;
      }
      $174 = $$0$i$i58&255;
      $isascii1$i61 = ($174<<24>>24)>(-1);
      if (!($isascii1$i61)) {
       break;
      }
      $sext210 = $$0$i$i58 << 24;
      $175 = $sext210 >> 24;
      $176 = HEAP32[$16>>2]|0;
      $177 = (($176) + ($175<<1)|0);
      $178 = HEAP16[$177>>1]|0;
      $179 = $178 & 8192;
      $180 = ($179<<16>>16)==(0);
      if ($180) {
       break;
      }
      $181 = HEAP32[$__b>>2]|0;
      $182 = (($181) + 12|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = (($181) + 16|0);
      $185 = HEAP32[$184>>2]|0;
      $186 = ($183|0)==($185|0);
      if ($186) {
       $187 = HEAP32[$181>>2]|0;
       $188 = (($187) + 40|0);
       $189 = HEAP32[$188>>2]|0;
       __THREW__ = 0;
       $190 = (invoke_ii($189|0,($181|0))|0);
       $191 = __THREW__; __THREW__ = 0;
       $192 = $191&1;
       if ($192) {
        label = 36;
        break L23;
       } else {
        $$0$i$i64 = $190;
       }
      } else {
       $193 = (($183) + 1|0);
       HEAP32[$182>>2] = $193;
       $194 = HEAP8[$183>>0]|0;
       $195 = $194&255;
       $$0$i$i64 = $195;
      }
      $196 = $$0$i$i64&255;
      __THREW__ = 0;
      invoke_vii(372,($__spaces|0),($196|0));
      $197 = __THREW__; __THREW__ = 0;
      $198 = $197&1;
      if ($198) {
       label = 36;
       break L23;
      } else {
       $$pre$i2$i$i52 = $$pre$i2$i$i52258;$145 = $899;
      }
     }
     $898 = $896;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $802 = (($__p$0) + 1)|0;
    $896 = $898;$__p$0 = $802;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L403:    switch (label|0) {
    case 36: {
     $68 = ___cxa_find_matching_catch()|0;
     $69 = tempRet0;
     $lpad$phi$index = $68;$lpad$phi$index7 = $69;
     break L21;
     break;
    }
    case 37: {
     $70 = ___cxa_find_matching_catch()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index7 = $71;
     break L21;
     break;
    }
    case 38: {
     $72 = ___cxa_find_matching_catch()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index7 = $73;
     break L21;
     break;
    }
    case 39: {
     $74 = ___cxa_find_matching_catch()|0;
     $75 = tempRet0;
     $lpad$phi$index = $74;$lpad$phi$index7 = $75;
     break L21;
     break;
    }
    case 40: {
     $76 = ___cxa_find_matching_catch()|0;
     $77 = tempRet0;
     $lpad$phi$index = $76;$lpad$phi$index7 = $77;
     break L21;
     break;
    }
    case 56: {
     $126 = HEAP32[$__err>>2]|0;
     $127 = $126 | 4;
     HEAP32[$__err>>2] = $127;
     $$0 = 0;
     break;
    }
    case 158: {
     $399 = HEAP32[$__err>>2]|0;
     $400 = $399 | 4;
     HEAP32[$__err>>2] = $400;
     $$0 = 0;
     break;
    }
    case 216: {
     $544 = HEAP32[$__err>>2]|0;
     $545 = $544 | 4;
     HEAP32[$__err>>2] = $545;
     $$0 = 0;
     break;
    }
    case 275: {
     $692 = HEAP32[$__err>>2]|0;
     $693 = $692 | 4;
     HEAP32[$__err>>2] = $693;
     $$0 = 0;
     break;
    }
    case 300: {
     $760 = HEAP32[$__err>>2]|0;
     $761 = $760 | 4;
     HEAP32[$__err>>2] = $761;
     $$0 = 0;
     break;
    }
    case 312: {
     $800 = HEAP32[$__err>>2]|0;
     $801 = $800 | 4;
     HEAP32[$__err>>2] = $801;
     $$0 = 0;
     break;
    }
    case 315: {
     $803 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($803)) {
       $804 = (($__trailing_sign$0$lcssa) + 1|0);
       $805 = (($__trailing_sign$0$lcssa) + 8|0);
       $806 = (($__trailing_sign$0$lcssa) + 4|0);
       $__i$0 = 1;
       L418: while(1) {
        $807 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $808 = $807 & 1;
        $809 = ($808<<24>>24)==(0);
        if ($809) {
         $811 = $807&255;
         $812 = $811 >>> 1;
         $814 = $812;
        } else {
         $810 = HEAP32[$806>>2]|0;
         $814 = $810;
        }
        $813 = ($__i$0>>>0)<($814>>>0);
        if (!($813)) {
         label = 345;
         break;
        }
        $815 = HEAP32[$__b>>2]|0;
        $816 = ($815|0)==(0|0);
        do {
         if ($816) {
          $829 = 0;
         } else {
          $817 = (($815) + 12|0);
          $818 = HEAP32[$817>>2]|0;
          $819 = (($815) + 16|0);
          $820 = HEAP32[$819>>2]|0;
          $821 = ($818|0)==($820|0);
          if ($821) {
           $822 = HEAP32[$815>>2]|0;
           $823 = (($822) + 36|0);
           $824 = HEAP32[$823>>2]|0;
           __THREW__ = 0;
           $825 = (invoke_ii($824|0,($815|0))|0);
           $826 = __THREW__; __THREW__ = 0;
           $827 = $826&1;
           if ($827) {
            label = 35;
            break L418;
           }
           $828 = ($825|0)==(-1);
           if ($828) {
            HEAP32[$__b>>2] = 0;
            $829 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $829 = $$pre$i$i$i;
            break;
           }
          } else {
           $829 = $815;
          }
         }
        } while(0);
        $830 = ($829|0)==(0|0);
        $831 = HEAP32[$__e>>2]|0;
        $832 = ($831|0)==(0|0);
        do {
         if ($832) {
          label = 333;
         } else {
          $833 = (($831) + 12|0);
          $834 = HEAP32[$833>>2]|0;
          $835 = (($831) + 16|0);
          $836 = HEAP32[$835>>2]|0;
          $837 = ($834|0)==($836|0);
          if ($837) {
           $838 = HEAP32[$831>>2]|0;
           $839 = (($838) + 36|0);
           $840 = HEAP32[$839>>2]|0;
           __THREW__ = 0;
           $841 = (invoke_ii($840|0,($831|0))|0);
           $842 = __THREW__; __THREW__ = 0;
           $843 = $842&1;
           if ($843) {
            label = 35;
            break L418;
           }
           $844 = ($841|0)==(-1);
           if ($844) {
            HEAP32[$__e>>2] = 0;
            label = 333;
            break;
           }
          }
          if (!($830)) {
           label = 340;
           break L418;
          }
         }
        } while(0);
        if ((label|0) == 333) {
         label = 0;
         if ($830) {
          label = 340;
          break;
         }
        }
        $845 = HEAP32[$__b>>2]|0;
        $846 = (($845) + 12|0);
        $847 = HEAP32[$846>>2]|0;
        $848 = (($845) + 16|0);
        $849 = HEAP32[$848>>2]|0;
        $850 = ($847|0)==($849|0);
        if ($850) {
         $851 = HEAP32[$845>>2]|0;
         $852 = (($851) + 36|0);
         $853 = HEAP32[$852>>2]|0;
         __THREW__ = 0;
         $854 = (invoke_ii($853|0,($845|0))|0);
         $855 = __THREW__; __THREW__ = 0;
         $856 = $855&1;
         if ($856) {
          label = 35;
          break;
         } else {
          $$0$i$i = $854;
         }
        } else {
         $857 = HEAP8[$847>>0]|0;
         $858 = $857&255;
         $$0$i$i = $858;
        }
        $859 = $$0$i$i&255;
        $860 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $861 = $860 & 1;
        $862 = ($861<<24>>24)==(0);
        if ($862) {
         $865 = $804;
        } else {
         $863 = HEAP32[$805>>2]|0;
         $865 = $863;
        }
        $864 = (($865) + ($__i$0)|0);
        $866 = HEAP8[$864>>0]|0;
        $867 = ($859<<24>>24)==($866<<24>>24);
        if (!($867)) {
         label = 340;
         break;
        }
        $870 = (($__i$0) + 1)|0;
        $871 = HEAP32[$__b>>2]|0;
        $872 = (($871) + 12|0);
        $873 = HEAP32[$872>>2]|0;
        $874 = (($871) + 16|0);
        $875 = HEAP32[$874>>2]|0;
        $876 = ($873|0)==($875|0);
        if ($876) {
         $877 = HEAP32[$871>>2]|0;
         $878 = (($877) + 40|0);
         $879 = HEAP32[$878>>2]|0;
         __THREW__ = 0;
         (invoke_ii($879|0,($871|0))|0);
         $880 = __THREW__; __THREW__ = 0;
         $881 = $880&1;
         if ($881) {
          label = 35;
          break;
         }
        } else {
         $882 = (($873) + 1|0);
         HEAP32[$872>>2] = $882;
        }
        $__i$0 = $870;
       }
       if ((label|0) == 35) {
        $66 = ___cxa_find_matching_catch()|0;
        $67 = tempRet0;
        $lpad$phi$index = $66;$lpad$phi$index7 = $67;
        break L21;
       }
       else if ((label|0) == 340) {
        $868 = HEAP32[$__err>>2]|0;
        $869 = $868 | 4;
        HEAP32[$__err>>2] = $869;
        $$0 = 0;
        break L403;
       }
       else if ((label|0) == 345) {
        break;
       }
      }
     } while(0);
     $883 = HEAP32[$__gb>>2]|0;
     $884 = ($883|0)==($$lcssa326|0);
     if ($884) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$883,$$lcssa326,$__et);
      $885 = HEAP32[$__et>>2]|0;
      $886 = ($885|0)==(0);
      if ($886) {
       $$0 = 1;
      } else {
       $887 = HEAP32[$__err>>2]|0;
       $888 = $887 | 4;
       HEAP32[$__err>>2] = $888;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $889 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $890 = ($889|0)==(0|0);
   if (!($890)) {
    $891 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($891|0,($889|0));
    $892 = __THREW__; __THREW__ = 0;
    $893 = $892&1;
    if ($893) {
     $894 = ___cxa_find_matching_catch(0|0)|0;
     $895 = tempRet0;
     ___clang_call_terminate($894);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $80 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $81 = ($80|0)==(0|0);
 if (!($81)) {
  $82 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($82|0,($80|0));
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(363,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(2568|0),(62|0));
  // unreachable;
 }
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 100|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $31 = ___cxa_find_matching_catch()|0;
  $32 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $32;$$09 = $31;$93 = $__wbuf;
  label = 37;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7024|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(476,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       $20 = (($__v) + 1|0);
       HEAP8[$20>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP8[$18>>0] = 0;
       $19 = (($__v) + 4|0);
       HEAP32[$19>>2] = 0;
      }
      $21 = HEAP8[$__neg>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if (!($22)) {
       $23 = HEAP32[$5>>2]|0;
       $24 = (($23) + 28|0);
       $25 = HEAP32[$24>>2]|0;
       __THREW__ = 0;
       $26 = (invoke_iii($25|0,($5|0),45)|0);
       $27 = __THREW__; __THREW__ = 0;
       $28 = $27&1;
       if ($28) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(372,($__v|0),($26|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
      }
      $33 = HEAP32[$5>>2]|0;
      $34 = (($33) + 28|0);
      $35 = HEAP32[$34>>2]|0;
      __THREW__ = 0;
      $36 = (invoke_iii($35|0,($5|0),48)|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       break;
      }
      $39 = HEAP32[$__wb>>2]|0;
      $40 = HEAP32[$__wn>>2]|0;
      $41 = (($40) + -1|0);
      $__w$0 = $39;
      while(1) {
       $42 = ($__w$0>>>0)<($41>>>0);
       if (!($42)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $43 = HEAP8[$__w$0>>0]|0;
       $44 = ($43<<24>>24)==($36<<24>>24);
       if (!($44)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $45 = (($__w$0) + 1|0);
       $__w$0 = $45;
      }
      __THREW__ = 0;
      (invoke_iiii(481,($__v|0),($__w$0$lcssa|0),($40|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break;
      }
     }
     $48 = HEAP32[$__b>>2]|0;
     $49 = ($48|0)==(0|0);
     do {
      if ($49) {
       $62 = 0;
      } else {
       $50 = (($48) + 12|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = (($48) + 16|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ($51|0)==($53|0);
       if ($54) {
        $55 = HEAP32[$48>>2]|0;
        $56 = (($55) + 36|0);
        $57 = HEAP32[$56>>2]|0;
        __THREW__ = 0;
        $58 = (invoke_ii($57|0,($48|0))|0);
        $59 = __THREW__; __THREW__ = 0;
        $60 = $59&1;
        if ($60) {
         break L3;
        }
        $61 = ($58|0)==(-1);
        if ($61) {
         HEAP32[$__b>>2] = 0;
         $62 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $62 = $$pre$i$i$i;
         break;
        }
       } else {
        $62 = $48;
       }
      }
     } while(0);
     $63 = ($62|0)==(0|0);
     $64 = ($8|0)==(0|0);
     do {
      if ($64) {
       label = 30;
      } else {
       $65 = (($8) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($8) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$8>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($8|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         break L3;
        }
        $76 = ($73|0)==(-1);
        if ($76) {
         HEAP32[$__e>>2] = 0;
         label = 30;
         break;
        }
       }
       if (!($63)) {
        label = 31;
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($63) {
       label = 31;
      }
     }
     if ((label|0) == 31) {
      $77 = HEAP32[$__err>>2]|0;
      $78 = $77 | 2;
      HEAP32[$__err>>2] = $78;
     }
     $79 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $79;
     $80 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($80)|0);
     $81 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $82 = ($81|0)==(0|0);
     if (!($82)) {
      $83 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($83|0,($81|0));
      $84 = __THREW__; __THREW__ = 0;
      $85 = $84&1;
      if ($85) {
       $86 = ___cxa_find_matching_catch(0|0)|0;
       $87 = tempRet0;
       ___clang_call_terminate($86);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $88 = ___cxa_find_matching_catch()|0;
  $89 = tempRet0;
  $90 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($90)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $91 = ($$pre|0)==(0|0);
  if ($91) {
   $$010 = $88;$$018 = $89;
  } else {
   $$017 = $89;$$09 = $88;$93 = $$pre;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $92 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($92|0,($93|0));
  $94 = __THREW__; __THREW__ = 0;
  $95 = $94&1;
  if ($95) {
   $96 = ___cxa_find_matching_catch(0|0)|0;
   $97 = tempRet0;
   ___clang_call_terminate($96);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i15 = 0, $exitcond$i$i$i20 = 0, $exitcond$i$i$i25 = 0, $exitcond$i$i$i30 = 0, $exitcond$i$i$i35 = 0, $exitcond$i$i$i5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6464)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = (($__nsn) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = (($__nsn) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if ($26) {
   $27 = ___cxa_find_matching_catch(0|0)|0;
   $28 = tempRet0;
   ___clang_call_terminate($27);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $29 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$29>>2] = 0;
   $30 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $30;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $31 = HEAP32[$10>>2]|0;
  $32 = (($31) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
  $34 = HEAP8[$__psn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $40 = (($__psn) + 1|0);
   HEAP8[$40>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $37 = (($__psn) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   HEAP8[$38>>0] = 0;
   $39 = (($__psn) + 4|0);
   HEAP32[$39>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if ($42) {
   $43 = ___cxa_find_matching_catch(0|0)|0;
   $44 = tempRet0;
   ___clang_call_terminate($43);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $45 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$45>>2] = 0;
   $46 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $46;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $47 = HEAP32[$10>>2]|0;
  $48 = (($47) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
  HEAP8[$__dp>>0] = $50;
  $51 = HEAP32[$10>>2]|0;
  $52 = (($51) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
  HEAP8[$__ts>>0] = $54;
  $55 = HEAP32[$10>>2]|0;
  $56 = (($55) + 20|0);
  $57 = HEAP32[$56>>2]|0;
  FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
  $58 = HEAP8[$__grp>>0]|0;
  $59 = $58 & 1;
  $60 = ($59<<24>>24)==(0);
  if ($60) {
   $64 = (($__grp) + 1|0);
   HEAP8[$64>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $61 = (($__grp) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP8[$62>>0] = 0;
   $63 = (($__grp) + 4|0);
   HEAP32[$63>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $65 = __THREW__; __THREW__ = 0;
  $66 = $65&1;
  if ($66) {
   $67 = ___cxa_find_matching_catch(0|0)|0;
   $68 = tempRet0;
   ___clang_call_terminate($67);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $69 = (($3) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $70;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $71 = HEAP32[$10>>2]|0;
  $72 = (($71) + 24|0);
  $73 = HEAP32[$72>>2]|0;
  FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
  $74 = HEAP8[$__sym>>0]|0;
  $75 = $74 & 1;
  $76 = ($75<<24>>24)==(0);
  if ($76) {
   $80 = (($__sym) + 1|0);
   HEAP8[$80>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $77 = (($__sym) + 8|0);
   $78 = HEAP32[$77>>2]|0;
   HEAP8[$78>>0] = 0;
   $79 = (($__sym) + 4|0);
   HEAP32[$79>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $81 = __THREW__; __THREW__ = 0;
  $82 = $81&1;
  if ($82) {
   $83 = ___cxa_find_matching_catch(0|0)|0;
   $84 = tempRet0;
   ___clang_call_terminate($83);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i14 = 0;
  while(1) {
   $exitcond$i$i$i15 = ($__i$0$i$i$i14|0)==(3);
   if ($exitcond$i$i$i15) {
    break;
   }
   $85 = (($4) + ($__i$0$i$i$i14<<2)|0);
   HEAP32[$85>>2] = 0;
   $86 = (($__i$0$i$i$i14) + 1)|0;
   $__i$0$i$i$i14 = $86;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $87 = HEAP32[$10>>2]|0;
  $88 = (($87) + 36|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
  $storemerge = $90;
 } else {
  $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6400)|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($92) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
  $95 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
  $96 = HEAP32[$91>>2]|0;
  $97 = (($96) + 32|0);
  $98 = HEAP32[$97>>2]|0;
  FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
  $99 = HEAP8[$__nsn>>0]|0;
  $100 = $99 & 1;
  $101 = ($100<<24>>24)==(0);
  if ($101) {
   $105 = (($__nsn) + 1|0);
   HEAP8[$105>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $102 = (($__nsn) + 8|0);
   $103 = HEAP32[$102>>2]|0;
   HEAP8[$103>>0] = 0;
   $104 = (($__nsn) + 4|0);
   HEAP32[$104>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__nsn|0),0);
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i19 = 0;
  while(1) {
   $exitcond$i$i$i20 = ($__i$0$i$i$i19|0)==(3);
   if ($exitcond$i$i$i20) {
    break;
   }
   $110 = (($6) + ($__i$0$i$i$i19<<2)|0);
   HEAP32[$110>>2] = 0;
   $111 = (($__i$0$i$i$i19) + 1)|0;
   $__i$0$i$i$i19 = $111;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $112 = HEAP32[$91>>2]|0;
  $113 = (($112) + 28|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
  $115 = HEAP8[$__psn>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = (($__psn) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $118 = (($__psn) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = (($__psn) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__psn|0),0);
  $122 = __THREW__; __THREW__ = 0;
  $123 = $122&1;
  if ($123) {
   $124 = ___cxa_find_matching_catch(0|0)|0;
   $125 = tempRet0;
   ___clang_call_terminate($124);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i24 = 0;
  while(1) {
   $exitcond$i$i$i25 = ($__i$0$i$i$i24|0)==(3);
   if ($exitcond$i$i$i25) {
    break;
   }
   $126 = (($7) + ($__i$0$i$i$i24<<2)|0);
   HEAP32[$126>>2] = 0;
   $127 = (($__i$0$i$i$i24) + 1)|0;
   $__i$0$i$i$i24 = $127;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $128 = HEAP32[$91>>2]|0;
  $129 = (($128) + 12|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
  HEAP8[$__dp>>0] = $131;
  $132 = HEAP32[$91>>2]|0;
  $133 = (($132) + 16|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
  HEAP8[$__ts>>0] = $135;
  $136 = HEAP32[$91>>2]|0;
  $137 = (($136) + 20|0);
  $138 = HEAP32[$137>>2]|0;
  FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
  $139 = HEAP8[$__grp>>0]|0;
  $140 = $139 & 1;
  $141 = ($140<<24>>24)==(0);
  if ($141) {
   $145 = (($__grp) + 1|0);
   HEAP8[$145>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $142 = (($__grp) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   HEAP8[$143>>0] = 0;
   $144 = (($__grp) + 4|0);
   HEAP32[$144>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $146 = __THREW__; __THREW__ = 0;
  $147 = $146&1;
  if ($147) {
   $148 = ___cxa_find_matching_catch(0|0)|0;
   $149 = tempRet0;
   ___clang_call_terminate($148);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i29 = 0;
  while(1) {
   $exitcond$i$i$i30 = ($__i$0$i$i$i29|0)==(3);
   if ($exitcond$i$i$i30) {
    break;
   }
   $150 = (($8) + ($__i$0$i$i$i29<<2)|0);
   HEAP32[$150>>2] = 0;
   $151 = (($__i$0$i$i$i29) + 1)|0;
   $__i$0$i$i$i29 = $151;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $152 = HEAP32[$91>>2]|0;
  $153 = (($152) + 24|0);
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
  $155 = HEAP8[$__sym>>0]|0;
  $156 = $155 & 1;
  $157 = ($156<<24>>24)==(0);
  if ($157) {
   $161 = (($__sym) + 1|0);
   HEAP8[$161>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $158 = (($__sym) + 8|0);
   $159 = HEAP32[$158>>2]|0;
   HEAP8[$159>>0] = 0;
   $160 = (($__sym) + 4|0);
   HEAP32[$160>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $162 = __THREW__; __THREW__ = 0;
  $163 = $162&1;
  if ($163) {
   $164 = ___cxa_find_matching_catch(0|0)|0;
   $165 = tempRet0;
   ___clang_call_terminate($164);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i34 = 0;
  while(1) {
   $exitcond$i$i$i35 = ($__i$0$i$i$i34|0)==(3);
   if ($exitcond$i$i$i35) {
    break;
   }
   $166 = (($9) + ($__i$0$i$i$i34<<2)|0);
   HEAP32[$166>>2] = 0;
   $167 = (($__i$0$i$i$i34) + 1)|0;
   $__i$0$i$i$i34 = $167;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $168 = HEAP32[$91>>2]|0;
  $169 = (($168) + 36|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
  $storemerge = $171;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$0$i$i = 0, $$01$i$i = 0, $$__ig$0 = 0, $$lcssa = 0, $$not = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = (($__grouping) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7|0)==(0);
 do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $16 = $0;
   } else {
    $$0$i$i = $__g_end;$$01$i$i = $__g;
    while(1) {
     $10 = (($$0$i$i) + -4|0);
     $11 = ($$01$i$i>>>0)<($10>>>0);
     if (!($11)) {
      break;
     }
     $12 = HEAP32[$$01$i$i>>2]|0;
     $13 = HEAP32[$10>>2]|0;
     HEAP32[$$01$i$i>>2] = $13;
     HEAP32[$10>>2] = $12;
     $14 = (($$01$i$i) + 4|0);
     $$0$i$i = $10;$$01$i$i = $14;
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $16 = $$pre;
   }
   $15 = $16 & 1;
   $17 = ($15<<24>>24)==(0);
   if ($17) {
    $22 = (($__grouping) + 1|0);
    $23 = $16&255;
    $24 = $23 >>> 1;
    $26 = $22;$27 = $24;
   } else {
    $18 = (($__grouping) + 8|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($__grouping) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $26 = $19;$27 = $21;
   }
   $25 = (($26) + ($27)|0);
   $28 = (($__g_end) + -4|0);
   $29 = $25;
   $__ig$0 = $26;$__r$0 = $__g;
   while(1) {
    $30 = ($__r$0>>>0)<($28>>>0);
    $31 = HEAP8[$__ig$0>>0]|0;
    $$not = ($31<<24>>24)<(1);
    $32 = ($31<<24>>24)==(127);
    $or$cond2 = $$not | $32;
    if (!($30)) {
     $$lcssa = $31;$or$cond2$lcssa = $or$cond2;
     break;
    }
    if (!($or$cond2)) {
     $33 = $31 << 24 >> 24;
     $34 = HEAP32[$__r$0>>2]|0;
     $35 = ($33|0)==($34|0);
     if (!($35)) {
      label = 17;
      break;
     }
    }
    $36 = $__ig$0;
    $37 = (($29) - ($36))|0;
    $38 = ($37|0)>(1);
    $39 = (($__ig$0) + 1|0);
    $$__ig$0 = $38 ? $39 : $__ig$0;
    $40 = (($__r$0) + 4|0);
    $__ig$0 = $$__ig$0;$__r$0 = $40;
   }
   if ((label|0) == 17) {
    HEAP32[$__err>>2] = 4;
    break;
   }
   if (!($or$cond2$lcssa)) {
    $41 = $$lcssa << 24 >> 24;
    $42 = HEAP32[$28>>2]|0;
    $43 = (($42) + -1)|0;
    $44 = ($43>>>0)<($41>>>0);
    if (!($44)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$111 = 0, $$112 = 0, $$1210 = 0, $$129 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre13 = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0;
 var $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $33 = ___cxa_find_matching_catch()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$111 = $33;$$129 = $34;$106 = 475;$107 = $__wbuf;
  label = 47;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7016|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L3: do {
   if ($7) {
    label = 11;
   } else {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     label = 11;
    } else {
     if ($11) {
      $14 = HEAP32[$5>>2]|0;
      $15 = (($14) + 48|0);
      $16 = HEAP32[$15>>2]|0;
      __THREW__ = 0;
      (invoke_iiiii($16|0,($5|0),(6720|0),(((6720 + 10|0))|0),($__atoms|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       label = 11;
       break;
      }
      $19 = HEAP32[$__wn>>2]|0;
      $20 = HEAP32[$__wb>>2]|0;
      $21 = $19;
      $22 = $20;
      $23 = (($21) - ($22))|0;
      $24 = ($23|0)>(392);
      if ($24) {
       $25 = $23 >> 2;
       $26 = (($25) + 2)|0;
       $27 = (_malloc($26)|0);
       $28 = ($27|0)==(0|0);
       if ($28) {
        __THREW__ = 0;
        invoke_v(465);
        $29 = __THREW__; __THREW__ = 0;
        $30 = $29&1;
        if ($30) {
         $31 = ___cxa_find_matching_catch()|0;
         $32 = tempRet0;
         $$0 = $31;$$01 = $32;
         break;
        } else {
         $39 = 0;$__nc$0 = 0;
        }
       } else {
        $39 = $27;$__nc$0 = $27;
       }
      } else {
       $39 = 0;$__nc$0 = $__nbuf;
      }
      $40 = HEAP8[$__neg>>0]|0;
      $41 = ($40<<24>>24)==(0);
      if ($41) {
       $__nc$1 = $__nc$0;
      } else {
       $42 = (($__nc$0) + 1|0);
       HEAP8[$__nc$0>>0] = 45;
       $__nc$1 = $42;
      }
      $43 = (($__atoms) + 40|0);
      $44 = $__atoms;
      $46 = $19;$__nc$2 = $__nc$1;$__w$0 = $20;
      while(1) {
       $45 = ($__w$0>>>0)<($46>>>0);
       if (!($45)) {
        $__nc$2$lcssa = $__nc$2;
        break;
       }
       $47 = HEAP32[$__w$0>>2]|0;
       $$0$i = $__atoms;
       while(1) {
        $48 = ($$0$i|0)==($43|0);
        if ($48) {
         $$0$lcssa$i = $43;
         break;
        }
        $49 = HEAP32[$$0$i>>2]|0;
        $50 = ($49|0)==($47|0);
        if ($50) {
         $$0$lcssa$i = $$0$i;
         break;
        }
        $51 = (($$0$i) + 4|0);
        $$0$i = $51;
       }
       $52 = $$0$lcssa$i;
       $53 = (($52) - ($44))|0;
       $54 = $53 >> 2;
       $55 = (6720 + ($54)|0);
       $56 = HEAP8[$55>>0]|0;
       HEAP8[$__nc$2>>0] = $56;
       $57 = (($__w$0) + 4|0);
       $58 = (($__nc$2) + 1|0);
       $$pre = HEAP32[$__wn>>2]|0;
       $46 = $$pre;$__nc$2 = $58;$__w$0 = $57;
      }
      HEAP8[$__nc$2$lcssa>>0] = 0;
      HEAP32[$vararg_buffer>>2] = $__v;
      $59 = (_sscanf($__nbuf,6656,$vararg_buffer)|0);
      $60 = ($59|0)==(1);
      if (!($60)) {
       __THREW__ = 0;
       invoke_vi(477,(6664|0));
       $61 = __THREW__; __THREW__ = 0;
       $62 = $61&1;
       if ($62) {
        $37 = ___cxa_find_matching_catch()|0;
        $38 = tempRet0;
        _free($39);
        $$0 = $37;$$01 = $38;
        break;
       }
      }
      _free($39);
     }
     $63 = HEAP32[$__b>>2]|0;
     $64 = ($63|0)==(0|0);
     do {
      if ($64) {
       $112 = 1;
      } else {
       $65 = (($63) + 12|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = (($63) + 16|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ($66|0)==($68|0);
       if ($69) {
        $70 = HEAP32[$63>>2]|0;
        $71 = (($70) + 36|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($63|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if ($75) {
         label = 11;
         break L3;
        } else {
         $$0$i$i$i$i = $73;
        }
       } else {
        $76 = HEAP32[$66>>2]|0;
        $$0$i$i$i$i = $76;
       }
       $77 = ($$0$i$i$i$i|0)==(-1);
       if ($77) {
        HEAP32[$__b>>2] = 0;
        $112 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $112 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $78 = HEAP32[$__e>>2]|0;
     $79 = ($78|0)==(0|0);
     do {
      if ($79) {
       label = 38;
      } else {
       $80 = (($78) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = (($78) + 16|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = ($81|0)==($83|0);
       if ($84) {
        $85 = HEAP32[$78>>2]|0;
        $86 = (($85) + 36|0);
        $87 = HEAP32[$86>>2]|0;
        __THREW__ = 0;
        $88 = (invoke_ii($87|0,($78|0))|0);
        $89 = __THREW__; __THREW__ = 0;
        $90 = $89&1;
        if ($90) {
         label = 11;
         break L3;
        } else {
         $$0$i$i1$i$i = $88;
        }
       } else {
        $91 = HEAP32[$81>>2]|0;
        $$0$i$i1$i$i = $91;
       }
       $92 = ($$0$i$i1$i$i|0)==(-1);
       if ($92) {
        HEAP32[$__e>>2] = 0;
        label = 38;
        break;
       } else {
        if ($112) {
         break;
        } else {
         label = 40;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      if ($112) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $93 = HEAP32[$__err>>2]|0;
      $94 = $93 | 2;
      HEAP32[$__err>>2] = $94;
     }
     $95 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $95;
     $96 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($96)|0);
     $97 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $98 = ($97|0)==(0|0);
     if (!($98)) {
      $99 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($99|0,($97|0));
      $100 = __THREW__; __THREW__ = 0;
      $101 = $100&1;
      if ($101) {
       $102 = ___cxa_find_matching_catch(0|0)|0;
       $103 = tempRet0;
       ___clang_call_terminate($102);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;
  }
  $104 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($104)|0);
  $$pre6 = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $105 = ($$pre6|0)==(0|0);
  if ($105) {
   $$112 = $$0;$$1210 = $$01;
  } else {
   $$pre13 = HEAP32[$1>>2]|0;
   $$111 = $$0;$$129 = $$01;$106 = $$pre13;$107 = $$pre6;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($106|0,($107|0));
  $108 = __THREW__; __THREW__ = 0;
  $109 = $108&1;
  if ($109) {
   $110 = ___cxa_find_matching_catch(0|0)|0;
   $111 = tempRet0;
   ___clang_call_terminate($110);
   // unreachable;
  } else {
   $$112 = $$111;$$1210 = $$129;
  }
 }
 ___resumeException($$112|0);
 // unreachable;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i125 = 0, $$0$i$i$i$i157 = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i91 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i131 = 0, $$0$i$i1$i$i163 = 0, $$0$i$i1$i$i188 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i97 = 0, $$0$i$i109 = 0, $$0$i$i118 = 0, $$0$i$i121 = 0;
 var $$0$i$i143 = 0, $$0$i$i154 = 0, $$0$i$i178 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i72 = 0, $$0$i$i77 = 0, $$0$i$i85 = 0, $$0$i$i88 = 0, $$299 = 0, $$300 = 0, $$301 = 0, $$302 = 0, $$303 = 0, $$304 = 0, $$305 = 0, $$lcssa = 0, $$lcssa342 = 0, $$lcssa346 = 0;
 var $$lcssa348 = 0, $$lcssa349 = 0, $$lcssa351 = 0, $$ph = 0, $$ph341 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i127 = 0, $$pre$i$i$i159 = 0, $$pre$i$i$i184 = 0, $$pre$i$i$i32 = 0, $$pre$i$i$i53 = 0, $$pre$i$i$i93 = 0, $$pre$i3$i$i133 = 0, $$pre$i3$i$i165 = 0, $$pre$i3$i$i190 = 0, $$pre$i3$i$i190281 = 0, $$pre$i3$i$i190282 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59275 = 0;
 var $$pre$i3$i$i59277 = 0, $$pre$i3$i$i99 = 0, $$pre$i3$i$i99287$ph = 0, $$pre$i3$i$i99287297 = 0, $$pre278 = 0, $$pre279 = 0, $$pre280 = 0, $$pre284 = 0, $$pre285 = 0, $$pre286 = 0, $$pre290 = 0, $$pre292 = 0, $$sum = 0, $$sum293 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0;
 var $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i14 = 0, $__i$0$i$i16 = 0, $__i$0$i$i20 = 0, $__i$0$i$i25 = 0, $__ng$0 = 0, $__ng$0$lcssa343 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$011 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$010 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0 = 0;
 var $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond = 0, $exitcond$i$i = 0, $exitcond$i$i15 = 0, $exitcond$i$i17 = 0, $exitcond$i$i21 = 0, $exitcond$i$i26 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond7 = 0, $or$cond9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i128 = 0, $phitmp$i$i$i160 = 0, $phitmp$i$i$i185 = 0;
 var $phitmp$i$i$i33 = 0, $phitmp$i$i$i54 = 0, $phitmp$i$i$i94 = 0, $phitmp$i4$i$i100 = 0, $phitmp$i4$i$i166 = 0, $phitmp$i4$i$i191 = 0, $phitmp$i4$i$i60 = 0, $switch = 0, $tmp$i$i102 = 0, $tmp$i$i168 = 0, $tmp$i$i193 = 0, $tmp$i$i62 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $1 = (($__gb) + 4|0);
 HEAP32[$1>>2] = 475;
 HEAP32[$__gn>>2] = $__gbuf;
 $2 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $2;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $__i$0$i$i14 = 0;
 while(1) {
  $exitcond$i$i15 = ($__i$0$i$i14|0)==(3);
  if ($exitcond$i$i15) {
   break;
  }
  $5 = (($__sym) + ($__i$0$i$i14<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i14) + 1)|0;
  $__i$0$i$i14 = $6;
 }
 $__i$0$i$i16 = 0;
 while(1) {
  $exitcond$i$i17 = ($__i$0$i$i16|0)==(3);
  if ($exitcond$i$i17) {
   break;
  }
  $7 = (($__psn) + ($__i$0$i$i16<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($__i$0$i$i16) + 1)|0;
  $__i$0$i$i16 = $8;
 }
 $__i$0$i$i20 = 0;
 while(1) {
  $exitcond$i$i21 = ($__i$0$i$i20|0)==(3);
  if ($exitcond$i$i21) {
   break;
  }
  $9 = (($__nsn) + ($__i$0$i$i20<<2)|0);
  HEAP32[$9>>2] = 0;
  $10 = (($__i$0$i$i20) + 1)|0;
  $__i$0$i$i20 = $10;
 }
 $__i$0$i$i25 = 0;
 while(1) {
  $exitcond$i$i26 = ($__i$0$i$i25|0)==(3);
  if ($exitcond$i$i26) {
   break;
  }
  $11 = (($__spaces) + ($__i$0$i$i25<<2)|0);
  HEAP32[$11>>2] = 0;
  $12 = (($__i$0$i$i25) + 1)|0;
  $__i$0$i$i25 = $12;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(484,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 L21: do {
  if ($14) {
   $77 = ___cxa_find_matching_catch()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index8 = $78;
  } else {
   $15 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $15;
   $16 = (($__nsn) + 4|0);
   $17 = (($__nsn) + 8|0);
   $18 = (($__psn) + 4|0);
   $19 = (($__psn) + 8|0);
   $20 = $__flags & 512;
   $21 = ($20|0)!=(0);
   $22 = (($__sym) + 4|0);
   $23 = (($__sym) + 8|0);
   $24 = (($__spaces) + 4|0);
   $25 = (($__spaces) + 8|0);
   $26 = (($__pat) + 3|0);
   $27 = (($__grp) + 4|0);
   $862 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L24: while(1) {
    $28 = ($__p$0>>>0)<(4);
    if (!($28)) {
     $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 319;
     break;
    }
    $29 = HEAP32[$__b>>2]|0;
    $30 = ($29|0)==(0|0);
    do {
     if ($30) {
      $863 = 1;
     } else {
      $31 = (($29) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($29) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$29>>2]|0;
       $37 = (($36) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       __THREW__ = 0;
       $39 = (invoke_ii($38|0,($29|0))|0);
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 42;
        break L24;
       } else {
        $$0$i$i$i$i30 = $39;
       }
      } else {
       $42 = HEAP32[$32>>2]|0;
       $$0$i$i$i$i30 = $42;
      }
      $43 = ($$0$i$i$i$i30|0)==(-1);
      if ($43) {
       HEAP32[$__b>>2] = 0;
       $863 = 1;
       break;
      } else {
       $$pre$i$i$i32 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i33 = ($$pre$i$i$i32|0)==(0|0);
       $863 = $phitmp$i$i$i33;
       break;
      }
     }
    } while(0);
    $44 = HEAP32[$__e>>2]|0;
    $45 = ($44|0)==(0|0);
    do {
     if ($45) {
      label = 32;
     } else {
      $46 = (($44) + 12|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = (($44) + 16|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($47|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$44>>2]|0;
       $52 = (($51) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       __THREW__ = 0;
       $54 = (invoke_ii($53|0,($44|0))|0);
       $55 = __THREW__; __THREW__ = 0;
       $56 = $55&1;
       if ($56) {
        label = 42;
        break L24;
       } else {
        $$0$i$i1$i$i36 = $54;
       }
      } else {
       $57 = HEAP32[$47>>2]|0;
       $$0$i$i1$i$i36 = $57;
      }
      $58 = ($$0$i$i1$i$i36|0)==(-1);
      if ($58) {
       HEAP32[$__e>>2] = 0;
       label = 32;
       break;
      } else {
       if ($863) {
        $864 = $44;
        break;
       } else {
        $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 319;
        break L24;
       }
      }
     }
    } while(0);
    if ((label|0) == 32) {
     label = 0;
     if ($863) {
      $$lcssa351 = $862;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 319;
      break;
     } else {
      $864 = 0;
     }
    }
    $59 = (($__pat) + ($__p$0)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = $60 << 24 >> 24;
    L49: do {
     switch ($61|0) {
     case 4:  {
      $62 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i165 = $864;$538 = $864;$592 = $862;$__ng$0 = 0;
      L51: while(1) {
       $523 = HEAP32[$__b>>2]|0;
       $524 = ($523|0)==(0|0);
       do {
        if ($524) {
         $553 = 1;
        } else {
         $525 = (($523) + 12|0);
         $526 = HEAP32[$525>>2]|0;
         $527 = (($523) + 16|0);
         $528 = HEAP32[$527>>2]|0;
         $529 = ($526|0)==($528|0);
         if ($529) {
          $530 = HEAP32[$523>>2]|0;
          $531 = (($530) + 36|0);
          $532 = HEAP32[$531>>2]|0;
          __THREW__ = 0;
          $533 = (invoke_ii($532|0,($523|0))|0);
          $534 = __THREW__; __THREW__ = 0;
          $535 = $534&1;
          if ($535) {
           label = 41;
           break L24;
          } else {
           $$0$i$i$i$i157 = $533;
          }
         } else {
          $536 = HEAP32[$526>>2]|0;
          $$0$i$i$i$i157 = $536;
         }
         $537 = ($$0$i$i$i$i157|0)==(-1);
         if ($537) {
          HEAP32[$__b>>2] = 0;
          $553 = 1;
          break;
         } else {
          $$pre$i$i$i159 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i160 = ($$pre$i$i$i159|0)==(0|0);
          $553 = $phitmp$i$i$i160;
          break;
         }
        }
       } while(0);
       $539 = ($538|0)==(0|0);
       do {
        if ($539) {
         $869 = $$pre$i3$i$i165;
         label = 230;
        } else {
         $540 = (($538) + 12|0);
         $541 = HEAP32[$540>>2]|0;
         $542 = (($538) + 16|0);
         $543 = HEAP32[$542>>2]|0;
         $544 = ($541|0)==($543|0);
         if ($544) {
          $545 = HEAP32[$538>>2]|0;
          $546 = (($545) + 36|0);
          $547 = HEAP32[$546>>2]|0;
          __THREW__ = 0;
          $548 = (invoke_ii($547|0,($538|0))|0);
          $549 = __THREW__; __THREW__ = 0;
          $550 = $549&1;
          if ($550) {
           label = 41;
           break L24;
          } else {
           $$0$i$i1$i$i163 = $548;
          }
         } else {
          $551 = HEAP32[$541>>2]|0;
          $$0$i$i1$i$i163 = $551;
         }
         $552 = ($$0$i$i1$i$i163|0)==(-1);
         if ($552) {
          HEAP32[$__e>>2] = 0;
          $869 = 0;
          label = 230;
          break;
         } else {
          $phitmp$i4$i$i166 = ($$pre$i3$i$i165|0)==(0|0);
          $tmp$i$i168 = $553 ^ $phitmp$i4$i$i166;
          if ($tmp$i$i168) {
           $870 = $$pre$i3$i$i165;$871 = $$pre$i3$i$i165;
           break;
          } else {
           $$lcssa342 = $592;$$pre$i3$i$i133 = $$pre$i3$i$i165;$__ng$0$lcssa343 = $__ng$0;
           break L51;
          }
         }
        }
       } while(0);
       if ((label|0) == 230) {
        label = 0;
        if ($553) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $869;$__ng$0$lcssa343 = $__ng$0;
         break;
        } else {
         $870 = $869;$871 = 0;
        }
       }
       $554 = HEAP32[$__b>>2]|0;
       $555 = (($554) + 12|0);
       $556 = HEAP32[$555>>2]|0;
       $557 = (($554) + 16|0);
       $558 = HEAP32[$557>>2]|0;
       $559 = ($556|0)==($558|0);
       if ($559) {
        $560 = HEAP32[$554>>2]|0;
        $561 = (($560) + 36|0);
        $562 = HEAP32[$561>>2]|0;
        __THREW__ = 0;
        $563 = (invoke_ii($562|0,($554|0))|0);
        $564 = __THREW__; __THREW__ = 0;
        $565 = $564&1;
        if ($565) {
         label = 41;
         break L24;
        } else {
         $$0$i$i154 = $563;
        }
       } else {
        $566 = HEAP32[$556>>2]|0;
        $$0$i$i154 = $566;
       }
       $567 = HEAP32[$__ct>>2]|0;
       $568 = (($567) + 12|0);
       $569 = HEAP32[$568>>2]|0;
       __THREW__ = 0;
       $570 = (invoke_iiii($569|0,($__ct|0),2048,($$0$i$i154|0))|0);
       $571 = __THREW__; __THREW__ = 0;
       $572 = $571&1;
       if ($572) {
        label = 41;
        break L24;
       }
       if ($570) {
        $573 = HEAP32[$__wn>>2]|0;
        $574 = HEAP32[$0>>2]|0;
        $575 = ($573|0)==($574|0);
        if ($575) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $576 = __THREW__; __THREW__ = 0;
         $577 = $576&1;
         if ($577) {
          label = 41;
          break L24;
         }
         $$pre290 = HEAP32[$__wn>>2]|0;
         $579 = $$pre290;
        } else {
         $579 = $573;
        }
        $578 = (($579) + 4|0);
        HEAP32[$__wn>>2] = $578;
        HEAP32[$579>>2] = $$0$i$i154;
        $580 = (($__ng$0) + 1)|0;
        $872 = $592;$__ng$1 = $580;
       } else {
        $581 = HEAP8[$__grp>>0]|0;
        $582 = $581 & 1;
        $583 = ($582<<24>>24)==(0);
        if ($583) {
         $585 = $581&255;
         $586 = $585 >>> 1;
         $587 = $586;
        } else {
         $584 = HEAP32[$27>>2]|0;
         $587 = $584;
        }
        $588 = ($587|0)!=(0);
        $589 = ($__ng$0|0)!=(0);
        $or$cond7 = $589 & $588;
        $590 = ($$0$i$i154|0)==($62|0);
        $or$cond13 = $or$cond7 & $590;
        if (!($or$cond13)) {
         $$lcssa342 = $592;$$pre$i3$i$i133 = $870;$__ng$0$lcssa343 = $__ng$0;
         break;
        }
        $591 = HEAP32[$__ge>>2]|0;
        $593 = ($592|0)==($591|0);
        if ($593) {
         __THREW__ = 0;
         invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
         $594 = __THREW__; __THREW__ = 0;
         $595 = $594&1;
         if ($595) {
          label = 41;
          break L24;
         }
         $$pre292 = HEAP32[$__gn>>2]|0;
         $597 = $$pre292;
        } else {
         $597 = $592;
        }
        $596 = (($597) + 4|0);
        HEAP32[$__gn>>2] = $596;
        HEAP32[$597>>2] = $__ng$0;
        $872 = $596;$__ng$1 = 0;
       }
       $598 = HEAP32[$__b>>2]|0;
       $599 = (($598) + 12|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = (($598) + 16|0);
       $602 = HEAP32[$601>>2]|0;
       $603 = ($600|0)==($602|0);
       if ($603) {
        $604 = HEAP32[$598>>2]|0;
        $605 = (($604) + 40|0);
        $606 = HEAP32[$605>>2]|0;
        __THREW__ = 0;
        (invoke_ii($606|0,($598|0))|0);
        $607 = __THREW__; __THREW__ = 0;
        $608 = $607&1;
        if ($608) {
         label = 41;
         break L24;
        }
       } else {
        $609 = (($600) + 4|0);
        HEAP32[$599>>2] = $609;
       }
       $$pre$i3$i$i165 = $870;$538 = $871;$592 = $872;$__ng$0 = $__ng$1;
      }
      $610 = HEAP32[$__gb>>2]|0;
      $611 = ($610|0)!=($$lcssa342|0);
      $612 = ($__ng$0$lcssa343|0)!=(0);
      $or$cond9 = $612 & $611;
      if ($or$cond9) {
       $613 = HEAP32[$__ge>>2]|0;
       $614 = ($$lcssa342|0)==($613|0);
       if ($614) {
        __THREW__ = 0;
        invoke_viii(480,($__gb|0),($__gn|0),($__ge|0));
        $615 = __THREW__; __THREW__ = 0;
        $616 = $615&1;
        if ($616) {
         label = 42;
         break L24;
        }
        $$pre286 = HEAP32[$__gn>>2]|0;
        $618 = $$pre286;
       } else {
        $618 = $$lcssa342;
       }
       $617 = (($618) + 4|0);
       HEAP32[$__gn>>2] = $617;
       HEAP32[$618>>2] = $__ng$0$lcssa343;
       $873 = $617;
      } else {
       $873 = $$lcssa342;
      }
      $619 = HEAP32[$__fd>>2]|0;
      $620 = ($619|0)>(0);
      if ($620) {
       $621 = HEAP32[$__b>>2]|0;
       $622 = ($621|0)==(0|0);
       do {
        if ($622) {
         $874 = 1;
        } else {
         $623 = (($621) + 12|0);
         $624 = HEAP32[$623>>2]|0;
         $625 = (($621) + 16|0);
         $626 = HEAP32[$625>>2]|0;
         $627 = ($624|0)==($626|0);
         if ($627) {
          $628 = HEAP32[$621>>2]|0;
          $629 = (($628) + 36|0);
          $630 = HEAP32[$629>>2]|0;
          __THREW__ = 0;
          $631 = (invoke_ii($630|0,($621|0))|0);
          $632 = __THREW__; __THREW__ = 0;
          $633 = $632&1;
          if ($633) {
           label = 42;
           break L24;
          } else {
           $$0$i$i$i$i125 = $631;
          }
         } else {
          $634 = HEAP32[$624>>2]|0;
          $$0$i$i$i$i125 = $634;
         }
         $635 = ($$0$i$i$i$i125|0)==(-1);
         if ($635) {
          HEAP32[$__b>>2] = 0;
          $874 = 1;
          break;
         } else {
          $$pre$i$i$i127 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i128 = ($$pre$i$i$i127|0)==(0|0);
          $874 = $phitmp$i$i$i128;
          break;
         }
        }
       } while(0);
       $636 = ($$pre$i3$i$i133|0)==(0|0);
       do {
        if ($636) {
         label = 272;
        } else {
         $637 = (($$pre$i3$i$i133) + 12|0);
         $638 = HEAP32[$637>>2]|0;
         $639 = (($$pre$i3$i$i133) + 16|0);
         $640 = HEAP32[$639>>2]|0;
         $641 = ($638|0)==($640|0);
         if ($641) {
          $642 = HEAP32[$$pre$i3$i$i133>>2]|0;
          $643 = (($642) + 36|0);
          $644 = HEAP32[$643>>2]|0;
          __THREW__ = 0;
          $645 = (invoke_ii($644|0,($$pre$i3$i$i133|0))|0);
          $646 = __THREW__; __THREW__ = 0;
          $647 = $646&1;
          if ($647) {
           label = 42;
           break L24;
          } else {
           $$0$i$i1$i$i131 = $645;
          }
         } else {
          $648 = HEAP32[$638>>2]|0;
          $$0$i$i1$i$i131 = $648;
         }
         $649 = ($$0$i$i1$i$i131|0)==(-1);
         if ($649) {
          HEAP32[$__e>>2] = 0;
          label = 272;
          break;
         } else {
          if ($874) {
           $875 = $$pre$i3$i$i133;
           break;
          } else {
           label = 278;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 272) {
        label = 0;
        if ($874) {
         label = 278;
         break L24;
        } else {
         $875 = 0;
        }
       }
       $650 = HEAP32[$__b>>2]|0;
       $651 = (($650) + 12|0);
       $652 = HEAP32[$651>>2]|0;
       $653 = (($650) + 16|0);
       $654 = HEAP32[$653>>2]|0;
       $655 = ($652|0)==($654|0);
       if ($655) {
        $656 = HEAP32[$650>>2]|0;
        $657 = (($656) + 36|0);
        $658 = HEAP32[$657>>2]|0;
        __THREW__ = 0;
        $659 = (invoke_ii($658|0,($650|0))|0);
        $660 = __THREW__; __THREW__ = 0;
        $661 = $660&1;
        if ($661) {
         label = 42;
         break L24;
        } else {
         $$0$i$i118 = $659;
        }
       } else {
        $662 = HEAP32[$652>>2]|0;
        $$0$i$i118 = $662;
       }
       $663 = HEAP32[$__dp>>2]|0;
       $664 = ($$0$i$i118|0)==($663|0);
       if (!($664)) {
        label = 278;
        break L24;
       }
       $667 = HEAP32[$__b>>2]|0;
       $668 = (($667) + 12|0);
       $669 = HEAP32[$668>>2]|0;
       $670 = (($667) + 16|0);
       $671 = HEAP32[$670>>2]|0;
       $672 = ($669|0)==($671|0);
       if ($672) {
        $673 = HEAP32[$667>>2]|0;
        $674 = (($673) + 40|0);
        $675 = HEAP32[$674>>2]|0;
        __THREW__ = 0;
        (invoke_ii($675|0,($667|0))|0);
        $676 = __THREW__; __THREW__ = 0;
        $677 = $676&1;
        if ($677) {
         label = 42;
         break L24;
        }
       } else {
        $678 = (($669) + 4|0);
        HEAP32[$668>>2] = $678;
       }
       $$pre$i3$i$i99 = $875;$679 = $619;$696 = $875;
       while(1) {
        $680 = ($679|0)>(0);
        if (!($680)) {
         break;
        }
        $681 = HEAP32[$__b>>2]|0;
        $682 = ($681|0)==(0|0);
        do {
         if ($682) {
          $711 = 1;
         } else {
          $683 = (($681) + 12|0);
          $684 = HEAP32[$683>>2]|0;
          $685 = (($681) + 16|0);
          $686 = HEAP32[$685>>2]|0;
          $687 = ($684|0)==($686|0);
          if ($687) {
           $688 = HEAP32[$681>>2]|0;
           $689 = (($688) + 36|0);
           $690 = HEAP32[$689>>2]|0;
           __THREW__ = 0;
           $691 = (invoke_ii($690|0,($681|0))|0);
           $692 = __THREW__; __THREW__ = 0;
           $693 = $692&1;
           if ($693) {
            label = 40;
            break L24;
           } else {
            $$0$i$i$i$i91 = $691;
           }
          } else {
           $694 = HEAP32[$684>>2]|0;
           $$0$i$i$i$i91 = $694;
          }
          $695 = ($$0$i$i$i$i91|0)==(-1);
          if ($695) {
           HEAP32[$__b>>2] = 0;
           $711 = 1;
           break;
          } else {
           $$pre$i$i$i93 = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i94 = ($$pre$i$i$i93|0)==(0|0);
           $711 = $phitmp$i$i$i94;
           break;
          }
         }
        } while(0);
        $697 = ($696|0)==(0|0);
        do {
         if ($697) {
          $$pre$i3$i$i99287$ph = $$pre$i3$i$i99;
          label = 297;
         } else {
          $698 = (($696) + 12|0);
          $699 = HEAP32[$698>>2]|0;
          $700 = (($696) + 16|0);
          $701 = HEAP32[$700>>2]|0;
          $702 = ($699|0)==($701|0);
          if ($702) {
           $703 = HEAP32[$696>>2]|0;
           $704 = (($703) + 36|0);
           $705 = HEAP32[$704>>2]|0;
           __THREW__ = 0;
           $706 = (invoke_ii($705|0,($696|0))|0);
           $707 = __THREW__; __THREW__ = 0;
           $708 = $707&1;
           if ($708) {
            label = 40;
            break L24;
           } else {
            $$0$i$i1$i$i97 = $706;
           }
          } else {
           $709 = HEAP32[$699>>2]|0;
           $$0$i$i1$i$i97 = $709;
          }
          $710 = ($$0$i$i1$i$i97|0)==(-1);
          if ($710) {
           HEAP32[$__e>>2] = 0;
           $$pre$i3$i$i99287$ph = 0;
           label = 297;
           break;
          } else {
           $phitmp$i4$i$i100 = ($$pre$i3$i$i99|0)==(0|0);
           $tmp$i$i102 = $711 ^ $phitmp$i4$i$i100;
           if ($tmp$i$i102) {
            $$pre$i3$i$i99287297 = $$pre$i3$i$i99;$876 = $$pre$i3$i$i99;
            break;
           } else {
            label = 304;
            break L24;
           }
          }
         }
        } while(0);
        if ((label|0) == 297) {
         label = 0;
         if ($711) {
          label = 304;
          break L24;
         } else {
          $$pre$i3$i$i99287297 = $$pre$i3$i$i99287$ph;$876 = 0;
         }
        }
        $712 = HEAP32[$__b>>2]|0;
        $713 = (($712) + 12|0);
        $714 = HEAP32[$713>>2]|0;
        $715 = (($712) + 16|0);
        $716 = HEAP32[$715>>2]|0;
        $717 = ($714|0)==($716|0);
        if ($717) {
         $718 = HEAP32[$712>>2]|0;
         $719 = (($718) + 36|0);
         $720 = HEAP32[$719>>2]|0;
         __THREW__ = 0;
         $721 = (invoke_ii($720|0,($712|0))|0);
         $722 = __THREW__; __THREW__ = 0;
         $723 = $722&1;
         if ($723) {
          label = 40;
          break L24;
         } else {
          $$0$i$i85 = $721;
         }
        } else {
         $724 = HEAP32[$714>>2]|0;
         $$0$i$i85 = $724;
        }
        $725 = HEAP32[$__ct>>2]|0;
        $726 = (($725) + 12|0);
        $727 = HEAP32[$726>>2]|0;
        __THREW__ = 0;
        $728 = (invoke_iiii($727|0,($__ct|0),2048,($$0$i$i85|0))|0);
        $729 = __THREW__; __THREW__ = 0;
        $730 = $729&1;
        if ($730) {
         label = 40;
         break L24;
        }
        if (!($728)) {
         label = 304;
         break L24;
        }
        $733 = HEAP32[$__wn>>2]|0;
        $734 = HEAP32[$0>>2]|0;
        $735 = ($733|0)==($734|0);
        if ($735) {
         __THREW__ = 0;
         invoke_viii(486,($__wb|0),($__wn|0),($0|0));
         $736 = __THREW__; __THREW__ = 0;
         $737 = $736&1;
         if ($737) {
          label = 40;
          break L24;
         }
        }
        $738 = HEAP32[$__b>>2]|0;
        $739 = (($738) + 12|0);
        $740 = HEAP32[$739>>2]|0;
        $741 = (($738) + 16|0);
        $742 = HEAP32[$741>>2]|0;
        $743 = ($740|0)==($742|0);
        if ($743) {
         $744 = HEAP32[$738>>2]|0;
         $745 = (($744) + 36|0);
         $746 = HEAP32[$745>>2]|0;
         __THREW__ = 0;
         $747 = (invoke_ii($746|0,($738|0))|0);
         $748 = __THREW__; __THREW__ = 0;
         $749 = $748&1;
         if ($749) {
          label = 40;
          break L24;
         } else {
          $$0$i$i77 = $747;
         }
        } else {
         $750 = HEAP32[$740>>2]|0;
         $$0$i$i77 = $750;
        }
        $751 = HEAP32[$__wn>>2]|0;
        $752 = (($751) + 4|0);
        HEAP32[$__wn>>2] = $752;
        HEAP32[$751>>2] = $$0$i$i77;
        $753 = (($679) + -1)|0;
        HEAP32[$__fd>>2] = $753;
        $754 = HEAP32[$__b>>2]|0;
        $755 = (($754) + 12|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = (($754) + 16|0);
        $758 = HEAP32[$757>>2]|0;
        $759 = ($756|0)==($758|0);
        if ($759) {
         $760 = HEAP32[$754>>2]|0;
         $761 = (($760) + 40|0);
         $762 = HEAP32[$761>>2]|0;
         __THREW__ = 0;
         (invoke_ii($762|0,($754|0))|0);
         $763 = __THREW__; __THREW__ = 0;
         $764 = $763&1;
         if ($764) {
          label = 40;
          break L24;
         }
        } else {
         $765 = (($756) + 4|0);
         HEAP32[$755>>2] = $765;
        }
        $$pre$i3$i$i99 = $$pre$i3$i$i99287297;$679 = $753;$696 = $876;
       }
      }
      $766 = HEAP32[$__wn>>2]|0;
      $767 = HEAP32[$__wb>>2]|0;
      $768 = ($766|0)==($767|0);
      if ($768) {
       label = 316;
       break L24;
      } else {
       $865 = $873;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 2:  {
      $367 = ($__trailing_sign$0|0)!=(0|0);
      $368 = ($__p$0>>>0)<(2);
      $or$cond = $368 | $367;
      if (!($or$cond)) {
       $369 = ($__p$0|0)==(2);
       if ($369) {
        $370 = HEAP8[$26>>0]|0;
        $371 = ($370<<24>>24)!=(0);
        $372 = $371;
       } else {
        $372 = 0;
       }
       $brmerge = $21 | $372;
       if (!($brmerge)) {
        $865 = $862;$__trailing_sign$1 = 0;
        break L49;
       }
      }
      $373 = HEAP8[$__sym>>0]|0;
      $374 = $373 & 1;
      $375 = ($374<<24>>24)==(0);
      $376 = HEAP32[$23>>2]|0;
      $$302 = $375 ? $22 : $376;
      $377 = ($__p$0|0)==(0);
      L193: do {
       if ($377) {
        $$ph = $373;$$ph341 = $$302;
       } else {
        $378 = (($__p$0) + -1)|0;
        $379 = (($__pat) + ($378)|0);
        $380 = HEAP8[$379>>0]|0;
        $switch = ($380&255)<(2);
        if ($switch) {
         $382 = $373;$391 = $$302;
         while(1) {
          $381 = $382 & 1;
          $383 = ($381<<24>>24)==(0);
          if ($383) {
           $386 = $382&255;
           $387 = $386 >>> 1;
           $389 = $22;$390 = $387;
          } else {
           $384 = HEAP32[$23>>2]|0;
           $385 = HEAP32[$22>>2]|0;
           $389 = $384;$390 = $385;
          }
          $388 = (($389) + ($390<<2)|0);
          $392 = ($391|0)==($388|0);
          if ($392) {
           $$lcssa = $382;$$lcssa346 = $391;
           label = 168;
           break;
          }
          $393 = HEAP32[$391>>2]|0;
          $394 = HEAP32[$__ct>>2]|0;
          $395 = (($394) + 12|0);
          $396 = HEAP32[$395>>2]|0;
          __THREW__ = 0;
          $397 = (invoke_iiii($396|0,($__ct|0),8192,($393|0))|0);
          $398 = __THREW__; __THREW__ = 0;
          $399 = $398&1;
          if ($399) {
           label = 39;
           break L24;
          }
          if (!($397)) {
           $$lcssa348 = $391;
           label = 166;
           break;
          }
          $400 = (($391) + 4|0);
          $$pre284 = HEAP8[$__sym>>0]|0;
          $382 = $$pre284;$391 = $400;
         }
         if ((label|0) == 166) {
          label = 0;
          $$pre285 = HEAP8[$__sym>>0]|0;
          $402 = $$pre285;$405 = $$lcssa348;
         }
         else if ((label|0) == 168) {
          label = 0;
          $402 = $$lcssa;$405 = $$lcssa346;
         }
         $401 = $402 & 1;
         $403 = ($401<<24>>24)==(0);
         $404 = HEAP32[$23>>2]|0;
         $$303 = $403 ? $22 : $404;
         $406 = $405;
         $407 = $$303;
         $408 = (($406) - ($407))|0;
         $409 = $408 >> 2;
         $410 = HEAP8[$__spaces>>0]|0;
         $411 = $410 & 1;
         $412 = ($411<<24>>24)==(0);
         if ($412) {
          $414 = $410&255;
          $415 = $414 >>> 1;
          $417 = $415;
         } else {
          $413 = HEAP32[$24>>2]|0;
          $417 = $413;
         }
         $416 = ($409>>>0)>($417>>>0);
         do {
          if (!($416)) {
           if ($412) {
            $421 = $410&255;
            $422 = $421 >>> 1;
            $$sum293 = (($422) - ($409))|0;
            $423 = (($24) + ($$sum293<<2)|0);
            $424 = $410&255;
            $425 = $424 >>> 1;
            $427 = $24;$428 = $425;$867 = $423;
           } else {
            $418 = HEAP32[$25>>2]|0;
            $419 = HEAP32[$24>>2]|0;
            $$sum = (($419) - ($409))|0;
            $420 = (($418) + ($$sum<<2)|0);
            $427 = $418;$428 = $419;$867 = $420;
           }
           $426 = (($427) + ($428<<2)|0);
           $429 = HEAP32[$23>>2]|0;
           $$304 = $403 ? $22 : $429;
           $430 = $867;$434 = $$304;
           while(1) {
            $431 = ($430|0)==($426|0);
            if ($431) {
             label = 182;
             break;
            }
            $432 = HEAP32[$430>>2]|0;
            $433 = HEAP32[$434>>2]|0;
            $435 = ($432|0)==($433|0);
            if (!($435)) {
             label = 180;
             break;
            }
            $436 = (($430) + 4|0);
            $437 = (($434) + 4|0);
            $430 = $436;$434 = $437;
           }
           if ((label|0) == 180) {
            label = 0;
            break;
           }
           else if ((label|0) == 182) {
            label = 0;
            $$ph = $402;$$ph341 = $405;
            break L193;
           }
          }
         } while(0);
         $438 = HEAP32[$23>>2]|0;
         $$305 = $403 ? $22 : $438;
         $$ph = $402;$$ph341 = $$305;
        } else {
         $$ph = $373;$$ph341 = $$302;
        }
       }
      } while(0);
      $$pre$i3$i$i190 = $864;$440 = $$ph;$449 = $$ph341;$466 = $864;
      L228: while(1) {
       $439 = $440 & 1;
       $441 = ($439<<24>>24)==(0);
       if ($441) {
        $444 = $440&255;
        $445 = $444 >>> 1;
        $447 = $22;$448 = $445;
       } else {
        $442 = HEAP32[$23>>2]|0;
        $443 = HEAP32[$22>>2]|0;
        $447 = $442;$448 = $443;
       }
       $446 = (($447) + ($448<<2)|0);
       $450 = ($449|0)==($446|0);
       if ($450) {
        $$lcssa349 = $449;
        break;
       }
       $451 = HEAP32[$__b>>2]|0;
       $452 = ($451|0)==(0|0);
       do {
        if ($452) {
         $481 = 1;
        } else {
         $453 = (($451) + 12|0);
         $454 = HEAP32[$453>>2]|0;
         $455 = (($451) + 16|0);
         $456 = HEAP32[$455>>2]|0;
         $457 = ($454|0)==($456|0);
         if ($457) {
          $458 = HEAP32[$451>>2]|0;
          $459 = (($458) + 36|0);
          $460 = HEAP32[$459>>2]|0;
          __THREW__ = 0;
          $461 = (invoke_ii($460|0,($451|0))|0);
          $462 = __THREW__; __THREW__ = 0;
          $463 = $462&1;
          if ($463) {
           label = 38;
           break L24;
          } else {
           $$0$i$i$i$i182 = $461;
          }
         } else {
          $464 = HEAP32[$454>>2]|0;
          $$0$i$i$i$i182 = $464;
         }
         $465 = ($$0$i$i$i$i182|0)==(-1);
         if ($465) {
          HEAP32[$__b>>2] = 0;
          $481 = 1;
          break;
         } else {
          $$pre$i$i$i184 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i185 = ($$pre$i$i$i184|0)==(0|0);
          $481 = $phitmp$i$i$i185;
          break;
         }
        }
       } while(0);
       $467 = ($466|0)==(0|0);
       do {
        if ($467) {
         $$pre$i3$i$i190282 = $$pre$i3$i$i190;
         label = 201;
        } else {
         $468 = (($466) + 12|0);
         $469 = HEAP32[$468>>2]|0;
         $470 = (($466) + 16|0);
         $471 = HEAP32[$470>>2]|0;
         $472 = ($469|0)==($471|0);
         if ($472) {
          $473 = HEAP32[$466>>2]|0;
          $474 = (($473) + 36|0);
          $475 = HEAP32[$474>>2]|0;
          __THREW__ = 0;
          $476 = (invoke_ii($475|0,($466|0))|0);
          $477 = __THREW__; __THREW__ = 0;
          $478 = $477&1;
          if ($478) {
           label = 38;
           break L24;
          } else {
           $$0$i$i1$i$i188 = $476;
          }
         } else {
          $479 = HEAP32[$469>>2]|0;
          $$0$i$i1$i$i188 = $479;
         }
         $480 = ($$0$i$i1$i$i188|0)==(-1);
         if ($480) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i190282 = 0;
          label = 201;
          break;
         } else {
          $phitmp$i4$i$i191 = ($$pre$i3$i$i190|0)==(0|0);
          $tmp$i$i193 = $481 ^ $phitmp$i4$i$i191;
          if ($tmp$i$i193) {
           $$pre$i3$i$i190281 = $$pre$i3$i$i190;$868 = $$pre$i3$i$i190;
           break;
          } else {
           $$lcssa349 = $449;
           break L228;
          }
         }
        }
       } while(0);
       if ((label|0) == 201) {
        label = 0;
        if ($481) {
         $$lcssa349 = $449;
         break;
        } else {
         $$pre$i3$i$i190281 = $$pre$i3$i$i190282;$868 = 0;
        }
       }
       $482 = HEAP32[$__b>>2]|0;
       $483 = (($482) + 12|0);
       $484 = HEAP32[$483>>2]|0;
       $485 = (($482) + 16|0);
       $486 = HEAP32[$485>>2]|0;
       $487 = ($484|0)==($486|0);
       if ($487) {
        $488 = HEAP32[$482>>2]|0;
        $489 = (($488) + 36|0);
        $490 = HEAP32[$489>>2]|0;
        __THREW__ = 0;
        $491 = (invoke_ii($490|0,($482|0))|0);
        $492 = __THREW__; __THREW__ = 0;
        $493 = $492&1;
        if ($493) {
         label = 38;
         break L24;
        } else {
         $$0$i$i178 = $491;
        }
       } else {
        $494 = HEAP32[$484>>2]|0;
        $$0$i$i178 = $494;
       }
       $495 = HEAP32[$449>>2]|0;
       $496 = ($$0$i$i178|0)==($495|0);
       if (!($496)) {
        $$lcssa349 = $449;
        break;
       }
       $497 = HEAP32[$__b>>2]|0;
       $498 = (($497) + 12|0);
       $499 = HEAP32[$498>>2]|0;
       $500 = (($497) + 16|0);
       $501 = HEAP32[$500>>2]|0;
       $502 = ($499|0)==($501|0);
       if ($502) {
        $503 = HEAP32[$497>>2]|0;
        $504 = (($503) + 40|0);
        $505 = HEAP32[$504>>2]|0;
        __THREW__ = 0;
        (invoke_ii($505|0,($497|0))|0);
        $506 = __THREW__; __THREW__ = 0;
        $507 = $506&1;
        if ($507) {
         label = 38;
         break L24;
        }
       } else {
        $508 = (($499) + 4|0);
        HEAP32[$498>>2] = $508;
       }
       $509 = (($449) + 4|0);
       $$pre280 = HEAP8[$__sym>>0]|0;
       $$pre$i3$i$i190 = $$pre$i3$i$i190281;$440 = $$pre280;$449 = $509;$466 = $868;
      }
      if ($21) {
       $510 = HEAP8[$__sym>>0]|0;
       $511 = $510 & 1;
       $512 = ($511<<24>>24)==(0);
       if ($512) {
        $515 = $510&255;
        $516 = $515 >>> 1;
        $518 = $22;$519 = $516;
       } else {
        $513 = HEAP32[$23>>2]|0;
        $514 = HEAP32[$22>>2]|0;
        $518 = $513;$519 = $514;
       }
       $517 = (($518) + ($519<<2)|0);
       $520 = ($$lcssa349|0)==($517|0);
       if ($520) {
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 216;
        break L24;
       }
      } else {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 0:  {
      $123 = ($__p$0|0)==(3);
      if ($123) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       label = 60;
      }
      break;
     }
     case 3:  {
      $190 = HEAP8[$__psn>>0]|0;
      $191 = $190 & 1;
      $192 = ($191<<24>>24)==(0);
      if ($192) {
       $194 = $190&255;
       $195 = $194 >>> 1;
       $204 = $195;
      } else {
       $193 = HEAP32[$18>>2]|0;
       $204 = $193;
      }
      $196 = HEAP8[$__nsn>>0]|0;
      $197 = $196 & 1;
      $198 = ($197<<24>>24)==(0);
      if ($198) {
       $200 = $196&255;
       $201 = $200 >>> 1;
       $203 = $201;
      } else {
       $199 = HEAP32[$16>>2]|0;
       $203 = $199;
      }
      $202 = (0 - ($203))|0;
      $205 = ($204|0)==($202|0);
      if ($205) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       if ($192) {
        $207 = $190&255;
        $208 = $207 >>> 1;
        $209 = $208;
       } else {
        $206 = HEAP32[$18>>2]|0;
        $209 = $206;
       }
       $210 = ($209|0)==(0);
       if (!($210)) {
        if ($198) {
         $212 = $196&255;
         $213 = $212 >>> 1;
         $214 = $213;
        } else {
         $211 = HEAP32[$16>>2]|0;
         $214 = $211;
        }
        $215 = ($214|0)==(0);
        if (!($215)) {
         $293 = HEAP32[$__b>>2]|0;
         $294 = (($293) + 12|0);
         $295 = HEAP32[$294>>2]|0;
         $296 = (($293) + 16|0);
         $297 = HEAP32[$296>>2]|0;
         $298 = ($295|0)==($297|0);
         if ($298) {
          $299 = HEAP32[$293>>2]|0;
          $300 = (($299) + 36|0);
          $301 = HEAP32[$300>>2]|0;
          __THREW__ = 0;
          $302 = (invoke_ii($301|0,($293|0))|0);
          $303 = __THREW__; __THREW__ = 0;
          $304 = $303&1;
          if ($304) {
           label = 42;
           break L24;
          }
          $$pre279 = HEAP8[$__psn>>0]|0;
          $$0$i$i121 = $302;$307 = $$pre279;
         } else {
          $305 = HEAP32[$295>>2]|0;
          $$0$i$i121 = $305;$307 = $190;
         }
         $306 = $307 & 1;
         $308 = ($306<<24>>24)==(0);
         $309 = HEAP32[$19>>2]|0;
         $$300 = $308 ? $18 : $309;
         $310 = HEAP32[$$300>>2]|0;
         $311 = ($$0$i$i121|0)==($310|0);
         $312 = HEAP32[$__b>>2]|0;
         $313 = (($312) + 12|0);
         $314 = HEAP32[$313>>2]|0;
         $315 = (($312) + 16|0);
         $316 = HEAP32[$315>>2]|0;
         $317 = ($314|0)==($316|0);
         if ($311) {
          if ($317) {
           $318 = HEAP32[$312>>2]|0;
           $319 = (($318) + 40|0);
           $320 = HEAP32[$319>>2]|0;
           __THREW__ = 0;
           (invoke_ii($320|0,($312|0))|0);
           $321 = __THREW__; __THREW__ = 0;
           $322 = $321&1;
           if ($322) {
            label = 42;
            break L24;
           }
          } else {
           $323 = (($314) + 4|0);
           HEAP32[$313>>2] = $323;
          }
          $324 = HEAP8[$__psn>>0]|0;
          $325 = $324 & 1;
          $326 = ($325<<24>>24)==(0);
          if ($326) {
           $328 = $324&255;
           $329 = $328 >>> 1;
           $330 = $329;
          } else {
           $327 = HEAP32[$18>>2]|0;
           $330 = $327;
          }
          $331 = ($330>>>0)>(1);
          $__psn$__trailing_sign$010 = $331 ? $__psn : $__trailing_sign$0;
          $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$010;
          break L49;
         }
         if ($317) {
          $332 = HEAP32[$312>>2]|0;
          $333 = (($332) + 36|0);
          $334 = HEAP32[$333>>2]|0;
          __THREW__ = 0;
          $335 = (invoke_ii($334|0,($312|0))|0);
          $336 = __THREW__; __THREW__ = 0;
          $337 = $336&1;
          if ($337) {
           label = 42;
           break L24;
          } else {
           $$0$i$i143 = $335;
          }
         } else {
          $338 = HEAP32[$314>>2]|0;
          $$0$i$i143 = $338;
         }
         $339 = HEAP8[$__nsn>>0]|0;
         $340 = $339 & 1;
         $341 = ($340<<24>>24)==(0);
         $342 = HEAP32[$17>>2]|0;
         $$301 = $341 ? $16 : $342;
         $343 = HEAP32[$$301>>2]|0;
         $344 = ($$0$i$i143|0)==($343|0);
         if (!($344)) {
          label = 152;
          break L24;
         }
         $345 = HEAP32[$__b>>2]|0;
         $346 = (($345) + 12|0);
         $347 = HEAP32[$346>>2]|0;
         $348 = (($345) + 16|0);
         $349 = HEAP32[$348>>2]|0;
         $350 = ($347|0)==($349|0);
         if ($350) {
          $351 = HEAP32[$345>>2]|0;
          $352 = (($351) + 40|0);
          $353 = HEAP32[$352>>2]|0;
          __THREW__ = 0;
          (invoke_ii($353|0,($345|0))|0);
          $354 = __THREW__; __THREW__ = 0;
          $355 = $354&1;
          if ($355) {
           label = 42;
           break L24;
          }
         } else {
          $356 = (($347) + 4|0);
          HEAP32[$346>>2] = $356;
         }
         HEAP8[$__neg>>0] = 1;
         $357 = HEAP8[$__nsn>>0]|0;
         $358 = $357 & 1;
         $359 = ($358<<24>>24)==(0);
         if ($359) {
          $361 = $357&255;
          $362 = $361 >>> 1;
          $363 = $362;
         } else {
          $360 = HEAP32[$16>>2]|0;
          $363 = $360;
         }
         $364 = ($363>>>0)>(1);
         $__nsn$__trailing_sign$011 = $364 ? $__nsn : $__trailing_sign$0;
         $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$011;
         break L49;
        }
       }
       if ($192) {
        $217 = $190&255;
        $218 = $217 >>> 1;
        $219 = $218;
       } else {
        $216 = HEAP32[$18>>2]|0;
        $219 = $216;
       }
       $220 = ($219|0)==(0);
       $221 = HEAP32[$__b>>2]|0;
       $222 = (($221) + 12|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = (($221) + 16|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223|0)==($225|0);
       if ($220) {
        if ($226) {
         $260 = HEAP32[$221>>2]|0;
         $261 = (($260) + 36|0);
         $262 = HEAP32[$261>>2]|0;
         __THREW__ = 0;
         $263 = (invoke_ii($262|0,($221|0))|0);
         $264 = __THREW__; __THREW__ = 0;
         $265 = $264&1;
         if ($265) {
          label = 42;
          break L24;
         }
         $$pre = HEAP8[$__nsn>>0]|0;
         $$0$i$i109 = $263;$268 = $$pre;
        } else {
         $266 = HEAP32[$223>>2]|0;
         $$0$i$i109 = $266;$268 = $196;
        }
        $267 = $268 & 1;
        $269 = ($267<<24>>24)==(0);
        $270 = HEAP32[$17>>2]|0;
        $$299 = $269 ? $16 : $270;
        $271 = HEAP32[$$299>>2]|0;
        $272 = ($$0$i$i109|0)==($271|0);
        if (!($272)) {
         $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
         break L49;
        }
        $273 = HEAP32[$__b>>2]|0;
        $274 = (($273) + 12|0);
        $275 = HEAP32[$274>>2]|0;
        $276 = (($273) + 16|0);
        $277 = HEAP32[$276>>2]|0;
        $278 = ($275|0)==($277|0);
        if ($278) {
         $279 = HEAP32[$273>>2]|0;
         $280 = (($279) + 40|0);
         $281 = HEAP32[$280>>2]|0;
         __THREW__ = 0;
         (invoke_ii($281|0,($273|0))|0);
         $282 = __THREW__; __THREW__ = 0;
         $283 = $282&1;
         if ($283) {
          label = 42;
          break L24;
         }
        } else {
         $284 = (($275) + 4|0);
         HEAP32[$274>>2] = $284;
        }
        HEAP8[$__neg>>0] = 1;
        $285 = HEAP8[$__nsn>>0]|0;
        $286 = $285 & 1;
        $287 = ($286<<24>>24)==(0);
        if ($287) {
         $289 = $285&255;
         $290 = $289 >>> 1;
         $291 = $290;
        } else {
         $288 = HEAP32[$16>>2]|0;
         $291 = $288;
        }
        $292 = ($291>>>0)>(1);
        $__nsn$__trailing_sign$0 = $292 ? $__nsn : $__trailing_sign$0;
        $865 = $862;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L49;
       }
       if ($226) {
        $227 = HEAP32[$221>>2]|0;
        $228 = (($227) + 36|0);
        $229 = HEAP32[$228>>2]|0;
        __THREW__ = 0;
        $230 = (invoke_ii($229|0,($221|0))|0);
        $231 = __THREW__; __THREW__ = 0;
        $232 = $231&1;
        if ($232) {
         label = 42;
         break L24;
        }
        $$pre278 = HEAP8[$__psn>>0]|0;
        $$0$i$i88 = $230;$235 = $$pre278;
       } else {
        $233 = HEAP32[$223>>2]|0;
        $$0$i$i88 = $233;$235 = $190;
       }
       $234 = $235 & 1;
       $236 = ($234<<24>>24)==(0);
       $237 = HEAP32[$19>>2]|0;
       $$ = $236 ? $18 : $237;
       $238 = HEAP32[$$>>2]|0;
       $239 = ($$0$i$i88|0)==($238|0);
       if (!($239)) {
        HEAP8[$__neg>>0] = 1;
        $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
        break L49;
       }
       $240 = HEAP32[$__b>>2]|0;
       $241 = (($240) + 12|0);
       $242 = HEAP32[$241>>2]|0;
       $243 = (($240) + 16|0);
       $244 = HEAP32[$243>>2]|0;
       $245 = ($242|0)==($244|0);
       if ($245) {
        $246 = HEAP32[$240>>2]|0;
        $247 = (($246) + 40|0);
        $248 = HEAP32[$247>>2]|0;
        __THREW__ = 0;
        (invoke_ii($248|0,($240|0))|0);
        $249 = __THREW__; __THREW__ = 0;
        $250 = $249&1;
        if ($250) {
         label = 42;
         break L24;
        }
       } else {
        $251 = (($242) + 4|0);
        HEAP32[$241>>2] = $251;
       }
       $252 = HEAP8[$__psn>>0]|0;
       $253 = $252 & 1;
       $254 = ($253<<24>>24)==(0);
       if ($254) {
        $256 = $252&255;
        $257 = $256 >>> 1;
        $258 = $257;
       } else {
        $255 = HEAP32[$18>>2]|0;
        $258 = $255;
       }
       $259 = ($258>>>0)>(1);
       $__psn$__trailing_sign$0 = $259 ? $__psn : $__trailing_sign$0;
       $865 = $862;$__trailing_sign$1 = $__psn$__trailing_sign$0;
      }
      break;
     }
     case 1:  {
      $cond = ($__p$0|0)==(3);
      if ($cond) {
       $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $86 = HEAP32[$__b>>2]|0;
       $87 = (($86) + 12|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = (($86) + 16|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ($88|0)==($90|0);
       if ($91) {
        $92 = HEAP32[$86>>2]|0;
        $93 = (($92) + 36|0);
        $94 = HEAP32[$93>>2]|0;
        __THREW__ = 0;
        $95 = (invoke_ii($94|0,($86|0))|0);
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         label = 42;
         break L24;
        } else {
         $$0$i$i45 = $95;
        }
       } else {
        $98 = HEAP32[$88>>2]|0;
        $$0$i$i45 = $98;
       }
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iiii($101|0,($__ct|0),8192,($$0$i$i45|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 42;
        break L24;
       }
       if (!($102)) {
        label = 58;
        break L24;
       }
       $105 = HEAP32[$__b>>2]|0;
       $106 = (($105) + 12|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = (($105) + 16|0);
       $109 = HEAP32[$108>>2]|0;
       $110 = ($107|0)==($109|0);
       if ($110) {
        $111 = HEAP32[$105>>2]|0;
        $112 = (($111) + 40|0);
        $113 = HEAP32[$112>>2]|0;
        __THREW__ = 0;
        $114 = (invoke_ii($113|0,($105|0))|0);
        $115 = __THREW__; __THREW__ = 0;
        $116 = $115&1;
        if ($116) {
         label = 42;
         break L24;
        } else {
         $$0$i$i49 = $114;
        }
       } else {
        $117 = (($107) + 4|0);
        HEAP32[$106>>2] = $117;
        $118 = HEAP32[$107>>2]|0;
        $$0$i$i49 = $118;
       }
       __THREW__ = 0;
       invoke_vii(485,($__spaces|0),($$0$i$i49|0));
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if ($120) {
        label = 42;
        break L24;
       } else {
        label = 60;
       }
      }
      break;
     }
     default: {
      $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    if ((label|0) == 60) {
     label = 0;
     $$pre$i3$i$i59 = $864;$139 = $864;
     L375: while(1) {
      $124 = HEAP32[$__b>>2]|0;
      $125 = ($124|0)==(0|0);
      do {
       if ($125) {
        $154 = 1;
       } else {
        $126 = (($124) + 12|0);
        $127 = HEAP32[$126>>2]|0;
        $128 = (($124) + 16|0);
        $129 = HEAP32[$128>>2]|0;
        $130 = ($127|0)==($129|0);
        if ($130) {
         $131 = HEAP32[$124>>2]|0;
         $132 = (($131) + 36|0);
         $133 = HEAP32[$132>>2]|0;
         __THREW__ = 0;
         $134 = (invoke_ii($133|0,($124|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if ($136) {
          label = 37;
          break L24;
         } else {
          $$0$i$i$i$i51 = $134;
         }
        } else {
         $137 = HEAP32[$127>>2]|0;
         $$0$i$i$i$i51 = $137;
        }
        $138 = ($$0$i$i$i$i51|0)==(-1);
        if ($138) {
         HEAP32[$__b>>2] = 0;
         $154 = 1;
         break;
        } else {
         $$pre$i$i$i53 = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i54 = ($$pre$i$i$i53|0)==(0|0);
         $154 = $phitmp$i$i$i54;
         break;
        }
       }
      } while(0);
      $140 = ($139|0)==(0|0);
      do {
       if ($140) {
        $$pre$i3$i$i59275 = $$pre$i3$i$i59;
        label = 74;
       } else {
        $141 = (($139) + 12|0);
        $142 = HEAP32[$141>>2]|0;
        $143 = (($139) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($142|0)==($144|0);
        if ($145) {
         $146 = HEAP32[$139>>2]|0;
         $147 = (($146) + 36|0);
         $148 = HEAP32[$147>>2]|0;
         __THREW__ = 0;
         $149 = (invoke_ii($148|0,($139|0))|0);
         $150 = __THREW__; __THREW__ = 0;
         $151 = $150&1;
         if ($151) {
          label = 37;
          break L24;
         } else {
          $$0$i$i1$i$i57 = $149;
         }
        } else {
         $152 = HEAP32[$142>>2]|0;
         $$0$i$i1$i$i57 = $152;
        }
        $153 = ($$0$i$i1$i$i57|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         $$pre$i3$i$i59275 = 0;
         label = 74;
         break;
        } else {
         $phitmp$i4$i$i60 = ($$pre$i3$i$i59|0)==(0|0);
         $tmp$i$i62 = $154 ^ $phitmp$i4$i$i60;
         if ($tmp$i$i62) {
          $$pre$i3$i$i59277 = $$pre$i3$i$i59;$866 = $$pre$i3$i$i59;
          break;
         } else {
          break L375;
         }
        }
       }
      } while(0);
      if ((label|0) == 74) {
       label = 0;
       if ($154) {
        break;
       } else {
        $$pre$i3$i$i59277 = $$pre$i3$i$i59275;$866 = 0;
       }
      }
      $155 = HEAP32[$__b>>2]|0;
      $156 = (($155) + 12|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = (($155) + 16|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($157|0)==($159|0);
      if ($160) {
       $161 = HEAP32[$155>>2]|0;
       $162 = (($161) + 36|0);
       $163 = HEAP32[$162>>2]|0;
       __THREW__ = 0;
       $164 = (invoke_ii($163|0,($155|0))|0);
       $165 = __THREW__; __THREW__ = 0;
       $166 = $165&1;
       if ($166) {
        label = 37;
        break L24;
       } else {
        $$0$i$i66 = $164;
       }
      } else {
       $167 = HEAP32[$157>>2]|0;
       $$0$i$i66 = $167;
      }
      $168 = HEAP32[$__ct>>2]|0;
      $169 = (($168) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      __THREW__ = 0;
      $171 = (invoke_iiii($170|0,($__ct|0),8192,($$0$i$i66|0))|0);
      $172 = __THREW__; __THREW__ = 0;
      $173 = $172&1;
      if ($173) {
       label = 37;
       break L24;
      }
      if (!($171)) {
       break;
      }
      $174 = HEAP32[$__b>>2]|0;
      $175 = (($174) + 12|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = (($174) + 16|0);
      $178 = HEAP32[$177>>2]|0;
      $179 = ($176|0)==($178|0);
      if ($179) {
       $180 = HEAP32[$174>>2]|0;
       $181 = (($180) + 40|0);
       $182 = HEAP32[$181>>2]|0;
       __THREW__ = 0;
       $183 = (invoke_ii($182|0,($174|0))|0);
       $184 = __THREW__; __THREW__ = 0;
       $185 = $184&1;
       if ($185) {
        label = 37;
        break L24;
       } else {
        $$0$i$i72 = $183;
       }
      } else {
       $186 = (($176) + 4|0);
       HEAP32[$175>>2] = $186;
       $187 = HEAP32[$176>>2]|0;
       $$0$i$i72 = $187;
      }
      __THREW__ = 0;
      invoke_vii(485,($__spaces|0),($$0$i$i72|0));
      $188 = __THREW__; __THREW__ = 0;
      $189 = $188&1;
      if ($189) {
       label = 37;
       break L24;
      } else {
       $$pre$i3$i$i59 = $$pre$i3$i$i59277;$139 = $866;
      }
     }
     $865 = $862;$__trailing_sign$1 = $__trailing_sign$0;
    }
    $771 = (($__p$0) + 1)|0;
    $862 = $865;$__p$0 = $771;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L411:    switch (label|0) {
    case 37: {
     $65 = ___cxa_find_matching_catch()|0;
     $66 = tempRet0;
     $lpad$phi$index = $65;$lpad$phi$index8 = $66;
     break L21;
     break;
    }
    case 38: {
     $67 = ___cxa_find_matching_catch()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index8 = $68;
     break L21;
     break;
    }
    case 39: {
     $69 = ___cxa_find_matching_catch()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index8 = $70;
     break L21;
     break;
    }
    case 40: {
     $71 = ___cxa_find_matching_catch()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index8 = $72;
     break L21;
     break;
    }
    case 41: {
     $73 = ___cxa_find_matching_catch()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index8 = $74;
     break L21;
     break;
    }
    case 42: {
     $75 = ___cxa_find_matching_catch()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index8 = $76;
     break L21;
     break;
    }
    case 58: {
     $121 = HEAP32[$__err>>2]|0;
     $122 = $121 | 4;
     HEAP32[$__err>>2] = $122;
     $$0 = 0;
     break;
    }
    case 152: {
     $365 = HEAP32[$__err>>2]|0;
     $366 = $365 | 4;
     HEAP32[$__err>>2] = $366;
     $$0 = 0;
     break;
    }
    case 216: {
     $521 = HEAP32[$__err>>2]|0;
     $522 = $521 | 4;
     HEAP32[$__err>>2] = $522;
     $$0 = 0;
     break;
    }
    case 278: {
     $665 = HEAP32[$__err>>2]|0;
     $666 = $665 | 4;
     HEAP32[$__err>>2] = $666;
     $$0 = 0;
     break;
    }
    case 304: {
     $731 = HEAP32[$__err>>2]|0;
     $732 = $731 | 4;
     HEAP32[$__err>>2] = $732;
     $$0 = 0;
     break;
    }
    case 316: {
     $769 = HEAP32[$__err>>2]|0;
     $770 = $769 | 4;
     HEAP32[$__err>>2] = $770;
     $$0 = 0;
     break;
    }
    case 319: {
     $772 = ($__trailing_sign$0$lcssa|0)==(0|0);
     do {
      if (!($772)) {
       $773 = (($__trailing_sign$0$lcssa) + 4|0);
       $774 = (($__trailing_sign$0$lcssa) + 8|0);
       $__i$0 = 1;
       L427: while(1) {
        $775 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $776 = $775 & 1;
        $777 = ($776<<24>>24)==(0);
        if ($777) {
         $779 = $775&255;
         $780 = $779 >>> 1;
         $782 = $780;
        } else {
         $778 = HEAP32[$773>>2]|0;
         $782 = $778;
        }
        $781 = ($__i$0>>>0)<($782>>>0);
        if (!($781)) {
         label = 351;
         break;
        }
        $783 = HEAP32[$__b>>2]|0;
        $784 = ($783|0)==(0|0);
        do {
         if ($784) {
          $877 = 1;
         } else {
          $785 = (($783) + 12|0);
          $786 = HEAP32[$785>>2]|0;
          $787 = (($783) + 16|0);
          $788 = HEAP32[$787>>2]|0;
          $789 = ($786|0)==($788|0);
          if ($789) {
           $790 = HEAP32[$783>>2]|0;
           $791 = (($790) + 36|0);
           $792 = HEAP32[$791>>2]|0;
           __THREW__ = 0;
           $793 = (invoke_ii($792|0,($783|0))|0);
           $794 = __THREW__; __THREW__ = 0;
           $795 = $794&1;
           if ($795) {
            label = 36;
            break L427;
           } else {
            $$0$i$i$i$i = $793;
           }
          } else {
           $796 = HEAP32[$786>>2]|0;
           $$0$i$i$i$i = $796;
          }
          $797 = ($$0$i$i$i$i|0)==(-1);
          if ($797) {
           HEAP32[$__b>>2] = 0;
           $877 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $877 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $798 = HEAP32[$__e>>2]|0;
        $799 = ($798|0)==(0|0);
        do {
         if ($799) {
          label = 338;
         } else {
          $800 = (($798) + 12|0);
          $801 = HEAP32[$800>>2]|0;
          $802 = (($798) + 16|0);
          $803 = HEAP32[$802>>2]|0;
          $804 = ($801|0)==($803|0);
          if ($804) {
           $805 = HEAP32[$798>>2]|0;
           $806 = (($805) + 36|0);
           $807 = HEAP32[$806>>2]|0;
           __THREW__ = 0;
           $808 = (invoke_ii($807|0,($798|0))|0);
           $809 = __THREW__; __THREW__ = 0;
           $810 = $809&1;
           if ($810) {
            label = 36;
            break L427;
           } else {
            $$0$i$i1$i$i = $808;
           }
          } else {
           $811 = HEAP32[$801>>2]|0;
           $$0$i$i1$i$i = $811;
          }
          $812 = ($$0$i$i1$i$i|0)==(-1);
          if ($812) {
           HEAP32[$__e>>2] = 0;
           label = 338;
           break;
          } else {
           if ($877) {
            break;
           } else {
            label = 346;
            break L427;
           }
          }
         }
        } while(0);
        if ((label|0) == 338) {
         label = 0;
         if ($877) {
          label = 346;
          break;
         }
        }
        $813 = HEAP32[$__b>>2]|0;
        $814 = (($813) + 12|0);
        $815 = HEAP32[$814>>2]|0;
        $816 = (($813) + 16|0);
        $817 = HEAP32[$816>>2]|0;
        $818 = ($815|0)==($817|0);
        if ($818) {
         $819 = HEAP32[$813>>2]|0;
         $820 = (($819) + 36|0);
         $821 = HEAP32[$820>>2]|0;
         __THREW__ = 0;
         $822 = (invoke_ii($821|0,($813|0))|0);
         $823 = __THREW__; __THREW__ = 0;
         $824 = $823&1;
         if ($824) {
          label = 36;
          break;
         } else {
          $$0$i$i = $822;
         }
        } else {
         $825 = HEAP32[$815>>2]|0;
         $$0$i$i = $825;
        }
        $826 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $827 = $826 & 1;
        $828 = ($827<<24>>24)==(0);
        if ($828) {
         $831 = $773;
        } else {
         $829 = HEAP32[$774>>2]|0;
         $831 = $829;
        }
        $830 = (($831) + ($__i$0<<2)|0);
        $832 = HEAP32[$830>>2]|0;
        $833 = ($$0$i$i|0)==($832|0);
        if (!($833)) {
         label = 346;
         break;
        }
        $836 = (($__i$0) + 1)|0;
        $837 = HEAP32[$__b>>2]|0;
        $838 = (($837) + 12|0);
        $839 = HEAP32[$838>>2]|0;
        $840 = (($837) + 16|0);
        $841 = HEAP32[$840>>2]|0;
        $842 = ($839|0)==($841|0);
        if ($842) {
         $843 = HEAP32[$837>>2]|0;
         $844 = (($843) + 40|0);
         $845 = HEAP32[$844>>2]|0;
         __THREW__ = 0;
         (invoke_ii($845|0,($837|0))|0);
         $846 = __THREW__; __THREW__ = 0;
         $847 = $846&1;
         if ($847) {
          label = 36;
          break;
         }
        } else {
         $848 = (($839) + 4|0);
         HEAP32[$838>>2] = $848;
        }
        $__i$0 = $836;
       }
       if ((label|0) == 36) {
        $63 = ___cxa_find_matching_catch()|0;
        $64 = tempRet0;
        $lpad$phi$index = $63;$lpad$phi$index8 = $64;
        break L21;
       }
       else if ((label|0) == 346) {
        $834 = HEAP32[$__err>>2]|0;
        $835 = $834 | 4;
        HEAP32[$__err>>2] = $835;
        $$0 = 0;
        break L411;
       }
       else if ((label|0) == 351) {
        break;
       }
      }
     } while(0);
     $849 = HEAP32[$__gb>>2]|0;
     $850 = ($849|0)==($$lcssa351|0);
     if ($850) {
      $$0 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$849,$$lcssa351,$__et);
      $851 = HEAP32[$__et>>2]|0;
      $852 = ($851|0)==(0);
      if ($852) {
       $$0 = 1;
      } else {
       $853 = HEAP32[$__err>>2]|0;
       $854 = $853 | 4;
       HEAP32[$__err>>2] = $854;
       $$0 = 0;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $855 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $856 = ($855|0)==(0|0);
   if (!($856)) {
    $857 = HEAP32[$1>>2]|0;
    __THREW__ = 0;
    invoke_vi($857|0,($855|0));
    $858 = __THREW__; __THREW__ = 0;
    $859 = $858&1;
    if ($859) {
     $860 = ___cxa_find_matching_catch(0|0)|0;
     $861 = tempRet0;
     ___clang_call_terminate($860);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$010 = 0, $$017 = 0, $$018 = 0, $$09 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 HEAP32[$__wb>>2] = $__wbuf;
 $1 = (($__wb) + 4|0);
 HEAP32[$1>>2] = 475;
 $2 = (($__wbuf) + 400|0);
 __THREW__ = 0;
 invoke_vii(457,($__loc|0),($__iob|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $30 = ___cxa_find_matching_catch()|0;
  $31 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$017 = $31;$$09 = $30;$92 = $__wbuf;
  label = 39;
 } else {
  __THREW__ = 0;
  $5 = (invoke_iii(454,($__loc|0),(7016|0))|0);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  L4: do {
   if (!($7)) {
    HEAP8[$__neg>>0] = 0;
    $8 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $8;
    $9 = (($__iob) + 4|0);
    $10 = HEAP32[$9>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
    $11 = (invoke_iiiiiiiiiiii(483,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($10|0),($__err|0),($__neg|0),($5|0),($__wb|0),($__wn|0),($2|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     if ($11) {
      $14 = HEAP8[$__v>>0]|0;
      $15 = $14 & 1;
      $16 = ($15<<24>>24)==(0);
      if ($16) {
       HEAP8[$__v>>0] = 0;
      } else {
       $17 = (($__v) + 8|0);
       $18 = HEAP32[$17>>2]|0;
       HEAP32[$18>>2] = 0;
      }
      $19 = (($__v) + 4|0);
      HEAP32[$19>>2] = 0;
      $20 = HEAP8[$__neg>>0]|0;
      $21 = ($20<<24>>24)==(0);
      if (!($21)) {
       $22 = HEAP32[$5>>2]|0;
       $23 = (($22) + 44|0);
       $24 = HEAP32[$23>>2]|0;
       __THREW__ = 0;
       $25 = (invoke_iii($24|0,($5|0),45)|0);
       $26 = __THREW__; __THREW__ = 0;
       $27 = $26&1;
       if ($27) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(485,($__v|0),($25|0));
       $28 = __THREW__; __THREW__ = 0;
       $29 = $28&1;
       if ($29) {
        break;
       }
      }
      $32 = HEAP32[$5>>2]|0;
      $33 = (($32) + 44|0);
      $34 = HEAP32[$33>>2]|0;
      __THREW__ = 0;
      $35 = (invoke_iii($34|0,($5|0),48)|0);
      $36 = __THREW__; __THREW__ = 0;
      $37 = $36&1;
      if ($37) {
       break;
      }
      $38 = HEAP32[$__wb>>2]|0;
      $39 = HEAP32[$__wn>>2]|0;
      $40 = (($39) + -4|0);
      $__w$0 = $38;
      while(1) {
       $41 = ($__w$0>>>0)<($40>>>0);
       if (!($41)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $42 = HEAP32[$__w$0>>2]|0;
       $43 = ($42|0)==($35|0);
       if (!($43)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $44 = (($__w$0) + 4|0);
       $__w$0 = $44;
      }
      __THREW__ = 0;
      (invoke_iiii(487,($__v|0),($__w$0$lcssa|0),($39|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       break;
      }
     }
     $47 = HEAP32[$__b>>2]|0;
     $48 = ($47|0)==(0|0);
     do {
      if ($48) {
       $97 = 1;
      } else {
       $49 = (($47) + 12|0);
       $50 = HEAP32[$49>>2]|0;
       $51 = (($47) + 16|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = ($50|0)==($52|0);
       if ($53) {
        $54 = HEAP32[$47>>2]|0;
        $55 = (($54) + 36|0);
        $56 = HEAP32[$55>>2]|0;
        __THREW__ = 0;
        $57 = (invoke_ii($56|0,($47|0))|0);
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         break L4;
        } else {
         $$0$i$i$i$i = $57;
        }
       } else {
        $60 = HEAP32[$50>>2]|0;
        $$0$i$i$i$i = $60;
       }
       $61 = ($$0$i$i$i$i|0)==(-1);
       if ($61) {
        HEAP32[$__b>>2] = 0;
        $97 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $97 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $62 = ($8|0)==(0|0);
     do {
      if ($62) {
       label = 31;
      } else {
       $63 = (($8) + 12|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($8) + 16|0);
       $66 = HEAP32[$65>>2]|0;
       $67 = ($64|0)==($66|0);
       if ($67) {
        $68 = HEAP32[$8>>2]|0;
        $69 = (($68) + 36|0);
        $70 = HEAP32[$69>>2]|0;
        __THREW__ = 0;
        $71 = (invoke_ii($70|0,($8|0))|0);
        $72 = __THREW__; __THREW__ = 0;
        $73 = $72&1;
        if ($73) {
         break L4;
        } else {
         $$0$i$i1$i$i = $71;
        }
       } else {
        $74 = HEAP32[$64>>2]|0;
        $$0$i$i1$i$i = $74;
       }
       $75 = ($$0$i$i1$i$i|0)==(-1);
       if ($75) {
        HEAP32[$__e>>2] = 0;
        label = 31;
        break;
       } else {
        if ($97) {
         break;
        } else {
         label = 33;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      if ($97) {
       label = 33;
      }
     }
     if ((label|0) == 33) {
      $76 = HEAP32[$__err>>2]|0;
      $77 = $76 | 2;
      HEAP32[$__err>>2] = $77;
     }
     $78 = HEAP32[$__b>>2]|0;
     HEAP32[$agg$result>>2] = $78;
     $79 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($79)|0);
     $80 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $81 = ($80|0)==(0|0);
     if (!($81)) {
      $82 = HEAP32[$1>>2]|0;
      __THREW__ = 0;
      invoke_vi($82|0,($80|0));
      $83 = __THREW__; __THREW__ = 0;
      $84 = $83&1;
      if ($84) {
       $85 = ___cxa_find_matching_catch(0|0)|0;
       $86 = tempRet0;
       ___clang_call_terminate($85);
       // unreachable;
      }
     }
     STACKTOP = sp;return;
    }
   }
  } while(0);
  $87 = ___cxa_find_matching_catch()|0;
  $88 = tempRet0;
  $89 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($89)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $90 = ($$pre|0)==(0|0);
  if ($90) {
   $$010 = $87;$$018 = $88;
  } else {
   $$017 = $88;$$09 = $87;$92 = $$pre;
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $91 = HEAP32[$1>>2]|0;
  __THREW__ = 0;
  invoke_vi($91|0,($92|0));
  $93 = __THREW__; __THREW__ = 0;
  $94 = $93&1;
  if ($94) {
   $95 = ___cxa_find_matching_catch(0|0)|0;
   $96 = tempRet0;
   ___clang_call_terminate($95);
   // unreachable;
  } else {
   $$010 = $$09;$$018 = $$017;
  }
 }
 ___resumeException($$010|0);
 // unreachable;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0;
 var $exitcond$i$i$i5 = 0, $exitcond$i$i$i8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6592)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = (($__nsn) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = (($__nsn) + 4|0);
  HEAP32[$23>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $26 = ___cxa_find_matching_catch(0|0)|0;
   $27 = tempRet0;
   ___clang_call_terminate($26);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $28 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$28>>2] = 0;
   $29 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $29;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $30 = HEAP32[$10>>2]|0;
  $31 = (($30) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
  $33 = HEAP8[$__psn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $36 = (($__psn) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   HEAP32[$37>>2] = 0;
  }
  $38 = (($__psn) + 4|0);
  HEAP32[$38>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $39 = __THREW__; __THREW__ = 0;
  $40 = $39&1;
  if ($40) {
   $41 = ___cxa_find_matching_catch(0|0)|0;
   $42 = tempRet0;
   ___clang_call_terminate($41);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $43 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$43>>2] = 0;
   $44 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $44;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $45 = HEAP32[$10>>2]|0;
  $46 = (($45) + 12|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
  HEAP32[$__dp>>2] = $48;
  $49 = HEAP32[$10>>2]|0;
  $50 = (($49) + 16|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
  HEAP32[$__ts>>2] = $52;
  $53 = HEAP32[$10>>2]|0;
  $54 = (($53) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
  $56 = HEAP8[$__grp>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)==(0);
  if ($58) {
   $62 = (($__grp) + 1|0);
   HEAP8[$62>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $59 = (($__grp) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   HEAP8[$60>>0] = 0;
   $61 = (($__grp) + 4|0);
   HEAP32[$61>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   $65 = ___cxa_find_matching_catch(0|0)|0;
   $66 = tempRet0;
   ___clang_call_terminate($65);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i7 = 0;
  while(1) {
   $exitcond$i$i$i8 = ($__i$0$i$i$i7|0)==(3);
   if ($exitcond$i$i$i8) {
    break;
   }
   $67 = (($3) + ($__i$0$i$i$i7<<2)|0);
   HEAP32[$67>>2] = 0;
   $68 = (($__i$0$i$i$i7) + 1)|0;
   $__i$0$i$i$i7 = $68;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $69 = HEAP32[$10>>2]|0;
  $70 = (($69) + 24|0);
  $71 = HEAP32[$70>>2]|0;
  FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
  $72 = HEAP8[$__sym>>0]|0;
  $73 = $72 & 1;
  $74 = ($73<<24>>24)==(0);
  if ($74) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $75 = (($__sym) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   HEAP32[$76>>2] = 0;
  }
  $77 = (($__sym) + 4|0);
  HEAP32[$77>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $78 = __THREW__; __THREW__ = 0;
  $79 = $78&1;
  if ($79) {
   $80 = ___cxa_find_matching_catch(0|0)|0;
   $81 = tempRet0;
   ___clang_call_terminate($80);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $82 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$82>>2] = 0;
   $83 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $83;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $84 = HEAP32[$10>>2]|0;
  $85 = (($84) + 36|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
  $storemerge = $87;
 } else {
  $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6528)|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (($89) + 44|0);
  $91 = HEAP32[$90>>2]|0;
  FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
  $92 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
  $93 = HEAP32[$88>>2]|0;
  $94 = (($93) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
  $96 = HEAP8[$__nsn>>0]|0;
  $97 = $96 & 1;
  $98 = ($97<<24>>24)==(0);
  if ($98) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $99 = (($__nsn) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   HEAP32[$100>>2] = 0;
  }
  $101 = (($__nsn) + 4|0);
  HEAP32[$101>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__nsn|0),0);
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   $104 = ___cxa_find_matching_catch(0|0)|0;
   $105 = tempRet0;
   ___clang_call_terminate($104);
   // unreachable;
  }
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $106 = (($6) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$106>>2] = 0;
   $107 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $107;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $108 = HEAP32[$88>>2]|0;
  $109 = (($108) + 28|0);
  $110 = HEAP32[$109>>2]|0;
  FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
  $111 = HEAP8[$__psn>>0]|0;
  $112 = $111 & 1;
  $113 = ($112<<24>>24)==(0);
  if ($113) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $114 = (($__psn) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   HEAP32[$115>>2] = 0;
  }
  $116 = (($__psn) + 4|0);
  HEAP32[$116>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__psn|0),0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $119 = ___cxa_find_matching_catch(0|0)|0;
   $120 = tempRet0;
   ___clang_call_terminate($119);
   // unreachable;
  }
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i21 = 0;
  while(1) {
   $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
   if ($exitcond$i$i$i22) {
    break;
   }
   $121 = (($7) + ($__i$0$i$i$i21<<2)|0);
   HEAP32[$121>>2] = 0;
   $122 = (($__i$0$i$i$i21) + 1)|0;
   $__i$0$i$i$i21 = $122;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $123 = HEAP32[$88>>2]|0;
  $124 = (($123) + 12|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
  HEAP32[$__dp>>2] = $126;
  $127 = HEAP32[$88>>2]|0;
  $128 = (($127) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
  HEAP32[$__ts>>2] = $130;
  $131 = HEAP32[$88>>2]|0;
  $132 = (($131) + 20|0);
  $133 = HEAP32[$132>>2]|0;
  FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
  $134 = HEAP8[$__grp>>0]|0;
  $135 = $134 & 1;
  $136 = ($135<<24>>24)==(0);
  if ($136) {
   $140 = (($__grp) + 1|0);
   HEAP8[$140>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $137 = (($__grp) + 8|0);
   $138 = HEAP32[$137>>2]|0;
   HEAP8[$138>>0] = 0;
   $139 = (($__grp) + 4|0);
   HEAP32[$139>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $141 = __THREW__; __THREW__ = 0;
  $142 = $141&1;
  if ($142) {
   $143 = ___cxa_find_matching_catch(0|0)|0;
   $144 = tempRet0;
   ___clang_call_terminate($143);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i26 = 0;
  while(1) {
   $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
   if ($exitcond$i$i$i27) {
    break;
   }
   $145 = (($8) + ($__i$0$i$i$i26<<2)|0);
   HEAP32[$145>>2] = 0;
   $146 = (($__i$0$i$i$i26) + 1)|0;
   $__i$0$i$i$i26 = $146;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $147 = HEAP32[$88>>2]|0;
  $148 = (($147) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
  $150 = HEAP8[$__sym>>0]|0;
  $151 = $150 & 1;
  $152 = ($151<<24>>24)==(0);
  if ($152) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $153 = (($__sym) + 8|0);
   $154 = HEAP32[$153>>2]|0;
   HEAP32[$154>>2] = 0;
  }
  $155 = (($__sym) + 4|0);
  HEAP32[$155>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $156 = __THREW__; __THREW__ = 0;
  $157 = $156&1;
  if ($157) {
   $158 = ___cxa_find_matching_catch(0|0)|0;
   $159 = tempRet0;
   ___clang_call_terminate($158);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $160 = (($9) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$160>>2] = 0;
   $161 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $161;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $162 = HEAP32[$88>>2]|0;
  $163 = (($162) + 36|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
  $storemerge = $165;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0;
 var $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i10 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6776,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $118 = 0;$119 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6776|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $118 = 0;$119 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $118 = 0;$119 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $120 = $$pre;
     } else {
      $120 = $9;
     }
     $15 = (_malloc($6)|0);
     $16 = ($15|0)==(0|0);
     if ($16) {
      __THREW__ = 0;
      invoke_v(465);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if ($18) {
       $118 = $120;$119 = 0;
       label = 7;
      } else {
       $113 = 0;$114 = $120;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $113 = $15;$114 = $120;$__db$0 = $15;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $113 = 0;$114 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if ($20) {
   $118 = $114;$119 = $113;
   label = 7;
  } else {
   __THREW__ = 0;
   $21 = (invoke_iii(454,($__loc|0),(7024|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    label = 44;
   } else {
    $24 = HEAP32[$__bb>>2]|0;
    $25 = (($24) + ($__n$0)|0);
    $26 = HEAP32[$21>>2]|0;
    $27 = (($26) + 32|0);
    $28 = HEAP32[$27>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($28|0,($21|0),($24|0),($25|0),($__db$0|0))|0);
    $29 = __THREW__; __THREW__ = 0;
    $30 = $29&1;
    if ($30) {
     label = 44;
    } else {
     $31 = ($__n$0|0)==(0);
     if ($31) {
      $41 = 0;
     } else {
      $32 = HEAP32[$__bb>>2]|0;
      $33 = HEAP8[$32>>0]|0;
      $34 = ($33<<24>>24)==(45);
      $41 = $34;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $35 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$35>>2] = 0;
      $36 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $36;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $37 = (($__sym) + ($__i$0$i$i6<<2)|0);
      HEAP32[$37>>2] = 0;
      $38 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $38;
     }
     $__i$0$i$i9 = 0;
     while(1) {
      $exitcond$i$i10 = ($__i$0$i$i9|0)==(3);
      if ($exitcond$i$i10) {
       break;
      }
      $39 = (($__sn) + ($__i$0$i$i9<<2)|0);
      HEAP32[$39>>2] = 0;
      $40 = (($__i$0$i$i9) + 1)|0;
      $__i$0$i$i9 = $40;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(489,($__intl|0),($41|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     do {
      if ($43) {
       $95 = ___cxa_find_matching_catch()|0;
       $96 = tempRet0;
       $$0 = $95;$$01 = $96;
      } else {
       $44 = HEAP32[$__fd>>2]|0;
       $45 = ($__n$0|0)>($44|0);
       if ($45) {
        $46 = (($__n$0) - ($44))|0;
        $47 = $46 << 1;
        $48 = HEAP8[$__sn>>0]|0;
        $49 = $48 & 1;
        $50 = ($49<<24>>24)==(0);
        if ($50) {
         $53 = $48&255;
         $54 = $53 >>> 1;
         $64 = $54;
        } else {
         $51 = (($__sn) + 4|0);
         $52 = HEAP32[$51>>2]|0;
         $64 = $52;
        }
        $55 = HEAP8[$__sym>>0]|0;
        $56 = $55 & 1;
        $57 = ($56<<24>>24)==(0);
        if ($57) {
         $60 = $55&255;
         $61 = $60 >>> 1;
         $66 = $61;
        } else {
         $58 = (($__sym) + 4|0);
         $59 = HEAP32[$58>>2]|0;
         $66 = $59;
        }
        $62 = $47 | 1;
        $63 = (($64) + ($62))|0;
        $65 = (($63) + ($66))|0;
        $$pn = $65;
       } else {
        $67 = HEAP8[$__sn>>0]|0;
        $68 = $67 & 1;
        $69 = ($68<<24>>24)==(0);
        if ($69) {
         $72 = $67&255;
         $73 = $72 >>> 1;
         $82 = $73;
        } else {
         $70 = (($__sn) + 4|0);
         $71 = HEAP32[$70>>2]|0;
         $82 = $71;
        }
        $74 = HEAP8[$__sym>>0]|0;
        $75 = $74 & 1;
        $76 = ($75<<24>>24)==(0);
        if ($76) {
         $79 = $74&255;
         $80 = $79 >>> 1;
         $84 = $80;
        } else {
         $77 = (($__sym) + 4|0);
         $78 = HEAP32[$77>>2]|0;
         $84 = $78;
        }
        $81 = (($82) + 2)|0;
        $83 = (($81) + ($84))|0;
        $$pn = $83;
       }
       $85 = (($$pn) + ($44))|0;
       $86 = ($85>>>0)>(100);
       if ($86) {
        $87 = (_malloc($85)|0);
        $88 = ($87|0)==(0|0);
        if ($88) {
         __THREW__ = 0;
         invoke_v(465);
         $89 = __THREW__; __THREW__ = 0;
         $90 = $89&1;
         if ($90) {
          $91 = ___cxa_find_matching_catch()|0;
          $92 = tempRet0;
          $$0 = $91;$$01 = $92;
          break;
         } else {
          $99 = 0;$__mb$0 = 0;
         }
        } else {
         $99 = $87;$__mb$0 = $87;
        }
       } else {
        $99 = 0;$__mb$0 = $__mbuf;
       }
       $100 = (($__iob) + 4|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = (($__db$0) + ($__n$0)|0);
       $103 = HEAP8[$__dp>>0]|0;
       $104 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($101|0),($__db$0|0),($102|0),($21|0),($41|0),($__pat|0),($103|0),($104|0),($__grp|0),($__sym|0),($__sn|0),($44|0));
       $105 = __THREW__; __THREW__ = 0;
       $106 = $105&1;
       if (!($106)) {
        $107 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $107;
        $108 = HEAP32[$__mi>>2]|0;
        $109 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($108|0),($109|0),($__iob|0),($__fl|0));
        $110 = __THREW__; __THREW__ = 0;
        $111 = $110&1;
        if (!($111)) {
         _free($99);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $112 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($112)|0);
         _free($113);
         _free($114);
         STACKTOP = sp;return;
        }
       }
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       _free($99);
       $$0 = $97;$$01 = $98;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $93 = ___cxa_find_matching_catch()|0;
    $94 = tempRet0;
    $$1 = $93;$$12 = $94;
   }
   $115 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($115)|0);
   $$2 = $$1;$$23 = $$12;$116 = $113;$117 = $114;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$116 = $119;$117 = $118;
 }
 _free($116);
 _free($117);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0, $exitcond$i$i$i37 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6464)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = (($__sn) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = (($__sn) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $31 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$31>>2] = 0;
    $32 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $32;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  } else {
   $33 = (($13) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
   $35 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
   $36 = HEAP32[$12>>2]|0;
   $37 = (($36) + 28|0);
   $38 = HEAP32[$37>>2]|0;
   FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
   $39 = HEAP8[$__sn>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $45 = (($__sn) + 1|0);
    HEAP8[$45>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $42 = (($__sn) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    HEAP8[$43>>0] = 0;
    $44 = (($__sn) + 4|0);
    HEAP32[$44>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $46 = __THREW__; __THREW__ = 0;
   $47 = $46&1;
   if ($47) {
    $48 = ___cxa_find_matching_catch(0|0)|0;
    $49 = tempRet0;
    ___clang_call_terminate($48);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $50 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$50>>2] = 0;
    $51 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $51;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  }
  $52 = HEAP32[$12>>2]|0;
  $53 = (($52) + 12|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
  HEAP8[$__dp>>0] = $55;
  $56 = HEAP32[$12>>2]|0;
  $57 = (($56) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
  HEAP8[$__ts>>0] = $59;
  $60 = HEAP32[$12>>2]|0;
  $61 = (($60) + 20|0);
  $62 = HEAP32[$61>>2]|0;
  FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
  $63 = HEAP8[$__grp>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)==(0);
  if ($65) {
   $69 = (($__grp) + 1|0);
   HEAP8[$69>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $66 = (($__grp) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   HEAP8[$67>>0] = 0;
   $68 = (($__grp) + 4|0);
   HEAP32[$68>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $70 = __THREW__; __THREW__ = 0;
  $71 = $70&1;
  if ($71) {
   $72 = ___cxa_find_matching_catch(0|0)|0;
   $73 = tempRet0;
   ___clang_call_terminate($72);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $74 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$74>>2] = 0;
   $75 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $75;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $76 = HEAP32[$12>>2]|0;
  $77 = (($76) + 24|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
  $79 = HEAP8[$__sym>>0]|0;
  $80 = $79 & 1;
  $81 = ($80<<24>>24)==(0);
  if ($81) {
   $85 = (($__sym) + 1|0);
   HEAP8[$85>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $82 = (($__sym) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   HEAP8[$83>>0] = 0;
   $84 = (($__sym) + 4|0);
   HEAP32[$84>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $86 = __THREW__; __THREW__ = 0;
  $87 = $86&1;
  if ($87) {
   $88 = ___cxa_find_matching_catch(0|0)|0;
   $89 = tempRet0;
   ___clang_call_terminate($88);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $90 = (($5) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$90>>2] = 0;
   $91 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $91;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $92 = HEAP32[$12>>2]|0;
  $93 = (($92) + 36|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
  $storemerge = $95;
 } else {
  $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6400)|0);
  $97 = HEAP32[$96>>2]|0;
  if ($__neg) {
   $98 = (($97) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
   $100 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
   $101 = HEAP32[$96>>2]|0;
   $102 = (($101) + 32|0);
   $103 = HEAP32[$102>>2]|0;
   FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
   $104 = HEAP8[$__sn>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   if ($106) {
    $110 = (($__sn) + 1|0);
    HEAP8[$110>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $107 = (($__sn) + 8|0);
    $108 = HEAP32[$107>>2]|0;
    HEAP8[$108>>0] = 0;
    $109 = (($__sn) + 4|0);
    HEAP32[$109>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $111 = __THREW__; __THREW__ = 0;
   $112 = $111&1;
   if ($112) {
    $113 = ___cxa_find_matching_catch(0|0)|0;
    $114 = tempRet0;
    ___clang_call_terminate($113);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i21 = 0;
   while(1) {
    $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
    if ($exitcond$i$i$i22) {
     break;
    }
    $115 = (($7) + ($__i$0$i$i$i21<<2)|0);
    HEAP32[$115>>2] = 0;
    $116 = (($__i$0$i$i$i21) + 1)|0;
    $__i$0$i$i$i21 = $116;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  } else {
   $117 = (($97) + 40|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
   $119 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
   $120 = HEAP32[$96>>2]|0;
   $121 = (($120) + 28|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
   $123 = HEAP8[$__sn>>0]|0;
   $124 = $123 & 1;
   $125 = ($124<<24>>24)==(0);
   if ($125) {
    $129 = (($__sn) + 1|0);
    HEAP8[$129>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $126 = (($__sn) + 8|0);
    $127 = HEAP32[$126>>2]|0;
    HEAP8[$127>>0] = 0;
    $128 = (($__sn) + 4|0);
    HEAP32[$128>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(482,($__sn|0),0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    $132 = ___cxa_find_matching_catch(0|0)|0;
    $133 = tempRet0;
    ___clang_call_terminate($132);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i26 = 0;
   while(1) {
    $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
    if ($exitcond$i$i$i27) {
     break;
    }
    $134 = (($9) + ($__i$0$i$i$i26<<2)|0);
    HEAP32[$134>>2] = 0;
    $135 = (($__i$0$i$i$i26) + 1)|0;
    $__i$0$i$i$i26 = $135;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  }
  $136 = HEAP32[$96>>2]|0;
  $137 = (($136) + 12|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
  HEAP8[$__dp>>0] = $139;
  $140 = HEAP32[$96>>2]|0;
  $141 = (($140) + 16|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
  HEAP8[$__ts>>0] = $143;
  $144 = HEAP32[$96>>2]|0;
  $145 = (($144) + 20|0);
  $146 = HEAP32[$145>>2]|0;
  FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
  $147 = HEAP8[$__grp>>0]|0;
  $148 = $147 & 1;
  $149 = ($148<<24>>24)==(0);
  if ($149) {
   $153 = (($__grp) + 1|0);
   HEAP8[$153>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $150 = (($__grp) + 8|0);
   $151 = HEAP32[$150>>2]|0;
   HEAP8[$151>>0] = 0;
   $152 = (($__grp) + 4|0);
   HEAP32[$152>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $154 = __THREW__; __THREW__ = 0;
  $155 = $154&1;
  if ($155) {
   $156 = ___cxa_find_matching_catch(0|0)|0;
   $157 = tempRet0;
   ___clang_call_terminate($156);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $158 = (($10) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$158>>2] = 0;
   $159 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $159;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $160 = HEAP32[$96>>2]|0;
  $161 = (($160) + 24|0);
  $162 = HEAP32[$161>>2]|0;
  FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
  $163 = HEAP8[$__sym>>0]|0;
  $164 = $163 & 1;
  $165 = ($164<<24>>24)==(0);
  if ($165) {
   $169 = (($__sym) + 1|0);
   HEAP8[$169>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $166 = (($__sym) + 8|0);
   $167 = HEAP32[$166>>2]|0;
   HEAP8[$167>>0] = 0;
   $168 = (($__sym) + 4|0);
   HEAP32[$168>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__sym|0),0);
  $170 = __THREW__; __THREW__ = 0;
  $171 = $170&1;
  if ($171) {
   $172 = ___cxa_find_matching_catch(0|0)|0;
   $173 = tempRet0;
   ___clang_call_terminate($172);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i36 = 0;
  while(1) {
   $exitcond$i$i$i37 = ($__i$0$i$i$i36|0)==(3);
   if ($exitcond$i$i$i37) {
    break;
   }
   $174 = (($11) + ($__i$0$i$i$i36<<2)|0);
   HEAP32[$174>>2] = 0;
   $175 = (($__i$0$i$i$i36) + 1)|0;
   $__i$0$i$i$i36 = $175;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $176 = HEAP32[$96>>2]|0;
  $177 = (($176) + 36|0);
  $178 = HEAP32[$177>>2]|0;
  $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
  $storemerge = $179;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$$029 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i11 = 0, $$0$i$i11$lcssa = 0, $$0$i$i4 = 0, $$01$i$i = 0, $$2 = 0, $$35 = 0, $$36 = 0, $$37 = 0, $$lcssa = 0, $$lcssa39 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$0$lcssa28 = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0;
 var $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$sum = 0, $scevgep31 = 0, $smax = 0, $umax = 0, $umax30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 1|0);
 $1 = (($__sn) + 8|0);
 $2 = (($__sn) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = (($__sym) + 1|0);
 $6 = (($__sym) + 8|0);
 $7 = (($__sym) + 4|0);
 $8 = (($__ct) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = (($__grp) + 1|0);
 $11 = (($__grp) + 8|0);
 $12 = (($__grp) + 4|0);
 $13 = (($__fd) + 1)|0;
 $14 = (-2 - ($__fd))|0;
 $15 = $__fd ^ -1;
 $16 = ($15|0)>(-1);
 $smax = $16 ? $15 : -1;
 $17 = (($14) - ($smax))|0;
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $18 = (($__pat) + ($__p$0)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  switch ($20|0) {
  case 0:  {
   $21 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $21;
   $$2 = $$0;
   break;
  }
  case 2:  {
   $41 = HEAP8[$__sym>>0]|0;
   $42 = $41 & 1;
   $43 = ($42<<24>>24)==(0);
   if ($43) {
    $45 = $41&255;
    $46 = $45 >>> 1;
    $47 = $46;
   } else {
    $44 = HEAP32[$7>>2]|0;
    $47 = $44;
   }
   $48 = ($47|0)==(0);
   $or$cond3 = $4 | $48;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($43) {
     $51 = $41&255;
     $52 = $51 >>> 1;
     $54 = $5;$55 = $52;
    } else {
     $49 = HEAP32[$6>>2]|0;
     $50 = HEAP32[$7>>2]|0;
     $54 = $49;$55 = $50;
    }
    $53 = (($54) + ($55)|0);
    $56 = HEAP32[$__me>>2]|0;
    $$0$i$i11 = $56;$57 = $54;
    while(1) {
     $58 = ($57|0)==($53|0);
     if ($58) {
      $$0$i$i11$lcssa = $$0$i$i11;
      break;
     }
     $59 = HEAP8[$57>>0]|0;
     HEAP8[$$0$i$i11>>0] = $59;
     $60 = (($57) + 1|0);
     $61 = (($$0$i$i11) + 1|0);
     $$0$i$i11 = $61;$57 = $60;
    }
    HEAP32[$__me>>2] = $$0$i$i11$lcssa;
    $$2 = $$0;
   }
   break;
  }
  case 4:  {
   $62 = HEAP32[$__me>>2]|0;
   $63 = (($$0) + 1|0);
   $$$0 = $__neg ? $63 : $$0;
   $$$029 = $$$0;
   $64 = HEAP32[$8>>2]|0;
   $__d$0 = $$$0;
   while(1) {
    $65 = ($__d$0>>>0)<($__de>>>0);
    if (!($65)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $66 = HEAP8[$__d$0>>0]|0;
    $isascii1$i = ($66<<24>>24)>(-1);
    if (!($isascii1$i)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $67 = $66 << 24 >> 24;
    $68 = (($64) + ($67<<1)|0);
    $69 = HEAP16[$68>>1]|0;
    $70 = $69 & 2048;
    $71 = ($70<<16>>16)==(0);
    if ($71) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $72 = (($__d$0) + 1|0);
    $__d$0 = $72;
   }
   $__d$0$lcssa28 = $__d$0$lcssa;
   if ($9) {
    $73 = (-2 - ($__d$0$lcssa28))|0;
    $74 = $$$029 ^ -1;
    $75 = $__d$0$lcssa28 ^ -1;
    $76 = ($74>>>0)>($75>>>0);
    $umax = $76 ? $74 : $75;
    $77 = (($73) - ($umax))|0;
    $78 = ($17>>>0)>($77>>>0);
    $umax30 = $78 ? $17 : $77;
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $79 = ($__d$1>>>0)>($$$0>>>0);
     $80 = ($__f$0|0)>(0);
     $or$cond = $79 & $80;
     if (!($or$cond)) {
      $$lcssa = $80;
      break;
     }
     $81 = (($__d$1) + -1|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = HEAP32[$__me>>2]|0;
     $84 = (($83) + 1|0);
     HEAP32[$__me>>2] = $84;
     HEAP8[$83>>0] = $82;
     $85 = (($__f$0) + -1)|0;
     $__d$1 = $81;$__f$0 = $85;
    }
    $86 = (($13) + ($umax30))|0;
    $scevgep$sum = (($umax30) + 1)|0;
    $scevgep31 = (($__d$0$lcssa) + ($scevgep$sum)|0);
    if ($$lcssa) {
     $87 = HEAP32[$__ct>>2]|0;
     $88 = (($87) + 28|0);
     $89 = HEAP32[$88>>2]|0;
     $90 = (FUNCTION_TABLE_iii[$89 & 1023]($__ct,48)|0);
     $94 = $90;
    } else {
     $94 = 0;
    }
    $__f$1 = $86;
    while(1) {
     $91 = ($__f$1|0)>(0);
     $92 = HEAP32[$__me>>2]|0;
     $93 = (($92) + 1|0);
     HEAP32[$__me>>2] = $93;
     if (!($91)) {
      $$lcssa39 = $92;
      break;
     }
     HEAP8[$92>>0] = $94;
     $95 = (($__f$1) + -1)|0;
     $__f$1 = $95;
    }
    HEAP8[$$lcssa39>>0] = $__dp;
    $__d$2 = $scevgep31;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $96 = ($__d$2|0)==($$$0|0);
   if ($96) {
    $97 = HEAP32[$__ct>>2]|0;
    $98 = (($97) + 28|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = (FUNCTION_TABLE_iii[$99 & 1023]($__ct,48)|0);
    $101 = HEAP32[$__me>>2]|0;
    $102 = (($101) + 1|0);
    HEAP32[$__me>>2] = $102;
    HEAP8[$101>>0] = $100;
   } else {
    $103 = HEAP8[$__grp>>0]|0;
    $104 = $103 & 1;
    $105 = ($104<<24>>24)==(0);
    if ($105) {
     $107 = $103&255;
     $108 = $107 >>> 1;
     $109 = $108;
    } else {
     $106 = HEAP32[$12>>2]|0;
     $109 = $106;
    }
    $110 = ($109|0)==(0);
    if ($110) {
     $__gl$0$ph = -1;
    } else {
     $111 = HEAP32[$11>>2]|0;
     $$35 = $105 ? $10 : $111;
     $112 = HEAP8[$$35>>0]|0;
     $113 = $112 << 24 >> 24;
     $__gl$0$ph = $113;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $114 = ($__d$3|0)==($$$0|0);
     if ($114) {
      break;
     }
     $115 = ($__ng$0|0)==($__gl$0|0);
     if ($115) {
      $116 = HEAP32[$__me>>2]|0;
      $117 = (($116) + 1|0);
      HEAP32[$__me>>2] = $117;
      HEAP8[$116>>0] = $__ts;
      $118 = (($__ig$0) + 1)|0;
      $119 = HEAP8[$__grp>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      if ($121) {
       $123 = $119&255;
       $124 = $123 >>> 1;
       $126 = $124;
      } else {
       $122 = HEAP32[$12>>2]|0;
       $126 = $122;
      }
      $125 = ($118>>>0)<($126>>>0);
      if ($125) {
       $127 = HEAP32[$11>>2]|0;
       $$36 = $121 ? $10 : $127;
       $128 = (($$36) + ($118)|0);
       $129 = HEAP8[$128>>0]|0;
       $130 = ($129<<24>>24)==(127);
       if ($130) {
        $__gl$1 = -1;$__ig$1 = $118;$__ng$1 = 0;
       } else {
        $131 = HEAP32[$11>>2]|0;
        $$37 = $121 ? $10 : $131;
        $132 = (($$37) + ($118)|0);
        $133 = HEAP8[$132>>0]|0;
        $134 = $133 << 24 >> 24;
        $__gl$1 = $134;$__ig$1 = $118;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__ng$0;$__ig$1 = $118;$__ng$1 = 0;
      }
     } else {
      $__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $135 = (($__d$3) + -1|0);
     $136 = HEAP8[$135>>0]|0;
     $137 = HEAP32[$__me>>2]|0;
     $138 = (($137) + 1|0);
     HEAP32[$__me>>2] = $138;
     HEAP8[$137>>0] = $136;
     $139 = (($__ng$1) + 1)|0;
     $__d$3 = $135;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $139;
    }
   }
   $140 = HEAP32[$__me>>2]|0;
   $141 = ($62|0)==($140|0);
   if ($141) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $140;$$01$i$i = $62;
    while(1) {
     $142 = (($$0$i$i4) + -1|0);
     $143 = ($$01$i$i>>>0)<($142>>>0);
     if (!($143)) {
      break;
     }
     $144 = HEAP8[$$01$i$i>>0]|0;
     $145 = HEAP8[$142>>0]|0;
     HEAP8[$$01$i$i>>0] = $145;
     HEAP8[$142>>0] = $144;
     $146 = (($$01$i$i) + 1|0);
     $$0$i$i4 = $142;$$01$i$i = $146;
    }
    $$2 = $$$0;
   }
   break;
  }
  case 3:  {
   $29 = HEAP8[$__sn>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $33 = $29&255;
    $34 = $33 >>> 1;
    $35 = $34;
   } else {
    $32 = HEAP32[$2>>2]|0;
    $35 = $32;
   }
   $36 = ($35|0)==(0);
   if ($36) {
    $$2 = $$0;
   } else {
    $37 = HEAP32[$1>>2]|0;
    $$ = $31 ? $0 : $37;
    $38 = HEAP8[$$>>0]|0;
    $39 = HEAP32[$__me>>2]|0;
    $40 = (($39) + 1|0);
    HEAP32[$__me>>2] = $40;
    HEAP8[$39>>0] = $38;
    $$2 = $$0;
   }
   break;
  }
  case 1:  {
   $22 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $22;
   $23 = HEAP32[$__ct>>2]|0;
   $24 = (($23) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (FUNCTION_TABLE_iii[$25 & 1023]($__ct,32)|0);
   $27 = HEAP32[$__me>>2]|0;
   $28 = (($27) + 1|0);
   HEAP32[$__me>>2] = $28;
   HEAP8[$27>>0] = $26;
   $$2 = $$0;
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $147 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $147;
 }
 $148 = HEAP8[$__sn>>0]|0;
 $149 = $148 & 1;
 $150 = ($149<<24>>24)==(0);
 if ($150) {
  $152 = $148&255;
  $153 = $152 >>> 1;
  $154 = $153;
 } else {
  $151 = HEAP32[$2>>2]|0;
  $154 = $151;
 }
 $155 = ($154>>>0)>(1);
 if ($155) {
  if ($150) {
   $158 = $148&255;
   $159 = $158 >>> 1;
   $161 = $0;$162 = $159;
  } else {
   $156 = HEAP32[$1>>2]|0;
   $157 = HEAP32[$2>>2]|0;
   $161 = $156;$162 = $157;
  }
  $160 = (($161) + ($162)|0);
  $163 = HEAP32[$__me>>2]|0;
  $$0$i$i = $163;$$pn = $161;
  while(1) {
   $164 = (($$pn) + 1|0);
   $165 = ($164|0)==($160|0);
   if ($165) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   $166 = HEAP8[$164>>0]|0;
   HEAP8[$$0$i$i>>0] = $166;
   $167 = (($$0$i$i) + 1|0);
   $$0$i$i = $167;$$pn = $164;
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $168 = $__flags & 176;
 if ((($168|0) == 32)) {
  $169 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $169;
 } else if (!((($168|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0;
 var $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7024|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 1|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP8[$17>>0]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 28|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16<<24>>24)==($21<<24>>24);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i6 = 0;
   while(1) {
    $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
    if ($exitcond$i$i7) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i6<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i6) + 1)|0;
    $__i$0$i$i6 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(489,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $98 = ___cxa_find_matching_catch()|0;
     $99 = tempRet0;
     $$0 = $98;$$01 = $99;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = (_malloc($88)|0);
       $91 = ($90|0)==(0|0);
       if ($91) {
        __THREW__ = 0;
        invoke_v(465);
        $92 = __THREW__; __THREW__ = 0;
        $93 = $92&1;
        if ($93) {
         $94 = ___cxa_find_matching_catch()|0;
         $95 = tempRet0;
         $$0 = $94;$$01 = $95;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $102 = 0;$106 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $102 = $90;$106 = $34;$__mb$0 = $90;
       }
      } else {
       $102 = 0;$106 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $103 = (($__iob) + 4|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = $106 & 1;
     $107 = ($105<<24>>24)==(0);
     if ($107) {
      $112 = (($__digits) + 1|0);
      $113 = $106&255;
      $114 = $113 >>> 1;
      $116 = $112;$117 = $114;
     } else {
      $108 = (($__digits) + 8|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (($__digits) + 4|0);
      $111 = HEAP32[$110>>2]|0;
      $116 = $109;$117 = $111;
     }
     $115 = (($116) + ($117)|0);
     $118 = HEAP8[$__dp>>0]|0;
     $119 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(490,($__mb$0|0),($__mi|0),($__me|0),($104|0),($116|0),($115|0),($1|0),($31|0),($__pat|0),($118|0),($119|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $120 = __THREW__; __THREW__ = 0;
     $121 = $120&1;
     if (!($121)) {
      $122 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $122;
      $123 = HEAP32[$__mi>>2]|0;
      $124 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(416,($agg$result|0),($$byval_copy|0),($__mb$0|0),($123|0),($124|0),($__iob|0),($__fl|0));
      $125 = __THREW__; __THREW__ = 0;
      $126 = $125&1;
      if (!($126)) {
       _free($102);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $127 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
       STACKTOP = sp;return;
      }
     }
     $100 = ___cxa_find_matching_catch()|0;
     $101 = tempRet0;
     _free($102);
     $$0 = $100;$$01 = $101;
    }
   } while(0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $96 = ___cxa_find_matching_catch()|0;
  $97 = tempRet0;
  $$1 = $96;$$12 = $97;
 }
 $128 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($128)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0;
 var $__dp = 0, $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i5 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,6776,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(459)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $124 = 0;$125 = 0;
    label = 7;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(464,($__bb|0),($3|0),(6776|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $124 = 0;$125 = 0;
     label = 7;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(465);
      $11 = __THREW__; __THREW__ = 0;
      $12 = $11&1;
      if ($12) {
       $124 = 0;$125 = 0;
       label = 7;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $126 = $$pre;
     } else {
      $126 = $9;
     }
     $15 = $6 << 2;
     $16 = (_malloc($15)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      __THREW__ = 0;
      invoke_v(465);
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       $124 = $126;$125 = 0;
       label = 7;
      } else {
       $117 = 0;$119 = $126;$__db$0 = 0;$__n$0 = $6;
       label = 10;
      }
     } else {
      $117 = $16;$119 = $126;$__db$0 = $16;$__n$0 = $6;
      label = 10;
     }
    }
   }
  } else {
   $117 = 0;$119 = 0;$__db$0 = $__digits;$__n$0 = $1;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  __THREW__ = 0;
  invoke_vii(457,($__loc|0),($__iob|0));
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if ($21) {
   $124 = $119;$125 = $117;
   label = 7;
  } else {
   __THREW__ = 0;
   $22 = (invoke_iii(454,($__loc|0),(7016|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if ($24) {
    label = 44;
   } else {
    $25 = HEAP32[$__bb>>2]|0;
    $26 = (($25) + ($__n$0)|0);
    $27 = HEAP32[$22>>2]|0;
    $28 = (($27) + 48|0);
    $29 = HEAP32[$28>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($29|0,($22|0),($25|0),($26|0),($__db$0|0))|0);
    $30 = __THREW__; __THREW__ = 0;
    $31 = $30&1;
    if ($31) {
     label = 44;
    } else {
     $32 = ($__n$0|0)==(0);
     if ($32) {
      $42 = 0;
     } else {
      $33 = HEAP32[$__bb>>2]|0;
      $34 = HEAP8[$33>>0]|0;
      $35 = ($34<<24>>24)==(45);
      $42 = $35;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $36 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$36>>2] = 0;
      $37 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $37;
     }
     $__i$0$i$i4 = 0;
     while(1) {
      $exitcond$i$i5 = ($__i$0$i$i4|0)==(3);
      if ($exitcond$i$i5) {
       break;
      }
      $38 = (($__sym) + ($__i$0$i$i4<<2)|0);
      HEAP32[$38>>2] = 0;
      $39 = (($__i$0$i$i4) + 1)|0;
      $__i$0$i$i4 = $39;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $40 = (($__sn) + ($__i$0$i$i6<<2)|0);
      HEAP32[$40>>2] = 0;
      $41 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $41;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(491,($__intl|0),($42|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $43 = __THREW__; __THREW__ = 0;
     $44 = $43&1;
     do {
      if ($44) {
       $97 = ___cxa_find_matching_catch()|0;
       $98 = tempRet0;
       $$0 = $97;$$01 = $98;
      } else {
       $45 = HEAP32[$__fd>>2]|0;
       $46 = ($__n$0|0)>($45|0);
       if ($46) {
        $47 = (($__n$0) - ($45))|0;
        $48 = $47 << 1;
        $49 = HEAP8[$__sn>>0]|0;
        $50 = $49 & 1;
        $51 = ($50<<24>>24)==(0);
        if ($51) {
         $54 = $49&255;
         $55 = $54 >>> 1;
         $65 = $55;
        } else {
         $52 = (($__sn) + 4|0);
         $53 = HEAP32[$52>>2]|0;
         $65 = $53;
        }
        $56 = HEAP8[$__sym>>0]|0;
        $57 = $56 & 1;
        $58 = ($57<<24>>24)==(0);
        if ($58) {
         $61 = $56&255;
         $62 = $61 >>> 1;
         $67 = $62;
        } else {
         $59 = (($__sym) + 4|0);
         $60 = HEAP32[$59>>2]|0;
         $67 = $60;
        }
        $63 = $48 | 1;
        $64 = (($65) + ($63))|0;
        $66 = (($64) + ($67))|0;
        $$pn = $66;
       } else {
        $68 = HEAP8[$__sn>>0]|0;
        $69 = $68 & 1;
        $70 = ($69<<24>>24)==(0);
        if ($70) {
         $73 = $68&255;
         $74 = $73 >>> 1;
         $83 = $74;
        } else {
         $71 = (($__sn) + 4|0);
         $72 = HEAP32[$71>>2]|0;
         $83 = $72;
        }
        $75 = HEAP8[$__sym>>0]|0;
        $76 = $75 & 1;
        $77 = ($76<<24>>24)==(0);
        if ($77) {
         $80 = $75&255;
         $81 = $80 >>> 1;
         $85 = $81;
        } else {
         $78 = (($__sym) + 4|0);
         $79 = HEAP32[$78>>2]|0;
         $85 = $79;
        }
        $82 = (($83) + 2)|0;
        $84 = (($82) + ($85))|0;
        $$pn = $84;
       }
       $86 = (($$pn) + ($45))|0;
       $87 = ($86>>>0)>(100);
       if ($87) {
        $88 = $86 << 2;
        $89 = (_malloc($88)|0);
        $90 = ($89|0)==(0|0);
        if ($90) {
         __THREW__ = 0;
         invoke_v(465);
         $91 = __THREW__; __THREW__ = 0;
         $92 = $91&1;
         if ($92) {
          $93 = ___cxa_find_matching_catch()|0;
          $94 = tempRet0;
          $$0 = $93;$$01 = $94;
          break;
         } else {
          $101 = 0;$__mb$0 = 0;
         }
        } else {
         $101 = $89;$__mb$0 = $89;
        }
       } else {
        $101 = 0;$__mb$0 = $__mbuf;
       }
       $103 = (($__iob) + 4|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = (($__db$0) + ($__n$0<<2)|0);
       $106 = HEAP32[$__dp>>2]|0;
       $107 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($104|0),($__db$0|0),($105|0),($22|0),($42|0),($__pat|0),($106|0),($107|0),($__grp|0),($__sym|0),($__sn|0),($45|0));
       $108 = __THREW__; __THREW__ = 0;
       $109 = $108&1;
       if (!($109)) {
        $110 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $110;
        $111 = HEAP32[$__mi>>2]|0;
        $112 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
        invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($111|0),($112|0),($__iob|0),($__fl|0));
        $113 = __THREW__; __THREW__ = 0;
        $114 = $113&1;
        if (!($114)) {
         $115 = ($101|0)==(0|0);
         if (!($115)) {
          _free($101);
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         $116 = HEAP32[$__loc>>2]|0;
         (__ZNSt3__114__shared_count16__release_sharedEv($116)|0);
         $118 = ($117|0)==(0|0);
         if (!($118)) {
          _free($117);
         }
         _free($119);
         STACKTOP = sp;return;
        }
       }
       $99 = ___cxa_find_matching_catch()|0;
       $100 = tempRet0;
       $102 = ($101|0)==(0|0);
       if ($102) {
        $$0 = $99;$$01 = $100;
       } else {
        _free($101);
        $$0 = $99;$$01 = $100;
       }
      }
     } while(0);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;
    }
   }
   if ((label|0) == 44) {
    $95 = ___cxa_find_matching_catch()|0;
    $96 = tempRet0;
    $$1 = $95;$$12 = $96;
   }
   $120 = HEAP32[$__loc>>2]|0;
   (__ZNSt3__114__shared_count16__release_sharedEv($120)|0);
   $$2 = $$1;$$23 = $$12;$121 = $117;$123 = $119;
  }
 }
 if ((label|0) == 7) {
  $13 = ___cxa_find_matching_catch()|0;
  $14 = tempRet0;
  $$2 = $13;$$23 = $14;$121 = $125;$123 = $124;
 }
 $122 = ($121|0)==(0|0);
 if (!($122)) {
  _free($121);
 }
 _free($123);
 ___resumeException($$2|0);
 // unreachable;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0;
 var $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i14 = 0, $exitcond$i$i$i19 = 0, $exitcond$i$i$i24 = 0, $exitcond$i$i$i29 = 0, $exitcond$i$i$i34 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6592)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = (($13) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = (($__sn) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = (($__sn) + 4|0);
   HEAP32[$25>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $30 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$30>>2] = 0;
    $31 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $31;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $32 = (($13) + 40|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
   $34 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
   $35 = HEAP32[$12>>2]|0;
   $36 = (($35) + 28|0);
   $37 = HEAP32[$36>>2]|0;
   FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
   $38 = HEAP8[$__sn>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $41 = (($__sn) + 8|0);
    $42 = HEAP32[$41>>2]|0;
    HEAP32[$42>>2] = 0;
   }
   $43 = (($__sn) + 4|0);
   HEAP32[$43>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $44 = __THREW__; __THREW__ = 0;
   $45 = $44&1;
   if ($45) {
    $46 = ___cxa_find_matching_catch(0|0)|0;
    $47 = tempRet0;
    ___clang_call_terminate($46);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $48 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$48>>2] = 0;
    $49 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $49;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $50 = HEAP32[$12>>2]|0;
  $51 = (($50) + 12|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
  HEAP32[$__dp>>2] = $53;
  $54 = HEAP32[$12>>2]|0;
  $55 = (($54) + 16|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
  HEAP32[$__ts>>2] = $57;
  $58 = HEAP32[$12>>2]|0;
  $59 = (($58) + 20|0);
  $60 = HEAP32[$59>>2]|0;
  FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
  $61 = HEAP8[$__grp>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  if ($63) {
   $67 = (($__grp) + 1|0);
   HEAP8[$67>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $64 = (($__grp) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   HEAP8[$65>>0] = 0;
   $66 = (($__grp) + 4|0);
   HEAP32[$66>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if ($69) {
   $70 = ___cxa_find_matching_catch(0|0)|0;
   $71 = tempRet0;
   ___clang_call_terminate($70);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $72 = (($4) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$72>>2] = 0;
   $73 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $73;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $74 = HEAP32[$12>>2]|0;
  $75 = (($74) + 24|0);
  $76 = HEAP32[$75>>2]|0;
  FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
  $77 = HEAP8[$__sym>>0]|0;
  $78 = $77 & 1;
  $79 = ($78<<24>>24)==(0);
  if ($79) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $80 = (($__sym) + 8|0);
   $81 = HEAP32[$80>>2]|0;
   HEAP32[$81>>2] = 0;
  }
  $82 = (($__sym) + 4|0);
  HEAP32[$82>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i13 = 0;
  while(1) {
   $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
   if ($exitcond$i$i$i14) {
    break;
   }
   $87 = (($5) + ($__i$0$i$i$i13<<2)|0);
   HEAP32[$87>>2] = 0;
   $88 = (($__i$0$i$i$i13) + 1)|0;
   $__i$0$i$i$i13 = $88;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $89 = HEAP32[$12>>2]|0;
  $90 = (($89) + 36|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
  $storemerge = $92;
 } else {
  $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,6528)|0);
  $94 = HEAP32[$93>>2]|0;
  if ($__neg) {
   $95 = (($94) + 44|0);
   $96 = HEAP32[$95>>2]|0;
   FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
   $97 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
   $98 = HEAP32[$93>>2]|0;
   $99 = (($98) + 32|0);
   $100 = HEAP32[$99>>2]|0;
   FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
   $101 = HEAP8[$__sn>>0]|0;
   $102 = $101 & 1;
   $103 = ($102<<24>>24)==(0);
   if ($103) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $104 = (($__sn) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    HEAP32[$105>>2] = 0;
   }
   $106 = (($__sn) + 4|0);
   HEAP32[$106>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $107 = __THREW__; __THREW__ = 0;
   $108 = $107&1;
   if ($108) {
    $109 = ___cxa_find_matching_catch(0|0)|0;
    $110 = tempRet0;
    ___clang_call_terminate($109);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i18 = 0;
   while(1) {
    $exitcond$i$i$i19 = ($__i$0$i$i$i18|0)==(3);
    if ($exitcond$i$i$i19) {
     break;
    }
    $111 = (($7) + ($__i$0$i$i$i18<<2)|0);
    HEAP32[$111>>2] = 0;
    $112 = (($__i$0$i$i$i18) + 1)|0;
    $__i$0$i$i$i18 = $112;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $113 = (($94) + 40|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
   $115 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
   $116 = HEAP32[$93>>2]|0;
   $117 = (($116) + 28|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
   $119 = HEAP8[$__sn>>0]|0;
   $120 = $119 & 1;
   $121 = ($120<<24>>24)==(0);
   if ($121) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $122 = (($__sn) + 8|0);
    $123 = HEAP32[$122>>2]|0;
    HEAP32[$123>>2] = 0;
   }
   $124 = (($__sn) + 4|0);
   HEAP32[$124>>2] = 0;
   __THREW__ = 0;
   invoke_vii(488,($__sn|0),0);
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    $127 = ___cxa_find_matching_catch(0|0)|0;
    $128 = tempRet0;
    ___clang_call_terminate($127);
    // unreachable;
   }
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i23 = 0;
   while(1) {
    $exitcond$i$i$i24 = ($__i$0$i$i$i23|0)==(3);
    if ($exitcond$i$i$i24) {
     break;
    }
    $129 = (($9) + ($__i$0$i$i$i23<<2)|0);
    HEAP32[$129>>2] = 0;
    $130 = (($__i$0$i$i$i23) + 1)|0;
    $__i$0$i$i$i23 = $130;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $131 = HEAP32[$93>>2]|0;
  $132 = (($131) + 12|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
  HEAP32[$__dp>>2] = $134;
  $135 = HEAP32[$93>>2]|0;
  $136 = (($135) + 16|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
  HEAP32[$__ts>>2] = $138;
  $139 = HEAP32[$93>>2]|0;
  $140 = (($139) + 20|0);
  $141 = HEAP32[$140>>2]|0;
  FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
  $142 = HEAP8[$__grp>>0]|0;
  $143 = $142 & 1;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $148 = (($__grp) + 1|0);
   HEAP8[$148>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $145 = (($__grp) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   HEAP8[$146>>0] = 0;
   $147 = (($__grp) + 4|0);
   HEAP32[$147>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(482,($__grp|0),0);
  $149 = __THREW__; __THREW__ = 0;
  $150 = $149&1;
  if ($150) {
   $151 = ___cxa_find_matching_catch(0|0)|0;
   $152 = tempRet0;
   ___clang_call_terminate($151);
   // unreachable;
  }
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i28 = 0;
  while(1) {
   $exitcond$i$i$i29 = ($__i$0$i$i$i28|0)==(3);
   if ($exitcond$i$i$i29) {
    break;
   }
   $153 = (($10) + ($__i$0$i$i$i28<<2)|0);
   HEAP32[$153>>2] = 0;
   $154 = (($__i$0$i$i$i28) + 1)|0;
   $__i$0$i$i$i28 = $154;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $155 = HEAP32[$93>>2]|0;
  $156 = (($155) + 24|0);
  $157 = HEAP32[$156>>2]|0;
  FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
  $158 = HEAP8[$__sym>>0]|0;
  $159 = $158 & 1;
  $160 = ($159<<24>>24)==(0);
  if ($160) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $161 = (($__sym) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   HEAP32[$162>>2] = 0;
  }
  $163 = (($__sym) + 4|0);
  HEAP32[$163>>2] = 0;
  __THREW__ = 0;
  invoke_vii(488,($__sym|0),0);
  $164 = __THREW__; __THREW__ = 0;
  $165 = $164&1;
  if ($165) {
   $166 = ___cxa_find_matching_catch(0|0)|0;
   $167 = tempRet0;
   ___clang_call_terminate($166);
   // unreachable;
  }
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i33 = 0;
  while(1) {
   $exitcond$i$i$i34 = ($__i$0$i$i$i33|0)==(3);
   if ($exitcond$i$i$i34) {
    break;
   }
   $168 = (($11) + ($__i$0$i$i$i33<<2)|0);
   HEAP32[$168>>2] = 0;
   $169 = (($__i$0$i$i$i33) + 1)|0;
   $__i$0$i$i$i33 = $169;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $170 = HEAP32[$93>>2]|0;
  $171 = (($170) + 36|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
  $storemerge = $173;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i4 = 0, $$0$i$i9 = 0, $$01$i$i = 0, $$2 = 0, $$30 = 0, $$31 = 0, $$32 = 0, $$lcssa = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $157$phi = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0;
 var $__d$1$lcssa = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$0$lcssa = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$0$ph = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $or$cond = 0, $or$cond3 = 0, $scevgep$i = 0, $scevgep$i10 = 0;
 var $scevgep$sum = 0, $scevgep26 = 0, $scevgep27$sum = 0, $scevgep28 = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 4|0);
 $1 = (($__sn) + 8|0);
 $2 = $__flags & 512;
 $3 = ($2|0)==(0);
 $4 = (($__sym) + 4|0);
 $5 = (($__sym) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = (($__grp) + 1|0);
 $8 = (($__grp) + 8|0);
 $9 = (($__grp) + 4|0);
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $10 = (($__pat) + ($__p$0)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 << 24 >> 24;
  switch ($12|0) {
  case 2:  {
   $33 = HEAP8[$__sym>>0]|0;
   $34 = $33 & 1;
   $35 = ($34<<24>>24)==(0);
   if ($35) {
    $37 = $33&255;
    $38 = $37 >>> 1;
    $39 = $38;
   } else {
    $36 = HEAP32[$4>>2]|0;
    $39 = $36;
   }
   $40 = ($39|0)==(0);
   $or$cond3 = $3 | $40;
   if ($or$cond3) {
    $$2 = $$0;
   } else {
    if ($35) {
     $43 = $33&255;
     $44 = $43 >>> 1;
     $46 = $4;$47 = $44;
    } else {
     $41 = HEAP32[$5>>2]|0;
     $42 = HEAP32[$4>>2]|0;
     $46 = $41;$47 = $42;
    }
    $45 = (($46) + ($47<<2)|0);
    $48 = HEAP32[$__me>>2]|0;
    $$0$i$i9 = $48;$49 = $46;
    while(1) {
     $50 = ($49|0)==($45|0);
     if ($50) {
      break;
     }
     $51 = HEAP32[$49>>2]|0;
     HEAP32[$$0$i$i9>>2] = $51;
     $52 = (($49) + 4|0);
     $53 = (($$0$i$i9) + 4|0);
     $$0$i$i9 = $53;$49 = $52;
    }
    $scevgep$i10 = (($48) + ($47<<2)|0);
    HEAP32[$__me>>2] = $scevgep$i10;
    $$2 = $$0;
   }
   break;
  }
  case 4:  {
   $54 = HEAP32[$__me>>2]|0;
   $55 = (($$0) + 4|0);
   $$$0 = $__neg ? $55 : $$0;
   $__d$0 = $$$0;
   while(1) {
    $56 = ($__d$0>>>0)<($__de>>>0);
    if (!($56)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $57 = HEAP32[$__d$0>>2]|0;
    $58 = HEAP32[$__ct>>2]|0;
    $59 = (($58) + 12|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_iiii[$60 & 1023]($__ct,2048,$57)|0);
    if (!($61)) {
     $__d$0$lcssa = $__d$0;
     break;
    }
    $62 = (($__d$0) + 4|0);
    $__d$0 = $62;
   }
   if ($6) {
    $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
    while(1) {
     $63 = ($__d$1>>>0)>($$$0>>>0);
     $64 = ($__f$0|0)>(0);
     $or$cond = $63 & $64;
     if (!($or$cond)) {
      $$lcssa = $64;$__d$1$lcssa = $__d$1;$__f$0$lcssa = $__f$0;
      break;
     }
     $65 = (($__d$1) + -4|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = HEAP32[$__me>>2]|0;
     $68 = (($67) + 4|0);
     HEAP32[$__me>>2] = $68;
     HEAP32[$67>>2] = $66;
     $69 = (($__f$0) + -1)|0;
     $__d$1 = $65;$__f$0 = $69;
    }
    if ($$lcssa) {
     $70 = HEAP32[$__ct>>2]|0;
     $71 = (($70) + 44|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (FUNCTION_TABLE_iii[$72 & 1023]($__ct,48)|0);
     $80 = $73;
    } else {
     $80 = 0;
    }
    $__me$promoted = HEAP32[$__me>>2]|0;
    $74 = $__f$0$lcssa ^ -1;
    $75 = ($74|0)>(-1);
    $smax = $75 ? $74 : -1;
    $76 = (($__f$0$lcssa) + ($smax))|0;
    $79 = $__me$promoted;$__f$1 = $__f$0$lcssa;
    while(1) {
     $77 = ($__f$1|0)>(0);
     if (!($77)) {
      break;
     }
     $78 = (($79) + 4|0);
     HEAP32[$79>>2] = $80;
     $81 = (($__f$1) + -1)|0;
     $79 = $78;$__f$1 = $81;
    }
    $scevgep$sum = (($76) + 2)|0;
    $scevgep26 = (($__me$promoted) + ($scevgep$sum<<2)|0);
    $scevgep27$sum = (($76) + 1)|0;
    $scevgep28 = (($__me$promoted) + ($scevgep27$sum<<2)|0);
    HEAP32[$__me>>2] = $scevgep26;
    HEAP32[$scevgep28>>2] = $__dp;
    $__d$2 = $__d$1$lcssa;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $82 = ($__d$2|0)==($$$0|0);
   if ($82) {
    $83 = HEAP32[$__ct>>2]|0;
    $84 = (($83) + 44|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = (FUNCTION_TABLE_iii[$85 & 1023]($__ct,48)|0);
    $87 = HEAP32[$__me>>2]|0;
    $88 = (($87) + 4|0);
    HEAP32[$__me>>2] = $88;
    HEAP32[$87>>2] = $86;
    $127 = $88;
   } else {
    $89 = HEAP8[$__grp>>0]|0;
    $90 = $89 & 1;
    $91 = ($90<<24>>24)==(0);
    if ($91) {
     $93 = $89&255;
     $94 = $93 >>> 1;
     $95 = $94;
    } else {
     $92 = HEAP32[$9>>2]|0;
     $95 = $92;
    }
    $96 = ($95|0)==(0);
    if ($96) {
     $__gl$0$ph = -1;
    } else {
     $97 = HEAP32[$8>>2]|0;
     $$30 = $91 ? $7 : $97;
     $98 = HEAP8[$$30>>0]|0;
     $99 = $98 << 24 >> 24;
     $__gl$0$ph = $99;
    }
    $__d$3 = $__d$2;$__gl$0 = $__gl$0$ph;$__ig$0 = 0;$__ng$0 = 0;
    while(1) {
     $100 = ($__d$3|0)==($$$0|0);
     if ($100) {
      break;
     }
     $101 = ($__ng$0|0)==($__gl$0|0);
     $102 = HEAP32[$__me>>2]|0;
     if ($101) {
      $103 = (($102) + 4|0);
      HEAP32[$__me>>2] = $103;
      HEAP32[$102>>2] = $__ts;
      $104 = (($__ig$0) + 1)|0;
      $105 = HEAP8[$__grp>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $109 = $105&255;
       $110 = $109 >>> 1;
       $112 = $110;
      } else {
       $108 = HEAP32[$9>>2]|0;
       $112 = $108;
      }
      $111 = ($104>>>0)<($112>>>0);
      if ($111) {
       $113 = HEAP32[$8>>2]|0;
       $$31 = $107 ? $7 : $113;
       $114 = (($$31) + ($104)|0);
       $115 = HEAP8[$114>>0]|0;
       $116 = ($115<<24>>24)==(127);
       if ($116) {
        $124 = $103;$__gl$1 = -1;$__ig$1 = $104;$__ng$1 = 0;
       } else {
        $117 = HEAP32[$8>>2]|0;
        $$32 = $107 ? $7 : $117;
        $118 = (($$32) + ($104)|0);
        $119 = HEAP8[$118>>0]|0;
        $120 = $119 << 24 >> 24;
        $124 = $103;$__gl$1 = $120;$__ig$1 = $104;$__ng$1 = 0;
       }
      } else {
       $124 = $103;$__gl$1 = $__ng$0;$__ig$1 = $104;$__ng$1 = 0;
      }
     } else {
      $124 = $102;$__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
     }
     $121 = (($__d$3) + -4|0);
     $122 = HEAP32[$121>>2]|0;
     $123 = (($124) + 4|0);
     HEAP32[$__me>>2] = $123;
     HEAP32[$124>>2] = $122;
     $125 = (($__ng$1) + 1)|0;
     $__d$3 = $121;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $125;
    }
    $$pre = HEAP32[$__me>>2]|0;
    $127 = $$pre;
   }
   $126 = ($54|0)==($127|0);
   if ($126) {
    $$2 = $$$0;
   } else {
    $$0$i$i4 = $127;$$01$i$i = $54;
    while(1) {
     $128 = (($$0$i$i4) + -4|0);
     $129 = ($$01$i$i>>>0)<($128>>>0);
     if (!($129)) {
      break;
     }
     $130 = HEAP32[$$01$i$i>>2]|0;
     $131 = HEAP32[$128>>2]|0;
     HEAP32[$$01$i$i>>2] = $131;
     HEAP32[$128>>2] = $130;
     $132 = (($$01$i$i) + 4|0);
     $$0$i$i4 = $128;$$01$i$i = $132;
    }
    $$2 = $$$0;
   }
   break;
  }
  case 3:  {
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $25 = $21&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $24 = HEAP32[$0>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    $$2 = $$0;
   } else {
    $29 = HEAP32[$1>>2]|0;
    $$ = $23 ? $0 : $29;
    $30 = HEAP32[$$>>2]|0;
    $31 = HEAP32[$__me>>2]|0;
    $32 = (($31) + 4|0);
    HEAP32[$__me>>2] = $32;
    HEAP32[$31>>2] = $30;
    $$2 = $$0;
   }
   break;
  }
  case 0:  {
   $13 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $13;
   $$2 = $$0;
   break;
  }
  case 1:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $15 = HEAP32[$__ct>>2]|0;
   $16 = (($15) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iii[$17 & 1023]($__ct,32)|0);
   $19 = HEAP32[$__me>>2]|0;
   $20 = (($19) + 4|0);
   HEAP32[$__me>>2] = $20;
   HEAP32[$19>>2] = $18;
   $$2 = $$0;
   break;
  }
  default: {
   $$2 = $$0;
  }
  }
  $133 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $133;
 }
 $134 = HEAP8[$__sn>>0]|0;
 $135 = $134 & 1;
 $136 = ($135<<24>>24)==(0);
 if ($136) {
  $138 = $134&255;
  $139 = $138 >>> 1;
  $140 = $139;
 } else {
  $137 = HEAP32[$0>>2]|0;
  $140 = $137;
 }
 $141 = ($140>>>0)>(1);
 if ($141) {
  if ($136) {
   $144 = $134&255;
   $145 = $144 >>> 1;
   $$pn = $0;$148 = $145;
  } else {
   $142 = HEAP32[$1>>2]|0;
   $143 = HEAP32[$0>>2]|0;
   $$pn = $142;$148 = $143;
  }
  $146 = (($$pn) + 4|0);
  $147 = (($$pn) + ($148<<2)|0);
  $149 = HEAP32[$__me>>2]|0;
  $150 = $146;
  $151 = $147;
  $152 = (($151) - ($150))|0;
  $$0$i$i = $149;$153 = $146;$157 = $$pn;
  while(1) {
   $154 = ($153|0)==($147|0);
   if ($154) {
    break;
   }
   $155 = HEAP32[$153>>2]|0;
   HEAP32[$$0$i$i>>2] = $155;
   $156 = (($157) + 8|0);
   $158 = (($$0$i$i) + 4|0);
   $157$phi = $153;$$0$i$i = $158;$153 = $156;$157 = $157$phi;
  }
  $159 = $152 >>> 2;
  $scevgep$i = (($149) + ($159<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $160 = $__flags & 176;
 if ((($160|0) == 32)) {
  $161 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $161;
 } else if (!((($160|0) == 16))) {
  HEAP32[$__mi>>2] = $__mb;
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0;
 var $__fd = 0, $__grp = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 __ZNKSt3__18ios_base6getlocEv($__loc,$__iob);
 __THREW__ = 0;
 $1 = (invoke_iii(454,($__loc|0),(7016|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if ($3) {
   label = 47;
  } else {
   $4 = HEAP8[$__digits>>0]|0;
   $5 = $4 & 1;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    $9 = $4&255;
    $10 = $9 >>> 1;
    $11 = $10;
   } else {
    $7 = (($__digits) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $11 = $8;
   }
   $12 = ($11|0)==(0);
   if ($12) {
    $31 = 0;
   } else {
    if ($6) {
     $15 = (($__digits) + 4|0);
     $17 = $15;
    } else {
     $13 = (($__digits) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     $17 = $14;
    }
    $16 = HEAP32[$17>>2]|0;
    $18 = HEAP32[$1>>2]|0;
    $19 = (($18) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($1|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 47;
     break;
    }
    $24 = ($16|0)==($21|0);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i5 = 0;
   while(1) {
    $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
    if ($exitcond$i$i6) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i5<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i5) + 1)|0;
    $__i$0$i$i5 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(491,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   L27: do {
    if ($33) {
     $99 = ___cxa_find_matching_catch()|0;
     $100 = tempRet0;
     $$0 = $99;$$01 = $100;
    } else {
     $34 = HEAP8[$__digits>>0]|0;
     $35 = $34 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = $34&255;
      $40 = $39 >>> 1;
      $42 = $40;
     } else {
      $37 = (($__digits) + 4|0);
      $38 = HEAP32[$37>>2]|0;
      $42 = $38;
     }
     $41 = HEAP32[$__fd>>2]|0;
     $43 = ($42|0)>($41|0);
     if ($43) {
      if ($36) {
       $46 = $34&255;
       $47 = $46 >>> 1;
       $49 = $47;
      } else {
       $44 = (($__digits) + 4|0);
       $45 = HEAP32[$44>>2]|0;
       $49 = $45;
      }
      $48 = (($49) - ($41))|0;
      $50 = $48 << 1;
      $51 = HEAP8[$__sn>>0]|0;
      $52 = $51 & 1;
      $53 = ($52<<24>>24)==(0);
      if ($53) {
       $56 = $51&255;
       $57 = $56 >>> 1;
       $67 = $57;
      } else {
       $54 = (($__sn) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $67 = $55;
      }
      $58 = HEAP8[$__sym>>0]|0;
      $59 = $58 & 1;
      $60 = ($59<<24>>24)==(0);
      if ($60) {
       $63 = $58&255;
       $64 = $63 >>> 1;
       $69 = $64;
      } else {
       $61 = (($__sym) + 4|0);
       $62 = HEAP32[$61>>2]|0;
       $69 = $62;
      }
      $65 = $50 | 1;
      $66 = (($67) + ($65))|0;
      $68 = (($66) + ($69))|0;
      $$pn = $68;
     } else {
      $70 = HEAP8[$__sn>>0]|0;
      $71 = $70 & 1;
      $72 = ($71<<24>>24)==(0);
      if ($72) {
       $75 = $70&255;
       $76 = $75 >>> 1;
       $85 = $76;
      } else {
       $73 = (($__sn) + 4|0);
       $74 = HEAP32[$73>>2]|0;
       $85 = $74;
      }
      $77 = HEAP8[$__sym>>0]|0;
      $78 = $77 & 1;
      $79 = ($78<<24>>24)==(0);
      if ($79) {
       $82 = $77&255;
       $83 = $82 >>> 1;
       $87 = $83;
      } else {
       $80 = (($__sym) + 4|0);
       $81 = HEAP32[$80>>2]|0;
       $87 = $81;
      }
      $84 = (($85) + 2)|0;
      $86 = (($84) + ($87))|0;
      $$pn = $86;
     }
     $88 = (($$pn) + ($41))|0;
     $89 = ($88>>>0)>(100);
     do {
      if ($89) {
       $90 = $88 << 2;
       $91 = (_malloc($90)|0);
       $92 = ($91|0)==(0|0);
       if ($92) {
        __THREW__ = 0;
        invoke_v(465);
        $93 = __THREW__; __THREW__ = 0;
        $94 = $93&1;
        if ($94) {
         $95 = ___cxa_find_matching_catch()|0;
         $96 = tempRet0;
         $$0 = $95;$$01 = $96;
         break L27;
        } else {
         $$pre = HEAP8[$__digits>>0]|0;
         $103 = 0;$108 = $$pre;$__mb$0 = 0;
         break;
        }
       } else {
        $103 = $91;$108 = $34;$__mb$0 = $91;
       }
      } else {
       $103 = 0;$108 = $34;$__mb$0 = $__mbuf;
      }
     } while(0);
     $105 = (($__iob) + 4|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = $108 & 1;
     $109 = ($107<<24>>24)==(0);
     if ($109) {
      $114 = (($__digits) + 4|0);
      $115 = $108&255;
      $116 = $115 >>> 1;
      $118 = $114;$119 = $116;
     } else {
      $110 = (($__digits) + 8|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = (($__digits) + 4|0);
      $113 = HEAP32[$112>>2]|0;
      $118 = $111;$119 = $113;
     }
     $117 = (($118) + ($119<<2)|0);
     $120 = HEAP32[$__dp>>2]|0;
     $121 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(492,($__mb$0|0),($__mi|0),($__me|0),($106|0),($118|0),($117|0),($1|0),($31|0),($__pat|0),($120|0),($121|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $122 = __THREW__; __THREW__ = 0;
     $123 = $122&1;
     if (!($123)) {
      $124 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $124;
      $125 = HEAP32[$__mi>>2]|0;
      $126 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
      invoke_viiiiiii(471,($agg$result|0),($$byval_copy|0),($__mb$0|0),($125|0),($126|0),($__iob|0),($__fl|0));
      $127 = __THREW__; __THREW__ = 0;
      $128 = $127&1;
      if (!($128)) {
       $129 = ($103|0)==(0|0);
       if (!($129)) {
        _free($103);
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       $130 = HEAP32[$__loc>>2]|0;
       (__ZNSt3__114__shared_count16__release_sharedEv($130)|0);
       STACKTOP = sp;return;
      }
     }
     $101 = ___cxa_find_matching_catch()|0;
     $102 = tempRet0;
     $104 = ($103|0)==(0|0);
     if ($104) {
      $$0 = $101;$$01 = $102;
     } else {
      _free($103);
      $$0 = $101;$$01 = $102;
     }
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;
  }
 } while(0);
 if ((label|0) == 47) {
  $97 = ___cxa_find_matching_catch()|0;
  $98 = tempRet0;
  $$1 = $97;$$12 = $98;
 }
 $131 = HEAP32[$__loc>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($131)|0);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i6 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__ndflt = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0;
 var $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $9 = (($__dflt) + 1|0);
  $10 = (($__dflt) + 1|0);
  $11 = $2&255;
  $12 = $11 >>> 1;
  $14 = $10;$15 = $12;$50 = $9;
 } else {
  $5 = (($__dflt) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($__dflt) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $14 = $6;$15 = $8;$50 = $6;
 }
 $13 = (($14) + ($15)|0);
 $$0$i6 = $50;
 while(1) {
  $16 = ($$0$i6>>>0)<($13>>>0);
  if (!($16)) {
   label = 11;
   break;
  }
  $17 = HEAP8[$$0$i6>>0]|0;
  __THREW__ = 0;
  invoke_vii(372,($__ndflt|0),($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   label = 15;
   break;
  }
  $20 = (($$0$i6) + 1|0);
  $$0$i6 = $20;
 }
 do {
  if ((label|0) == 11) {
   $21 = ($__c|0)==(-1);
   $22 = $__c << 1;
   $23 = $22;
   $24 = $21 ? (-1) : $23;
   $25 = HEAP8[$__ndflt>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $30 = (($__ndflt) + 1|0);
    $31 = $30;
   } else {
    $28 = (($__ndflt) + 8|0);
    $29 = HEAP32[$28>>2]|0;
    $31 = $29;
   }
   __THREW__ = 0;
   $32 = (invoke_iiiii(493,($24|0),($__set|0),($__msgid|0),($31|0))|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $37 = ___cxa_find_matching_catch()|0;
    $38 = tempRet0;
    $lpad$phi$index = $37;$lpad$phi$index2 = $38;
    label = 17;
    break;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $39 = (($agg$result) + ($__i$0$i$i3<<2)|0);
    HEAP32[$39>>2] = 0;
    $40 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $40;
   }
   $41 = (_strlen(($32|0))|0);
   $42 = (($32) + ($41)|0);
   $$0$i = $32;
   while(1) {
    $43 = ($$0$i>>>0)<($42>>>0);
    if (!($43)) {
     label = 26;
     break;
    }
    $44 = HEAP8[$$0$i>>0]|0;
    __THREW__ = 0;
    invoke_vii(372,($agg$result|0),($44|0));
    $45 = __THREW__; __THREW__ = 0;
    $46 = $45&1;
    if ($46) {
     label = 25;
     break;
    }
    $47 = (($$0$i) + 1|0);
    $$0$i = $47;
   }
   if ((label|0) == 25) {
    $48 = ___cxa_find_matching_catch()|0;
    $49 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    $$01 = $48;$$02 = $49;
    break;
   }
   else if ((label|0) == 26) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
    STACKTOP = sp;return;
   }
  }
  else if ((label|0) == 15) {
   $35 = ___cxa_find_matching_catch()|0;
   $36 = tempRet0;
   $lpad$phi$index = $35;$lpad$phi$index2 = $36;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $$01 = $lpad$phi$index;$$02 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i13 = 0, $$1 = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bn$i = 0, $__bn$i11 = 0, $__buf$i = 0, $__buf$i10 = 0, $__i$0$i$i = 0, $__i$0$i$i7 = 0, $__mb$i = 0, $__mb$i9 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i12 = 0, $__wn$i = 0;
 var $exitcond$i$i = 0, $exitcond$i$i8 = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi32$index = 0, $lpad$phi32$index3 = 0, $or$cond$i = 0, $or$cond$i14 = 0, $or$cond3$i = 0, $or$cond3$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i9 = sp + 184|0;
 $__buf$i10 = sp + 192|0;
 $__bn$i11 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $3;
 }
 $4 = (($0) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = ((8672 + 8|0));
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $12 = (($__dflt) + 4|0);
  $13 = (($__dflt) + 4|0);
  $14 = $5&255;
  $15 = $14 >>> 1;
  $100 = $12;$17 = $13;$18 = $15;
 } else {
  $8 = (($__dflt) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($__dflt) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $100 = $9;$17 = $9;$18 = $11;
 }
 $16 = (($17) + ($18<<2)|0);
 $19 = (($__buf$i10) + 32|0);
 $$0$i13 = $100;$__r$0$i12 = 0;
 L9: while(1) {
  $20 = ($$0$i13>>>0)<($16>>>0);
  $21 = ($__r$0$i12|0)!=(2);
  $or$cond$i14 = $21 & $20;
  if (!($or$cond$i14)) {
   label = 18;
   break;
  }
  HEAP32[$__wn$i>>2] = $$0$i13;
  $22 = HEAP32[$0>>2]|0;
  $23 = (($22) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  __THREW__ = 0;
  $25 = (invoke_iiiiiiiii($24|0,($0|0),($__mb$i9|0),($$0$i13|0),($16|0),($__wn$i|0),($__buf$i10|0),($19|0),($__bn$i11|0))|0);
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if ($27) {
   label = 24;
   break;
  }
  $28 = ($25|0)==(2);
  $29 = HEAP32[$__wn$i>>2]|0;
  $30 = ($29|0)==($$0$i13|0);
  $or$cond3$i15 = $28 | $30;
  if ($or$cond3$i15) {
   label = 12;
   break;
  }
  $__p$0$i16 = $__buf$i10;
  while(1) {
   $33 = HEAP32[$__bn$i11>>2]|0;
   $34 = ($__p$0$i16>>>0)<($33>>>0);
   if (!($34)) {
    break;
   }
   $35 = HEAP8[$__p$0$i16>>0]|0;
   __THREW__ = 0;
   invoke_vii(372,($__ndflt|0),($35|0));
   $36 = __THREW__; __THREW__ = 0;
   $37 = $36&1;
   if ($37) {
    label = 23;
    break L9;
   }
   $38 = (($__p$0$i16) + 1|0);
   $__p$0$i16 = $38;
  }
  $39 = HEAP32[$__wn$i>>2]|0;
  $$0$i13 = $39;$__r$0$i12 = $25;
 }
 do {
  if ((label|0) == 12) {
   __THREW__ = 0;
   invoke_vi(477,(7904|0));
   $31 = __THREW__; __THREW__ = 0;
   $32 = $31&1;
   if ($32) {
    $60 = ___cxa_find_matching_catch()|0;
    $61 = tempRet0;
    $lpad$phi32$index = $60;$lpad$phi32$index3 = $61;
    label = 26;
    break;
   } else {
    // unreachable;
   }
  }
  else if ((label|0) == 18) {
   $40 = ($__c|0)==(-1);
   $41 = $__c << 1;
   $42 = $41;
   $43 = $40 ? (-1) : $42;
   $44 = HEAP8[$__ndflt>>0]|0;
   $45 = $44 & 1;
   $46 = ($45<<24>>24)==(0);
   if ($46) {
    $49 = (($__ndflt) + 1|0);
    $50 = $49;
   } else {
    $47 = (($__ndflt) + 8|0);
    $48 = HEAP32[$47>>2]|0;
    $50 = $48;
   }
   __THREW__ = 0;
   $51 = (invoke_iiiii(493,($43|0),($__set|0),($__msgid|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   if ($53) {
    $54 = ___cxa_find_matching_catch()|0;
    $55 = tempRet0;
    $$1 = $54;$$13 = $55;
    break;
   }
   $__i$0$i$i7 = 0;
   while(1) {
    $exitcond$i$i8 = ($__i$0$i$i7|0)==(3);
    if ($exitcond$i$i8) {
     break;
    }
    $62 = (($agg$result) + ($__i$0$i$i7<<2)|0);
    HEAP32[$62>>2] = 0;
    $63 = (($__i$0$i$i7) + 1)|0;
    $__i$0$i$i7 = $63;
   }
   $64 = (($1) + 4|0);
   HEAP32[$64>>2] = 0;
   HEAP32[$1>>2] = ((8776 + 8|0));
   $65 = (_strlen(($51|0))|0);
   $66 = (($51) + ($65)|0);
   $67 = $66;
   $68 = (($__buf$i) + 128|0);
   $$0$i = $51;$__r$0$i = 0;
   L38: while(1) {
    $69 = ($$0$i>>>0)<($66>>>0);
    $70 = ($__r$0$i|0)!=(2);
    $or$cond$i = $70 & $69;
    if (!($or$cond$i)) {
     label = 41;
     break;
    }
    HEAP32[$__nn$i>>2] = $$0$i;
    $71 = HEAP32[$1>>2]|0;
    $72 = (($71) + 16|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = $$0$i;
    $75 = (($67) - ($74))|0;
    $76 = ($75|0)>(32);
    $77 = (($$0$i) + 32|0);
    $78 = $76 ? $77 : $66;
    __THREW__ = 0;
    $79 = (invoke_iiiiiiiii($73|0,($1|0),($__mb$i|0),($$0$i|0),($78|0),($__nn$i|0),($__buf$i|0),($68|0),($__bn$i|0))|0);
    $80 = __THREW__; __THREW__ = 0;
    $81 = $80&1;
    if ($81) {
     label = 43;
     break;
    }
    $82 = ($79|0)==(2);
    $83 = HEAP32[$__nn$i>>2]|0;
    $84 = ($83|0)==($$0$i|0);
    $or$cond3$i = $82 | $84;
    if ($or$cond3$i) {
     label = 35;
     break;
    }
    $__p$0$i = $__buf$i;
    while(1) {
     $87 = HEAP32[$__bn$i>>2]|0;
     $88 = ($__p$0$i>>>0)<($87>>>0);
     if (!($88)) {
      break;
     }
     $89 = HEAP32[$__p$0$i>>2]|0;
     __THREW__ = 0;
     invoke_vii(485,($agg$result|0),($89|0));
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 42;
      break L38;
     }
     $92 = (($__p$0$i) + 4|0);
     $__p$0$i = $92;
    }
    $93 = HEAP32[$__nn$i>>2]|0;
    $$0$i = $93;$__r$0$i = $79;
   }
   do {
    if ((label|0) == 35) {
     __THREW__ = 0;
     invoke_vi(477,(7904|0));
     $85 = __THREW__; __THREW__ = 0;
     $86 = $85&1;
     if ($86) {
      $98 = ___cxa_find_matching_catch()|0;
      $99 = tempRet0;
      $lpad$phi$index = $98;$lpad$phi$index10 = $99;
      break;
     } else {
      // unreachable;
     }
    }
    else if ((label|0) == 41) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
     STACKTOP = sp;return;
    }
    else if ((label|0) == 42) {
     $94 = ___cxa_find_matching_catch()|0;
     $95 = tempRet0;
     $lpad$phi$index = $94;$lpad$phi$index10 = $95;
    }
    else if ((label|0) == 43) {
     $96 = ___cxa_find_matching_catch()|0;
     $97 = tempRet0;
     $lpad$phi$index = $96;$lpad$phi$index10 = $97;
    }
   } while(0);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
   $$1 = $lpad$phi$index;$$13 = $lpad$phi$index10;
  }
  else if ((label|0) == 23) {
   $56 = ___cxa_find_matching_catch()|0;
   $57 = tempRet0;
   $lpad$phi32$index = $56;$lpad$phi32$index3 = $57;
   label = 26;
  }
  else if ((label|0) == 24) {
   $58 = ___cxa_find_matching_catch()|0;
   $59 = tempRet0;
   $lpad$phi32$index = $58;$lpad$phi32$index3 = $59;
   label = 26;
  }
 } while(0);
 if ((label|0) == 26) {
  $$1 = $lpad$phi32$index;$$13 = $lpad$phi32$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 return;
}
function __ZNSt3__120__vector_base_commonILb1EEC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6904|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2416 + 8|0));
  ___cxa_throw(($0|0),(2464|0),(59|0));
  // unreachable;
 }
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(450,($0|0),(6904|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = ((2480 + 8|0));
  ___cxa_throw(($0|0),(2528|0),(59|0));
  // unreachable;
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((6936 + 8|0));
 $2 = (($this) + 8|0);
 __THREW__ = 0;
 invoke_vii(494,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $82 = ___cxa_find_matching_catch()|0;
  $83 = tempRet0;
  $$1 = $83;$$12 = $82;
 } else {
  $5 = (($this) + 144|0);
  __THREW__ = 0;
  invoke_viii(495,($5|0),(6928|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $84 = ___cxa_find_matching_catch()|0;
   $85 = tempRet0;
   $$0 = $85;$$01 = $84;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = (($this) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = $$pre$i$i$i;
   while(1) {
    $11 = ($10|0)==($8|0);
    if ($11) {
     break;
    }
    $12 = (($10) + -4|0);
    HEAP32[$9>>2] = $12;
    $10 = $12;
   }
   HEAP32[((11832 + 4|0))>>2] = 0;
   HEAP32[11832>>2] = ((5384 + 8|0));
   __THREW__ = 0;
   invoke_vii(496,($this|0),(11832|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 42;
    } else {
     HEAP32[((11824 + 4|0))>>2] = 0;
     HEAP32[11824>>2] = ((5424 + 8|0));
     __THREW__ = 0;
     invoke_vii(497,($this|0),(11824|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if ($16) {
      label = 42;
     } else {
      HEAP32[((11808 + 4|0))>>2] = 0;
      HEAP32[11808>>2] = ((7032 + 8|0));
      HEAP32[((11808 + 8|0))>>2] = 0;
      HEAP8[((11808 + 12|0))>>0] = 0;
      $17 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[((11808 + 8|0))>>2] = $17;
      __THREW__ = 0;
      invoke_vii(498,($this|0),(11808|0));
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       label = 42;
      } else {
       HEAP32[((11800 + 4|0))>>2] = 0;
       HEAP32[11800>>2] = ((7992 + 8|0));
       __THREW__ = 0;
       invoke_vii(499,($this|0),(11800|0));
       $20 = __THREW__; __THREW__ = 0;
       $21 = $20&1;
       if ($21) {
        label = 42;
       } else {
        HEAP32[((11792 + 4|0))>>2] = 0;
        HEAP32[11792>>2] = ((8208 + 8|0));
        __THREW__ = 0;
        invoke_vii(500,($this|0),(11792|0));
        $22 = __THREW__; __THREW__ = 0;
        $23 = $22&1;
        if ($23) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(501,(11776|0),1);
         $24 = __THREW__; __THREW__ = 0;
         $25 = $24&1;
         if ($25) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(502,($this|0),(11776|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           label = 42;
          } else {
           HEAP32[((11768 + 4|0))>>2] = 0;
           HEAP32[11768>>2] = ((8432 + 8|0));
           __THREW__ = 0;
           invoke_vii(503,($this|0),(11768|0));
           $28 = __THREW__; __THREW__ = 0;
           $29 = $28&1;
           if ($29) {
            label = 42;
           } else {
            HEAP32[((11760 + 4|0))>>2] = 0;
            HEAP32[11760>>2] = ((8552 + 8|0));
            __THREW__ = 0;
            invoke_vii(504,($this|0),(11760|0));
            $30 = __THREW__; __THREW__ = 0;
            $31 = $30&1;
            if ($31) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(11736,1);
             __THREW__ = 0;
             invoke_vii(505,($this|0),(11736|0));
             $32 = __THREW__; __THREW__ = 0;
             $33 = $32&1;
             if ($33) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(11704,1);
              __THREW__ = 0;
              invoke_vii(506,($this|0),(11704|0));
              $34 = __THREW__; __THREW__ = 0;
              $35 = $34&1;
              if ($35) {
               label = 42;
              } else {
               HEAP32[((11696 + 4|0))>>2] = 0;
               HEAP32[11696>>2] = ((5464 + 8|0));
               __THREW__ = 0;
               invoke_vii(507,($this|0),(11696|0));
               $36 = __THREW__; __THREW__ = 0;
               $37 = $36&1;
               if ($37) {
                label = 42;
               } else {
                HEAP32[((11688 + 4|0))>>2] = 0;
                HEAP32[11688>>2] = ((5584 + 8|0));
                __THREW__ = 0;
                invoke_vii(508,($this|0),(11688|0));
                $38 = __THREW__; __THREW__ = 0;
                $39 = $38&1;
                if ($39) {
                 label = 42;
                } else {
                 HEAP32[((11680 + 4|0))>>2] = 0;
                 HEAP32[11680>>2] = ((5656 + 8|0));
                 __THREW__ = 0;
                 invoke_vii(509,($this|0),(11680|0));
                 $40 = __THREW__; __THREW__ = 0;
                 $41 = $40&1;
                 if ($41) {
                  label = 42;
                 } else {
                  HEAP32[((11672 + 4|0))>>2] = 0;
                  HEAP32[11672>>2] = ((5752 + 8|0));
                  __THREW__ = 0;
                  invoke_vii(510,($this|0),(11672|0));
                  $42 = __THREW__; __THREW__ = 0;
                  $43 = $42&1;
                  if ($43) {
                   label = 42;
                  } else {
                   HEAP32[((11664 + 4|0))>>2] = 0;
                   HEAP32[11664>>2] = ((6344 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(511,($this|0),(11664|0));
                   $44 = __THREW__; __THREW__ = 0;
                   $45 = $44&1;
                   if ($45) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11656 + 4|0))>>2] = 0;
                   HEAP32[11656>>2] = ((6408 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(512,($this|0),(11656|0));
                   $46 = __THREW__; __THREW__ = 0;
                   $47 = $46&1;
                   if ($47) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11648 + 4|0))>>2] = 0;
                   HEAP32[11648>>2] = ((6472 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(513,($this|0),(11648|0));
                   $48 = __THREW__; __THREW__ = 0;
                   $49 = $48&1;
                   if ($49) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11640 + 4|0))>>2] = 0;
                   HEAP32[11640>>2] = ((6536 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(514,($this|0),(11640|0));
                   $50 = __THREW__; __THREW__ = 0;
                   $51 = $50&1;
                   if ($51) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11632 + 4|0))>>2] = 0;
                   HEAP32[11632>>2] = ((6600 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(515,($this|0),(11632|0));
                   $52 = __THREW__; __THREW__ = 0;
                   $53 = $52&1;
                   if ($53) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11624 + 4|0))>>2] = 0;
                   HEAP32[11624>>2] = ((6680 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(516,($this|0),(11624|0));
                   $54 = __THREW__; __THREW__ = 0;
                   $55 = $54&1;
                   if ($55) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11616 + 4|0))>>2] = 0;
                   HEAP32[11616>>2] = ((6736 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(517,($this|0),(11616|0));
                   $56 = __THREW__; __THREW__ = 0;
                   $57 = $56&1;
                   if ($57) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11608 + 4|0))>>2] = 0;
                   HEAP32[11608>>2] = ((6784 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(518,($this|0),(11608|0));
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11592 + 4|0))>>2] = 0;
                   HEAP32[11592>>2] = ((5832 + 8|0));
                   HEAP32[((11592 + 8|0))>>2] = ((5832 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(519,($this|0),(11592|0));
                   $60 = __THREW__; __THREW__ = 0;
                   $61 = $60&1;
                   if ($61) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11576 + 4|0))>>2] = 0;
                   HEAP32[11576>>2] = ((5984 + 8|0));
                   HEAP32[((11576 + 8|0))>>2] = ((5984 + 56|0));
                   __THREW__ = 0;
                   invoke_vii(520,($this|0),(11576|0));
                   $62 = __THREW__; __THREW__ = 0;
                   $63 = $62&1;
                   if ($63) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11560 + 4|0))>>2] = 0;
                   HEAP32[11560>>2] = ((7928 + 8|0));
                   __THREW__ = 0;
                   $64 = (invoke_i(459)|0);
                   $65 = __THREW__; __THREW__ = 0;
                   $66 = $65&1;
                   if ($66) {
                    $67 = ___cxa_find_matching_catch()|0;
                    $68 = tempRet0;
                    $eh$lpad$body$index3Z2D = $68;$eh$lpad$body$indexZ2D = $67;
                    break;
                   }
                   HEAP32[((11560 + 8|0))>>2] = $64;
                   HEAP32[11560>>2] = ((6280 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(521,($this|0),(11560|0));
                   $69 = __THREW__; __THREW__ = 0;
                   $70 = $69&1;
                   if ($70) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11544 + 4|0))>>2] = 0;
                   HEAP32[11544>>2] = ((7928 + 8|0));
                   __THREW__ = 0;
                   $71 = (invoke_i(459)|0);
                   $72 = __THREW__; __THREW__ = 0;
                   $73 = $72&1;
                   if ($73) {
                    $74 = ___cxa_find_matching_catch()|0;
                    $75 = tempRet0;
                    $eh$lpad$body$index3Z2D = $75;$eh$lpad$body$indexZ2D = $74;
                    break;
                   }
                   HEAP32[((11544 + 8|0))>>2] = $71;
                   HEAP32[11544>>2] = ((6312 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(522,($this|0),(11544|0));
                   $76 = __THREW__; __THREW__ = 0;
                   $77 = $76&1;
                   if ($77) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11536 + 4|0))>>2] = 0;
                   HEAP32[11536>>2] = ((6824 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(523,($this|0),(11536|0));
                   $78 = __THREW__; __THREW__ = 0;
                   $79 = $78&1;
                   if ($79) {
                    label = 42;
                    break;
                   }
                   HEAP32[((11528 + 4|0))>>2] = 0;
                   HEAP32[11528>>2] = ((6864 + 8|0));
                   __THREW__ = 0;
                   invoke_vii(524,($this|0),(11528|0));
                   $80 = __THREW__; __THREW__ = 0;
                   $81 = $80&1;
                   if ($81) {
                    label = 42;
                    break;
                   }
                   return;
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $86 = ___cxa_find_matching_catch()|0;
    $87 = tempRet0;
    $eh$lpad$body$index3Z2D = $87;$eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[6976>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((6976|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(525)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((6976|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6968>>2] = 6960;
     ___cxa_guard_release((6976|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6968>>2]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $2;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 do {
  if ($8) {
   $16 = $3;
  } else {
   $9 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(526,($0|0),($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $$pre = HEAP32[$0>>2]|0;
    $16 = $$pre;
    break;
   }
   $12 = ___cxa_find_matching_catch()|0;
   $13 = tempRet0;
   $14 = ($f|0)==(0|0);
   if (!($14)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($12|0);
   // unreachable;
  }
 } while(0);
 $15 = (($16) + ($id<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $20 = $16;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($17)|0);
  $$pre2 = HEAP32[$0>>2]|0;
  $20 = $$pre2;
 }
 $19 = (($20) + ($id<<2)|0);
 HEAP32[$19>>2] = $f;
 return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((6936 + 8|0));
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $i$0 = 0;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  $3 = HEAP32[$0>>2]|0;
  $4 = $2;
  $5 = $3;
  $6 = (($4) - ($5))|0;
  $7 = $6 >> 2;
  $8 = ($i$0>>>0)<($7>>>0);
  if (!($8)) {
   break;
  }
  $9 = (($3) + ($i$0<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   (__ZNSt3__114__shared_count16__release_sharedEv($10)|0);
  }
  $12 = (($i$0) + 1)|0;
  $i$0 = $12;
 }
 $13 = (($this) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = (($this) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(2664|0),(67|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(11368,1);
 HEAP32[6960>>2] = 11368;
 return (6960|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[6984>>2] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (6984|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7000>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7000|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(527)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((7000|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6992>>2] = 6984;
     ___cxa_guard_release((7000|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6992>>2]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(528)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = (($__p$i) + 4|0);
  HEAP32[$2>>2] = (529);
  $3 = (($__p$i) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,530);
 }
 $4 = (($this) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = (($1) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[7008>>2]|0;HEAP32[7008>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = (($this) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(531)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $vec;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $6 = (($5) + ($4<<1)|0);
   $7 = HEAP16[$6>>1]|0;
   $8 = $7&65535;
   $10 = $8;
  } else {
   $10 = 0;
  }
  $9 = $10&65535;
  HEAP16[$$0>>1] = $9;
  $11 = (($$01) + 4|0);
  $12 = (($$0) + 2|0);
  $$0 = $12;$$01 = $11;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if ($isascii) {
   $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $3 = (($2) + ($1<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 & $m;
   $6 = ($5<<16>>16)==(0);
   if (!($6)) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if (!($isascii)) {
   $$0$lcssa = $$0;
   break;
  }
  $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $3 = (($2) + ($1<<1)|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4 & $m;
  $6 = ($5<<16>>16)==(0);
  if ($6) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = (($$0) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(532)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(533)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = (($$0) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $2 = $1 << 24 >> 24;
  HEAP32[$$0>>2] = $2;
  $3 = (($$01) + 1|0);
  $4 = (($$0) + 4|0);
  $$0 = $4;$$01 = $3;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  $5 = $4&255;
  $$dfault = $isascii ? $5 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $6 = (($$01) + 4|0);
  $7 = (($$0) + 1|0);
  $$0 = $7;$$01 = $6;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7032 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = (($$0) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  HEAP8[$$0>>0] = $1;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $isascii2 = ($1<<24>>24)>(-1);
  $$dfault = $isascii2 ? $1 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $2 = (($$01) + 1|0);
  $3 = (($$0) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7104 + 8|0));
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = (($this) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$0$ph = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa99 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa92 = 0, $$1 = 0, $$1$lcssa = 0, $$lcssa = 0, $$lcssa104 = 0, $$lcssa111 = 0, $$pre = 0, $$pre59 = 0, $$pre60 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $104$phi = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $n$0 = 0, $not$ = 0, $or$cond = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP32[$fend$0>>2]|0;
  $2 = ($1|0)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 4|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 51;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $20 >> 2;
  $22 = $$02;
  $23 = (($4) - ($22))|0;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(534,($$02|0),($frm_nxt|0),($21|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa104 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == 0)) {
   $$0$ph = 1;
   label = 53;
   break;
  } else if ((($26|0) == -1)) {
   $$01$lcssa99 = $$01;$$02$lcssa92 = $$02;
   label = 16;
   break;
  }
  $66 = HEAP32[$to_nxt>>2]|0;
  $67 = (($66) + ($26)|0);
  HEAP32[$to_nxt>>2] = $67;
  $68 = ($67|0)==($to_end|0);
  if ($68) {
   label = 30;
   break;
  }
  $69 = ($fend$1|0)==($frm_end|0);
  if ($69) {
   $$pre59 = HEAP32[$frm_nxt>>2]|0;
   $$01$be = $$pre59;$$02$be = $67;$fend$1$be = $frm_end;
  } else {
   $70 = HEAP32[$5>>2]|0;
   $71 = (_uselocale(($70|0))|0);
   __THREW__ = 0;
   $72 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    $$lcssa111 = $71;
    label = 38;
    break;
   }
   $75 = ($71|0)==(0|0);
   if (!($75)) {
    __THREW__ = 0;
    (invoke_ii(474,($71|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 37;
     break;
    }
   }
   $87 = ($72|0)==(-1);
   if ($87) {
    $$0$ph = 2;
    label = 53;
    break;
   }
   $88 = HEAP32[$to_nxt>>2]|0;
   $89 = $88;
   $90 = (($4) - ($89))|0;
   $91 = ($72>>>0)>($90>>>0);
   if ($91) {
    $$0$ph = 1;
    label = 53;
    break;
   }
   $n$0 = $72;$p$0 = $tmp;
   while(1) {
    $92 = ($n$0|0)==(0);
    if ($92) {
     break;
    }
    $93 = (($p$0) + 1|0);
    $94 = HEAP8[$p$0>>0]|0;
    $95 = HEAP32[$to_nxt>>2]|0;
    $96 = (($95) + 1|0);
    HEAP32[$to_nxt>>2] = $96;
    HEAP8[$95>>0] = $94;
    $97 = (($n$0) + -1)|0;
    $n$0 = $97;$p$0 = $93;
   }
   $98 = HEAP32[$frm_nxt>>2]|0;
   $99 = (($98) + 4|0);
   HEAP32[$frm_nxt>>2] = $99;
   $104 = $98;$fend$2 = $99;
   while(1) {
    $100 = ($fend$2|0)==($frm_end|0);
    if ($100) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $101 = HEAP32[$fend$2>>2]|0;
    $102 = ($101|0)==(0);
    $103 = (($104) + 8|0);
    if ($102) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $104$phi = $fend$2;$fend$2 = $103;$104 = $104$phi;
    }
   }
   $$pre60 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $99;$$02$be = $$pre60;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa104|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa104|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   HEAP32[$to_nxt>>2] = $$02$lcssa92;
   $$1 = $$01$lcssa99;$46 = $$02$lcssa92;
   while(1) {
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $43 = HEAP32[$$1>>2]|0;
    $44 = HEAP32[$5>>2]|0;
    $45 = (_uselocale(($44|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiii(535,($46|0),($43|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $45;
     label = 22;
     break;
    }
    $50 = ($45|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($45|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    $62 = ($47|0)==(-1);
    if ($62) {
     $$1$lcssa = $$1;
     label = 28;
     break;
    }
    $63 = HEAP32[$to_nxt>>2]|0;
    $64 = (($63) + ($47)|0);
    HEAP32[$to_nxt>>2] = $64;
    $65 = (($$1) + 4|0);
    $$1 = $65;$46 = $64;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $$0 = 2;
    break;
   }
  }
  else if ((label|0) == 30) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $105 = $$pre;
   label = 52;
  }
  else if ((label|0) == 37) {
   $78 = ___cxa_find_matching_catch(0|0)|0;
   $79 = tempRet0;
   ___clang_call_terminate($78);
   // unreachable;
  }
  else if ((label|0) == 38) {
   $80 = ___cxa_find_matching_catch()|0;
   $81 = tempRet0;
   $82 = ($$lcssa111|0)==(0|0);
   if (!($82)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa111|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     $85 = ___cxa_find_matching_catch(0|0)|0;
     $86 = tempRet0;
     ___clang_call_terminate($85);
     // unreachable;
    }
   }
   ___resumeException($80|0);
   // unreachable;
  }
  else if ((label|0) == 51) {
   $105 = $$01$lcssa;
   label = 52;
  }
  else if ((label|0) == 53) {
   $$0 = $$0$ph;
  }
 } while(0);
 if ((label|0) == 52) {
  $not$ = ($105|0)!=($frm_end|0);
  $106 = $not$&1;
  $$0 = $106;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$01 = 0, $$01$be = 0, $$01$lcssa = 0, $$01$lcssa135 = 0, $$02 = 0, $$02$be = 0, $$02$lcssa128 = 0, $$1 = 0, $$1$lcssa = 0, $$1$lcssa121 = 0, $$1$lcssa122 = 0, $$2 = 0, $$lcssa = 0, $$lcssa142 = 0, $$lcssa147 = 0, $$lcssa154 = 0, $$pre = 0, $$pre80 = 0, $$pre81 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $97$phi = 0, $98 = 0;
 var $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$1$be = 0, $fend$2 = 0, $fend$2$lcssa = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP8[$fend$0>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = (($fend$0) + 1|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = (($this) + 8|0);
 $$01 = $frm;$$02 = $to;$fend$1 = $fend$0$lcssa;
 while(1) {
  $6 = ($$01|0)==($frm_end|0);
  $7 = ($$02|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $$01$lcssa = $$01;
   label = 50;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$01;
  $20 = (($18) - ($19))|0;
  $21 = $$02;
  $22 = (($4) - ($21))|0;
  $23 = $22 >> 2;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale(($24|0))|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(536,($$02|0),($frm_nxt|0),($20|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa147 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(474,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  if ((($26|0) == 0)) {
   label = 52;
   break;
  } else if ((($26|0) == -1)) {
   $$01$lcssa135 = $$01;$$02$lcssa128 = $$02;$$lcssa142 = $18;
   label = 16;
   break;
  }
  $67 = HEAP32[$to_nxt>>2]|0;
  $68 = (($67) + ($26<<2)|0);
  HEAP32[$to_nxt>>2] = $68;
  $69 = ($68|0)==($to_end|0);
  if ($69) {
   label = 34;
   break;
  }
  $70 = ($fend$1|0)==($frm_end|0);
  $$pre80 = HEAP32[$frm_nxt>>2]|0;
  if ($70) {
   $$01$be = $$pre80;$$02$be = $68;$fend$1$be = $frm_end;
  } else {
   $71 = HEAP32[$5>>2]|0;
   $72 = (_uselocale(($71|0))|0);
   __THREW__ = 0;
   $73 = (invoke_iiiii(537,($68|0),($$pre80|0),1,($st|0))|0);
   $74 = __THREW__; __THREW__ = 0;
   $75 = $74&1;
   if ($75) {
    $$lcssa154 = $72;
    label = 40;
    break;
   }
   $76 = ($72|0)==(0|0);
   if (!($76)) {
    __THREW__ = 0;
    (invoke_ii(474,($72|0))|0);
    $77 = __THREW__; __THREW__ = 0;
    $78 = $77&1;
    if ($78) {
     label = 39;
     break;
    }
   }
   $88 = ($73|0)==(0);
   if (!($88)) {
    label = 52;
    break;
   }
   $89 = HEAP32[$to_nxt>>2]|0;
   $90 = (($89) + 4|0);
   HEAP32[$to_nxt>>2] = $90;
   $91 = HEAP32[$frm_nxt>>2]|0;
   $92 = (($91) + 1|0);
   HEAP32[$frm_nxt>>2] = $92;
   $97 = $91;$fend$2 = $92;
   while(1) {
    $93 = ($fend$2|0)==($frm_end|0);
    if ($93) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $94 = HEAP8[$fend$2>>0]|0;
    $95 = ($94<<24>>24)==(0);
    $96 = (($97) + 2|0);
    if ($95) {
     $fend$2$lcssa = $fend$2;
     break;
    } else {
     $97$phi = $fend$2;$fend$2 = $96;$97 = $97$phi;
    }
   }
   $$pre81 = HEAP32[$to_nxt>>2]|0;
   $$01$be = $92;$$02$be = $$pre81;$fend$1$be = $fend$2$lcssa;
  }
  $$01 = $$01$be;$$02 = $$02$be;$fend$1 = $fend$1$be;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch()|0;
   $35 = tempRet0;
   $36 = ($$lcssa147|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa147|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   $$1 = $$01$lcssa135;$storemerge = $$02$lcssa128;
   while(1) {
    HEAP32[$to_nxt>>2] = $storemerge;
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$1|0)==($41|0);
    if ($42) {
     $$1$lcssa = $$1;
     label = 32;
     break;
    }
    $43 = $$1;
    $44 = (($$lcssa142) - ($43))|0;
    $45 = HEAP32[$5>>2]|0;
    $46 = (_uselocale(($45|0))|0);
    __THREW__ = 0;
    $47 = (invoke_iiiii(537,($storemerge|0),($$1|0),($44|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $46;
     label = 22;
     break;
    }
    $50 = ($46|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(474,($46|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    if ((($47|0) == 0)) {
     $62 = (($$1) + 1|0);
     $$2 = $62;
    } else if ((($47|0) == -1)) {
     $$1$lcssa121 = $$1;
     label = 28;
     break;
    } else if ((($47|0) == -2)) {
     $$1$lcssa122 = $$1;
     label = 29;
     break;
    } else {
     $63 = (($$1) + ($47)|0);
     $$2 = $63;
    }
    $64 = HEAP32[$to_nxt>>2]|0;
    $65 = (($64) + 4|0);
    $$1 = $$2;$storemerge = $65;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(474,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa121;
    $$0 = 2;
    break;
   }
   else if ((label|0) == 29) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa122;
    $$0 = 1;
    break;
   }
   else if ((label|0) == 32) {
    HEAP32[$frm_nxt>>2] = $$1$lcssa;
    $not$3 = ($$1$lcssa|0)!=($frm_end|0);
    $66 = $not$3&1;
    $$0 = $66;
    break;
   }
  }
  else if ((label|0) == 34) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $98 = $$pre;
   label = 51;
  }
  else if ((label|0) == 39) {
   $79 = ___cxa_find_matching_catch(0|0)|0;
   $80 = tempRet0;
   ___clang_call_terminate($79);
   // unreachable;
  }
  else if ((label|0) == 40) {
   $81 = ___cxa_find_matching_catch()|0;
   $82 = tempRet0;
   $83 = ($$lcssa154|0)==(0|0);
   if (!($83)) {
    __THREW__ = 0;
    (invoke_ii(474,($$lcssa154|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     $86 = ___cxa_find_matching_catch(0|0)|0;
     $87 = tempRet0;
     ___clang_call_terminate($86);
     // unreachable;
    }
   }
   ___resumeException($81|0);
   // unreachable;
  }
  else if ((label|0) == 50) {
   $98 = $$01$lcssa;
   label = 51;
  }
  else if ((label|0) == 52) {
   $$0 = 2;
  }
 } while(0);
 if ((label|0) == 51) {
  $not$ = ($98|0)!=($frm_end|0);
  $99 = $not$&1;
  $$0 = $99;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(535,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(474,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(474,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 if ((($3|0) == 0) | (($3|0) == -1)) {
  $$0 = 2;
 } else {
  $18 = (($3) + -1)|0;
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = $to_end;
  $21 = $19;
  $22 = (($20) - ($21))|0;
  $23 = ($18>>>0)>($22>>>0);
  if ($23) {
   $$0 = 1;
  } else {
   $n$0 = $18;$p$0 = $tmp;
   while(1) {
    $24 = ($n$0|0)==(0);
    if ($24) {
     break;
    }
    $25 = (($p$0) + 1|0);
    $26 = HEAP8[$p$0>>0]|0;
    $27 = HEAP32[$to_nxt>>2]|0;
    $28 = (($27) + 1|0);
    HEAP32[$to_nxt>>2] = $28;
    HEAP8[$27>>0] = $26;
    $29 = (($n$0) + -1)|0;
    $n$0 = $29;$p$0 = $25;
   }
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(474,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(538,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(474,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(474,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(474,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$01 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nbytes$1 = 0, $nwchar_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = (($this) + 8|0);
 $$01 = $frm;$nbytes$0 = 0;$nwchar_t$0 = 0;
 while(1) {
  $2 = ($nwchar_t$0>>>0)>=($mx>>>0);
  $3 = ($$01|0)==($frm_end|0);
  $or$cond = $3 | $2;
  if ($or$cond) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $4 = $$01;
  $5 = (($0) - ($4))|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = (_uselocale(($6|0))|0);
  __THREW__ = 0;
  $8 = (invoke_iiii(539,($$01|0),($5|0),($st|0))|0);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if ($10) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  $11 = ($7|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($7|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    label = 6;
    break;
   }
  }
  if ((($8|0) == 0)) {
   $23 = (($$01) + 1|0);
   $$1 = $23;$$pn = 1;
  } else if ((($8|0) == -2) | (($8|0) == -1)) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  } else {
   $24 = (($$01) + ($8)|0);
   $$1 = $24;$$pn = $8;
  }
  $nbytes$1 = (($$pn) + ($nbytes$0))|0;
  $25 = (($nwchar_t$0) + 1)|0;
  $$01 = $$1;$nbytes$0 = $nbytes$1;$nwchar_t$0 = $25;
 }
 if ((label|0) == 6) {
  $14 = ___cxa_find_matching_catch(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 else if ((label|0) == 7) {
  $16 = ___cxa_find_matching_catch()|0;
  $17 = tempRet0;
  $18 = ($$lcssa|0)==(0|0);
  if (!($18)) {
   __THREW__ = 0;
   (invoke_ii(474,($$lcssa|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    $21 = ___cxa_find_matching_catch(0|0)|0;
    $22 = tempRet0;
    ___clang_call_terminate($21);
    // unreachable;
   }
  }
  ___resumeException($16|0);
  // unreachable;
 }
 else if ((label|0) == 15) {
  return ($nbytes$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(474,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(474,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7184 + 8|0));
 $2 = (($this) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = (($this) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = (($this) + 12|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((7224 + 8|0));
 $2 = (($this) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = (($this) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = (($this) + 16|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7184 + 8|0));
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7224 + 8|0));
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7264,4);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7272)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7272,$0);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,7296,5);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(7304)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,7304,$0);
 return;
}
function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($iob) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 if ((($2|0) == 8)) {
  $$0 = 16;
 } else if ((($2|0) == 64)) {
  $$0 = 8;
 } else if ((($2|0) == 0)) {
  $$0 = 0;
 } else {
  $$0 = 10;
 }
 return ($$0|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7336>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7336|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[14536>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((14536|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 14368;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((14368 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((14536|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(14368|0),(14544|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((14368 + 12|0))|0),(14552|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(540,(((14368 + 24|0))|0),(14560|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(540,(((14368 + 36|0))|0),(14568|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(540,(((14368 + 48|0))|0),(14584|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(540,(((14368 + 60|0))|0),(14600|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(540,(((14368 + 72|0))|0),(14608|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(540,(((14368 + 84|0))|0),(14624|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(540,(((14368 + 96|0))|0),(14632|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(540,(((14368 + 108|0))|0),(14640|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(540,(((14368 + 120|0))|0),(14648|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(540,(((14368 + 132|0))|0),(14656|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(540,(((14368 + 144|0))|0),(14664|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((14368 + 156|0))|0),(14672|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7328>>2] = 14368;
                  ___cxa_guard_release((7336|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7336|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7328>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7352>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7352|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[14000>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((14000|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13832;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13832 + 168|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((14000|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(13832|0),(14008|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((13832 + 12|0))|0),(14040|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(541,(((13832 + 24|0))|0),(14072|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(541,(((13832 + 36|0))|0),(14104|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(541,(((13832 + 48|0))|0),(14144|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(541,(((13832 + 60|0))|0),(14184|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(541,(((13832 + 72|0))|0),(14216|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(541,(((13832 + 84|0))|0),(14256|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(541,(((13832 + 96|0))|0),(14272|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(541,(((13832 + 108|0))|0),(14288|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(541,(((13832 + 120|0))|0),(14304|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(541,(((13832 + 132|0))|0),(14320|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(541,(((13832 + 144|0))|0),(14336|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((13832 + 156|0))|0),(14352|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[7344>>2] = 13832;
                  ___cxa_guard_release((7352|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((7352|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[7344>>2]|0;
 return ($41|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7368>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7368|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[13608>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((13608|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 13320;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((13320 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((13608|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(13320|0),(13616|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(540,(((13320 + 12|0))|0),(13624|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(540,(((13320 + 24|0))|0),(13640|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(540,(((13320 + 36|0))|0),(13648|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(540,(((13320 + 48|0))|0),(13656|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(540,(((13320 + 60|0))|0),(13664|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(540,(((13320 + 72|0))|0),(13672|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(540,(((13320 + 84|0))|0),(13680|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(540,(((13320 + 96|0))|0),(13688|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(540,(((13320 + 108|0))|0),(13704|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(540,(((13320 + 120|0))|0),(13712|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(540,(((13320 + 132|0))|0),(13728|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(540,(((13320 + 144|0))|0),(13744|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(540,(((13320 + 156|0))|0),(13752|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(540,(((13320 + 168|0))|0),(13760|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 180|0))|0),(13768|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 192|0))|0),(13656|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 204|0))|0),(13776|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 216|0))|0),(13784|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 228|0))|0),(13792|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 240|0))|0),(13800|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 252|0))|0),(13808|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 264|0))|0),(13816|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(540,(((13320 + 276|0))|0),(13824|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7360>>2] = 13320;
                    ___cxa_guard_release((7368|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7368|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7360>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7384>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7384|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12768>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12768|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12480;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12480 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12768|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(12480|0),(12776|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(541,(((12480 + 12|0))|0),(12808|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(541,(((12480 + 24|0))|0),(12848|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(541,(((12480 + 36|0))|0),(12872|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(541,(((12480 + 48|0))|0),(12896|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(541,(((12480 + 60|0))|0),(12912|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(541,(((12480 + 72|0))|0),(12936|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(541,(((12480 + 84|0))|0),(12960|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(541,(((12480 + 96|0))|0),(12992|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(541,(((12480 + 108|0))|0),(13032|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(541,(((12480 + 120|0))|0),(13064|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(541,(((12480 + 132|0))|0),(13104|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(541,(((12480 + 144|0))|0),(13144|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(541,(((12480 + 156|0))|0),(13160|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(541,(((12480 + 168|0))|0),(13176|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 180|0))|0),(13192|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 192|0))|0),(12896|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 204|0))|0),(13208|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 216|0))|0),(13224|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 228|0))|0),(13240|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 240|0))|0),(13256|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 252|0))|0),(13272|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 264|0))|0),(13288|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(541,(((12480 + 276|0))|0),(13304|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[7376>>2] = 12480;
                    ___cxa_guard_release((7384|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((7384|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[7376>>2]|0;
 return ($61|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7400>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7400|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12456>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12456|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 12168;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((12168 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12456|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(540,(12168|0),(12464|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(540,(((12168 + 12|0))|0),(12472|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7392>>2] = 12168;
      ___cxa_guard_release((7400|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7400|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7392>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7416>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7416|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[12128>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((12128|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 11840;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = (($9) + 12|0);
       $12 = ($11|0)==(((11840 + 288|0))|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      ___cxa_guard_release((12128|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(541,(11840|0),(12136|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(541,(((11840 + 12|0))|0),(12152|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[7408>>2] = 11840;
      ___cxa_guard_release((7416|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((7416|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[7408>>2]|0;
 return ($17|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7440>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7440|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7424|0),(7448|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7440|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7440|0));
     break;
    }
   }
  }
 } while(0);
 return (7424|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7480>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7480|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7488|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7464|0),(7488|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7480|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7480|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7464|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7544>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7544|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7528|0),(7552|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7544|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7544|0));
     break;
    }
   }
  }
 } while(0);
 return (7528|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7584>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7584|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7592|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7568|0),(7592|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7584|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7584|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7568|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7648>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7648|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7632|0),(7656|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7648|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7648|0));
     break;
    }
   }
  }
 } while(0);
 return (7632|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7696>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7696|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7704|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7680|0),(7704|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7696|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7696|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7680|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7808>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7808|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(495,(7792|0),(7816|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((7808|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     ___cxa_guard_release((7808|0));
     break;
    }
   }
  }
 } while(0);
 return (7792|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[7848>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((7848|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(542,(7856|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(543,(7832|0),(7856|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      ___cxa_guard_release((7848|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((7848|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (7832|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((7104 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(459)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(472,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$lcssa71 = 0, $$041 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$lcssa77 = 0, $$pre$i$i$i = 0, $$pre$i$i$i12 = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0;
 var $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0, $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0;
 var $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $47 = 0;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      }
      $46 = ($43|0)==(-1);
      if ($46) {
       HEAP32[$__b>>2] = 0;
       $47 = 0;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $47 = $$pre$i$i$i;
       break;
      }
     } else {
      $47 = $33;
     }
    }
   } while(0);
   $48 = ($47|0)==(0|0);
   $49 = HEAP32[$__e>>2]|0;
   $50 = ($49|0)==(0|0);
   if ($50) {
    $$pre$i2$i$i16 = 0;
   } else {
    $51 = (($49) + 12|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (($49) + 16|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = ($52|0)==($54|0);
    if ($55) {
     $56 = HEAP32[$49>>2]|0;
     $57 = (($56) + 36|0);
     $58 = HEAP32[$57>>2]|0;
     __THREW__ = 0;
     $59 = (invoke_ii($58|0,($49|0))|0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 6;
      break;
     }
     $62 = ($59|0)==(-1);
     if ($62) {
      HEAP32[$__e>>2] = 0;
      $$pre$i2$i$i16 = 0;
     } else {
      $$pre$i2$i$i16 = $49;
     }
    } else {
     $$pre$i2$i$i16 = $49;
    }
   }
   $63 = ($$pre$i2$i$i16|0)==(0|0);
   $tmp$i$i = $48 ^ $63;
   $64 = ($__n_might_match$2|0)!=(0);
   $$ = $64 & $tmp$i$i;
   $65 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $63;$$lcssa77 = $65;$$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 70;
    break;
   }
   $66 = (($65) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (($65) + 16|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ($67|0)==($69|0);
   if ($70) {
    $71 = HEAP32[$65>>2]|0;
    $72 = (($71) + 36|0);
    $73 = HEAP32[$72>>2]|0;
    __THREW__ = 0;
    $74 = (invoke_ii($73|0,($65|0))|0);
    $75 = __THREW__; __THREW__ = 0;
    $76 = $75&1;
    if ($76) {
     label = 6;
     break;
    } else {
     $$0$i$i = $74;
    }
   } else {
    $77 = HEAP8[$67>>0]|0;
    $78 = $77&255;
    $$0$i$i = $78;
   }
   $79 = $$0$i$i&255;
   if ($__case_sensitive) {
    $__c$0 = $79;
   } else {
    $80 = HEAP32[$__ct>>2]|0;
    $81 = (($80) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    __THREW__ = 0;
    $83 = (invoke_iii($82|0,($__ct|0),($79|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     label = 6;
     break;
    } else {
     $__c$0 = $83;
    }
   }
   $86 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $87 = ($__ky1$0|0)==($__ke|0);
    if ($87) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $88 = HEAP8[$__st$1>>0]|0;
    $89 = ($88<<24>>24)==(1);
    do {
     if ($89) {
      $90 = HEAP8[$__ky1$0>>0]|0;
      $91 = $90 & 1;
      $92 = ($91<<24>>24)==(0);
      if ($92) {
       $95 = (($__ky1$0) + 1|0);
       $97 = $95;
      } else {
       $93 = (($__ky1$0) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $97 = $94;
      }
      $96 = (($97) + ($__indx$0)|0);
      $98 = HEAP8[$96>>0]|0;
      if ($__case_sensitive) {
       $__kc$0 = $98;
      } else {
       $99 = HEAP32[$__ct>>2]|0;
       $100 = (($99) + 12|0);
       $101 = HEAP32[$100>>2]|0;
       __THREW__ = 0;
       $102 = (invoke_iii($101|0,($__ct|0),($98|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $102;
       }
      }
      $105 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
      if (!($105)) {
       HEAP8[$__st$1>>0] = 0;
       $117 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $117;
       break;
      }
      $106 = HEAP8[$__ky1$0>>0]|0;
      $107 = $106 & 1;
      $108 = ($107<<24>>24)==(0);
      if ($108) {
       $111 = $106&255;
       $112 = $111 >>> 1;
       $113 = $112;
      } else {
       $109 = (($__ky1$0) + 4|0);
       $110 = HEAP32[$109>>2]|0;
       $113 = $110;
      }
      $114 = ($113|0)==($86|0);
      if ($114) {
       HEAP8[$__st$1>>0] = 2;
       $115 = (($__n_might_match$3) + -1)|0;
       $116 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $116;$__n_might_match$4 = $115;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $118 = (($__ky1$0) + 12|0);
    $119 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $118;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $119;
   }
   if ($__consume$0$off0$lcssa) {
    $120 = HEAP32[$__b>>2]|0;
    $121 = (($120) + 12|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = (($120) + 16|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ($122|0)==($124|0);
    if ($125) {
     $126 = HEAP32[$120>>2]|0;
     $127 = (($126) + 40|0);
     $128 = HEAP32[$127>>2]|0;
     __THREW__ = 0;
     (invoke_ii($128|0,($120|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 6;
      break;
     }
    } else {
     $131 = (($122) + 1|0);
     HEAP32[$121>>2] = $131;
    }
    $132 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $133 = ($132>>>0)>(1);
    if ($133) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $134 = ($__ky2$0|0)==($__ke|0);
      if ($134) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $135 = HEAP8[$__st$2>>0]|0;
      $136 = ($135<<24>>24)==(2);
      if ($136) {
       $137 = HEAP8[$__ky2$0>>0]|0;
       $138 = $137 & 1;
       $139 = ($138<<24>>24)==(0);
       if ($139) {
        $142 = $137&255;
        $143 = $142 >>> 1;
        $144 = $143;
       } else {
        $140 = (($__ky2$0) + 4|0);
        $141 = HEAP32[$140>>2]|0;
        $144 = $141;
       }
       $145 = ($144|0)==($86|0);
       if ($145) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $146 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $146;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $147 = (($__ky2$0) + 12|0);
      $148 = (($__st$2) + 1|0);
      $__ky2$0 = $147;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $148;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $86;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 70) {
   $149 = ($$lcssa77|0)==(0|0);
   do {
    if ($149) {
     $162 = 0;
     label = 76;
    } else {
     $150 = (($$lcssa77) + 12|0);
     $151 = HEAP32[$150>>2]|0;
     $152 = (($$lcssa77) + 16|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = ($151|0)==($153|0);
     if ($154) {
      $155 = HEAP32[$$lcssa77>>2]|0;
      $156 = (($155) + 36|0);
      $157 = HEAP32[$156>>2]|0;
      __THREW__ = 0;
      $158 = (invoke_ii($157|0,($$lcssa77|0))|0);
      $159 = __THREW__; __THREW__ = 0;
      $160 = $159&1;
      if (!($160)) {
       $161 = ($158|0)==(-1);
       if ($161) {
        HEAP32[$__b>>2] = 0;
        $162 = 0;
        label = 76;
        break;
       } else {
        $$pre$i$i$i12 = HEAP32[$__b>>2]|0;
        $162 = $$pre$i$i$i12;
        label = 76;
        break;
       }
      }
     } else {
      $162 = $$lcssa77;
      label = 76;
     }
    }
   } while(0);
   L96: do {
    if ((label|0) == 76) {
     $163 = ($162|0)==(0|0);
     do {
      if ($$lcssa) {
       label = 82;
      } else {
       $164 = (($$pre$i2$i$i16$lcssa) + 12|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = (($$pre$i2$i$i16$lcssa) + 16|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($165|0)==($167|0);
       if ($168) {
        $169 = HEAP32[$$pre$i2$i$i16$lcssa>>2]|0;
        $170 = (($169) + 36|0);
        $171 = HEAP32[$170>>2]|0;
        __THREW__ = 0;
        $172 = (invoke_ii($171|0,($$pre$i2$i$i16$lcssa|0))|0);
        $173 = __THREW__; __THREW__ = 0;
        $174 = $173&1;
        if ($174) {
         break L96;
        }
        $175 = ($172|0)==(-1);
        if ($175) {
         HEAP32[$__e>>2] = 0;
         label = 82;
         break;
        }
       }
       if (!($163)) {
        label = 83;
       }
      }
     } while(0);
     if ((label|0) == 82) {
      if ($163) {
       label = 83;
      }
     }
     if ((label|0) == 83) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 88;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa71 = $$0;
       label = 89;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 88) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$041 = $__ke;
     }
     else if ((label|0) == 89) {
      $$041 = $$0$lcssa71;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$041|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(544,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(545,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(546,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP16[$__v>>1] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(547,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0;
 var $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $163 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(548,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 39;
   } else {
    HEAP32[$__v>>2] = $129;
    $132 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$132,$__err);
    $133 = ($$lcssa|0)==(0|0);
    if ($133) {
     $146 = 0;
    } else {
     $134 = (($$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      __THREW__ = 0;
      $142 = (invoke_ii($141|0,($$lcssa|0))|0);
      $143 = __THREW__; __THREW__ = 0;
      $144 = $143&1;
      if ($144) {
       label = 39;
       break;
      }
      $145 = ($142|0)==(-1);
      if ($145) {
       HEAP32[$__b>>2] = 0;
       $146 = 0;
      } else {
       $146 = $$lcssa;
      }
     } else {
      $146 = $$lcssa;
     }
    }
    $147 = ($146|0)==(0|0);
    $148 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 67;
     } else {
      $149 = (($$pre$i2$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i2$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i2$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i2$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 39;
        break L8;
       }
       $160 = ($157|0)==(-1);
       if ($160) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($147)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($147) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $161 = HEAP32[$__err>>2]|0;
     $162 = $161 | 2;
     HEAP32[$__err>>2] = $162;
    }
    HEAP32[$agg$result>>2] = $146;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $$pre$phi30Z2D = 0, $$pre$phi32Z2D = 0, $$pre29 = 0, $$pre31 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0;
 var $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 39;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre31 = (($__buf) + 8|0);
    $$pre$phi30Z2D = $16;$$pre$phi32Z2D = $$pre31;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre29 = (($__buf) + 1|0);
    $$pre$phi30Z2D = $$pre29;$$pre$phi32Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i4|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i4) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i4) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i4>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i4|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i4;
      }
     } else {
      $33 = $$pre$i$i$i4;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $168 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $168 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i19 = (($72) + -1)|0;
      $73 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi30Z2D;
     } else {
      $79 = HEAP32[$$pre$phi32Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($100,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i4 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   if (!($120)) {
    $121 = HEAP32[$__g_end>>2]|0;
    $122 = $121;
    $123 = $__g;
    $124 = (($122) - ($123))|0;
    $125 = ($124|0)<(160);
    if ($125) {
     $126 = HEAP32[$__dc>>2]|0;
     $127 = (($121) + 4|0);
     HEAP32[$__g_end>>2] = $127;
     HEAP32[$121>>2] = $126;
    }
   }
   $128 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $129 = (invoke_iiiii(549,($__a$2|0),($128|0),($__err|0),($0|0))|0);
   $130 = tempRet0;
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 39;
   } else {
    $133 = $__v;
    $134 = $133;
    HEAP32[$134>>2] = $129;
    $135 = (($133) + 4)|0;
    $136 = $135;
    HEAP32[$136>>2] = $130;
    $137 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$137,$__err);
    $138 = ($$lcssa|0)==(0|0);
    if ($138) {
     $151 = 0;
    } else {
     $139 = (($$lcssa) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (($$lcssa) + 16|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($140|0)==($142|0);
     if ($143) {
      $144 = HEAP32[$$lcssa>>2]|0;
      $145 = (($144) + 36|0);
      $146 = HEAP32[$145>>2]|0;
      __THREW__ = 0;
      $147 = (invoke_ii($146|0,($$lcssa|0))|0);
      $148 = __THREW__; __THREW__ = 0;
      $149 = $148&1;
      if ($149) {
       label = 39;
       break;
      }
      $150 = ($147|0)==(-1);
      if ($150) {
       HEAP32[$__b>>2] = 0;
       $151 = 0;
      } else {
       $151 = $$lcssa;
      }
     } else {
      $151 = $$lcssa;
     }
    }
    $152 = ($151|0)==(0|0);
    $153 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($153) {
      label = 67;
     } else {
      $154 = (($$pre$i2$i$i) + 12|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = (($$pre$i2$i$i) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($155|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$$pre$i2$i$i>>2]|0;
       $160 = (($159) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       __THREW__ = 0;
       $162 = (invoke_ii($161|0,($$pre$i2$i$i|0))|0);
       $163 = __THREW__; __THREW__ = 0;
       $164 = $163&1;
       if ($164) {
        label = 39;
        break L8;
       }
       $165 = ($162|0)==(-1);
       if ($165) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($152)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($152) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $166 = HEAP32[$__err>>2]|0;
     $167 = $166 | 2;
     HEAP32[$__err>>2] = $167;
    }
    HEAP32[$agg$result>>2] = $151;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(550,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF32[$__v>>2] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(551,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $$pre$phi31Z2D = 0, $$pre$phi33Z2D = 0, $$pre30 = 0, $$pre32 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0;
 var $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 39;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre32 = (($__buf) + 8|0);
    $$pre$phi31Z2D = $15;$$pre$phi33Z2D = $$pre32;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre30 = (($__buf) + 1|0);
    $$pre$phi31Z2D = $$pre30;$$pre$phi33Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $33 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 38;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $33 = 0;
      } else {
       $33 = $$pre$i$i$i5;
      }
     } else {
      $33 = $$pre$i$i$i5;
     }
    }
    $34 = ($33|0)==(0|0);
    $35 = HEAP32[$__e>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      label = 22;
     } else {
      $37 = (($35) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = (($35) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if (!($41)) {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
      $42 = HEAP32[$35>>2]|0;
      $43 = (($42) + 36|0);
      $44 = HEAP32[$43>>2]|0;
      __THREW__ = 0;
      $45 = (invoke_ii($44|0,($35|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       label = 38;
       break L14;
      }
      $48 = ($45|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 22;
       break;
      } else {
       if ($34) {
        $165 = $35;
        break;
       } else {
        $$lcssa = $33;$$pre$i2$i$i = $35;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     label = 0;
     if ($34) {
      $$lcssa = $33;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $165 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 38;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i20 = (($72) + -1)|0;
      $73 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 38;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi31Z2D;
     } else {
      $79 = HEAP32[$$pre$phi33Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($33) + 12|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (($33) + 16|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($88|0)==($90|0);
    if ($91) {
     $92 = HEAP32[$33>>2]|0;
     $93 = (($92) + 36|0);
     $94 = HEAP32[$93>>2]|0;
     __THREW__ = 0;
     $95 = (invoke_ii($94|0,($33|0))|0);
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if ($97) {
      label = 38;
      break;
     } else {
      $$0$i$i = $95;
     }
    } else {
     $98 = HEAP8[$88>>0]|0;
     $99 = $98&255;
     $$0$i$i = $99;
    }
    $100 = $$0$i$i&255;
    $101 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($100,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $102 = ($101|0)==(0);
    if (!($102)) {
     $$lcssa = $33;$$pre$i2$i$i = $165;$__a$2 = $__a$1;
     break;
    }
    $103 = HEAP32[$87>>2]|0;
    $104 = HEAP32[$89>>2]|0;
    $105 = ($103|0)==($104|0);
    if ($105) {
     $106 = HEAP32[$33>>2]|0;
     $107 = (($106) + 40|0);
     $108 = HEAP32[$107>>2]|0;
     __THREW__ = 0;
     (invoke_ii($108|0,($33|0))|0);
     $109 = __THREW__; __THREW__ = 0;
     $110 = $109&1;
     if ($110) {
      label = 38;
      break;
     }
    } else {
     $111 = (($103) + 1|0);
     HEAP32[$87>>2] = $111;
    }
    $$pre$i$i$i5 = $33;$__a$0 = $__a$1;
   }
   if ((label|0) == 38) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $112 = HEAP8[$__grouping>>0]|0;
   $113 = $112 & 1;
   $114 = ($113<<24>>24)==(0);
   if ($114) {
    $117 = $112&255;
    $118 = $117 >>> 1;
    $119 = $118;
   } else {
    $115 = (($__grouping) + 4|0);
    $116 = HEAP32[$115>>2]|0;
    $119 = $116;
   }
   $120 = ($119|0)==(0);
   $121 = HEAP8[$__in_units>>0]|0;
   $122 = ($121<<24>>24)==(0);
   $or$cond = $120 | $122;
   if (!($or$cond)) {
    $123 = HEAP32[$__g_end>>2]|0;
    $124 = $123;
    $125 = $__g;
    $126 = (($124) - ($125))|0;
    $127 = ($126|0)<(160);
    if ($127) {
     $128 = HEAP32[$__dc>>2]|0;
     $129 = (($123) + 4|0);
     HEAP32[$__g_end>>2] = $129;
     HEAP32[$123>>2] = $128;
    }
   }
   $130 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $131 = (+invoke_diii(552,($__a$2|0),($130|0),($__err|0)));
   $132 = __THREW__; __THREW__ = 0;
   $133 = $132&1;
   if ($133) {
    label = 39;
   } else {
    HEAPF64[$__v>>3] = $131;
    $134 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$134,$__err);
    $135 = ($$lcssa|0)==(0|0);
    if ($135) {
     $148 = 0;
    } else {
     $136 = (($$lcssa) + 12|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = (($$lcssa) + 16|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($137|0)==($139|0);
     if ($140) {
      $141 = HEAP32[$$lcssa>>2]|0;
      $142 = (($141) + 36|0);
      $143 = HEAP32[$142>>2]|0;
      __THREW__ = 0;
      $144 = (invoke_ii($143|0,($$lcssa|0))|0);
      $145 = __THREW__; __THREW__ = 0;
      $146 = $145&1;
      if ($146) {
       label = 39;
       break;
      }
      $147 = ($144|0)==(-1);
      if ($147) {
       HEAP32[$__b>>2] = 0;
       $148 = 0;
      } else {
       $148 = $$lcssa;
      }
     } else {
      $148 = $$lcssa;
     }
    }
    $149 = ($148|0)==(0|0);
    $150 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($150) {
      label = 67;
     } else {
      $151 = (($$pre$i2$i$i) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (($$pre$i2$i$i) + 16|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = ($152|0)==($154|0);
      if ($155) {
       $156 = HEAP32[$$pre$i2$i$i>>2]|0;
       $157 = (($156) + 36|0);
       $158 = HEAP32[$157>>2]|0;
       __THREW__ = 0;
       $159 = (invoke_ii($158|0,($$pre$i2$i$i|0))|0);
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        label = 39;
        break L8;
       }
       $162 = ($159|0)==(-1);
       if ($162) {
        HEAP32[$__e>>2] = 0;
        label = 67;
        break;
       }
      }
      if (!($149)) {
       label = 68;
      }
     }
    } while(0);
    if ((label|0) == 67) {
     if ($149) {
      label = 68;
     }
    }
    if ((label|0) == 68) {
     $163 = HEAP32[$__err>>2]|0;
     $164 = $163 | 2;
     HEAP32[$__err>>2] = $164;
    }
    HEAP32[$agg$result>>2] = $148;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$0$lcssa69 = 0, $$045 = 0, $$index = 0, $$index10 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$0$off0$lcssa = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$2$be = 0, $__n_does_match$3 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$4 = 0;
 var $__n_does_match$5 = 0, $__n_does_match$5$lcssa = 0, $__n_does_match$6 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$4 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i14 = 0;
 var $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   __THREW__ = 0;
   invoke_v(465);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch()|0;
    $10 = tempRet0;
    $$index = $9;$$index10 = $10;
   } else {
    $17 = 0;$__status$0 = 0;
    label = 11;
   }
  } else {
   $17 = $5;$__status$0 = $5;
   label = 11;
  }
 } else {
  $17 = 0;$__status$0 = $__statbuf;
  label = 11;
 }
 if ((label|0) == 11) {
  $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
  while(1) {
   $19 = ($__ky$0|0)==($__ke|0);
   if ($19) {
    $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
    break;
   }
   $20 = HEAP8[$__ky$0>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $25 = $20&255;
    $26 = $25 >>> 1;
    $27 = $26;
   } else {
    $23 = (($__ky$0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $28 = ($27|0)==(0);
   if ($28) {
    HEAP8[$__st$0>>0] = 2;
    $29 = (($__n_might_match$0) + -1)|0;
    $30 = (($__n_does_match$0) + 1)|0;
    $__n_does_match$1 = $30;$__n_might_match$1 = $29;
   } else {
    HEAP8[$__st$0>>0] = 1;
    $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
   }
   $31 = (($__ky$0) + 12|0);
   $32 = (($__st$0) + 1|0);
   $__ky$0 = $31;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $32;
  }
  $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
  L19: while(1) {
   $33 = HEAP32[$__b>>2]|0;
   $34 = ($33|0)==(0|0);
   do {
    if ($34) {
     $64 = 1;
    } else {
     $35 = (($33) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (($33) + 16|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($36|0)==($38|0);
     if ($39) {
      $40 = HEAP32[$33>>2]|0;
      $41 = (($40) + 36|0);
      $42 = HEAP32[$41>>2]|0;
      __THREW__ = 0;
      $43 = (invoke_ii($42|0,($33|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       label = 6;
       break L19;
      } else {
       $$0$i$i$i$i = $43;
      }
     } else {
      $46 = HEAP32[$36>>2]|0;
      $$0$i$i$i$i = $46;
     }
     $47 = ($$0$i$i$i$i|0)==(-1);
     if ($47) {
      HEAP32[$__b>>2] = 0;
      $64 = 1;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
      $64 = $phitmp$i$i$i;
      break;
     }
    }
   } while(0);
   $48 = HEAP32[$__e>>2]|0;
   $49 = ($48|0)==(0|0);
   if ($49) {
    $$pre$i3$i$i19 = 0;$63 = 1;
   } else {
    $50 = (($48) + 12|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (($48) + 16|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($51|0)==($53|0);
    if ($54) {
     $55 = HEAP32[$48>>2]|0;
     $56 = (($55) + 36|0);
     $57 = HEAP32[$56>>2]|0;
     __THREW__ = 0;
     $58 = (invoke_ii($57|0,($48|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 6;
      break;
     } else {
      $$0$i$i1$i$i = $58;
     }
    } else {
     $61 = HEAP32[$51>>2]|0;
     $$0$i$i1$i$i = $61;
    }
    $62 = ($$0$i$i1$i$i|0)==(-1);
    if ($62) {
     HEAP32[$__e>>2] = 0;
     $$pre$i3$i$i19 = 0;$63 = 1;
    } else {
     $$pre$i3$i$i19 = $48;$63 = 0;
    }
   }
   $tmp$i$i = $64 ^ $63;
   $65 = ($__n_might_match$2|0)!=(0);
   $$ = $65 & $tmp$i$i;
   $66 = HEAP32[$__b>>2]|0;
   if (!($$)) {
    $$lcssa = $66;$$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 72;
    break;
   }
   $67 = (($66) + 12|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (($66) + 16|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($68|0)==($70|0);
   if ($71) {
    $72 = HEAP32[$66>>2]|0;
    $73 = (($72) + 36|0);
    $74 = HEAP32[$73>>2]|0;
    __THREW__ = 0;
    $75 = (invoke_ii($74|0,($66|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 6;
     break;
    } else {
     $$0$i$i = $75;
    }
   } else {
    $78 = HEAP32[$68>>2]|0;
    $$0$i$i = $78;
   }
   if ($__case_sensitive) {
    $__c$0 = $$0$i$i;
   } else {
    $79 = HEAP32[$__ct>>2]|0;
    $80 = (($79) + 28|0);
    $81 = HEAP32[$80>>2]|0;
    __THREW__ = 0;
    $82 = (invoke_iii($81|0,($__ct|0),($$0$i$i|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     label = 6;
     break;
    } else {
     $__c$0 = $82;
    }
   }
   $85 = (($__indx$0) + 1)|0;
   $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
   while(1) {
    $86 = ($__ky1$0|0)==($__ke|0);
    if ($86) {
     $__consume$0$off0$lcssa = $__consume$0$off0;$__n_does_match$3$lcssa = $__n_does_match$3;$__n_might_match$3$lcssa = $__n_might_match$3;
     break;
    }
    $87 = HEAP8[$__st$1>>0]|0;
    $88 = ($87<<24>>24)==(1);
    do {
     if ($88) {
      $89 = HEAP8[$__ky1$0>>0]|0;
      $90 = $89 & 1;
      $91 = ($90<<24>>24)==(0);
      if ($91) {
       $94 = (($__ky1$0) + 4|0);
       $96 = $94;
      } else {
       $92 = (($__ky1$0) + 8|0);
       $93 = HEAP32[$92>>2]|0;
       $96 = $93;
      }
      $95 = (($96) + ($__indx$0<<2)|0);
      $97 = HEAP32[$95>>2]|0;
      if ($__case_sensitive) {
       $__kc$0 = $97;
      } else {
       $98 = HEAP32[$__ct>>2]|0;
       $99 = (($98) + 28|0);
       $100 = HEAP32[$99>>2]|0;
       __THREW__ = 0;
       $101 = (invoke_iii($100|0,($__ct|0),($97|0))|0);
       $102 = __THREW__; __THREW__ = 0;
       $103 = $102&1;
       if ($103) {
        label = 5;
        break L19;
       } else {
        $__kc$0 = $101;
       }
      }
      $104 = ($__c$0|0)==($__kc$0|0);
      if (!($104)) {
       HEAP8[$__st$1>>0] = 0;
       $116 = (($__n_might_match$3) + -1)|0;
       $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $116;
       break;
      }
      $105 = HEAP8[$__ky1$0>>0]|0;
      $106 = $105 & 1;
      $107 = ($106<<24>>24)==(0);
      if ($107) {
       $110 = $105&255;
       $111 = $110 >>> 1;
       $112 = $111;
      } else {
       $108 = (($__ky1$0) + 4|0);
       $109 = HEAP32[$108>>2]|0;
       $112 = $109;
      }
      $113 = ($112|0)==($85|0);
      if ($113) {
       HEAP8[$__st$1>>0] = 2;
       $114 = (($__n_might_match$3) + -1)|0;
       $115 = (($__n_does_match$3) + 1)|0;
       $__consume$1$off0 = 1;$__n_does_match$4 = $115;$__n_might_match$4 = $114;
      } else {
       $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off0;$__n_does_match$4 = $__n_does_match$3;$__n_might_match$4 = $__n_might_match$3;
     }
    } while(0);
    $117 = (($__ky1$0) + 12|0);
    $118 = (($__st$1) + 1|0);
    $__consume$0$off0 = $__consume$1$off0;$__ky1$0 = $117;$__n_does_match$3 = $__n_does_match$4;$__n_might_match$3 = $__n_might_match$4;$__st$1 = $118;
   }
   if ($__consume$0$off0$lcssa) {
    $119 = HEAP32[$__b>>2]|0;
    $120 = (($119) + 12|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($119) + 16|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($121|0)==($123|0);
    if ($124) {
     $125 = HEAP32[$119>>2]|0;
     $126 = (($125) + 40|0);
     $127 = HEAP32[$126>>2]|0;
     __THREW__ = 0;
     (invoke_ii($127|0,($119|0))|0);
     $128 = __THREW__; __THREW__ = 0;
     $129 = $128&1;
     if ($129) {
      label = 6;
      break;
     }
    } else {
     $130 = (($121) + 4|0);
     HEAP32[$120>>2] = $130;
    }
    $131 = (($__n_does_match$3$lcssa) + ($__n_might_match$3$lcssa))|0;
    $132 = ($131>>>0)>(1);
    if ($132) {
     $__ky2$0 = $__kb;$__n_does_match$5 = $__n_does_match$3$lcssa;$__st$2 = $__status$0;
     while(1) {
      $133 = ($__ky2$0|0)==($__ke|0);
      if ($133) {
       $__n_does_match$5$lcssa = $__n_does_match$5;
       break;
      }
      $134 = HEAP8[$__st$2>>0]|0;
      $135 = ($134<<24>>24)==(2);
      if ($135) {
       $136 = HEAP8[$__ky2$0>>0]|0;
       $137 = $136 & 1;
       $138 = ($137<<24>>24)==(0);
       if ($138) {
        $141 = $136&255;
        $142 = $141 >>> 1;
        $143 = $142;
       } else {
        $139 = (($__ky2$0) + 4|0);
        $140 = HEAP32[$139>>2]|0;
        $143 = $140;
       }
       $144 = ($143|0)==($85|0);
       if ($144) {
        $__n_does_match$6 = $__n_does_match$5;
       } else {
        HEAP8[$__st$2>>0] = 0;
        $145 = (($__n_does_match$5) + -1)|0;
        $__n_does_match$6 = $145;
       }
      } else {
       $__n_does_match$6 = $__n_does_match$5;
      }
      $146 = (($__ky2$0) + 12|0);
      $147 = (($__st$2) + 1|0);
      $__ky2$0 = $146;$__n_does_match$5 = $__n_does_match$6;$__st$2 = $147;
     }
     $__n_does_match$2$be = $__n_does_match$5$lcssa;
    } else {
     $__n_does_match$2$be = $__n_does_match$3$lcssa;
    }
   } else {
    $__n_does_match$2$be = $__n_does_match$3$lcssa;
   }
   $__indx$0 = $85;$__n_does_match$2 = $__n_does_match$2$be;$__n_might_match$2 = $__n_might_match$3$lcssa;
  }
  if ((label|0) == 5) {
   $11 = ___cxa_find_matching_catch()|0;
   $12 = tempRet0;
   $lpad$phi$index = $11;$lpad$phi$index3 = $12;
  }
  else if ((label|0) == 6) {
   $13 = ___cxa_find_matching_catch()|0;
   $14 = tempRet0;
   $lpad$phi$index = $13;$lpad$phi$index3 = $14;
  }
  else if ((label|0) == 72) {
   $148 = ($$lcssa|0)==(0|0);
   do {
    if ($148) {
     $186 = 1;
     label = 79;
    } else {
     $149 = (($$lcssa) + 12|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = (($$lcssa) + 16|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($150|0)==($152|0);
     if ($153) {
      $154 = HEAP32[$$lcssa>>2]|0;
      $155 = (($154) + 36|0);
      $156 = HEAP32[$155>>2]|0;
      __THREW__ = 0;
      $157 = (invoke_ii($156|0,($$lcssa|0))|0);
      $158 = __THREW__; __THREW__ = 0;
      $159 = $158&1;
      if ($159) {
       break;
      } else {
       $$0$i$i$i$i11 = $157;
      }
     } else {
      $160 = HEAP32[$150>>2]|0;
      $$0$i$i$i$i11 = $160;
     }
     $161 = ($$0$i$i$i$i11|0)==(-1);
     if ($161) {
      HEAP32[$__b>>2] = 0;
      $186 = 1;
      label = 79;
      break;
     } else {
      $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i14 = ($$pre$i$i$i13|0)==(0|0);
      $186 = $phitmp$i$i$i14;
      label = 79;
      break;
     }
    }
   } while(0);
   L102: do {
    if ((label|0) == 79) {
     $162 = ($$pre$i3$i$i19$lcssa|0)==(0|0);
     do {
      if ($162) {
       label = 85;
      } else {
       $163 = (($$pre$i3$i$i19$lcssa) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = (($$pre$i3$i$i19$lcssa) + 16|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($164|0)==($166|0);
       if ($167) {
        $168 = HEAP32[$$pre$i3$i$i19$lcssa>>2]|0;
        $169 = (($168) + 36|0);
        $170 = HEAP32[$169>>2]|0;
        __THREW__ = 0;
        $171 = (invoke_ii($170|0,($$pre$i3$i$i19$lcssa|0))|0);
        $172 = __THREW__; __THREW__ = 0;
        $173 = $172&1;
        if ($173) {
         break L102;
        } else {
         $$0$i$i1$i$i17 = $171;
        }
       } else {
        $174 = HEAP32[$164>>2]|0;
        $$0$i$i1$i$i17 = $174;
       }
       $175 = ($$0$i$i1$i$i17|0)==(-1);
       if ($175) {
        HEAP32[$__e>>2] = 0;
        label = 85;
        break;
       } else {
        if ($186) {
         break;
        } else {
         label = 87;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 85) {
      if ($186) {
       label = 87;
      }
     }
     if ((label|0) == 87) {
      $176 = HEAP32[$__err>>2]|0;
      $177 = $176 | 2;
      HEAP32[$__err>>2] = $177;
     }
     $$0 = $__kb;$__st$3 = $__status$0;
     while(1) {
      $178 = ($$0|0)==($__ke|0);
      if ($178) {
       label = 92;
       break;
      }
      $179 = HEAP8[$__st$3>>0]|0;
      $180 = ($179<<24>>24)==(2);
      if ($180) {
       $$0$lcssa69 = $$0;
       label = 93;
       break;
      }
      $181 = (($$0) + 12|0);
      $182 = (($__st$3) + 1|0);
      $$0 = $181;$__st$3 = $182;
     }
     if ((label|0) == 92) {
      $183 = HEAP32[$__err>>2]|0;
      $184 = $183 | 4;
      HEAP32[$__err>>2] = $184;
      $$045 = $__ke;
     }
     else if ((label|0) == 93) {
      $$045 = $$0$lcssa69;
     }
     $185 = ($17|0)==(0|0);
     _free($17);
     if (!($185)) {
     }
     STACKTOP = sp;return ($$045|0);
    }
   } while(0);
   $15 = ___cxa_find_matching_catch()|0;
   $16 = tempRet0;
   $lpad$phi$index = $15;$lpad$phi$index3 = $16;
  }
  $18 = ($17|0)==(0|0);
  _free($17);
  if ($18) {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  } else {
   $$index = $lpad$phi$index;$$index10 = $lpad$phi$index3;
  }
 }
 ___resumeException($$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(544,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(545,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(546,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP16[$__v>>1] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(547,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0;
 var $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $163 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $163 = 1;$88 = 0;
     } else {
      $163 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($163) {
        $164 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($163) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $164 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $164;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(548,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 40;
   } else {
    HEAP32[$__v>>2] = $128;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$lcssa|0)==(0|0);
    if ($132) {
     $162 = 0;$165 = 1;
    } else {
     $133 = (($$lcssa) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = (($$lcssa) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$lcssa>>2]|0;
      $139 = (($138) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $141;
      }
     } else {
      $144 = HEAP32[$134>>2]|0;
      $$0$i$i$i$i = $144;
     }
     $145 = ($$0$i$i$i$i|0)==(-1);
     if ($145) {
      HEAP32[$__b>>2] = 0;
      $162 = 0;$165 = 1;
     } else {
      $162 = $$lcssa;$165 = 0;
     }
    }
    $146 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($146) {
      label = 69;
     } else {
      $147 = (($$pre$i3$i$i) + 12|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (($$pre$i3$i$i) + 16|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($148|0)==($150|0);
      if ($151) {
       $152 = HEAP32[$$pre$i3$i$i>>2]|0;
       $153 = (($152) + 36|0);
       $154 = HEAP32[$153>>2]|0;
       __THREW__ = 0;
       $155 = (invoke_ii($154|0,($$pre$i3$i$i|0))|0);
       $156 = __THREW__; __THREW__ = 0;
       $157 = $156&1;
       if ($157) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $155;
       }
      } else {
       $158 = HEAP32[$148>>2]|0;
       $$0$i$i1$i$i = $158;
      }
      $159 = ($$0$i$i1$i$i|0)==(-1);
      if ($159) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($165) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($165) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    HEAP32[$agg$result>>2] = $162;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $$pre$phi33Z2D = 0, $$pre$phi35Z2D = 0, $$pre32 = 0, $$pre34 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0;
 var $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = (__ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob)|0);
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 $3 = HEAP8[$__buf>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$__buf>>2]|0;
  $7 = $6 & -2;
  $phitmp$i = (($7) + -1)|0;
  $8 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 L8: do {
  if ($10) {
   label = 40;
  } else {
   $11 = HEAP8[$__buf>>0]|0;
   $12 = $11 & 1;
   $13 = ($12<<24>>24)==(0);
   if ($13) {
    $16 = (($__buf) + 1|0);
    $$pre34 = (($__buf) + 8|0);
    $$pre$phi33Z2D = $16;$$pre$phi35Z2D = $$pre34;$17 = $16;
   } else {
    $14 = (($__buf) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $$pre32 = (($__buf) + 1|0);
    $$pre$phi33Z2D = $$pre32;$$pre$phi35Z2D = $14;$17 = $15;
   }
   HEAP32[$__a_end>>2] = $17;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $18 = (($__buf) + 4|0);
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $17;
   L14: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $168 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i5) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i5) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i3 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i3 = $32;
     }
     $33 = ($$0$i$i$i$i3|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $168 = 1;$88 = 0;
     } else {
      $168 = 0;$88 = $$pre$i$i$i5;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i9 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i9 = $47;
      }
      $48 = ($$0$i$i1$i$i9|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($168) {
        $169 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($168) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $169 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$18>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$18>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i23 = (($72) + -1)|0;
      $73 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi33Z2D;
     } else {
      $79 = HEAP32[$$pre$phi35Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$0,$__a$1,$__a_end,$__dc,$19,$__grouping,$__g,$__g_end,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $169;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i5 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   if (!($119)) {
    $120 = HEAP32[$__g_end>>2]|0;
    $121 = $120;
    $122 = $__g;
    $123 = (($121) - ($122))|0;
    $124 = ($123|0)<(160);
    if ($124) {
     $125 = HEAP32[$__dc>>2]|0;
     $126 = (($120) + 4|0);
     HEAP32[$__g_end>>2] = $126;
     HEAP32[$120>>2] = $125;
    }
   }
   $127 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $128 = (invoke_iiiii(549,($__a$2|0),($127|0),($__err|0),($0|0))|0);
   $129 = tempRet0;
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    label = 40;
   } else {
    $132 = $__v;
    $133 = $132;
    HEAP32[$133>>2] = $128;
    $134 = (($132) + 4)|0;
    $135 = $134;
    HEAP32[$135>>2] = $129;
    $136 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$136,$__err);
    $137 = ($$lcssa|0)==(0|0);
    if ($137) {
     $167 = 0;$170 = 1;
    } else {
     $138 = (($$lcssa) + 12|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (($$lcssa) + 16|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($139|0)==($141|0);
     if ($142) {
      $143 = HEAP32[$$lcssa>>2]|0;
      $144 = (($143) + 36|0);
      $145 = HEAP32[$144>>2]|0;
      __THREW__ = 0;
      $146 = (invoke_ii($145|0,($$lcssa|0))|0);
      $147 = __THREW__; __THREW__ = 0;
      $148 = $147&1;
      if ($148) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $146;
      }
     } else {
      $149 = HEAP32[$139>>2]|0;
      $$0$i$i$i$i = $149;
     }
     $150 = ($$0$i$i$i$i|0)==(-1);
     if ($150) {
      HEAP32[$__b>>2] = 0;
      $167 = 0;$170 = 1;
     } else {
      $167 = $$lcssa;$170 = 0;
     }
    }
    $151 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($151) {
      label = 69;
     } else {
      $152 = (($$pre$i3$i$i) + 12|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (($$pre$i3$i$i) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $156 = ($153|0)==($155|0);
      if ($156) {
       $157 = HEAP32[$$pre$i3$i$i>>2]|0;
       $158 = (($157) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       __THREW__ = 0;
       $160 = (invoke_ii($159|0,($$pre$i3$i$i|0))|0);
       $161 = __THREW__; __THREW__ = 0;
       $162 = $161&1;
       if ($162) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $160;
       }
      } else {
       $163 = HEAP32[$153>>2]|0;
       $$0$i$i1$i$i = $163;
      }
      $164 = ($$0$i$i1$i$i|0)==(-1);
      if ($164) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($170) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($170) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $165 = HEAP32[$__err>>2]|0;
     $166 = $165 | 2;
     HEAP32[$__err>>2] = $166;
    }
    HEAP32[$agg$result>>2] = $167;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(550,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF32[$__v>>2] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(551,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$lcssa = 0, $$pre = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $$pre$phi34Z2D = 0, $$pre$phi36Z2D = 0, $$pre33 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0;
 var $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(458,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 40;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $15 = (($__buf) + 1|0);
    $$pre35 = (($__buf) + 8|0);
    $$pre$phi34Z2D = $15;$$pre$phi36Z2D = $$pre35;$16 = $15;
   } else {
    $13 = (($__buf) + 8|0);
    $14 = HEAP32[$13>>2]|0;
    $$pre33 = (($__buf) + 1|0);
    $$pre$phi34Z2D = $$pre33;$$pre$phi36Z2D = $13;$16 = $14;
   }
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = (($__buf) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L14: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $165 = 1;$88 = 0;
    } else {
     $21 = (($$pre$i$i$i6) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (($$pre$i$i$i6) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = (($26) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 39;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $165 = 1;$88 = 0;
     } else {
      $165 = 0;$88 = $$pre$i$i$i6;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 23;
     } else {
      $36 = (($34) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (($34) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = (($41) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 39;
        break L14;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($165) {
        $166 = $34;
        break;
       } else {
        $$lcssa = $88;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L14;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($165) {
      $$lcssa = $88;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $166 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    if ($52) {
     $54 = $50&255;
     $55 = $54 >>> 1;
     $57 = $55;
    } else {
     $53 = HEAP32[$17>>2]|0;
     $57 = $53;
    }
    $56 = (($__a$0) + ($57)|0);
    $58 = ($49|0)==($56|0);
    if ($58) {
     if ($52) {
      $60 = $50&255;
      $61 = $60 >>> 1;
      $62 = $50&255;
      $63 = $62 >>> 1;
      $65 = $63;$82 = $61;
     } else {
      $59 = HEAP32[$17>>2]|0;
      $65 = $59;$82 = $59;
     }
     $64 = $65 << 1;
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($64|0),0);
     $66 = __THREW__; __THREW__ = 0;
     $67 = $66&1;
     if ($67) {
      label = 39;
      break;
     }
     $68 = HEAP8[$__buf>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = 10;
     } else {
      $71 = HEAP32[$__buf>>2]|0;
      $72 = $71 & -2;
      $phitmp$i24 = (($72) + -1)|0;
      $73 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(458,($__buf|0),($73|0),0);
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if ($75) {
      label = 39;
      break;
     }
     $76 = HEAP8[$__buf>>0]|0;
     $77 = $76 & 1;
     $78 = ($77<<24>>24)==(0);
     if ($78) {
      $81 = $$pre$phi34Z2D;
     } else {
      $79 = HEAP32[$$pre$phi36Z2D>>2]|0;
      $81 = $79;
     }
     $80 = (($81) + ($82)|0);
     HEAP32[$__a_end>>2] = $80;
     $__a$1 = $81;
    } else {
     $__a$1 = $__a$0;
    }
    $87 = (($88) + 12|0);
    $89 = HEAP32[$87>>2]|0;
    $90 = (($88) + 16|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($89|0)==($91|0);
    if ($92) {
     $93 = HEAP32[$88>>2]|0;
     $94 = (($93) + 36|0);
     $95 = HEAP32[$94>>2]|0;
     __THREW__ = 0;
     $96 = (invoke_ii($95|0,($88|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      label = 39;
      break;
     } else {
      $$0$i$i = $96;
     }
    } else {
     $99 = HEAP32[$89>>2]|0;
     $$0$i$i = $99;
    }
    $100 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $101 = ($100|0)==(0);
    if (!($101)) {
     $$lcssa = $88;$$pre$i3$i$i = $166;$__a$2 = $__a$1;
     break;
    }
    $102 = HEAP32[$87>>2]|0;
    $103 = HEAP32[$90>>2]|0;
    $104 = ($102|0)==($103|0);
    if ($104) {
     $105 = HEAP32[$88>>2]|0;
     $106 = (($105) + 40|0);
     $107 = HEAP32[$106>>2]|0;
     __THREW__ = 0;
     (invoke_ii($107|0,($88|0))|0);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 39;
      break;
     }
    } else {
     $110 = (($102) + 4|0);
     HEAP32[$87>>2] = $110;
    }
    $$pre$i$i$i6 = $88;$__a$0 = $__a$1;
   }
   if ((label|0) == 39) {
    $83 = ___cxa_find_matching_catch()|0;
    $84 = tempRet0;
    $lpad$phi$index = $83;$lpad$phi$index2 = $84;
    break;
   }
   $111 = HEAP8[$__grouping>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   if ($113) {
    $116 = $111&255;
    $117 = $116 >>> 1;
    $118 = $117;
   } else {
    $114 = (($__grouping) + 4|0);
    $115 = HEAP32[$114>>2]|0;
    $118 = $115;
   }
   $119 = ($118|0)==(0);
   $120 = HEAP8[$__in_units>>0]|0;
   $121 = ($120<<24>>24)==(0);
   $or$cond = $119 | $121;
   if (!($or$cond)) {
    $122 = HEAP32[$__g_end>>2]|0;
    $123 = $122;
    $124 = $__g;
    $125 = (($123) - ($124))|0;
    $126 = ($125|0)<(160);
    if ($126) {
     $127 = HEAP32[$__dc>>2]|0;
     $128 = (($122) + 4|0);
     HEAP32[$__g_end>>2] = $128;
     HEAP32[$122>>2] = $127;
    }
   }
   $129 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $130 = (+invoke_diii(552,($__a$2|0),($129|0),($__err|0)));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    label = 40;
   } else {
    HEAPF64[$__v>>3] = $130;
    $133 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$133,$__err);
    $134 = ($$lcssa|0)==(0|0);
    if ($134) {
     $164 = 0;$167 = 1;
    } else {
     $135 = (($$lcssa) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = (($$lcssa) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$lcssa>>2]|0;
      $141 = (($140) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      __THREW__ = 0;
      $143 = (invoke_ii($142|0,($$lcssa|0))|0);
      $144 = __THREW__; __THREW__ = 0;
      $145 = $144&1;
      if ($145) {
       label = 40;
       break;
      } else {
       $$0$i$i$i$i = $143;
      }
     } else {
      $146 = HEAP32[$136>>2]|0;
      $$0$i$i$i$i = $146;
     }
     $147 = ($$0$i$i$i$i|0)==(-1);
     if ($147) {
      HEAP32[$__b>>2] = 0;
      $164 = 0;$167 = 1;
     } else {
      $164 = $$lcssa;$167 = 0;
     }
    }
    $148 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($148) {
      label = 69;
     } else {
      $149 = (($$pre$i3$i$i) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = (($$pre$i3$i$i) + 16|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = ($150|0)==($152|0);
      if ($153) {
       $154 = HEAP32[$$pre$i3$i$i>>2]|0;
       $155 = (($154) + 36|0);
       $156 = HEAP32[$155>>2]|0;
       __THREW__ = 0;
       $157 = (invoke_ii($156|0,($$pre$i3$i$i|0))|0);
       $158 = __THREW__; __THREW__ = 0;
       $159 = $158&1;
       if ($159) {
        label = 40;
        break L8;
       } else {
        $$0$i$i1$i$i = $157;
       }
      } else {
       $160 = HEAP32[$150>>2]|0;
       $$0$i$i1$i$i = $160;
      }
      $161 = ($$0$i$i1$i$i|0)==(-1);
      if ($161) {
       HEAP32[$__e>>2] = 0;
       label = 69;
       break;
      } else {
       if ($167) {
        break;
       } else {
        label = 71;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 69) {
     if ($167) {
      label = 71;
     }
    }
    if ((label|0) == 71) {
     $162 = HEAP32[$__err>>2]|0;
     $163 = $162 | 2;
     HEAP32[$__err>>2] = $163;
    }
    HEAP32[$agg$result>>2] = $164;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $85 = ___cxa_find_matching_catch()|0;
  $86 = tempRet0;
  $lpad$phi$index = $85;$lpad$phi$index2 = $86;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(474,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(553,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(474,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   HEAP32[$agg$result>>2] = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = (($__iob) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = (($14) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $25 = (($__sp) + 4|0);
      $29 = $25;
     } else {
      $23 = (($__sp) + 8|0);
      $24 = HEAP32[$23>>2]|0;
      $29 = $24;
     }
     $26 = HEAP32[$0>>2]|0;
     $27 = (($26) + 48|0);
     $28 = HEAP32[$27>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($28|0,($0|0),($29|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      HEAP32[$agg$result>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = (($39) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     HEAP32[$agg$result>>2] = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   HEAP32[$agg$result>>2] = $0;
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa35 = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = (($14) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($14) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = (($21) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $156 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $156 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = (($__ct) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = (($50) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = (($55) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = (($55) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = (($61) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
     } else {
      $64 = (($57) + 1|0);
      HEAP32[$56>>2] = $64;
     }
     $$0$in = $__n;$$pre$i2$i$i7 = $156;$79 = $156;$__r$0$in = $54;
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = (($65) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = (($65) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = (($72) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = (($79) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (($79) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = (($86) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $$ = $93 & $tmp$i$i9;
      $94 = HEAP32[$__b>>2]|0;
      if (!($$)) {
       $$lcssa = $94;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $95 = (($94) + 12|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = (($94) + 16|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = ($96|0)==($98|0);
      if ($99) {
       $100 = HEAP32[$94>>2]|0;
       $101 = (($100) + 36|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = (FUNCTION_TABLE_ii[$102 & 1023]($94)|0);
       $$0$i$i10 = $103;
      } else {
       $104 = HEAP8[$96>>0]|0;
       $105 = $104&255;
       $$0$i$i10 = $105;
      }
      $106 = $$0$i$i10&255;
      $isascii1$i12 = ($106<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $sext24 = $$0$i$i10 << 24;
      $107 = $sext24 >> 24;
      $108 = HEAP32[$42>>2]|0;
      $109 = (($108) + ($107<<1)|0);
      $110 = HEAP16[$109>>1]|0;
      $111 = $110 & 2048;
      $112 = ($111<<16>>16)==(0);
      if ($112) {
       $__r$0$lcssa35 = $__r$0;
       label = 54;
       break;
      }
      $113 = ($__r$0*10)|0;
      $114 = HEAP32[$__ct>>2]|0;
      $115 = (($114) + 36|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = (FUNCTION_TABLE_iiii[$116 & 1023]($__ct,$106,0)|0);
      $118 = $117 << 24 >> 24;
      $119 = (($118) + ($113))|0;
      $120 = HEAP32[$__b>>2]|0;
      $121 = (($120) + 12|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (($120) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($122|0)==($124|0);
      if ($125) {
       $126 = HEAP32[$120>>2]|0;
       $127 = (($126) + 40|0);
       $128 = HEAP32[$127>>2]|0;
       (FUNCTION_TABLE_ii[$128 & 1023]($120)|0);
      } else {
       $129 = (($122) + 1|0);
       HEAP32[$121>>2] = $129;
      }
      $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $119;
     }
     if ((label|0) == 54) {
      $$01 = $__r$0$lcssa35;
      break;
     }
     $130 = ($$lcssa|0)==(0|0);
     do {
      if ($130) {
       $141 = 0;
      } else {
       $131 = (($$lcssa) + 12|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = (($$lcssa) + 16|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ($132|0)==($134|0);
       if ($135) {
        $136 = HEAP32[$$lcssa>>2]|0;
        $137 = (($136) + 36|0);
        $138 = HEAP32[$137>>2]|0;
        $139 = (FUNCTION_TABLE_ii[$138 & 1023]($$lcssa)|0);
        $140 = ($139|0)==(-1);
        if ($140) {
         HEAP32[$__b>>2] = 0;
         $141 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $141 = $$pre$i$i$i16;
         break;
        }
       } else {
        $141 = $$lcssa;
       }
      }
     } while(0);
     $142 = ($141|0)==(0|0);
     $143 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($143) {
       label = 52;
      } else {
       $144 = (($$pre$i2$i$i20$lcssa) + 12|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = (($$pre$i2$i$i20$lcssa) + 16|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = ($145|0)==($147|0);
       if ($148) {
        $149 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $150 = (($149) + 36|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = (FUNCTION_TABLE_ii[$151 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $153 = ($152|0)==(-1);
        if ($153) {
         HEAP32[$__e>>2] = 0;
         label = 52;
         break;
        }
       }
       if ($142) {
        $$01 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 52) {
      if (!($142)) {
       $$01 = $__r$0$lcssa;
       break;
      }
     }
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$01 = 0;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $__r$0$lcssa40 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $147 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $147 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $147 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = (($13) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($13) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($147) {
     $148 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($147) {
   label = 16;
  } else {
   $148 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$01 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($28) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = (($34) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = (($39) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$01 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = (($45) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = (($50) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (($50) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = (($56) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
   } else {
    $59 = (($52) + 4|0);
    HEAP32[$51>>2] = $59;
   }
   $$0$in = $__n;$$pre$i3$i$i10 = $148;$73 = $148;$__r$0$in = $49;
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = (($60) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = (($60) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = (($67) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = 0;$86 = 1;
     } else {
      $75 = (($73) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = (($73) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = (($80) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$149 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$149 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $$ = $88 & $tmp$i$i13;
    $89 = HEAP32[$__b>>2]|0;
    if (!($$)) {
     $$lcssa = $89;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $90 = (($89) + 12|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (($89) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($91|0)==($93|0);
    if ($94) {
     $95 = HEAP32[$89>>2]|0;
     $96 = (($95) + 36|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = (FUNCTION_TABLE_ii[$97 & 1023]($89)|0);
     $$0$i$i14 = $98;
    } else {
     $99 = HEAP32[$91>>2]|0;
     $$0$i$i14 = $99;
    }
    $100 = HEAP32[$__ct>>2]|0;
    $101 = (($100) + 12|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = (FUNCTION_TABLE_iiii[$102 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($103)) {
     $__r$0$lcssa40 = $__r$0;
     label = 65;
     break;
    }
    $104 = ($__r$0*10)|0;
    $105 = HEAP32[$__ct>>2]|0;
    $106 = (($105) + 52|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (FUNCTION_TABLE_iiii[$107 & 1023]($__ct,$$0$i$i14,0)|0);
    $109 = $108 << 24 >> 24;
    $110 = (($109) + ($104))|0;
    $111 = HEAP32[$__b>>2]|0;
    $112 = (($111) + 12|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = (($111) + 16|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ($113|0)==($115|0);
    if ($116) {
     $117 = HEAP32[$111>>2]|0;
     $118 = (($117) + 40|0);
     $119 = HEAP32[$118>>2]|0;
     (FUNCTION_TABLE_ii[$119 & 1023]($111)|0);
    } else {
     $120 = (($113) + 4|0);
     HEAP32[$112>>2] = $120;
    }
    $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $149;$__r$0$in = $110;
   }
   if ((label|0) == 65) {
    $$01 = $__r$0$lcssa40;
    break;
   }
   $121 = ($$lcssa|0)==(0|0);
   do {
    if ($121) {
     $150 = 1;
    } else {
     $122 = (($$lcssa) + 12|0);
     $123 = HEAP32[$122>>2]|0;
     $124 = (($$lcssa) + 16|0);
     $125 = HEAP32[$124>>2]|0;
     $126 = ($123|0)==($125|0);
     if ($126) {
      $127 = HEAP32[$$lcssa>>2]|0;
      $128 = (($127) + 36|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = (FUNCTION_TABLE_ii[$129 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $130;
     } else {
      $131 = HEAP32[$123>>2]|0;
      $$0$i$i$i$i17 = $131;
     }
     $132 = ($$0$i$i$i$i17|0)==(-1);
     if ($132) {
      HEAP32[$__b>>2] = 0;
      $150 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $150 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $133 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($133) {
     label = 62;
    } else {
     $134 = (($$pre$i3$i$i25$lcssa) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($$pre$i3$i$i25$lcssa) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = (FUNCTION_TABLE_ii[$141 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $142;
     } else {
      $143 = HEAP32[$135>>2]|0;
      $$0$i$i1$i$i23 = $143;
     }
     $144 = ($$0$i$i1$i$i23|0)==(-1);
     if ($144) {
      HEAP32[$__e>>2] = 0;
      label = 62;
      break;
     } else {
      if ($150) {
       $$01 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 62) {
    if (!($150)) {
     $$01 = $__r$0$lcssa;
     break;
    }
   }
   $145 = HEAP32[$__err>>2]|0;
   $146 = $145 | 2;
   HEAP32[$__err>>2] = $146;
   $$01 = $__r$0$lcssa;
  }
 } while(0);
 return ($$01|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $14;
   $23 = $14;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $14;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $23 = $14;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $23 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $22 = (($23) + ($12)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($$)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$40 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$40 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $40;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = (($this) + 1|0);
    $27 = $25;
   } else {
    $23 = (($this) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $26 = (($27) + ($15)|0);
   $28 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($28)|0);
   $scevgep1 = $scevgep;
   $$0 = $__first;$__p$0 = $26;
   while(1) {
    $29 = ($$0|0)==($__last|0);
    if ($29) {
     break;
    }
    $30 = HEAP8[$$0>>0]|0;
    HEAP8[$__p$0>>0] = $30;
    $31 = (($__p$0) + 1|0);
    $32 = (($$0) + 1|0);
    $$0 = $32;$__p$0 = $31;
   }
   $scevgep2 = (($27) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $33 = (($15) + ($12))|0;
   $34 = HEAP8[$this>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $38 = $33 << 1;
    $39 = $38&255;
    HEAP8[$this>>0] = $39;
    break;
   } else {
    $37 = (($this) + 4|0);
    HEAP32[$37>>2] = $33;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(475|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 $14 = $2 ? $4 : 0;
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   HEAP32[$__b>>2] = $15;
   $25 = $15;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   HEAP32[$__b>>2] = $15;
   $17 = ($$pr|0)==(0|0);
   if ($17) {
    $25 = $15;
   } else {
    $18 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($18|0,($$pr|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     $21 = ___cxa_find_matching_catch(0|0)|0;
     $22 = tempRet0;
     ___clang_call_terminate($21);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $25 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = 554;
 $23 = $$ >>> 2;
 $24 = (($25) + ($13<<2)|0);
 HEAP32[$__n>>2] = $24;
 $26 = HEAP32[$__b>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$__e>>2] = $27;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$44 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$44 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $44;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = (($this) + 4|0);
    $28 = $26;
   } else {
    $24 = (($this) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $28 = $25;
   }
   $27 = (($28) + ($16<<2)|0);
   $29 = $__last;
   $30 = (($29) - ($0))|0;
   $31 = $30 >>> 2;
   $32 = (($16) + ($31))|0;
   $$0 = $__first;$__p$0 = $27;
   while(1) {
    $33 = ($$0|0)==($__last|0);
    if ($33) {
     break;
    }
    $34 = HEAP32[$$0>>2]|0;
    HEAP32[$__p$0>>2] = $34;
    $35 = (($__p$0) + 4|0);
    $36 = (($$0) + 4|0);
    $$0 = $36;$__p$0 = $35;
   }
   $scevgep = (($28) + ($32<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $37 = (($16) + ($13))|0;
   $38 = HEAP8[$this>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $42 = $37 << 1;
    $43 = $42&255;
    HEAP8[$this>>0] = $43;
    break;
   } else {
    $41 = (($this) + 4|0);
    HEAP32[$41>>2] = $37;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = (($this) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 do {
  if (!($3)) {
   __THREW__ = 0;
   invoke_vii(555,($this|0),($__n|0));
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $6 = ___cxa_find_matching_catch()|0;
    $7 = tempRet0;
    __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
    ___resumeException($6|0);
    // unreachable;
   } else {
    __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5416)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5456)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7024)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7016)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7088)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7096)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(7176)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5528)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5648)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5712)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5808)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6400)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6464)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6528)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6592)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6632)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6712)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6768)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6816)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(5920)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6072)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6304)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6336)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6856)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(6896)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = (($this) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = $$pre$i$i;
   while(1) {
    $4 = ($3|0)==($0|0);
    if ($4) {
     break;
    }
    $5 = (($3) + -4|0);
    HEAP32[$2>>2] = $5;
    $3 = $5;
   }
   $6 = (($this) + 16|0);
   $7 = ($6|0)==($0|0);
   if ($7) {
    $8 = (($this) + 128|0);
    HEAP8[$8>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = $1;
 $4 = $2;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($__sz>>>0);
 if ($7) {
  $8 = (($__sz) - ($6))|0;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
 } else {
  $9 = ($6>>>0)>($__sz>>>0);
  if ($9) {
   $10 = (($2) + ($__sz<<2)|0);
   $11 = $1;
   while(1) {
    $12 = ($11|0)==($10|0);
    if ($12) {
     break;
    }
    $13 = (($11) + -4|0);
    HEAP32[$0>>2] = $13;
    $11 = $13;
   }
  }
 }
 return;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>($id>>>0);
 if ($8) {
  $9 = (($3) + ($id<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)!=(0|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 return ($12|0);
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__vp) + 4|0);
 $$field = HEAP32[$0>>2]|0;
 $$index1 = (($0) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $1 = HEAP32[$__vp>>2]|0;
 $2 = $$field2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$field2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$field;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$field)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $10 = $frm_end;
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $11 = $$pre;
  L6: while(1) {
   $12 = ($11>>>0)<($frm_end>>>0);
   if (!($12)) {
    $$0$ph = 0;
    break;
   }
   $13 = HEAP16[$11>>1]|0;
   $14 = $13&65535;
   $15 = ($14>>>0)>($Maxcode>>>0);
   if ($15) {
    $$0$ph = 2;
    break;
   }
   $16 = ($13&65535)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $13&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($13&65535)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $14 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $14 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($13&65535)<(55296);
     if ($37) {
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = $38;
      $40 = (($$pre1) - ($39))|0;
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $14 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $14 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $14 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     }
     $57 = ($13&65535)<(56320);
     if (!($57)) {
      $109 = ($13&65535)<(57344);
      if ($109) {
       $$0$ph = 2;
       break L6;
      }
      $110 = HEAP32[$to_nxt>>2]|0;
      $111 = $110;
      $112 = (($$pre1) - ($111))|0;
      $113 = ($112|0)<(3);
      if ($113) {
       $$0$ph = 1;
       break L6;
      }
      $114 = $14 >>> 12;
      $115 = $114 | 224;
      $116 = $115&255;
      $117 = (($110) + 1|0);
      HEAP32[$to_nxt>>2] = $117;
      HEAP8[$110>>0] = $116;
      $118 = $14 >>> 6;
      $119 = $118 & 63;
      $120 = $119 | 128;
      $121 = $120&255;
      $122 = HEAP32[$to_nxt>>2]|0;
      $123 = (($122) + 1|0);
      HEAP32[$to_nxt>>2] = $123;
      HEAP8[$122>>0] = $121;
      $124 = $14 & 63;
      $125 = $124 | 128;
      $126 = $125&255;
      $127 = HEAP32[$to_nxt>>2]|0;
      $128 = (($127) + 1|0);
      HEAP32[$to_nxt>>2] = $128;
      HEAP8[$127>>0] = $126;
      break;
     }
     $58 = $11;
     $59 = (($10) - ($58))|0;
     $60 = ($59|0)<(4);
     if ($60) {
      $$0$ph = 1;
      break L6;
     }
     $61 = (($11) + 2|0);
     $62 = HEAP16[$61>>1]|0;
     $63 = $62&65535;
     $64 = $63 & 64512;
     $65 = ($64|0)==(56320);
     if (!($65)) {
      $$0$ph = 2;
      break L6;
     }
     $66 = HEAP32[$to_nxt>>2]|0;
     $67 = $66;
     $68 = (($$pre1) - ($67))|0;
     $69 = ($68|0)<(4);
     if ($69) {
      $$0$ph = 1;
      break L6;
     }
     $70 = $14 & 960;
     $71 = $70 << 10;
     $72 = (($71) + 65536)|0;
     $73 = $14 << 10;
     $74 = $73 & 64512;
     $75 = $72 | $74;
     $76 = $63 & 1023;
     $77 = $75 | $76;
     $78 = ($77>>>0)>($Maxcode>>>0);
     if ($78) {
      $$0$ph = 2;
      break L6;
     }
     HEAP32[$frm_nxt>>2] = $61;
     $79 = $70 >>> 6;
     $80 = (($79) + 1)|0;
     $81 = $80 >>> 2;
     $82 = $81 | 240;
     $83 = $82&255;
     $84 = HEAP32[$to_nxt>>2]|0;
     $85 = (($84) + 1|0);
     HEAP32[$to_nxt>>2] = $85;
     HEAP8[$84>>0] = $83;
     $86 = $80 << 4;
     $87 = $86 & 48;
     $88 = $14 >>> 2;
     $89 = $88 & 15;
     $90 = $89 | $87;
     $91 = $90 | 128;
     $92 = $91&255;
     $93 = HEAP32[$to_nxt>>2]|0;
     $94 = (($93) + 1|0);
     HEAP32[$to_nxt>>2] = $94;
     HEAP8[$93>>0] = $92;
     $95 = $14 << 4;
     $96 = $95 & 48;
     $97 = $63 >>> 6;
     $98 = $97 & 15;
     $99 = $96 | $98;
     $100 = $99 | 128;
     $101 = $100&255;
     $102 = HEAP32[$to_nxt>>2]|0;
     $103 = (($102) + 1|0);
     HEAP32[$to_nxt>>2] = $103;
     HEAP8[$102>>0] = $101;
     $104 = $63 & 63;
     $105 = $104 | 128;
     $106 = $105&255;
     $107 = HEAP32[$to_nxt>>2]|0;
     $108 = (($107) + 1|0);
     HEAP32[$to_nxt>>2] = $108;
     HEAP8[$107>>0] = $106;
    }
   } while(0);
   $129 = HEAP32[$frm_nxt>>2]|0;
   $130 = (($129) + 2|0);
   HEAP32[$frm_nxt>>2] = $130;
   $11 = $130;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 L9: while(1) {
  $17 = HEAP32[$frm_nxt>>2]|0;
  $18 = ($17>>>0)<($frm_end>>>0);
  if (!($18)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = ($19>>>0)<($to_end>>>0);
  if (!($20)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17>>0]|0;
  $22 = $21&255;
  $23 = ($22>>>0)>($Maxcode>>>0);
  if ($23) {
   $$0$ph = 2;
   label = 42;
   break;
  }
  $24 = ($21<<24>>24)>(-1);
  do {
   if ($24) {
    $25 = $21&255;
    HEAP16[$19>>1] = $25;
    $26 = (($17) + 1|0);
    HEAP32[$frm_nxt>>2] = $26;
   } else {
    $27 = ($21&255)<(194);
    if ($27) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $28 = ($21&255)<(224);
    if ($28) {
     $29 = $17;
     $30 = (($$pre$phiZ2D) - ($29))|0;
     $31 = ($30|0)<(2);
     if ($31) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $32 = (($17) + 1|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = $33&255;
     $35 = $34 & 192;
     $36 = ($35|0)==(128);
     if (!($36)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $37 = $22 << 6;
     $38 = $37 & 1984;
     $39 = $34 & 63;
     $40 = $39 | $38;
     $41 = ($40>>>0)>($Maxcode>>>0);
     if ($41) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $42 = $40&65535;
     HEAP16[$19>>1] = $42;
     $43 = (($17) + 2|0);
     HEAP32[$frm_nxt>>2] = $43;
     break;
    }
    $44 = ($21&255)<(240);
    if ($44) {
     $45 = $17;
     $46 = (($$pre$phiZ2D) - ($45))|0;
     $47 = ($46|0)<(3);
     if ($47) {
      $$0$ph = 1;
      label = 42;
      break L9;
     }
     $48 = (($17) + 1|0);
     $49 = HEAP8[$48>>0]|0;
     $50 = (($17) + 2|0);
     $51 = HEAP8[$50>>0]|0;
     if ((($22|0) == 224)) {
      $52 = $49 & -32;
      $53 = ($52<<24>>24)==(-96);
      if (!($53)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else if ((($22|0) == 237)) {
      $54 = $49 & -32;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     } else {
      $56 = $49 & -64;
      $57 = ($56<<24>>24)==(-128);
      if (!($57)) {
       $$0$ph = 2;
       label = 42;
       break L9;
      }
     }
     $58 = $51&255;
     $59 = $58 & 192;
     $60 = ($59|0)==(128);
     if (!($60)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $61 = $22 << 12;
     $62 = $49&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $58 & 63;
     $67 = $65 | $66;
     $68 = $67 & 65535;
     $69 = ($68>>>0)>($Maxcode>>>0);
     if ($69) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
     $70 = $67&65535;
     HEAP16[$19>>1] = $70;
     $71 = (($17) + 3|0);
     HEAP32[$frm_nxt>>2] = $71;
     break;
    }
    $72 = ($21&255)<(245);
    if (!($72)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $73 = $17;
    $74 = (($$pre$phiZ2D) - ($73))|0;
    $75 = ($74|0)<(4);
    if ($75) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $76 = (($17) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($17) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($17) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($22|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else if ((($22|0) == 244)) {
     $83 = $77 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    } else {
     $85 = $77 & -64;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$0$ph = 2;
      label = 42;
      break L9;
     }
    }
    $87 = $79&255;
    $88 = $87 & 192;
    $89 = ($88|0)==(128);
    if (!($89)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $90 = $81&255;
    $91 = $90 & 192;
    $92 = ($91|0)==(128);
    if (!($92)) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $93 = $19;
    $94 = (($16) - ($93))|0;
    $95 = ($94|0)<(4);
    if ($95) {
     $$0$ph = 1;
     label = 42;
     break L9;
    }
    $96 = $22 & 7;
    $97 = $96 << 18;
    $98 = $77&255;
    $99 = $98 << 12;
    $100 = $99 & 258048;
    $101 = $100 | $97;
    $102 = $87 << 6;
    $103 = $102 & 4032;
    $104 = $101 | $103;
    $105 = $90 & 63;
    $106 = $104 | $105;
    $107 = ($106>>>0)>($Maxcode>>>0);
    if ($107) {
     $$0$ph = 2;
     label = 42;
     break L9;
    }
    $108 = $96 << 2;
    $109 = $98 >>> 4;
    $110 = $109 & 3;
    $111 = $110 | $108;
    $112 = $111 << 6;
    $113 = (($112) + 16320)|0;
    $114 = $98 << 2;
    $115 = $114 & 60;
    $116 = $87 >>> 4;
    $117 = $116 & 3;
    $118 = $115 | $117;
    $119 = $118 | $113;
    $120 = $119 | 55296;
    $121 = $120&65535;
    HEAP16[$19>>1] = $121;
    $122 = $102 & 960;
    $123 = $105 | $122;
    $124 = $123 | 56320;
    $125 = $124&65535;
    $126 = (($19) + 2|0);
    HEAP32[$to_nxt>>2] = $126;
    HEAP16[$126>>1] = $125;
    $127 = HEAP32[$frm_nxt>>2]|0;
    $128 = (($127) + 4|0);
    HEAP32[$frm_nxt>>2] = $128;
   }
  } while(0);
  $129 = HEAP32[$to_nxt>>2]|0;
  $130 = (($129) + 2|0);
  HEAP32[$to_nxt>>2] = $130;
 }
 if ((label|0) == 41) {
  $131 = $$lcssa&1;
  $$0 = $131;
 }
 else if ((label|0) == 42) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar16_t$0 = 0, $nchar16_t$1 = 0, $or$cond = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar16_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar16_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($17>>>0)>($Maxcode>>>0);
  if ($18) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $19 = ($16<<24>>24)>(-1);
  do {
   if ($19) {
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;$nchar16_t$1 = $nchar16_t$0;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa46 = $38;
       label = 21;
       break L7;
      }
     } else if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa45 = $38;
       label = 23;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa47 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;$nchar16_t$1 = $nchar16_t$0;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    $74 = (($mx) - ($nchar16_t$0))|0;
    $75 = ($74>>>0)<(2);
    $or$cond2 = $75 | $73;
    if ($or$cond2) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $76 = (($frm_nxt$1) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = (($frm_nxt$1) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    if ((($17|0) == 240)) {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$lcssa43 = $71;
      label = 33;
      break L7;
     }
    } else if ((($17|0) == 244)) {
     $85 = $77 & -16;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else {
     $89 = $77 & -64;
     $90 = ($89<<24>>24)==(-128);
     if (!($90)) {
      $$lcssa44 = $71;
      label = 37;
      break L7;
     }
    }
    $93 = $79&255;
    $94 = $93 & 192;
    $95 = ($94|0)==(128);
    if (!($95)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $96 = $81&255;
    $97 = $96 & 192;
    $98 = ($97|0)==(128);
    if (!($98)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $99 = $17 << 18;
    $100 = $99 & 1835008;
    $101 = $77&255;
    $102 = $101 << 12;
    $103 = $102 & 258048;
    $104 = $103 | $100;
    $105 = $93 << 6;
    $106 = $105 & 4032;
    $107 = $104 | $106;
    $108 = $96 & 63;
    $109 = $107 | $108;
    $110 = ($109>>>0)>($Maxcode>>>0);
    if ($110) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $111 = (($nchar16_t$0) + 1)|0;
    $112 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $112;$nchar16_t$1 = $111;
   }
  } while(0);
  $113 = (($nchar16_t$1) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar16_t$0 = $113;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa46) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa45) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa47) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $83 = $frm;
  $84 = (($$lcssa43) - ($83))|0;
  $$0 = $84;
 }
 else if ((label|0) == 35) {
  $87 = $frm;
  $88 = (($$lcssa) - ($87))|0;
  $$0 = $88;
 }
 else if ((label|0) == 37) {
  $91 = $frm;
  $92 = (($$lcssa44) - ($91))|0;
  $$0 = $92;
 }
 else if ((label|0) == 43) {
  $114 = $frm_nxt$1$lcssa;
  $115 = $frm;
  $116 = (($114) - ($115))|0;
  $$0 = $116;
 }
 return ($$0|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre1 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre1) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$0 = 1;
  } else {
   $5 = (($to) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = (($6) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = (($8) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $$pre = HEAP32[$frm_nxt>>2]|0;
  $10 = $$pre;
  L6: while(1) {
   $11 = ($10>>>0)<($frm_end>>>0);
   if (!($11)) {
    $$0$ph = 0;
    break;
   }
   $12 = HEAP32[$10>>2]|0;
   $13 = $12 & -2048;
   $14 = ($13|0)==(55296);
   $15 = ($12>>>0)>($Maxcode>>>0);
   $or$cond = $15 | $14;
   if ($or$cond) {
    $$0$ph = 2;
    break;
   }
   $16 = ($12>>>0)<(128);
   do {
    if ($16) {
     $17 = HEAP32[$to_nxt>>2]|0;
     $18 = $17;
     $19 = (($$pre1) - ($18))|0;
     $20 = ($19|0)<(1);
     if ($20) {
      $$0$ph = 1;
      break L6;
     }
     $21 = $12&255;
     $22 = (($17) + 1|0);
     HEAP32[$to_nxt>>2] = $22;
     HEAP8[$17>>0] = $21;
    } else {
     $23 = ($12>>>0)<(2048);
     if ($23) {
      $24 = HEAP32[$to_nxt>>2]|0;
      $25 = $24;
      $26 = (($$pre1) - ($25))|0;
      $27 = ($26|0)<(2);
      if ($27) {
       $$0$ph = 1;
       break L6;
      }
      $28 = $12 >>> 6;
      $29 = $28 | 192;
      $30 = $29&255;
      $31 = (($24) + 1|0);
      HEAP32[$to_nxt>>2] = $31;
      HEAP8[$24>>0] = $30;
      $32 = $12 & 63;
      $33 = $32 | 128;
      $34 = $33&255;
      $35 = HEAP32[$to_nxt>>2]|0;
      $36 = (($35) + 1|0);
      HEAP32[$to_nxt>>2] = $36;
      HEAP8[$35>>0] = $34;
      break;
     }
     $37 = ($12>>>0)<(65536);
     $38 = HEAP32[$to_nxt>>2]|0;
     $39 = $38;
     $40 = (($$pre1) - ($39))|0;
     if ($37) {
      $41 = ($40|0)<(3);
      if ($41) {
       $$0$ph = 1;
       break L6;
      }
      $42 = $12 >>> 12;
      $43 = $42 | 224;
      $44 = $43&255;
      $45 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $45;
      HEAP8[$38>>0] = $44;
      $46 = $12 >>> 6;
      $47 = $46 & 63;
      $48 = $47 | 128;
      $49 = $48&255;
      $50 = HEAP32[$to_nxt>>2]|0;
      $51 = (($50) + 1|0);
      HEAP32[$to_nxt>>2] = $51;
      HEAP8[$50>>0] = $49;
      $52 = $12 & 63;
      $53 = $52 | 128;
      $54 = $53&255;
      $55 = HEAP32[$to_nxt>>2]|0;
      $56 = (($55) + 1|0);
      HEAP32[$to_nxt>>2] = $56;
      HEAP8[$55>>0] = $54;
      break;
     } else {
      $57 = ($40|0)<(4);
      if ($57) {
       $$0$ph = 1;
       break L6;
      }
      $58 = $12 >>> 18;
      $59 = $58 | 240;
      $60 = $59&255;
      $61 = (($38) + 1|0);
      HEAP32[$to_nxt>>2] = $61;
      HEAP8[$38>>0] = $60;
      $62 = $12 >>> 12;
      $63 = $62 & 63;
      $64 = $63 | 128;
      $65 = $64&255;
      $66 = HEAP32[$to_nxt>>2]|0;
      $67 = (($66) + 1|0);
      HEAP32[$to_nxt>>2] = $67;
      HEAP8[$66>>0] = $65;
      $68 = $12 >>> 6;
      $69 = $68 & 63;
      $70 = $69 | 128;
      $71 = $70&255;
      $72 = HEAP32[$to_nxt>>2]|0;
      $73 = (($72) + 1|0);
      HEAP32[$to_nxt>>2] = $73;
      HEAP8[$72>>0] = $71;
      $74 = $12 & 63;
      $75 = $74 | 128;
      $76 = $75&255;
      $77 = HEAP32[$to_nxt>>2]|0;
      $78 = (($77) + 1|0);
      HEAP32[$to_nxt>>2] = $78;
      HEAP8[$77>>0] = $76;
      break;
     }
    }
   } while(0);
   $79 = HEAP32[$frm_nxt>>2]|0;
   $80 = (($79) + 4|0);
   HEAP32[$frm_nxt>>2] = $80;
   $10 = $80;
  }
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$0$ph = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = (($2) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = (($2) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = (($2) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 L9: while(1) {
  $16 = HEAP32[$frm_nxt>>2]|0;
  $17 = ($16>>>0)<($frm_end>>>0);
  if (!($17)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt>>2]|0;
  $19 = ($18>>>0)<($to_end>>>0);
  if (!($19)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16>>0]|0;
  $21 = $20&255;
  $22 = ($20<<24>>24)>(-1);
  do {
   if ($22) {
    $23 = ($21>>>0)>($Maxcode>>>0);
    if ($23) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $21;
    $24 = (($16) + 1|0);
    HEAP32[$frm_nxt>>2] = $24;
   } else {
    $25 = ($20&255)<(194);
    if ($25) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $26 = ($20&255)<(224);
    if ($26) {
     $27 = $16;
     $28 = (($$pre$phiZ2D) - ($27))|0;
     $29 = ($28|0)<(2);
     if ($29) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $30 = (($16) + 1|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = $32 & 192;
     $34 = ($33|0)==(128);
     if (!($34)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $35 = $21 << 6;
     $36 = $35 & 1984;
     $37 = $32 & 63;
     $38 = $37 | $36;
     $39 = ($38>>>0)>($Maxcode>>>0);
     if ($39) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $38;
     $40 = (($16) + 2|0);
     HEAP32[$frm_nxt>>2] = $40;
     break;
    }
    $41 = ($20&255)<(240);
    if ($41) {
     $42 = $16;
     $43 = (($$pre$phiZ2D) - ($42))|0;
     $44 = ($43|0)<(3);
     if ($44) {
      $$0$ph = 1;
      label = 41;
      break L9;
     }
     $45 = (($16) + 1|0);
     $46 = HEAP8[$45>>0]|0;
     $47 = (($16) + 2|0);
     $48 = HEAP8[$47>>0]|0;
     if ((($21|0) == 237)) {
      $51 = $46 & -32;
      $52 = ($51<<24>>24)==(-128);
      if (!($52)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else if ((($21|0) == 224)) {
      $49 = $46 & -32;
      $50 = ($49<<24>>24)==(-96);
      if (!($50)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     } else {
      $53 = $46 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$0$ph = 2;
       label = 41;
       break L9;
      }
     }
     $55 = $48&255;
     $56 = $55 & 192;
     $57 = ($56|0)==(128);
     if (!($57)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     $58 = $21 << 12;
     $59 = $58 & 61440;
     $60 = $46&255;
     $61 = $60 << 6;
     $62 = $61 & 4032;
     $63 = $62 | $59;
     $64 = $55 & 63;
     $65 = $63 | $64;
     $66 = ($65>>>0)>($Maxcode>>>0);
     if ($66) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
     HEAP32[$18>>2] = $65;
     $67 = (($16) + 3|0);
     HEAP32[$frm_nxt>>2] = $67;
     break;
    }
    $68 = ($20&255)<(245);
    if (!($68)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $69 = $16;
    $70 = (($$pre$phiZ2D) - ($69))|0;
    $71 = ($70|0)<(4);
    if ($71) {
     $$0$ph = 1;
     label = 41;
     break L9;
    }
    $72 = (($16) + 1|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = (($16) + 2|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($16) + 3|0);
    $77 = HEAP8[$76>>0]|0;
    if ((($21|0) == 244)) {
     $79 = $73 & -16;
     $80 = ($79<<24>>24)==(-128);
     if (!($80)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else if ((($21|0) == 240)) {
     $$off = (($73) + 112)<<24>>24;
     $78 = ($$off&255)<(48);
     if (!($78)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    } else {
     $81 = $73 & -64;
     $82 = ($81<<24>>24)==(-128);
     if (!($82)) {
      $$0$ph = 2;
      label = 41;
      break L9;
     }
    }
    $83 = $75&255;
    $84 = $83 & 192;
    $85 = ($84|0)==(128);
    if (!($85)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $86 = $77&255;
    $87 = $86 & 192;
    $88 = ($87|0)==(128);
    if (!($88)) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    $89 = $21 << 18;
    $90 = $89 & 1835008;
    $91 = $73&255;
    $92 = $91 << 12;
    $93 = $92 & 258048;
    $94 = $93 | $90;
    $95 = $83 << 6;
    $96 = $95 & 4032;
    $97 = $94 | $96;
    $98 = $86 & 63;
    $99 = $97 | $98;
    $100 = ($99>>>0)>($Maxcode>>>0);
    if ($100) {
     $$0$ph = 2;
     label = 41;
     break L9;
    }
    HEAP32[$18>>2] = $99;
    $101 = (($16) + 4|0);
    HEAP32[$frm_nxt>>2] = $101;
   }
  } while(0);
  $102 = HEAP32[$to_nxt>>2]|0;
  $103 = (($102) + 4|0);
  HEAP32[$to_nxt>>2] = $103;
 }
 if ((label|0) == 40) {
  $104 = $$lcssa&1;
  $$0 = $104;
 }
 else if ((label|0) == 41) {
  $$0 = $$0$ph;
 }
 return ($$0|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$0 = 0, $$frm = 0, $$lcssa = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$off = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$2 = 0, $nchar32_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre = $frm_end;
 if ($1) {
  $frm_nxt$1$ph = $frm;
 } else {
  $2 = $frm;
  $3 = (($$pre) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = (($frm) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = (($frm) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = (($frm) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1$ph = $$frm;
    } else {
     $frm_nxt$1$ph = $frm;
    }
   } else {
    $frm_nxt$1$ph = $frm;
   }
  } else {
   $frm_nxt$1$ph = $frm;
  }
 }
 $frm_nxt$1 = $frm_nxt$1$ph;$nchar32_t$0 = 0;
 L7: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar32_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 43;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($16<<24>>24)>(-1);
  do {
   if ($18) {
    $19 = ($17>>>0)>($Maxcode>>>0);
    if ($19) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $20 = (($frm_nxt$1) + 1|0);
    $frm_nxt$2 = $20;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $26 = (($frm_nxt$1) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $36 = (($frm_nxt$1) + 2|0);
     $frm_nxt$2 = $36;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $41 = (($frm_nxt$1) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = (($frm_nxt$1) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     if ((($17|0) == 237)) {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa43 = $38;
       label = 23;
       break L7;
      }
     } else if ((($17|0) == 224)) {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa44 = $38;
       label = 21;
       break L7;
      }
     } else {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa45 = $38;
       label = 25;
       break L7;
      }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 43;
      break L7;
     }
     $69 = (($frm_nxt$1) + 3|0);
     $frm_nxt$2 = $69;
     break;
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre) - ($71))|0;
    $73 = ($72|0)<(4);
    if ($73) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $74 = (($frm_nxt$1) + 1|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = (($frm_nxt$1) + 2|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = (($frm_nxt$1) + 3|0);
    $79 = HEAP8[$78>>0]|0;
    if ((($17|0) == 240)) {
     $$off = (($75) + 112)<<24>>24;
     $80 = ($$off&255)<(48);
     if (!($80)) {
      $$lcssa41 = $71;
      label = 33;
      break L7;
     }
    } else if ((($17|0) == 244)) {
     $83 = $75 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$lcssa = $71;
      label = 35;
      break L7;
     }
    } else {
     $87 = $75 & -64;
     $88 = ($87<<24>>24)==(-128);
     if (!($88)) {
      $$lcssa42 = $71;
      label = 37;
      break L7;
     }
    }
    $91 = $77&255;
    $92 = $91 & 192;
    $93 = ($92|0)==(128);
    if (!($93)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $94 = $79&255;
    $95 = $94 & 192;
    $96 = ($95|0)==(128);
    if (!($96)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $97 = $17 << 18;
    $98 = $97 & 1835008;
    $99 = $75&255;
    $100 = $99 << 12;
    $101 = $100 & 258048;
    $102 = $101 | $98;
    $103 = $91 << 6;
    $104 = $103 & 4032;
    $105 = $102 | $104;
    $106 = $94 & 63;
    $107 = $105 | $106;
    $108 = ($107>>>0)>($Maxcode>>>0);
    if ($108) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 43;
     break L7;
    }
    $109 = (($frm_nxt$1) + 4|0);
    $frm_nxt$2 = $109;
   }
  } while(0);
  $110 = (($nchar32_t$0) + 1)|0;
  $frm_nxt$1 = $frm_nxt$2;$nchar32_t$0 = $110;
 }
 if ((label|0) == 21) {
  $47 = $frm;
  $48 = (($$lcssa44) - ($47))|0;
  $$0 = $48;
 }
 else if ((label|0) == 23) {
  $51 = $frm;
  $52 = (($$lcssa43) - ($51))|0;
  $$0 = $52;
 }
 else if ((label|0) == 25) {
  $55 = $frm;
  $56 = (($$lcssa45) - ($55))|0;
  $$0 = $56;
 }
 else if ((label|0) == 33) {
  $81 = $frm;
  $82 = (($$lcssa41) - ($81))|0;
  $$0 = $82;
 }
 else if ((label|0) == 35) {
  $85 = $frm;
  $86 = (($$lcssa) - ($85))|0;
  $$0 = $86;
 }
 else if ((label|0) == 37) {
  $89 = $frm;
  $90 = (($$lcssa42) - ($89))|0;
  $$0 = $90;
 }
 else if ((label|0) == 43) {
  $111 = $frm_nxt$1$lcssa;
  $112 = $frm;
  $113 = (($111) - ($112))|0;
  $$0 = $113;
 }
 return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 L1: do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   do {
    if ($10) {
     HEAP32[$__err>>2] = 4;
     $21 = ($5|0)>(0);
     $22 = ($4>>>0)>(0);
     $23 = ($5|0)==(0);
     $24 = $23 & $22;
     $25 = $21 | $24;
     if ($25) {
      $$0 = 2147483647;
      break L1;
     }
    } else {
     $11 = ($5|0)<(-1);
     $12 = ($4>>>0)<(2147483648);
     $13 = ($5|0)==(-1);
     $14 = $13 & $12;
     $15 = $11 | $14;
     if ($15) {
      HEAP32[$__err>>2] = 4;
      break;
     }
     $16 = ($5|0)>(0);
     $17 = ($4>>>0)>(2147483647);
     $18 = ($5|0)==(0);
     $19 = $18 & $17;
     $20 = $16 | $19;
     if ($20) {
      HEAP32[$__err>>2] = 4;
      $$0 = 2147483647;
      break L1;
     } else {
      $$0 = $4;
      break L1;
     }
    }
   } while(0);
   $$0 = -2147483648;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $18 = 0;$19 = 0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
   $5 = tempRet0;
   $6 = HEAP32[$1>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$1>>2] = $2;
   }
   $8 = HEAP32[$__p2>>2]|0;
   $9 = ($8|0)==($__a_end|0);
   if (!($9)) {
    HEAP32[$__err>>2] = 4;
    $18 = 0;$19 = 0;
    break;
   }
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    tempRet0 = $17;
    STACKTOP = sp;return ($16|0);
   } else {
    $18 = $5;$19 = $4;
   }
  }
 } while(0);
 tempRet0 = $18;
 STACKTOP = sp;return ($19|0);
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(65535);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $18 = $6&65535;
    $$0 = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   $13 = ($7>>>0)>(0);
   $14 = ($6>>>0)>(4294967295);
   $15 = ($7|0)==(0);
   $16 = $15 & $14;
   $17 = $13 | $16;
   $or$cond = $17 | $12;
   if ($or$cond) {
    HEAP32[$__err>>2] = 4;
    $$0 = -1;
    break;
   } else {
    $$0 = $6;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if (!($11)) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $12 = ($8|0)==(34);
   if ($12) {
    HEAP32[$__err>>2] = 4;
    $13 = -1;$14 = -1;
   } else {
    $13 = $7;$14 = $6;
   }
  }
 } while(0);
 tempRet0 = $13;
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   $3 = (__ZNSt3__16__clocEv()|0);
   $4 = (+_strtold_l($__a,$__p2,$3));
   $5 = HEAP32[$1>>2]|0;
   $6 = ($5|0)==(0);
   if ($6) {
    HEAP32[$1>>2] = $2;
   }
   $7 = HEAP32[$__p2>>2]|0;
   $8 = ($7|0)==($__a_end|0);
   if (!($8)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = (($this) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = (($this) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = (($this) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)<($__n>>>0);
 if ($8) {
  $9 = (($this) + 16|0);
  $10 = HEAP32[$this>>2]|0;
  $11 = $10;
  $12 = (($5) - ($11))|0;
  $13 = $12 >> 2;
  $14 = (($13) + ($__n))|0;
  $15 = ($14>>>0)>(1073741823);
  if ($15) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $16 = (($4) - ($11))|0;
  $17 = $16 >> 2;
  $18 = ($17>>>0)<(536870911);
  if ($18) {
   $19 = $16 >> 1;
   $20 = ($19>>>0)<($14>>>0);
   $21 = $20 ? $14 : $19;
   $$0$i = $21;
  } else {
   $$0$i = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i,$13,$9);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($__v,$__n);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = (($__a) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = (($this) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = (($this) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 HEAP32[$0>>2] = $12;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $$pre = HEAP32[$0>>2]|0;
 $$0 = $__n;$1 = $$pre;
 while(1) {
  $2 = ($1|0)==(0|0);
  if ($2) {
   $4 = 0;
  } else {
   HEAP32[$1>>2] = 0;
   $$pre1 = HEAP32[$0>>2]|0;
   $4 = $$pre1;
  }
  $3 = (($4) + 4|0);
  HEAP32[$0>>2] = $3;
  $5 = (($$0) + -1)|0;
  $6 = ($5|0)==(0);
  if ($6) {
   break;
  } else {
   $$0 = $5;$1 = $3;
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = $2;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = HEAP32[$3>>2]|0;
 $9 = (0 - ($7))|0;
 $10 = (($8) + ($9<<2)|0);
 HEAP32[$3>>2] = $10;
 _memcpy(($10|0),($0|0),($6|0))|0;
 $11 = HEAP32[$this>>2]|0;
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $12;
 HEAP32[$3>>2] = $11;
 $13 = (($__v) + 8|0);
 $14 = HEAP32[$1>>2]|0;
 $15 = HEAP32[$13>>2]|0;
 HEAP32[$1>>2] = $15;
 HEAP32[$13>>2] = $14;
 $16 = (($this) + 8|0);
 $17 = (($__v) + 12|0);
 $18 = HEAP32[$16>>2]|0;
 $19 = HEAP32[$17>>2]|0;
 HEAP32[$16>>2] = $19;
 HEAP32[$17>>2] = $18;
 $20 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $20;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = $$pre$i$i$i;
 while(1) {
  $4 = ($3|0)==($1|0);
  if ($4) {
   break;
  }
  $5 = (($3) + -4|0);
  HEAP32[$2>>2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $8 = (($this) + 16|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($6|0);
   if ($10) {
    $11 = (($9) + 112|0);
    HEAP8[$11>>0] = 0;
    break;
   } else {
    __ZdlPv($6);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = (($3) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = (($agg$result) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = (($0) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($condition) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($code) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if ($2) {
  $3 = HEAP32[$code>>2]|0;
  $4 = ($3|0)==($condition|0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror(($ev|0))|0);
 $1 = (_strlen(($0|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $10 = $9;
   } else {
    $6 = (($what_arg) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $10 = $7;
   }
   $11 = ($10|0)==(0);
   if ($11) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,14720)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = (($ec) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = (($14) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   if ($20) {
    $25 = (($0) + 1|0);
    $26 = $18&255;
    $27 = $26 >>> 1;
    $28 = $25;$29 = $27;
   } else {
    $21 = (($0) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($0) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $28 = $22;$29 = $24;
   }
   __THREW__ = 0;
   (invoke_iiii(556,($what_arg|0),($28|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$what_arg+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $34 = (($what_arg) + ($__i$0$i$i<<2)|0);
  HEAP32[$34>>2] = 0;
  $35 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $35;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen(($what_arg|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(557,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(379,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = ((14728 + 8|0));
    $7 = (($this) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((14872|0))|0);
 while(1) {
  $0 = HEAP32[$flag>>2]|0;
  $1 = ($0|0)==(1);
  if (!($1)) {
   break;
  }
  (_pthread_cond_wait((14896|0),(14872|0))|0);
 }
 $2 = HEAP32[$flag>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(558,(14872|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     __THREW__ = 0;
     (invoke_ii(559,(14872|0))|0);
     $8 = __THREW__; __THREW__ = 0;
     $9 = $8&1;
     if (!($9)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(558,(14872|0))|0);
      $10 = __THREW__; __THREW__ = 0;
      $11 = $10&1;
      if (!($11)) {
       __THREW__ = 0;
       (invoke_ii(560,(14896|0))|0);
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if (!($13)) {
        break;
       }
      }
     }
    }
   }
   $14 = ___cxa_find_matching_catch(0|0)|0;
   $15 = tempRet0;
   (___cxa_begin_catch(($14|0))|0);
   __THREW__ = 0;
   (invoke_ii(559,(14872|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(558,(14872|0))|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     __THREW__ = 0;
     (invoke_ii(560,(14896|0))|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      __THREW__ = 0;
      invoke_v(561);
      $22 = __THREW__; __THREW__ = 0;
      $23 = $22&1;
      if (!($23)) {
       // unreachable;
      }
     }
    }
   }
   $24 = ___cxa_find_matching_catch()|0;
   $25 = tempRet0;
   __THREW__ = 0;
   invoke_v(420);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    ___resumeException($24|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((14872|0))|0);
  }
 } while(0);
 return;
}
function runPostSets() {

}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_id(index,a1) {
  index = index|0;
  a1=+a1;
  return FUNCTION_TABLE_id[index&511](+a1)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  FUNCTION_TABLE_viiiiid[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,+a6);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&511](a1|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=+a7;
  FUNCTION_TABLE_viiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,+a7);
}


function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  FUNCTION_TABLE_viiiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&127](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0; }
function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1); }
function b2(p0) { p0 = p0|0; nullFunc_vi(2); }
function _freelocale__wrapper(p0) { p0 = p0|0; _freelocale(p0|0); }
function b3(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(3); }
function b4(p0) { p0 = p0|0; nullFunc_ii(4);return 0; }
function _uselocale__wrapper(p0) { p0 = p0|0; return _uselocale(p0|0)|0; }
function _pthread_mutex_unlock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0; }
function _pthread_mutex_lock__wrapper(p0) { p0 = p0|0; return _pthread_mutex_lock(p0|0)|0; }
function _pthread_cond_broadcast__wrapper(p0) { p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0; }
function b5(p0) { p0 = +p0; nullFunc_id(5);return 0; }
function b6(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(6);return 0; }
function b7(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(7);return 0; }
function _fprintf__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _fprintf(p0|0,p1|0,p2|0)|0; }
function _newlocale__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; return _newlocale(p0|0,p1|0,p2|0)|0; }
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(8); }
function b9(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_viiiiid(9); }
function b10(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_viiiiiiii(10); }
function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(11); }
function b12(p0) { p0 = p0|0; nullFunc_di(12);return +0; }
function b13(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(13); }
function b14(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = +p6; nullFunc_viiiiiid(14); }
function b15(p0,p1,p2,p3,p4,p5,p6,p7,p8) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_viiiiiiiii(15); }
function b16(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(16); }
function b17(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_iii(17);return 0; }
function _printf__wrapper(p0,p1) { p0 = p0|0;p1 = p1|0; return _printf(p0|0,p1|0)|0; }
function b18(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(18);return 0; }
function b19(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(19);return +0; }
function b20() { ; nullFunc_i(20);return 0; }
function ___ctype_b_loc__wrapper() { ; return ___ctype_b_loc()|0; }
function ___ctype_toupper_loc__wrapper() { ; return ___ctype_toupper_loc()|0; }
function ___ctype_tolower_loc__wrapper() { ; return ___ctype_tolower_loc()|0; }
function b21(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(21);return 0; }
function _catgets__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; return _catgets(p0|0,p1|0,p2|0,p3|0)|0; }
function b22(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(22); }
function ___cxa_throw__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0); }
function b23() { ; nullFunc_v(23); }
function ___cxa_pure_virtual__wrapper() { ; ___cxa_pure_virtual(); }
function ___cxa_end_catch__wrapper() { ; ___cxa_end_catch(); }
function ___cxa_rethrow__wrapper() { ; ___cxa_rethrow(); }
function b24(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(24);return 0; }
function b25(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(25); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vi = [b2,__ZN6ikfast14IkSolutionListIdED2Ev,__ZN6ikfast14IkSolutionListIdED0Ev,b2,b2,b2,__ZN6ikfast14IkSolutionListIdE5ClearEv,__ZN6ikfast10IkSolutionIdED2Ev,__ZN6ikfast10IkSolutionIdED0Ev,b2,b2,b2,b2,__ZNK6ikfast10IkSolutionIdE8ValidateEv,b2,__ZN6ikfast14IkSolutionBaseIdED2Ev,__ZN6ikfast14IkSolutionBaseIdED0Ev,b2,b2,__ZN6ikfast18IkSolutionListBaseIdED2Ev,__ZN6ikfast18IkSolutionListBaseIdED0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b2
,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b2,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,b2,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,b2,b2,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,b2,b2,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b2,b2,b2,b2,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,b2,b2,b2,b2,b2,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b2,b2,b2,b2,b2,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b2,b2,b2,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,b2,b2,b2,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2
,b2,b2,b2,b2,b2,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b2,b2,b2,b2,b2
,b2,b2,b2,b2,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b2,b2
,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b2,b2,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b2,b2,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b2,b2,b2,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev
,b2,b2,b2,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,b2,b2,b2,b2
,b2,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b2,b2,b2,b2,b2,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2
,b2,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIdNS_9allocatorIdEEED2Ev
,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEEC2Ev,b2,b2,__ZNSt3__113__vector_baseIdNS_9allocatorIdEEED2Ev,b2,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2Ev,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ev,b2,b2,b2,b2
,__ZNSt3__110unique_ptrINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEENS_22__allocator_destructorINS_9allocatorIS6_EEEEED2Ev,b2,b2,b2,b2,__ZNSt3__113__vector_baseIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEED2Ev,b2,b2,__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev,b2,b2,b2,b2,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEED2Ev,b2,b2,b2,b2,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEED2Ev,b2,b2,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ev,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev
,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b2,b2,b2,__ZNSt3__112__deallocateEPv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE26__invalidate_all_iteratorsEv,__ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv,b2,b2,b2,b2,b2,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_freelocale__wrapper,b2,b2,__ZNSt3__112__do_nothingEPv,b2,__ZNSt3__121__throw_runtime_errorEPKc,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_free,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK6ikfast10IkSolutionIdE18GetSolutionIndicesERNSt3__16vectorIjNS2_9allocatorIjEEEE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv
,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b3,b3,b3,b3,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b3,b3,b3,b3
,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b3,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18messagesIcE8do_closeEi,b3,b3
,b3,b3,__ZNKSt3__18messagesIwE8do_closeEi,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv
,__ZNKSt3__18numpunctIcE12do_falsenameEv,b3,b3,b3,b3,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEEC2Ej,b3,b3,b3,b3,b3,b3,b3
,b3,__ZNSt3__16vectorIdNS_9allocatorIdEEE8allocateEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE18__construct_at_endEj,b3,__ZNSt13runtime_errorC2EPKc,b3,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE9push_backERKS3_,b3,b3,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEj,b3,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbumpEi,b3,b3,__ZNKSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b3,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2Ej,b3,b3,b3,b3,b3,b3
,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEC2Ej,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE8allocateEj,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endEj,b3,__ZNSt3__16vectorIiNS_9allocatorIiEEE8allocateEj,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEj,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE7destroyIS5_EEvRS8_PT_,__ZNSt3__114__split_bufferIdRNS_9allocatorIdEEE18__construct_at_endEj,__ZNSt3__16vectorIdNS_9allocatorIdEEE26__swap_out_circular_bufferERNS_14__split_bufferIdRS2_EE,b3,__ZNKSt3__16vectorIdNS_9allocatorIdEEE17__annotate_shrinkEj,b3,__ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE18__construct_at_endEj,__ZNSt3__16vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE,b3,__ZNKSt3__16vectorIjNS_9allocatorIjEEE17__annotate_shrinkEj,b3,b3,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b3,b3,b3,b3,__ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj,b3
,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE7destroyIdEEvRS2_PT_,b3,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEC2ERKS3_,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE7destroyIjEEvRS2_PT_,b3,b3,b3,b3,__ZNKSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE17__annotate_shrinkEj,b3,__ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEj,b3,b3,b3,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE7destroyIS4_EEvRS5_PT_,b3,b3,b3,b3,b3,b3,b3,_abort_message,b3,b3
,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt11logic_errorC2EPKc,b3,b3,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,b3,__ZNSt3__18ios_base5clearEj,b3,__ZNKSt3__18ios_base6getlocEv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b3,b3,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,b3,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_ii = [b4,b4,b4,b4,b4,__ZNK6ikfast14IkSolutionListIdE15GetNumSolutionsEv,b4,b4,b4,b4,b4,__ZNK6ikfast10IkSolutionIdE7GetFreeEv,__ZNK6ikfast10IkSolutionIdE6GetDOFEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b4,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b4,b4,b4,b4,b4,b4,__ZNKSt9bad_alloc4whatEv
,b4,b4,__ZNKSt11logic_error4whatEv,b4,b4,__ZNKSt13runtime_error4whatEv,b4,b4,b4,b4,__ZNKSt8bad_cast4whatEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__119__iostream_category4nameEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv
,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b4,b4,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b4,b4,b4,b4,b4,b4,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b4,b4,b4
,b4,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv
,b4,b4,b4,b4,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b4,b4,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b4,b4
,b4,b4,b4,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b4
,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b4,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE4pptrEv,__ZNKSt3__115basic_streambufIcNS_11char_traitsIcEEE5pbaseEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv,__ZNKSt3__18ios_base5flagsEv,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv,b4,b4,__ZNKSt3__19nullptr_tcvPT_INS_15basic_streambufIcNS_11char_traitsIcEEEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IN6ikfast23IkSingleDOFSolutionBaseIdEEEEv,b4,__ZNKSt3__19nullptr_tcvPT_IiEEv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__Znwj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_uselocale__wrapper,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,_wcslen,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_id = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z13__DOUBLE_BITSd,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_iiiiiiiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b6,b6
,b6,b6,b6,b6,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_iiii = [b7,b7,b7,__ZN6ikfast14IkSolutionListIdE11AddSolutionERKNSt3__16vectorINS_23IkSingleDOFSolutionBaseIdEENS2_9allocatorIS5_EEEERKNS3_IiNS6_IiEEEE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_sn_write,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b7,b7,b7,b7,b7,b7,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b7,b7,b7,b7,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7
,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b7,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b7,b7,__ZNKSt3__15ctypeIcE9do_narrowEcc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE5do_isEtw,b7,b7,b7,b7,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b7,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b7,b7,__ZNKSt3__15ctypeIwE9do_narrowEwc,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_fprintf__wrapper,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKci,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_do_read,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_newlocale__wrapper,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_wcrtomb,b7,b7,_mbtowc
,_mbrlen,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_vasprintf,b7,b7,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b8,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_viiiiid = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b10,b10,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b10,b10,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10,b10];
var FUNCTION_TABLE_viiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,b11,b11
,b11,b11,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b11
,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b11,b11,b11,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b11,b11,b11,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b11,b11,b11
,b11,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_di = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_atof,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b13,b13,b13,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx
,b13,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b13,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b13,b13,b13,b13,b13,b13,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b13,b13,b13,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiiiiid = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b14,b14,b14,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_viiiiiiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiiiiiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri
,b16,b16,b16,b16,b16,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b16,b16,b16,b16,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b16,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_iii = [b17,b17,b17,b17,__ZNK6ikfast14IkSolutionListIdE11GetSolutionEj,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,b17,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIcE10do_toupperEc,b17,__ZNKSt3__15ctypeIcE10do_tolowerEc,b17,__ZNKSt3__15ctypeIcE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNKSt3__15ctypeIwE10do_toupperEw,b17,__ZNKSt3__15ctypeIwE10do_tolowerEw,b17,__ZNKSt3__15ctypeIwE8do_widenEc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__16vectorIdNS_9allocatorIdEEEixEj,b17,b17,_printf__wrapper,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEixEj,b17,b17,b17,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEEaSERKS6_,__ZNSt3__16vectorIiNS_9allocatorIiEEEaSERKS3_,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__13minIjEERKT_S3_S3_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIdEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIN6ikfast23IkSingleDOFSolutionBaseIdEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_,__ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,__ZNKSt3__16locale9use_facetERNS0_2idE,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,_isxdigit_l,_isdigit_l,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_iiiiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b18,b18,b18,b18,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b18,b18,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b18,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j
,b18,b18,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b18,b18,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,_wcsnrtombs,b18,_mbsnrtowcs,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_diii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_i = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__Z20GetNumFreeParametersv,b20,b20,b20,b20,b20,b20,__Z12GetNumJointsv,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__115__get_nullptr_tEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,___cxa_get_globals_fast,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16__clocEv,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16locale5__imp12make_classicEv,b20,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b20,b20,___ctype_b_loc__wrapper,___ctype_toupper_loc__wrapper,___ctype_tolower_loc__wrapper,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_iiiii = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b21,b21,b21,b21,b21,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__Z9ComputeIkPKdS0_S0_RN6ikfast18IkSolutionListBaseIdEE,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b21,b21,b21,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b21,b21,b21,b21,b21,b21,b21,b21,_mbsrtowcs,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_catgets__wrapper,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,_mbrtowc,b21
,b21,b21,b21,b21,b21,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_viii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast10IkSolutionIdE11GetSolutionEPdPKd,__ZNK6ikfast10IkSolutionIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,__ZNK6ikfast14IkSolutionBaseIdE11GetSolutionERNSt3__16vectorIdNS2_9allocatorIdEEEERKS6_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__114error_category23default_error_conditionEi,b22,b22,__ZNKSt3__119__iostream_category7messageEi,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4setpEPcS4_,b22,b22,b22,b22,b22,___cxa_throw__wrapper,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorINS_11__list_nodeIN6ikfast10IkSolutionIdEEPvEEEEE9constructIS5_S5_EEvRS8_PT_RKT0_,__ZNSt3__14listIN6ikfast10IkSolutionIdEENS_9allocatorIS3_EEE20__link_nodes_at_backEPNS_11__list_nodeIS3_PvEESA_
,b22,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEEC2EPNS_15basic_streambufIcS2_EE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__116allocator_traitsINS_9allocatorIjEEE9constructIjjEEvRS2_PT_RKT0_,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__16vectorIN6ikfast23IkSingleDOFSolutionBaseIdEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_,__ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22];
var FUNCTION_TABLE_v = [b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_pure_virtual__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZL25default_terminate_handlerv,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,___cxa_end_catch__wrapper,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZSt17__throw_bad_allocv,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,___cxa_rethrow__wrapper,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23];
var FUNCTION_TABLE_iiiiiiiii = [b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b24,b24,b24,b24
,b24,b24,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b24,b24,b24,b24,b24,b24,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24];
var FUNCTION_TABLE_viiii = [b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b25,b25,b25
,b25,b25,b25,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b25,b25,b25,b25,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b25,b25
,b25,b25,b25,b25,b25,b25,b25,b25,b25];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_id: dynCall_id, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiid: dynCall_viiiiid, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_di: dynCall_di, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__strlen = asm["_strlen"]; asm["_strlen"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__strlen.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_id = Module["dynCall_id"] = asm["dynCall_id"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[STATIC_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {
    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



